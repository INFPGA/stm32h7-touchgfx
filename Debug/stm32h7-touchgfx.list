
stm32h7-touchgfx.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000002cc  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00026694  080002d0  080002d0  000012d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000022cc  08026964  08026964  00027964  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 00000084  08028c30  08028c30  00029c30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 TextFlashSection 00000014  08028cb4  08028cb4  00029cb4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .ARM          00000008  08028cc8  08028cc8  00029cc8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .init_array   00000014  08028cd0  08028cd0  00029cd0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000008  08028ce4  08028ce4  00029ce4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000fc  24000000  08028cec  0002a000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 TouchGFX_ScratchbufferA 00000100  24000100  08028de8  0002a100  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 10 TouchGFX_ScratchbufferB 00000100  24000200  08028ee8  0002a200  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 11 .bss          00002468  24000300  08028fe8  0002a300  2**2
                  ALLOC
 12 ._user_heap_stack 00000600  24002768  08028fe8  0002a768  2**0
                  ALLOC
 13 ExtFlashSection 00bfef54  90000000  90000000  0002b000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 14 .ARM.attributes 0000002e  00000000  00000000  00c29f54  2**0
                  CONTENTS, READONLY
 15 .debug_info   000981b4  00000000  00000000  00c29f82  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_abbrev 00012223  00000000  00000000  00cc2136  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_aranges 000038b8  00000000  00000000  00cd4360  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_rnglists 0000276d  00000000  00000000  00cd7c18  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_macro  00043c72  00000000  00000000  00cda385  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_line   0004cf06  00000000  00000000  00d1dff7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    0017b3b4  00000000  00000000  00d6aefd  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .comment      000000c2  00000000  00000000  00ee62b1  2**0
                  CONTENTS, READONLY
 23 .debug_frame  0000e624  00000000  00000000  00ee6374  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_line_str 00000069  00000000  00000000  00ef4998  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080002d0 <__do_global_dtors_aux>:
 80002d0:	b510      	push	{r4, lr}
 80002d2:	4c05      	ldr	r4, [pc, #20]	@ (80002e8 <__do_global_dtors_aux+0x18>)
 80002d4:	7823      	ldrb	r3, [r4, #0]
 80002d6:	b933      	cbnz	r3, 80002e6 <__do_global_dtors_aux+0x16>
 80002d8:	4b04      	ldr	r3, [pc, #16]	@ (80002ec <__do_global_dtors_aux+0x1c>)
 80002da:	b113      	cbz	r3, 80002e2 <__do_global_dtors_aux+0x12>
 80002dc:	4804      	ldr	r0, [pc, #16]	@ (80002f0 <__do_global_dtors_aux+0x20>)
 80002de:	f3af 8000 	nop.w
 80002e2:	2301      	movs	r3, #1
 80002e4:	7023      	strb	r3, [r4, #0]
 80002e6:	bd10      	pop	{r4, pc}
 80002e8:	24000300 	.word	0x24000300
 80002ec:	00000000 	.word	0x00000000
 80002f0:	0802694c 	.word	0x0802694c

080002f4 <frame_dummy>:
 80002f4:	b508      	push	{r3, lr}
 80002f6:	4b03      	ldr	r3, [pc, #12]	@ (8000304 <frame_dummy+0x10>)
 80002f8:	b11b      	cbz	r3, 8000302 <frame_dummy+0xe>
 80002fa:	4903      	ldr	r1, [pc, #12]	@ (8000308 <frame_dummy+0x14>)
 80002fc:	4803      	ldr	r0, [pc, #12]	@ (800030c <frame_dummy+0x18>)
 80002fe:	f3af 8000 	nop.w
 8000302:	bd08      	pop	{r3, pc}
 8000304:	00000000 	.word	0x00000000
 8000308:	24000304 	.word	0x24000304
 800030c:	0802694c 	.word	0x0802694c

08000310 <memchr>:
 8000310:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000314:	2a10      	cmp	r2, #16
 8000316:	db2b      	blt.n	8000370 <memchr+0x60>
 8000318:	f010 0f07 	tst.w	r0, #7
 800031c:	d008      	beq.n	8000330 <memchr+0x20>
 800031e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000322:	3a01      	subs	r2, #1
 8000324:	428b      	cmp	r3, r1
 8000326:	d02d      	beq.n	8000384 <memchr+0x74>
 8000328:	f010 0f07 	tst.w	r0, #7
 800032c:	b342      	cbz	r2, 8000380 <memchr+0x70>
 800032e:	d1f6      	bne.n	800031e <memchr+0xe>
 8000330:	b4f0      	push	{r4, r5, r6, r7}
 8000332:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000336:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800033a:	f022 0407 	bic.w	r4, r2, #7
 800033e:	f07f 0700 	mvns.w	r7, #0
 8000342:	2300      	movs	r3, #0
 8000344:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000348:	3c08      	subs	r4, #8
 800034a:	ea85 0501 	eor.w	r5, r5, r1
 800034e:	ea86 0601 	eor.w	r6, r6, r1
 8000352:	fa85 f547 	uadd8	r5, r5, r7
 8000356:	faa3 f587 	sel	r5, r3, r7
 800035a:	fa86 f647 	uadd8	r6, r6, r7
 800035e:	faa5 f687 	sel	r6, r5, r7
 8000362:	b98e      	cbnz	r6, 8000388 <memchr+0x78>
 8000364:	d1ee      	bne.n	8000344 <memchr+0x34>
 8000366:	bcf0      	pop	{r4, r5, r6, r7}
 8000368:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800036c:	f002 0207 	and.w	r2, r2, #7
 8000370:	b132      	cbz	r2, 8000380 <memchr+0x70>
 8000372:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000376:	3a01      	subs	r2, #1
 8000378:	ea83 0301 	eor.w	r3, r3, r1
 800037c:	b113      	cbz	r3, 8000384 <memchr+0x74>
 800037e:	d1f8      	bne.n	8000372 <memchr+0x62>
 8000380:	2000      	movs	r0, #0
 8000382:	4770      	bx	lr
 8000384:	3801      	subs	r0, #1
 8000386:	4770      	bx	lr
 8000388:	2d00      	cmp	r5, #0
 800038a:	bf06      	itte	eq
 800038c:	4635      	moveq	r5, r6
 800038e:	3803      	subeq	r0, #3
 8000390:	3807      	subne	r0, #7
 8000392:	f015 0f01 	tst.w	r5, #1
 8000396:	d107      	bne.n	80003a8 <memchr+0x98>
 8000398:	3001      	adds	r0, #1
 800039a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800039e:	bf02      	ittt	eq
 80003a0:	3001      	addeq	r0, #1
 80003a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80003a6:	3001      	addeq	r0, #1
 80003a8:	bcf0      	pop	{r4, r5, r6, r7}
 80003aa:	3801      	subs	r0, #1
 80003ac:	4770      	bx	lr
 80003ae:	bf00      	nop

080003b0 <__aeabi_uldivmod>:
 80003b0:	b953      	cbnz	r3, 80003c8 <__aeabi_uldivmod+0x18>
 80003b2:	b94a      	cbnz	r2, 80003c8 <__aeabi_uldivmod+0x18>
 80003b4:	2900      	cmp	r1, #0
 80003b6:	bf08      	it	eq
 80003b8:	2800      	cmpeq	r0, #0
 80003ba:	bf1c      	itt	ne
 80003bc:	f04f 31ff 	movne.w	r1, #4294967295
 80003c0:	f04f 30ff 	movne.w	r0, #4294967295
 80003c4:	f000 b96a 	b.w	800069c <__aeabi_idiv0>
 80003c8:	f1ad 0c08 	sub.w	ip, sp, #8
 80003cc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80003d0:	f000 f806 	bl	80003e0 <__udivmoddi4>
 80003d4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80003d8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80003dc:	b004      	add	sp, #16
 80003de:	4770      	bx	lr

080003e0 <__udivmoddi4>:
 80003e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80003e4:	9d08      	ldr	r5, [sp, #32]
 80003e6:	460c      	mov	r4, r1
 80003e8:	2b00      	cmp	r3, #0
 80003ea:	d14e      	bne.n	800048a <__udivmoddi4+0xaa>
 80003ec:	4694      	mov	ip, r2
 80003ee:	458c      	cmp	ip, r1
 80003f0:	4686      	mov	lr, r0
 80003f2:	fab2 f282 	clz	r2, r2
 80003f6:	d962      	bls.n	80004be <__udivmoddi4+0xde>
 80003f8:	b14a      	cbz	r2, 800040e <__udivmoddi4+0x2e>
 80003fa:	f1c2 0320 	rsb	r3, r2, #32
 80003fe:	4091      	lsls	r1, r2
 8000400:	fa20 f303 	lsr.w	r3, r0, r3
 8000404:	fa0c fc02 	lsl.w	ip, ip, r2
 8000408:	4319      	orrs	r1, r3
 800040a:	fa00 fe02 	lsl.w	lr, r0, r2
 800040e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000412:	fa1f f68c 	uxth.w	r6, ip
 8000416:	fbb1 f4f7 	udiv	r4, r1, r7
 800041a:	ea4f 431e 	mov.w	r3, lr, lsr #16
 800041e:	fb07 1114 	mls	r1, r7, r4, r1
 8000422:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000426:	fb04 f106 	mul.w	r1, r4, r6
 800042a:	4299      	cmp	r1, r3
 800042c:	d90a      	bls.n	8000444 <__udivmoddi4+0x64>
 800042e:	eb1c 0303 	adds.w	r3, ip, r3
 8000432:	f104 30ff 	add.w	r0, r4, #4294967295
 8000436:	f080 8112 	bcs.w	800065e <__udivmoddi4+0x27e>
 800043a:	4299      	cmp	r1, r3
 800043c:	f240 810f 	bls.w	800065e <__udivmoddi4+0x27e>
 8000440:	3c02      	subs	r4, #2
 8000442:	4463      	add	r3, ip
 8000444:	1a59      	subs	r1, r3, r1
 8000446:	fa1f f38e 	uxth.w	r3, lr
 800044a:	fbb1 f0f7 	udiv	r0, r1, r7
 800044e:	fb07 1110 	mls	r1, r7, r0, r1
 8000452:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000456:	fb00 f606 	mul.w	r6, r0, r6
 800045a:	429e      	cmp	r6, r3
 800045c:	d90a      	bls.n	8000474 <__udivmoddi4+0x94>
 800045e:	eb1c 0303 	adds.w	r3, ip, r3
 8000462:	f100 31ff 	add.w	r1, r0, #4294967295
 8000466:	f080 80fc 	bcs.w	8000662 <__udivmoddi4+0x282>
 800046a:	429e      	cmp	r6, r3
 800046c:	f240 80f9 	bls.w	8000662 <__udivmoddi4+0x282>
 8000470:	4463      	add	r3, ip
 8000472:	3802      	subs	r0, #2
 8000474:	1b9b      	subs	r3, r3, r6
 8000476:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 800047a:	2100      	movs	r1, #0
 800047c:	b11d      	cbz	r5, 8000486 <__udivmoddi4+0xa6>
 800047e:	40d3      	lsrs	r3, r2
 8000480:	2200      	movs	r2, #0
 8000482:	e9c5 3200 	strd	r3, r2, [r5]
 8000486:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800048a:	428b      	cmp	r3, r1
 800048c:	d905      	bls.n	800049a <__udivmoddi4+0xba>
 800048e:	b10d      	cbz	r5, 8000494 <__udivmoddi4+0xb4>
 8000490:	e9c5 0100 	strd	r0, r1, [r5]
 8000494:	2100      	movs	r1, #0
 8000496:	4608      	mov	r0, r1
 8000498:	e7f5      	b.n	8000486 <__udivmoddi4+0xa6>
 800049a:	fab3 f183 	clz	r1, r3
 800049e:	2900      	cmp	r1, #0
 80004a0:	d146      	bne.n	8000530 <__udivmoddi4+0x150>
 80004a2:	42a3      	cmp	r3, r4
 80004a4:	d302      	bcc.n	80004ac <__udivmoddi4+0xcc>
 80004a6:	4290      	cmp	r0, r2
 80004a8:	f0c0 80f0 	bcc.w	800068c <__udivmoddi4+0x2ac>
 80004ac:	1a86      	subs	r6, r0, r2
 80004ae:	eb64 0303 	sbc.w	r3, r4, r3
 80004b2:	2001      	movs	r0, #1
 80004b4:	2d00      	cmp	r5, #0
 80004b6:	d0e6      	beq.n	8000486 <__udivmoddi4+0xa6>
 80004b8:	e9c5 6300 	strd	r6, r3, [r5]
 80004bc:	e7e3      	b.n	8000486 <__udivmoddi4+0xa6>
 80004be:	2a00      	cmp	r2, #0
 80004c0:	f040 8090 	bne.w	80005e4 <__udivmoddi4+0x204>
 80004c4:	eba1 040c 	sub.w	r4, r1, ip
 80004c8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80004cc:	fa1f f78c 	uxth.w	r7, ip
 80004d0:	2101      	movs	r1, #1
 80004d2:	fbb4 f6f8 	udiv	r6, r4, r8
 80004d6:	ea4f 431e 	mov.w	r3, lr, lsr #16
 80004da:	fb08 4416 	mls	r4, r8, r6, r4
 80004de:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 80004e2:	fb07 f006 	mul.w	r0, r7, r6
 80004e6:	4298      	cmp	r0, r3
 80004e8:	d908      	bls.n	80004fc <__udivmoddi4+0x11c>
 80004ea:	eb1c 0303 	adds.w	r3, ip, r3
 80004ee:	f106 34ff 	add.w	r4, r6, #4294967295
 80004f2:	d202      	bcs.n	80004fa <__udivmoddi4+0x11a>
 80004f4:	4298      	cmp	r0, r3
 80004f6:	f200 80cd 	bhi.w	8000694 <__udivmoddi4+0x2b4>
 80004fa:	4626      	mov	r6, r4
 80004fc:	1a1c      	subs	r4, r3, r0
 80004fe:	fa1f f38e 	uxth.w	r3, lr
 8000502:	fbb4 f0f8 	udiv	r0, r4, r8
 8000506:	fb08 4410 	mls	r4, r8, r0, r4
 800050a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 800050e:	fb00 f707 	mul.w	r7, r0, r7
 8000512:	429f      	cmp	r7, r3
 8000514:	d908      	bls.n	8000528 <__udivmoddi4+0x148>
 8000516:	eb1c 0303 	adds.w	r3, ip, r3
 800051a:	f100 34ff 	add.w	r4, r0, #4294967295
 800051e:	d202      	bcs.n	8000526 <__udivmoddi4+0x146>
 8000520:	429f      	cmp	r7, r3
 8000522:	f200 80b0 	bhi.w	8000686 <__udivmoddi4+0x2a6>
 8000526:	4620      	mov	r0, r4
 8000528:	1bdb      	subs	r3, r3, r7
 800052a:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 800052e:	e7a5      	b.n	800047c <__udivmoddi4+0x9c>
 8000530:	f1c1 0620 	rsb	r6, r1, #32
 8000534:	408b      	lsls	r3, r1
 8000536:	fa22 f706 	lsr.w	r7, r2, r6
 800053a:	431f      	orrs	r7, r3
 800053c:	fa20 fc06 	lsr.w	ip, r0, r6
 8000540:	fa04 f301 	lsl.w	r3, r4, r1
 8000544:	ea43 030c 	orr.w	r3, r3, ip
 8000548:	40f4      	lsrs	r4, r6
 800054a:	fa00 f801 	lsl.w	r8, r0, r1
 800054e:	0c38      	lsrs	r0, r7, #16
 8000550:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000554:	fbb4 fef0 	udiv	lr, r4, r0
 8000558:	fa1f fc87 	uxth.w	ip, r7
 800055c:	fb00 441e 	mls	r4, r0, lr, r4
 8000560:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000564:	fb0e f90c 	mul.w	r9, lr, ip
 8000568:	45a1      	cmp	r9, r4
 800056a:	fa02 f201 	lsl.w	r2, r2, r1
 800056e:	d90a      	bls.n	8000586 <__udivmoddi4+0x1a6>
 8000570:	193c      	adds	r4, r7, r4
 8000572:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000576:	f080 8084 	bcs.w	8000682 <__udivmoddi4+0x2a2>
 800057a:	45a1      	cmp	r9, r4
 800057c:	f240 8081 	bls.w	8000682 <__udivmoddi4+0x2a2>
 8000580:	f1ae 0e02 	sub.w	lr, lr, #2
 8000584:	443c      	add	r4, r7
 8000586:	eba4 0409 	sub.w	r4, r4, r9
 800058a:	fa1f f983 	uxth.w	r9, r3
 800058e:	fbb4 f3f0 	udiv	r3, r4, r0
 8000592:	fb00 4413 	mls	r4, r0, r3, r4
 8000596:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 800059a:	fb03 fc0c 	mul.w	ip, r3, ip
 800059e:	45a4      	cmp	ip, r4
 80005a0:	d907      	bls.n	80005b2 <__udivmoddi4+0x1d2>
 80005a2:	193c      	adds	r4, r7, r4
 80005a4:	f103 30ff 	add.w	r0, r3, #4294967295
 80005a8:	d267      	bcs.n	800067a <__udivmoddi4+0x29a>
 80005aa:	45a4      	cmp	ip, r4
 80005ac:	d965      	bls.n	800067a <__udivmoddi4+0x29a>
 80005ae:	3b02      	subs	r3, #2
 80005b0:	443c      	add	r4, r7
 80005b2:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 80005b6:	fba0 9302 	umull	r9, r3, r0, r2
 80005ba:	eba4 040c 	sub.w	r4, r4, ip
 80005be:	429c      	cmp	r4, r3
 80005c0:	46ce      	mov	lr, r9
 80005c2:	469c      	mov	ip, r3
 80005c4:	d351      	bcc.n	800066a <__udivmoddi4+0x28a>
 80005c6:	d04e      	beq.n	8000666 <__udivmoddi4+0x286>
 80005c8:	b155      	cbz	r5, 80005e0 <__udivmoddi4+0x200>
 80005ca:	ebb8 030e 	subs.w	r3, r8, lr
 80005ce:	eb64 040c 	sbc.w	r4, r4, ip
 80005d2:	fa04 f606 	lsl.w	r6, r4, r6
 80005d6:	40cb      	lsrs	r3, r1
 80005d8:	431e      	orrs	r6, r3
 80005da:	40cc      	lsrs	r4, r1
 80005dc:	e9c5 6400 	strd	r6, r4, [r5]
 80005e0:	2100      	movs	r1, #0
 80005e2:	e750      	b.n	8000486 <__udivmoddi4+0xa6>
 80005e4:	f1c2 0320 	rsb	r3, r2, #32
 80005e8:	fa20 f103 	lsr.w	r1, r0, r3
 80005ec:	fa0c fc02 	lsl.w	ip, ip, r2
 80005f0:	fa24 f303 	lsr.w	r3, r4, r3
 80005f4:	4094      	lsls	r4, r2
 80005f6:	430c      	orrs	r4, r1
 80005f8:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80005fc:	fa00 fe02 	lsl.w	lr, r0, r2
 8000600:	fa1f f78c 	uxth.w	r7, ip
 8000604:	fbb3 f0f8 	udiv	r0, r3, r8
 8000608:	fb08 3110 	mls	r1, r8, r0, r3
 800060c:	0c23      	lsrs	r3, r4, #16
 800060e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000612:	fb00 f107 	mul.w	r1, r0, r7
 8000616:	4299      	cmp	r1, r3
 8000618:	d908      	bls.n	800062c <__udivmoddi4+0x24c>
 800061a:	eb1c 0303 	adds.w	r3, ip, r3
 800061e:	f100 36ff 	add.w	r6, r0, #4294967295
 8000622:	d22c      	bcs.n	800067e <__udivmoddi4+0x29e>
 8000624:	4299      	cmp	r1, r3
 8000626:	d92a      	bls.n	800067e <__udivmoddi4+0x29e>
 8000628:	3802      	subs	r0, #2
 800062a:	4463      	add	r3, ip
 800062c:	1a5b      	subs	r3, r3, r1
 800062e:	b2a4      	uxth	r4, r4
 8000630:	fbb3 f1f8 	udiv	r1, r3, r8
 8000634:	fb08 3311 	mls	r3, r8, r1, r3
 8000638:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 800063c:	fb01 f307 	mul.w	r3, r1, r7
 8000640:	42a3      	cmp	r3, r4
 8000642:	d908      	bls.n	8000656 <__udivmoddi4+0x276>
 8000644:	eb1c 0404 	adds.w	r4, ip, r4
 8000648:	f101 36ff 	add.w	r6, r1, #4294967295
 800064c:	d213      	bcs.n	8000676 <__udivmoddi4+0x296>
 800064e:	42a3      	cmp	r3, r4
 8000650:	d911      	bls.n	8000676 <__udivmoddi4+0x296>
 8000652:	3902      	subs	r1, #2
 8000654:	4464      	add	r4, ip
 8000656:	1ae4      	subs	r4, r4, r3
 8000658:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 800065c:	e739      	b.n	80004d2 <__udivmoddi4+0xf2>
 800065e:	4604      	mov	r4, r0
 8000660:	e6f0      	b.n	8000444 <__udivmoddi4+0x64>
 8000662:	4608      	mov	r0, r1
 8000664:	e706      	b.n	8000474 <__udivmoddi4+0x94>
 8000666:	45c8      	cmp	r8, r9
 8000668:	d2ae      	bcs.n	80005c8 <__udivmoddi4+0x1e8>
 800066a:	ebb9 0e02 	subs.w	lr, r9, r2
 800066e:	eb63 0c07 	sbc.w	ip, r3, r7
 8000672:	3801      	subs	r0, #1
 8000674:	e7a8      	b.n	80005c8 <__udivmoddi4+0x1e8>
 8000676:	4631      	mov	r1, r6
 8000678:	e7ed      	b.n	8000656 <__udivmoddi4+0x276>
 800067a:	4603      	mov	r3, r0
 800067c:	e799      	b.n	80005b2 <__udivmoddi4+0x1d2>
 800067e:	4630      	mov	r0, r6
 8000680:	e7d4      	b.n	800062c <__udivmoddi4+0x24c>
 8000682:	46d6      	mov	lr, sl
 8000684:	e77f      	b.n	8000586 <__udivmoddi4+0x1a6>
 8000686:	4463      	add	r3, ip
 8000688:	3802      	subs	r0, #2
 800068a:	e74d      	b.n	8000528 <__udivmoddi4+0x148>
 800068c:	4606      	mov	r6, r0
 800068e:	4623      	mov	r3, r4
 8000690:	4608      	mov	r0, r1
 8000692:	e70f      	b.n	80004b4 <__udivmoddi4+0xd4>
 8000694:	3e02      	subs	r6, #2
 8000696:	4463      	add	r3, ip
 8000698:	e730      	b.n	80004fc <__udivmoddi4+0x11c>
 800069a:	bf00      	nop

0800069c <__aeabi_idiv0>:
 800069c:	4770      	bx	lr
 800069e:	bf00      	nop

080006a0 <MX_CRC_Init>:

CRC_HandleTypeDef hcrc;

/* CRC init function */
void MX_CRC_Init(void)
{
 80006a0:	b580      	push	{r7, lr}
 80006a2:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 80006a4:	4b0d      	ldr	r3, [pc, #52]	@ (80006dc <MX_CRC_Init+0x3c>)
 80006a6:	4a0e      	ldr	r2, [pc, #56]	@ (80006e0 <MX_CRC_Init+0x40>)
 80006a8:	601a      	str	r2, [r3, #0]
  hcrc.Init.DefaultPolynomialUse = DEFAULT_POLYNOMIAL_ENABLE;
 80006aa:	4b0c      	ldr	r3, [pc, #48]	@ (80006dc <MX_CRC_Init+0x3c>)
 80006ac:	2200      	movs	r2, #0
 80006ae:	711a      	strb	r2, [r3, #4]
  hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 80006b0:	4b0a      	ldr	r3, [pc, #40]	@ (80006dc <MX_CRC_Init+0x3c>)
 80006b2:	2200      	movs	r2, #0
 80006b4:	715a      	strb	r2, [r3, #5]
  hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 80006b6:	4b09      	ldr	r3, [pc, #36]	@ (80006dc <MX_CRC_Init+0x3c>)
 80006b8:	2200      	movs	r2, #0
 80006ba:	615a      	str	r2, [r3, #20]
  hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 80006bc:	4b07      	ldr	r3, [pc, #28]	@ (80006dc <MX_CRC_Init+0x3c>)
 80006be:	2200      	movs	r2, #0
 80006c0:	619a      	str	r2, [r3, #24]
  hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 80006c2:	4b06      	ldr	r3, [pc, #24]	@ (80006dc <MX_CRC_Init+0x3c>)
 80006c4:	2201      	movs	r2, #1
 80006c6:	621a      	str	r2, [r3, #32]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80006c8:	4804      	ldr	r0, [pc, #16]	@ (80006dc <MX_CRC_Init+0x3c>)
 80006ca:	f002 fe99 	bl	8003400 <HAL_CRC_Init>
 80006ce:	4603      	mov	r3, r0
 80006d0:	2b00      	cmp	r3, #0
 80006d2:	d001      	beq.n	80006d8 <MX_CRC_Init+0x38>
  {
    Error_Handler();
 80006d4:	f000 fe36 	bl	8001344 <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 80006d8:	bf00      	nop
 80006da:	bd80      	pop	{r7, pc}
 80006dc:	2400031c 	.word	0x2400031c
 80006e0:	58024c00 	.word	0x58024c00

080006e4 <HAL_CRC_MspInit>:

void HAL_CRC_MspInit(CRC_HandleTypeDef* crcHandle)
{
 80006e4:	b480      	push	{r7}
 80006e6:	b085      	sub	sp, #20
 80006e8:	af00      	add	r7, sp, #0
 80006ea:	6078      	str	r0, [r7, #4]

  if(crcHandle->Instance==CRC)
 80006ec:	687b      	ldr	r3, [r7, #4]
 80006ee:	681b      	ldr	r3, [r3, #0]
 80006f0:	4a0b      	ldr	r2, [pc, #44]	@ (8000720 <HAL_CRC_MspInit+0x3c>)
 80006f2:	4293      	cmp	r3, r2
 80006f4:	d10e      	bne.n	8000714 <HAL_CRC_MspInit+0x30>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* CRC clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80006f6:	4b0b      	ldr	r3, [pc, #44]	@ (8000724 <HAL_CRC_MspInit+0x40>)
 80006f8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80006fc:	4a09      	ldr	r2, [pc, #36]	@ (8000724 <HAL_CRC_MspInit+0x40>)
 80006fe:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 8000702:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8000706:	4b07      	ldr	r3, [pc, #28]	@ (8000724 <HAL_CRC_MspInit+0x40>)
 8000708:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 800070c:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8000710:	60fb      	str	r3, [r7, #12]
 8000712:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }
}
 8000714:	bf00      	nop
 8000716:	3714      	adds	r7, #20
 8000718:	46bd      	mov	sp, r7
 800071a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800071e:	4770      	bx	lr
 8000720:	58024c00 	.word	0x58024c00
 8000724:	58024400 	.word	0x58024400

08000728 <MX_DMA2D_Init>:

DMA2D_HandleTypeDef hdma2d;

/* DMA2D init function */
void MX_DMA2D_Init(void)
{
 8000728:	b580      	push	{r7, lr}
 800072a:	af00      	add	r7, sp, #0
  /* USER CODE END DMA2D_Init 0 */

  /* USER CODE BEGIN DMA2D_Init 1 */

  /* USER CODE END DMA2D_Init 1 */
  hdma2d.Instance = DMA2D;
 800072c:	4b19      	ldr	r3, [pc, #100]	@ (8000794 <MX_DMA2D_Init+0x6c>)
 800072e:	4a1a      	ldr	r2, [pc, #104]	@ (8000798 <MX_DMA2D_Init+0x70>)
 8000730:	601a      	str	r2, [r3, #0]
  hdma2d.Init.Mode = DMA2D_M2M;
 8000732:	4b18      	ldr	r3, [pc, #96]	@ (8000794 <MX_DMA2D_Init+0x6c>)
 8000734:	2200      	movs	r2, #0
 8000736:	605a      	str	r2, [r3, #4]
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_ARGB8888;
 8000738:	4b16      	ldr	r3, [pc, #88]	@ (8000794 <MX_DMA2D_Init+0x6c>)
 800073a:	2200      	movs	r2, #0
 800073c:	609a      	str	r2, [r3, #8]
  hdma2d.Init.OutputOffset = 0;
 800073e:	4b15      	ldr	r3, [pc, #84]	@ (8000794 <MX_DMA2D_Init+0x6c>)
 8000740:	2200      	movs	r2, #0
 8000742:	60da      	str	r2, [r3, #12]
  hdma2d.LayerCfg[1].InputOffset = 0;
 8000744:	4b13      	ldr	r3, [pc, #76]	@ (8000794 <MX_DMA2D_Init+0x6c>)
 8000746:	2200      	movs	r2, #0
 8000748:	645a      	str	r2, [r3, #68]	@ 0x44
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 800074a:	4b12      	ldr	r3, [pc, #72]	@ (8000794 <MX_DMA2D_Init+0x6c>)
 800074c:	2200      	movs	r2, #0
 800074e:	649a      	str	r2, [r3, #72]	@ 0x48
  hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 8000750:	4b10      	ldr	r3, [pc, #64]	@ (8000794 <MX_DMA2D_Init+0x6c>)
 8000752:	2200      	movs	r2, #0
 8000754:	64da      	str	r2, [r3, #76]	@ 0x4c
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8000756:	4b0f      	ldr	r3, [pc, #60]	@ (8000794 <MX_DMA2D_Init+0x6c>)
 8000758:	2200      	movs	r2, #0
 800075a:	651a      	str	r2, [r3, #80]	@ 0x50
  hdma2d.LayerCfg[1].AlphaInverted = DMA2D_REGULAR_ALPHA;
 800075c:	4b0d      	ldr	r3, [pc, #52]	@ (8000794 <MX_DMA2D_Init+0x6c>)
 800075e:	2200      	movs	r2, #0
 8000760:	655a      	str	r2, [r3, #84]	@ 0x54
  hdma2d.LayerCfg[1].RedBlueSwap = DMA2D_RB_REGULAR;
 8000762:	4b0c      	ldr	r3, [pc, #48]	@ (8000794 <MX_DMA2D_Init+0x6c>)
 8000764:	2200      	movs	r2, #0
 8000766:	659a      	str	r2, [r3, #88]	@ 0x58
  hdma2d.LayerCfg[1].ChromaSubSampling = DMA2D_NO_CSS;
 8000768:	4b0a      	ldr	r3, [pc, #40]	@ (8000794 <MX_DMA2D_Init+0x6c>)
 800076a:	2200      	movs	r2, #0
 800076c:	65da      	str	r2, [r3, #92]	@ 0x5c
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800076e:	4809      	ldr	r0, [pc, #36]	@ (8000794 <MX_DMA2D_Init+0x6c>)
 8000770:	f002 ff38 	bl	80035e4 <HAL_DMA2D_Init>
 8000774:	4603      	mov	r3, r0
 8000776:	2b00      	cmp	r3, #0
 8000778:	d001      	beq.n	800077e <MX_DMA2D_Init+0x56>
  {
    Error_Handler();
 800077a:	f000 fde3 	bl	8001344 <Error_Handler>
  }
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 800077e:	2101      	movs	r1, #1
 8000780:	4804      	ldr	r0, [pc, #16]	@ (8000794 <MX_DMA2D_Init+0x6c>)
 8000782:	f002 ff93 	bl	80036ac <HAL_DMA2D_ConfigLayer>
 8000786:	4603      	mov	r3, r0
 8000788:	2b00      	cmp	r3, #0
 800078a:	d001      	beq.n	8000790 <MX_DMA2D_Init+0x68>
  {
    Error_Handler();
 800078c:	f000 fdda 	bl	8001344 <Error_Handler>
  }
  /* USER CODE BEGIN DMA2D_Init 2 */

  /* USER CODE END DMA2D_Init 2 */

}
 8000790:	bf00      	nop
 8000792:	bd80      	pop	{r7, pc}
 8000794:	24000340 	.word	0x24000340
 8000798:	52001000 	.word	0x52001000

0800079c <HAL_DMA2D_MspInit>:

void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* dma2dHandle)
{
 800079c:	b480      	push	{r7}
 800079e:	b085      	sub	sp, #20
 80007a0:	af00      	add	r7, sp, #0
 80007a2:	6078      	str	r0, [r7, #4]

  if(dma2dHandle->Instance==DMA2D)
 80007a4:	687b      	ldr	r3, [r7, #4]
 80007a6:	681b      	ldr	r3, [r3, #0]
 80007a8:	4a0b      	ldr	r2, [pc, #44]	@ (80007d8 <HAL_DMA2D_MspInit+0x3c>)
 80007aa:	4293      	cmp	r3, r2
 80007ac:	d10e      	bne.n	80007cc <HAL_DMA2D_MspInit+0x30>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* DMA2D clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80007ae:	4b0b      	ldr	r3, [pc, #44]	@ (80007dc <HAL_DMA2D_MspInit+0x40>)
 80007b0:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 80007b4:	4a09      	ldr	r2, [pc, #36]	@ (80007dc <HAL_DMA2D_MspInit+0x40>)
 80007b6:	f043 0310 	orr.w	r3, r3, #16
 80007ba:	f8c2 30d4 	str.w	r3, [r2, #212]	@ 0xd4
 80007be:	4b07      	ldr	r3, [pc, #28]	@ (80007dc <HAL_DMA2D_MspInit+0x40>)
 80007c0:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 80007c4:	f003 0310 	and.w	r3, r3, #16
 80007c8:	60fb      	str	r3, [r7, #12]
 80007ca:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }
}
 80007cc:	bf00      	nop
 80007ce:	3714      	adds	r7, #20
 80007d0:	46bd      	mov	sp, r7
 80007d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007d6:	4770      	bx	lr
 80007d8:	52001000 	.word	0x52001000
 80007dc:	58024400 	.word	0x58024400

080007e0 <MX_FMC_Init>:

SDRAM_HandleTypeDef hsdram1;

/* FMC initialization function */
void MX_FMC_Init(void)
{
 80007e0:	b580      	push	{r7, lr}
 80007e2:	b088      	sub	sp, #32
 80007e4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN FMC_Init 0 */

  /* USER CODE END FMC_Init 0 */

  FMC_SDRAM_TimingTypeDef SdramTiming = {0};
 80007e6:	1d3b      	adds	r3, r7, #4
 80007e8:	2200      	movs	r2, #0
 80007ea:	601a      	str	r2, [r3, #0]
 80007ec:	605a      	str	r2, [r3, #4]
 80007ee:	609a      	str	r2, [r3, #8]
 80007f0:	60da      	str	r2, [r3, #12]
 80007f2:	611a      	str	r2, [r3, #16]
 80007f4:	615a      	str	r2, [r3, #20]
 80007f6:	619a      	str	r2, [r3, #24]

  /* USER CODE END FMC_Init 1 */

  /** Perform the SDRAM1 memory initialization sequence
  */
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80007f8:	4b1f      	ldr	r3, [pc, #124]	@ (8000878 <MX_FMC_Init+0x98>)
 80007fa:	4a20      	ldr	r2, [pc, #128]	@ (800087c <MX_FMC_Init+0x9c>)
 80007fc:	601a      	str	r2, [r3, #0]
  /* hsdram1.Init */
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 80007fe:	4b1e      	ldr	r3, [pc, #120]	@ (8000878 <MX_FMC_Init+0x98>)
 8000800:	2200      	movs	r2, #0
 8000802:	605a      	str	r2, [r3, #4]
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_9;
 8000804:	4b1c      	ldr	r3, [pc, #112]	@ (8000878 <MX_FMC_Init+0x98>)
 8000806:	2201      	movs	r2, #1
 8000808:	609a      	str	r2, [r3, #8]
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_13;
 800080a:	4b1b      	ldr	r3, [pc, #108]	@ (8000878 <MX_FMC_Init+0x98>)
 800080c:	2208      	movs	r2, #8
 800080e:	60da      	str	r2, [r3, #12]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8000810:	4b19      	ldr	r3, [pc, #100]	@ (8000878 <MX_FMC_Init+0x98>)
 8000812:	2210      	movs	r2, #16
 8000814:	611a      	str	r2, [r3, #16]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8000816:	4b18      	ldr	r3, [pc, #96]	@ (8000878 <MX_FMC_Init+0x98>)
 8000818:	2240      	movs	r2, #64	@ 0x40
 800081a:	615a      	str	r2, [r3, #20]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_2;
 800081c:	4b16      	ldr	r3, [pc, #88]	@ (8000878 <MX_FMC_Init+0x98>)
 800081e:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8000822:	619a      	str	r2, [r3, #24]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8000824:	4b14      	ldr	r3, [pc, #80]	@ (8000878 <MX_FMC_Init+0x98>)
 8000826:	2200      	movs	r2, #0
 8000828:	61da      	str	r2, [r3, #28]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_3;
 800082a:	4b13      	ldr	r3, [pc, #76]	@ (8000878 <MX_FMC_Init+0x98>)
 800082c:	f44f 6240 	mov.w	r2, #3072	@ 0xc00
 8000830:	621a      	str	r2, [r3, #32]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 8000832:	4b11      	ldr	r3, [pc, #68]	@ (8000878 <MX_FMC_Init+0x98>)
 8000834:	f44f 5280 	mov.w	r2, #4096	@ 0x1000
 8000838:	625a      	str	r2, [r3, #36]	@ 0x24
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
 800083a:	4b0f      	ldr	r3, [pc, #60]	@ (8000878 <MX_FMC_Init+0x98>)
 800083c:	2200      	movs	r2, #0
 800083e:	629a      	str	r2, [r3, #40]	@ 0x28
  /* SdramTiming */
  SdramTiming.LoadToActiveDelay = 2;
 8000840:	2302      	movs	r3, #2
 8000842:	607b      	str	r3, [r7, #4]
  SdramTiming.ExitSelfRefreshDelay = 7;
 8000844:	2307      	movs	r3, #7
 8000846:	60bb      	str	r3, [r7, #8]
  SdramTiming.SelfRefreshTime = 4;
 8000848:	2304      	movs	r3, #4
 800084a:	60fb      	str	r3, [r7, #12]
  SdramTiming.RowCycleDelay = 6;
 800084c:	2306      	movs	r3, #6
 800084e:	613b      	str	r3, [r7, #16]
  SdramTiming.WriteRecoveryTime = 2;
 8000850:	2302      	movs	r3, #2
 8000852:	617b      	str	r3, [r7, #20]
  SdramTiming.RPDelay = 2;
 8000854:	2302      	movs	r3, #2
 8000856:	61bb      	str	r3, [r7, #24]
  SdramTiming.RCDDelay = 2;
 8000858:	2302      	movs	r3, #2
 800085a:	61fb      	str	r3, [r7, #28]

  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800085c:	1d3b      	adds	r3, r7, #4
 800085e:	4619      	mov	r1, r3
 8000860:	4805      	ldr	r0, [pc, #20]	@ (8000878 <MX_FMC_Init+0x98>)
 8000862:	f008 fe53 	bl	800950c <HAL_SDRAM_Init>
 8000866:	4603      	mov	r3, r0
 8000868:	2b00      	cmp	r3, #0
 800086a:	d001      	beq.n	8000870 <MX_FMC_Init+0x90>
  {
    Error_Handler( );
 800086c:	f000 fd6a 	bl	8001344 <Error_Handler>
  }

  /* USER CODE BEGIN FMC_Init 2 */

  /* USER CODE END FMC_Init 2 */
}
 8000870:	bf00      	nop
 8000872:	3720      	adds	r7, #32
 8000874:	46bd      	mov	sp, r7
 8000876:	bd80      	pop	{r7, pc}
 8000878:	240003a8 	.word	0x240003a8
 800087c:	52004140 	.word	0x52004140

08000880 <HAL_FMC_MspInit>:

static uint32_t FMC_Initialized = 0;

static void HAL_FMC_MspInit(void){
 8000880:	b580      	push	{r7, lr}
 8000882:	b0b6      	sub	sp, #216	@ 0xd8
 8000884:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000886:	f107 03c4 	add.w	r3, r7, #196	@ 0xc4
 800088a:	2200      	movs	r2, #0
 800088c:	601a      	str	r2, [r3, #0]
 800088e:	605a      	str	r2, [r3, #4]
 8000890:	609a      	str	r2, [r3, #8]
 8000892:	60da      	str	r2, [r3, #12]
 8000894:	611a      	str	r2, [r3, #16]
  if (FMC_Initialized) {
 8000896:	4b51      	ldr	r3, [pc, #324]	@ (80009dc <HAL_FMC_MspInit+0x15c>)
 8000898:	681b      	ldr	r3, [r3, #0]
 800089a:	2b00      	cmp	r3, #0
 800089c:	f040 8099 	bne.w	80009d2 <HAL_FMC_MspInit+0x152>
    return;
  }
  FMC_Initialized = 1;
 80008a0:	4b4e      	ldr	r3, [pc, #312]	@ (80009dc <HAL_FMC_MspInit+0x15c>)
 80008a2:	2201      	movs	r2, #1
 80008a4:	601a      	str	r2, [r3, #0]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80008a6:	f107 0308 	add.w	r3, r7, #8
 80008aa:	22b8      	movs	r2, #184	@ 0xb8
 80008ac:	2100      	movs	r1, #0
 80008ae:	4618      	mov	r0, r3
 80008b0:	f025 fac8 	bl	8025e44 <memset>

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_FMC;
 80008b4:	f04f 7280 	mov.w	r2, #16777216	@ 0x1000000
 80008b8:	f04f 0300 	mov.w	r3, #0
 80008bc:	e9c7 2302 	strd	r2, r3, [r7, #8]
    PeriphClkInitStruct.FmcClockSelection = RCC_FMCCLKSOURCE_D1HCLK;
 80008c0:	2300      	movs	r3, #0
 80008c2:	653b      	str	r3, [r7, #80]	@ 0x50
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80008c4:	f107 0308 	add.w	r3, r7, #8
 80008c8:	4618      	mov	r0, r3
 80008ca:	f007 f85d 	bl	8007988 <HAL_RCCEx_PeriphCLKConfig>
 80008ce:	4603      	mov	r3, r0
 80008d0:	2b00      	cmp	r3, #0
 80008d2:	d001      	beq.n	80008d8 <HAL_FMC_MspInit+0x58>
    {
      Error_Handler();
 80008d4:	f000 fd36 	bl	8001344 <Error_Handler>
    }

  /* Peripheral clock enable */
  __HAL_RCC_FMC_CLK_ENABLE();
 80008d8:	4b41      	ldr	r3, [pc, #260]	@ (80009e0 <HAL_FMC_MspInit+0x160>)
 80008da:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 80008de:	4a40      	ldr	r2, [pc, #256]	@ (80009e0 <HAL_FMC_MspInit+0x160>)
 80008e0:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 80008e4:	f8c2 30d4 	str.w	r3, [r2, #212]	@ 0xd4
 80008e8:	4b3d      	ldr	r3, [pc, #244]	@ (80009e0 <HAL_FMC_MspInit+0x160>)
 80008ea:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 80008ee:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80008f2:	607b      	str	r3, [r7, #4]
 80008f4:	687b      	ldr	r3, [r7, #4]
  PG15   ------> FMC_SDNCAS
  PE0   ------> FMC_NBL0
  PE1   ------> FMC_NBL1
  */
  /* GPIO_InitStruct */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 80008f6:	f64f 033f 	movw	r3, #63551	@ 0xf83f
 80008fa:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
                          |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_11|GPIO_PIN_12
                          |GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80008fe:	2302      	movs	r3, #2
 8000900:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000904:	2300      	movs	r3, #0
 8000906:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800090a:	2303      	movs	r3, #3
 800090c:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8000910:	230c      	movs	r3, #12
 8000912:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4

  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000916:	f107 03c4 	add.w	r3, r7, #196	@ 0xc4
 800091a:	4619      	mov	r1, r3
 800091c:	4831      	ldr	r0, [pc, #196]	@ (80009e4 <HAL_FMC_MspInit+0x164>)
 800091e:	f002 ff73 	bl	8003808 <HAL_GPIO_Init>

  /* GPIO_InitStruct */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_4|GPIO_PIN_5;
 8000922:	2331      	movs	r3, #49	@ 0x31
 8000924:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000928:	2302      	movs	r3, #2
 800092a:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800092e:	2300      	movs	r3, #0
 8000930:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000934:	2303      	movs	r3, #3
 8000936:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800093a:	230c      	movs	r3, #12
 800093c:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4

  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000940:	f107 03c4 	add.w	r3, r7, #196	@ 0xc4
 8000944:	4619      	mov	r1, r3
 8000946:	4828      	ldr	r0, [pc, #160]	@ (80009e8 <HAL_FMC_MspInit+0x168>)
 8000948:	f002 ff5e 	bl	8003808 <HAL_GPIO_Init>

  /* GPIO_InitStruct */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_4
 800094c:	f248 1337 	movw	r3, #33079	@ 0x8137
 8000950:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
                          |GPIO_PIN_5|GPIO_PIN_8|GPIO_PIN_15;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000954:	2302      	movs	r3, #2
 8000956:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800095a:	2300      	movs	r3, #0
 800095c:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000960:	2303      	movs	r3, #3
 8000962:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8000966:	230c      	movs	r3, #12
 8000968:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4

  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800096c:	f107 03c4 	add.w	r3, r7, #196	@ 0xc4
 8000970:	4619      	mov	r1, r3
 8000972:	481e      	ldr	r0, [pc, #120]	@ (80009ec <HAL_FMC_MspInit+0x16c>)
 8000974:	f002 ff48 	bl	8003808 <HAL_GPIO_Init>

  /* GPIO_InitStruct */
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8000978:	f64f 7383 	movw	r3, #65411	@ 0xff83
 800097c:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
                          |GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14
                          |GPIO_PIN_15|GPIO_PIN_0|GPIO_PIN_1;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000980:	2302      	movs	r3, #2
 8000982:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000986:	2300      	movs	r3, #0
 8000988:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800098c:	2303      	movs	r3, #3
 800098e:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8000992:	230c      	movs	r3, #12
 8000994:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4

  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000998:	f107 03c4 	add.w	r3, r7, #196	@ 0xc4
 800099c:	4619      	mov	r1, r3
 800099e:	4814      	ldr	r0, [pc, #80]	@ (80009f0 <HAL_FMC_MspInit+0x170>)
 80009a0:	f002 ff32 	bl	8003808 <HAL_GPIO_Init>

  /* GPIO_InitStruct */
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 80009a4:	f24c 7303 	movw	r3, #50947	@ 0xc703
 80009a8:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
                          |GPIO_PIN_15|GPIO_PIN_0|GPIO_PIN_1;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80009ac:	2302      	movs	r3, #2
 80009ae:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80009b2:	2300      	movs	r3, #0
 80009b4:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80009b8:	2303      	movs	r3, #3
 80009ba:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80009be:	230c      	movs	r3, #12
 80009c0:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4

  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80009c4:	f107 03c4 	add.w	r3, r7, #196	@ 0xc4
 80009c8:	4619      	mov	r1, r3
 80009ca:	480a      	ldr	r0, [pc, #40]	@ (80009f4 <HAL_FMC_MspInit+0x174>)
 80009cc:	f002 ff1c 	bl	8003808 <HAL_GPIO_Init>
 80009d0:	e000      	b.n	80009d4 <HAL_FMC_MspInit+0x154>
    return;
 80009d2:	bf00      	nop

  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}
 80009d4:	37d8      	adds	r7, #216	@ 0xd8
 80009d6:	46bd      	mov	sp, r7
 80009d8:	bd80      	pop	{r7, pc}
 80009da:	bf00      	nop
 80009dc:	240003dc 	.word	0x240003dc
 80009e0:	58024400 	.word	0x58024400
 80009e4:	58021400 	.word	0x58021400
 80009e8:	58020800 	.word	0x58020800
 80009ec:	58021800 	.word	0x58021800
 80009f0:	58021000 	.word	0x58021000
 80009f4:	58020c00 	.word	0x58020c00

080009f8 <HAL_SDRAM_MspInit>:

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* sdramHandle){
 80009f8:	b580      	push	{r7, lr}
 80009fa:	b082      	sub	sp, #8
 80009fc:	af00      	add	r7, sp, #0
 80009fe:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN SDRAM_MspInit 0 */

  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
 8000a00:	f7ff ff3e 	bl	8000880 <HAL_FMC_MspInit>
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8000a04:	bf00      	nop
 8000a06:	3708      	adds	r7, #8
 8000a08:	46bd      	mov	sp, r7
 8000a0a:	bd80      	pop	{r7, pc}

08000a0c <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 8000a0c:	b580      	push	{r7, lr}
 8000a0e:	b08e      	sub	sp, #56	@ 0x38
 8000a10:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000a12:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000a16:	2200      	movs	r2, #0
 8000a18:	601a      	str	r2, [r3, #0]
 8000a1a:	605a      	str	r2, [r3, #4]
 8000a1c:	609a      	str	r2, [r3, #8]
 8000a1e:	60da      	str	r2, [r3, #12]
 8000a20:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8000a22:	4b6e      	ldr	r3, [pc, #440]	@ (8000bdc <MX_GPIO_Init+0x1d0>)
 8000a24:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000a28:	4a6c      	ldr	r2, [pc, #432]	@ (8000bdc <MX_GPIO_Init+0x1d0>)
 8000a2a:	f043 0310 	orr.w	r3, r3, #16
 8000a2e:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8000a32:	4b6a      	ldr	r3, [pc, #424]	@ (8000bdc <MX_GPIO_Init+0x1d0>)
 8000a34:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000a38:	f003 0310 	and.w	r3, r3, #16
 8000a3c:	623b      	str	r3, [r7, #32]
 8000a3e:	6a3b      	ldr	r3, [r7, #32]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000a40:	4b66      	ldr	r3, [pc, #408]	@ (8000bdc <MX_GPIO_Init+0x1d0>)
 8000a42:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000a46:	4a65      	ldr	r2, [pc, #404]	@ (8000bdc <MX_GPIO_Init+0x1d0>)
 8000a48:	f043 0304 	orr.w	r3, r3, #4
 8000a4c:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8000a50:	4b62      	ldr	r3, [pc, #392]	@ (8000bdc <MX_GPIO_Init+0x1d0>)
 8000a52:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000a56:	f003 0304 	and.w	r3, r3, #4
 8000a5a:	61fb      	str	r3, [r7, #28]
 8000a5c:	69fb      	ldr	r3, [r7, #28]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8000a5e:	4b5f      	ldr	r3, [pc, #380]	@ (8000bdc <MX_GPIO_Init+0x1d0>)
 8000a60:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000a64:	4a5d      	ldr	r2, [pc, #372]	@ (8000bdc <MX_GPIO_Init+0x1d0>)
 8000a66:	f043 0320 	orr.w	r3, r3, #32
 8000a6a:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8000a6e:	4b5b      	ldr	r3, [pc, #364]	@ (8000bdc <MX_GPIO_Init+0x1d0>)
 8000a70:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000a74:	f003 0320 	and.w	r3, r3, #32
 8000a78:	61bb      	str	r3, [r7, #24]
 8000a7a:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000a7c:	4b57      	ldr	r3, [pc, #348]	@ (8000bdc <MX_GPIO_Init+0x1d0>)
 8000a7e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000a82:	4a56      	ldr	r2, [pc, #344]	@ (8000bdc <MX_GPIO_Init+0x1d0>)
 8000a84:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000a88:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8000a8c:	4b53      	ldr	r3, [pc, #332]	@ (8000bdc <MX_GPIO_Init+0x1d0>)
 8000a8e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000a92:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000a96:	617b      	str	r3, [r7, #20]
 8000a98:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000a9a:	4b50      	ldr	r3, [pc, #320]	@ (8000bdc <MX_GPIO_Init+0x1d0>)
 8000a9c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000aa0:	4a4e      	ldr	r2, [pc, #312]	@ (8000bdc <MX_GPIO_Init+0x1d0>)
 8000aa2:	f043 0301 	orr.w	r3, r3, #1
 8000aa6:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8000aaa:	4b4c      	ldr	r3, [pc, #304]	@ (8000bdc <MX_GPIO_Init+0x1d0>)
 8000aac:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000ab0:	f003 0301 	and.w	r3, r3, #1
 8000ab4:	613b      	str	r3, [r7, #16]
 8000ab6:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000ab8:	4b48      	ldr	r3, [pc, #288]	@ (8000bdc <MX_GPIO_Init+0x1d0>)
 8000aba:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000abe:	4a47      	ldr	r2, [pc, #284]	@ (8000bdc <MX_GPIO_Init+0x1d0>)
 8000ac0:	f043 0302 	orr.w	r3, r3, #2
 8000ac4:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8000ac8:	4b44      	ldr	r3, [pc, #272]	@ (8000bdc <MX_GPIO_Init+0x1d0>)
 8000aca:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000ace:	f003 0302 	and.w	r3, r3, #2
 8000ad2:	60fb      	str	r3, [r7, #12]
 8000ad4:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8000ad6:	4b41      	ldr	r3, [pc, #260]	@ (8000bdc <MX_GPIO_Init+0x1d0>)
 8000ad8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000adc:	4a3f      	ldr	r2, [pc, #252]	@ (8000bdc <MX_GPIO_Init+0x1d0>)
 8000ade:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000ae2:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8000ae6:	4b3d      	ldr	r3, [pc, #244]	@ (8000bdc <MX_GPIO_Init+0x1d0>)
 8000ae8:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000aec:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8000af0:	60bb      	str	r3, [r7, #8]
 8000af2:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000af4:	4b39      	ldr	r3, [pc, #228]	@ (8000bdc <MX_GPIO_Init+0x1d0>)
 8000af6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000afa:	4a38      	ldr	r2, [pc, #224]	@ (8000bdc <MX_GPIO_Init+0x1d0>)
 8000afc:	f043 0308 	orr.w	r3, r3, #8
 8000b00:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8000b04:	4b35      	ldr	r3, [pc, #212]	@ (8000bdc <MX_GPIO_Init+0x1d0>)
 8000b06:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000b0a:	f003 0308 	and.w	r3, r3, #8
 8000b0e:	607b      	str	r3, [r7, #4]
 8000b10:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LCD_TP_RESET_GPIO_Port, LCD_TP_RESET_Pin, GPIO_PIN_SET);
 8000b12:	2201      	movs	r2, #1
 8000b14:	2110      	movs	r1, #16
 8000b16:	4832      	ldr	r0, [pc, #200]	@ (8000be0 <MX_GPIO_Init+0x1d4>)
 8000b18:	f003 f938 	bl	8003d8c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LCD_SPI_CS_GPIO_Port, LCD_SPI_CS_Pin, GPIO_PIN_SET);
 8000b1c:	2201      	movs	r2, #1
 8000b1e:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000b22:	4830      	ldr	r0, [pc, #192]	@ (8000be4 <MX_GPIO_Init+0x1d8>)
 8000b24:	f003 f932 	bl	8003d8c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LCD_RESET_GPIO_Port, LCD_RESET_Pin, GPIO_PIN_SET);
 8000b28:	2201      	movs	r2, #1
 8000b2a:	2140      	movs	r1, #64	@ 0x40
 8000b2c:	482e      	ldr	r0, [pc, #184]	@ (8000be8 <MX_GPIO_Init+0x1dc>)
 8000b2e:	f003 f92d 	bl	8003d8c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
 8000b32:	2201      	movs	r2, #1
 8000b34:	2108      	movs	r1, #8
 8000b36:	482d      	ldr	r0, [pc, #180]	@ (8000bec <MX_GPIO_Init+0x1e0>)
 8000b38:	f003 f928 	bl	8003d8c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LCD_TP_INT_GPIO_Port, LCD_TP_INT_Pin, GPIO_PIN_SET);
 8000b3c:	2201      	movs	r2, #1
 8000b3e:	2110      	movs	r1, #16
 8000b40:	482b      	ldr	r0, [pc, #172]	@ (8000bf0 <MX_GPIO_Init+0x1e4>)
 8000b42:	f003 f923 	bl	8003d8c <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = LCD_TP_RESET_Pin;
 8000b46:	2310      	movs	r3, #16
 8000b48:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000b4a:	2301      	movs	r3, #1
 8000b4c:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b4e:	2300      	movs	r3, #0
 8000b50:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000b52:	2300      	movs	r3, #0
 8000b54:	633b      	str	r3, [r7, #48]	@ 0x30
  HAL_GPIO_Init(LCD_TP_RESET_GPIO_Port, &GPIO_InitStruct);
 8000b56:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000b5a:	4619      	mov	r1, r3
 8000b5c:	4820      	ldr	r0, [pc, #128]	@ (8000be0 <MX_GPIO_Init+0x1d4>)
 8000b5e:	f002 fe53 	bl	8003808 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = LCD_SPI_CS_Pin;
 8000b62:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8000b66:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000b68:	2301      	movs	r3, #1
 8000b6a:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b6c:	2300      	movs	r3, #0
 8000b6e:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000b70:	2300      	movs	r3, #0
 8000b72:	633b      	str	r3, [r7, #48]	@ 0x30
  HAL_GPIO_Init(LCD_SPI_CS_GPIO_Port, &GPIO_InitStruct);
 8000b74:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000b78:	4619      	mov	r1, r3
 8000b7a:	481a      	ldr	r0, [pc, #104]	@ (8000be4 <MX_GPIO_Init+0x1d8>)
 8000b7c:	f002 fe44 	bl	8003808 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = LCD_RESET_Pin;
 8000b80:	2340      	movs	r3, #64	@ 0x40
 8000b82:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000b84:	2301      	movs	r3, #1
 8000b86:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000b88:	2300      	movs	r3, #0
 8000b8a:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000b8c:	2300      	movs	r3, #0
 8000b8e:	633b      	str	r3, [r7, #48]	@ 0x30
  HAL_GPIO_Init(LCD_RESET_GPIO_Port, &GPIO_InitStruct);
 8000b90:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000b94:	4619      	mov	r1, r3
 8000b96:	4814      	ldr	r0, [pc, #80]	@ (8000be8 <MX_GPIO_Init+0x1dc>)
 8000b98:	f002 fe36 	bl	8003808 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = LED_Pin;
 8000b9c:	2308      	movs	r3, #8
 8000b9e:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000ba0:	2301      	movs	r3, #1
 8000ba2:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ba4:	2300      	movs	r3, #0
 8000ba6:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000ba8:	2300      	movs	r3, #0
 8000baa:	633b      	str	r3, [r7, #48]	@ 0x30
  HAL_GPIO_Init(LED_GPIO_Port, &GPIO_InitStruct);
 8000bac:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000bb0:	4619      	mov	r1, r3
 8000bb2:	480e      	ldr	r0, [pc, #56]	@ (8000bec <MX_GPIO_Init+0x1e0>)
 8000bb4:	f002 fe28 	bl	8003808 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = LCD_TP_INT_Pin;
 8000bb8:	2310      	movs	r3, #16
 8000bba:	627b      	str	r3, [r7, #36]	@ 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000bbc:	2301      	movs	r3, #1
 8000bbe:	62bb      	str	r3, [r7, #40]	@ 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000bc0:	2300      	movs	r3, #0
 8000bc2:	62fb      	str	r3, [r7, #44]	@ 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000bc4:	2300      	movs	r3, #0
 8000bc6:	633b      	str	r3, [r7, #48]	@ 0x30
  HAL_GPIO_Init(LCD_TP_INT_GPIO_Port, &GPIO_InitStruct);
 8000bc8:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8000bcc:	4619      	mov	r1, r3
 8000bce:	4808      	ldr	r0, [pc, #32]	@ (8000bf0 <MX_GPIO_Init+0x1e4>)
 8000bd0:	f002 fe1a 	bl	8003808 <HAL_GPIO_Init>

}
 8000bd4:	bf00      	nop
 8000bd6:	3738      	adds	r7, #56	@ 0x38
 8000bd8:	46bd      	mov	sp, r7
 8000bda:	bd80      	pop	{r7, pc}
 8000bdc:	58024400 	.word	0x58024400
 8000be0:	58021000 	.word	0x58021000
 8000be4:	58020800 	.word	0x58020800
 8000be8:	58021400 	.word	0x58021400
 8000bec:	58021800 	.word	0x58021800
 8000bf0:	58020400 	.word	0x58020400

08000bf4 <MX_I2C1_Init>:

I2C_HandleTypeDef hi2c1;

/* I2C1 init function */
void MX_I2C1_Init(void)
{
 8000bf4:	b580      	push	{r7, lr}
 8000bf6:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8000bf8:	4b1b      	ldr	r3, [pc, #108]	@ (8000c68 <MX_I2C1_Init+0x74>)
 8000bfa:	4a1c      	ldr	r2, [pc, #112]	@ (8000c6c <MX_I2C1_Init+0x78>)
 8000bfc:	601a      	str	r2, [r3, #0]
  hi2c1.Init.Timing = 0x00D049FB;
 8000bfe:	4b1a      	ldr	r3, [pc, #104]	@ (8000c68 <MX_I2C1_Init+0x74>)
 8000c00:	4a1b      	ldr	r2, [pc, #108]	@ (8000c70 <MX_I2C1_Init+0x7c>)
 8000c02:	605a      	str	r2, [r3, #4]
  hi2c1.Init.OwnAddress1 = 0;
 8000c04:	4b18      	ldr	r3, [pc, #96]	@ (8000c68 <MX_I2C1_Init+0x74>)
 8000c06:	2200      	movs	r2, #0
 8000c08:	609a      	str	r2, [r3, #8]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000c0a:	4b17      	ldr	r3, [pc, #92]	@ (8000c68 <MX_I2C1_Init+0x74>)
 8000c0c:	2201      	movs	r2, #1
 8000c0e:	60da      	str	r2, [r3, #12]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000c10:	4b15      	ldr	r3, [pc, #84]	@ (8000c68 <MX_I2C1_Init+0x74>)
 8000c12:	2200      	movs	r2, #0
 8000c14:	611a      	str	r2, [r3, #16]
  hi2c1.Init.OwnAddress2 = 0;
 8000c16:	4b14      	ldr	r3, [pc, #80]	@ (8000c68 <MX_I2C1_Init+0x74>)
 8000c18:	2200      	movs	r2, #0
 8000c1a:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8000c1c:	4b12      	ldr	r3, [pc, #72]	@ (8000c68 <MX_I2C1_Init+0x74>)
 8000c1e:	2200      	movs	r2, #0
 8000c20:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000c22:	4b11      	ldr	r3, [pc, #68]	@ (8000c68 <MX_I2C1_Init+0x74>)
 8000c24:	2200      	movs	r2, #0
 8000c26:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000c28:	4b0f      	ldr	r3, [pc, #60]	@ (8000c68 <MX_I2C1_Init+0x74>)
 8000c2a:	2200      	movs	r2, #0
 8000c2c:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8000c2e:	480e      	ldr	r0, [pc, #56]	@ (8000c68 <MX_I2C1_Init+0x74>)
 8000c30:	f003 f8c6 	bl	8003dc0 <HAL_I2C_Init>
 8000c34:	4603      	mov	r3, r0
 8000c36:	2b00      	cmp	r3, #0
 8000c38:	d001      	beq.n	8000c3e <MX_I2C1_Init+0x4a>
  {
    Error_Handler();
 8000c3a:	f000 fb83 	bl	8001344 <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8000c3e:	2100      	movs	r1, #0
 8000c40:	4809      	ldr	r0, [pc, #36]	@ (8000c68 <MX_I2C1_Init+0x74>)
 8000c42:	f003 ff35 	bl	8004ab0 <HAL_I2CEx_ConfigAnalogFilter>
 8000c46:	4603      	mov	r3, r0
 8000c48:	2b00      	cmp	r3, #0
 8000c4a:	d001      	beq.n	8000c50 <MX_I2C1_Init+0x5c>
  {
    Error_Handler();
 8000c4c:	f000 fb7a 	bl	8001344 <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 8000c50:	2100      	movs	r1, #0
 8000c52:	4805      	ldr	r0, [pc, #20]	@ (8000c68 <MX_I2C1_Init+0x74>)
 8000c54:	f003 ff77 	bl	8004b46 <HAL_I2CEx_ConfigDigitalFilter>
 8000c58:	4603      	mov	r3, r0
 8000c5a:	2b00      	cmp	r3, #0
 8000c5c:	d001      	beq.n	8000c62 <MX_I2C1_Init+0x6e>
  {
    Error_Handler();
 8000c5e:	f000 fb71 	bl	8001344 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8000c62:	bf00      	nop
 8000c64:	bd80      	pop	{r7, pc}
 8000c66:	bf00      	nop
 8000c68:	240003e0 	.word	0x240003e0
 8000c6c:	40005400 	.word	0x40005400
 8000c70:	00d049fb 	.word	0x00d049fb

08000c74 <HAL_I2C_MspInit>:

void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)
{
 8000c74:	b580      	push	{r7, lr}
 8000c76:	b0b8      	sub	sp, #224	@ 0xe0
 8000c78:	af00      	add	r7, sp, #0
 8000c7a:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000c7c:	f107 03cc 	add.w	r3, r7, #204	@ 0xcc
 8000c80:	2200      	movs	r2, #0
 8000c82:	601a      	str	r2, [r3, #0]
 8000c84:	605a      	str	r2, [r3, #4]
 8000c86:	609a      	str	r2, [r3, #8]
 8000c88:	60da      	str	r2, [r3, #12]
 8000c8a:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000c8c:	f107 0310 	add.w	r3, r7, #16
 8000c90:	22b8      	movs	r2, #184	@ 0xb8
 8000c92:	2100      	movs	r1, #0
 8000c94:	4618      	mov	r0, r3
 8000c96:	f025 f8d5 	bl	8025e44 <memset>
  if(i2cHandle->Instance==I2C1)
 8000c9a:	687b      	ldr	r3, [r7, #4]
 8000c9c:	681b      	ldr	r3, [r3, #0]
 8000c9e:	4a26      	ldr	r2, [pc, #152]	@ (8000d38 <HAL_I2C_MspInit+0xc4>)
 8000ca0:	4293      	cmp	r3, r2
 8000ca2:	d145      	bne.n	8000d30 <HAL_I2C_MspInit+0xbc>

  /* USER CODE END I2C1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_I2C1;
 8000ca4:	f04f 0208 	mov.w	r2, #8
 8000ca8:	f04f 0300 	mov.w	r3, #0
 8000cac:	e9c7 2304 	strd	r2, r3, [r7, #16]
    PeriphClkInitStruct.I2c123ClockSelection = RCC_I2C1235CLKSOURCE_D2PCLK1;
 8000cb0:	2300      	movs	r3, #0
 8000cb2:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000cb6:	f107 0310 	add.w	r3, r7, #16
 8000cba:	4618      	mov	r0, r3
 8000cbc:	f006 fe64 	bl	8007988 <HAL_RCCEx_PeriphCLKConfig>
 8000cc0:	4603      	mov	r3, r0
 8000cc2:	2b00      	cmp	r3, #0
 8000cc4:	d001      	beq.n	8000cca <HAL_I2C_MspInit+0x56>
    {
      Error_Handler();
 8000cc6:	f000 fb3d 	bl	8001344 <Error_Handler>
    }

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000cca:	4b1c      	ldr	r3, [pc, #112]	@ (8000d3c <HAL_I2C_MspInit+0xc8>)
 8000ccc:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000cd0:	4a1a      	ldr	r2, [pc, #104]	@ (8000d3c <HAL_I2C_MspInit+0xc8>)
 8000cd2:	f043 0302 	orr.w	r3, r3, #2
 8000cd6:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8000cda:	4b18      	ldr	r3, [pc, #96]	@ (8000d3c <HAL_I2C_MspInit+0xc8>)
 8000cdc:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000ce0:	f003 0302 	and.w	r3, r3, #2
 8000ce4:	60fb      	str	r3, [r7, #12]
 8000ce6:	68fb      	ldr	r3, [r7, #12]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8000ce8:	23c0      	movs	r3, #192	@ 0xc0
 8000cea:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000cee:	2312      	movs	r3, #18
 8000cf0:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cf4:	2300      	movs	r3, #0
 8000cf6:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cfa:	2300      	movs	r3, #0
 8000cfc:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8000d00:	2304      	movs	r3, #4
 8000d02:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000d06:	f107 03cc 	add.w	r3, r7, #204	@ 0xcc
 8000d0a:	4619      	mov	r1, r3
 8000d0c:	480c      	ldr	r0, [pc, #48]	@ (8000d40 <HAL_I2C_MspInit+0xcc>)
 8000d0e:	f002 fd7b 	bl	8003808 <HAL_GPIO_Init>

    /* I2C1 clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8000d12:	4b0a      	ldr	r3, [pc, #40]	@ (8000d3c <HAL_I2C_MspInit+0xc8>)
 8000d14:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8000d18:	4a08      	ldr	r2, [pc, #32]	@ (8000d3c <HAL_I2C_MspInit+0xc8>)
 8000d1a:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8000d1e:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 8000d22:	4b06      	ldr	r3, [pc, #24]	@ (8000d3c <HAL_I2C_MspInit+0xc8>)
 8000d24:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8000d28:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8000d2c:	60bb      	str	r3, [r7, #8]
 8000d2e:	68bb      	ldr	r3, [r7, #8]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }
}
 8000d30:	bf00      	nop
 8000d32:	37e0      	adds	r7, #224	@ 0xe0
 8000d34:	46bd      	mov	sp, r7
 8000d36:	bd80      	pop	{r7, pc}
 8000d38:	40005400 	.word	0x40005400
 8000d3c:	58024400 	.word	0x58024400
 8000d40:	58020400 	.word	0x58020400

08000d44 <MX_LTDC_Init>:

LTDC_HandleTypeDef hltdc;

/* LTDC init function */
void MX_LTDC_Init(void)
{
 8000d44:	b580      	push	{r7, lr}
 8000d46:	b08e      	sub	sp, #56	@ 0x38
 8000d48:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN LTDC_Init 0 */

  /* USER CODE END LTDC_Init 0 */

  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000d4a:	1d3b      	adds	r3, r7, #4
 8000d4c:	2234      	movs	r2, #52	@ 0x34
 8000d4e:	2100      	movs	r1, #0
 8000d50:	4618      	mov	r0, r3
 8000d52:	f025 f877 	bl	8025e44 <memset>

  /* USER CODE BEGIN LTDC_Init 1 */

  /* USER CODE END LTDC_Init 1 */
  hltdc.Instance = LTDC;
 8000d56:	4b3a      	ldr	r3, [pc, #232]	@ (8000e40 <MX_LTDC_Init+0xfc>)
 8000d58:	4a3a      	ldr	r2, [pc, #232]	@ (8000e44 <MX_LTDC_Init+0x100>)
 8000d5a:	601a      	str	r2, [r3, #0]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8000d5c:	4b38      	ldr	r3, [pc, #224]	@ (8000e40 <MX_LTDC_Init+0xfc>)
 8000d5e:	2200      	movs	r2, #0
 8000d60:	605a      	str	r2, [r3, #4]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8000d62:	4b37      	ldr	r3, [pc, #220]	@ (8000e40 <MX_LTDC_Init+0xfc>)
 8000d64:	2200      	movs	r2, #0
 8000d66:	609a      	str	r2, [r3, #8]
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8000d68:	4b35      	ldr	r3, [pc, #212]	@ (8000e40 <MX_LTDC_Init+0xfc>)
 8000d6a:	2200      	movs	r2, #0
 8000d6c:	60da      	str	r2, [r3, #12]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8000d6e:	4b34      	ldr	r3, [pc, #208]	@ (8000e40 <MX_LTDC_Init+0xfc>)
 8000d70:	2200      	movs	r2, #0
 8000d72:	611a      	str	r2, [r3, #16]
  hltdc.Init.HorizontalSync = 7;
 8000d74:	4b32      	ldr	r3, [pc, #200]	@ (8000e40 <MX_LTDC_Init+0xfc>)
 8000d76:	2207      	movs	r2, #7
 8000d78:	615a      	str	r2, [r3, #20]
  hltdc.Init.VerticalSync = 7;
 8000d7a:	4b31      	ldr	r3, [pc, #196]	@ (8000e40 <MX_LTDC_Init+0xfc>)
 8000d7c:	2207      	movs	r2, #7
 8000d7e:	619a      	str	r2, [r3, #24]
  hltdc.Init.AccumulatedHBP = 57;
 8000d80:	4b2f      	ldr	r3, [pc, #188]	@ (8000e40 <MX_LTDC_Init+0xfc>)
 8000d82:	2239      	movs	r2, #57	@ 0x39
 8000d84:	61da      	str	r2, [r3, #28]
  hltdc.Init.AccumulatedVBP = 27;
 8000d86:	4b2e      	ldr	r3, [pc, #184]	@ (8000e40 <MX_LTDC_Init+0xfc>)
 8000d88:	221b      	movs	r2, #27
 8000d8a:	621a      	str	r2, [r3, #32]
  hltdc.Init.AccumulatedActiveW = 537;
 8000d8c:	4b2c      	ldr	r3, [pc, #176]	@ (8000e40 <MX_LTDC_Init+0xfc>)
 8000d8e:	f240 2219 	movw	r2, #537	@ 0x219
 8000d92:	625a      	str	r2, [r3, #36]	@ 0x24
  hltdc.Init.AccumulatedActiveH = 507;
 8000d94:	4b2a      	ldr	r3, [pc, #168]	@ (8000e40 <MX_LTDC_Init+0xfc>)
 8000d96:	f240 12fb 	movw	r2, #507	@ 0x1fb
 8000d9a:	629a      	str	r2, [r3, #40]	@ 0x28
  hltdc.Init.TotalWidth = 547;
 8000d9c:	4b28      	ldr	r3, [pc, #160]	@ (8000e40 <MX_LTDC_Init+0xfc>)
 8000d9e:	f240 2223 	movw	r2, #547	@ 0x223
 8000da2:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc.Init.TotalHeigh = 517;
 8000da4:	4b26      	ldr	r3, [pc, #152]	@ (8000e40 <MX_LTDC_Init+0xfc>)
 8000da6:	f240 2205 	movw	r2, #517	@ 0x205
 8000daa:	631a      	str	r2, [r3, #48]	@ 0x30
  hltdc.Init.Backcolor.Blue = 0;
 8000dac:	4b24      	ldr	r3, [pc, #144]	@ (8000e40 <MX_LTDC_Init+0xfc>)
 8000dae:	2200      	movs	r2, #0
 8000db0:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
  hltdc.Init.Backcolor.Green = 0;
 8000db4:	4b22      	ldr	r3, [pc, #136]	@ (8000e40 <MX_LTDC_Init+0xfc>)
 8000db6:	2200      	movs	r2, #0
 8000db8:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
  hltdc.Init.Backcolor.Red = 0;
 8000dbc:	4b20      	ldr	r3, [pc, #128]	@ (8000e40 <MX_LTDC_Init+0xfc>)
 8000dbe:	2200      	movs	r2, #0
 8000dc0:	f883 2036 	strb.w	r2, [r3, #54]	@ 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000dc4:	481e      	ldr	r0, [pc, #120]	@ (8000e40 <MX_LTDC_Init+0xfc>)
 8000dc6:	f003 ff0b 	bl	8004be0 <HAL_LTDC_Init>
 8000dca:	4603      	mov	r3, r0
 8000dcc:	2b00      	cmp	r3, #0
 8000dce:	d001      	beq.n	8000dd4 <MX_LTDC_Init+0x90>
  {
    Error_Handler();
 8000dd0:	f000 fab8 	bl	8001344 <Error_Handler>
  }
  pLayerCfg.WindowX0 = 0;
 8000dd4:	2300      	movs	r3, #0
 8000dd6:	607b      	str	r3, [r7, #4]
  pLayerCfg.WindowX1 = 480;
 8000dd8:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 8000ddc:	60bb      	str	r3, [r7, #8]
  pLayerCfg.WindowY0 = 0;
 8000dde:	2300      	movs	r3, #0
 8000de0:	60fb      	str	r3, [r7, #12]
  pLayerCfg.WindowY1 = 480;
 8000de2:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 8000de6:	613b      	str	r3, [r7, #16]
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000de8:	2302      	movs	r3, #2
 8000dea:	617b      	str	r3, [r7, #20]
  pLayerCfg.Alpha = 255;
 8000dec:	23ff      	movs	r3, #255	@ 0xff
 8000dee:	61bb      	str	r3, [r7, #24]
  pLayerCfg.Alpha0 = 0;
 8000df0:	2300      	movs	r3, #0
 8000df2:	61fb      	str	r3, [r7, #28]
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 8000df4:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000df8:	623b      	str	r3, [r7, #32]
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000dfa:	2305      	movs	r3, #5
 8000dfc:	627b      	str	r3, [r7, #36]	@ 0x24
  pLayerCfg.FBStartAdress = 0xC0000000;
 8000dfe:	f04f 4340 	mov.w	r3, #3221225472	@ 0xc0000000
 8000e02:	62bb      	str	r3, [r7, #40]	@ 0x28
  pLayerCfg.ImageWidth = 480;
 8000e04:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 8000e08:	62fb      	str	r3, [r7, #44]	@ 0x2c
  pLayerCfg.ImageHeight = 480;
 8000e0a:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 8000e0e:	633b      	str	r3, [r7, #48]	@ 0x30
  pLayerCfg.Backcolor.Blue = 0;
 8000e10:	2300      	movs	r3, #0
 8000e12:	f887 3034 	strb.w	r3, [r7, #52]	@ 0x34
  pLayerCfg.Backcolor.Green = 0;
 8000e16:	2300      	movs	r3, #0
 8000e18:	f887 3035 	strb.w	r3, [r7, #53]	@ 0x35
  pLayerCfg.Backcolor.Red = 0;
 8000e1c:	2300      	movs	r3, #0
 8000e1e:	f887 3036 	strb.w	r3, [r7, #54]	@ 0x36
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000e22:	1d3b      	adds	r3, r7, #4
 8000e24:	2200      	movs	r2, #0
 8000e26:	4619      	mov	r1, r3
 8000e28:	4805      	ldr	r0, [pc, #20]	@ (8000e40 <MX_LTDC_Init+0xfc>)
 8000e2a:	f004 f861 	bl	8004ef0 <HAL_LTDC_ConfigLayer>
 8000e2e:	4603      	mov	r3, r0
 8000e30:	2b00      	cmp	r3, #0
 8000e32:	d001      	beq.n	8000e38 <MX_LTDC_Init+0xf4>
  {
    Error_Handler();
 8000e34:	f000 fa86 	bl	8001344 <Error_Handler>
  }
  /* USER CODE BEGIN LTDC_Init 2 */

  /* USER CODE END LTDC_Init 2 */

}
 8000e38:	bf00      	nop
 8000e3a:	3738      	adds	r7, #56	@ 0x38
 8000e3c:	46bd      	mov	sp, r7
 8000e3e:	bd80      	pop	{r7, pc}
 8000e40:	24000434 	.word	0x24000434
 8000e44:	50001000 	.word	0x50001000

08000e48 <HAL_LTDC_MspInit>:

void HAL_LTDC_MspInit(LTDC_HandleTypeDef* ltdcHandle)
{
 8000e48:	b580      	push	{r7, lr}
 8000e4a:	b0be      	sub	sp, #248	@ 0xf8
 8000e4c:	af00      	add	r7, sp, #0
 8000e4e:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000e50:	f107 03e4 	add.w	r3, r7, #228	@ 0xe4
 8000e54:	2200      	movs	r2, #0
 8000e56:	601a      	str	r2, [r3, #0]
 8000e58:	605a      	str	r2, [r3, #4]
 8000e5a:	609a      	str	r2, [r3, #8]
 8000e5c:	60da      	str	r2, [r3, #12]
 8000e5e:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000e60:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8000e64:	22b8      	movs	r2, #184	@ 0xb8
 8000e66:	2100      	movs	r1, #0
 8000e68:	4618      	mov	r0, r3
 8000e6a:	f024 ffeb 	bl	8025e44 <memset>
  if(ltdcHandle->Instance==LTDC)
 8000e6e:	687b      	ldr	r3, [r7, #4]
 8000e70:	681b      	ldr	r3, [r3, #0]
 8000e72:	4ad2      	ldr	r2, [pc, #840]	@ (80011bc <HAL_LTDC_MspInit+0x374>)
 8000e74:	4293      	cmp	r3, r2
 8000e76:	f040 819c 	bne.w	80011b2 <HAL_LTDC_MspInit+0x36a>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8000e7a:	f04f 5200 	mov.w	r2, #536870912	@ 0x20000000
 8000e7e:	f04f 0300 	mov.w	r3, #0
 8000e82:	e9c7 230a 	strd	r2, r3, [r7, #40]	@ 0x28
    PeriphClkInitStruct.PLL3.PLL3M = 32;
 8000e86:	2320      	movs	r3, #32
 8000e88:	653b      	str	r3, [r7, #80]	@ 0x50
    PeriphClkInitStruct.PLL3.PLL3N = 129;
 8000e8a:	2381      	movs	r3, #129	@ 0x81
 8000e8c:	657b      	str	r3, [r7, #84]	@ 0x54
    PeriphClkInitStruct.PLL3.PLL3P = 2;
 8000e8e:	2302      	movs	r3, #2
 8000e90:	65bb      	str	r3, [r7, #88]	@ 0x58
    PeriphClkInitStruct.PLL3.PLL3Q = 2;
 8000e92:	2302      	movs	r3, #2
 8000e94:	65fb      	str	r3, [r7, #92]	@ 0x5c
    PeriphClkInitStruct.PLL3.PLL3R = 6;
 8000e96:	2306      	movs	r3, #6
 8000e98:	663b      	str	r3, [r7, #96]	@ 0x60
    PeriphClkInitStruct.PLL3.PLL3RGE = RCC_PLL3VCIRANGE_3;
 8000e9a:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 8000e9e:	667b      	str	r3, [r7, #100]	@ 0x64
    PeriphClkInitStruct.PLL3.PLL3VCOSEL = RCC_PLL3VCOWIDE;
 8000ea0:	2300      	movs	r3, #0
 8000ea2:	66bb      	str	r3, [r7, #104]	@ 0x68
    PeriphClkInitStruct.PLL3.PLL3FRACN = 0;
 8000ea4:	2300      	movs	r3, #0
 8000ea6:	66fb      	str	r3, [r7, #108]	@ 0x6c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000ea8:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8000eac:	4618      	mov	r0, r3
 8000eae:	f006 fd6b 	bl	8007988 <HAL_RCCEx_PeriphCLKConfig>
 8000eb2:	4603      	mov	r3, r0
 8000eb4:	2b00      	cmp	r3, #0
 8000eb6:	d001      	beq.n	8000ebc <HAL_LTDC_MspInit+0x74>
    {
      Error_Handler();
 8000eb8:	f000 fa44 	bl	8001344 <Error_Handler>
    }

    /* LTDC clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000ebc:	4bc0      	ldr	r3, [pc, #768]	@ (80011c0 <HAL_LTDC_MspInit+0x378>)
 8000ebe:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 8000ec2:	4abf      	ldr	r2, [pc, #764]	@ (80011c0 <HAL_LTDC_MspInit+0x378>)
 8000ec4:	f043 0308 	orr.w	r3, r3, #8
 8000ec8:	f8c2 30e4 	str.w	r3, [r2, #228]	@ 0xe4
 8000ecc:	4bbc      	ldr	r3, [pc, #752]	@ (80011c0 <HAL_LTDC_MspInit+0x378>)
 8000ece:	f8d3 30e4 	ldr.w	r3, [r3, #228]	@ 0xe4
 8000ed2:	f003 0308 	and.w	r3, r3, #8
 8000ed6:	627b      	str	r3, [r7, #36]	@ 0x24
 8000ed8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24

    __HAL_RCC_GPIOF_CLK_ENABLE();
 8000eda:	4bb9      	ldr	r3, [pc, #740]	@ (80011c0 <HAL_LTDC_MspInit+0x378>)
 8000edc:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000ee0:	4ab7      	ldr	r2, [pc, #732]	@ (80011c0 <HAL_LTDC_MspInit+0x378>)
 8000ee2:	f043 0320 	orr.w	r3, r3, #32
 8000ee6:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8000eea:	4bb5      	ldr	r3, [pc, #724]	@ (80011c0 <HAL_LTDC_MspInit+0x378>)
 8000eec:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000ef0:	f003 0320 	and.w	r3, r3, #32
 8000ef4:	623b      	str	r3, [r7, #32]
 8000ef6:	6a3b      	ldr	r3, [r7, #32]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000ef8:	4bb1      	ldr	r3, [pc, #708]	@ (80011c0 <HAL_LTDC_MspInit+0x378>)
 8000efa:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000efe:	4ab0      	ldr	r2, [pc, #704]	@ (80011c0 <HAL_LTDC_MspInit+0x378>)
 8000f00:	f043 0301 	orr.w	r3, r3, #1
 8000f04:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8000f08:	4bad      	ldr	r3, [pc, #692]	@ (80011c0 <HAL_LTDC_MspInit+0x378>)
 8000f0a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000f0e:	f003 0301 	and.w	r3, r3, #1
 8000f12:	61fb      	str	r3, [r7, #28]
 8000f14:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000f16:	4baa      	ldr	r3, [pc, #680]	@ (80011c0 <HAL_LTDC_MspInit+0x378>)
 8000f18:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000f1c:	4aa8      	ldr	r2, [pc, #672]	@ (80011c0 <HAL_LTDC_MspInit+0x378>)
 8000f1e:	f043 0302 	orr.w	r3, r3, #2
 8000f22:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8000f26:	4ba6      	ldr	r3, [pc, #664]	@ (80011c0 <HAL_LTDC_MspInit+0x378>)
 8000f28:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000f2c:	f003 0302 	and.w	r3, r3, #2
 8000f30:	61bb      	str	r3, [r7, #24]
 8000f32:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8000f34:	4ba2      	ldr	r3, [pc, #648]	@ (80011c0 <HAL_LTDC_MspInit+0x378>)
 8000f36:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000f3a:	4aa1      	ldr	r2, [pc, #644]	@ (80011c0 <HAL_LTDC_MspInit+0x378>)
 8000f3c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000f40:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8000f44:	4b9e      	ldr	r3, [pc, #632]	@ (80011c0 <HAL_LTDC_MspInit+0x378>)
 8000f46:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000f4a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8000f4e:	617b      	str	r3, [r7, #20]
 8000f50:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8000f52:	4b9b      	ldr	r3, [pc, #620]	@ (80011c0 <HAL_LTDC_MspInit+0x378>)
 8000f54:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000f58:	4a99      	ldr	r2, [pc, #612]	@ (80011c0 <HAL_LTDC_MspInit+0x378>)
 8000f5a:	f043 0304 	orr.w	r3, r3, #4
 8000f5e:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8000f62:	4b97      	ldr	r3, [pc, #604]	@ (80011c0 <HAL_LTDC_MspInit+0x378>)
 8000f64:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000f68:	f003 0304 	and.w	r3, r3, #4
 8000f6c:	613b      	str	r3, [r7, #16]
 8000f6e:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8000f70:	4b93      	ldr	r3, [pc, #588]	@ (80011c0 <HAL_LTDC_MspInit+0x378>)
 8000f72:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000f76:	4a92      	ldr	r2, [pc, #584]	@ (80011c0 <HAL_LTDC_MspInit+0x378>)
 8000f78:	f043 0308 	orr.w	r3, r3, #8
 8000f7c:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8000f80:	4b8f      	ldr	r3, [pc, #572]	@ (80011c0 <HAL_LTDC_MspInit+0x378>)
 8000f82:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8000f86:	f003 0308 	and.w	r3, r3, #8
 8000f8a:	60fb      	str	r3, [r7, #12]
 8000f8c:	68fb      	ldr	r3, [r7, #12]
    PA15(JTDI)     ------> LTDC_B6
    PD2     ------> LTDC_B7
    PD3     ------> LTDC_G7
    PB5     ------> LTDC_B5
    */
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8000f8e:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8000f92:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000f96:	2302      	movs	r3, #2
 8000f98:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f9c:	2300      	movs	r3, #0
 8000f9e:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000fa2:	2302      	movs	r3, #2
 8000fa4:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000fa8:	230e      	movs	r3, #14
 8000faa:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000fae:	f107 03e4 	add.w	r3, r7, #228	@ 0xe4
 8000fb2:	4619      	mov	r1, r3
 8000fb4:	4883      	ldr	r0, [pc, #524]	@ (80011c4 <HAL_LTDC_MspInit+0x37c>)
 8000fb6:	f002 fc27 	bl	8003808 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_9
 8000fba:	f248 23e0 	movw	r3, #33504	@ 0x82e0
 8000fbe:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
                          |GPIO_PIN_15;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000fc2:	2302      	movs	r3, #2
 8000fc4:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000fc8:	2300      	movs	r3, #0
 8000fca:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000fce:	2302      	movs	r3, #2
 8000fd0:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000fd4:	230e      	movs	r3, #14
 8000fd6:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000fda:	f107 03e4 	add.w	r3, r7, #228	@ 0xe4
 8000fde:	4619      	mov	r1, r3
 8000fe0:	4879      	ldr	r0, [pc, #484]	@ (80011c8 <HAL_LTDC_MspInit+0x380>)
 8000fe2:	f002 fc11 	bl	8003808 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8000fe6:	2303      	movs	r3, #3
 8000fe8:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000fec:	2302      	movs	r3, #2
 8000fee:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ff2:	2300      	movs	r3, #0
 8000ff4:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000ff8:	2302      	movs	r3, #2
 8000ffa:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8000ffe:	2309      	movs	r3, #9
 8001000:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001004:	f107 03e4 	add.w	r3, r7, #228	@ 0xe4
 8001008:	4619      	mov	r1, r3
 800100a:	4870      	ldr	r0, [pc, #448]	@ (80011cc <HAL_LTDC_MspInit+0x384>)
 800100c:	f002 fbfc 	bl	8003808 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11;
 8001010:	f44f 6340 	mov.w	r3, #3072	@ 0xc00
 8001014:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001018:	2302      	movs	r3, #2
 800101a:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800101e:	2300      	movs	r3, #0
 8001020:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001024:	2302      	movs	r3, #2
 8001026:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800102a:	230e      	movs	r3, #14
 800102c:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001030:	f107 03e4 	add.w	r3, r7, #228	@ 0xe4
 8001034:	4619      	mov	r1, r3
 8001036:	4865      	ldr	r0, [pc, #404]	@ (80011cc <HAL_LTDC_MspInit+0x384>)
 8001038:	f002 fbe6 	bl	8003808 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 800103c:	23c0      	movs	r3, #192	@ 0xc0
 800103e:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001042:	2302      	movs	r3, #2
 8001044:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001048:	2300      	movs	r3, #0
 800104a:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800104e:	2302      	movs	r3, #2
 8001050:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001054:	230e      	movs	r3, #14
 8001056:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800105a:	f107 03e4 	add.w	r3, r7, #228	@ 0xe4
 800105e:	4619      	mov	r1, r3
 8001060:	485b      	ldr	r0, [pc, #364]	@ (80011d0 <HAL_LTDC_MspInit+0x388>)
 8001062:	f002 fbd1 	bl	8003808 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001066:	23c0      	movs	r3, #192	@ 0xc0
 8001068:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800106c:	2302      	movs	r3, #2
 800106e:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001072:	2300      	movs	r3, #0
 8001074:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001078:	2302      	movs	r3, #2
 800107a:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 800107e:	230e      	movs	r3, #14
 8001080:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001084:	f107 03e4 	add.w	r3, r7, #228	@ 0xe4
 8001088:	4619      	mov	r1, r3
 800108a:	4852      	ldr	r0, [pc, #328]	@ (80011d4 <HAL_LTDC_MspInit+0x38c>)
 800108c:	f002 fbbc 	bl	8003808 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9;
 8001090:	f44f 7300 	mov.w	r3, #512	@ 0x200
 8001094:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001098:	2302      	movs	r3, #2
 800109a:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800109e:	2300      	movs	r3, #0
 80010a0:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80010a4:	2302      	movs	r3, #2
 80010a6:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF10_LTDC;
 80010aa:	230a      	movs	r3, #10
 80010ac:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80010b0:	f107 03e4 	add.w	r3, r7, #228	@ 0xe4
 80010b4:	4619      	mov	r1, r3
 80010b6:	4847      	ldr	r0, [pc, #284]	@ (80011d4 <HAL_LTDC_MspInit+0x38c>)
 80010b8:	f002 fba6 	bl	8003808 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 80010bc:	f44f 7380 	mov.w	r3, #256	@ 0x100
 80010c0:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80010c4:	2302      	movs	r3, #2
 80010c6:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80010ca:	2300      	movs	r3, #0
 80010cc:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80010d0:	2302      	movs	r3, #2
 80010d2:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF13_LTDC;
 80010d6:	230d      	movs	r3, #13
 80010d8:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80010dc:	f107 03e4 	add.w	r3, r7, #228	@ 0xe4
 80010e0:	4619      	mov	r1, r3
 80010e2:	4839      	ldr	r0, [pc, #228]	@ (80011c8 <HAL_LTDC_MspInit+0x380>)
 80010e4:	f002 fb90 	bl	8003808 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10;
 80010e8:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80010ec:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80010f0:	2302      	movs	r3, #2
 80010f2:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80010f6:	2300      	movs	r3, #0
 80010f8:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80010fc:	2302      	movs	r3, #2
 80010fe:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF12_LTDC;
 8001102:	230c      	movs	r3, #12
 8001104:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001108:	f107 03e4 	add.w	r3, r7, #228	@ 0xe4
 800110c:	4619      	mov	r1, r3
 800110e:	482e      	ldr	r0, [pc, #184]	@ (80011c8 <HAL_LTDC_MspInit+0x380>)
 8001110:	f002 fb7a 	bl	8003808 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001114:	2304      	movs	r3, #4
 8001116:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800111a:	2302      	movs	r3, #2
 800111c:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001120:	2300      	movs	r3, #0
 8001122:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001126:	2302      	movs	r3, #2
 8001128:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 800112c:	2309      	movs	r3, #9
 800112e:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001132:	f107 03e4 	add.w	r3, r7, #228	@ 0xe4
 8001136:	4619      	mov	r1, r3
 8001138:	4827      	ldr	r0, [pc, #156]	@ (80011d8 <HAL_LTDC_MspInit+0x390>)
 800113a:	f002 fb65 	bl	8003808 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 800113e:	2308      	movs	r3, #8
 8001140:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001144:	2302      	movs	r3, #2
 8001146:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800114a:	2300      	movs	r3, #0
 800114c:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001150:	2302      	movs	r3, #2
 8001152:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001156:	230e      	movs	r3, #14
 8001158:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800115c:	f107 03e4 	add.w	r3, r7, #228	@ 0xe4
 8001160:	4619      	mov	r1, r3
 8001162:	481d      	ldr	r0, [pc, #116]	@ (80011d8 <HAL_LTDC_MspInit+0x390>)
 8001164:	f002 fb50 	bl	8003808 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_5;
 8001168:	2320      	movs	r3, #32
 800116a:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800116e:	2302      	movs	r3, #2
 8001170:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001174:	2300      	movs	r3, #0
 8001176:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800117a:	2302      	movs	r3, #2
 800117c:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
    GPIO_InitStruct.Alternate = GPIO_AF3_LTDC;
 8001180:	2303      	movs	r3, #3
 8001182:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001186:	f107 03e4 	add.w	r3, r7, #228	@ 0xe4
 800118a:	4619      	mov	r1, r3
 800118c:	480f      	ldr	r0, [pc, #60]	@ (80011cc <HAL_LTDC_MspInit+0x384>)
 800118e:	f002 fb3b 	bl	8003808 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001192:	2200      	movs	r2, #0
 8001194:	2105      	movs	r1, #5
 8001196:	2058      	movs	r0, #88	@ 0x58
 8001198:	f002 f8fd 	bl	8003396 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 800119c:	2058      	movs	r0, #88	@ 0x58
 800119e:	f002 f914 	bl	80033ca <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(LTDC_ER_IRQn, 5, 0);
 80011a2:	2200      	movs	r2, #0
 80011a4:	2105      	movs	r1, #5
 80011a6:	2059      	movs	r0, #89	@ 0x59
 80011a8:	f002 f8f5 	bl	8003396 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_ER_IRQn);
 80011ac:	2059      	movs	r0, #89	@ 0x59
 80011ae:	f002 f90c 	bl	80033ca <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }
}
 80011b2:	bf00      	nop
 80011b4:	37f8      	adds	r7, #248	@ 0xf8
 80011b6:	46bd      	mov	sp, r7
 80011b8:	bd80      	pop	{r7, pc}
 80011ba:	bf00      	nop
 80011bc:	50001000 	.word	0x50001000
 80011c0:	58024400 	.word	0x58024400
 80011c4:	58021400 	.word	0x58021400
 80011c8:	58020000 	.word	0x58020000
 80011cc:	58020400 	.word	0x58020400
 80011d0:	58021800 	.word	0x58021800
 80011d4:	58020800 	.word	0x58020800
 80011d8:	58020c00 	.word	0x58020c00

080011dc <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80011dc:	b580      	push	{r7, lr}
 80011de:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80011e0:	f001 ff48 	bl	8003074 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80011e4:	f000 f840 	bl	8001268 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80011e8:	f7ff fc10 	bl	8000a0c <MX_GPIO_Init>
  MX_USART1_UART_Init();
 80011ec:	f000 fd36 	bl	8001c5c <MX_USART1_UART_Init>
  MX_FMC_Init();
 80011f0:	f7ff faf6 	bl	80007e0 <MX_FMC_Init>
  MX_TIM13_Init();
 80011f4:	f000 fc88 	bl	8001b08 <MX_TIM13_Init>
  MX_SPI5_Init();
 80011f8:	f000 fa32 	bl	8001660 <MX_SPI5_Init>
  MX_LTDC_Init();
 80011fc:	f7ff fda2 	bl	8000d44 <MX_LTDC_Init>
  MX_I2C1_Init();
 8001200:	f7ff fcf8 	bl	8000bf4 <MX_I2C1_Init>
  MX_CRC_Init();
 8001204:	f7ff fa4c 	bl	80006a0 <MX_CRC_Init>
  MX_DMA2D_Init();
 8001208:	f7ff fa8e 	bl	8000728 <MX_DMA2D_Init>
  MX_OCTOSPI1_Init();
 800120c:	f000 f8a0 	bl	8001350 <MX_OCTOSPI1_Init>
  MX_TouchGFX_Init();
 8001210:	f00b f818 	bl	800c244 <MX_TouchGFX_Init>
  /* USER CODE BEGIN 2 */

  sdramInit();
 8001214:	f001 fbca 	bl	80029ac <sdramInit>
  st7701Init();
 8001218:	f001 fc3a 	bl	8002a90 <st7701Init>
  gt911Init();
 800121c:	f000 fdd4 	bl	8001dc8 <gt911Init>
  qspiInit();
 8001220:	f001 f804 	bl	800222c <qspiInit>
  if (qspiEnableMemoryMappedMode())
 8001224:	f001 f858 	bl	80022d8 <qspiEnableMemoryMappedMode>
 8001228:	4603      	mov	r3, r0
 800122a:	2b00      	cmp	r3, #0
 800122c:	d003      	beq.n	8001236 <main+0x5a>
  {
    printf("qspi xip ok\n");
 800122e:	480a      	ldr	r0, [pc, #40]	@ (8001258 <main+0x7c>)
 8001230:	f024 fd28 	bl	8025c84 <puts>
 8001234:	e002      	b.n	800123c <main+0x60>
  }
  else
  {
    printf("qspi xip fail\n");
 8001236:	4809      	ldr	r0, [pc, #36]	@ (800125c <main+0x80>)
 8001238:	f024 fd24 	bl	8025c84 <puts>
  }

  HAL_TIM_PWM_Start(&htim13, TIM_CHANNEL_1);
 800123c:	2100      	movs	r1, #0
 800123e:	4808      	ldr	r0, [pc, #32]	@ (8001260 <main+0x84>)
 8001240:	f008 feb2 	bl	8009fa8 <HAL_TIM_PWM_Start>
  htim13.Instance->CCR1 = 100;
 8001244:	4b06      	ldr	r3, [pc, #24]	@ (8001260 <main+0x84>)
 8001246:	681b      	ldr	r3, [r3, #0]
 8001248:	2264      	movs	r2, #100	@ 0x64
 800124a:	635a      	str	r2, [r3, #52]	@ 0x34


  printf(qspi_buf);
 800124c:	4805      	ldr	r0, [pc, #20]	@ (8001264 <main+0x88>)
 800124e:	f024 fd19 	bl	8025c84 <puts>
  /* USER CODE BEGIN WHILE */
  while (1)
  {
    /* USER CODE END WHILE */

  MX_TouchGFX_Process();
 8001252:	f00a ffff 	bl	800c254 <MX_TouchGFX_Process>
 8001256:	e7fc      	b.n	8001252 <main+0x76>
 8001258:	08026964 	.word	0x08026964
 800125c:	08026970 	.word	0x08026970
 8001260:	240005c4 	.word	0x240005c4
 8001264:	08026980 	.word	0x08026980

08001268 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001268:	b580      	push	{r7, lr}
 800126a:	b09c      	sub	sp, #112	@ 0x70
 800126c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800126e:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 8001272:	224c      	movs	r2, #76	@ 0x4c
 8001274:	2100      	movs	r1, #0
 8001276:	4618      	mov	r0, r3
 8001278:	f024 fde4 	bl	8025e44 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800127c:	1d3b      	adds	r3, r7, #4
 800127e:	2220      	movs	r2, #32
 8001280:	2100      	movs	r1, #0
 8001282:	4618      	mov	r0, r3
 8001284:	f024 fdde 	bl	8025e44 <memset>

  /** Supply configuration update enable
  */
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 8001288:	2002      	movs	r0, #2
 800128a:	f005 fbdd 	bl	8006a48 <HAL_PWREx_ConfigSupply>

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 800128e:	2300      	movs	r3, #0
 8001290:	603b      	str	r3, [r7, #0]
 8001292:	4b2b      	ldr	r3, [pc, #172]	@ (8001340 <SystemClock_Config+0xd8>)
 8001294:	699b      	ldr	r3, [r3, #24]
 8001296:	4a2a      	ldr	r2, [pc, #168]	@ (8001340 <SystemClock_Config+0xd8>)
 8001298:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 800129c:	6193      	str	r3, [r2, #24]
 800129e:	4b28      	ldr	r3, [pc, #160]	@ (8001340 <SystemClock_Config+0xd8>)
 80012a0:	699b      	ldr	r3, [r3, #24]
 80012a2:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 80012a6:	603b      	str	r3, [r7, #0]
 80012a8:	683b      	ldr	r3, [r7, #0]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 80012aa:	bf00      	nop
 80012ac:	4b24      	ldr	r3, [pc, #144]	@ (8001340 <SystemClock_Config+0xd8>)
 80012ae:	699b      	ldr	r3, [r3, #24]
 80012b0:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 80012b4:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80012b8:	d1f8      	bne.n	80012ac <SystemClock_Config+0x44>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 80012ba:	2301      	movs	r3, #1
 80012bc:	627b      	str	r3, [r7, #36]	@ 0x24
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80012be:	f44f 3380 	mov.w	r3, #65536	@ 0x10000
 80012c2:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 80012c4:	2302      	movs	r3, #2
 80012c6:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80012c8:	2302      	movs	r3, #2
 80012ca:	64fb      	str	r3, [r7, #76]	@ 0x4c
  RCC_OscInitStruct.PLL.PLLM = 2;
 80012cc:	2302      	movs	r3, #2
 80012ce:	653b      	str	r3, [r7, #80]	@ 0x50
  RCC_OscInitStruct.PLL.PLLN = 44;
 80012d0:	232c      	movs	r3, #44	@ 0x2c
 80012d2:	657b      	str	r3, [r7, #84]	@ 0x54
  RCC_OscInitStruct.PLL.PLLP = 1;
 80012d4:	2301      	movs	r3, #1
 80012d6:	65bb      	str	r3, [r7, #88]	@ 0x58
  RCC_OscInitStruct.PLL.PLLQ = 2;
 80012d8:	2302      	movs	r3, #2
 80012da:	65fb      	str	r3, [r7, #92]	@ 0x5c
  RCC_OscInitStruct.PLL.PLLR = 2;
 80012dc:	2302      	movs	r3, #2
 80012de:	663b      	str	r3, [r7, #96]	@ 0x60
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 80012e0:	230c      	movs	r3, #12
 80012e2:	667b      	str	r3, [r7, #100]	@ 0x64
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 80012e4:	2300      	movs	r3, #0
 80012e6:	66bb      	str	r3, [r7, #104]	@ 0x68
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
 80012e8:	2300      	movs	r3, #0
 80012ea:	66fb      	str	r3, [r7, #108]	@ 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80012ec:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 80012f0:	4618      	mov	r0, r3
 80012f2:	f005 fbe3 	bl	8006abc <HAL_RCC_OscConfig>
 80012f6:	4603      	mov	r3, r0
 80012f8:	2b00      	cmp	r3, #0
 80012fa:	d001      	beq.n	8001300 <SystemClock_Config+0x98>
  {
    Error_Handler();
 80012fc:	f000 f822 	bl	8001344 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001300:	233f      	movs	r3, #63	@ 0x3f
 8001302:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
                              |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001304:	2303      	movs	r3, #3
 8001306:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 8001308:	2300      	movs	r3, #0
 800130a:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 800130c:	2308      	movs	r3, #8
 800130e:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 8001310:	2340      	movs	r3, #64	@ 0x40
 8001312:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 8001314:	2340      	movs	r3, #64	@ 0x40
 8001316:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 8001318:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800131c:	61fb      	str	r3, [r7, #28]
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 800131e:	2340      	movs	r3, #64	@ 0x40
 8001320:	623b      	str	r3, [r7, #32]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 8001322:	1d3b      	adds	r3, r7, #4
 8001324:	2103      	movs	r1, #3
 8001326:	4618      	mov	r0, r3
 8001328:	f005 ffa2 	bl	8007270 <HAL_RCC_ClockConfig>
 800132c:	4603      	mov	r3, r0
 800132e:	2b00      	cmp	r3, #0
 8001330:	d001      	beq.n	8001336 <SystemClock_Config+0xce>
  {
    Error_Handler();
 8001332:	f000 f807 	bl	8001344 <Error_Handler>
  }
}
 8001336:	bf00      	nop
 8001338:	3770      	adds	r7, #112	@ 0x70
 800133a:	46bd      	mov	sp, r7
 800133c:	bd80      	pop	{r7, pc}
 800133e:	bf00      	nop
 8001340:	58024800 	.word	0x58024800

08001344 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001344:	b480      	push	{r7}
 8001346:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001348:	b672      	cpsid	i
}
 800134a:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 800134c:	bf00      	nop
 800134e:	e7fd      	b.n	800134c <Error_Handler+0x8>

08001350 <MX_OCTOSPI1_Init>:

OSPI_HandleTypeDef hospi1;

/* OCTOSPI1 init function */
void MX_OCTOSPI1_Init(void)
{
 8001350:	b580      	push	{r7, lr}
 8001352:	b086      	sub	sp, #24
 8001354:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN OCTOSPI1_Init 0 */

  /* USER CODE END OCTOSPI1_Init 0 */

  OSPIM_CfgTypeDef sOspiManagerCfg = {0};
 8001356:	463b      	mov	r3, r7
 8001358:	2200      	movs	r2, #0
 800135a:	601a      	str	r2, [r3, #0]
 800135c:	605a      	str	r2, [r3, #4]
 800135e:	609a      	str	r2, [r3, #8]
 8001360:	60da      	str	r2, [r3, #12]
 8001362:	611a      	str	r2, [r3, #16]
 8001364:	615a      	str	r2, [r3, #20]

  /* USER CODE BEGIN OCTOSPI1_Init 1 */

  /* USER CODE END OCTOSPI1_Init 1 */
  hospi1.Instance = OCTOSPI1;
 8001366:	4b27      	ldr	r3, [pc, #156]	@ (8001404 <MX_OCTOSPI1_Init+0xb4>)
 8001368:	4a27      	ldr	r2, [pc, #156]	@ (8001408 <MX_OCTOSPI1_Init+0xb8>)
 800136a:	601a      	str	r2, [r3, #0]
  hospi1.Init.FifoThreshold = 23;
 800136c:	4b25      	ldr	r3, [pc, #148]	@ (8001404 <MX_OCTOSPI1_Init+0xb4>)
 800136e:	2217      	movs	r2, #23
 8001370:	605a      	str	r2, [r3, #4]
  hospi1.Init.DualQuad = HAL_OSPI_DUALQUAD_DISABLE;
 8001372:	4b24      	ldr	r3, [pc, #144]	@ (8001404 <MX_OCTOSPI1_Init+0xb4>)
 8001374:	2200      	movs	r2, #0
 8001376:	609a      	str	r2, [r3, #8]
  hospi1.Init.MemoryType = HAL_OSPI_MEMTYPE_MICRON;
 8001378:	4b22      	ldr	r3, [pc, #136]	@ (8001404 <MX_OCTOSPI1_Init+0xb4>)
 800137a:	2200      	movs	r2, #0
 800137c:	60da      	str	r2, [r3, #12]
  hospi1.Init.DeviceSize = 32;
 800137e:	4b21      	ldr	r3, [pc, #132]	@ (8001404 <MX_OCTOSPI1_Init+0xb4>)
 8001380:	2220      	movs	r2, #32
 8001382:	611a      	str	r2, [r3, #16]
  hospi1.Init.ChipSelectHighTime = 4;
 8001384:	4b1f      	ldr	r3, [pc, #124]	@ (8001404 <MX_OCTOSPI1_Init+0xb4>)
 8001386:	2204      	movs	r2, #4
 8001388:	615a      	str	r2, [r3, #20]
  hospi1.Init.FreeRunningClock = HAL_OSPI_FREERUNCLK_DISABLE;
 800138a:	4b1e      	ldr	r3, [pc, #120]	@ (8001404 <MX_OCTOSPI1_Init+0xb4>)
 800138c:	2200      	movs	r2, #0
 800138e:	619a      	str	r2, [r3, #24]
  hospi1.Init.ClockMode = HAL_OSPI_CLOCK_MODE_0;
 8001390:	4b1c      	ldr	r3, [pc, #112]	@ (8001404 <MX_OCTOSPI1_Init+0xb4>)
 8001392:	2200      	movs	r2, #0
 8001394:	61da      	str	r2, [r3, #28]
  hospi1.Init.WrapSize = HAL_OSPI_WRAP_NOT_SUPPORTED;
 8001396:	4b1b      	ldr	r3, [pc, #108]	@ (8001404 <MX_OCTOSPI1_Init+0xb4>)
 8001398:	2200      	movs	r2, #0
 800139a:	621a      	str	r2, [r3, #32]
  hospi1.Init.ClockPrescaler = 3;
 800139c:	4b19      	ldr	r3, [pc, #100]	@ (8001404 <MX_OCTOSPI1_Init+0xb4>)
 800139e:	2203      	movs	r2, #3
 80013a0:	625a      	str	r2, [r3, #36]	@ 0x24
  hospi1.Init.SampleShifting = HAL_OSPI_SAMPLE_SHIFTING_NONE;
 80013a2:	4b18      	ldr	r3, [pc, #96]	@ (8001404 <MX_OCTOSPI1_Init+0xb4>)
 80013a4:	2200      	movs	r2, #0
 80013a6:	629a      	str	r2, [r3, #40]	@ 0x28
  hospi1.Init.DelayHoldQuarterCycle = HAL_OSPI_DHQC_DISABLE;
 80013a8:	4b16      	ldr	r3, [pc, #88]	@ (8001404 <MX_OCTOSPI1_Init+0xb4>)
 80013aa:	2200      	movs	r2, #0
 80013ac:	62da      	str	r2, [r3, #44]	@ 0x2c
  hospi1.Init.ChipSelectBoundary = 0;
 80013ae:	4b15      	ldr	r3, [pc, #84]	@ (8001404 <MX_OCTOSPI1_Init+0xb4>)
 80013b0:	2200      	movs	r2, #0
 80013b2:	631a      	str	r2, [r3, #48]	@ 0x30
  hospi1.Init.DelayBlockBypass = HAL_OSPI_DELAY_BLOCK_BYPASSED;
 80013b4:	4b13      	ldr	r3, [pc, #76]	@ (8001404 <MX_OCTOSPI1_Init+0xb4>)
 80013b6:	2208      	movs	r2, #8
 80013b8:	635a      	str	r2, [r3, #52]	@ 0x34
  hospi1.Init.MaxTran = 0;
 80013ba:	4b12      	ldr	r3, [pc, #72]	@ (8001404 <MX_OCTOSPI1_Init+0xb4>)
 80013bc:	2200      	movs	r2, #0
 80013be:	639a      	str	r2, [r3, #56]	@ 0x38
  hospi1.Init.Refresh = 0;
 80013c0:	4b10      	ldr	r3, [pc, #64]	@ (8001404 <MX_OCTOSPI1_Init+0xb4>)
 80013c2:	2200      	movs	r2, #0
 80013c4:	63da      	str	r2, [r3, #60]	@ 0x3c
  if (HAL_OSPI_Init(&hospi1) != HAL_OK)
 80013c6:	480f      	ldr	r0, [pc, #60]	@ (8001404 <MX_OCTOSPI1_Init+0xb4>)
 80013c8:	f003 fffe 	bl	80053c8 <HAL_OSPI_Init>
 80013cc:	4603      	mov	r3, r0
 80013ce:	2b00      	cmp	r3, #0
 80013d0:	d001      	beq.n	80013d6 <MX_OCTOSPI1_Init+0x86>
  {
    Error_Handler();
 80013d2:	f7ff ffb7 	bl	8001344 <Error_Handler>
  }
  sOspiManagerCfg.ClkPort = 1;
 80013d6:	2301      	movs	r3, #1
 80013d8:	603b      	str	r3, [r7, #0]
  sOspiManagerCfg.NCSPort = 1;
 80013da:	2301      	movs	r3, #1
 80013dc:	60bb      	str	r3, [r7, #8]
  sOspiManagerCfg.IOLowPort = HAL_OSPIM_IOPORT_1_HIGH;
 80013de:	4b0b      	ldr	r3, [pc, #44]	@ (800140c <MX_OCTOSPI1_Init+0xbc>)
 80013e0:	60fb      	str	r3, [r7, #12]
  if (HAL_OSPIM_Config(&hospi1, &sOspiManagerCfg, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80013e2:	463b      	mov	r3, r7
 80013e4:	f241 3288 	movw	r2, #5000	@ 0x1388
 80013e8:	4619      	mov	r1, r3
 80013ea:	4806      	ldr	r0, [pc, #24]	@ (8001404 <MX_OCTOSPI1_Init+0xb4>)
 80013ec:	f004 fbd8 	bl	8005ba0 <HAL_OSPIM_Config>
 80013f0:	4603      	mov	r3, r0
 80013f2:	2b00      	cmp	r3, #0
 80013f4:	d001      	beq.n	80013fa <MX_OCTOSPI1_Init+0xaa>
  {
    Error_Handler();
 80013f6:	f7ff ffa5 	bl	8001344 <Error_Handler>
  }
  /* USER CODE BEGIN OCTOSPI1_Init 2 */

  /* USER CODE END OCTOSPI1_Init 2 */

}
 80013fa:	bf00      	nop
 80013fc:	3718      	adds	r7, #24
 80013fe:	46bd      	mov	sp, r7
 8001400:	bd80      	pop	{r7, pc}
 8001402:	bf00      	nop
 8001404:	240004dc 	.word	0x240004dc
 8001408:	52005000 	.word	0x52005000
 800140c:	01000001 	.word	0x01000001

08001410 <HAL_OSPI_MspInit>:

void HAL_OSPI_MspInit(OSPI_HandleTypeDef* ospiHandle)
{
 8001410:	b580      	push	{r7, lr}
 8001412:	b0bc      	sub	sp, #240	@ 0xf0
 8001414:	af00      	add	r7, sp, #0
 8001416:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001418:	f107 03dc 	add.w	r3, r7, #220	@ 0xdc
 800141c:	2200      	movs	r2, #0
 800141e:	601a      	str	r2, [r3, #0]
 8001420:	605a      	str	r2, [r3, #4]
 8001422:	609a      	str	r2, [r3, #8]
 8001424:	60da      	str	r2, [r3, #12]
 8001426:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001428:	f107 0320 	add.w	r3, r7, #32
 800142c:	22b8      	movs	r2, #184	@ 0xb8
 800142e:	2100      	movs	r1, #0
 8001430:	4618      	mov	r0, r3
 8001432:	f024 fd07 	bl	8025e44 <memset>
  if(ospiHandle->Instance==OCTOSPI1)
 8001436:	687b      	ldr	r3, [r7, #4]
 8001438:	681b      	ldr	r3, [r3, #0]
 800143a:	4a65      	ldr	r2, [pc, #404]	@ (80015d0 <HAL_OSPI_MspInit+0x1c0>)
 800143c:	4293      	cmp	r3, r2
 800143e:	f040 80c2 	bne.w	80015c6 <HAL_OSPI_MspInit+0x1b6>

  /* USER CODE END OCTOSPI1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_OSPI;
 8001442:	f04f 7200 	mov.w	r2, #33554432	@ 0x2000000
 8001446:	f04f 0300 	mov.w	r3, #0
 800144a:	e9c7 2308 	strd	r2, r3, [r7, #32]
    PeriphClkInitStruct.OspiClockSelection = RCC_OSPICLKSOURCE_D1HCLK;
 800144e:	2300      	movs	r3, #0
 8001450:	66fb      	str	r3, [r7, #108]	@ 0x6c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001452:	f107 0320 	add.w	r3, r7, #32
 8001456:	4618      	mov	r0, r3
 8001458:	f006 fa96 	bl	8007988 <HAL_RCCEx_PeriphCLKConfig>
 800145c:	4603      	mov	r3, r0
 800145e:	2b00      	cmp	r3, #0
 8001460:	d001      	beq.n	8001466 <HAL_OSPI_MspInit+0x56>
    {
      Error_Handler();
 8001462:	f7ff ff6f 	bl	8001344 <Error_Handler>
    }

    /* OCTOSPI1 clock enable */
    __HAL_RCC_OCTOSPIM_CLK_ENABLE();
 8001466:	4b5b      	ldr	r3, [pc, #364]	@ (80015d4 <HAL_OSPI_MspInit+0x1c4>)
 8001468:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 800146c:	4a59      	ldr	r2, [pc, #356]	@ (80015d4 <HAL_OSPI_MspInit+0x1c4>)
 800146e:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8001472:	f8c2 30d4 	str.w	r3, [r2, #212]	@ 0xd4
 8001476:	4b57      	ldr	r3, [pc, #348]	@ (80015d4 <HAL_OSPI_MspInit+0x1c4>)
 8001478:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 800147c:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8001480:	61fb      	str	r3, [r7, #28]
 8001482:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_OSPI1_CLK_ENABLE();
 8001484:	4b53      	ldr	r3, [pc, #332]	@ (80015d4 <HAL_OSPI_MspInit+0x1c4>)
 8001486:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 800148a:	4a52      	ldr	r2, [pc, #328]	@ (80015d4 <HAL_OSPI_MspInit+0x1c4>)
 800148c:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001490:	f8c2 30d4 	str.w	r3, [r2, #212]	@ 0xd4
 8001494:	4b4f      	ldr	r3, [pc, #316]	@ (80015d4 <HAL_OSPI_MspInit+0x1c4>)
 8001496:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 800149a:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 800149e:	61bb      	str	r3, [r7, #24]
 80014a0:	69bb      	ldr	r3, [r7, #24]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 80014a2:	4b4c      	ldr	r3, [pc, #304]	@ (80015d4 <HAL_OSPI_MspInit+0x1c4>)
 80014a4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80014a8:	4a4a      	ldr	r2, [pc, #296]	@ (80015d4 <HAL_OSPI_MspInit+0x1c4>)
 80014aa:	f043 0302 	orr.w	r3, r3, #2
 80014ae:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 80014b2:	4b48      	ldr	r3, [pc, #288]	@ (80015d4 <HAL_OSPI_MspInit+0x1c4>)
 80014b4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80014b8:	f003 0302 	and.w	r3, r3, #2
 80014bc:	617b      	str	r3, [r7, #20]
 80014be:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80014c0:	4b44      	ldr	r3, [pc, #272]	@ (80015d4 <HAL_OSPI_MspInit+0x1c4>)
 80014c2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80014c6:	4a43      	ldr	r2, [pc, #268]	@ (80015d4 <HAL_OSPI_MspInit+0x1c4>)
 80014c8:	f043 0304 	orr.w	r3, r3, #4
 80014cc:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 80014d0:	4b40      	ldr	r3, [pc, #256]	@ (80015d4 <HAL_OSPI_MspInit+0x1c4>)
 80014d2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80014d6:	f003 0304 	and.w	r3, r3, #4
 80014da:	613b      	str	r3, [r7, #16]
 80014dc:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80014de:	4b3d      	ldr	r3, [pc, #244]	@ (80015d4 <HAL_OSPI_MspInit+0x1c4>)
 80014e0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80014e4:	4a3b      	ldr	r2, [pc, #236]	@ (80015d4 <HAL_OSPI_MspInit+0x1c4>)
 80014e6:	f043 0308 	orr.w	r3, r3, #8
 80014ea:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 80014ee:	4b39      	ldr	r3, [pc, #228]	@ (80015d4 <HAL_OSPI_MspInit+0x1c4>)
 80014f0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 80014f4:	f003 0308 	and.w	r3, r3, #8
 80014f8:	60fb      	str	r3, [r7, #12]
 80014fa:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 80014fc:	4b35      	ldr	r3, [pc, #212]	@ (80015d4 <HAL_OSPI_MspInit+0x1c4>)
 80014fe:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001502:	4a34      	ldr	r2, [pc, #208]	@ (80015d4 <HAL_OSPI_MspInit+0x1c4>)
 8001504:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001508:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 800150c:	4b31      	ldr	r3, [pc, #196]	@ (80015d4 <HAL_OSPI_MspInit+0x1c4>)
 800150e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001512:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8001516:	60bb      	str	r3, [r7, #8]
 8001518:	68bb      	ldr	r3, [r7, #8]
    PD4     ------> OCTOSPIM_P1_IO4
    PD5     ------> OCTOSPIM_P1_IO5
    PD6     ------> OCTOSPIM_P1_IO6
    PG14     ------> OCTOSPIM_P1_IO7
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 800151a:	2304      	movs	r3, #4
 800151c:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001520:	2302      	movs	r3, #2
 8001522:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001526:	2300      	movs	r3, #0
 8001528:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800152c:	2303      	movs	r3, #3
 800152e:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
 8001532:	2309      	movs	r3, #9
 8001534:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001538:	f107 03dc 	add.w	r3, r7, #220	@ 0xdc
 800153c:	4619      	mov	r1, r3
 800153e:	4826      	ldr	r0, [pc, #152]	@ (80015d8 <HAL_OSPI_MspInit+0x1c8>)
 8001540:	f002 f962 	bl	8003808 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_11;
 8001544:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8001548:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800154c:	2302      	movs	r3, #2
 800154e:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001552:	2300      	movs	r3, #0
 8001554:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001558:	2303      	movs	r3, #3
 800155a:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
 800155e:	2309      	movs	r3, #9
 8001560:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001564:	f107 03dc 	add.w	r3, r7, #220	@ 0xdc
 8001568:	4619      	mov	r1, r3
 800156a:	481c      	ldr	r0, [pc, #112]	@ (80015dc <HAL_OSPI_MspInit+0x1cc>)
 800156c:	f002 f94c 	bl	8003808 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6;
 8001570:	2370      	movs	r3, #112	@ 0x70
 8001572:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001576:	2302      	movs	r3, #2
 8001578:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800157c:	2300      	movs	r3, #0
 800157e:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001582:	2303      	movs	r3, #3
 8001584:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF10_OCTOSPIM_P1;
 8001588:	230a      	movs	r3, #10
 800158a:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800158e:	f107 03dc 	add.w	r3, r7, #220	@ 0xdc
 8001592:	4619      	mov	r1, r3
 8001594:	4812      	ldr	r0, [pc, #72]	@ (80015e0 <HAL_OSPI_MspInit+0x1d0>)
 8001596:	f002 f937 	bl	8003808 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_14;
 800159a:	f44f 4380 	mov.w	r3, #16384	@ 0x4000
 800159e:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80015a2:	2302      	movs	r3, #2
 80015a4:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015a8:	2300      	movs	r3, #0
 80015aa:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80015ae:	2303      	movs	r3, #3
 80015b0:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
    GPIO_InitStruct.Alternate = GPIO_AF9_OCTOSPIM_P1;
 80015b4:	2309      	movs	r3, #9
 80015b6:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80015ba:	f107 03dc 	add.w	r3, r7, #220	@ 0xdc
 80015be:	4619      	mov	r1, r3
 80015c0:	4808      	ldr	r0, [pc, #32]	@ (80015e4 <HAL_OSPI_MspInit+0x1d4>)
 80015c2:	f002 f921 	bl	8003808 <HAL_GPIO_Init>

  /* USER CODE BEGIN OCTOSPI1_MspInit 1 */

  /* USER CODE END OCTOSPI1_MspInit 1 */
  }
}
 80015c6:	bf00      	nop
 80015c8:	37f0      	adds	r7, #240	@ 0xf0
 80015ca:	46bd      	mov	sp, r7
 80015cc:	bd80      	pop	{r7, pc}
 80015ce:	bf00      	nop
 80015d0:	52005000 	.word	0x52005000
 80015d4:	58024400 	.word	0x58024400
 80015d8:	58020400 	.word	0x58020400
 80015dc:	58020800 	.word	0x58020800
 80015e0:	58020c00 	.word	0x58020c00
 80015e4:	58021800 	.word	0x58021800

080015e8 <HAL_OSPI_MspDeInit>:

void HAL_OSPI_MspDeInit(OSPI_HandleTypeDef* ospiHandle)
{
 80015e8:	b580      	push	{r7, lr}
 80015ea:	b082      	sub	sp, #8
 80015ec:	af00      	add	r7, sp, #0
 80015ee:	6078      	str	r0, [r7, #4]

  if(ospiHandle->Instance==OCTOSPI1)
 80015f0:	687b      	ldr	r3, [r7, #4]
 80015f2:	681b      	ldr	r3, [r3, #0]
 80015f4:	4a14      	ldr	r2, [pc, #80]	@ (8001648 <HAL_OSPI_MspDeInit+0x60>)
 80015f6:	4293      	cmp	r3, r2
 80015f8:	d121      	bne.n	800163e <HAL_OSPI_MspDeInit+0x56>
  {
  /* USER CODE BEGIN OCTOSPI1_MspDeInit 0 */

  /* USER CODE END OCTOSPI1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_OCTOSPIM_CLK_DISABLE();
 80015fa:	4b14      	ldr	r3, [pc, #80]	@ (800164c <HAL_OSPI_MspDeInit+0x64>)
 80015fc:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 8001600:	4a12      	ldr	r2, [pc, #72]	@ (800164c <HAL_OSPI_MspDeInit+0x64>)
 8001602:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 8001606:	f8c2 30d4 	str.w	r3, [r2, #212]	@ 0xd4
    __HAL_RCC_OSPI1_CLK_DISABLE();
 800160a:	4b10      	ldr	r3, [pc, #64]	@ (800164c <HAL_OSPI_MspDeInit+0x64>)
 800160c:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 8001610:	4a0e      	ldr	r2, [pc, #56]	@ (800164c <HAL_OSPI_MspDeInit+0x64>)
 8001612:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8001616:	f8c2 30d4 	str.w	r3, [r2, #212]	@ 0xd4
    PD4     ------> OCTOSPIM_P1_IO4
    PD5     ------> OCTOSPIM_P1_IO5
    PD6     ------> OCTOSPIM_P1_IO6
    PG14     ------> OCTOSPIM_P1_IO7
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_2);
 800161a:	2104      	movs	r1, #4
 800161c:	480c      	ldr	r0, [pc, #48]	@ (8001650 <HAL_OSPI_MspDeInit+0x68>)
 800161e:	f002 fa9b 	bl	8003b58 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOC, GPIO_PIN_11);
 8001622:	f44f 6100 	mov.w	r1, #2048	@ 0x800
 8001626:	480b      	ldr	r0, [pc, #44]	@ (8001654 <HAL_OSPI_MspDeInit+0x6c>)
 8001628:	f002 fa96 	bl	8003b58 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOD, GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6);
 800162c:	2170      	movs	r1, #112	@ 0x70
 800162e:	480a      	ldr	r0, [pc, #40]	@ (8001658 <HAL_OSPI_MspDeInit+0x70>)
 8001630:	f002 fa92 	bl	8003b58 <HAL_GPIO_DeInit>

    HAL_GPIO_DeInit(GPIOG, GPIO_PIN_14);
 8001634:	f44f 4180 	mov.w	r1, #16384	@ 0x4000
 8001638:	4808      	ldr	r0, [pc, #32]	@ (800165c <HAL_OSPI_MspDeInit+0x74>)
 800163a:	f002 fa8d 	bl	8003b58 <HAL_GPIO_DeInit>

  /* USER CODE BEGIN OCTOSPI1_MspDeInit 1 */

  /* USER CODE END OCTOSPI1_MspDeInit 1 */
  }
}
 800163e:	bf00      	nop
 8001640:	3708      	adds	r7, #8
 8001642:	46bd      	mov	sp, r7
 8001644:	bd80      	pop	{r7, pc}
 8001646:	bf00      	nop
 8001648:	52005000 	.word	0x52005000
 800164c:	58024400 	.word	0x58024400
 8001650:	58020400 	.word	0x58020400
 8001654:	58020800 	.word	0x58020800
 8001658:	58020c00 	.word	0x58020c00
 800165c:	58021800 	.word	0x58021800

08001660 <MX_SPI5_Init>:

SPI_HandleTypeDef hspi5;

/* SPI5 init function */
void MX_SPI5_Init(void)
{
 8001660:	b580      	push	{r7, lr}
 8001662:	af00      	add	r7, sp, #0
  /* USER CODE END SPI5_Init 0 */

  /* USER CODE BEGIN SPI5_Init 1 */

  /* USER CODE END SPI5_Init 1 */
  hspi5.Instance = SPI5;
 8001664:	4b28      	ldr	r3, [pc, #160]	@ (8001708 <MX_SPI5_Init+0xa8>)
 8001666:	4a29      	ldr	r2, [pc, #164]	@ (800170c <MX_SPI5_Init+0xac>)
 8001668:	601a      	str	r2, [r3, #0]
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800166a:	4b27      	ldr	r3, [pc, #156]	@ (8001708 <MX_SPI5_Init+0xa8>)
 800166c:	f44f 0280 	mov.w	r2, #4194304	@ 0x400000
 8001670:	605a      	str	r2, [r3, #4]
  hspi5.Init.Direction = SPI_DIRECTION_2LINES_TXONLY;
 8001672:	4b25      	ldr	r3, [pc, #148]	@ (8001708 <MX_SPI5_Init+0xa8>)
 8001674:	f44f 3200 	mov.w	r2, #131072	@ 0x20000
 8001678:	609a      	str	r2, [r3, #8]
  hspi5.Init.DataSize = SPI_DATASIZE_9BIT;
 800167a:	4b23      	ldr	r3, [pc, #140]	@ (8001708 <MX_SPI5_Init+0xa8>)
 800167c:	2208      	movs	r2, #8
 800167e:	60da      	str	r2, [r3, #12]
  hspi5.Init.CLKPolarity = SPI_POLARITY_LOW;
 8001680:	4b21      	ldr	r3, [pc, #132]	@ (8001708 <MX_SPI5_Init+0xa8>)
 8001682:	2200      	movs	r2, #0
 8001684:	611a      	str	r2, [r3, #16]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001686:	4b20      	ldr	r3, [pc, #128]	@ (8001708 <MX_SPI5_Init+0xa8>)
 8001688:	2200      	movs	r2, #0
 800168a:	615a      	str	r2, [r3, #20]
  hspi5.Init.NSS = SPI_NSS_SOFT;
 800168c:	4b1e      	ldr	r3, [pc, #120]	@ (8001708 <MX_SPI5_Init+0xa8>)
 800168e:	f04f 6280 	mov.w	r2, #67108864	@ 0x4000000
 8001692:	619a      	str	r2, [r3, #24]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001694:	4b1c      	ldr	r3, [pc, #112]	@ (8001708 <MX_SPI5_Init+0xa8>)
 8001696:	f04f 5240 	mov.w	r2, #805306368	@ 0x30000000
 800169a:	61da      	str	r2, [r3, #28]
  hspi5.Init.FirstBit = SPI_FIRSTBIT_MSB;
 800169c:	4b1a      	ldr	r3, [pc, #104]	@ (8001708 <MX_SPI5_Init+0xa8>)
 800169e:	2200      	movs	r2, #0
 80016a0:	621a      	str	r2, [r3, #32]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 80016a2:	4b19      	ldr	r3, [pc, #100]	@ (8001708 <MX_SPI5_Init+0xa8>)
 80016a4:	2200      	movs	r2, #0
 80016a6:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80016a8:	4b17      	ldr	r3, [pc, #92]	@ (8001708 <MX_SPI5_Init+0xa8>)
 80016aa:	2200      	movs	r2, #0
 80016ac:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi5.Init.CRCPolynomial = 0x0;
 80016ae:	4b16      	ldr	r3, [pc, #88]	@ (8001708 <MX_SPI5_Init+0xa8>)
 80016b0:	2200      	movs	r2, #0
 80016b2:	62da      	str	r2, [r3, #44]	@ 0x2c
  hspi5.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 80016b4:	4b14      	ldr	r3, [pc, #80]	@ (8001708 <MX_SPI5_Init+0xa8>)
 80016b6:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80016ba:	635a      	str	r2, [r3, #52]	@ 0x34
  hspi5.Init.NSSPolarity = SPI_NSS_POLARITY_LOW;
 80016bc:	4b12      	ldr	r3, [pc, #72]	@ (8001708 <MX_SPI5_Init+0xa8>)
 80016be:	2200      	movs	r2, #0
 80016c0:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi5.Init.FifoThreshold = SPI_FIFO_THRESHOLD_01DATA;
 80016c2:	4b11      	ldr	r3, [pc, #68]	@ (8001708 <MX_SPI5_Init+0xa8>)
 80016c4:	2200      	movs	r2, #0
 80016c6:	63da      	str	r2, [r3, #60]	@ 0x3c
  hspi5.Init.TxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 80016c8:	4b0f      	ldr	r3, [pc, #60]	@ (8001708 <MX_SPI5_Init+0xa8>)
 80016ca:	2200      	movs	r2, #0
 80016cc:	641a      	str	r2, [r3, #64]	@ 0x40
  hspi5.Init.RxCRCInitializationPattern = SPI_CRC_INITIALIZATION_ALL_ZERO_PATTERN;
 80016ce:	4b0e      	ldr	r3, [pc, #56]	@ (8001708 <MX_SPI5_Init+0xa8>)
 80016d0:	2200      	movs	r2, #0
 80016d2:	645a      	str	r2, [r3, #68]	@ 0x44
  hspi5.Init.MasterSSIdleness = SPI_MASTER_SS_IDLENESS_00CYCLE;
 80016d4:	4b0c      	ldr	r3, [pc, #48]	@ (8001708 <MX_SPI5_Init+0xa8>)
 80016d6:	2200      	movs	r2, #0
 80016d8:	649a      	str	r2, [r3, #72]	@ 0x48
  hspi5.Init.MasterInterDataIdleness = SPI_MASTER_INTERDATA_IDLENESS_00CYCLE;
 80016da:	4b0b      	ldr	r3, [pc, #44]	@ (8001708 <MX_SPI5_Init+0xa8>)
 80016dc:	2200      	movs	r2, #0
 80016de:	64da      	str	r2, [r3, #76]	@ 0x4c
  hspi5.Init.MasterReceiverAutoSusp = SPI_MASTER_RX_AUTOSUSP_DISABLE;
 80016e0:	4b09      	ldr	r3, [pc, #36]	@ (8001708 <MX_SPI5_Init+0xa8>)
 80016e2:	2200      	movs	r2, #0
 80016e4:	651a      	str	r2, [r3, #80]	@ 0x50
  hspi5.Init.MasterKeepIOState = SPI_MASTER_KEEP_IO_STATE_DISABLE;
 80016e6:	4b08      	ldr	r3, [pc, #32]	@ (8001708 <MX_SPI5_Init+0xa8>)
 80016e8:	2200      	movs	r2, #0
 80016ea:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi5.Init.IOSwap = SPI_IO_SWAP_DISABLE;
 80016ec:	4b06      	ldr	r3, [pc, #24]	@ (8001708 <MX_SPI5_Init+0xa8>)
 80016ee:	2200      	movs	r2, #0
 80016f0:	659a      	str	r2, [r3, #88]	@ 0x58
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 80016f2:	4805      	ldr	r0, [pc, #20]	@ (8001708 <MX_SPI5_Init+0xa8>)
 80016f4:	f007 ffa4 	bl	8009640 <HAL_SPI_Init>
 80016f8:	4603      	mov	r3, r0
 80016fa:	2b00      	cmp	r3, #0
 80016fc:	d001      	beq.n	8001702 <MX_SPI5_Init+0xa2>
  {
    Error_Handler();
 80016fe:	f7ff fe21 	bl	8001344 <Error_Handler>
  }
  /* USER CODE BEGIN SPI5_Init 2 */

  /* USER CODE END SPI5_Init 2 */

}
 8001702:	bf00      	nop
 8001704:	bd80      	pop	{r7, pc}
 8001706:	bf00      	nop
 8001708:	24000538 	.word	0x24000538
 800170c:	40015000 	.word	0x40015000

08001710 <HAL_SPI_MspInit>:

void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
{
 8001710:	b580      	push	{r7, lr}
 8001712:	b0b8      	sub	sp, #224	@ 0xe0
 8001714:	af00      	add	r7, sp, #0
 8001716:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001718:	f107 03cc 	add.w	r3, r7, #204	@ 0xcc
 800171c:	2200      	movs	r2, #0
 800171e:	601a      	str	r2, [r3, #0]
 8001720:	605a      	str	r2, [r3, #4]
 8001722:	609a      	str	r2, [r3, #8]
 8001724:	60da      	str	r2, [r3, #12]
 8001726:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001728:	f107 0310 	add.w	r3, r7, #16
 800172c:	22b8      	movs	r2, #184	@ 0xb8
 800172e:	2100      	movs	r1, #0
 8001730:	4618      	mov	r0, r3
 8001732:	f024 fb87 	bl	8025e44 <memset>
  if(spiHandle->Instance==SPI5)
 8001736:	687b      	ldr	r3, [r7, #4]
 8001738:	681b      	ldr	r3, [r3, #0]
 800173a:	4a26      	ldr	r2, [pc, #152]	@ (80017d4 <HAL_SPI_MspInit+0xc4>)
 800173c:	4293      	cmp	r3, r2
 800173e:	d145      	bne.n	80017cc <HAL_SPI_MspInit+0xbc>

  /* USER CODE END SPI5_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_SPI5;
 8001740:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001744:	f04f 0300 	mov.w	r3, #0
 8001748:	e9c7 2304 	strd	r2, r3, [r7, #16]
    PeriphClkInitStruct.Spi45ClockSelection = RCC_SPI45CLKSOURCE_D2PCLK1;
 800174c:	2300      	movs	r3, #0
 800174e:	673b      	str	r3, [r7, #112]	@ 0x70
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001750:	f107 0310 	add.w	r3, r7, #16
 8001754:	4618      	mov	r0, r3
 8001756:	f006 f917 	bl	8007988 <HAL_RCCEx_PeriphCLKConfig>
 800175a:	4603      	mov	r3, r0
 800175c:	2b00      	cmp	r3, #0
 800175e:	d001      	beq.n	8001764 <HAL_SPI_MspInit+0x54>
    {
      Error_Handler();
 8001760:	f7ff fdf0 	bl	8001344 <Error_Handler>
    }

    /* SPI5 clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001764:	4b1c      	ldr	r3, [pc, #112]	@ (80017d8 <HAL_SPI_MspInit+0xc8>)
 8001766:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 800176a:	4a1b      	ldr	r2, [pc, #108]	@ (80017d8 <HAL_SPI_MspInit+0xc8>)
 800176c:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8001770:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8001774:	4b18      	ldr	r3, [pc, #96]	@ (80017d8 <HAL_SPI_MspInit+0xc8>)
 8001776:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 800177a:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 800177e:	60fb      	str	r3, [r7, #12]
 8001780:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001782:	4b15      	ldr	r3, [pc, #84]	@ (80017d8 <HAL_SPI_MspInit+0xc8>)
 8001784:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001788:	4a13      	ldr	r2, [pc, #76]	@ (80017d8 <HAL_SPI_MspInit+0xc8>)
 800178a:	f043 0320 	orr.w	r3, r3, #32
 800178e:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8001792:	4b11      	ldr	r3, [pc, #68]	@ (80017d8 <HAL_SPI_MspInit+0xc8>)
 8001794:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001798:	f003 0320 	and.w	r3, r3, #32
 800179c:	60bb      	str	r3, [r7, #8]
 800179e:	68bb      	ldr	r3, [r7, #8]
    /**SPI5 GPIO Configuration
    PF7     ------> SPI5_SCK
    PF9     ------> SPI5_MOSI
    */
    GPIO_InitStruct.Pin = LCD_SPI_CLK_Pin|LCD_SPI_DAT_Pin;
 80017a0:	f44f 7320 	mov.w	r3, #640	@ 0x280
 80017a4:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80017a8:	2302      	movs	r3, #2
 80017aa:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017ae:	2300      	movs	r3, #0
 80017b0:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80017b4:	2302      	movs	r3, #2
 80017b6:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 80017ba:	2305      	movs	r3, #5
 80017bc:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80017c0:	f107 03cc 	add.w	r3, r7, #204	@ 0xcc
 80017c4:	4619      	mov	r1, r3
 80017c6:	4805      	ldr	r0, [pc, #20]	@ (80017dc <HAL_SPI_MspInit+0xcc>)
 80017c8:	f002 f81e 	bl	8003808 <HAL_GPIO_Init>

  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }
}
 80017cc:	bf00      	nop
 80017ce:	37e0      	adds	r7, #224	@ 0xe0
 80017d0:	46bd      	mov	sp, r7
 80017d2:	bd80      	pop	{r7, pc}
 80017d4:	40015000 	.word	0x40015000
 80017d8:	58024400 	.word	0x58024400
 80017dc:	58021400 	.word	0x58021400

080017e0 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80017e0:	b480      	push	{r7}
 80017e2:	b083      	sub	sp, #12
 80017e4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80017e6:	4b0a      	ldr	r3, [pc, #40]	@ (8001810 <HAL_MspInit+0x30>)
 80017e8:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 80017ec:	4a08      	ldr	r2, [pc, #32]	@ (8001810 <HAL_MspInit+0x30>)
 80017ee:	f043 0302 	orr.w	r3, r3, #2
 80017f2:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
 80017f6:	4b06      	ldr	r3, [pc, #24]	@ (8001810 <HAL_MspInit+0x30>)
 80017f8:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 80017fc:	f003 0302 	and.w	r3, r3, #2
 8001800:	607b      	str	r3, [r7, #4]
 8001802:	687b      	ldr	r3, [r7, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001804:	bf00      	nop
 8001806:	370c      	adds	r7, #12
 8001808:	46bd      	mov	sp, r7
 800180a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800180e:	4770      	bx	lr
 8001810:	58024400 	.word	0x58024400

08001814 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001814:	b480      	push	{r7}
 8001816:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001818:	bf00      	nop
 800181a:	e7fd      	b.n	8001818 <NMI_Handler+0x4>

0800181c <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800181c:	b480      	push	{r7}
 800181e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001820:	bf00      	nop
 8001822:	e7fd      	b.n	8001820 <HardFault_Handler+0x4>

08001824 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001824:	b480      	push	{r7}
 8001826:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001828:	bf00      	nop
 800182a:	e7fd      	b.n	8001828 <MemManage_Handler+0x4>

0800182c <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800182c:	b480      	push	{r7}
 800182e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001830:	bf00      	nop
 8001832:	e7fd      	b.n	8001830 <BusFault_Handler+0x4>

08001834 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001834:	b480      	push	{r7}
 8001836:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001838:	bf00      	nop
 800183a:	e7fd      	b.n	8001838 <UsageFault_Handler+0x4>

0800183c <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800183c:	b480      	push	{r7}
 800183e:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001840:	bf00      	nop
 8001842:	46bd      	mov	sp, r7
 8001844:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001848:	4770      	bx	lr

0800184a <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800184a:	b480      	push	{r7}
 800184c:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800184e:	bf00      	nop
 8001850:	46bd      	mov	sp, r7
 8001852:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001856:	4770      	bx	lr

08001858 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001858:	b480      	push	{r7}
 800185a:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800185c:	bf00      	nop
 800185e:	46bd      	mov	sp, r7
 8001860:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001864:	4770      	bx	lr

08001866 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001866:	b580      	push	{r7, lr}
 8001868:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800186a:	f001 fc75 	bl	8003158 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 800186e:	bf00      	nop
 8001870:	bd80      	pop	{r7, pc}
	...

08001874 <LTDC_IRQHandler>:

/**
  * @brief This function handles LTDC global interrupt.
  */
void LTDC_IRQHandler(void)
{
 8001874:	b580      	push	{r7, lr}
 8001876:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001878:	4802      	ldr	r0, [pc, #8]	@ (8001884 <LTDC_IRQHandler+0x10>)
 800187a:	f003 fa81 	bl	8004d80 <HAL_LTDC_IRQHandler>
  /* USER CODE BEGIN LTDC_IRQn 1 */

  /* USER CODE END LTDC_IRQn 1 */
}
 800187e:	bf00      	nop
 8001880:	bd80      	pop	{r7, pc}
 8001882:	bf00      	nop
 8001884:	24000434 	.word	0x24000434

08001888 <LTDC_ER_IRQHandler>:

/**
  * @brief This function handles LTDC Error global Interrupt.
  */
void LTDC_ER_IRQHandler(void)
{
 8001888:	b580      	push	{r7, lr}
 800188a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN LTDC_ER_IRQn 0 */

  /* USER CODE END LTDC_ER_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 800188c:	4802      	ldr	r0, [pc, #8]	@ (8001898 <LTDC_ER_IRQHandler+0x10>)
 800188e:	f003 fa77 	bl	8004d80 <HAL_LTDC_IRQHandler>
  /* USER CODE BEGIN LTDC_ER_IRQn 1 */

  /* USER CODE END LTDC_ER_IRQn 1 */
}
 8001892:	bf00      	nop
 8001894:	bd80      	pop	{r7, pc}
 8001896:	bf00      	nop
 8001898:	24000434 	.word	0x24000434

0800189c <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 800189c:	b480      	push	{r7}
 800189e:	af00      	add	r7, sp, #0
  return 1;
 80018a0:	2301      	movs	r3, #1
}
 80018a2:	4618      	mov	r0, r3
 80018a4:	46bd      	mov	sp, r7
 80018a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018aa:	4770      	bx	lr

080018ac <_kill>:

int _kill(int pid, int sig)
{
 80018ac:	b580      	push	{r7, lr}
 80018ae:	b082      	sub	sp, #8
 80018b0:	af00      	add	r7, sp, #0
 80018b2:	6078      	str	r0, [r7, #4]
 80018b4:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80018b6:	f024 fb67 	bl	8025f88 <__errno>
 80018ba:	4603      	mov	r3, r0
 80018bc:	2216      	movs	r2, #22
 80018be:	601a      	str	r2, [r3, #0]
  return -1;
 80018c0:	f04f 33ff 	mov.w	r3, #4294967295
}
 80018c4:	4618      	mov	r0, r3
 80018c6:	3708      	adds	r7, #8
 80018c8:	46bd      	mov	sp, r7
 80018ca:	bd80      	pop	{r7, pc}

080018cc <_exit>:

void _exit (int status)
{
 80018cc:	b580      	push	{r7, lr}
 80018ce:	b082      	sub	sp, #8
 80018d0:	af00      	add	r7, sp, #0
 80018d2:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 80018d4:	f04f 31ff 	mov.w	r1, #4294967295
 80018d8:	6878      	ldr	r0, [r7, #4]
 80018da:	f7ff ffe7 	bl	80018ac <_kill>
  while (1) {}    /* Make sure we hang here */
 80018de:	bf00      	nop
 80018e0:	e7fd      	b.n	80018de <_exit+0x12>

080018e2 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80018e2:	b580      	push	{r7, lr}
 80018e4:	b086      	sub	sp, #24
 80018e6:	af00      	add	r7, sp, #0
 80018e8:	60f8      	str	r0, [r7, #12]
 80018ea:	60b9      	str	r1, [r7, #8]
 80018ec:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80018ee:	2300      	movs	r3, #0
 80018f0:	617b      	str	r3, [r7, #20]
 80018f2:	e00a      	b.n	800190a <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80018f4:	f3af 8000 	nop.w
 80018f8:	4601      	mov	r1, r0
 80018fa:	68bb      	ldr	r3, [r7, #8]
 80018fc:	1c5a      	adds	r2, r3, #1
 80018fe:	60ba      	str	r2, [r7, #8]
 8001900:	b2ca      	uxtb	r2, r1
 8001902:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001904:	697b      	ldr	r3, [r7, #20]
 8001906:	3301      	adds	r3, #1
 8001908:	617b      	str	r3, [r7, #20]
 800190a:	697a      	ldr	r2, [r7, #20]
 800190c:	687b      	ldr	r3, [r7, #4]
 800190e:	429a      	cmp	r2, r3
 8001910:	dbf0      	blt.n	80018f4 <_read+0x12>
  }

  return len;
 8001912:	687b      	ldr	r3, [r7, #4]
}
 8001914:	4618      	mov	r0, r3
 8001916:	3718      	adds	r7, #24
 8001918:	46bd      	mov	sp, r7
 800191a:	bd80      	pop	{r7, pc}

0800191c <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800191c:	b580      	push	{r7, lr}
 800191e:	b084      	sub	sp, #16
 8001920:	af00      	add	r7, sp, #0
 8001922:	60f8      	str	r0, [r7, #12]
 8001924:	60b9      	str	r1, [r7, #8]
 8001926:	607a      	str	r2, [r7, #4]
//  for (DataIdx = 0; DataIdx < len; DataIdx++)
//  {
//    __io_putchar(*ptr++);
//  }

  HAL_UART_Transmit(&huart1, (const uint8_t *)ptr, len, 100);
 8001928:	687b      	ldr	r3, [r7, #4]
 800192a:	b29a      	uxth	r2, r3
 800192c:	2364      	movs	r3, #100	@ 0x64
 800192e:	68b9      	ldr	r1, [r7, #8]
 8001930:	4803      	ldr	r0, [pc, #12]	@ (8001940 <_write+0x24>)
 8001932:	f009 f966 	bl	800ac02 <HAL_UART_Transmit>

  return len;
 8001936:	687b      	ldr	r3, [r7, #4]
}
 8001938:	4618      	mov	r0, r3
 800193a:	3710      	adds	r7, #16
 800193c:	46bd      	mov	sp, r7
 800193e:	bd80      	pop	{r7, pc}
 8001940:	24000610 	.word	0x24000610

08001944 <_close>:

int _close(int file)
{
 8001944:	b480      	push	{r7}
 8001946:	b083      	sub	sp, #12
 8001948:	af00      	add	r7, sp, #0
 800194a:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800194c:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001950:	4618      	mov	r0, r3
 8001952:	370c      	adds	r7, #12
 8001954:	46bd      	mov	sp, r7
 8001956:	f85d 7b04 	ldr.w	r7, [sp], #4
 800195a:	4770      	bx	lr

0800195c <_fstat>:


int _fstat(int file, struct stat *st)
{
 800195c:	b480      	push	{r7}
 800195e:	b083      	sub	sp, #12
 8001960:	af00      	add	r7, sp, #0
 8001962:	6078      	str	r0, [r7, #4]
 8001964:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8001966:	683b      	ldr	r3, [r7, #0]
 8001968:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800196c:	605a      	str	r2, [r3, #4]
  return 0;
 800196e:	2300      	movs	r3, #0
}
 8001970:	4618      	mov	r0, r3
 8001972:	370c      	adds	r7, #12
 8001974:	46bd      	mov	sp, r7
 8001976:	f85d 7b04 	ldr.w	r7, [sp], #4
 800197a:	4770      	bx	lr

0800197c <_isatty>:

int _isatty(int file)
{
 800197c:	b480      	push	{r7}
 800197e:	b083      	sub	sp, #12
 8001980:	af00      	add	r7, sp, #0
 8001982:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8001984:	2301      	movs	r3, #1
}
 8001986:	4618      	mov	r0, r3
 8001988:	370c      	adds	r7, #12
 800198a:	46bd      	mov	sp, r7
 800198c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001990:	4770      	bx	lr

08001992 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001992:	b480      	push	{r7}
 8001994:	b085      	sub	sp, #20
 8001996:	af00      	add	r7, sp, #0
 8001998:	60f8      	str	r0, [r7, #12]
 800199a:	60b9      	str	r1, [r7, #8]
 800199c:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800199e:	2300      	movs	r3, #0
}
 80019a0:	4618      	mov	r0, r3
 80019a2:	3714      	adds	r7, #20
 80019a4:	46bd      	mov	sp, r7
 80019a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019aa:	4770      	bx	lr

080019ac <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80019ac:	b580      	push	{r7, lr}
 80019ae:	b086      	sub	sp, #24
 80019b0:	af00      	add	r7, sp, #0
 80019b2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80019b4:	4a14      	ldr	r2, [pc, #80]	@ (8001a08 <_sbrk+0x5c>)
 80019b6:	4b15      	ldr	r3, [pc, #84]	@ (8001a0c <_sbrk+0x60>)
 80019b8:	1ad3      	subs	r3, r2, r3
 80019ba:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80019bc:	697b      	ldr	r3, [r7, #20]
 80019be:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80019c0:	4b13      	ldr	r3, [pc, #76]	@ (8001a10 <_sbrk+0x64>)
 80019c2:	681b      	ldr	r3, [r3, #0]
 80019c4:	2b00      	cmp	r3, #0
 80019c6:	d102      	bne.n	80019ce <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80019c8:	4b11      	ldr	r3, [pc, #68]	@ (8001a10 <_sbrk+0x64>)
 80019ca:	4a12      	ldr	r2, [pc, #72]	@ (8001a14 <_sbrk+0x68>)
 80019cc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80019ce:	4b10      	ldr	r3, [pc, #64]	@ (8001a10 <_sbrk+0x64>)
 80019d0:	681a      	ldr	r2, [r3, #0]
 80019d2:	687b      	ldr	r3, [r7, #4]
 80019d4:	4413      	add	r3, r2
 80019d6:	693a      	ldr	r2, [r7, #16]
 80019d8:	429a      	cmp	r2, r3
 80019da:	d207      	bcs.n	80019ec <_sbrk+0x40>
  {
    errno = ENOMEM;
 80019dc:	f024 fad4 	bl	8025f88 <__errno>
 80019e0:	4603      	mov	r3, r0
 80019e2:	220c      	movs	r2, #12
 80019e4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80019e6:	f04f 33ff 	mov.w	r3, #4294967295
 80019ea:	e009      	b.n	8001a00 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80019ec:	4b08      	ldr	r3, [pc, #32]	@ (8001a10 <_sbrk+0x64>)
 80019ee:	681b      	ldr	r3, [r3, #0]
 80019f0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80019f2:	4b07      	ldr	r3, [pc, #28]	@ (8001a10 <_sbrk+0x64>)
 80019f4:	681a      	ldr	r2, [r3, #0]
 80019f6:	687b      	ldr	r3, [r7, #4]
 80019f8:	4413      	add	r3, r2
 80019fa:	4a05      	ldr	r2, [pc, #20]	@ (8001a10 <_sbrk+0x64>)
 80019fc:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80019fe:	68fb      	ldr	r3, [r7, #12]
}
 8001a00:	4618      	mov	r0, r3
 8001a02:	3718      	adds	r7, #24
 8001a04:	46bd      	mov	sp, r7
 8001a06:	bd80      	pop	{r7, pc}
 8001a08:	24050000 	.word	0x24050000
 8001a0c:	00000400 	.word	0x00000400
 8001a10:	240005c0 	.word	0x240005c0
 8001a14:	24002768 	.word	0x24002768

08001a18 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8001a18:	b480      	push	{r7}
 8001a1a:	af00      	add	r7, sp, #0
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
 8001a1c:	4b32      	ldr	r3, [pc, #200]	@ (8001ae8 <SystemInit+0xd0>)
 8001a1e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8001a22:	4a31      	ldr	r2, [pc, #196]	@ (8001ae8 <SystemInit+0xd0>)
 8001a24:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001a28:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/

   /* Increasing the CPU frequency */
  if(FLASH_LATENCY_DEFAULT  > (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 8001a2c:	4b2f      	ldr	r3, [pc, #188]	@ (8001aec <SystemInit+0xd4>)
 8001a2e:	681b      	ldr	r3, [r3, #0]
 8001a30:	f003 030f 	and.w	r3, r3, #15
 8001a34:	2b06      	cmp	r3, #6
 8001a36:	d807      	bhi.n	8001a48 <SystemInit+0x30>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 8001a38:	4b2c      	ldr	r3, [pc, #176]	@ (8001aec <SystemInit+0xd4>)
 8001a3a:	681b      	ldr	r3, [r3, #0]
 8001a3c:	f023 030f 	bic.w	r3, r3, #15
 8001a40:	4a2a      	ldr	r2, [pc, #168]	@ (8001aec <SystemInit+0xd4>)
 8001a42:	f043 0307 	orr.w	r3, r3, #7
 8001a46:	6013      	str	r3, [r2, #0]
  }

  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;
 8001a48:	4b29      	ldr	r3, [pc, #164]	@ (8001af0 <SystemInit+0xd8>)
 8001a4a:	681b      	ldr	r3, [r3, #0]
 8001a4c:	4a28      	ldr	r2, [pc, #160]	@ (8001af0 <SystemInit+0xd8>)
 8001a4e:	f043 0301 	orr.w	r3, r3, #1
 8001a52:	6013      	str	r3, [r2, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 8001a54:	4b26      	ldr	r3, [pc, #152]	@ (8001af0 <SystemInit+0xd8>)
 8001a56:	2200      	movs	r2, #0
 8001a58:	611a      	str	r2, [r3, #16]

  /* Reset HSEON, HSECSSON, CSION, HSI48ON, CSIKERON, PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
 8001a5a:	4b25      	ldr	r3, [pc, #148]	@ (8001af0 <SystemInit+0xd8>)
 8001a5c:	681a      	ldr	r2, [r3, #0]
 8001a5e:	4924      	ldr	r1, [pc, #144]	@ (8001af0 <SystemInit+0xd8>)
 8001a60:	4b24      	ldr	r3, [pc, #144]	@ (8001af4 <SystemInit+0xdc>)
 8001a62:	4013      	ands	r3, r2
 8001a64:	600b      	str	r3, [r1, #0]

   /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLASH_LATENCY_DEFAULT  < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 8001a66:	4b21      	ldr	r3, [pc, #132]	@ (8001aec <SystemInit+0xd4>)
 8001a68:	681b      	ldr	r3, [r3, #0]
 8001a6a:	f003 0308 	and.w	r3, r3, #8
 8001a6e:	2b00      	cmp	r3, #0
 8001a70:	d007      	beq.n	8001a82 <SystemInit+0x6a>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 8001a72:	4b1e      	ldr	r3, [pc, #120]	@ (8001aec <SystemInit+0xd4>)
 8001a74:	681b      	ldr	r3, [r3, #0]
 8001a76:	f023 030f 	bic.w	r3, r3, #15
 8001a7a:	4a1c      	ldr	r2, [pc, #112]	@ (8001aec <SystemInit+0xd4>)
 8001a7c:	f043 0307 	orr.w	r3, r3, #7
 8001a80:	6013      	str	r3, [r2, #0]
  }

#if defined(D3_SRAM_BASE)
  /* Reset D1CFGR register */
  RCC->D1CFGR = 0x00000000;
 8001a82:	4b1b      	ldr	r3, [pc, #108]	@ (8001af0 <SystemInit+0xd8>)
 8001a84:	2200      	movs	r2, #0
 8001a86:	619a      	str	r2, [r3, #24]

  /* Reset D2CFGR register */
  RCC->D2CFGR = 0x00000000;
 8001a88:	4b19      	ldr	r3, [pc, #100]	@ (8001af0 <SystemInit+0xd8>)
 8001a8a:	2200      	movs	r2, #0
 8001a8c:	61da      	str	r2, [r3, #28]

  /* Reset D3CFGR register */
  RCC->D3CFGR = 0x00000000;
 8001a8e:	4b18      	ldr	r3, [pc, #96]	@ (8001af0 <SystemInit+0xd8>)
 8001a90:	2200      	movs	r2, #0
 8001a92:	621a      	str	r2, [r3, #32]

  /* Reset SRDCFGR register */
  RCC->SRDCFGR = 0x00000000;
#endif
  /* Reset PLLCKSELR register */
  RCC->PLLCKSELR = 0x02020200;
 8001a94:	4b16      	ldr	r3, [pc, #88]	@ (8001af0 <SystemInit+0xd8>)
 8001a96:	4a18      	ldr	r2, [pc, #96]	@ (8001af8 <SystemInit+0xe0>)
 8001a98:	629a      	str	r2, [r3, #40]	@ 0x28

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x01FF0000;
 8001a9a:	4b15      	ldr	r3, [pc, #84]	@ (8001af0 <SystemInit+0xd8>)
 8001a9c:	4a17      	ldr	r2, [pc, #92]	@ (8001afc <SystemInit+0xe4>)
 8001a9e:	62da      	str	r2, [r3, #44]	@ 0x2c
  /* Reset PLL1DIVR register */
  RCC->PLL1DIVR = 0x01010280;
 8001aa0:	4b13      	ldr	r3, [pc, #76]	@ (8001af0 <SystemInit+0xd8>)
 8001aa2:	4a17      	ldr	r2, [pc, #92]	@ (8001b00 <SystemInit+0xe8>)
 8001aa4:	631a      	str	r2, [r3, #48]	@ 0x30
  /* Reset PLL1FRACR register */
  RCC->PLL1FRACR = 0x00000000;
 8001aa6:	4b12      	ldr	r3, [pc, #72]	@ (8001af0 <SystemInit+0xd8>)
 8001aa8:	2200      	movs	r2, #0
 8001aaa:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Reset PLL2DIVR register */
  RCC->PLL2DIVR = 0x01010280;
 8001aac:	4b10      	ldr	r3, [pc, #64]	@ (8001af0 <SystemInit+0xd8>)
 8001aae:	4a14      	ldr	r2, [pc, #80]	@ (8001b00 <SystemInit+0xe8>)
 8001ab0:	639a      	str	r2, [r3, #56]	@ 0x38

  /* Reset PLL2FRACR register */

  RCC->PLL2FRACR = 0x00000000;
 8001ab2:	4b0f      	ldr	r3, [pc, #60]	@ (8001af0 <SystemInit+0xd8>)
 8001ab4:	2200      	movs	r2, #0
 8001ab6:	63da      	str	r2, [r3, #60]	@ 0x3c
  /* Reset PLL3DIVR register */
  RCC->PLL3DIVR = 0x01010280;
 8001ab8:	4b0d      	ldr	r3, [pc, #52]	@ (8001af0 <SystemInit+0xd8>)
 8001aba:	4a11      	ldr	r2, [pc, #68]	@ (8001b00 <SystemInit+0xe8>)
 8001abc:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Reset PLL3FRACR register */
  RCC->PLL3FRACR = 0x00000000;
 8001abe:	4b0c      	ldr	r3, [pc, #48]	@ (8001af0 <SystemInit+0xd8>)
 8001ac0:	2200      	movs	r2, #0
 8001ac2:	645a      	str	r2, [r3, #68]	@ 0x44

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 8001ac4:	4b0a      	ldr	r3, [pc, #40]	@ (8001af0 <SystemInit+0xd8>)
 8001ac6:	681b      	ldr	r3, [r3, #0]
 8001ac8:	4a09      	ldr	r2, [pc, #36]	@ (8001af0 <SystemInit+0xd8>)
 8001aca:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8001ace:	6013      	str	r3, [r2, #0]

  /* Disable all interrupts */
  RCC->CIER = 0x00000000;
 8001ad0:	4b07      	ldr	r3, [pc, #28]	@ (8001af0 <SystemInit+0xd8>)
 8001ad2:	2200      	movs	r2, #0
 8001ad4:	661a      	str	r2, [r3, #96]	@ 0x60
  /*
   * Disable the FMC bank1 (enabled after reset).
   * This, prevents CPU speculation access on this bank which blocks the use of FMC during
   * 24us. During this time the others FMC master (such as LTDC) cannot use it!
   */
  FMC_Bank1_R->BTCR[0] = 0x000030D2;
 8001ad6:	4b0b      	ldr	r3, [pc, #44]	@ (8001b04 <SystemInit+0xec>)
 8001ad8:	f243 02d2 	movw	r2, #12498	@ 0x30d2
 8001adc:	601a      	str	r2, [r3, #0]
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM or in Internal FLASH */
#endif /* USER_VECT_TAB_ADDRESS */

#endif /*DUAL_CORE && CORE_CM4*/
}
 8001ade:	bf00      	nop
 8001ae0:	46bd      	mov	sp, r7
 8001ae2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001ae6:	4770      	bx	lr
 8001ae8:	e000ed00 	.word	0xe000ed00
 8001aec:	52002000 	.word	0x52002000
 8001af0:	58024400 	.word	0x58024400
 8001af4:	eaf6ed7f 	.word	0xeaf6ed7f
 8001af8:	02020200 	.word	0x02020200
 8001afc:	01ff0000 	.word	0x01ff0000
 8001b00:	01010280 	.word	0x01010280
 8001b04:	52004000 	.word	0x52004000

08001b08 <MX_TIM13_Init>:

TIM_HandleTypeDef htim13;

/* TIM13 init function */
void MX_TIM13_Init(void)
{
 8001b08:	b580      	push	{r7, lr}
 8001b0a:	b088      	sub	sp, #32
 8001b0c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM13_Init 0 */

  /* USER CODE END TIM13_Init 0 */

  TIM_OC_InitTypeDef sConfigOC = {0};
 8001b0e:	1d3b      	adds	r3, r7, #4
 8001b10:	2200      	movs	r2, #0
 8001b12:	601a      	str	r2, [r3, #0]
 8001b14:	605a      	str	r2, [r3, #4]
 8001b16:	609a      	str	r2, [r3, #8]
 8001b18:	60da      	str	r2, [r3, #12]
 8001b1a:	611a      	str	r2, [r3, #16]
 8001b1c:	615a      	str	r2, [r3, #20]
 8001b1e:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM13_Init 1 */

  /* USER CODE END TIM13_Init 1 */
  htim13.Instance = TIM13;
 8001b20:	4b1d      	ldr	r3, [pc, #116]	@ (8001b98 <MX_TIM13_Init+0x90>)
 8001b22:	4a1e      	ldr	r2, [pc, #120]	@ (8001b9c <MX_TIM13_Init+0x94>)
 8001b24:	601a      	str	r2, [r3, #0]
  htim13.Init.Prescaler = 53;
 8001b26:	4b1c      	ldr	r3, [pc, #112]	@ (8001b98 <MX_TIM13_Init+0x90>)
 8001b28:	2235      	movs	r2, #53	@ 0x35
 8001b2a:	605a      	str	r2, [r3, #4]
  htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001b2c:	4b1a      	ldr	r3, [pc, #104]	@ (8001b98 <MX_TIM13_Init+0x90>)
 8001b2e:	2200      	movs	r2, #0
 8001b30:	609a      	str	r2, [r3, #8]
  htim13.Init.Period = 255;
 8001b32:	4b19      	ldr	r3, [pc, #100]	@ (8001b98 <MX_TIM13_Init+0x90>)
 8001b34:	22ff      	movs	r2, #255	@ 0xff
 8001b36:	60da      	str	r2, [r3, #12]
  htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001b38:	4b17      	ldr	r3, [pc, #92]	@ (8001b98 <MX_TIM13_Init+0x90>)
 8001b3a:	2200      	movs	r2, #0
 8001b3c:	611a      	str	r2, [r3, #16]
  htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001b3e:	4b16      	ldr	r3, [pc, #88]	@ (8001b98 <MX_TIM13_Init+0x90>)
 8001b40:	2200      	movs	r2, #0
 8001b42:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 8001b44:	4814      	ldr	r0, [pc, #80]	@ (8001b98 <MX_TIM13_Init+0x90>)
 8001b46:	f008 f976 	bl	8009e36 <HAL_TIM_Base_Init>
 8001b4a:	4603      	mov	r3, r0
 8001b4c:	2b00      	cmp	r3, #0
 8001b4e:	d001      	beq.n	8001b54 <MX_TIM13_Init+0x4c>
  {
    Error_Handler();
 8001b50:	f7ff fbf8 	bl	8001344 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim13) != HAL_OK)
 8001b54:	4810      	ldr	r0, [pc, #64]	@ (8001b98 <MX_TIM13_Init+0x90>)
 8001b56:	f008 f9c5 	bl	8009ee4 <HAL_TIM_PWM_Init>
 8001b5a:	4603      	mov	r3, r0
 8001b5c:	2b00      	cmp	r3, #0
 8001b5e:	d001      	beq.n	8001b64 <MX_TIM13_Init+0x5c>
  {
    Error_Handler();
 8001b60:	f7ff fbf0 	bl	8001344 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001b64:	2360      	movs	r3, #96	@ 0x60
 8001b66:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8001b68:	2300      	movs	r3, #0
 8001b6a:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001b6c:	2300      	movs	r3, #0
 8001b6e:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8001b70:	2300      	movs	r3, #0
 8001b72:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim13, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001b74:	1d3b      	adds	r3, r7, #4
 8001b76:	2200      	movs	r2, #0
 8001b78:	4619      	mov	r1, r3
 8001b7a:	4807      	ldr	r0, [pc, #28]	@ (8001b98 <MX_TIM13_Init+0x90>)
 8001b7c:	f008 fb30 	bl	800a1e0 <HAL_TIM_PWM_ConfigChannel>
 8001b80:	4603      	mov	r3, r0
 8001b82:	2b00      	cmp	r3, #0
 8001b84:	d001      	beq.n	8001b8a <MX_TIM13_Init+0x82>
  {
    Error_Handler();
 8001b86:	f7ff fbdd 	bl	8001344 <Error_Handler>
  }
  /* USER CODE BEGIN TIM13_Init 2 */

  /* USER CODE END TIM13_Init 2 */
  HAL_TIM_MspPostInit(&htim13);
 8001b8a:	4803      	ldr	r0, [pc, #12]	@ (8001b98 <MX_TIM13_Init+0x90>)
 8001b8c:	f000 f82a 	bl	8001be4 <HAL_TIM_MspPostInit>

}
 8001b90:	bf00      	nop
 8001b92:	3720      	adds	r7, #32
 8001b94:	46bd      	mov	sp, r7
 8001b96:	bd80      	pop	{r7, pc}
 8001b98:	240005c4 	.word	0x240005c4
 8001b9c:	40001c00 	.word	0x40001c00

08001ba0 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 8001ba0:	b480      	push	{r7}
 8001ba2:	b085      	sub	sp, #20
 8001ba4:	af00      	add	r7, sp, #0
 8001ba6:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM13)
 8001ba8:	687b      	ldr	r3, [r7, #4]
 8001baa:	681b      	ldr	r3, [r3, #0]
 8001bac:	4a0b      	ldr	r2, [pc, #44]	@ (8001bdc <HAL_TIM_Base_MspInit+0x3c>)
 8001bae:	4293      	cmp	r3, r2
 8001bb0:	d10e      	bne.n	8001bd0 <HAL_TIM_Base_MspInit+0x30>
  {
  /* USER CODE BEGIN TIM13_MspInit 0 */

  /* USER CODE END TIM13_MspInit 0 */
    /* TIM13 clock enable */
    __HAL_RCC_TIM13_CLK_ENABLE();
 8001bb2:	4b0b      	ldr	r3, [pc, #44]	@ (8001be0 <HAL_TIM_Base_MspInit+0x40>)
 8001bb4:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8001bb8:	4a09      	ldr	r2, [pc, #36]	@ (8001be0 <HAL_TIM_Base_MspInit+0x40>)
 8001bba:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001bbe:	f8c2 30e8 	str.w	r3, [r2, #232]	@ 0xe8
 8001bc2:	4b07      	ldr	r3, [pc, #28]	@ (8001be0 <HAL_TIM_Base_MspInit+0x40>)
 8001bc4:	f8d3 30e8 	ldr.w	r3, [r3, #232]	@ 0xe8
 8001bc8:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8001bcc:	60fb      	str	r3, [r7, #12]
 8001bce:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM13_MspInit 1 */

  /* USER CODE END TIM13_MspInit 1 */
  }
}
 8001bd0:	bf00      	nop
 8001bd2:	3714      	adds	r7, #20
 8001bd4:	46bd      	mov	sp, r7
 8001bd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bda:	4770      	bx	lr
 8001bdc:	40001c00 	.word	0x40001c00
 8001be0:	58024400 	.word	0x58024400

08001be4 <HAL_TIM_MspPostInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
{
 8001be4:	b580      	push	{r7, lr}
 8001be6:	b088      	sub	sp, #32
 8001be8:	af00      	add	r7, sp, #0
 8001bea:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001bec:	f107 030c 	add.w	r3, r7, #12
 8001bf0:	2200      	movs	r2, #0
 8001bf2:	601a      	str	r2, [r3, #0]
 8001bf4:	605a      	str	r2, [r3, #4]
 8001bf6:	609a      	str	r2, [r3, #8]
 8001bf8:	60da      	str	r2, [r3, #12]
 8001bfa:	611a      	str	r2, [r3, #16]
  if(timHandle->Instance==TIM13)
 8001bfc:	687b      	ldr	r3, [r7, #4]
 8001bfe:	681b      	ldr	r3, [r3, #0]
 8001c00:	4a13      	ldr	r2, [pc, #76]	@ (8001c50 <HAL_TIM_MspPostInit+0x6c>)
 8001c02:	4293      	cmp	r3, r2
 8001c04:	d11f      	bne.n	8001c46 <HAL_TIM_MspPostInit+0x62>
  {
  /* USER CODE BEGIN TIM13_MspPostInit 0 */

  /* USER CODE END TIM13_MspPostInit 0 */

    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c06:	4b13      	ldr	r3, [pc, #76]	@ (8001c54 <HAL_TIM_MspPostInit+0x70>)
 8001c08:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001c0c:	4a11      	ldr	r2, [pc, #68]	@ (8001c54 <HAL_TIM_MspPostInit+0x70>)
 8001c0e:	f043 0320 	orr.w	r3, r3, #32
 8001c12:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8001c16:	4b0f      	ldr	r3, [pc, #60]	@ (8001c54 <HAL_TIM_MspPostInit+0x70>)
 8001c18:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001c1c:	f003 0320 	and.w	r3, r3, #32
 8001c20:	60bb      	str	r3, [r7, #8]
 8001c22:	68bb      	ldr	r3, [r7, #8]
    /**TIM13 GPIO Configuration
    PF8     ------> TIM13_CH1
    */
    GPIO_InitStruct.Pin = LCD_BLK_Pin;
 8001c24:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8001c28:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c2a:	2302      	movs	r3, #2
 8001c2c:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c2e:	2300      	movs	r3, #0
 8001c30:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001c32:	2300      	movs	r3, #0
 8001c34:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM13;
 8001c36:	2309      	movs	r3, #9
 8001c38:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(LCD_BLK_GPIO_Port, &GPIO_InitStruct);
 8001c3a:	f107 030c 	add.w	r3, r7, #12
 8001c3e:	4619      	mov	r1, r3
 8001c40:	4805      	ldr	r0, [pc, #20]	@ (8001c58 <HAL_TIM_MspPostInit+0x74>)
 8001c42:	f001 fde1 	bl	8003808 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM13_MspPostInit 1 */

  /* USER CODE END TIM13_MspPostInit 1 */
  }

}
 8001c46:	bf00      	nop
 8001c48:	3720      	adds	r7, #32
 8001c4a:	46bd      	mov	sp, r7
 8001c4c:	bd80      	pop	{r7, pc}
 8001c4e:	bf00      	nop
 8001c50:	40001c00 	.word	0x40001c00
 8001c54:	58024400 	.word	0x58024400
 8001c58:	58021400 	.word	0x58021400

08001c5c <MX_USART1_UART_Init>:
UART_HandleTypeDef huart1;

/* USART1 init function */

void MX_USART1_UART_Init(void)
{
 8001c5c:	b580      	push	{r7, lr}
 8001c5e:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8001c60:	4b22      	ldr	r3, [pc, #136]	@ (8001cec <MX_USART1_UART_Init+0x90>)
 8001c62:	4a23      	ldr	r2, [pc, #140]	@ (8001cf0 <MX_USART1_UART_Init+0x94>)
 8001c64:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 8001c66:	4b21      	ldr	r3, [pc, #132]	@ (8001cec <MX_USART1_UART_Init+0x90>)
 8001c68:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 8001c6c:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8001c6e:	4b1f      	ldr	r3, [pc, #124]	@ (8001cec <MX_USART1_UART_Init+0x90>)
 8001c70:	2200      	movs	r2, #0
 8001c72:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8001c74:	4b1d      	ldr	r3, [pc, #116]	@ (8001cec <MX_USART1_UART_Init+0x90>)
 8001c76:	2200      	movs	r2, #0
 8001c78:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8001c7a:	4b1c      	ldr	r3, [pc, #112]	@ (8001cec <MX_USART1_UART_Init+0x90>)
 8001c7c:	2200      	movs	r2, #0
 8001c7e:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8001c80:	4b1a      	ldr	r3, [pc, #104]	@ (8001cec <MX_USART1_UART_Init+0x90>)
 8001c82:	220c      	movs	r2, #12
 8001c84:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8001c86:	4b19      	ldr	r3, [pc, #100]	@ (8001cec <MX_USART1_UART_Init+0x90>)
 8001c88:	2200      	movs	r2, #0
 8001c8a:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8001c8c:	4b17      	ldr	r3, [pc, #92]	@ (8001cec <MX_USART1_UART_Init+0x90>)
 8001c8e:	2200      	movs	r2, #0
 8001c90:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8001c92:	4b16      	ldr	r3, [pc, #88]	@ (8001cec <MX_USART1_UART_Init+0x90>)
 8001c94:	2200      	movs	r2, #0
 8001c96:	621a      	str	r2, [r3, #32]
  huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 8001c98:	4b14      	ldr	r3, [pc, #80]	@ (8001cec <MX_USART1_UART_Init+0x90>)
 8001c9a:	2200      	movs	r2, #0
 8001c9c:	625a      	str	r2, [r3, #36]	@ 0x24
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8001c9e:	4b13      	ldr	r3, [pc, #76]	@ (8001cec <MX_USART1_UART_Init+0x90>)
 8001ca0:	2200      	movs	r2, #0
 8001ca2:	629a      	str	r2, [r3, #40]	@ 0x28
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8001ca4:	4811      	ldr	r0, [pc, #68]	@ (8001cec <MX_USART1_UART_Init+0x90>)
 8001ca6:	f008 ff5c 	bl	800ab62 <HAL_UART_Init>
 8001caa:	4603      	mov	r3, r0
 8001cac:	2b00      	cmp	r3, #0
 8001cae:	d001      	beq.n	8001cb4 <MX_USART1_UART_Init+0x58>
  {
    Error_Handler();
 8001cb0:	f7ff fb48 	bl	8001344 <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8001cb4:	2100      	movs	r1, #0
 8001cb6:	480d      	ldr	r0, [pc, #52]	@ (8001cec <MX_USART1_UART_Init+0x90>)
 8001cb8:	f00a f8f7 	bl	800beaa <HAL_UARTEx_SetTxFifoThreshold>
 8001cbc:	4603      	mov	r3, r0
 8001cbe:	2b00      	cmp	r3, #0
 8001cc0:	d001      	beq.n	8001cc6 <MX_USART1_UART_Init+0x6a>
  {
    Error_Handler();
 8001cc2:	f7ff fb3f 	bl	8001344 <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 8001cc6:	2100      	movs	r1, #0
 8001cc8:	4808      	ldr	r0, [pc, #32]	@ (8001cec <MX_USART1_UART_Init+0x90>)
 8001cca:	f00a f92c 	bl	800bf26 <HAL_UARTEx_SetRxFifoThreshold>
 8001cce:	4603      	mov	r3, r0
 8001cd0:	2b00      	cmp	r3, #0
 8001cd2:	d001      	beq.n	8001cd8 <MX_USART1_UART_Init+0x7c>
  {
    Error_Handler();
 8001cd4:	f7ff fb36 	bl	8001344 <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
 8001cd8:	4804      	ldr	r0, [pc, #16]	@ (8001cec <MX_USART1_UART_Init+0x90>)
 8001cda:	f00a f8ad 	bl	800be38 <HAL_UARTEx_DisableFifoMode>
 8001cde:	4603      	mov	r3, r0
 8001ce0:	2b00      	cmp	r3, #0
 8001ce2:	d001      	beq.n	8001ce8 <MX_USART1_UART_Init+0x8c>
  {
    Error_Handler();
 8001ce4:	f7ff fb2e 	bl	8001344 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8001ce8:	bf00      	nop
 8001cea:	bd80      	pop	{r7, pc}
 8001cec:	24000610 	.word	0x24000610
 8001cf0:	40011000 	.word	0x40011000

08001cf4 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 8001cf4:	b580      	push	{r7, lr}
 8001cf6:	b0b8      	sub	sp, #224	@ 0xe0
 8001cf8:	af00      	add	r7, sp, #0
 8001cfa:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001cfc:	f107 03cc 	add.w	r3, r7, #204	@ 0xcc
 8001d00:	2200      	movs	r2, #0
 8001d02:	601a      	str	r2, [r3, #0]
 8001d04:	605a      	str	r2, [r3, #4]
 8001d06:	609a      	str	r2, [r3, #8]
 8001d08:	60da      	str	r2, [r3, #12]
 8001d0a:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001d0c:	f107 0310 	add.w	r3, r7, #16
 8001d10:	22b8      	movs	r2, #184	@ 0xb8
 8001d12:	2100      	movs	r1, #0
 8001d14:	4618      	mov	r0, r3
 8001d16:	f024 f895 	bl	8025e44 <memset>
  if(uartHandle->Instance==USART1)
 8001d1a:	687b      	ldr	r3, [r7, #4]
 8001d1c:	681b      	ldr	r3, [r3, #0]
 8001d1e:	4a27      	ldr	r2, [pc, #156]	@ (8001dbc <HAL_UART_MspInit+0xc8>)
 8001d20:	4293      	cmp	r3, r2
 8001d22:	d146      	bne.n	8001db2 <HAL_UART_MspInit+0xbe>

  /* USER CODE END USART1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 8001d24:	f04f 0201 	mov.w	r2, #1
 8001d28:	f04f 0300 	mov.w	r3, #0
 8001d2c:	e9c7 2304 	strd	r2, r3, [r7, #16]
    PeriphClkInitStruct.Usart16ClockSelection = RCC_USART16910CLKSOURCE_D2PCLK2;
 8001d30:	2300      	movs	r3, #0
 8001d32:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001d36:	f107 0310 	add.w	r3, r7, #16
 8001d3a:	4618      	mov	r0, r3
 8001d3c:	f005 fe24 	bl	8007988 <HAL_RCCEx_PeriphCLKConfig>
 8001d40:	4603      	mov	r3, r0
 8001d42:	2b00      	cmp	r3, #0
 8001d44:	d001      	beq.n	8001d4a <HAL_UART_MspInit+0x56>
    {
      Error_Handler();
 8001d46:	f7ff fafd 	bl	8001344 <Error_Handler>
    }

    /* USART1 clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8001d4a:	4b1d      	ldr	r3, [pc, #116]	@ (8001dc0 <HAL_UART_MspInit+0xcc>)
 8001d4c:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8001d50:	4a1b      	ldr	r2, [pc, #108]	@ (8001dc0 <HAL_UART_MspInit+0xcc>)
 8001d52:	f043 0310 	orr.w	r3, r3, #16
 8001d56:	f8c2 30f0 	str.w	r3, [r2, #240]	@ 0xf0
 8001d5a:	4b19      	ldr	r3, [pc, #100]	@ (8001dc0 <HAL_UART_MspInit+0xcc>)
 8001d5c:	f8d3 30f0 	ldr.w	r3, [r3, #240]	@ 0xf0
 8001d60:	f003 0310 	and.w	r3, r3, #16
 8001d64:	60fb      	str	r3, [r7, #12]
 8001d66:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001d68:	4b15      	ldr	r3, [pc, #84]	@ (8001dc0 <HAL_UART_MspInit+0xcc>)
 8001d6a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001d6e:	4a14      	ldr	r2, [pc, #80]	@ (8001dc0 <HAL_UART_MspInit+0xcc>)
 8001d70:	f043 0302 	orr.w	r3, r3, #2
 8001d74:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8001d78:	4b11      	ldr	r3, [pc, #68]	@ (8001dc0 <HAL_UART_MspInit+0xcc>)
 8001d7a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8001d7e:	f003 0302 	and.w	r3, r3, #2
 8001d82:	60bb      	str	r3, [r7, #8]
 8001d84:	68bb      	ldr	r3, [r7, #8]
    /**USART1 GPIO Configuration
    PB14     ------> USART1_TX
    PB15     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
 8001d86:	f44f 4340 	mov.w	r3, #49152	@ 0xc000
 8001d8a:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d8e:	2302      	movs	r3, #2
 8001d90:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d94:	2300      	movs	r3, #0
 8001d96:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001d9a:	2300      	movs	r3, #0
 8001d9c:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
    GPIO_InitStruct.Alternate = GPIO_AF4_USART1;
 8001da0:	2304      	movs	r3, #4
 8001da2:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001da6:	f107 03cc 	add.w	r3, r7, #204	@ 0xcc
 8001daa:	4619      	mov	r1, r3
 8001dac:	4805      	ldr	r0, [pc, #20]	@ (8001dc4 <HAL_UART_MspInit+0xd0>)
 8001dae:	f001 fd2b 	bl	8003808 <HAL_GPIO_Init>

  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }
}
 8001db2:	bf00      	nop
 8001db4:	37e0      	adds	r7, #224	@ 0xe0
 8001db6:	46bd      	mov	sp, r7
 8001db8:	bd80      	pop	{r7, pc}
 8001dba:	bf00      	nop
 8001dbc:	40011000 	.word	0x40011000
 8001dc0:	58024400 	.word	0x58024400
 8001dc4:	58020400 	.word	0x58020400

08001dc8 <gt911Init>:




bool gt911Init(void)
{
 8001dc8:	b580      	push	{r7, lr}
 8001dca:	b086      	sub	sp, #24
 8001dcc:	af00      	add	r7, sp, #0
  bool ret = false;
 8001dce:	2300      	movs	r3, #0
 8001dd0:	75fb      	strb	r3, [r7, #23]



  // I2C Addr for 0x5D
  //
  HAL_GPIO_WritePin(LCD_TP_RESET_GPIO_Port, LCD_TP_RESET_Pin, GPIO_PIN_RESET);
 8001dd2:	2200      	movs	r2, #0
 8001dd4:	2110      	movs	r1, #16
 8001dd6:	4822      	ldr	r0, [pc, #136]	@ (8001e60 <gt911Init+0x98>)
 8001dd8:	f001 ffd8 	bl	8003d8c <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(LCD_TP_INT_GPIO_Port, LCD_TP_INT_Pin, GPIO_PIN_RESET);
 8001ddc:	2200      	movs	r2, #0
 8001dde:	2110      	movs	r1, #16
 8001de0:	4820      	ldr	r0, [pc, #128]	@ (8001e64 <gt911Init+0x9c>)
 8001de2:	f001 ffd3 	bl	8003d8c <HAL_GPIO_WritePin>
  HAL_Delay(10);
 8001de6:	200a      	movs	r0, #10
 8001de8:	f001 f9d6 	bl	8003198 <HAL_Delay>
  HAL_GPIO_WritePin(LCD_TP_RESET_GPIO_Port, LCD_TP_RESET_Pin, GPIO_PIN_SET);
 8001dec:	2201      	movs	r2, #1
 8001dee:	2110      	movs	r1, #16
 8001df0:	481b      	ldr	r0, [pc, #108]	@ (8001e60 <gt911Init+0x98>)
 8001df2:	f001 ffcb 	bl	8003d8c <HAL_GPIO_WritePin>
  HAL_Delay(50);
 8001df6:	2032      	movs	r0, #50	@ 0x32
 8001df8:	f001 f9ce 	bl	8003198 <HAL_Delay>


  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001dfc:	463b      	mov	r3, r7
 8001dfe:	2200      	movs	r2, #0
 8001e00:	601a      	str	r2, [r3, #0]
 8001e02:	605a      	str	r2, [r3, #4]
 8001e04:	609a      	str	r2, [r3, #8]
 8001e06:	60da      	str	r2, [r3, #12]
 8001e08:	611a      	str	r2, [r3, #16]

  GPIO_InitStruct.Pin = LCD_TP_INT_Pin;
 8001e0a:	2310      	movs	r3, #16
 8001e0c:	603b      	str	r3, [r7, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001e0e:	2300      	movs	r3, #0
 8001e10:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001e12:	2300      	movs	r3, #0
 8001e14:	60bb      	str	r3, [r7, #8]
  HAL_GPIO_Init(LCD_TP_INT_GPIO_Port, &GPIO_InitStruct);
 8001e16:	463b      	mov	r3, r7
 8001e18:	4619      	mov	r1, r3
 8001e1a:	4812      	ldr	r0, [pc, #72]	@ (8001e64 <gt911Init+0x9c>)
 8001e1c:	f001 fcf4 	bl	8003808 <HAL_GPIO_Init>


  if (HAL_I2C_IsDeviceReady(&hi2c1, i2c_addr << 1, 10, 10) == HAL_OK)
 8001e20:	4b11      	ldr	r3, [pc, #68]	@ (8001e68 <gt911Init+0xa0>)
 8001e22:	781b      	ldrb	r3, [r3, #0]
 8001e24:	005b      	lsls	r3, r3, #1
 8001e26:	b299      	uxth	r1, r3
 8001e28:	230a      	movs	r3, #10
 8001e2a:	220a      	movs	r2, #10
 8001e2c:	480f      	ldr	r0, [pc, #60]	@ (8001e6c <gt911Init+0xa4>)
 8001e2e:	f002 fa91 	bl	8004354 <HAL_I2C_IsDeviceReady>
 8001e32:	4603      	mov	r3, r0
 8001e34:	2b00      	cmp	r3, #0
 8001e36:	d102      	bne.n	8001e3e <gt911Init+0x76>
  {
    is_detected = true;
 8001e38:	4b0d      	ldr	r3, [pc, #52]	@ (8001e70 <gt911Init+0xa8>)
 8001e3a:	2201      	movs	r2, #1
 8001e3c:	701a      	strb	r2, [r3, #0]
  }

  if (is_detected == true)
 8001e3e:	4b0c      	ldr	r3, [pc, #48]	@ (8001e70 <gt911Init+0xa8>)
 8001e40:	781b      	ldrb	r3, [r3, #0]
 8001e42:	2b00      	cmp	r3, #0
 8001e44:	d003      	beq.n	8001e4e <gt911Init+0x86>
  {
    ret = gt911InitRegs();
 8001e46:	f000 f817 	bl	8001e78 <gt911InitRegs>
 8001e4a:	4603      	mov	r3, r0
 8001e4c:	75fb      	strb	r3, [r7, #23]
  }

  is_init = ret;
 8001e4e:	4a09      	ldr	r2, [pc, #36]	@ (8001e74 <gt911Init+0xac>)
 8001e50:	7dfb      	ldrb	r3, [r7, #23]
 8001e52:	7013      	strb	r3, [r2, #0]

  return ret;
 8001e54:	7dfb      	ldrb	r3, [r7, #23]
}
 8001e56:	4618      	mov	r0, r3
 8001e58:	3718      	adds	r7, #24
 8001e5a:	46bd      	mov	sp, r7
 8001e5c:	bd80      	pop	{r7, pc}
 8001e5e:	bf00      	nop
 8001e60:	58021000 	.word	0x58021000
 8001e64:	58020400 	.word	0x58020400
 8001e68:	2400000c 	.word	0x2400000c
 8001e6c:	240003e0 	.word	0x240003e0
 8001e70:	240006a5 	.word	0x240006a5
 8001e74:	240006a4 	.word	0x240006a4

08001e78 <gt911InitRegs>:

bool gt911InitRegs(void)
{
 8001e78:	b580      	push	{r7, lr}
 8001e7a:	b0b2      	sub	sp, #200	@ 0xc8
 8001e7c:	af00      	add	r7, sp, #0
  uint8_t CTP_CFG_GT911[184] =
 8001e7e:	4a5e      	ldr	r2, [pc, #376]	@ (8001ff8 <gt911InitRegs+0x180>)
 8001e80:	f107 0308 	add.w	r3, r7, #8
 8001e84:	4611      	mov	r1, r2
 8001e86:	22b8      	movs	r2, #184	@ 0xb8
 8001e88:	4618      	mov	r0, r3
 8001e8a:	f024 f8aa 	bl	8025fe2 <memcpy>
    //  FB   FC   FD   FE
      0x00,0x00,0x00,0x00,//0x24,0x00,
  };


  CTP_CFG_GT911[(0xB7-0x47) + 0 ] = 28;
 8001e8e:	231c      	movs	r3, #28
 8001e90:	f887 3078 	strb.w	r3, [r7, #120]	@ 0x78
  CTP_CFG_GT911[(0xB7-0x47) + 1 ] = 26;
 8001e94:	231a      	movs	r3, #26
 8001e96:	f887 3079 	strb.w	r3, [r7, #121]	@ 0x79
  CTP_CFG_GT911[(0xB7-0x47) + 2 ] = 24;
 8001e9a:	2318      	movs	r3, #24
 8001e9c:	f887 307a 	strb.w	r3, [r7, #122]	@ 0x7a
  CTP_CFG_GT911[(0xB7-0x47) + 3 ] = 22;
 8001ea0:	2316      	movs	r3, #22
 8001ea2:	f887 307b 	strb.w	r3, [r7, #123]	@ 0x7b
  CTP_CFG_GT911[(0xB7-0x47) + 4 ] = 20;
 8001ea6:	2314      	movs	r3, #20
 8001ea8:	f887 307c 	strb.w	r3, [r7, #124]	@ 0x7c
  CTP_CFG_GT911[(0xB7-0x47) + 5 ] = 18;
 8001eac:	2312      	movs	r3, #18
 8001eae:	f887 307d 	strb.w	r3, [r7, #125]	@ 0x7d
  CTP_CFG_GT911[(0xB7-0x47) + 6 ] = 16;
 8001eb2:	2310      	movs	r3, #16
 8001eb4:	f887 307e 	strb.w	r3, [r7, #126]	@ 0x7e
  CTP_CFG_GT911[(0xB7-0x47) + 7 ] = 14;
 8001eb8:	230e      	movs	r3, #14
 8001eba:	f887 307f 	strb.w	r3, [r7, #127]	@ 0x7f
  CTP_CFG_GT911[(0xB7-0x47) + 8 ] = 12;
 8001ebe:	230c      	movs	r3, #12
 8001ec0:	f887 3080 	strb.w	r3, [r7, #128]	@ 0x80
  CTP_CFG_GT911[(0xB7-0x47) + 9 ] = 10;
 8001ec4:	230a      	movs	r3, #10
 8001ec6:	f887 3081 	strb.w	r3, [r7, #129]	@ 0x81
  CTP_CFG_GT911[(0xB7-0x47) + 10] = 8;
 8001eca:	2308      	movs	r3, #8
 8001ecc:	f887 3082 	strb.w	r3, [r7, #130]	@ 0x82
  CTP_CFG_GT911[(0xB7-0x47) + 11] = 6;
 8001ed0:	2306      	movs	r3, #6
 8001ed2:	f887 3083 	strb.w	r3, [r7, #131]	@ 0x83
  CTP_CFG_GT911[(0xB7-0x47) + 12] = 4;
 8001ed6:	2304      	movs	r3, #4
 8001ed8:	f887 3084 	strb.w	r3, [r7, #132]	@ 0x84
  CTP_CFG_GT911[(0xB7-0x47) + 13] = 2;
 8001edc:	2302      	movs	r3, #2
 8001ede:	f887 3085 	strb.w	r3, [r7, #133]	@ 0x85


  CTP_CFG_GT911[(0xD5-0x47) + 0 ] = 33;
 8001ee2:	2321      	movs	r3, #33	@ 0x21
 8001ee4:	f887 3096 	strb.w	r3, [r7, #150]	@ 0x96
  CTP_CFG_GT911[(0xD5-0x47) + 1 ] = 32;
 8001ee8:	2320      	movs	r3, #32
 8001eea:	f887 3097 	strb.w	r3, [r7, #151]	@ 0x97
  CTP_CFG_GT911[(0xD5-0x47) + 2 ] = 31;
 8001eee:	231f      	movs	r3, #31
 8001ef0:	f887 3098 	strb.w	r3, [r7, #152]	@ 0x98
  CTP_CFG_GT911[(0xD5-0x47) + 3 ] = 30;
 8001ef4:	231e      	movs	r3, #30
 8001ef6:	f887 3099 	strb.w	r3, [r7, #153]	@ 0x99
  CTP_CFG_GT911[(0xD5-0x47) + 4 ] = 29;
 8001efa:	231d      	movs	r3, #29
 8001efc:	f887 309a 	strb.w	r3, [r7, #154]	@ 0x9a
  CTP_CFG_GT911[(0xD5-0x47) + 5 ] = 0;
 8001f00:	2300      	movs	r3, #0
 8001f02:	f887 309b 	strb.w	r3, [r7, #155]	@ 0x9b
  CTP_CFG_GT911[(0xD5-0x47) + 6 ] = 2;
 8001f06:	2302      	movs	r3, #2
 8001f08:	f887 309c 	strb.w	r3, [r7, #156]	@ 0x9c
  CTP_CFG_GT911[(0xD5-0x47) + 7 ] = 4;
 8001f0c:	2304      	movs	r3, #4
 8001f0e:	f887 309d 	strb.w	r3, [r7, #157]	@ 0x9d
  CTP_CFG_GT911[(0xD5-0x47) + 8 ] = 6;
 8001f12:	2306      	movs	r3, #6
 8001f14:	f887 309e 	strb.w	r3, [r7, #158]	@ 0x9e
  CTP_CFG_GT911[(0xD5-0x47) + 9 ] = 8;
 8001f18:	2308      	movs	r3, #8
 8001f1a:	f887 309f 	strb.w	r3, [r7, #159]	@ 0x9f
  CTP_CFG_GT911[(0xD5-0x47) + 10] = 0xFF;
 8001f1e:	23ff      	movs	r3, #255	@ 0xff
 8001f20:	f887 30a0 	strb.w	r3, [r7, #160]	@ 0xa0
  CTP_CFG_GT911[(0xD5-0x47) + 11] = 0xFF;
 8001f24:	23ff      	movs	r3, #255	@ 0xff
 8001f26:	f887 30a1 	strb.w	r3, [r7, #161]	@ 0xa1
  CTP_CFG_GT911[(0xD5-0x47) + 12] = 0xFF;
 8001f2a:	23ff      	movs	r3, #255	@ 0xff
 8001f2c:	f887 30a2 	strb.w	r3, [r7, #162]	@ 0xa2
  CTP_CFG_GT911[(0xD5-0x47) + 13] = 0xFF;
 8001f30:	23ff      	movs	r3, #255	@ 0xff
 8001f32:	f887 30a3 	strb.w	r3, [r7, #163]	@ 0xa3
  CTP_CFG_GT911[(0xD5-0x47) + 14] = 0xFF;
 8001f36:	23ff      	movs	r3, #255	@ 0xff
 8001f38:	f887 30a4 	strb.w	r3, [r7, #164]	@ 0xa4
  CTP_CFG_GT911[(0xD5-0x47) + 15] = 0xFF;
 8001f3c:	23ff      	movs	r3, #255	@ 0xff
 8001f3e:	f887 30a5 	strb.w	r3, [r7, #165]	@ 0xa5
  CTP_CFG_GT911[(0xD5-0x47) + 16] = 0xFF;
 8001f42:	23ff      	movs	r3, #255	@ 0xff
 8001f44:	f887 30a6 	strb.w	r3, [r7, #166]	@ 0xa6
  CTP_CFG_GT911[(0xD5-0x47) + 17] = 0xFF;
 8001f48:	23ff      	movs	r3, #255	@ 0xff
 8001f4a:	f887 30a7 	strb.w	r3, [r7, #167]	@ 0xa7
  CTP_CFG_GT911[(0xD5-0x47) + 18] = 0xFF;
 8001f4e:	23ff      	movs	r3, #255	@ 0xff
 8001f50:	f887 30a8 	strb.w	r3, [r7, #168]	@ 0xa8
  CTP_CFG_GT911[(0xD5-0x47) + 19] = 0xFF;
 8001f54:	23ff      	movs	r3, #255	@ 0xff
 8001f56:	f887 30a9 	strb.w	r3, [r7, #169]	@ 0xa9
  CTP_CFG_GT911[(0xD5-0x47) + 20] = 0xFF;
 8001f5a:	23ff      	movs	r3, #255	@ 0xff
 8001f5c:	f887 30aa 	strb.w	r3, [r7, #170]	@ 0xaa
  CTP_CFG_GT911[(0xD5-0x47) + 21] = 0xFF;
 8001f60:	23ff      	movs	r3, #255	@ 0xff
 8001f62:	f887 30ab 	strb.w	r3, [r7, #171]	@ 0xab
  CTP_CFG_GT911[(0xD5-0x47) + 22] = 0xFF;
 8001f66:	23ff      	movs	r3, #255	@ 0xff
 8001f68:	f887 30ac 	strb.w	r3, [r7, #172]	@ 0xac
  CTP_CFG_GT911[(0xD5-0x47) + 23] = 0xFF;
 8001f6c:	23ff      	movs	r3, #255	@ 0xff
 8001f6e:	f887 30ad 	strb.w	r3, [r7, #173]	@ 0xad
  CTP_CFG_GT911[(0xD5-0x47) + 24] = 0xFF;
 8001f72:	23ff      	movs	r3, #255	@ 0xff
 8001f74:	f887 30ae 	strb.w	r3, [r7, #174]	@ 0xae
  CTP_CFG_GT911[(0xD5-0x47) + 25] = 0xFF;
 8001f78:	23ff      	movs	r3, #255	@ 0xff
 8001f7a:	f887 30af 	strb.w	r3, [r7, #175]	@ 0xaf


  uint8_t check_sum = 0;
 8001f7e:	2300      	movs	r3, #0
 8001f80:	f887 30c7 	strb.w	r3, [r7, #199]	@ 0xc7

  check_sum = 0;
 8001f84:	2300      	movs	r3, #0
 8001f86:	f887 30c7 	strb.w	r3, [r7, #199]	@ 0xc7
  for (int i=0; i<sizeof(CTP_CFG_GT911); i++)
 8001f8a:	2300      	movs	r3, #0
 8001f8c:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8001f90:	e00f      	b.n	8001fb2 <gt911InitRegs+0x13a>
  {
    check_sum += CTP_CFG_GT911[i];
 8001f92:	f107 0208 	add.w	r2, r7, #8
 8001f96:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 8001f9a:	4413      	add	r3, r2
 8001f9c:	781a      	ldrb	r2, [r3, #0]
 8001f9e:	f897 30c7 	ldrb.w	r3, [r7, #199]	@ 0xc7
 8001fa2:	4413      	add	r3, r2
 8001fa4:	f887 30c7 	strb.w	r3, [r7, #199]	@ 0xc7
  for (int i=0; i<sizeof(CTP_CFG_GT911); i++)
 8001fa8:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 8001fac:	3301      	adds	r3, #1
 8001fae:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 8001fb2:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 8001fb6:	2bb7      	cmp	r3, #183	@ 0xb7
 8001fb8:	d9eb      	bls.n	8001f92 <gt911InitRegs+0x11a>
  }
  check_sum = (~check_sum) + 1;
 8001fba:	f897 30c7 	ldrb.w	r3, [r7, #199]	@ 0xc7
 8001fbe:	425b      	negs	r3, r3
 8001fc0:	f887 30c7 	strb.w	r3, [r7, #199]	@ 0xc7

  uint8_t temp[2];
  temp[0] = check_sum;
 8001fc4:	f897 30c7 	ldrb.w	r3, [r7, #199]	@ 0xc7
 8001fc8:	713b      	strb	r3, [r7, #4]
  temp[1] = 1;
 8001fca:	2301      	movs	r3, #1
 8001fcc:	717b      	strb	r3, [r7, #5]

  writeRegs(0x8047, CTP_CFG_GT911, sizeof(CTP_CFG_GT911));
 8001fce:	f107 0308 	add.w	r3, r7, #8
 8001fd2:	22b8      	movs	r2, #184	@ 0xb8
 8001fd4:	4619      	mov	r1, r3
 8001fd6:	f248 0047 	movw	r0, #32839	@ 0x8047
 8001fda:	f000 f839 	bl	8002050 <writeRegs>
  writeRegs(0x80FF, temp, 2);
 8001fde:	1d3b      	adds	r3, r7, #4
 8001fe0:	2202      	movs	r2, #2
 8001fe2:	4619      	mov	r1, r3
 8001fe4:	f248 00ff 	movw	r0, #33023	@ 0x80ff
 8001fe8:	f000 f832 	bl	8002050 <writeRegs>
  return true;
 8001fec:	2301      	movs	r3, #1
}
 8001fee:	4618      	mov	r0, r3
 8001ff0:	37c8      	adds	r7, #200	@ 0xc8
 8001ff2:	46bd      	mov	sp, r7
 8001ff4:	bd80      	pop	{r7, pc}
 8001ff6:	bf00      	nop
 8001ff8:	08026994 	.word	0x08026994

08001ffc <readRegs>:

bool readRegs(uint16_t reg_addr, void *p_data, uint32_t length)
{
 8001ffc:	b580      	push	{r7, lr}
 8001ffe:	b08a      	sub	sp, #40	@ 0x28
 8002000:	af04      	add	r7, sp, #16
 8002002:	4603      	mov	r3, r0
 8002004:	60b9      	str	r1, [r7, #8]
 8002006:	607a      	str	r2, [r7, #4]
 8002008:	81fb      	strh	r3, [r7, #14]
  bool ret;
  HAL_StatusTypeDef i2c_ret;

  i2c_ret = HAL_I2C_Mem_Read(&hi2c1, (uint16_t)(i2c_addr << 1), reg_addr, I2C_MEMADD_SIZE_16BIT, p_data, length, 10);
 800200a:	4b0f      	ldr	r3, [pc, #60]	@ (8002048 <readRegs+0x4c>)
 800200c:	781b      	ldrb	r3, [r3, #0]
 800200e:	005b      	lsls	r3, r3, #1
 8002010:	b299      	uxth	r1, r3
 8002012:	687b      	ldr	r3, [r7, #4]
 8002014:	b29b      	uxth	r3, r3
 8002016:	89fa      	ldrh	r2, [r7, #14]
 8002018:	200a      	movs	r0, #10
 800201a:	9002      	str	r0, [sp, #8]
 800201c:	9301      	str	r3, [sp, #4]
 800201e:	68bb      	ldr	r3, [r7, #8]
 8002020:	9300      	str	r3, [sp, #0]
 8002022:	2302      	movs	r3, #2
 8002024:	4809      	ldr	r0, [pc, #36]	@ (800204c <readRegs+0x50>)
 8002026:	f002 f87b 	bl	8004120 <HAL_I2C_Mem_Read>
 800202a:	4603      	mov	r3, r0
 800202c:	75bb      	strb	r3, [r7, #22]
  if(i2c_ret == HAL_OK)
 800202e:	7dbb      	ldrb	r3, [r7, #22]
 8002030:	2b00      	cmp	r3, #0
 8002032:	d102      	bne.n	800203a <readRegs+0x3e>
    ret = true;
 8002034:	2301      	movs	r3, #1
 8002036:	75fb      	strb	r3, [r7, #23]
 8002038:	e001      	b.n	800203e <readRegs+0x42>
  else
    ret = false;
 800203a:	2300      	movs	r3, #0
 800203c:	75fb      	strb	r3, [r7, #23]

  return ret;
 800203e:	7dfb      	ldrb	r3, [r7, #23]
}
 8002040:	4618      	mov	r0, r3
 8002042:	3718      	adds	r7, #24
 8002044:	46bd      	mov	sp, r7
 8002046:	bd80      	pop	{r7, pc}
 8002048:	2400000c 	.word	0x2400000c
 800204c:	240003e0 	.word	0x240003e0

08002050 <writeRegs>:

bool writeRegs(uint16_t reg_addr, void *p_data, uint32_t length)
{
 8002050:	b580      	push	{r7, lr}
 8002052:	b08a      	sub	sp, #40	@ 0x28
 8002054:	af04      	add	r7, sp, #16
 8002056:	4603      	mov	r3, r0
 8002058:	60b9      	str	r1, [r7, #8]
 800205a:	607a      	str	r2, [r7, #4]
 800205c:	81fb      	strh	r3, [r7, #14]
  bool ret;
  HAL_StatusTypeDef i2c_ret;


  i2c_ret = HAL_I2C_Mem_Write(&hi2c1, (uint16_t)(i2c_addr << 1), reg_addr, I2C_MEMADD_SIZE_16BIT, p_data, length, 10);
 800205e:	4b0f      	ldr	r3, [pc, #60]	@ (800209c <writeRegs+0x4c>)
 8002060:	781b      	ldrb	r3, [r3, #0]
 8002062:	005b      	lsls	r3, r3, #1
 8002064:	b299      	uxth	r1, r3
 8002066:	687b      	ldr	r3, [r7, #4]
 8002068:	b29b      	uxth	r3, r3
 800206a:	89fa      	ldrh	r2, [r7, #14]
 800206c:	200a      	movs	r0, #10
 800206e:	9002      	str	r0, [sp, #8]
 8002070:	9301      	str	r3, [sp, #4]
 8002072:	68bb      	ldr	r3, [r7, #8]
 8002074:	9300      	str	r3, [sp, #0]
 8002076:	2302      	movs	r3, #2
 8002078:	4809      	ldr	r0, [pc, #36]	@ (80020a0 <writeRegs+0x50>)
 800207a:	f001 ff3d 	bl	8003ef8 <HAL_I2C_Mem_Write>
 800207e:	4603      	mov	r3, r0
 8002080:	75bb      	strb	r3, [r7, #22]
  if(i2c_ret == HAL_OK)
 8002082:	7dbb      	ldrb	r3, [r7, #22]
 8002084:	2b00      	cmp	r3, #0
 8002086:	d102      	bne.n	800208e <writeRegs+0x3e>
    ret = true;
 8002088:	2301      	movs	r3, #1
 800208a:	75fb      	strb	r3, [r7, #23]
 800208c:	e001      	b.n	8002092 <writeRegs+0x42>
  else
    ret = false;
 800208e:	2300      	movs	r3, #0
 8002090:	75fb      	strb	r3, [r7, #23]

  return ret;
 8002092:	7dfb      	ldrb	r3, [r7, #23]
}
 8002094:	4618      	mov	r0, r3
 8002096:	3718      	adds	r7, #24
 8002098:	46bd      	mov	sp, r7
 800209a:	bd80      	pop	{r7, pc}
 800209c:	2400000c 	.word	0x2400000c
 80020a0:	240003e0 	.word	0x240003e0

080020a4 <gt911GetInfo>:
{
  return GT911_TOUCH_HEIGTH;
}

bool gt911GetInfo(gt911_info_t *p_info)
{
 80020a4:	b580      	push	{r7, lr}
 80020a6:	b08c      	sub	sp, #48	@ 0x30
 80020a8:	af00      	add	r7, sp, #0
 80020aa:	6078      	str	r0, [r7, #4]
  bool ret = false;
 80020ac:	2300      	movs	r3, #0
 80020ae:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
  uint8_t buf[14] = {0};
 80020b2:	2300      	movs	r3, #0
 80020b4:	61bb      	str	r3, [r7, #24]
 80020b6:	f107 031c 	add.w	r3, r7, #28
 80020ba:	2200      	movs	r2, #0
 80020bc:	601a      	str	r2, [r3, #0]
 80020be:	605a      	str	r2, [r3, #4]
 80020c0:	811a      	strh	r2, [r3, #8]
  uint8_t touch_cnt = 0;
 80020c2:	2300      	movs	r3, #0
 80020c4:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
  const uint16_t point_addr[] = GT911_POINTS_REG;
 80020c8:	4a55      	ldr	r2, [pc, #340]	@ (8002220 <gt911GetInfo+0x17c>)
 80020ca:	f107 030c 	add.w	r3, r7, #12
 80020ce:	ca07      	ldmia	r2, {r0, r1, r2}
 80020d0:	c303      	stmia	r3!, {r0, r1}
 80020d2:	801a      	strh	r2, [r3, #0]


  p_info->count = 0;
 80020d4:	687b      	ldr	r3, [r7, #4]
 80020d6:	2200      	movs	r2, #0
 80020d8:	701a      	strb	r2, [r3, #0]

  if (is_init == false)
 80020da:	4b52      	ldr	r3, [pc, #328]	@ (8002224 <gt911GetInfo+0x180>)
 80020dc:	781b      	ldrb	r3, [r3, #0]
 80020de:	f083 0301 	eor.w	r3, r3, #1
 80020e2:	b2db      	uxtb	r3, r3
 80020e4:	2b00      	cmp	r3, #0
 80020e6:	d001      	beq.n	80020ec <gt911GetInfo+0x48>
  {
    return false;
 80020e8:	2300      	movs	r3, #0
 80020ea:	e094      	b.n	8002216 <gt911GetInfo+0x172>
  }

  if (HAL_GPIO_ReadPin(LCD_TP_INT_GPIO_Port, LCD_TP_INT_Pin) == GPIO_PIN_SET)
 80020ec:	2110      	movs	r1, #16
 80020ee:	484e      	ldr	r0, [pc, #312]	@ (8002228 <gt911GetInfo+0x184>)
 80020f0:	f001 fe34 	bl	8003d5c <HAL_GPIO_ReadPin>
 80020f4:	4603      	mov	r3, r0
 80020f6:	2b01      	cmp	r3, #1
 80020f8:	d101      	bne.n	80020fe <gt911GetInfo+0x5a>
  {
    return true;
 80020fa:	2301      	movs	r3, #1
 80020fc:	e08b      	b.n	8002216 <gt911GetInfo+0x172>
  }

  ret = readRegs(GT911_POINT_INFO, buf, 1);
 80020fe:	f107 0318 	add.w	r3, r7, #24
 8002102:	2201      	movs	r2, #1
 8002104:	4619      	mov	r1, r3
 8002106:	f248 104e 	movw	r0, #33102	@ 0x814e
 800210a:	f7ff ff77 	bl	8001ffc <readRegs>
 800210e:	4603      	mov	r3, r0
 8002110:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
  if (ret == true && buf[0] & (1<<7))
 8002114:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 8002118:	2b00      	cmp	r3, #0
 800211a:	d01d      	beq.n	8002158 <gt911GetInfo+0xb4>
 800211c:	7e3b      	ldrb	r3, [r7, #24]
 800211e:	b25b      	sxtb	r3, r3
 8002120:	2b00      	cmp	r3, #0
 8002122:	da19      	bge.n	8002158 <gt911GetInfo+0xb4>
  {
    touch_cnt = buf[0] & 0x0F;
 8002124:	7e3b      	ldrb	r3, [r7, #24]
 8002126:	f003 030f 	and.w	r3, r3, #15
 800212a:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
    buf[0] = 0;
 800212e:	2300      	movs	r3, #0
 8002130:	763b      	strb	r3, [r7, #24]
    ret = writeRegs(GT911_POINT_INFO, buf, 1);
 8002132:	f107 0318 	add.w	r3, r7, #24
 8002136:	2201      	movs	r2, #1
 8002138:	4619      	mov	r1, r3
 800213a:	f248 104e 	movw	r0, #33102	@ 0x814e
 800213e:	f7ff ff87 	bl	8002050 <writeRegs>
 8002142:	4603      	mov	r3, r0
 8002144:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 8002148:	bf00      	nop
  else
  {
    return ret;
  }

  p_info->count = touch_cnt;
 800214a:	687b      	ldr	r3, [r7, #4]
 800214c:	f897 2027 	ldrb.w	r2, [r7, #39]	@ 0x27
 8002150:	701a      	strb	r2, [r3, #0]

  for (int i=0; i<touch_cnt; i++)
 8002152:	2300      	movs	r3, #0
 8002154:	62bb      	str	r3, [r7, #40]	@ 0x28
 8002156:	e055      	b.n	8002204 <gt911GetInfo+0x160>
    return ret;
 8002158:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 800215c:	e05b      	b.n	8002216 <gt911GetInfo+0x172>
  {
    ret = readRegs(point_addr[i], buf, 8);
 800215e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8002160:	005b      	lsls	r3, r3, #1
 8002162:	3330      	adds	r3, #48	@ 0x30
 8002164:	443b      	add	r3, r7
 8002166:	f833 3c24 	ldrh.w	r3, [r3, #-36]
 800216a:	f107 0118 	add.w	r1, r7, #24
 800216e:	2208      	movs	r2, #8
 8002170:	4618      	mov	r0, r3
 8002172:	f7ff ff43 	bl	8001ffc <readRegs>
 8002176:	4603      	mov	r3, r0
 8002178:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
    if (ret == true)
 800217c:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 8002180:	2b00      	cmp	r3, #0
 8002182:	d045      	beq.n	8002210 <gt911GetInfo+0x16c>
    {
      p_info->point[i].id     = buf[0];
 8002184:	7e39      	ldrb	r1, [r7, #24]
 8002186:	687a      	ldr	r2, [r7, #4]
 8002188:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800218a:	00db      	lsls	r3, r3, #3
 800218c:	4413      	add	r3, r2
 800218e:	460a      	mov	r2, r1
 8002190:	709a      	strb	r2, [r3, #2]
      p_info->point[i].event  = 0;
 8002192:	687a      	ldr	r2, [r7, #4]
 8002194:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8002196:	00db      	lsls	r3, r3, #3
 8002198:	4413      	add	r3, r2
 800219a:	2200      	movs	r2, #0
 800219c:	70da      	strb	r2, [r3, #3]
      p_info->point[i].weight = 0;
 800219e:	687a      	ldr	r2, [r7, #4]
 80021a0:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80021a2:	00db      	lsls	r3, r3, #3
 80021a4:	4413      	add	r3, r2
 80021a6:	2200      	movs	r2, #0
 80021a8:	721a      	strb	r2, [r3, #8]
      p_info->point[i].area   = (buf[6]<<8) | (buf[5]<<0);
 80021aa:	7fbb      	ldrb	r3, [r7, #30]
 80021ac:	021b      	lsls	r3, r3, #8
 80021ae:	b25a      	sxtb	r2, r3
 80021b0:	7f7b      	ldrb	r3, [r7, #29]
 80021b2:	b25b      	sxtb	r3, r3
 80021b4:	4313      	orrs	r3, r2
 80021b6:	b25b      	sxtb	r3, r3
 80021b8:	b2d9      	uxtb	r1, r3
 80021ba:	687a      	ldr	r2, [r7, #4]
 80021bc:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80021be:	00db      	lsls	r3, r3, #3
 80021c0:	4413      	add	r3, r2
 80021c2:	460a      	mov	r2, r1
 80021c4:	725a      	strb	r2, [r3, #9]

      p_info->point[i].x = (buf[2]<<8) | (buf[1]<<0);
 80021c6:	7ebb      	ldrb	r3, [r7, #26]
 80021c8:	021b      	lsls	r3, r3, #8
 80021ca:	b21a      	sxth	r2, r3
 80021cc:	7e7b      	ldrb	r3, [r7, #25]
 80021ce:	b21b      	sxth	r3, r3
 80021d0:	4313      	orrs	r3, r2
 80021d2:	b21b      	sxth	r3, r3
 80021d4:	b299      	uxth	r1, r3
 80021d6:	687a      	ldr	r2, [r7, #4]
 80021d8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80021da:	00db      	lsls	r3, r3, #3
 80021dc:	4413      	add	r3, r2
 80021de:	460a      	mov	r2, r1
 80021e0:	809a      	strh	r2, [r3, #4]
      p_info->point[i].y = (buf[4]<<8) | (buf[3]<<0);
 80021e2:	7f3b      	ldrb	r3, [r7, #28]
 80021e4:	021b      	lsls	r3, r3, #8
 80021e6:	b21a      	sxth	r2, r3
 80021e8:	7efb      	ldrb	r3, [r7, #27]
 80021ea:	b21b      	sxth	r3, r3
 80021ec:	4313      	orrs	r3, r2
 80021ee:	b21b      	sxth	r3, r3
 80021f0:	b299      	uxth	r1, r3
 80021f2:	687a      	ldr	r2, [r7, #4]
 80021f4:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80021f6:	00db      	lsls	r3, r3, #3
 80021f8:	4413      	add	r3, r2
 80021fa:	460a      	mov	r2, r1
 80021fc:	80da      	strh	r2, [r3, #6]
  for (int i=0; i<touch_cnt; i++)
 80021fe:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8002200:	3301      	adds	r3, #1
 8002202:	62bb      	str	r3, [r7, #40]	@ 0x28
 8002204:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8002208:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800220a:	429a      	cmp	r2, r3
 800220c:	dba7      	blt.n	800215e <gt911GetInfo+0xba>
 800220e:	e000      	b.n	8002212 <gt911GetInfo+0x16e>
    }
    else
    {
      break;
 8002210:	bf00      	nop
    }
  }

  return ret;
 8002212:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
}
 8002216:	4618      	mov	r0, r3
 8002218:	3730      	adds	r7, #48	@ 0x30
 800221a:	46bd      	mov	sp, r7
 800221c:	bd80      	pop	{r7, pc}
 800221e:	bf00      	nop
 8002220:	08026a4c 	.word	0x08026a4c
 8002224:	240006a4 	.word	0x240006a4
 8002228:	58020400 	.word	0x58020400

0800222c <qspiInit>:




bool qspiInit(void)
{
 800222c:	b580      	push	{r7, lr}
 800222e:	b08c      	sub	sp, #48	@ 0x30
 8002230:	af00      	add	r7, sp, #0
  bool ret = true;
 8002232:	2301      	movs	r3, #1
 8002234:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
  QSPI_Info info;


  if (BSP_QSPI_Init() == QSPI_OK)
 8002238:	f000 f860 	bl	80022fc <BSP_QSPI_Init>
 800223c:	4603      	mov	r3, r0
 800223e:	2b00      	cmp	r3, #0
 8002240:	d103      	bne.n	800224a <qspiInit+0x1e>
  {
    ret = true;
 8002242:	2301      	movs	r3, #1
 8002244:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 8002248:	e002      	b.n	8002250 <qspiInit+0x24>
  }
  else
  {
    ret = false;
 800224a:	2300      	movs	r3, #0
 800224c:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
  }


  if (BSP_QSPI_GetID(&info) == QSPI_OK)
 8002250:	1d3b      	adds	r3, r7, #4
 8002252:	4618      	mov	r0, r3
 8002254:	f000 f91a 	bl	800248c <BSP_QSPI_GetID>
 8002258:	4603      	mov	r3, r0
 800225a:	2b00      	cmp	r3, #0
 800225c:	d121      	bne.n	80022a2 <qspiInit+0x76>
  {
    if (info.device_id[0] == 0xEF && info.device_id[1] == 0x40 && info.device_id[2] == 0x18)
 800225e:	7e3b      	ldrb	r3, [r7, #24]
 8002260:	2bef      	cmp	r3, #239	@ 0xef
 8002262:	d10f      	bne.n	8002284 <qspiInit+0x58>
 8002264:	7e7b      	ldrb	r3, [r7, #25]
 8002266:	2b40      	cmp	r3, #64	@ 0x40
 8002268:	d10c      	bne.n	8002284 <qspiInit+0x58>
 800226a:	7ebb      	ldrb	r3, [r7, #26]
 800226c:	2b18      	cmp	r3, #24
 800226e:	d109      	bne.n	8002284 <qspiInit+0x58>
    {
      logPrintf("[OK] qspiInit()\n");
 8002270:	4814      	ldr	r0, [pc, #80]	@ (80022c4 <qspiInit+0x98>)
 8002272:	f023 fd07 	bl	8025c84 <puts>
      logPrintf("     W25Q128JV Found\r\n");
 8002276:	4814      	ldr	r0, [pc, #80]	@ (80022c8 <qspiInit+0x9c>)
 8002278:	f023 fd04 	bl	8025c84 <puts>
      ret = true;
 800227c:	2301      	movs	r3, #1
 800227e:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 8002282:	e014      	b.n	80022ae <qspiInit+0x82>
    }
    else
    {
      logPrintf("[OK] qspiInit()\n");
 8002284:	480f      	ldr	r0, [pc, #60]	@ (80022c4 <qspiInit+0x98>)
 8002286:	f023 fcfd 	bl	8025c84 <puts>
      logPrintf("     W25Q128JV Not Found %X %X %X\r\n", info.device_id[0], info.device_id[1], info.device_id[2]);
 800228a:	7e3b      	ldrb	r3, [r7, #24]
 800228c:	4619      	mov	r1, r3
 800228e:	7e7b      	ldrb	r3, [r7, #25]
 8002290:	461a      	mov	r2, r3
 8002292:	7ebb      	ldrb	r3, [r7, #26]
 8002294:	480d      	ldr	r0, [pc, #52]	@ (80022cc <qspiInit+0xa0>)
 8002296:	f023 fc8d 	bl	8025bb4 <iprintf>
      ret = false;
 800229a:	2300      	movs	r3, #0
 800229c:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
 80022a0:	e005      	b.n	80022ae <qspiInit+0x82>
    }
  }
  else
  {
    logPrintf("[NG] qspiInit()\n");
 80022a2:	480b      	ldr	r0, [pc, #44]	@ (80022d0 <qspiInit+0xa4>)
 80022a4:	f023 fcee 	bl	8025c84 <puts>
    ret = false;
 80022a8:	2300      	movs	r3, #0
 80022aa:	f887 302f 	strb.w	r3, [r7, #47]	@ 0x2f
  }



  is_init = ret;
 80022ae:	4a09      	ldr	r2, [pc, #36]	@ (80022d4 <qspiInit+0xa8>)
 80022b0:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 80022b4:	7013      	strb	r3, [r2, #0]

  return ret;
 80022b6:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
}
 80022ba:	4618      	mov	r0, r3
 80022bc:	3730      	adds	r7, #48	@ 0x30
 80022be:	46bd      	mov	sp, r7
 80022c0:	bd80      	pop	{r7, pc}
 80022c2:	bf00      	nop
 80022c4:	08026a58 	.word	0x08026a58
 80022c8:	08026a68 	.word	0x08026a68
 80022cc:	08026a80 	.word	0x08026a80
 80022d0:	08026aa4 	.word	0x08026aa4
 80022d4:	240006a6 	.word	0x240006a6

080022d8 <qspiEnableMemoryMappedMode>:
    return false;
  }
}

bool qspiEnableMemoryMappedMode(void)
{
 80022d8:	b580      	push	{r7, lr}
 80022da:	b082      	sub	sp, #8
 80022dc:	af00      	add	r7, sp, #0
  uint8_t ret;

  ret = BSP_QSPI_EnableMemoryMappedMode();
 80022de:	f000 f923 	bl	8002528 <BSP_QSPI_EnableMemoryMappedMode>
 80022e2:	4603      	mov	r3, r0
 80022e4:	71fb      	strb	r3, [r7, #7]

  if (ret == QSPI_OK)
 80022e6:	79fb      	ldrb	r3, [r7, #7]
 80022e8:	2b00      	cmp	r3, #0
 80022ea:	d101      	bne.n	80022f0 <qspiEnableMemoryMappedMode+0x18>
  {
    return true;
 80022ec:	2301      	movs	r3, #1
 80022ee:	e000      	b.n	80022f2 <qspiEnableMemoryMappedMode+0x1a>
  }
  else
  {
    return false;
 80022f0:	2300      	movs	r3, #0
  }
}
 80022f2:	4618      	mov	r0, r3
 80022f4:	3708      	adds	r7, #8
 80022f6:	46bd      	mov	sp, r7
 80022f8:	bd80      	pop	{r7, pc}
	...

080022fc <BSP_QSPI_Init>:
static uint8_t QSPI_ReadStatus(OSPI_HandleTypeDef *hqspi, uint8_t cmd, uint8_t *p_data);
static uint8_t QSPI_WriteStatus(OSPI_HandleTypeDef *hqspi, uint8_t cmd, uint8_t data);


uint8_t BSP_QSPI_Init(void)
{
 80022fc:	b580      	push	{r7, lr}
 80022fe:	b08a      	sub	sp, #40	@ 0x28
 8002300:	af00      	add	r7, sp, #0
  OSPIM_CfgTypeDef sOspiManagerCfg = {0};
 8002302:	1d3b      	adds	r3, r7, #4
 8002304:	2200      	movs	r2, #0
 8002306:	601a      	str	r2, [r3, #0]
 8002308:	605a      	str	r2, [r3, #4]
 800230a:	609a      	str	r2, [r3, #8]
 800230c:	60da      	str	r2, [r3, #12]
 800230e:	611a      	str	r2, [r3, #16]
 8002310:	615a      	str	r2, [r3, #20]


  hqspi.Instance = OCTOSPI1;
 8002312:	4b42      	ldr	r3, [pc, #264]	@ (800241c <BSP_QSPI_Init+0x120>)
 8002314:	4a42      	ldr	r2, [pc, #264]	@ (8002420 <BSP_QSPI_Init+0x124>)
 8002316:	601a      	str	r2, [r3, #0]
  /* Call the DeInit function to reset the driver */
  if (HAL_OSPI_DeInit(&hqspi) != HAL_OK)
 8002318:	4840      	ldr	r0, [pc, #256]	@ (800241c <BSP_QSPI_Init+0x120>)
 800231a:	f003 f911 	bl	8005540 <HAL_OSPI_DeInit>
 800231e:	4603      	mov	r3, r0
 8002320:	2b00      	cmp	r3, #0
 8002322:	d001      	beq.n	8002328 <BSP_QSPI_Init+0x2c>
  {
    return QSPI_ERROR;
 8002324:	2301      	movs	r3, #1
 8002326:	e074      	b.n	8002412 <BSP_QSPI_Init+0x116>
  }


  /* QSPI initialization */
  /* ClockPrescaler set to 3, so QSPI clock = 280MHz / (3) = 93MHz */
  hqspi.Init.FifoThreshold       = 4;
 8002328:	4b3c      	ldr	r3, [pc, #240]	@ (800241c <BSP_QSPI_Init+0x120>)
 800232a:	2204      	movs	r2, #4
 800232c:	605a      	str	r2, [r3, #4]
  hqspi.Init.DualQuad            = HAL_OSPI_DUALQUAD_DISABLE;
 800232e:	4b3b      	ldr	r3, [pc, #236]	@ (800241c <BSP_QSPI_Init+0x120>)
 8002330:	2200      	movs	r2, #0
 8002332:	609a      	str	r2, [r3, #8]
  hqspi.Init.MemoryType          = HAL_OSPI_MEMTYPE_MICRON;
 8002334:	4b39      	ldr	r3, [pc, #228]	@ (800241c <BSP_QSPI_Init+0x120>)
 8002336:	2200      	movs	r2, #0
 8002338:	60da      	str	r2, [r3, #12]
 800233a:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 800233e:	623b      	str	r3, [r7, #32]
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8002340:	6a3b      	ldr	r3, [r7, #32]
 8002342:	fa93 f3a3 	rbit	r3, r3
 8002346:	61fb      	str	r3, [r7, #28]
    result |= value & 1U;
    s--;
  }
  result <<= s;                        /* shift when v's highest bits are zero */
#endif
  return result;
 8002348:	69fb      	ldr	r3, [r7, #28]
 800234a:	627b      	str	r3, [r7, #36]	@ 0x24
     optimisations using the logic "value was passed to __builtin_clz, so it
     is non-zero".
     ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
     single CLZ instruction.
   */
  if (value == 0U)
 800234c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800234e:	2b00      	cmp	r3, #0
 8002350:	d101      	bne.n	8002356 <BSP_QSPI_Init+0x5a>
  {
    return 32U;
 8002352:	2320      	movs	r3, #32
 8002354:	e003      	b.n	800235e <BSP_QSPI_Init+0x62>
  }
  return __builtin_clz(value);
 8002356:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8002358:	fab3 f383 	clz	r3, r3
 800235c:	b2db      	uxtb	r3, r3
  hqspi.Init.DeviceSize          = POSITION_VAL(W25Q128FV_FLASH_SIZE);
 800235e:	461a      	mov	r2, r3
 8002360:	4b2e      	ldr	r3, [pc, #184]	@ (800241c <BSP_QSPI_Init+0x120>)
 8002362:	611a      	str	r2, [r3, #16]
  hqspi.Init.ChipSelectHighTime  = 5;
 8002364:	4b2d      	ldr	r3, [pc, #180]	@ (800241c <BSP_QSPI_Init+0x120>)
 8002366:	2205      	movs	r2, #5
 8002368:	615a      	str	r2, [r3, #20]
  hqspi.Init.FreeRunningClock    = HAL_OSPI_FREERUNCLK_DISABLE;
 800236a:	4b2c      	ldr	r3, [pc, #176]	@ (800241c <BSP_QSPI_Init+0x120>)
 800236c:	2200      	movs	r2, #0
 800236e:	619a      	str	r2, [r3, #24]
  hqspi.Init.ClockMode           = HAL_OSPI_CLOCK_MODE_0;
 8002370:	4b2a      	ldr	r3, [pc, #168]	@ (800241c <BSP_QSPI_Init+0x120>)
 8002372:	2200      	movs	r2, #0
 8002374:	61da      	str	r2, [r3, #28]
  hqspi.Init.WrapSize            = HAL_OSPI_WRAP_NOT_SUPPORTED;
 8002376:	4b29      	ldr	r3, [pc, #164]	@ (800241c <BSP_QSPI_Init+0x120>)
 8002378:	2200      	movs	r2, #0
 800237a:	621a      	str	r2, [r3, #32]
  hqspi.Init.ClockPrescaler      = 3;
 800237c:	4b27      	ldr	r3, [pc, #156]	@ (800241c <BSP_QSPI_Init+0x120>)
 800237e:	2203      	movs	r2, #3
 8002380:	625a      	str	r2, [r3, #36]	@ 0x24
  hqspi.Init.SampleShifting      = HAL_OSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8002382:	4b26      	ldr	r3, [pc, #152]	@ (800241c <BSP_QSPI_Init+0x120>)
 8002384:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8002388:	629a      	str	r2, [r3, #40]	@ 0x28
  hqspi.Init.DelayHoldQuarterCycle = HAL_OSPI_DHQC_DISABLE;
 800238a:	4b24      	ldr	r3, [pc, #144]	@ (800241c <BSP_QSPI_Init+0x120>)
 800238c:	2200      	movs	r2, #0
 800238e:	62da      	str	r2, [r3, #44]	@ 0x2c
  hqspi.Init.ChipSelectBoundary  = 0;
 8002390:	4b22      	ldr	r3, [pc, #136]	@ (800241c <BSP_QSPI_Init+0x120>)
 8002392:	2200      	movs	r2, #0
 8002394:	631a      	str	r2, [r3, #48]	@ 0x30
  hqspi.Init.DelayBlockBypass    = HAL_OSPI_DELAY_BLOCK_BYPASSED;
 8002396:	4b21      	ldr	r3, [pc, #132]	@ (800241c <BSP_QSPI_Init+0x120>)
 8002398:	2208      	movs	r2, #8
 800239a:	635a      	str	r2, [r3, #52]	@ 0x34
  hqspi.Init.MaxTran             = 0;
 800239c:	4b1f      	ldr	r3, [pc, #124]	@ (800241c <BSP_QSPI_Init+0x120>)
 800239e:	2200      	movs	r2, #0
 80023a0:	639a      	str	r2, [r3, #56]	@ 0x38
  hqspi.Init.Refresh             = 0;
 80023a2:	4b1e      	ldr	r3, [pc, #120]	@ (800241c <BSP_QSPI_Init+0x120>)
 80023a4:	2200      	movs	r2, #0
 80023a6:	63da      	str	r2, [r3, #60]	@ 0x3c
  if (HAL_OSPI_Init(&hqspi) != HAL_OK)
 80023a8:	481c      	ldr	r0, [pc, #112]	@ (800241c <BSP_QSPI_Init+0x120>)
 80023aa:	f003 f80d 	bl	80053c8 <HAL_OSPI_Init>
 80023ae:	4603      	mov	r3, r0
 80023b0:	2b00      	cmp	r3, #0
 80023b2:	d004      	beq.n	80023be <BSP_QSPI_Init+0xc2>
  {
    logPrintf("HAL_QSPI_Init() fail\n");
 80023b4:	481b      	ldr	r0, [pc, #108]	@ (8002424 <BSP_QSPI_Init+0x128>)
 80023b6:	f023 fc65 	bl	8025c84 <puts>
    return QSPI_ERROR;
 80023ba:	2301      	movs	r3, #1
 80023bc:	e029      	b.n	8002412 <BSP_QSPI_Init+0x116>
  }

  sOspiManagerCfg.ClkPort = 1;
 80023be:	2301      	movs	r3, #1
 80023c0:	607b      	str	r3, [r7, #4]
  sOspiManagerCfg.NCSPort = 1;
 80023c2:	2301      	movs	r3, #1
 80023c4:	60fb      	str	r3, [r7, #12]
  sOspiManagerCfg.IOLowPort = HAL_OSPIM_IOPORT_1_HIGH;
 80023c6:	4b18      	ldr	r3, [pc, #96]	@ (8002428 <BSP_QSPI_Init+0x12c>)
 80023c8:	613b      	str	r3, [r7, #16]
  sOspiManagerCfg.Req2AckTime = 1;
 80023ca:	2301      	movs	r3, #1
 80023cc:	61bb      	str	r3, [r7, #24]
  if (HAL_OSPIM_Config(&hqspi, &sOspiManagerCfg, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80023ce:	1d3b      	adds	r3, r7, #4
 80023d0:	f241 3288 	movw	r2, #5000	@ 0x1388
 80023d4:	4619      	mov	r1, r3
 80023d6:	4811      	ldr	r0, [pc, #68]	@ (800241c <BSP_QSPI_Init+0x120>)
 80023d8:	f003 fbe2 	bl	8005ba0 <HAL_OSPIM_Config>
 80023dc:	4603      	mov	r3, r0
 80023de:	2b00      	cmp	r3, #0
 80023e0:	d001      	beq.n	80023e6 <BSP_QSPI_Init+0xea>
  {
    Error_Handler();
 80023e2:	f7fe ffaf 	bl	8001344 <Error_Handler>
  }


  /* QSPI memory reset */
  if (QSPI_ResetMemory(&hqspi) != QSPI_OK)
 80023e6:	480d      	ldr	r0, [pc, #52]	@ (800241c <BSP_QSPI_Init+0x120>)
 80023e8:	f000 f8fc 	bl	80025e4 <QSPI_ResetMemory>
 80023ec:	4603      	mov	r3, r0
 80023ee:	2b00      	cmp	r3, #0
 80023f0:	d004      	beq.n	80023fc <BSP_QSPI_Init+0x100>
  {
    logPrintf("QSPI_ResetMemory() fail\n");
 80023f2:	480e      	ldr	r0, [pc, #56]	@ (800242c <BSP_QSPI_Init+0x130>)
 80023f4:	f023 fc46 	bl	8025c84 <puts>
    return QSPI_NOT_SUPPORTED;
 80023f8:	2304      	movs	r3, #4
 80023fa:	e00a      	b.n	8002412 <BSP_QSPI_Init+0x116>
  }

  if (BSP_QSPI_Config() != QSPI_OK)
 80023fc:	f000 f81a 	bl	8002434 <BSP_QSPI_Config>
 8002400:	4603      	mov	r3, r0
 8002402:	2b00      	cmp	r3, #0
 8002404:	d004      	beq.n	8002410 <BSP_QSPI_Init+0x114>
  {
    logPrintf("QSPI_Config() fail\n");
 8002406:	480a      	ldr	r0, [pc, #40]	@ (8002430 <BSP_QSPI_Init+0x134>)
 8002408:	f023 fc3c 	bl	8025c84 <puts>
    return QSPI_NOT_SUPPORTED;
 800240c:	2304      	movs	r3, #4
 800240e:	e000      	b.n	8002412 <BSP_QSPI_Init+0x116>
  }

  return QSPI_OK;
 8002410:	2300      	movs	r3, #0
}
 8002412:	4618      	mov	r0, r3
 8002414:	3728      	adds	r7, #40	@ 0x28
 8002416:	46bd      	mov	sp, r7
 8002418:	bd80      	pop	{r7, pc}
 800241a:	bf00      	nop
 800241c:	240006a8 	.word	0x240006a8
 8002420:	52005000 	.word	0x52005000
 8002424:	08026aec 	.word	0x08026aec
 8002428:	01000001 	.word	0x01000001
 800242c:	08026b04 	.word	0x08026b04
 8002430:	08026b1c 	.word	0x08026b1c

08002434 <BSP_QSPI_Config>:

  return QSPI_OK;
}

uint8_t BSP_QSPI_Config(void)
{
 8002434:	b580      	push	{r7, lr}
 8002436:	b082      	sub	sp, #8
 8002438:	af00      	add	r7, sp, #0
  uint8_t reg = 0;
 800243a:	2300      	movs	r3, #0
 800243c:	71fb      	strb	r3, [r7, #7]


  if (QSPI_ReadStatus(&hqspi, READ_STATUS_REG2_CMD, &reg) != QSPI_OK)
 800243e:	1dfb      	adds	r3, r7, #7
 8002440:	461a      	mov	r2, r3
 8002442:	2135      	movs	r1, #53	@ 0x35
 8002444:	4810      	ldr	r0, [pc, #64]	@ (8002488 <BSP_QSPI_Config+0x54>)
 8002446:	f000 f9fe 	bl	8002846 <QSPI_ReadStatus>
 800244a:	4603      	mov	r3, r0
 800244c:	2b00      	cmp	r3, #0
 800244e:	d001      	beq.n	8002454 <BSP_QSPI_Config+0x20>
  {
    return QSPI_ERROR;
 8002450:	2301      	movs	r3, #1
 8002452:	e015      	b.n	8002480 <BSP_QSPI_Config+0x4c>
  }

  // QUAD MODE Enable
  if ((reg & (1<<1)) == 0x00)
 8002454:	79fb      	ldrb	r3, [r7, #7]
 8002456:	f003 0302 	and.w	r3, r3, #2
 800245a:	2b00      	cmp	r3, #0
 800245c:	d10f      	bne.n	800247e <BSP_QSPI_Config+0x4a>
  {
    reg |= (1<<1);
 800245e:	79fb      	ldrb	r3, [r7, #7]
 8002460:	f043 0302 	orr.w	r3, r3, #2
 8002464:	b2db      	uxtb	r3, r3
 8002466:	71fb      	strb	r3, [r7, #7]
    if (QSPI_WriteStatus(&hqspi, WRITE_STATUS_REG2_CMD, reg) != QSPI_OK)
 8002468:	79fb      	ldrb	r3, [r7, #7]
 800246a:	461a      	mov	r2, r3
 800246c:	2131      	movs	r1, #49	@ 0x31
 800246e:	4806      	ldr	r0, [pc, #24]	@ (8002488 <BSP_QSPI_Config+0x54>)
 8002470:	f000 fa3b 	bl	80028ea <QSPI_WriteStatus>
 8002474:	4603      	mov	r3, r0
 8002476:	2b00      	cmp	r3, #0
 8002478:	d001      	beq.n	800247e <BSP_QSPI_Config+0x4a>
    {
      return QSPI_ERROR;
 800247a:	2301      	movs	r3, #1
 800247c:	e000      	b.n	8002480 <BSP_QSPI_Config+0x4c>
    }
  }


  return QSPI_OK;
 800247e:	2300      	movs	r3, #0
}
 8002480:	4618      	mov	r0, r3
 8002482:	3708      	adds	r7, #8
 8002484:	46bd      	mov	sp, r7
 8002486:	bd80      	pop	{r7, pc}
 8002488:	240006a8 	.word	0x240006a8

0800248c <BSP_QSPI_GetID>:
    return QSPI_BUSY;
  }
}

uint8_t BSP_QSPI_GetID(QSPI_Info* p_info)
{
 800248c:	b580      	push	{r7, lr}
 800248e:	b096      	sub	sp, #88	@ 0x58
 8002490:	af00      	add	r7, sp, #0
 8002492:	6078      	str	r0, [r7, #4]
  OSPI_RegularCmdTypeDef s_command = {0};
 8002494:	f107 0308 	add.w	r3, r7, #8
 8002498:	2250      	movs	r2, #80	@ 0x50
 800249a:	2100      	movs	r1, #0
 800249c:	4618      	mov	r0, r3
 800249e:	f023 fcd1 	bl	8025e44 <memset>


  /* Initialize the read flag status register command */
  s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
 80024a2:	2300      	movs	r3, #0
 80024a4:	60bb      	str	r3, [r7, #8]
  s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
 80024a6:	2300      	movs	r3, #0
 80024a8:	60fb      	str	r3, [r7, #12]
  s_command.InstructionMode    = HAL_OSPI_INSTRUCTION_1_LINE;
 80024aa:	2301      	movs	r3, #1
 80024ac:	617b      	str	r3, [r7, #20]
  s_command.InstructionDtrMode = HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 80024ae:	2300      	movs	r3, #0
 80024b0:	61fb      	str	r3, [r7, #28]
  s_command.InstructionSize    = HAL_OSPI_INSTRUCTION_8_BITS;
 80024b2:	2300      	movs	r3, #0
 80024b4:	61bb      	str	r3, [r7, #24]
  s_command.Instruction        = READ_ID_CMD;
 80024b6:	239f      	movs	r3, #159	@ 0x9f
 80024b8:	613b      	str	r3, [r7, #16]

  s_command.AddressMode        = HAL_OSPI_ADDRESS_NONE;
 80024ba:	2300      	movs	r3, #0
 80024bc:	627b      	str	r3, [r7, #36]	@ 0x24
  s_command.AddressDtrMode     = HAL_OSPI_ADDRESS_DTR_DISABLE;
 80024be:	2300      	movs	r3, #0
 80024c0:	62fb      	str	r3, [r7, #44]	@ 0x2c
  s_command.AddressSize        = HAL_OSPI_ADDRESS_24_BITS;
 80024c2:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80024c6:	62bb      	str	r3, [r7, #40]	@ 0x28

  s_command.AlternateBytesMode = HAL_OSPI_ALTERNATE_BYTES_NONE;
 80024c8:	2300      	movs	r3, #0
 80024ca:	637b      	str	r3, [r7, #52]	@ 0x34

  s_command.DataMode           = HAL_OSPI_DATA_1_LINE;
 80024cc:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 80024d0:	643b      	str	r3, [r7, #64]	@ 0x40
  s_command.DataDtrMode        = HAL_OSPI_DATA_DTR_DISABLE;
 80024d2:	2300      	movs	r3, #0
 80024d4:	64bb      	str	r3, [r7, #72]	@ 0x48
  s_command.DummyCycles        = 0;
 80024d6:	2300      	movs	r3, #0
 80024d8:	64fb      	str	r3, [r7, #76]	@ 0x4c
  s_command.DQSMode            = HAL_OSPI_DQS_DISABLE;
 80024da:	2300      	movs	r3, #0
 80024dc:	653b      	str	r3, [r7, #80]	@ 0x50
  s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;
 80024de:	2300      	movs	r3, #0
 80024e0:	657b      	str	r3, [r7, #84]	@ 0x54

  s_command.NbData             = 20;
 80024e2:	2314      	movs	r3, #20
 80024e4:	647b      	str	r3, [r7, #68]	@ 0x44

  /* Configure the command */
  if (HAL_OSPI_Command(&hqspi, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80024e6:	f107 0308 	add.w	r3, r7, #8
 80024ea:	f241 3288 	movw	r2, #5000	@ 0x1388
 80024ee:	4619      	mov	r1, r3
 80024f0:	480c      	ldr	r0, [pc, #48]	@ (8002524 <BSP_QSPI_GetID+0x98>)
 80024f2:	f003 f84c 	bl	800558e <HAL_OSPI_Command>
 80024f6:	4603      	mov	r3, r0
 80024f8:	2b00      	cmp	r3, #0
 80024fa:	d001      	beq.n	8002500 <BSP_QSPI_GetID+0x74>
  {
    return QSPI_ERROR;
 80024fc:	2301      	movs	r3, #1
 80024fe:	e00d      	b.n	800251c <BSP_QSPI_GetID+0x90>
  }

  /* Reception of the data */
  if (HAL_OSPI_Receive(&hqspi, p_info->device_id, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8002500:	687b      	ldr	r3, [r7, #4]
 8002502:	3314      	adds	r3, #20
 8002504:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002508:	4619      	mov	r1, r3
 800250a:	4806      	ldr	r0, [pc, #24]	@ (8002524 <BSP_QSPI_GetID+0x98>)
 800250c:	f003 f93f 	bl	800578e <HAL_OSPI_Receive>
 8002510:	4603      	mov	r3, r0
 8002512:	2b00      	cmp	r3, #0
 8002514:	d001      	beq.n	800251a <BSP_QSPI_GetID+0x8e>
  {
    return QSPI_ERROR;
 8002516:	2301      	movs	r3, #1
 8002518:	e000      	b.n	800251c <BSP_QSPI_GetID+0x90>
  }

  return QSPI_OK;
 800251a:	2300      	movs	r3, #0
}
 800251c:	4618      	mov	r0, r3
 800251e:	3758      	adds	r7, #88	@ 0x58
 8002520:	46bd      	mov	sp, r7
 8002522:	bd80      	pop	{r7, pc}
 8002524:	240006a8 	.word	0x240006a8

08002528 <BSP_QSPI_EnableMemoryMappedMode>:

  return QSPI_OK;
}

uint8_t BSP_QSPI_EnableMemoryMappedMode(void)
{
 8002528:	b580      	push	{r7, lr}
 800252a:	b096      	sub	sp, #88	@ 0x58
 800252c:	af00      	add	r7, sp, #0
  OSPI_RegularCmdTypeDef   s_command = {0};
 800252e:	f107 0308 	add.w	r3, r7, #8
 8002532:	2250      	movs	r2, #80	@ 0x50
 8002534:	2100      	movs	r1, #0
 8002536:	4618      	mov	r0, r3
 8002538:	f023 fc84 	bl	8025e44 <memset>
  OSPI_MemoryMappedTypeDef s_mem_mapped_cfg = {0};
 800253c:	463b      	mov	r3, r7
 800253e:	2200      	movs	r2, #0
 8002540:	601a      	str	r2, [r3, #0]
 8002542:	605a      	str	r2, [r3, #4]

  /* Configure the command for the read instruction */
  s_command.OperationType      = HAL_OSPI_OPTYPE_READ_CFG;
 8002544:	2301      	movs	r3, #1
 8002546:	60bb      	str	r3, [r7, #8]
  s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
 8002548:	2300      	movs	r3, #0
 800254a:	60fb      	str	r3, [r7, #12]
  s_command.InstructionMode    = HAL_OSPI_INSTRUCTION_1_LINE;
 800254c:	2301      	movs	r3, #1
 800254e:	617b      	str	r3, [r7, #20]
  s_command.InstructionDtrMode = HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8002550:	2300      	movs	r3, #0
 8002552:	61fb      	str	r3, [r7, #28]
  s_command.InstructionSize    = HAL_OSPI_INSTRUCTION_8_BITS;
 8002554:	2300      	movs	r3, #0
 8002556:	61bb      	str	r3, [r7, #24]
  s_command.Instruction        = QUAD_INOUT_FAST_READ_CMD;
 8002558:	23eb      	movs	r3, #235	@ 0xeb
 800255a:	613b      	str	r3, [r7, #16]

  s_command.AddressMode        = HAL_OSPI_ADDRESS_4_LINES;
 800255c:	f44f 7340 	mov.w	r3, #768	@ 0x300
 8002560:	627b      	str	r3, [r7, #36]	@ 0x24
  s_command.AddressDtrMode     = HAL_OSPI_ADDRESS_DTR_DISABLE;
 8002562:	2300      	movs	r3, #0
 8002564:	62fb      	str	r3, [r7, #44]	@ 0x2c
  s_command.AddressSize        = HAL_OSPI_ADDRESS_24_BITS;
 8002566:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800256a:	62bb      	str	r3, [r7, #40]	@ 0x28

  s_command.AlternateBytesMode = HAL_OSPI_ALTERNATE_BYTES_4_LINES;
 800256c:	f44f 3340 	mov.w	r3, #196608	@ 0x30000
 8002570:	637b      	str	r3, [r7, #52]	@ 0x34
  s_command.AlternateBytesSize = HAL_OSPI_ALTERNATE_BYTES_8_BITS;
 8002572:	2300      	movs	r3, #0
 8002574:	63bb      	str	r3, [r7, #56]	@ 0x38
  s_command.AlternateBytes     = (1<<5);
 8002576:	2320      	movs	r3, #32
 8002578:	633b      	str	r3, [r7, #48]	@ 0x30

  s_command.DataMode           = HAL_OSPI_DATA_4_LINES;
 800257a:	f04f 7340 	mov.w	r3, #50331648	@ 0x3000000
 800257e:	643b      	str	r3, [r7, #64]	@ 0x40
  s_command.DataDtrMode        = HAL_OSPI_DATA_DTR_DISABLE;
 8002580:	2300      	movs	r3, #0
 8002582:	64bb      	str	r3, [r7, #72]	@ 0x48
  // {
  //   return QSPI_ERROR;
  // }

  /* Configure the command for read */
  s_command.OperationType      = HAL_OSPI_OPTYPE_READ_CFG;
 8002584:	2301      	movs	r3, #1
 8002586:	60bb      	str	r3, [r7, #8]
  s_command.Instruction        = QUAD_INOUT_FAST_READ_CMD;
 8002588:	23eb      	movs	r3, #235	@ 0xeb
 800258a:	613b      	str	r3, [r7, #16]
  s_command.DummyCycles        = W25Q128FV_DUMMY_CYCLES_READ_QUAD;
 800258c:	2304      	movs	r3, #4
 800258e:	64fb      	str	r3, [r7, #76]	@ 0x4c
  s_command.DQSMode            = HAL_OSPI_DQS_DISABLE;
 8002590:	2300      	movs	r3, #0
 8002592:	653b      	str	r3, [r7, #80]	@ 0x50
  s_command.SIOOMode           = HAL_OSPI_SIOO_INST_ONLY_FIRST_CMD;
 8002594:	f04f 4300 	mov.w	r3, #2147483648	@ 0x80000000
 8002598:	657b      	str	r3, [r7, #84]	@ 0x54

  if (HAL_OSPI_Command(&hqspi, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800259a:	f107 0308 	add.w	r3, r7, #8
 800259e:	f241 3288 	movw	r2, #5000	@ 0x1388
 80025a2:	4619      	mov	r1, r3
 80025a4:	480e      	ldr	r0, [pc, #56]	@ (80025e0 <BSP_QSPI_EnableMemoryMappedMode+0xb8>)
 80025a6:	f002 fff2 	bl	800558e <HAL_OSPI_Command>
 80025aa:	4603      	mov	r3, r0
 80025ac:	2b00      	cmp	r3, #0
 80025ae:	d001      	beq.n	80025b4 <BSP_QSPI_EnableMemoryMappedMode+0x8c>
  {
    return QSPI_ERROR;
 80025b0:	2301      	movs	r3, #1
 80025b2:	e011      	b.n	80025d8 <BSP_QSPI_EnableMemoryMappedMode+0xb0>
  }

  hqspi.State = HAL_OSPI_STATE_CMD_CFG;
 80025b4:	4b0a      	ldr	r3, [pc, #40]	@ (80025e0 <BSP_QSPI_EnableMemoryMappedMode+0xb8>)
 80025b6:	2204      	movs	r2, #4
 80025b8:	651a      	str	r2, [r3, #80]	@ 0x50

  /* Configure the memory mapped mode */
  s_mem_mapped_cfg.TimeOutActivation = HAL_OSPI_TIMEOUT_COUNTER_ENABLE;
 80025ba:	2308      	movs	r3, #8
 80025bc:	603b      	str	r3, [r7, #0]
  s_mem_mapped_cfg.TimeOutPeriod     = 0x20;
 80025be:	2320      	movs	r3, #32
 80025c0:	607b      	str	r3, [r7, #4]
  if (HAL_OSPI_MemoryMapped(&hqspi, &s_mem_mapped_cfg) != HAL_OK)
 80025c2:	463b      	mov	r3, r7
 80025c4:	4619      	mov	r1, r3
 80025c6:	4806      	ldr	r0, [pc, #24]	@ (80025e0 <BSP_QSPI_EnableMemoryMappedMode+0xb8>)
 80025c8:	f003 fa0c 	bl	80059e4 <HAL_OSPI_MemoryMapped>
 80025cc:	4603      	mov	r3, r0
 80025ce:	2b00      	cmp	r3, #0
 80025d0:	d001      	beq.n	80025d6 <BSP_QSPI_EnableMemoryMappedMode+0xae>
  {
    return QSPI_ERROR;
 80025d2:	2301      	movs	r3, #1
 80025d4:	e000      	b.n	80025d8 <BSP_QSPI_EnableMemoryMappedMode+0xb0>
  }

  return QSPI_OK;
 80025d6:	2300      	movs	r3, #0
}
 80025d8:	4618      	mov	r0, r3
 80025da:	3758      	adds	r7, #88	@ 0x58
 80025dc:	46bd      	mov	sp, r7
 80025de:	bd80      	pop	{r7, pc}
 80025e0:	240006a8 	.word	0x240006a8

080025e4 <QSPI_ResetMemory>:

static uint8_t QSPI_ResetMemory(OSPI_HandleTypeDef *p_hqspi)
{
 80025e4:	b580      	push	{r7, lr}
 80025e6:	b096      	sub	sp, #88	@ 0x58
 80025e8:	af00      	add	r7, sp, #0
 80025ea:	6078      	str	r0, [r7, #4]
  OSPI_RegularCmdTypeDef s_command = {0};
 80025ec:	f107 0308 	add.w	r3, r7, #8
 80025f0:	2250      	movs	r2, #80	@ 0x50
 80025f2:	2100      	movs	r1, #0
 80025f4:	4618      	mov	r0, r3
 80025f6:	f023 fc25 	bl	8025e44 <memset>


  if (HAL_OSPI_GetState(&hqspi) != HAL_OSPI_STATE_READY)
 80025fa:	4829      	ldr	r0, [pc, #164]	@ (80026a0 <QSPI_ResetMemory+0xbc>)
 80025fc:	f003 fac4 	bl	8005b88 <HAL_OSPI_GetState>
 8002600:	4603      	mov	r3, r0
 8002602:	2b02      	cmp	r3, #2
 8002604:	d002      	beq.n	800260c <QSPI_ResetMemory+0x28>
  {
    HAL_OSPI_Abort(p_hqspi);
 8002606:	6878      	ldr	r0, [r7, #4]
 8002608:	f003 fa3a 	bl	8005a80 <HAL_OSPI_Abort>
  }

  /* Initialize the reset enable command */
  s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
 800260c:	2300      	movs	r3, #0
 800260e:	60bb      	str	r3, [r7, #8]
  s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
 8002610:	2300      	movs	r3, #0
 8002612:	60fb      	str	r3, [r7, #12]
  s_command.InstructionMode    = HAL_OSPI_INSTRUCTION_1_LINE;
 8002614:	2301      	movs	r3, #1
 8002616:	617b      	str	r3, [r7, #20]
  s_command.InstructionDtrMode = HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8002618:	2300      	movs	r3, #0
 800261a:	61fb      	str	r3, [r7, #28]
  s_command.InstructionSize    = HAL_OSPI_INSTRUCTION_8_BITS;
 800261c:	2300      	movs	r3, #0
 800261e:	61bb      	str	r3, [r7, #24]
  s_command.Instruction        = RESET_ENABLE_CMD;
 8002620:	2366      	movs	r3, #102	@ 0x66
 8002622:	613b      	str	r3, [r7, #16]

  s_command.AddressMode        = HAL_OSPI_ADDRESS_NONE;
 8002624:	2300      	movs	r3, #0
 8002626:	627b      	str	r3, [r7, #36]	@ 0x24
  s_command.AddressDtrMode     = HAL_OSPI_ADDRESS_DTR_DISABLE;
 8002628:	2300      	movs	r3, #0
 800262a:	62fb      	str	r3, [r7, #44]	@ 0x2c
  s_command.AddressSize        = HAL_OSPI_ADDRESS_24_BITS;
 800262c:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8002630:	62bb      	str	r3, [r7, #40]	@ 0x28

  s_command.AlternateBytesMode = HAL_OSPI_ALTERNATE_BYTES_NONE;
 8002632:	2300      	movs	r3, #0
 8002634:	637b      	str	r3, [r7, #52]	@ 0x34

  s_command.DataMode           = HAL_OSPI_DATA_NONE;
 8002636:	2300      	movs	r3, #0
 8002638:	643b      	str	r3, [r7, #64]	@ 0x40
  s_command.DataDtrMode        = HAL_OSPI_DATA_DTR_DISABLE;
 800263a:	2300      	movs	r3, #0
 800263c:	64bb      	str	r3, [r7, #72]	@ 0x48
  s_command.DummyCycles        = 0;
 800263e:	2300      	movs	r3, #0
 8002640:	64fb      	str	r3, [r7, #76]	@ 0x4c
  s_command.DQSMode            = HAL_OSPI_DQS_DISABLE;
 8002642:	2300      	movs	r3, #0
 8002644:	653b      	str	r3, [r7, #80]	@ 0x50
  s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;
 8002646:	2300      	movs	r3, #0
 8002648:	657b      	str	r3, [r7, #84]	@ 0x54

  /* Send the command */
  if (HAL_OSPI_Command(p_hqspi, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800264a:	f107 0308 	add.w	r3, r7, #8
 800264e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002652:	4619      	mov	r1, r3
 8002654:	6878      	ldr	r0, [r7, #4]
 8002656:	f002 ff9a 	bl	800558e <HAL_OSPI_Command>
 800265a:	4603      	mov	r3, r0
 800265c:	2b00      	cmp	r3, #0
 800265e:	d001      	beq.n	8002664 <QSPI_ResetMemory+0x80>
  {
    return QSPI_ERROR;
 8002660:	2301      	movs	r3, #1
 8002662:	e019      	b.n	8002698 <QSPI_ResetMemory+0xb4>
  }

  /* Send the reset memory command */
  s_command.Instruction = RESET_MEMORY_CMD;
 8002664:	2399      	movs	r3, #153	@ 0x99
 8002666:	613b      	str	r3, [r7, #16]
  if (HAL_OSPI_Command(p_hqspi, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8002668:	f107 0308 	add.w	r3, r7, #8
 800266c:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002670:	4619      	mov	r1, r3
 8002672:	6878      	ldr	r0, [r7, #4]
 8002674:	f002 ff8b 	bl	800558e <HAL_OSPI_Command>
 8002678:	4603      	mov	r3, r0
 800267a:	2b00      	cmp	r3, #0
 800267c:	d001      	beq.n	8002682 <QSPI_ResetMemory+0x9e>
  {
    return QSPI_ERROR;
 800267e:	2301      	movs	r3, #1
 8002680:	e00a      	b.n	8002698 <QSPI_ResetMemory+0xb4>
  }

  /* Configure automatic polling mode to wait the memory is ready */
  if (QSPI_AutoPollingMemReady(p_hqspi, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 8002682:	f241 3188 	movw	r1, #5000	@ 0x1388
 8002686:	6878      	ldr	r0, [r7, #4]
 8002688:	f000 f87e 	bl	8002788 <QSPI_AutoPollingMemReady>
 800268c:	4603      	mov	r3, r0
 800268e:	2b00      	cmp	r3, #0
 8002690:	d001      	beq.n	8002696 <QSPI_ResetMemory+0xb2>
  {
    return QSPI_ERROR;
 8002692:	2301      	movs	r3, #1
 8002694:	e000      	b.n	8002698 <QSPI_ResetMemory+0xb4>
  }

  return QSPI_OK;
 8002696:	2300      	movs	r3, #0
}
 8002698:	4618      	mov	r0, r3
 800269a:	3758      	adds	r7, #88	@ 0x58
 800269c:	46bd      	mov	sp, r7
 800269e:	bd80      	pop	{r7, pc}
 80026a0:	240006a8 	.word	0x240006a8

080026a4 <QSPI_WriteEnable>:

static uint8_t QSPI_WriteEnable(OSPI_HandleTypeDef *p_hqspi)
{
 80026a4:	b580      	push	{r7, lr}
 80026a6:	b09c      	sub	sp, #112	@ 0x70
 80026a8:	af00      	add	r7, sp, #0
 80026aa:	6078      	str	r0, [r7, #4]
  OSPI_RegularCmdTypeDef  s_command = {0};
 80026ac:	f107 0320 	add.w	r3, r7, #32
 80026b0:	2250      	movs	r2, #80	@ 0x50
 80026b2:	2100      	movs	r1, #0
 80026b4:	4618      	mov	r0, r3
 80026b6:	f023 fbc5 	bl	8025e44 <memset>
  OSPI_AutoPollingTypeDef s_config = {0};
 80026ba:	f107 030c 	add.w	r3, r7, #12
 80026be:	2200      	movs	r2, #0
 80026c0:	601a      	str	r2, [r3, #0]
 80026c2:	605a      	str	r2, [r3, #4]
 80026c4:	609a      	str	r2, [r3, #8]
 80026c6:	60da      	str	r2, [r3, #12]
 80026c8:	611a      	str	r2, [r3, #16]

  /* Enable write operations */
  s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
 80026ca:	2300      	movs	r3, #0
 80026cc:	623b      	str	r3, [r7, #32]
  s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
 80026ce:	2300      	movs	r3, #0
 80026d0:	627b      	str	r3, [r7, #36]	@ 0x24
  s_command.InstructionMode    = HAL_OSPI_INSTRUCTION_1_LINE;
 80026d2:	2301      	movs	r3, #1
 80026d4:	62fb      	str	r3, [r7, #44]	@ 0x2c
  s_command.InstructionDtrMode = HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 80026d6:	2300      	movs	r3, #0
 80026d8:	637b      	str	r3, [r7, #52]	@ 0x34
  s_command.InstructionSize    = HAL_OSPI_INSTRUCTION_8_BITS;
 80026da:	2300      	movs	r3, #0
 80026dc:	633b      	str	r3, [r7, #48]	@ 0x30
  s_command.Instruction        = WRITE_ENABLE_CMD;
 80026de:	2306      	movs	r3, #6
 80026e0:	62bb      	str	r3, [r7, #40]	@ 0x28

  s_command.AddressMode        = HAL_OSPI_ADDRESS_NONE;
 80026e2:	2300      	movs	r3, #0
 80026e4:	63fb      	str	r3, [r7, #60]	@ 0x3c
  s_command.AddressDtrMode     = HAL_OSPI_ADDRESS_DTR_DISABLE;
 80026e6:	2300      	movs	r3, #0
 80026e8:	647b      	str	r3, [r7, #68]	@ 0x44
  s_command.AddressSize        = HAL_OSPI_ADDRESS_24_BITS;
 80026ea:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80026ee:	643b      	str	r3, [r7, #64]	@ 0x40

  s_command.AlternateBytesMode = HAL_OSPI_ALTERNATE_BYTES_NONE;
 80026f0:	2300      	movs	r3, #0
 80026f2:	64fb      	str	r3, [r7, #76]	@ 0x4c

  s_command.DataMode           = HAL_OSPI_DATA_NONE;
 80026f4:	2300      	movs	r3, #0
 80026f6:	65bb      	str	r3, [r7, #88]	@ 0x58
  s_command.DataDtrMode        = HAL_OSPI_DATA_DTR_DISABLE;
 80026f8:	2300      	movs	r3, #0
 80026fa:	663b      	str	r3, [r7, #96]	@ 0x60
  s_command.DummyCycles        = 0;
 80026fc:	2300      	movs	r3, #0
 80026fe:	667b      	str	r3, [r7, #100]	@ 0x64
  s_command.DQSMode            = HAL_OSPI_DQS_DISABLE;
 8002700:	2300      	movs	r3, #0
 8002702:	66bb      	str	r3, [r7, #104]	@ 0x68
  s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;
 8002704:	2300      	movs	r3, #0
 8002706:	66fb      	str	r3, [r7, #108]	@ 0x6c
  s_command.NbData             = 0;
 8002708:	2300      	movs	r3, #0
 800270a:	65fb      	str	r3, [r7, #92]	@ 0x5c


  if (HAL_OSPI_Command(p_hqspi, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800270c:	f107 0320 	add.w	r3, r7, #32
 8002710:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002714:	4619      	mov	r1, r3
 8002716:	6878      	ldr	r0, [r7, #4]
 8002718:	f002 ff39 	bl	800558e <HAL_OSPI_Command>
 800271c:	4603      	mov	r3, r0
 800271e:	2b00      	cmp	r3, #0
 8002720:	d001      	beq.n	8002726 <QSPI_WriteEnable+0x82>
  {
    return QSPI_ERROR;
 8002722:	2301      	movs	r3, #1
 8002724:	e02c      	b.n	8002780 <QSPI_WriteEnable+0xdc>
  }

  s_command.Instruction    = READ_STATUS_REG_CMD;
 8002726:	2305      	movs	r3, #5
 8002728:	62bb      	str	r3, [r7, #40]	@ 0x28
  s_command.DataMode       = HAL_OSPI_DATA_1_LINE;
 800272a:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 800272e:	65bb      	str	r3, [r7, #88]	@ 0x58
  s_command.NbData         = 1;
 8002730:	2301      	movs	r3, #1
 8002732:	65fb      	str	r3, [r7, #92]	@ 0x5c
  if (HAL_OSPI_Command(p_hqspi, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8002734:	f107 0320 	add.w	r3, r7, #32
 8002738:	f241 3288 	movw	r2, #5000	@ 0x1388
 800273c:	4619      	mov	r1, r3
 800273e:	6878      	ldr	r0, [r7, #4]
 8002740:	f002 ff25 	bl	800558e <HAL_OSPI_Command>
 8002744:	4603      	mov	r3, r0
 8002746:	2b00      	cmp	r3, #0
 8002748:	d001      	beq.n	800274e <QSPI_WriteEnable+0xaa>
  {
    return QSPI_ERROR;
 800274a:	2301      	movs	r3, #1
 800274c:	e018      	b.n	8002780 <QSPI_WriteEnable+0xdc>
  }

  /* Configure automatic polling mode to wait for write enabling */
  s_config.Match           = W25Q128FV_SR_WREN;
 800274e:	2302      	movs	r3, #2
 8002750:	60fb      	str	r3, [r7, #12]
  s_config.Mask            = W25Q128FV_SR_WREN;
 8002752:	2302      	movs	r3, #2
 8002754:	613b      	str	r3, [r7, #16]
  s_config.MatchMode       = HAL_OSPI_MATCH_MODE_AND;
 8002756:	2300      	movs	r3, #0
 8002758:	617b      	str	r3, [r7, #20]
  s_config.Interval        = 0x10;
 800275a:	2310      	movs	r3, #16
 800275c:	61fb      	str	r3, [r7, #28]
  s_config.AutomaticStop   = HAL_OSPI_AUTOMATIC_STOP_ENABLE;
 800275e:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8002762:	61bb      	str	r3, [r7, #24]

  if (HAL_OSPI_AutoPolling(p_hqspi, &s_config, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8002764:	f107 030c 	add.w	r3, r7, #12
 8002768:	f241 3288 	movw	r2, #5000	@ 0x1388
 800276c:	4619      	mov	r1, r3
 800276e:	6878      	ldr	r0, [r7, #4]
 8002770:	f003 f8b0 	bl	80058d4 <HAL_OSPI_AutoPolling>
 8002774:	4603      	mov	r3, r0
 8002776:	2b00      	cmp	r3, #0
 8002778:	d001      	beq.n	800277e <QSPI_WriteEnable+0xda>
  {
    return QSPI_ERROR;
 800277a:	2301      	movs	r3, #1
 800277c:	e000      	b.n	8002780 <QSPI_WriteEnable+0xdc>
  }

  return QSPI_OK;
 800277e:	2300      	movs	r3, #0
}
 8002780:	4618      	mov	r0, r3
 8002782:	3770      	adds	r7, #112	@ 0x70
 8002784:	46bd      	mov	sp, r7
 8002786:	bd80      	pop	{r7, pc}

08002788 <QSPI_AutoPollingMemReady>:

static uint8_t QSPI_AutoPollingMemReady(OSPI_HandleTypeDef *p_hqspi, uint32_t Timeout)
{
 8002788:	b580      	push	{r7, lr}
 800278a:	b09c      	sub	sp, #112	@ 0x70
 800278c:	af00      	add	r7, sp, #0
 800278e:	6078      	str	r0, [r7, #4]
 8002790:	6039      	str	r1, [r7, #0]
  OSPI_RegularCmdTypeDef  s_command = {0};
 8002792:	f107 0320 	add.w	r3, r7, #32
 8002796:	2250      	movs	r2, #80	@ 0x50
 8002798:	2100      	movs	r1, #0
 800279a:	4618      	mov	r0, r3
 800279c:	f023 fb52 	bl	8025e44 <memset>
  OSPI_AutoPollingTypeDef s_config = {0};
 80027a0:	f107 030c 	add.w	r3, r7, #12
 80027a4:	2200      	movs	r2, #0
 80027a6:	601a      	str	r2, [r3, #0]
 80027a8:	605a      	str	r2, [r3, #4]
 80027aa:	609a      	str	r2, [r3, #8]
 80027ac:	60da      	str	r2, [r3, #12]
 80027ae:	611a      	str	r2, [r3, #16]

  /* Configure automatic polling mode to wait for memory ready */
  s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
 80027b0:	2300      	movs	r3, #0
 80027b2:	623b      	str	r3, [r7, #32]
  s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
 80027b4:	2300      	movs	r3, #0
 80027b6:	627b      	str	r3, [r7, #36]	@ 0x24
  s_command.InstructionMode    = HAL_OSPI_INSTRUCTION_1_LINE;
 80027b8:	2301      	movs	r3, #1
 80027ba:	62fb      	str	r3, [r7, #44]	@ 0x2c
  s_command.InstructionDtrMode = HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 80027bc:	2300      	movs	r3, #0
 80027be:	637b      	str	r3, [r7, #52]	@ 0x34
  s_command.InstructionSize    = HAL_OSPI_INSTRUCTION_8_BITS;
 80027c0:	2300      	movs	r3, #0
 80027c2:	633b      	str	r3, [r7, #48]	@ 0x30
  s_command.Instruction        = READ_STATUS_REG_CMD;
 80027c4:	2305      	movs	r3, #5
 80027c6:	62bb      	str	r3, [r7, #40]	@ 0x28

  s_command.AddressMode        = HAL_OSPI_ADDRESS_NONE;
 80027c8:	2300      	movs	r3, #0
 80027ca:	63fb      	str	r3, [r7, #60]	@ 0x3c
  s_command.AddressDtrMode     = HAL_OSPI_ADDRESS_DTR_DISABLE;
 80027cc:	2300      	movs	r3, #0
 80027ce:	647b      	str	r3, [r7, #68]	@ 0x44
  s_command.AddressSize        = HAL_OSPI_ADDRESS_24_BITS;
 80027d0:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 80027d4:	643b      	str	r3, [r7, #64]	@ 0x40

  s_command.AlternateBytesMode = HAL_OSPI_ALTERNATE_BYTES_NONE;
 80027d6:	2300      	movs	r3, #0
 80027d8:	64fb      	str	r3, [r7, #76]	@ 0x4c

  s_command.DataMode           = HAL_OSPI_DATA_1_LINE;
 80027da:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 80027de:	65bb      	str	r3, [r7, #88]	@ 0x58
  s_command.DataDtrMode        = HAL_OSPI_DATA_DTR_DISABLE;
 80027e0:	2300      	movs	r3, #0
 80027e2:	663b      	str	r3, [r7, #96]	@ 0x60
  s_command.DummyCycles        = 0;
 80027e4:	2300      	movs	r3, #0
 80027e6:	667b      	str	r3, [r7, #100]	@ 0x64
  s_command.DQSMode            = HAL_OSPI_DQS_DISABLE;
 80027e8:	2300      	movs	r3, #0
 80027ea:	66bb      	str	r3, [r7, #104]	@ 0x68
  s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;
 80027ec:	2300      	movs	r3, #0
 80027ee:	66fb      	str	r3, [r7, #108]	@ 0x6c
  s_command.NbData             = 1;
 80027f0:	2301      	movs	r3, #1
 80027f2:	65fb      	str	r3, [r7, #92]	@ 0x5c


  if (HAL_OSPI_Command(p_hqspi, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80027f4:	f107 0320 	add.w	r3, r7, #32
 80027f8:	f241 3288 	movw	r2, #5000	@ 0x1388
 80027fc:	4619      	mov	r1, r3
 80027fe:	6878      	ldr	r0, [r7, #4]
 8002800:	f002 fec5 	bl	800558e <HAL_OSPI_Command>
 8002804:	4603      	mov	r3, r0
 8002806:	2b00      	cmp	r3, #0
 8002808:	d001      	beq.n	800280e <QSPI_AutoPollingMemReady+0x86>
  {
    return false;
 800280a:	2300      	movs	r3, #0
 800280c:	e017      	b.n	800283e <QSPI_AutoPollingMemReady+0xb6>
  }

  s_config.Match           = 0;
 800280e:	2300      	movs	r3, #0
 8002810:	60fb      	str	r3, [r7, #12]
  s_config.Mask            = W25Q128FV_SR_WIP;
 8002812:	2301      	movs	r3, #1
 8002814:	613b      	str	r3, [r7, #16]
  s_config.MatchMode       = HAL_OSPI_MATCH_MODE_AND;
 8002816:	2300      	movs	r3, #0
 8002818:	617b      	str	r3, [r7, #20]
  s_config.Interval        = 0x10;
 800281a:	2310      	movs	r3, #16
 800281c:	61fb      	str	r3, [r7, #28]
  s_config.AutomaticStop   = HAL_OSPI_AUTOMATIC_STOP_ENABLE;
 800281e:	f44f 0380 	mov.w	r3, #4194304	@ 0x400000
 8002822:	61bb      	str	r3, [r7, #24]

  if (HAL_OSPI_AutoPolling(p_hqspi, &s_config, Timeout) != HAL_OK)
 8002824:	f107 030c 	add.w	r3, r7, #12
 8002828:	683a      	ldr	r2, [r7, #0]
 800282a:	4619      	mov	r1, r3
 800282c:	6878      	ldr	r0, [r7, #4]
 800282e:	f003 f851 	bl	80058d4 <HAL_OSPI_AutoPolling>
 8002832:	4603      	mov	r3, r0
 8002834:	2b00      	cmp	r3, #0
 8002836:	d001      	beq.n	800283c <QSPI_AutoPollingMemReady+0xb4>
  {
    return QSPI_ERROR;
 8002838:	2301      	movs	r3, #1
 800283a:	e000      	b.n	800283e <QSPI_AutoPollingMemReady+0xb6>
  }

  return QSPI_OK;
 800283c:	2300      	movs	r3, #0
}
 800283e:	4618      	mov	r0, r3
 8002840:	3770      	adds	r7, #112	@ 0x70
 8002842:	46bd      	mov	sp, r7
 8002844:	bd80      	pop	{r7, pc}

08002846 <QSPI_ReadStatus>:

static uint8_t QSPI_ReadStatus(OSPI_HandleTypeDef *p_hqspi, uint8_t cmd, uint8_t *p_data)
{
 8002846:	b580      	push	{r7, lr}
 8002848:	b09a      	sub	sp, #104	@ 0x68
 800284a:	af00      	add	r7, sp, #0
 800284c:	60f8      	str	r0, [r7, #12]
 800284e:	460b      	mov	r3, r1
 8002850:	607a      	str	r2, [r7, #4]
 8002852:	72fb      	strb	r3, [r7, #11]
  OSPI_RegularCmdTypeDef s_command = {0};
 8002854:	f107 0318 	add.w	r3, r7, #24
 8002858:	2250      	movs	r2, #80	@ 0x50
 800285a:	2100      	movs	r1, #0
 800285c:	4618      	mov	r0, r3
 800285e:	f023 faf1 	bl	8025e44 <memset>
  uint8_t reg;

  /* Initialize the read flag status register command */
  s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
 8002862:	2300      	movs	r3, #0
 8002864:	61bb      	str	r3, [r7, #24]
  s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
 8002866:	2300      	movs	r3, #0
 8002868:	61fb      	str	r3, [r7, #28]
  s_command.InstructionMode    = HAL_OSPI_INSTRUCTION_1_LINE;
 800286a:	2301      	movs	r3, #1
 800286c:	627b      	str	r3, [r7, #36]	@ 0x24
  s_command.InstructionDtrMode = HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 800286e:	2300      	movs	r3, #0
 8002870:	62fb      	str	r3, [r7, #44]	@ 0x2c
  s_command.InstructionSize    = HAL_OSPI_INSTRUCTION_8_BITS;
 8002872:	2300      	movs	r3, #0
 8002874:	62bb      	str	r3, [r7, #40]	@ 0x28
  s_command.Instruction        = cmd;
 8002876:	7afb      	ldrb	r3, [r7, #11]
 8002878:	623b      	str	r3, [r7, #32]

  s_command.AddressMode        = HAL_OSPI_ADDRESS_NONE;
 800287a:	2300      	movs	r3, #0
 800287c:	637b      	str	r3, [r7, #52]	@ 0x34
  s_command.AddressDtrMode     = HAL_OSPI_ADDRESS_DTR_DISABLE;
 800287e:	2300      	movs	r3, #0
 8002880:	63fb      	str	r3, [r7, #60]	@ 0x3c
  s_command.AddressSize        = HAL_OSPI_ADDRESS_24_BITS;
 8002882:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8002886:	63bb      	str	r3, [r7, #56]	@ 0x38

  s_command.AlternateBytesMode = HAL_OSPI_ALTERNATE_BYTES_NONE;
 8002888:	2300      	movs	r3, #0
 800288a:	647b      	str	r3, [r7, #68]	@ 0x44

  s_command.DataMode           = HAL_OSPI_DATA_1_LINE;
 800288c:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8002890:	653b      	str	r3, [r7, #80]	@ 0x50
  s_command.DataDtrMode        = HAL_OSPI_DATA_DTR_DISABLE;
 8002892:	2300      	movs	r3, #0
 8002894:	65bb      	str	r3, [r7, #88]	@ 0x58
  s_command.DummyCycles        = 0;
 8002896:	2300      	movs	r3, #0
 8002898:	65fb      	str	r3, [r7, #92]	@ 0x5c
  s_command.DQSMode            = HAL_OSPI_DQS_DISABLE;
 800289a:	2300      	movs	r3, #0
 800289c:	663b      	str	r3, [r7, #96]	@ 0x60
  s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;
 800289e:	2300      	movs	r3, #0
 80028a0:	667b      	str	r3, [r7, #100]	@ 0x64
  s_command.NbData             = 1;
 80028a2:	2301      	movs	r3, #1
 80028a4:	657b      	str	r3, [r7, #84]	@ 0x54


  /* Configure the command */
  if (HAL_OSPI_Command(p_hqspi, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80028a6:	f107 0318 	add.w	r3, r7, #24
 80028aa:	f241 3288 	movw	r2, #5000	@ 0x1388
 80028ae:	4619      	mov	r1, r3
 80028b0:	68f8      	ldr	r0, [r7, #12]
 80028b2:	f002 fe6c 	bl	800558e <HAL_OSPI_Command>
 80028b6:	4603      	mov	r3, r0
 80028b8:	2b00      	cmp	r3, #0
 80028ba:	d001      	beq.n	80028c0 <QSPI_ReadStatus+0x7a>
  {
    return QSPI_ERROR;
 80028bc:	2301      	movs	r3, #1
 80028be:	e010      	b.n	80028e2 <QSPI_ReadStatus+0x9c>
  }

  /* Reception of the data */
  if (HAL_OSPI_Receive(p_hqspi, &reg, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80028c0:	f107 0317 	add.w	r3, r7, #23
 80028c4:	f241 3288 	movw	r2, #5000	@ 0x1388
 80028c8:	4619      	mov	r1, r3
 80028ca:	68f8      	ldr	r0, [r7, #12]
 80028cc:	f002 ff5f 	bl	800578e <HAL_OSPI_Receive>
 80028d0:	4603      	mov	r3, r0
 80028d2:	2b00      	cmp	r3, #0
 80028d4:	d001      	beq.n	80028da <QSPI_ReadStatus+0x94>
  {
    return QSPI_ERROR;
 80028d6:	2301      	movs	r3, #1
 80028d8:	e003      	b.n	80028e2 <QSPI_ReadStatus+0x9c>
  }

  *p_data = reg;
 80028da:	7dfa      	ldrb	r2, [r7, #23]
 80028dc:	687b      	ldr	r3, [r7, #4]
 80028de:	701a      	strb	r2, [r3, #0]

  return QSPI_OK;
 80028e0:	2300      	movs	r3, #0
}
 80028e2:	4618      	mov	r0, r3
 80028e4:	3768      	adds	r7, #104	@ 0x68
 80028e6:	46bd      	mov	sp, r7
 80028e8:	bd80      	pop	{r7, pc}

080028ea <QSPI_WriteStatus>:

static uint8_t QSPI_WriteStatus(OSPI_HandleTypeDef *p_hqspi, uint8_t cmd, uint8_t data)
{
 80028ea:	b580      	push	{r7, lr}
 80028ec:	b096      	sub	sp, #88	@ 0x58
 80028ee:	af00      	add	r7, sp, #0
 80028f0:	6078      	str	r0, [r7, #4]
 80028f2:	460b      	mov	r3, r1
 80028f4:	70fb      	strb	r3, [r7, #3]
 80028f6:	4613      	mov	r3, r2
 80028f8:	70bb      	strb	r3, [r7, #2]
  OSPI_RegularCmdTypeDef s_command = {0};
 80028fa:	f107 0308 	add.w	r3, r7, #8
 80028fe:	2250      	movs	r2, #80	@ 0x50
 8002900:	2100      	movs	r1, #0
 8002902:	4618      	mov	r0, r3
 8002904:	f023 fa9e 	bl	8025e44 <memset>

  /* Initialize the program command */
  s_command.OperationType      = HAL_OSPI_OPTYPE_COMMON_CFG;
 8002908:	2300      	movs	r3, #0
 800290a:	60bb      	str	r3, [r7, #8]
  s_command.FlashId            = HAL_OSPI_FLASH_ID_1;
 800290c:	2300      	movs	r3, #0
 800290e:	60fb      	str	r3, [r7, #12]
  s_command.InstructionMode    = HAL_OSPI_INSTRUCTION_1_LINE;
 8002910:	2301      	movs	r3, #1
 8002912:	617b      	str	r3, [r7, #20]
  s_command.InstructionDtrMode = HAL_OSPI_INSTRUCTION_DTR_DISABLE;
 8002914:	2300      	movs	r3, #0
 8002916:	61fb      	str	r3, [r7, #28]
  s_command.InstructionSize    = HAL_OSPI_INSTRUCTION_8_BITS;
 8002918:	2300      	movs	r3, #0
 800291a:	61bb      	str	r3, [r7, #24]
  s_command.Instruction        = cmd;
 800291c:	78fb      	ldrb	r3, [r7, #3]
 800291e:	613b      	str	r3, [r7, #16]

  s_command.AddressMode        = HAL_OSPI_ADDRESS_NONE;
 8002920:	2300      	movs	r3, #0
 8002922:	627b      	str	r3, [r7, #36]	@ 0x24
  s_command.AddressDtrMode     = HAL_OSPI_ADDRESS_DTR_DISABLE;
 8002924:	2300      	movs	r3, #0
 8002926:	62fb      	str	r3, [r7, #44]	@ 0x2c
  s_command.AddressSize        = HAL_OSPI_ADDRESS_24_BITS;
 8002928:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800292c:	62bb      	str	r3, [r7, #40]	@ 0x28

  s_command.AlternateBytesMode = HAL_OSPI_ALTERNATE_BYTES_NONE;
 800292e:	2300      	movs	r3, #0
 8002930:	637b      	str	r3, [r7, #52]	@ 0x34

  s_command.DataMode           = HAL_OSPI_DATA_1_LINE;
 8002932:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8002936:	643b      	str	r3, [r7, #64]	@ 0x40
  s_command.DataDtrMode        = HAL_OSPI_DATA_DTR_DISABLE;
 8002938:	2300      	movs	r3, #0
 800293a:	64bb      	str	r3, [r7, #72]	@ 0x48
  s_command.DummyCycles        = 0;
 800293c:	2300      	movs	r3, #0
 800293e:	64fb      	str	r3, [r7, #76]	@ 0x4c
  s_command.DQSMode            = HAL_OSPI_DQS_DISABLE;
 8002940:	2300      	movs	r3, #0
 8002942:	653b      	str	r3, [r7, #80]	@ 0x50
  s_command.SIOOMode           = HAL_OSPI_SIOO_INST_EVERY_CMD;
 8002944:	2300      	movs	r3, #0
 8002946:	657b      	str	r3, [r7, #84]	@ 0x54
  s_command.NbData             = 1;
 8002948:	2301      	movs	r3, #1
 800294a:	647b      	str	r3, [r7, #68]	@ 0x44

  /* Enable write operations */
  if (QSPI_WriteEnable(p_hqspi) != QSPI_OK)
 800294c:	6878      	ldr	r0, [r7, #4]
 800294e:	f7ff fea9 	bl	80026a4 <QSPI_WriteEnable>
 8002952:	4603      	mov	r3, r0
 8002954:	2b00      	cmp	r3, #0
 8002956:	d001      	beq.n	800295c <QSPI_WriteStatus+0x72>
  {
    return QSPI_ERROR;
 8002958:	2301      	movs	r3, #1
 800295a:	e023      	b.n	80029a4 <QSPI_WriteStatus+0xba>
  }

  /* Configure the command */
  if (HAL_OSPI_Command(p_hqspi, &s_command, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800295c:	f107 0308 	add.w	r3, r7, #8
 8002960:	f241 3288 	movw	r2, #5000	@ 0x1388
 8002964:	4619      	mov	r1, r3
 8002966:	6878      	ldr	r0, [r7, #4]
 8002968:	f002 fe11 	bl	800558e <HAL_OSPI_Command>
 800296c:	4603      	mov	r3, r0
 800296e:	2b00      	cmp	r3, #0
 8002970:	d001      	beq.n	8002976 <QSPI_WriteStatus+0x8c>
  {
    return QSPI_ERROR;
 8002972:	2301      	movs	r3, #1
 8002974:	e016      	b.n	80029a4 <QSPI_WriteStatus+0xba>
  }

  /* Transmission of the data */
  if (HAL_OSPI_Transmit(p_hqspi, &data, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8002976:	1cbb      	adds	r3, r7, #2
 8002978:	f241 3288 	movw	r2, #5000	@ 0x1388
 800297c:	4619      	mov	r1, r3
 800297e:	6878      	ldr	r0, [r7, #4]
 8002980:	f002 fe92 	bl	80056a8 <HAL_OSPI_Transmit>
 8002984:	4603      	mov	r3, r0
 8002986:	2b00      	cmp	r3, #0
 8002988:	d001      	beq.n	800298e <QSPI_WriteStatus+0xa4>
  {
    return QSPI_ERROR;
 800298a:	2301      	movs	r3, #1
 800298c:	e00a      	b.n	80029a4 <QSPI_WriteStatus+0xba>
  }

  /* Configure automatic polling mode to wait for end of program */
  if (QSPI_AutoPollingMemReady(p_hqspi, HAL_OSPI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 800298e:	f241 3188 	movw	r1, #5000	@ 0x1388
 8002992:	6878      	ldr	r0, [r7, #4]
 8002994:	f7ff fef8 	bl	8002788 <QSPI_AutoPollingMemReady>
 8002998:	4603      	mov	r3, r0
 800299a:	2b00      	cmp	r3, #0
 800299c:	d001      	beq.n	80029a2 <QSPI_WriteStatus+0xb8>
  {
    return QSPI_ERROR;
 800299e:	2301      	movs	r3, #1
 80029a0:	e000      	b.n	80029a4 <QSPI_WriteStatus+0xba>
  }


  return QSPI_OK;
 80029a2:	2300      	movs	r3, #0
}
 80029a4:	4618      	mov	r0, r3
 80029a6:	3758      	adds	r7, #88	@ 0x58
 80029a8:	46bd      	mov	sp, r7
 80029aa:	bd80      	pop	{r7, pc}

080029ac <sdramInit>:




bool sdramInit(void)
{
 80029ac:	b580      	push	{r7, lr}
 80029ae:	b088      	sub	sp, #32
 80029b0:	af00      	add	r7, sp, #0
  FMC_SDRAM_CommandTypeDef Command;
  uint32_t SDRAM_TIMEOUT = 0xFFFF;
 80029b2:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80029b6:	61fb      	str	r3, [r7, #28]


  // Step 1: Configure a clock configuration enable command
  //
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 80029b8:	2301      	movs	r3, #1
 80029ba:	607b      	str	r3, [r7, #4]
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80029bc:	2310      	movs	r3, #16
 80029be:	60bb      	str	r3, [r7, #8]
  Command.AutoRefreshNumber      = 1;
 80029c0:	2301      	movs	r3, #1
 80029c2:	60fb      	str	r3, [r7, #12]
  Command.ModeRegisterDefinition = 0;
 80029c4:	2300      	movs	r3, #0
 80029c6:	613b      	str	r3, [r7, #16]
  if(HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT) != HAL_OK)
 80029c8:	1d3b      	adds	r3, r7, #4
 80029ca:	69fa      	ldr	r2, [r7, #28]
 80029cc:	4619      	mov	r1, r3
 80029ce:	482f      	ldr	r0, [pc, #188]	@ (8002a8c <sdramInit+0xe0>)
 80029d0:	f006 fdd8 	bl	8009584 <HAL_SDRAM_SendCommand>
 80029d4:	4603      	mov	r3, r0
 80029d6:	2b00      	cmp	r3, #0
 80029d8:	d001      	beq.n	80029de <sdramInit+0x32>
  {
    Error_Handler( );
 80029da:	f7fe fcb3 	bl	8001344 <Error_Handler>


  // Step 2: Insert 100 us minimum delay */
  // Inserted delay is equal to 1 ms due to systick time base unit (ms)
  //
  HAL_Delay(1);
 80029de:	2001      	movs	r0, #1
 80029e0:	f000 fbda 	bl	8003198 <HAL_Delay>



  // Step 3: Configure a PALL (precharge all) command
  //
  Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 80029e4:	2302      	movs	r3, #2
 80029e6:	607b      	str	r3, [r7, #4]
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80029e8:	2310      	movs	r3, #16
 80029ea:	60bb      	str	r3, [r7, #8]
  Command.AutoRefreshNumber      = 1;
 80029ec:	2301      	movs	r3, #1
 80029ee:	60fb      	str	r3, [r7, #12]
  Command.ModeRegisterDefinition = 0;
 80029f0:	2300      	movs	r3, #0
 80029f2:	613b      	str	r3, [r7, #16]
  if(HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT) != HAL_OK)
 80029f4:	1d3b      	adds	r3, r7, #4
 80029f6:	69fa      	ldr	r2, [r7, #28]
 80029f8:	4619      	mov	r1, r3
 80029fa:	4824      	ldr	r0, [pc, #144]	@ (8002a8c <sdramInit+0xe0>)
 80029fc:	f006 fdc2 	bl	8009584 <HAL_SDRAM_SendCommand>
 8002a00:	4603      	mov	r3, r0
 8002a02:	2b00      	cmp	r3, #0
 8002a04:	d001      	beq.n	8002a0a <sdramInit+0x5e>
  {
    Error_Handler( );
 8002a06:	f7fe fc9d 	bl	8001344 <Error_Handler>
  }


  // Step 4: Configure a Refresh command
  //
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 8002a0a:	2303      	movs	r3, #3
 8002a0c:	607b      	str	r3, [r7, #4]
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8002a0e:	2310      	movs	r3, #16
 8002a10:	60bb      	str	r3, [r7, #8]
  Command.AutoRefreshNumber      = 8;
 8002a12:	2308      	movs	r3, #8
 8002a14:	60fb      	str	r3, [r7, #12]
  Command.ModeRegisterDefinition = 0;
 8002a16:	2300      	movs	r3, #0
 8002a18:	613b      	str	r3, [r7, #16]
  if(HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT) != HAL_OK)
 8002a1a:	1d3b      	adds	r3, r7, #4
 8002a1c:	69fa      	ldr	r2, [r7, #28]
 8002a1e:	4619      	mov	r1, r3
 8002a20:	481a      	ldr	r0, [pc, #104]	@ (8002a8c <sdramInit+0xe0>)
 8002a22:	f006 fdaf 	bl	8009584 <HAL_SDRAM_SendCommand>
 8002a26:	4603      	mov	r3, r0
 8002a28:	2b00      	cmp	r3, #0
 8002a2a:	d001      	beq.n	8002a30 <sdramInit+0x84>
  {
    Error_Handler( );
 8002a2c:	f7fe fc8a 	bl	8001344 <Error_Handler>
  }


  // Step 5: Program the external memory mode register
  //
  uint32_t mode_reg = 0;
 8002a30:	2300      	movs	r3, #0
 8002a32:	61bb      	str	r3, [r7, #24]

  mode_reg |= (0 << 0); // Burst Length = 1
  mode_reg |= (0 << 3); // Burst Type
                        //   0 : Sequential
                        //   1 : Interleaved
  mode_reg |= (2 << 4); // CAS Latency Mode
 8002a34:	69bb      	ldr	r3, [r7, #24]
 8002a36:	f043 0320 	orr.w	r3, r3, #32
 8002a3a:	61bb      	str	r3, [r7, #24]
                        //   2 :
                        //   3 :
  mode_reg |= (0 << 7); // Operation Mode
  mode_reg |= (1 << 9); // Write Burst Mode
 8002a3c:	69bb      	ldr	r3, [r7, #24]
 8002a3e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8002a42:	61bb      	str	r3, [r7, #24]
                        //   0 : Programmed Burst Length
                        //   1 : Single Location Access

  Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
 8002a44:	2304      	movs	r3, #4
 8002a46:	607b      	str	r3, [r7, #4]
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8002a48:	2310      	movs	r3, #16
 8002a4a:	60bb      	str	r3, [r7, #8]
  Command.AutoRefreshNumber      = 1;
 8002a4c:	2301      	movs	r3, #1
 8002a4e:	60fb      	str	r3, [r7, #12]
  Command.ModeRegisterDefinition = mode_reg;
 8002a50:	69bb      	ldr	r3, [r7, #24]
 8002a52:	613b      	str	r3, [r7, #16]
  if(HAL_SDRAM_SendCommand(&hsdram1, &Command, SDRAM_TIMEOUT) != HAL_OK)
 8002a54:	1d3b      	adds	r3, r7, #4
 8002a56:	69fa      	ldr	r2, [r7, #28]
 8002a58:	4619      	mov	r1, r3
 8002a5a:	480c      	ldr	r0, [pc, #48]	@ (8002a8c <sdramInit+0xe0>)
 8002a5c:	f006 fd92 	bl	8009584 <HAL_SDRAM_SendCommand>
 8002a60:	4603      	mov	r3, r0
 8002a62:	2b00      	cmp	r3, #0
 8002a64:	d001      	beq.n	8002a6a <sdramInit+0xbe>
  {
    Error_Handler( );
 8002a66:	f7fe fc6d 	bl	8001344 <Error_Handler>
  // refresh rate = (COUNT + 1) * SDRAM clock freq (91.6666Mhz)
  //
  // COUNT = (SDRAM refresh period/Number of rows) - 20
  //       = (64ms / 8192) - 20
  //       = 7.81us * 91.666 - 20 = 695
  uint32_t refresh_count = 695;
 8002a6a:	f240 23b7 	movw	r3, #695	@ 0x2b7
 8002a6e:	617b      	str	r3, [r7, #20]

  if(HAL_SDRAM_ProgramRefreshRate(&hsdram1, refresh_count) != HAL_OK)
 8002a70:	6979      	ldr	r1, [r7, #20]
 8002a72:	4806      	ldr	r0, [pc, #24]	@ (8002a8c <sdramInit+0xe0>)
 8002a74:	f006 fdbb 	bl	80095ee <HAL_SDRAM_ProgramRefreshRate>
 8002a78:	4603      	mov	r3, r0
 8002a7a:	2b00      	cmp	r3, #0
 8002a7c:	d001      	beq.n	8002a82 <sdramInit+0xd6>
  {
    Error_Handler( );
 8002a7e:	f7fe fc61 	bl	8001344 <Error_Handler>
  }

  return true;
 8002a82:	2301      	movs	r3, #1
}
 8002a84:	4618      	mov	r0, r3
 8002a86:	3720      	adds	r7, #32
 8002a88:	46bd      	mov	sp, r7
 8002a8a:	bd80      	pop	{r7, pc}
 8002a8c:	240003a8 	.word	0x240003a8

08002a90 <st7701Init>:




bool st7701Init(void)
{
 8002a90:	b580      	push	{r7, lr}
 8002a92:	af00      	add	r7, sp, #0
  st7701InitRegs();
 8002a94:	f000 f803 	bl	8002a9e <st7701InitRegs>
  return true;
 8002a98:	2301      	movs	r3, #1
}
 8002a9a:	4618      	mov	r0, r3
 8002a9c:	bd80      	pop	{r7, pc}

08002a9e <st7701InitRegs>:

bool st7701InitRegs(void)
{
 8002a9e:	b580      	push	{r7, lr}
 8002aa0:	b082      	sub	sp, #8
 8002aa2:	af00      	add	r7, sp, #0
  //PAGE1
  st7701WriteCmd(0xFF);
 8002aa4:	20ff      	movs	r0, #255	@ 0xff
 8002aa6:	f000 fa6b 	bl	8002f80 <st7701WriteCmd>
  st7701WriteData(0x77);
 8002aaa:	2077      	movs	r0, #119	@ 0x77
 8002aac:	f000 fa8e 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x01);
 8002ab0:	2001      	movs	r0, #1
 8002ab2:	f000 fa8b 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x00);
 8002ab6:	2000      	movs	r0, #0
 8002ab8:	f000 fa88 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x00);
 8002abc:	2000      	movs	r0, #0
 8002abe:	f000 fa85 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x10);
 8002ac2:	2010      	movs	r0, #16
 8002ac4:	f000 fa82 	bl	8002fcc <st7701WriteData>

  st7701WriteCmd(0xC0);
 8002ac8:	20c0      	movs	r0, #192	@ 0xc0
 8002aca:	f000 fa59 	bl	8002f80 <st7701WriteCmd>
  st7701WriteData(0x3B);
 8002ace:	203b      	movs	r0, #59	@ 0x3b
 8002ad0:	f000 fa7c 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x00);
 8002ad4:	2000      	movs	r0, #0
 8002ad6:	f000 fa79 	bl	8002fcc <st7701WriteData>

  st7701WriteCmd(0xC1);
 8002ada:	20c1      	movs	r0, #193	@ 0xc1
 8002adc:	f000 fa50 	bl	8002f80 <st7701WriteCmd>
  st7701WriteData(0x0D);
 8002ae0:	200d      	movs	r0, #13
 8002ae2:	f000 fa73 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x02);
 8002ae6:	2002      	movs	r0, #2
 8002ae8:	f000 fa70 	bl	8002fcc <st7701WriteData>

  st7701WriteCmd(0xC2);
 8002aec:	20c2      	movs	r0, #194	@ 0xc2
 8002aee:	f000 fa47 	bl	8002f80 <st7701WriteCmd>
  st7701WriteData(0x31);
 8002af2:	2031      	movs	r0, #49	@ 0x31
 8002af4:	f000 fa6a 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x05);
 8002af8:	2005      	movs	r0, #5
 8002afa:	f000 fa67 	bl	8002fcc <st7701WriteData>

  st7701WriteCmd(0xCD);
 8002afe:	20cd      	movs	r0, #205	@ 0xcd
 8002b00:	f000 fa3e 	bl	8002f80 <st7701WriteCmd>
  st7701WriteData(0x08);
 8002b04:	2008      	movs	r0, #8
 8002b06:	f000 fa61 	bl	8002fcc <st7701WriteData>

  st7701WriteCmd(0xB0);
 8002b0a:	20b0      	movs	r0, #176	@ 0xb0
 8002b0c:	f000 fa38 	bl	8002f80 <st7701WriteCmd>
  st7701WriteData(0x00); //Positive Voltage Gamma Control
 8002b10:	2000      	movs	r0, #0
 8002b12:	f000 fa5b 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x11);
 8002b16:	2011      	movs	r0, #17
 8002b18:	f000 fa58 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x18);
 8002b1c:	2018      	movs	r0, #24
 8002b1e:	f000 fa55 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x0E);
 8002b22:	200e      	movs	r0, #14
 8002b24:	f000 fa52 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x11);
 8002b28:	2011      	movs	r0, #17
 8002b2a:	f000 fa4f 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x06);
 8002b2e:	2006      	movs	r0, #6
 8002b30:	f000 fa4c 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x07);
 8002b34:	2007      	movs	r0, #7
 8002b36:	f000 fa49 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x08);
 8002b3a:	2008      	movs	r0, #8
 8002b3c:	f000 fa46 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x07);
 8002b40:	2007      	movs	r0, #7
 8002b42:	f000 fa43 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x22);
 8002b46:	2022      	movs	r0, #34	@ 0x22
 8002b48:	f000 fa40 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x04);
 8002b4c:	2004      	movs	r0, #4
 8002b4e:	f000 fa3d 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x12);
 8002b52:	2012      	movs	r0, #18
 8002b54:	f000 fa3a 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x0F);
 8002b58:	200f      	movs	r0, #15
 8002b5a:	f000 fa37 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xAA);
 8002b5e:	20aa      	movs	r0, #170	@ 0xaa
 8002b60:	f000 fa34 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x31);
 8002b64:	2031      	movs	r0, #49	@ 0x31
 8002b66:	f000 fa31 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x18);
 8002b6a:	2018      	movs	r0, #24
 8002b6c:	f000 fa2e 	bl	8002fcc <st7701WriteData>

  st7701WriteCmd(0xB1);
 8002b70:	20b1      	movs	r0, #177	@ 0xb1
 8002b72:	f000 fa05 	bl	8002f80 <st7701WriteCmd>
  st7701WriteData(0x00); //Negative Voltage Gamma Control
 8002b76:	2000      	movs	r0, #0
 8002b78:	f000 fa28 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x11);
 8002b7c:	2011      	movs	r0, #17
 8002b7e:	f000 fa25 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x19);
 8002b82:	2019      	movs	r0, #25
 8002b84:	f000 fa22 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x0E);
 8002b88:	200e      	movs	r0, #14
 8002b8a:	f000 fa1f 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x12);
 8002b8e:	2012      	movs	r0, #18
 8002b90:	f000 fa1c 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x07);
 8002b94:	2007      	movs	r0, #7
 8002b96:	f000 fa19 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x08);
 8002b9a:	2008      	movs	r0, #8
 8002b9c:	f000 fa16 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x08);
 8002ba0:	2008      	movs	r0, #8
 8002ba2:	f000 fa13 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x08);
 8002ba6:	2008      	movs	r0, #8
 8002ba8:	f000 fa10 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x22);
 8002bac:	2022      	movs	r0, #34	@ 0x22
 8002bae:	f000 fa0d 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x04);
 8002bb2:	2004      	movs	r0, #4
 8002bb4:	f000 fa0a 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x11);
 8002bb8:	2011      	movs	r0, #17
 8002bba:	f000 fa07 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x11);
 8002bbe:	2011      	movs	r0, #17
 8002bc0:	f000 fa04 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xA9);
 8002bc4:	20a9      	movs	r0, #169	@ 0xa9
 8002bc6:	f000 fa01 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x32);
 8002bca:	2032      	movs	r0, #50	@ 0x32
 8002bcc:	f000 f9fe 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x18);
 8002bd0:	2018      	movs	r0, #24
 8002bd2:	f000 f9fb 	bl	8002fcc <st7701WriteData>

  //PAGE1
  st7701WriteCmd(0xFF);
 8002bd6:	20ff      	movs	r0, #255	@ 0xff
 8002bd8:	f000 f9d2 	bl	8002f80 <st7701WriteCmd>
  st7701WriteData(0x77);
 8002bdc:	2077      	movs	r0, #119	@ 0x77
 8002bde:	f000 f9f5 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x01);
 8002be2:	2001      	movs	r0, #1
 8002be4:	f000 f9f2 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x00);
 8002be8:	2000      	movs	r0, #0
 8002bea:	f000 f9ef 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x00);
 8002bee:	2000      	movs	r0, #0
 8002bf0:	f000 f9ec 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x11);
 8002bf4:	2011      	movs	r0, #17
 8002bf6:	f000 f9e9 	bl	8002fcc <st7701WriteData>

  st7701WriteCmd(0xB0);    st7701WriteData(0x60); //Vop=4.7375v
 8002bfa:	20b0      	movs	r0, #176	@ 0xb0
 8002bfc:	f000 f9c0 	bl	8002f80 <st7701WriteCmd>
 8002c00:	2060      	movs	r0, #96	@ 0x60
 8002c02:	f000 f9e3 	bl	8002fcc <st7701WriteData>
  st7701WriteCmd(0xB1);    st7701WriteData(0x32); //VCOM=32
 8002c06:	20b1      	movs	r0, #177	@ 0xb1
 8002c08:	f000 f9ba 	bl	8002f80 <st7701WriteCmd>
 8002c0c:	2032      	movs	r0, #50	@ 0x32
 8002c0e:	f000 f9dd 	bl	8002fcc <st7701WriteData>
  st7701WriteCmd(0xB2);    st7701WriteData(0x07); //VGH=15v
 8002c12:	20b2      	movs	r0, #178	@ 0xb2
 8002c14:	f000 f9b4 	bl	8002f80 <st7701WriteCmd>
 8002c18:	2007      	movs	r0, #7
 8002c1a:	f000 f9d7 	bl	8002fcc <st7701WriteData>
  st7701WriteCmd(0xB3);    st7701WriteData(0x80);
 8002c1e:	20b3      	movs	r0, #179	@ 0xb3
 8002c20:	f000 f9ae 	bl	8002f80 <st7701WriteCmd>
 8002c24:	2080      	movs	r0, #128	@ 0x80
 8002c26:	f000 f9d1 	bl	8002fcc <st7701WriteData>
  st7701WriteCmd(0xB5);    st7701WriteData(0x49); //VGL=-10.17v
 8002c2a:	20b5      	movs	r0, #181	@ 0xb5
 8002c2c:	f000 f9a8 	bl	8002f80 <st7701WriteCmd>
 8002c30:	2049      	movs	r0, #73	@ 0x49
 8002c32:	f000 f9cb 	bl	8002fcc <st7701WriteData>
  st7701WriteCmd(0xB7);    st7701WriteData(0x85);
 8002c36:	20b7      	movs	r0, #183	@ 0xb7
 8002c38:	f000 f9a2 	bl	8002f80 <st7701WriteCmd>
 8002c3c:	2085      	movs	r0, #133	@ 0x85
 8002c3e:	f000 f9c5 	bl	8002fcc <st7701WriteData>
  st7701WriteCmd(0xB8);    st7701WriteData(0x21); //AVDD=6.6 & AVCL=-4.6
 8002c42:	20b8      	movs	r0, #184	@ 0xb8
 8002c44:	f000 f99c 	bl	8002f80 <st7701WriteCmd>
 8002c48:	2021      	movs	r0, #33	@ 0x21
 8002c4a:	f000 f9bf 	bl	8002fcc <st7701WriteData>
  st7701WriteCmd(0xC1);    st7701WriteData(0x78);
 8002c4e:	20c1      	movs	r0, #193	@ 0xc1
 8002c50:	f000 f996 	bl	8002f80 <st7701WriteCmd>
 8002c54:	2078      	movs	r0, #120	@ 0x78
 8002c56:	f000 f9b9 	bl	8002fcc <st7701WriteData>
  st7701WriteCmd(0xC2);    st7701WriteData(0x78);
 8002c5a:	20c2      	movs	r0, #194	@ 0xc2
 8002c5c:	f000 f990 	bl	8002f80 <st7701WriteCmd>
 8002c60:	2078      	movs	r0, #120	@ 0x78
 8002c62:	f000 f9b3 	bl	8002fcc <st7701WriteData>

  st7701WriteCmd(0xE0);
 8002c66:	20e0      	movs	r0, #224	@ 0xe0
 8002c68:	f000 f98a 	bl	8002f80 <st7701WriteCmd>
  st7701WriteData(0x00);
 8002c6c:	2000      	movs	r0, #0
 8002c6e:	f000 f9ad 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x1B);
 8002c72:	201b      	movs	r0, #27
 8002c74:	f000 f9aa 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x02);
 8002c78:	2002      	movs	r0, #2
 8002c7a:	f000 f9a7 	bl	8002fcc <st7701WriteData>

  st7701WriteCmd(0xE1);
 8002c7e:	20e1      	movs	r0, #225	@ 0xe1
 8002c80:	f000 f97e 	bl	8002f80 <st7701WriteCmd>
  st7701WriteData(0x08);
 8002c84:	2008      	movs	r0, #8
 8002c86:	f000 f9a1 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xA0);
 8002c8a:	20a0      	movs	r0, #160	@ 0xa0
 8002c8c:	f000 f99e 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x00);
 8002c90:	2000      	movs	r0, #0
 8002c92:	f000 f99b 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x00);
 8002c96:	2000      	movs	r0, #0
 8002c98:	f000 f998 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x07);
 8002c9c:	2007      	movs	r0, #7
 8002c9e:	f000 f995 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xA0);
 8002ca2:	20a0      	movs	r0, #160	@ 0xa0
 8002ca4:	f000 f992 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x00);
 8002ca8:	2000      	movs	r0, #0
 8002caa:	f000 f98f 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x00);
 8002cae:	2000      	movs	r0, #0
 8002cb0:	f000 f98c 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x00);
 8002cb4:	2000      	movs	r0, #0
 8002cb6:	f000 f989 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x44);
 8002cba:	2044      	movs	r0, #68	@ 0x44
 8002cbc:	f000 f986 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x44);
 8002cc0:	2044      	movs	r0, #68	@ 0x44
 8002cc2:	f000 f983 	bl	8002fcc <st7701WriteData>

  st7701WriteCmd(0xE2);
 8002cc6:	20e2      	movs	r0, #226	@ 0xe2
 8002cc8:	f000 f95a 	bl	8002f80 <st7701WriteCmd>
  st7701WriteData(0x11);
 8002ccc:	2011      	movs	r0, #17
 8002cce:	f000 f97d 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x11);
 8002cd2:	2011      	movs	r0, #17
 8002cd4:	f000 f97a 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x44);
 8002cd8:	2044      	movs	r0, #68	@ 0x44
 8002cda:	f000 f977 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x44);
 8002cde:	2044      	movs	r0, #68	@ 0x44
 8002ce0:	f000 f974 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xED);
 8002ce4:	20ed      	movs	r0, #237	@ 0xed
 8002ce6:	f000 f971 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xA0);
 8002cea:	20a0      	movs	r0, #160	@ 0xa0
 8002cec:	f000 f96e 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x00);
 8002cf0:	2000      	movs	r0, #0
 8002cf2:	f000 f96b 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x00);
 8002cf6:	2000      	movs	r0, #0
 8002cf8:	f000 f968 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xEC);
 8002cfc:	20ec      	movs	r0, #236	@ 0xec
 8002cfe:	f000 f965 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xA0);
 8002d02:	20a0      	movs	r0, #160	@ 0xa0
 8002d04:	f000 f962 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x00);
 8002d08:	2000      	movs	r0, #0
 8002d0a:	f000 f95f 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x00);
 8002d0e:	2000      	movs	r0, #0
 8002d10:	f000 f95c 	bl	8002fcc <st7701WriteData>

  st7701WriteCmd(0xE3);
 8002d14:	20e3      	movs	r0, #227	@ 0xe3
 8002d16:	f000 f933 	bl	8002f80 <st7701WriteCmd>
  st7701WriteData(0x00);
 8002d1a:	2000      	movs	r0, #0
 8002d1c:	f000 f956 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x00);
 8002d20:	2000      	movs	r0, #0
 8002d22:	f000 f953 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x11);
 8002d26:	2011      	movs	r0, #17
 8002d28:	f000 f950 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x11);
 8002d2c:	2011      	movs	r0, #17
 8002d2e:	f000 f94d 	bl	8002fcc <st7701WriteData>

  st7701WriteCmd(0xE4);
 8002d32:	20e4      	movs	r0, #228	@ 0xe4
 8002d34:	f000 f924 	bl	8002f80 <st7701WriteCmd>
  st7701WriteData(0x44);
 8002d38:	2044      	movs	r0, #68	@ 0x44
 8002d3a:	f000 f947 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x44);
 8002d3e:	2044      	movs	r0, #68	@ 0x44
 8002d40:	f000 f944 	bl	8002fcc <st7701WriteData>

  st7701WriteCmd(0xE5);
 8002d44:	20e5      	movs	r0, #229	@ 0xe5
 8002d46:	f000 f91b 	bl	8002f80 <st7701WriteCmd>
  st7701WriteData(0x0A);
 8002d4a:	200a      	movs	r0, #10
 8002d4c:	f000 f93e 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xE9);
 8002d50:	20e9      	movs	r0, #233	@ 0xe9
 8002d52:	f000 f93b 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xD8);
 8002d56:	20d8      	movs	r0, #216	@ 0xd8
 8002d58:	f000 f938 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xA0);
 8002d5c:	20a0      	movs	r0, #160	@ 0xa0
 8002d5e:	f000 f935 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x0C);
 8002d62:	200c      	movs	r0, #12
 8002d64:	f000 f932 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xEB);
 8002d68:	20eb      	movs	r0, #235	@ 0xeb
 8002d6a:	f000 f92f 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xD8);
 8002d6e:	20d8      	movs	r0, #216	@ 0xd8
 8002d70:	f000 f92c 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xA0);
 8002d74:	20a0      	movs	r0, #160	@ 0xa0
 8002d76:	f000 f929 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x0E);
 8002d7a:	200e      	movs	r0, #14
 8002d7c:	f000 f926 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xED);
 8002d80:	20ed      	movs	r0, #237	@ 0xed
 8002d82:	f000 f923 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xD8);
 8002d86:	20d8      	movs	r0, #216	@ 0xd8
 8002d88:	f000 f920 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xA0);
 8002d8c:	20a0      	movs	r0, #160	@ 0xa0
 8002d8e:	f000 f91d 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x10);
 8002d92:	2010      	movs	r0, #16
 8002d94:	f000 f91a 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xEF);
 8002d98:	20ef      	movs	r0, #239	@ 0xef
 8002d9a:	f000 f917 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xD8);
 8002d9e:	20d8      	movs	r0, #216	@ 0xd8
 8002da0:	f000 f914 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xA0);
 8002da4:	20a0      	movs	r0, #160	@ 0xa0
 8002da6:	f000 f911 	bl	8002fcc <st7701WriteData>

  st7701WriteCmd(0xE6);
 8002daa:	20e6      	movs	r0, #230	@ 0xe6
 8002dac:	f000 f8e8 	bl	8002f80 <st7701WriteCmd>
  st7701WriteData(0x00);
 8002db0:	2000      	movs	r0, #0
 8002db2:	f000 f90b 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x00);
 8002db6:	2000      	movs	r0, #0
 8002db8:	f000 f908 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x11);
 8002dbc:	2011      	movs	r0, #17
 8002dbe:	f000 f905 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x11);
 8002dc2:	2011      	movs	r0, #17
 8002dc4:	f000 f902 	bl	8002fcc <st7701WriteData>

  st7701WriteCmd(0xE7);
 8002dc8:	20e7      	movs	r0, #231	@ 0xe7
 8002dca:	f000 f8d9 	bl	8002f80 <st7701WriteCmd>
  st7701WriteData(0x44);
 8002dce:	2044      	movs	r0, #68	@ 0x44
 8002dd0:	f000 f8fc 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x44);
 8002dd4:	2044      	movs	r0, #68	@ 0x44
 8002dd6:	f000 f8f9 	bl	8002fcc <st7701WriteData>

  st7701WriteCmd(0xE8);
 8002dda:	20e8      	movs	r0, #232	@ 0xe8
 8002ddc:	f000 f8d0 	bl	8002f80 <st7701WriteCmd>
  st7701WriteData(0x09);
 8002de0:	2009      	movs	r0, #9
 8002de2:	f000 f8f3 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xE8);
 8002de6:	20e8      	movs	r0, #232	@ 0xe8
 8002de8:	f000 f8f0 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xD8);
 8002dec:	20d8      	movs	r0, #216	@ 0xd8
 8002dee:	f000 f8ed 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xA0);
 8002df2:	20a0      	movs	r0, #160	@ 0xa0
 8002df4:	f000 f8ea 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x0B);
 8002df8:	200b      	movs	r0, #11
 8002dfa:	f000 f8e7 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xEA);
 8002dfe:	20ea      	movs	r0, #234	@ 0xea
 8002e00:	f000 f8e4 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xD8);
 8002e04:	20d8      	movs	r0, #216	@ 0xd8
 8002e06:	f000 f8e1 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xA0);
 8002e0a:	20a0      	movs	r0, #160	@ 0xa0
 8002e0c:	f000 f8de 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x0D);
 8002e10:	200d      	movs	r0, #13
 8002e12:	f000 f8db 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xEC);
 8002e16:	20ec      	movs	r0, #236	@ 0xec
 8002e18:	f000 f8d8 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xD8);
 8002e1c:	20d8      	movs	r0, #216	@ 0xd8
 8002e1e:	f000 f8d5 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xA0);
 8002e22:	20a0      	movs	r0, #160	@ 0xa0
 8002e24:	f000 f8d2 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x0F);
 8002e28:	200f      	movs	r0, #15
 8002e2a:	f000 f8cf 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xEE);
 8002e2e:	20ee      	movs	r0, #238	@ 0xee
 8002e30:	f000 f8cc 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xD8);
 8002e34:	20d8      	movs	r0, #216	@ 0xd8
 8002e36:	f000 f8c9 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xA0);
 8002e3a:	20a0      	movs	r0, #160	@ 0xa0
 8002e3c:	f000 f8c6 	bl	8002fcc <st7701WriteData>

  st7701WriteCmd(0xEB);
 8002e40:	20eb      	movs	r0, #235	@ 0xeb
 8002e42:	f000 f89d 	bl	8002f80 <st7701WriteCmd>
  st7701WriteData(0x02);
 8002e46:	2002      	movs	r0, #2
 8002e48:	f000 f8c0 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x00);
 8002e4c:	2000      	movs	r0, #0
 8002e4e:	f000 f8bd 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xE4);
 8002e52:	20e4      	movs	r0, #228	@ 0xe4
 8002e54:	f000 f8ba 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xE4);
 8002e58:	20e4      	movs	r0, #228	@ 0xe4
 8002e5a:	f000 f8b7 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x88);
 8002e5e:	2088      	movs	r0, #136	@ 0x88
 8002e60:	f000 f8b4 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x00);
 8002e64:	2000      	movs	r0, #0
 8002e66:	f000 f8b1 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x40);
 8002e6a:	2040      	movs	r0, #64	@ 0x40
 8002e6c:	f000 f8ae 	bl	8002fcc <st7701WriteData>

  st7701WriteCmd(0xEC);
 8002e70:	20ec      	movs	r0, #236	@ 0xec
 8002e72:	f000 f885 	bl	8002f80 <st7701WriteCmd>
  st7701WriteData(0x3C);
 8002e76:	203c      	movs	r0, #60	@ 0x3c
 8002e78:	f000 f8a8 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x00);
 8002e7c:	2000      	movs	r0, #0
 8002e7e:	f000 f8a5 	bl	8002fcc <st7701WriteData>

  st7701WriteCmd(0xED);
 8002e82:	20ed      	movs	r0, #237	@ 0xed
 8002e84:	f000 f87c 	bl	8002f80 <st7701WriteCmd>
  st7701WriteData(0xAB);
 8002e88:	20ab      	movs	r0, #171	@ 0xab
 8002e8a:	f000 f89f 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x89);
 8002e8e:	2089      	movs	r0, #137	@ 0x89
 8002e90:	f000 f89c 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x76);
 8002e94:	2076      	movs	r0, #118	@ 0x76
 8002e96:	f000 f899 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x54);
 8002e9a:	2054      	movs	r0, #84	@ 0x54
 8002e9c:	f000 f896 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x02);
 8002ea0:	2002      	movs	r0, #2
 8002ea2:	f000 f893 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xFF);
 8002ea6:	20ff      	movs	r0, #255	@ 0xff
 8002ea8:	f000 f890 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xFF);
 8002eac:	20ff      	movs	r0, #255	@ 0xff
 8002eae:	f000 f88d 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xFF);
 8002eb2:	20ff      	movs	r0, #255	@ 0xff
 8002eb4:	f000 f88a 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xFF);
 8002eb8:	20ff      	movs	r0, #255	@ 0xff
 8002eba:	f000 f887 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xFF);
 8002ebe:	20ff      	movs	r0, #255	@ 0xff
 8002ec0:	f000 f884 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xFF);
 8002ec4:	20ff      	movs	r0, #255	@ 0xff
 8002ec6:	f000 f881 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x20);
 8002eca:	2020      	movs	r0, #32
 8002ecc:	f000 f87e 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x45);
 8002ed0:	2045      	movs	r0, #69	@ 0x45
 8002ed2:	f000 f87b 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x67);
 8002ed6:	2067      	movs	r0, #103	@ 0x67
 8002ed8:	f000 f878 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x98);
 8002edc:	2098      	movs	r0, #152	@ 0x98
 8002ede:	f000 f875 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0xBA);
 8002ee2:	20ba      	movs	r0, #186	@ 0xba
 8002ee4:	f000 f872 	bl	8002fcc <st7701WriteData>

  st7701WriteCmd(0x36);
 8002ee8:	2036      	movs	r0, #54	@ 0x36
 8002eea:	f000 f849 	bl	8002f80 <st7701WriteCmd>
  st7701WriteData(0x00);
 8002eee:	2000      	movs	r0, #0
 8002ef0:	f000 f86c 	bl	8002fcc <st7701WriteData>

  //-----------VAP & VAN---------------
  st7701WriteCmd(0xFF);
 8002ef4:	20ff      	movs	r0, #255	@ 0xff
 8002ef6:	f000 f843 	bl	8002f80 <st7701WriteCmd>
  st7701WriteData(0x77);
 8002efa:	2077      	movs	r0, #119	@ 0x77
 8002efc:	f000 f866 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x01);
 8002f00:	2001      	movs	r0, #1
 8002f02:	f000 f863 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x00);
 8002f06:	2000      	movs	r0, #0
 8002f08:	f000 f860 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x00);
 8002f0c:	2000      	movs	r0, #0
 8002f0e:	f000 f85d 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x13);
 8002f12:	2013      	movs	r0, #19
 8002f14:	f000 f85a 	bl	8002fcc <st7701WriteData>

  st7701WriteCmd(0xE5);
 8002f18:	20e5      	movs	r0, #229	@ 0xe5
 8002f1a:	f000 f831 	bl	8002f80 <st7701WriteCmd>
  st7701WriteData(0xE4);
 8002f1e:	20e4      	movs	r0, #228	@ 0xe4
 8002f20:	f000 f854 	bl	8002fcc <st7701WriteData>

  st7701WriteCmd(0xFF);
 8002f24:	20ff      	movs	r0, #255	@ 0xff
 8002f26:	f000 f82b 	bl	8002f80 <st7701WriteCmd>
  st7701WriteData(0x77);
 8002f2a:	2077      	movs	r0, #119	@ 0x77
 8002f2c:	f000 f84e 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x01);
 8002f30:	2001      	movs	r0, #1
 8002f32:	f000 f84b 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x00);
 8002f36:	2000      	movs	r0, #0
 8002f38:	f000 f848 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x00);
 8002f3c:	2000      	movs	r0, #0
 8002f3e:	f000 f845 	bl	8002fcc <st7701WriteData>
  st7701WriteData(0x00);
 8002f42:	2000      	movs	r0, #0
 8002f44:	f000 f842 	bl	8002fcc <st7701WriteData>


  st7701WriteCmd(0x3A);   //0x70 RGB888, 0x60 RGB666, 0x50 RGB565
 8002f48:	203a      	movs	r0, #58	@ 0x3a
 8002f4a:	f000 f819 	bl	8002f80 <st7701WriteCmd>
  st7701WriteData(0x60);
 8002f4e:	2060      	movs	r0, #96	@ 0x60
 8002f50:	f000 f83c 	bl	8002fcc <st7701WriteData>

  st7701WriteCmd(0x21);   //Display Inversion On
 8002f54:	2021      	movs	r0, #33	@ 0x21
 8002f56:	f000 f813 	bl	8002f80 <st7701WriteCmd>

  st7701WriteCmd(0x11);   //Sleep Out
 8002f5a:	2011      	movs	r0, #17
 8002f5c:	f000 f810 	bl	8002f80 <st7701WriteCmd>
  HAL_Delay(100);
 8002f60:	2064      	movs	r0, #100	@ 0x64
 8002f62:	f000 f919 	bl	8003198 <HAL_Delay>

  bool ret;

  ret = st7701WriteCmd(0x29);   //Display On
 8002f66:	2029      	movs	r0, #41	@ 0x29
 8002f68:	f000 f80a 	bl	8002f80 <st7701WriteCmd>
 8002f6c:	4603      	mov	r3, r0
 8002f6e:	71fb      	strb	r3, [r7, #7]
  HAL_Delay(50);
 8002f70:	2032      	movs	r0, #50	@ 0x32
 8002f72:	f000 f911 	bl	8003198 <HAL_Delay>

  return ret;
 8002f76:	79fb      	ldrb	r3, [r7, #7]
}
 8002f78:	4618      	mov	r0, r3
 8002f7a:	3708      	adds	r7, #8
 8002f7c:	46bd      	mov	sp, r7
 8002f7e:	bd80      	pop	{r7, pc}

08002f80 <st7701WriteCmd>:

bool st7701WriteCmd(uint8_t data)
{
 8002f80:	b580      	push	{r7, lr}
 8002f82:	b084      	sub	sp, #16
 8002f84:	af00      	add	r7, sp, #0
 8002f86:	4603      	mov	r3, r0
 8002f88:	71fb      	strb	r3, [r7, #7]
  bool ret = true;
 8002f8a:	2301      	movs	r3, #1
 8002f8c:	73fb      	strb	r3, [r7, #15]
  uint16_t tx_data;

  HAL_GPIO_WritePin(LCD_SPI_CS_GPIO_Port, LCD_SPI_CS_Pin, GPIO_PIN_RESET);
 8002f8e:	2200      	movs	r2, #0
 8002f90:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8002f94:	480b      	ldr	r0, [pc, #44]	@ (8002fc4 <st7701WriteCmd+0x44>)
 8002f96:	f000 fef9 	bl	8003d8c <HAL_GPIO_WritePin>

  tx_data = (0<<8) | data;
 8002f9a:	79fb      	ldrb	r3, [r7, #7]
 8002f9c:	b29b      	uxth	r3, r3
 8002f9e:	81bb      	strh	r3, [r7, #12]
  HAL_SPI_Transmit(&hspi5, (const uint8_t *)&tx_data, 1, 10);
 8002fa0:	f107 010c 	add.w	r1, r7, #12
 8002fa4:	230a      	movs	r3, #10
 8002fa6:	2201      	movs	r2, #1
 8002fa8:	4807      	ldr	r0, [pc, #28]	@ (8002fc8 <st7701WriteCmd+0x48>)
 8002faa:	f006 fc6d 	bl	8009888 <HAL_SPI_Transmit>

  HAL_GPIO_WritePin(LCD_SPI_CS_GPIO_Port, LCD_SPI_CS_Pin, GPIO_PIN_SET);
 8002fae:	2201      	movs	r2, #1
 8002fb0:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8002fb4:	4803      	ldr	r0, [pc, #12]	@ (8002fc4 <st7701WriteCmd+0x44>)
 8002fb6:	f000 fee9 	bl	8003d8c <HAL_GPIO_WritePin>
  return ret;
 8002fba:	7bfb      	ldrb	r3, [r7, #15]
}
 8002fbc:	4618      	mov	r0, r3
 8002fbe:	3710      	adds	r7, #16
 8002fc0:	46bd      	mov	sp, r7
 8002fc2:	bd80      	pop	{r7, pc}
 8002fc4:	58020800 	.word	0x58020800
 8002fc8:	24000538 	.word	0x24000538

08002fcc <st7701WriteData>:

bool st7701WriteData(uint8_t data)
{
 8002fcc:	b580      	push	{r7, lr}
 8002fce:	b084      	sub	sp, #16
 8002fd0:	af00      	add	r7, sp, #0
 8002fd2:	4603      	mov	r3, r0
 8002fd4:	71fb      	strb	r3, [r7, #7]
  bool ret = true;
 8002fd6:	2301      	movs	r3, #1
 8002fd8:	73fb      	strb	r3, [r7, #15]
  uint16_t tx_data;

  HAL_GPIO_WritePin(LCD_SPI_CS_GPIO_Port, LCD_SPI_CS_Pin, GPIO_PIN_RESET);
 8002fda:	2200      	movs	r2, #0
 8002fdc:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8002fe0:	480d      	ldr	r0, [pc, #52]	@ (8003018 <st7701WriteData+0x4c>)
 8002fe2:	f000 fed3 	bl	8003d8c <HAL_GPIO_WritePin>

  tx_data = (1<<8) | data;
 8002fe6:	79fb      	ldrb	r3, [r7, #7]
 8002fe8:	b21b      	sxth	r3, r3
 8002fea:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002fee:	b21b      	sxth	r3, r3
 8002ff0:	b29b      	uxth	r3, r3
 8002ff2:	81bb      	strh	r3, [r7, #12]
  HAL_SPI_Transmit(&hspi5, (const uint8_t *)&tx_data, 1, 10);
 8002ff4:	f107 010c 	add.w	r1, r7, #12
 8002ff8:	230a      	movs	r3, #10
 8002ffa:	2201      	movs	r2, #1
 8002ffc:	4807      	ldr	r0, [pc, #28]	@ (800301c <st7701WriteData+0x50>)
 8002ffe:	f006 fc43 	bl	8009888 <HAL_SPI_Transmit>

  HAL_GPIO_WritePin(LCD_SPI_CS_GPIO_Port, LCD_SPI_CS_Pin, GPIO_PIN_SET);
 8003002:	2201      	movs	r2, #1
 8003004:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8003008:	4803      	ldr	r0, [pc, #12]	@ (8003018 <st7701WriteData+0x4c>)
 800300a:	f000 febf 	bl	8003d8c <HAL_GPIO_WritePin>
  return ret;
 800300e:	7bfb      	ldrb	r3, [r7, #15]
}
 8003010:	4618      	mov	r0, r3
 8003012:	3710      	adds	r7, #16
 8003014:	46bd      	mov	sp, r7
 8003016:	bd80      	pop	{r7, pc}
 8003018:	58020800 	.word	0x58020800
 800301c:	24000538 	.word	0x24000538

08003020 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack      /* set stack pointer */
 8003020:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8003058 <LoopFillZerobss+0xe>

/* Call the clock system initialization function.*/
  bl  SystemInit
 8003024:	f7fe fcf8 	bl	8001a18 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8003028:	480c      	ldr	r0, [pc, #48]	@ (800305c <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 800302a:	490d      	ldr	r1, [pc, #52]	@ (8003060 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 800302c:	4a0d      	ldr	r2, [pc, #52]	@ (8003064 <LoopFillZerobss+0x1a>)
  movs r3, #0
 800302e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8003030:	e002      	b.n	8003038 <LoopCopyDataInit>

08003032 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8003032:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8003034:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8003036:	3304      	adds	r3, #4

08003038 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8003038:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800303a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800303c:	d3f9      	bcc.n	8003032 <CopyDataInit>
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800303e:	4a0a      	ldr	r2, [pc, #40]	@ (8003068 <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8003040:	4c0a      	ldr	r4, [pc, #40]	@ (800306c <LoopFillZerobss+0x22>)
  movs r3, #0
 8003042:	2300      	movs	r3, #0
  b LoopFillZerobss
 8003044:	e001      	b.n	800304a <LoopFillZerobss>

08003046 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8003046:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8003048:	3204      	adds	r2, #4

0800304a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800304a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800304c:	d3fb      	bcc.n	8003046 <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 800304e:	f022 ffa1 	bl	8025f94 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8003052:	f7fe f8c3 	bl	80011dc <main>
  bx  lr
 8003056:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 8003058:	24050000 	.word	0x24050000
  ldr r0, =_sdata
 800305c:	24000000 	.word	0x24000000
  ldr r1, =_edata
 8003060:	240000fc 	.word	0x240000fc
  ldr r2, =_sidata
 8003064:	08028cec 	.word	0x08028cec
  ldr r2, =_sbss
 8003068:	24000300 	.word	0x24000300
  ldr r4, =_ebss
 800306c:	24002768 	.word	0x24002768

08003070 <ADC3_IRQHandler>:
 * @retval None
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8003070:	e7fe      	b.n	8003070 <ADC3_IRQHandler>
	...

08003074 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8003074:	b580      	push	{r7, lr}
 8003076:	b082      	sub	sp, #8
 8003078:	af00      	add	r7, sp, #0
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 800307a:	2003      	movs	r0, #3
 800307c:	f000 f980 	bl	8003380 <HAL_NVIC_SetPriorityGrouping>

  /* Update the SystemCoreClock global variable */
#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
 8003080:	f004 faac 	bl	80075dc <HAL_RCC_GetSysClockFreq>
 8003084:	4602      	mov	r2, r0
 8003086:	4b15      	ldr	r3, [pc, #84]	@ (80030dc <HAL_Init+0x68>)
 8003088:	699b      	ldr	r3, [r3, #24]
 800308a:	0a1b      	lsrs	r3, r3, #8
 800308c:	f003 030f 	and.w	r3, r3, #15
 8003090:	4913      	ldr	r1, [pc, #76]	@ (80030e0 <HAL_Init+0x6c>)
 8003092:	5ccb      	ldrb	r3, [r1, r3]
 8003094:	f003 031f 	and.w	r3, r3, #31
 8003098:	fa22 f303 	lsr.w	r3, r2, r3
 800309c:	607b      	str	r3, [r7, #4]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 800309e:	4b0f      	ldr	r3, [pc, #60]	@ (80030dc <HAL_Init+0x68>)
 80030a0:	699b      	ldr	r3, [r3, #24]
 80030a2:	f003 030f 	and.w	r3, r3, #15
 80030a6:	4a0e      	ldr	r2, [pc, #56]	@ (80030e0 <HAL_Init+0x6c>)
 80030a8:	5cd3      	ldrb	r3, [r2, r3]
 80030aa:	f003 031f 	and.w	r3, r3, #31
 80030ae:	687a      	ldr	r2, [r7, #4]
 80030b0:	fa22 f303 	lsr.w	r3, r2, r3
 80030b4:	4a0b      	ldr	r2, [pc, #44]	@ (80030e4 <HAL_Init+0x70>)
 80030b6:	6013      	str	r3, [r2, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
 80030b8:	4a0b      	ldr	r2, [pc, #44]	@ (80030e8 <HAL_Init+0x74>)
 80030ba:	687b      	ldr	r3, [r7, #4]
 80030bc:	6013      	str	r3, [r2, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 80030be:	200f      	movs	r0, #15
 80030c0:	f000 f814 	bl	80030ec <HAL_InitTick>
 80030c4:	4603      	mov	r3, r0
 80030c6:	2b00      	cmp	r3, #0
 80030c8:	d001      	beq.n	80030ce <HAL_Init+0x5a>
  {
    return HAL_ERROR;
 80030ca:	2301      	movs	r3, #1
 80030cc:	e002      	b.n	80030d4 <HAL_Init+0x60>
  }

  /* Init the low level hardware */
  HAL_MspInit();
 80030ce:	f7fe fb87 	bl	80017e0 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 80030d2:	2300      	movs	r3, #0
}
 80030d4:	4618      	mov	r0, r3
 80030d6:	3708      	adds	r7, #8
 80030d8:	46bd      	mov	sp, r7
 80030da:	bd80      	pop	{r7, pc}
 80030dc:	58024400 	.word	0x58024400
 80030e0:	08027500 	.word	0x08027500
 80030e4:	24000008 	.word	0x24000008
 80030e8:	24000004 	.word	0x24000004

080030ec <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80030ec:	b580      	push	{r7, lr}
 80030ee:	b082      	sub	sp, #8
 80030f0:	af00      	add	r7, sp, #0
 80030f2:	6078      	str	r0, [r7, #4]
  /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that don't take the value zero)*/
  if((uint32_t)uwTickFreq == 0UL)
 80030f4:	4b15      	ldr	r3, [pc, #84]	@ (800314c <HAL_InitTick+0x60>)
 80030f6:	781b      	ldrb	r3, [r3, #0]
 80030f8:	2b00      	cmp	r3, #0
 80030fa:	d101      	bne.n	8003100 <HAL_InitTick+0x14>
  {
    return HAL_ERROR;
 80030fc:	2301      	movs	r3, #1
 80030fe:	e021      	b.n	8003144 <HAL_InitTick+0x58>
  }

    /* Configure the SysTick to have interrupt in 1ms time basis*/
    if (HAL_SYSTICK_Config(SystemCoreClock / (1000UL / (uint32_t)uwTickFreq)) > 0U)
 8003100:	4b13      	ldr	r3, [pc, #76]	@ (8003150 <HAL_InitTick+0x64>)
 8003102:	681a      	ldr	r2, [r3, #0]
 8003104:	4b11      	ldr	r3, [pc, #68]	@ (800314c <HAL_InitTick+0x60>)
 8003106:	781b      	ldrb	r3, [r3, #0]
 8003108:	4619      	mov	r1, r3
 800310a:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 800310e:	fbb3 f3f1 	udiv	r3, r3, r1
 8003112:	fbb2 f3f3 	udiv	r3, r2, r3
 8003116:	4618      	mov	r0, r3
 8003118:	f000 f965 	bl	80033e6 <HAL_SYSTICK_Config>
 800311c:	4603      	mov	r3, r0
 800311e:	2b00      	cmp	r3, #0
 8003120:	d001      	beq.n	8003126 <HAL_InitTick+0x3a>
    {
      return HAL_ERROR;
 8003122:	2301      	movs	r3, #1
 8003124:	e00e      	b.n	8003144 <HAL_InitTick+0x58>
    }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8003126:	687b      	ldr	r3, [r7, #4]
 8003128:	2b0f      	cmp	r3, #15
 800312a:	d80a      	bhi.n	8003142 <HAL_InitTick+0x56>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 800312c:	2200      	movs	r2, #0
 800312e:	6879      	ldr	r1, [r7, #4]
 8003130:	f04f 30ff 	mov.w	r0, #4294967295
 8003134:	f000 f92f 	bl	8003396 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8003138:	4a06      	ldr	r2, [pc, #24]	@ (8003154 <HAL_InitTick+0x68>)
 800313a:	687b      	ldr	r3, [r7, #4]
 800313c:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 800313e:	2300      	movs	r3, #0
 8003140:	e000      	b.n	8003144 <HAL_InitTick+0x58>
    return HAL_ERROR;
 8003142:	2301      	movs	r3, #1
}
 8003144:	4618      	mov	r0, r3
 8003146:	3708      	adds	r7, #8
 8003148:	46bd      	mov	sp, r7
 800314a:	bd80      	pop	{r7, pc}
 800314c:	24000014 	.word	0x24000014
 8003150:	24000004 	.word	0x24000004
 8003154:	24000010 	.word	0x24000010

08003158 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8003158:	b480      	push	{r7}
 800315a:	af00      	add	r7, sp, #0
  uwTick += (uint32_t)uwTickFreq;
 800315c:	4b06      	ldr	r3, [pc, #24]	@ (8003178 <HAL_IncTick+0x20>)
 800315e:	781b      	ldrb	r3, [r3, #0]
 8003160:	461a      	mov	r2, r3
 8003162:	4b06      	ldr	r3, [pc, #24]	@ (800317c <HAL_IncTick+0x24>)
 8003164:	681b      	ldr	r3, [r3, #0]
 8003166:	4413      	add	r3, r2
 8003168:	4a04      	ldr	r2, [pc, #16]	@ (800317c <HAL_IncTick+0x24>)
 800316a:	6013      	str	r3, [r2, #0]
}
 800316c:	bf00      	nop
 800316e:	46bd      	mov	sp, r7
 8003170:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003174:	4770      	bx	lr
 8003176:	bf00      	nop
 8003178:	24000014 	.word	0x24000014
 800317c:	24000704 	.word	0x24000704

08003180 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8003180:	b480      	push	{r7}
 8003182:	af00      	add	r7, sp, #0
  return uwTick;
 8003184:	4b03      	ldr	r3, [pc, #12]	@ (8003194 <HAL_GetTick+0x14>)
 8003186:	681b      	ldr	r3, [r3, #0]
}
 8003188:	4618      	mov	r0, r3
 800318a:	46bd      	mov	sp, r7
 800318c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003190:	4770      	bx	lr
 8003192:	bf00      	nop
 8003194:	24000704 	.word	0x24000704

08003198 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8003198:	b580      	push	{r7, lr}
 800319a:	b084      	sub	sp, #16
 800319c:	af00      	add	r7, sp, #0
 800319e:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 80031a0:	f7ff ffee 	bl	8003180 <HAL_GetTick>
 80031a4:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 80031a6:	687b      	ldr	r3, [r7, #4]
 80031a8:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80031aa:	68fb      	ldr	r3, [r7, #12]
 80031ac:	f1b3 3fff 	cmp.w	r3, #4294967295
 80031b0:	d005      	beq.n	80031be <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 80031b2:	4b0a      	ldr	r3, [pc, #40]	@ (80031dc <HAL_Delay+0x44>)
 80031b4:	781b      	ldrb	r3, [r3, #0]
 80031b6:	461a      	mov	r2, r3
 80031b8:	68fb      	ldr	r3, [r7, #12]
 80031ba:	4413      	add	r3, r2
 80031bc:	60fb      	str	r3, [r7, #12]
  }

  while ((HAL_GetTick() - tickstart) < wait)
 80031be:	bf00      	nop
 80031c0:	f7ff ffde 	bl	8003180 <HAL_GetTick>
 80031c4:	4602      	mov	r2, r0
 80031c6:	68bb      	ldr	r3, [r7, #8]
 80031c8:	1ad3      	subs	r3, r2, r3
 80031ca:	68fa      	ldr	r2, [r7, #12]
 80031cc:	429a      	cmp	r2, r3
 80031ce:	d8f7      	bhi.n	80031c0 <HAL_Delay+0x28>
  {
  }
}
 80031d0:	bf00      	nop
 80031d2:	bf00      	nop
 80031d4:	3710      	adds	r7, #16
 80031d6:	46bd      	mov	sp, r7
 80031d8:	bd80      	pop	{r7, pc}
 80031da:	bf00      	nop
 80031dc:	24000014 	.word	0x24000014

080031e0 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80031e0:	b480      	push	{r7}
 80031e2:	b085      	sub	sp, #20
 80031e4:	af00      	add	r7, sp, #0
 80031e6:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 80031e8:	687b      	ldr	r3, [r7, #4]
 80031ea:	f003 0307 	and.w	r3, r3, #7
 80031ee:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80031f0:	4b0b      	ldr	r3, [pc, #44]	@ (8003220 <__NVIC_SetPriorityGrouping+0x40>)
 80031f2:	68db      	ldr	r3, [r3, #12]
 80031f4:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80031f6:	68ba      	ldr	r2, [r7, #8]
 80031f8:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 80031fc:	4013      	ands	r3, r2
 80031fe:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8003200:	68fb      	ldr	r3, [r7, #12]
 8003202:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8003204:	68bb      	ldr	r3, [r7, #8]
 8003206:	431a      	orrs	r2, r3
  reg_value  =  (reg_value                                   |
 8003208:	4b06      	ldr	r3, [pc, #24]	@ (8003224 <__NVIC_SetPriorityGrouping+0x44>)
 800320a:	4313      	orrs	r3, r2
 800320c:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 800320e:	4a04      	ldr	r2, [pc, #16]	@ (8003220 <__NVIC_SetPriorityGrouping+0x40>)
 8003210:	68bb      	ldr	r3, [r7, #8]
 8003212:	60d3      	str	r3, [r2, #12]
}
 8003214:	bf00      	nop
 8003216:	3714      	adds	r7, #20
 8003218:	46bd      	mov	sp, r7
 800321a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800321e:	4770      	bx	lr
 8003220:	e000ed00 	.word	0xe000ed00
 8003224:	05fa0000 	.word	0x05fa0000

08003228 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8003228:	b480      	push	{r7}
 800322a:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 800322c:	4b04      	ldr	r3, [pc, #16]	@ (8003240 <__NVIC_GetPriorityGrouping+0x18>)
 800322e:	68db      	ldr	r3, [r3, #12]
 8003230:	0a1b      	lsrs	r3, r3, #8
 8003232:	f003 0307 	and.w	r3, r3, #7
}
 8003236:	4618      	mov	r0, r3
 8003238:	46bd      	mov	sp, r7
 800323a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800323e:	4770      	bx	lr
 8003240:	e000ed00 	.word	0xe000ed00

08003244 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8003244:	b480      	push	{r7}
 8003246:	b083      	sub	sp, #12
 8003248:	af00      	add	r7, sp, #0
 800324a:	4603      	mov	r3, r0
 800324c:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 800324e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003252:	2b00      	cmp	r3, #0
 8003254:	db0b      	blt.n	800326e <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003256:	88fb      	ldrh	r3, [r7, #6]
 8003258:	f003 021f 	and.w	r2, r3, #31
 800325c:	4907      	ldr	r1, [pc, #28]	@ (800327c <__NVIC_EnableIRQ+0x38>)
 800325e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003262:	095b      	lsrs	r3, r3, #5
 8003264:	2001      	movs	r0, #1
 8003266:	fa00 f202 	lsl.w	r2, r0, r2
 800326a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 800326e:	bf00      	nop
 8003270:	370c      	adds	r7, #12
 8003272:	46bd      	mov	sp, r7
 8003274:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003278:	4770      	bx	lr
 800327a:	bf00      	nop
 800327c:	e000e100 	.word	0xe000e100

08003280 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8003280:	b480      	push	{r7}
 8003282:	b083      	sub	sp, #12
 8003284:	af00      	add	r7, sp, #0
 8003286:	4603      	mov	r3, r0
 8003288:	6039      	str	r1, [r7, #0]
 800328a:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 800328c:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003290:	2b00      	cmp	r3, #0
 8003292:	db0a      	blt.n	80032aa <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003294:	683b      	ldr	r3, [r7, #0]
 8003296:	b2da      	uxtb	r2, r3
 8003298:	490c      	ldr	r1, [pc, #48]	@ (80032cc <__NVIC_SetPriority+0x4c>)
 800329a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800329e:	0112      	lsls	r2, r2, #4
 80032a0:	b2d2      	uxtb	r2, r2
 80032a2:	440b      	add	r3, r1
 80032a4:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
  }
  else
  {
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 80032a8:	e00a      	b.n	80032c0 <__NVIC_SetPriority+0x40>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80032aa:	683b      	ldr	r3, [r7, #0]
 80032ac:	b2da      	uxtb	r2, r3
 80032ae:	4908      	ldr	r1, [pc, #32]	@ (80032d0 <__NVIC_SetPriority+0x50>)
 80032b0:	88fb      	ldrh	r3, [r7, #6]
 80032b2:	f003 030f 	and.w	r3, r3, #15
 80032b6:	3b04      	subs	r3, #4
 80032b8:	0112      	lsls	r2, r2, #4
 80032ba:	b2d2      	uxtb	r2, r2
 80032bc:	440b      	add	r3, r1
 80032be:	761a      	strb	r2, [r3, #24]
}
 80032c0:	bf00      	nop
 80032c2:	370c      	adds	r7, #12
 80032c4:	46bd      	mov	sp, r7
 80032c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032ca:	4770      	bx	lr
 80032cc:	e000e100 	.word	0xe000e100
 80032d0:	e000ed00 	.word	0xe000ed00

080032d4 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80032d4:	b480      	push	{r7}
 80032d6:	b089      	sub	sp, #36	@ 0x24
 80032d8:	af00      	add	r7, sp, #0
 80032da:	60f8      	str	r0, [r7, #12]
 80032dc:	60b9      	str	r1, [r7, #8]
 80032de:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 80032e0:	68fb      	ldr	r3, [r7, #12]
 80032e2:	f003 0307 	and.w	r3, r3, #7
 80032e6:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80032e8:	69fb      	ldr	r3, [r7, #28]
 80032ea:	f1c3 0307 	rsb	r3, r3, #7
 80032ee:	2b04      	cmp	r3, #4
 80032f0:	bf28      	it	cs
 80032f2:	2304      	movcs	r3, #4
 80032f4:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80032f6:	69fb      	ldr	r3, [r7, #28]
 80032f8:	3304      	adds	r3, #4
 80032fa:	2b06      	cmp	r3, #6
 80032fc:	d902      	bls.n	8003304 <NVIC_EncodePriority+0x30>
 80032fe:	69fb      	ldr	r3, [r7, #28]
 8003300:	3b03      	subs	r3, #3
 8003302:	e000      	b.n	8003306 <NVIC_EncodePriority+0x32>
 8003304:	2300      	movs	r3, #0
 8003306:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003308:	f04f 32ff 	mov.w	r2, #4294967295
 800330c:	69bb      	ldr	r3, [r7, #24]
 800330e:	fa02 f303 	lsl.w	r3, r2, r3
 8003312:	43da      	mvns	r2, r3
 8003314:	68bb      	ldr	r3, [r7, #8]
 8003316:	401a      	ands	r2, r3
 8003318:	697b      	ldr	r3, [r7, #20]
 800331a:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800331c:	f04f 31ff 	mov.w	r1, #4294967295
 8003320:	697b      	ldr	r3, [r7, #20]
 8003322:	fa01 f303 	lsl.w	r3, r1, r3
 8003326:	43d9      	mvns	r1, r3
 8003328:	687b      	ldr	r3, [r7, #4]
 800332a:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800332c:	4313      	orrs	r3, r2
         );
}
 800332e:	4618      	mov	r0, r3
 8003330:	3724      	adds	r7, #36	@ 0x24
 8003332:	46bd      	mov	sp, r7
 8003334:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003338:	4770      	bx	lr
	...

0800333c <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 800333c:	b580      	push	{r7, lr}
 800333e:	b082      	sub	sp, #8
 8003340:	af00      	add	r7, sp, #0
 8003342:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8003344:	687b      	ldr	r3, [r7, #4]
 8003346:	3b01      	subs	r3, #1
 8003348:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800334c:	d301      	bcc.n	8003352 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 800334e:	2301      	movs	r3, #1
 8003350:	e00f      	b.n	8003372 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8003352:	4a0a      	ldr	r2, [pc, #40]	@ (800337c <SysTick_Config+0x40>)
 8003354:	687b      	ldr	r3, [r7, #4]
 8003356:	3b01      	subs	r3, #1
 8003358:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 800335a:	210f      	movs	r1, #15
 800335c:	f04f 30ff 	mov.w	r0, #4294967295
 8003360:	f7ff ff8e 	bl	8003280 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8003364:	4b05      	ldr	r3, [pc, #20]	@ (800337c <SysTick_Config+0x40>)
 8003366:	2200      	movs	r2, #0
 8003368:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800336a:	4b04      	ldr	r3, [pc, #16]	@ (800337c <SysTick_Config+0x40>)
 800336c:	2207      	movs	r2, #7
 800336e:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8003370:	2300      	movs	r3, #0
}
 8003372:	4618      	mov	r0, r3
 8003374:	3708      	adds	r7, #8
 8003376:	46bd      	mov	sp, r7
 8003378:	bd80      	pop	{r7, pc}
 800337a:	bf00      	nop
 800337c:	e000e010 	.word	0xe000e010

08003380 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible.
  *         The pending IRQ priority will be managed only by the subpriority.
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8003380:	b580      	push	{r7, lr}
 8003382:	b082      	sub	sp, #8
 8003384:	af00      	add	r7, sp, #0
 8003386:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8003388:	6878      	ldr	r0, [r7, #4]
 800338a:	f7ff ff29 	bl	80031e0 <__NVIC_SetPriorityGrouping>
}
 800338e:	bf00      	nop
 8003390:	3708      	adds	r7, #8
 8003392:	46bd      	mov	sp, r7
 8003394:	bd80      	pop	{r7, pc}

08003396 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8003396:	b580      	push	{r7, lr}
 8003398:	b086      	sub	sp, #24
 800339a:	af00      	add	r7, sp, #0
 800339c:	4603      	mov	r3, r0
 800339e:	60b9      	str	r1, [r7, #8]
 80033a0:	607a      	str	r2, [r7, #4]
 80033a2:	81fb      	strh	r3, [r7, #14]

  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();
 80033a4:	f7ff ff40 	bl	8003228 <__NVIC_GetPriorityGrouping>
 80033a8:	6178      	str	r0, [r7, #20]

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 80033aa:	687a      	ldr	r2, [r7, #4]
 80033ac:	68b9      	ldr	r1, [r7, #8]
 80033ae:	6978      	ldr	r0, [r7, #20]
 80033b0:	f7ff ff90 	bl	80032d4 <NVIC_EncodePriority>
 80033b4:	4602      	mov	r2, r0
 80033b6:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80033ba:	4611      	mov	r1, r2
 80033bc:	4618      	mov	r0, r3
 80033be:	f7ff ff5f 	bl	8003280 <__NVIC_SetPriority>
}
 80033c2:	bf00      	nop
 80033c4:	3718      	adds	r7, #24
 80033c6:	46bd      	mov	sp, r7
 80033c8:	bd80      	pop	{r7, pc}

080033ca <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32h7xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80033ca:	b580      	push	{r7, lr}
 80033cc:	b082      	sub	sp, #8
 80033ce:	af00      	add	r7, sp, #0
 80033d0:	4603      	mov	r3, r0
 80033d2:	80fb      	strh	r3, [r7, #6]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));

  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 80033d4:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80033d8:	4618      	mov	r0, r3
 80033da:	f7ff ff33 	bl	8003244 <__NVIC_EnableIRQ>
}
 80033de:	bf00      	nop
 80033e0:	3708      	adds	r7, #8
 80033e2:	46bd      	mov	sp, r7
 80033e4:	bd80      	pop	{r7, pc}

080033e6 <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status   - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 80033e6:	b580      	push	{r7, lr}
 80033e8:	b082      	sub	sp, #8
 80033ea:	af00      	add	r7, sp, #0
 80033ec:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 80033ee:	6878      	ldr	r0, [r7, #4]
 80033f0:	f7ff ffa4 	bl	800333c <SysTick_Config>
 80033f4:	4603      	mov	r3, r0
}
 80033f6:	4618      	mov	r0, r3
 80033f8:	3708      	adds	r7, #8
 80033fa:	46bd      	mov	sp, r7
 80033fc:	bd80      	pop	{r7, pc}
	...

08003400 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8003400:	b580      	push	{r7, lr}
 8003402:	b082      	sub	sp, #8
 8003404:	af00      	add	r7, sp, #0
 8003406:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8003408:	687b      	ldr	r3, [r7, #4]
 800340a:	2b00      	cmp	r3, #0
 800340c:	d101      	bne.n	8003412 <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 800340e:	2301      	movs	r3, #1
 8003410:	e054      	b.n	80034bc <HAL_CRC_Init+0xbc>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 8003412:	687b      	ldr	r3, [r7, #4]
 8003414:	7f5b      	ldrb	r3, [r3, #29]
 8003416:	b2db      	uxtb	r3, r3
 8003418:	2b00      	cmp	r3, #0
 800341a:	d105      	bne.n	8003428 <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 800341c:	687b      	ldr	r3, [r7, #4]
 800341e:	2200      	movs	r2, #0
 8003420:	771a      	strb	r2, [r3, #28]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8003422:	6878      	ldr	r0, [r7, #4]
 8003424:	f7fd f95e 	bl	80006e4 <HAL_CRC_MspInit>
  }

  hcrc->State = HAL_CRC_STATE_BUSY;
 8003428:	687b      	ldr	r3, [r7, #4]
 800342a:	2202      	movs	r2, #2
 800342c:	775a      	strb	r2, [r3, #29]

  /* check whether or not non-default generating polynomial has been
   * picked up by user */
  assert_param(IS_DEFAULT_POLYNOMIAL(hcrc->Init.DefaultPolynomialUse));
  if (hcrc->Init.DefaultPolynomialUse == DEFAULT_POLYNOMIAL_ENABLE)
 800342e:	687b      	ldr	r3, [r7, #4]
 8003430:	791b      	ldrb	r3, [r3, #4]
 8003432:	2b00      	cmp	r3, #0
 8003434:	d10c      	bne.n	8003450 <HAL_CRC_Init+0x50>
  {
    /* initialize peripheral with default generating polynomial */
    WRITE_REG(hcrc->Instance->POL, DEFAULT_CRC32_POLY);
 8003436:	687b      	ldr	r3, [r7, #4]
 8003438:	681b      	ldr	r3, [r3, #0]
 800343a:	4a22      	ldr	r2, [pc, #136]	@ (80034c4 <HAL_CRC_Init+0xc4>)
 800343c:	615a      	str	r2, [r3, #20]
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, CRC_POLYLENGTH_32B);
 800343e:	687b      	ldr	r3, [r7, #4]
 8003440:	681b      	ldr	r3, [r3, #0]
 8003442:	689a      	ldr	r2, [r3, #8]
 8003444:	687b      	ldr	r3, [r7, #4]
 8003446:	681b      	ldr	r3, [r3, #0]
 8003448:	f022 0218 	bic.w	r2, r2, #24
 800344c:	609a      	str	r2, [r3, #8]
 800344e:	e00c      	b.n	800346a <HAL_CRC_Init+0x6a>
  }
  else
  {
    /* initialize CRC peripheral with generating polynomial defined by user */
    if (HAL_CRCEx_Polynomial_Set(hcrc, hcrc->Init.GeneratingPolynomial, hcrc->Init.CRCLength) != HAL_OK)
 8003450:	687b      	ldr	r3, [r7, #4]
 8003452:	6899      	ldr	r1, [r3, #8]
 8003454:	687b      	ldr	r3, [r7, #4]
 8003456:	68db      	ldr	r3, [r3, #12]
 8003458:	461a      	mov	r2, r3
 800345a:	6878      	ldr	r0, [r7, #4]
 800345c:	f000 f834 	bl	80034c8 <HAL_CRCEx_Polynomial_Set>
 8003460:	4603      	mov	r3, r0
 8003462:	2b00      	cmp	r3, #0
 8003464:	d001      	beq.n	800346a <HAL_CRC_Init+0x6a>
    {
      return HAL_ERROR;
 8003466:	2301      	movs	r3, #1
 8003468:	e028      	b.n	80034bc <HAL_CRC_Init+0xbc>
  }

  /* check whether or not non-default CRC initial value has been
   * picked up by user */
  assert_param(IS_DEFAULT_INIT_VALUE(hcrc->Init.DefaultInitValueUse));
  if (hcrc->Init.DefaultInitValueUse == DEFAULT_INIT_VALUE_ENABLE)
 800346a:	687b      	ldr	r3, [r7, #4]
 800346c:	795b      	ldrb	r3, [r3, #5]
 800346e:	2b00      	cmp	r3, #0
 8003470:	d105      	bne.n	800347e <HAL_CRC_Init+0x7e>
  {
    WRITE_REG(hcrc->Instance->INIT, DEFAULT_CRC_INITVALUE);
 8003472:	687b      	ldr	r3, [r7, #4]
 8003474:	681b      	ldr	r3, [r3, #0]
 8003476:	f04f 32ff 	mov.w	r2, #4294967295
 800347a:	611a      	str	r2, [r3, #16]
 800347c:	e004      	b.n	8003488 <HAL_CRC_Init+0x88>
  }
  else
  {
    WRITE_REG(hcrc->Instance->INIT, hcrc->Init.InitValue);
 800347e:	687b      	ldr	r3, [r7, #4]
 8003480:	681b      	ldr	r3, [r3, #0]
 8003482:	687a      	ldr	r2, [r7, #4]
 8003484:	6912      	ldr	r2, [r2, #16]
 8003486:	611a      	str	r2, [r3, #16]
  }


  /* set input data inversion mode */
  assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(hcrc->Init.InputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, hcrc->Init.InputDataInversionMode);
 8003488:	687b      	ldr	r3, [r7, #4]
 800348a:	681b      	ldr	r3, [r3, #0]
 800348c:	689b      	ldr	r3, [r3, #8]
 800348e:	f023 0160 	bic.w	r1, r3, #96	@ 0x60
 8003492:	687b      	ldr	r3, [r7, #4]
 8003494:	695a      	ldr	r2, [r3, #20]
 8003496:	687b      	ldr	r3, [r7, #4]
 8003498:	681b      	ldr	r3, [r3, #0]
 800349a:	430a      	orrs	r2, r1
 800349c:	609a      	str	r2, [r3, #8]

  /* set output data inversion mode */
  assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(hcrc->Init.OutputDataInversionMode));
  MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, hcrc->Init.OutputDataInversionMode);
 800349e:	687b      	ldr	r3, [r7, #4]
 80034a0:	681b      	ldr	r3, [r3, #0]
 80034a2:	689b      	ldr	r3, [r3, #8]
 80034a4:	f023 0180 	bic.w	r1, r3, #128	@ 0x80
 80034a8:	687b      	ldr	r3, [r7, #4]
 80034aa:	699a      	ldr	r2, [r3, #24]
 80034ac:	687b      	ldr	r3, [r7, #4]
 80034ae:	681b      	ldr	r3, [r3, #0]
 80034b0:	430a      	orrs	r2, r1
 80034b2:	609a      	str	r2, [r3, #8]
  /* makes sure the input data format (bytes, halfwords or words stream)
   * is properly specified by user */
  assert_param(IS_CRC_INPUTDATA_FORMAT(hcrc->InputDataFormat));

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 80034b4:	687b      	ldr	r3, [r7, #4]
 80034b6:	2201      	movs	r2, #1
 80034b8:	775a      	strb	r2, [r3, #29]

  /* Return function status */
  return HAL_OK;
 80034ba:	2300      	movs	r3, #0
}
 80034bc:	4618      	mov	r0, r3
 80034be:	3708      	adds	r7, #8
 80034c0:	46bd      	mov	sp, r7
 80034c2:	bd80      	pop	{r7, pc}
 80034c4:	04c11db7 	.word	0x04c11db7

080034c8 <HAL_CRCEx_Polynomial_Set>:
  *          @arg @ref CRC_POLYLENGTH_16B 16-bit long CRC (generating polynomial of degree 16)
  *          @arg @ref CRC_POLYLENGTH_32B 32-bit long CRC (generating polynomial of degree 32)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRCEx_Polynomial_Set(CRC_HandleTypeDef *hcrc, uint32_t Pol, uint32_t PolyLength)
{
 80034c8:	b480      	push	{r7}
 80034ca:	b087      	sub	sp, #28
 80034cc:	af00      	add	r7, sp, #0
 80034ce:	60f8      	str	r0, [r7, #12]
 80034d0:	60b9      	str	r1, [r7, #8]
 80034d2:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 80034d4:	2300      	movs	r3, #0
 80034d6:	75fb      	strb	r3, [r7, #23]
  uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
 80034d8:	231f      	movs	r3, #31
 80034da:	613b      	str	r3, [r7, #16]

  /* Check the parameters */
  assert_param(IS_CRC_POL_LENGTH(PolyLength));

  /* Ensure that the generating polynomial is odd */
  if ((Pol & (uint32_t)(0x1U)) ==  0U)
 80034dc:	68bb      	ldr	r3, [r7, #8]
 80034de:	f003 0301 	and.w	r3, r3, #1
 80034e2:	2b00      	cmp	r3, #0
 80034e4:	d102      	bne.n	80034ec <HAL_CRCEx_Polynomial_Set+0x24>
  {
    status =  HAL_ERROR;
 80034e6:	2301      	movs	r3, #1
 80034e8:	75fb      	strb	r3, [r7, #23]
 80034ea:	e063      	b.n	80035b4 <HAL_CRCEx_Polynomial_Set+0xec>
     * definition. HAL_ERROR is reported if Pol degree is
     * larger than that indicated by PolyLength.
     * Look for MSB position: msb will contain the degree of
     *  the second to the largest polynomial member. E.g., for
     *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
    while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 80034ec:	bf00      	nop
 80034ee:	693b      	ldr	r3, [r7, #16]
 80034f0:	1e5a      	subs	r2, r3, #1
 80034f2:	613a      	str	r2, [r7, #16]
 80034f4:	2b00      	cmp	r3, #0
 80034f6:	d009      	beq.n	800350c <HAL_CRCEx_Polynomial_Set+0x44>
 80034f8:	693b      	ldr	r3, [r7, #16]
 80034fa:	f003 031f 	and.w	r3, r3, #31
 80034fe:	68ba      	ldr	r2, [r7, #8]
 8003500:	fa22 f303 	lsr.w	r3, r2, r3
 8003504:	f003 0301 	and.w	r3, r3, #1
 8003508:	2b00      	cmp	r3, #0
 800350a:	d0f0      	beq.n	80034ee <HAL_CRCEx_Polynomial_Set+0x26>
    {
    }

    switch (PolyLength)
 800350c:	687b      	ldr	r3, [r7, #4]
 800350e:	2b18      	cmp	r3, #24
 8003510:	d846      	bhi.n	80035a0 <HAL_CRCEx_Polynomial_Set+0xd8>
 8003512:	a201      	add	r2, pc, #4	@ (adr r2, 8003518 <HAL_CRCEx_Polynomial_Set+0x50>)
 8003514:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003518:	080035a7 	.word	0x080035a7
 800351c:	080035a1 	.word	0x080035a1
 8003520:	080035a1 	.word	0x080035a1
 8003524:	080035a1 	.word	0x080035a1
 8003528:	080035a1 	.word	0x080035a1
 800352c:	080035a1 	.word	0x080035a1
 8003530:	080035a1 	.word	0x080035a1
 8003534:	080035a1 	.word	0x080035a1
 8003538:	08003595 	.word	0x08003595
 800353c:	080035a1 	.word	0x080035a1
 8003540:	080035a1 	.word	0x080035a1
 8003544:	080035a1 	.word	0x080035a1
 8003548:	080035a1 	.word	0x080035a1
 800354c:	080035a1 	.word	0x080035a1
 8003550:	080035a1 	.word	0x080035a1
 8003554:	080035a1 	.word	0x080035a1
 8003558:	08003589 	.word	0x08003589
 800355c:	080035a1 	.word	0x080035a1
 8003560:	080035a1 	.word	0x080035a1
 8003564:	080035a1 	.word	0x080035a1
 8003568:	080035a1 	.word	0x080035a1
 800356c:	080035a1 	.word	0x080035a1
 8003570:	080035a1 	.word	0x080035a1
 8003574:	080035a1 	.word	0x080035a1
 8003578:	0800357d 	.word	0x0800357d
    {

      case CRC_POLYLENGTH_7B:
        if (msb >= HAL_CRC_LENGTH_7B)
 800357c:	693b      	ldr	r3, [r7, #16]
 800357e:	2b06      	cmp	r3, #6
 8003580:	d913      	bls.n	80035aa <HAL_CRCEx_Polynomial_Set+0xe2>
        {
          status =   HAL_ERROR;
 8003582:	2301      	movs	r3, #1
 8003584:	75fb      	strb	r3, [r7, #23]
        }
        break;
 8003586:	e010      	b.n	80035aa <HAL_CRCEx_Polynomial_Set+0xe2>
      case CRC_POLYLENGTH_8B:
        if (msb >= HAL_CRC_LENGTH_8B)
 8003588:	693b      	ldr	r3, [r7, #16]
 800358a:	2b07      	cmp	r3, #7
 800358c:	d90f      	bls.n	80035ae <HAL_CRCEx_Polynomial_Set+0xe6>
        {
          status =   HAL_ERROR;
 800358e:	2301      	movs	r3, #1
 8003590:	75fb      	strb	r3, [r7, #23]
        }
        break;
 8003592:	e00c      	b.n	80035ae <HAL_CRCEx_Polynomial_Set+0xe6>
      case CRC_POLYLENGTH_16B:
        if (msb >= HAL_CRC_LENGTH_16B)
 8003594:	693b      	ldr	r3, [r7, #16]
 8003596:	2b0f      	cmp	r3, #15
 8003598:	d90b      	bls.n	80035b2 <HAL_CRCEx_Polynomial_Set+0xea>
        {
          status =   HAL_ERROR;
 800359a:	2301      	movs	r3, #1
 800359c:	75fb      	strb	r3, [r7, #23]
        }
        break;
 800359e:	e008      	b.n	80035b2 <HAL_CRCEx_Polynomial_Set+0xea>

      case CRC_POLYLENGTH_32B:
        /* no polynomial definition vs. polynomial length issue possible */
        break;
      default:
        status =  HAL_ERROR;
 80035a0:	2301      	movs	r3, #1
 80035a2:	75fb      	strb	r3, [r7, #23]
        break;
 80035a4:	e006      	b.n	80035b4 <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 80035a6:	bf00      	nop
 80035a8:	e004      	b.n	80035b4 <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 80035aa:	bf00      	nop
 80035ac:	e002      	b.n	80035b4 <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 80035ae:	bf00      	nop
 80035b0:	e000      	b.n	80035b4 <HAL_CRCEx_Polynomial_Set+0xec>
        break;
 80035b2:	bf00      	nop
    }
  }
  if (status == HAL_OK)
 80035b4:	7dfb      	ldrb	r3, [r7, #23]
 80035b6:	2b00      	cmp	r3, #0
 80035b8:	d10d      	bne.n	80035d6 <HAL_CRCEx_Polynomial_Set+0x10e>
  {
    /* set generating polynomial */
    WRITE_REG(hcrc->Instance->POL, Pol);
 80035ba:	68fb      	ldr	r3, [r7, #12]
 80035bc:	681b      	ldr	r3, [r3, #0]
 80035be:	68ba      	ldr	r2, [r7, #8]
 80035c0:	615a      	str	r2, [r3, #20]

    /* set generating polynomial size */
    MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 80035c2:	68fb      	ldr	r3, [r7, #12]
 80035c4:	681b      	ldr	r3, [r3, #0]
 80035c6:	689b      	ldr	r3, [r3, #8]
 80035c8:	f023 0118 	bic.w	r1, r3, #24
 80035cc:	68fb      	ldr	r3, [r7, #12]
 80035ce:	681b      	ldr	r3, [r3, #0]
 80035d0:	687a      	ldr	r2, [r7, #4]
 80035d2:	430a      	orrs	r2, r1
 80035d4:	609a      	str	r2, [r3, #8]
  }
  /* Return function status */
  return status;
 80035d6:	7dfb      	ldrb	r3, [r7, #23]
}
 80035d8:	4618      	mov	r0, r3
 80035da:	371c      	adds	r7, #28
 80035dc:	46bd      	mov	sp, r7
 80035de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035e2:	4770      	bx	lr

080035e4 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 80035e4:	b580      	push	{r7, lr}
 80035e6:	b082      	sub	sp, #8
 80035e8:	af00      	add	r7, sp, #0
 80035ea:	6078      	str	r0, [r7, #4]
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 80035ec:	687b      	ldr	r3, [r7, #4]
 80035ee:	2b00      	cmp	r3, #0
 80035f0:	d101      	bne.n	80035f6 <HAL_DMA2D_Init+0x12>
  {
    return HAL_ERROR;
 80035f2:	2301      	movs	r3, #1
 80035f4:	e04f      	b.n	8003696 <HAL_DMA2D_Init+0xb2>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 80035f6:	687b      	ldr	r3, [r7, #4]
 80035f8:	f893 3061 	ldrb.w	r3, [r3, #97]	@ 0x61
 80035fc:	b2db      	uxtb	r3, r3
 80035fe:	2b00      	cmp	r3, #0
 8003600:	d106      	bne.n	8003610 <HAL_DMA2D_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8003602:	687b      	ldr	r3, [r7, #4]
 8003604:	2200      	movs	r2, #0
 8003606:	f883 2060 	strb.w	r2, [r3, #96]	@ 0x60
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 800360a:	6878      	ldr	r0, [r7, #4]
 800360c:	f7fd f8c6 	bl	800079c <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003610:	687b      	ldr	r3, [r7, #4]
 8003612:	2202      	movs	r2, #2
 8003614:	f883 2061 	strb.w	r2, [r3, #97]	@ 0x61

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE | DMA2D_CR_LOM, hdma2d->Init.Mode | hdma2d->Init.LineOffsetMode);
 8003618:	687b      	ldr	r3, [r7, #4]
 800361a:	681b      	ldr	r3, [r3, #0]
 800361c:	681a      	ldr	r2, [r3, #0]
 800361e:	4b20      	ldr	r3, [pc, #128]	@ (80036a0 <HAL_DMA2D_Init+0xbc>)
 8003620:	4013      	ands	r3, r2
 8003622:	687a      	ldr	r2, [r7, #4]
 8003624:	6851      	ldr	r1, [r2, #4]
 8003626:	687a      	ldr	r2, [r7, #4]
 8003628:	69d2      	ldr	r2, [r2, #28]
 800362a:	4311      	orrs	r1, r2
 800362c:	687a      	ldr	r2, [r7, #4]
 800362e:	6812      	ldr	r2, [r2, #0]
 8003630:	430b      	orrs	r3, r1
 8003632:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM | DMA2D_OPFCCR_SB,
 8003634:	687b      	ldr	r3, [r7, #4]
 8003636:	681b      	ldr	r3, [r3, #0]
 8003638:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800363a:	4b1a      	ldr	r3, [pc, #104]	@ (80036a4 <HAL_DMA2D_Init+0xc0>)
 800363c:	4013      	ands	r3, r2
 800363e:	687a      	ldr	r2, [r7, #4]
 8003640:	6891      	ldr	r1, [r2, #8]
 8003642:	687a      	ldr	r2, [r7, #4]
 8003644:	6992      	ldr	r2, [r2, #24]
 8003646:	4311      	orrs	r1, r2
 8003648:	687a      	ldr	r2, [r7, #4]
 800364a:	6812      	ldr	r2, [r2, #0]
 800364c:	430b      	orrs	r3, r1
 800364e:	6353      	str	r3, [r2, #52]	@ 0x34
             hdma2d->Init.ColorMode | hdma2d->Init.BytesSwap);

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8003650:	687b      	ldr	r3, [r7, #4]
 8003652:	681b      	ldr	r3, [r3, #0]
 8003654:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8003656:	4b14      	ldr	r3, [pc, #80]	@ (80036a8 <HAL_DMA2D_Init+0xc4>)
 8003658:	4013      	ands	r3, r2
 800365a:	687a      	ldr	r2, [r7, #4]
 800365c:	68d1      	ldr	r1, [r2, #12]
 800365e:	687a      	ldr	r2, [r7, #4]
 8003660:	6812      	ldr	r2, [r2, #0]
 8003662:	430b      	orrs	r3, r1
 8003664:	6413      	str	r3, [r2, #64]	@ 0x40
  /* DMA2D OPFCCR AI and RBS fields setting (Output Alpha Inversion)*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, (DMA2D_OPFCCR_AI | DMA2D_OPFCCR_RBS),
 8003666:	687b      	ldr	r3, [r7, #4]
 8003668:	681b      	ldr	r3, [r3, #0]
 800366a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800366c:	f423 1140 	bic.w	r1, r3, #3145728	@ 0x300000
 8003670:	687b      	ldr	r3, [r7, #4]
 8003672:	691b      	ldr	r3, [r3, #16]
 8003674:	051a      	lsls	r2, r3, #20
 8003676:	687b      	ldr	r3, [r7, #4]
 8003678:	695b      	ldr	r3, [r3, #20]
 800367a:	055b      	lsls	r3, r3, #21
 800367c:	431a      	orrs	r2, r3
 800367e:	687b      	ldr	r3, [r7, #4]
 8003680:	681b      	ldr	r3, [r3, #0]
 8003682:	430a      	orrs	r2, r1
 8003684:	635a      	str	r2, [r3, #52]	@ 0x34
             ((hdma2d->Init.AlphaInverted << DMA2D_OPFCCR_AI_Pos) | \
              (hdma2d->Init.RedBlueSwap << DMA2D_OPFCCR_RBS_Pos)));


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8003686:	687b      	ldr	r3, [r7, #4]
 8003688:	2200      	movs	r2, #0
 800368a:	665a      	str	r2, [r3, #100]	@ 0x64

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 800368c:	687b      	ldr	r3, [r7, #4]
 800368e:	2201      	movs	r2, #1
 8003690:	f883 2061 	strb.w	r2, [r3, #97]	@ 0x61

  return HAL_OK;
 8003694:	2300      	movs	r3, #0
}
 8003696:	4618      	mov	r0, r3
 8003698:	3708      	adds	r7, #8
 800369a:	46bd      	mov	sp, r7
 800369c:	bd80      	pop	{r7, pc}
 800369e:	bf00      	nop
 80036a0:	fff8ffbf 	.word	0xfff8ffbf
 80036a4:	fffffef8 	.word	0xfffffef8
 80036a8:	ffff0000 	.word	0xffff0000

080036ac <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 80036ac:	b480      	push	{r7}
 80036ae:	b087      	sub	sp, #28
 80036b0:	af00      	add	r7, sp, #0
 80036b2:	6078      	str	r0, [r7, #4]
 80036b4:	6039      	str	r1, [r7, #0]
  uint32_t regValue;

  /* Check the parameters */
  assert_param(IS_DMA2D_LAYER(LayerIdx));
  assert_param(IS_DMA2D_OFFSET(hdma2d->LayerCfg[LayerIdx].InputOffset));
  if (hdma2d->Init.Mode != DMA2D_R2M)
 80036b6:	687b      	ldr	r3, [r7, #4]
 80036b8:	685b      	ldr	r3, [r3, #4]
 80036ba:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
    }
  }
  assert_param(IS_DMA2D_ALPHA_INVERTED(hdma2d->LayerCfg[LayerIdx].AlphaInverted));
  assert_param(IS_DMA2D_RB_SWAP(hdma2d->LayerCfg[LayerIdx].RedBlueSwap));

  if ((LayerIdx == DMA2D_FOREGROUND_LAYER) && (hdma2d->LayerCfg[LayerIdx].InputColorMode == DMA2D_INPUT_YCBCR))
 80036be:	683b      	ldr	r3, [r7, #0]
 80036c0:	2b01      	cmp	r3, #1
  {
    assert_param(IS_DMA2D_CHROMA_SUB_SAMPLING(hdma2d->LayerCfg[LayerIdx].ChromaSubSampling));
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 80036c2:	687b      	ldr	r3, [r7, #4]
 80036c4:	f893 3060 	ldrb.w	r3, [r3, #96]	@ 0x60
 80036c8:	2b01      	cmp	r3, #1
 80036ca:	d101      	bne.n	80036d0 <HAL_DMA2D_ConfigLayer+0x24>
 80036cc:	2302      	movs	r3, #2
 80036ce:	e092      	b.n	80037f6 <HAL_DMA2D_ConfigLayer+0x14a>
 80036d0:	687b      	ldr	r3, [r7, #4]
 80036d2:	2201      	movs	r2, #1
 80036d4:	f883 2060 	strb.w	r2, [r3, #96]	@ 0x60

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80036d8:	687b      	ldr	r3, [r7, #4]
 80036da:	2202      	movs	r2, #2
 80036dc:	f883 2061 	strb.w	r2, [r3, #97]	@ 0x61

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];
 80036e0:	683a      	ldr	r2, [r7, #0]
 80036e2:	4613      	mov	r3, r2
 80036e4:	00db      	lsls	r3, r3, #3
 80036e6:	1a9b      	subs	r3, r3, r2
 80036e8:	009b      	lsls	r3, r3, #2
 80036ea:	3328      	adds	r3, #40	@ 0x28
 80036ec:	687a      	ldr	r2, [r7, #4]
 80036ee:	4413      	add	r3, r2
 80036f0:	60fb      	str	r3, [r7, #12]

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
 80036f2:	68fb      	ldr	r3, [r7, #12]
 80036f4:	685a      	ldr	r2, [r3, #4]
 80036f6:	68fb      	ldr	r3, [r7, #12]
 80036f8:	689b      	ldr	r3, [r3, #8]
 80036fa:	041b      	lsls	r3, r3, #16
 80036fc:	431a      	orrs	r2, r3
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
 80036fe:	68fb      	ldr	r3, [r7, #12]
 8003700:	691b      	ldr	r3, [r3, #16]
 8003702:	051b      	lsls	r3, r3, #20
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
 8003704:	431a      	orrs	r2, r3
             (pLayerCfg->AlphaInverted << DMA2D_BGPFCCR_AI_Pos) | (pLayerCfg->RedBlueSwap << DMA2D_BGPFCCR_RBS_Pos);
 8003706:	68fb      	ldr	r3, [r7, #12]
 8003708:	695b      	ldr	r3, [r3, #20]
 800370a:	055b      	lsls	r3, r3, #21
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos) | \
 800370c:	4313      	orrs	r3, r2
 800370e:	613b      	str	r3, [r7, #16]
  regMask  = (DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA | DMA2D_BGPFCCR_AI | DMA2D_BGPFCCR_RBS);
 8003710:	4b3c      	ldr	r3, [pc, #240]	@ (8003804 <HAL_DMA2D_ConfigLayer+0x158>)
 8003712:	617b      	str	r3, [r7, #20]


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003714:	68fb      	ldr	r3, [r7, #12]
 8003716:	685b      	ldr	r3, [r3, #4]
 8003718:	2b0a      	cmp	r3, #10
 800371a:	d003      	beq.n	8003724 <HAL_DMA2D_ConfigLayer+0x78>
 800371c:	68fb      	ldr	r3, [r7, #12]
 800371e:	685b      	ldr	r3, [r3, #4]
 8003720:	2b09      	cmp	r3, #9
 8003722:	d107      	bne.n	8003734 <HAL_DMA2D_ConfigLayer+0x88>
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8003724:	68fb      	ldr	r3, [r7, #12]
 8003726:	68db      	ldr	r3, [r3, #12]
 8003728:	f003 437f 	and.w	r3, r3, #4278190080	@ 0xff000000
 800372c:	693a      	ldr	r2, [r7, #16]
 800372e:	4313      	orrs	r3, r2
 8003730:	613b      	str	r3, [r7, #16]
 8003732:	e005      	b.n	8003740 <HAL_DMA2D_ConfigLayer+0x94>
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8003734:	68fb      	ldr	r3, [r7, #12]
 8003736:	68db      	ldr	r3, [r3, #12]
 8003738:	061b      	lsls	r3, r3, #24
 800373a:	693a      	ldr	r2, [r7, #16]
 800373c:	4313      	orrs	r3, r2
 800373e:	613b      	str	r3, [r7, #16]
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8003740:	683b      	ldr	r3, [r7, #0]
 8003742:	2b00      	cmp	r3, #0
 8003744:	d120      	bne.n	8003788 <HAL_DMA2D_ConfigLayer+0xdc>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8003746:	687b      	ldr	r3, [r7, #4]
 8003748:	681b      	ldr	r3, [r3, #0]
 800374a:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800374c:	697b      	ldr	r3, [r7, #20]
 800374e:	43db      	mvns	r3, r3
 8003750:	ea02 0103 	and.w	r1, r2, r3
 8003754:	687b      	ldr	r3, [r7, #4]
 8003756:	681b      	ldr	r3, [r3, #0]
 8003758:	693a      	ldr	r2, [r7, #16]
 800375a:	430a      	orrs	r2, r1
 800375c:	625a      	str	r2, [r3, #36]	@ 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800375e:	687b      	ldr	r3, [r7, #4]
 8003760:	681b      	ldr	r3, [r3, #0]
 8003762:	68fa      	ldr	r2, [r7, #12]
 8003764:	6812      	ldr	r2, [r2, #0]
 8003766:	619a      	str	r2, [r3, #24]

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003768:	68fb      	ldr	r3, [r7, #12]
 800376a:	685b      	ldr	r3, [r3, #4]
 800376c:	2b0a      	cmp	r3, #10
 800376e:	d003      	beq.n	8003778 <HAL_DMA2D_ConfigLayer+0xcc>
 8003770:	68fb      	ldr	r3, [r7, #12]
 8003772:	685b      	ldr	r3, [r3, #4]
 8003774:	2b09      	cmp	r3, #9
 8003776:	d135      	bne.n	80037e4 <HAL_DMA2D_ConfigLayer+0x138>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8003778:	68fb      	ldr	r3, [r7, #12]
 800377a:	68da      	ldr	r2, [r3, #12]
 800377c:	687b      	ldr	r3, [r7, #4]
 800377e:	681b      	ldr	r3, [r3, #0]
 8003780:	f022 427f 	bic.w	r2, r2, #4278190080	@ 0xff000000
 8003784:	629a      	str	r2, [r3, #40]	@ 0x28
 8003786:	e02d      	b.n	80037e4 <HAL_DMA2D_ConfigLayer+0x138>
  }
  /* Configure the foreground DMA2D layer */
  else
  {

    if (pLayerCfg->InputColorMode == DMA2D_INPUT_YCBCR)
 8003788:	68fb      	ldr	r3, [r7, #12]
 800378a:	685b      	ldr	r3, [r3, #4]
 800378c:	2b0b      	cmp	r3, #11
 800378e:	d109      	bne.n	80037a4 <HAL_DMA2D_ConfigLayer+0xf8>
    {
      regValue |= (pLayerCfg->ChromaSubSampling << DMA2D_FGPFCCR_CSS_Pos);
 8003790:	68fb      	ldr	r3, [r7, #12]
 8003792:	699b      	ldr	r3, [r3, #24]
 8003794:	049b      	lsls	r3, r3, #18
 8003796:	693a      	ldr	r2, [r7, #16]
 8003798:	4313      	orrs	r3, r2
 800379a:	613b      	str	r3, [r7, #16]
      regMask  |= DMA2D_FGPFCCR_CSS;
 800379c:	697b      	ldr	r3, [r7, #20]
 800379e:	f443 2340 	orr.w	r3, r3, #786432	@ 0xc0000
 80037a2:	617b      	str	r3, [r7, #20]
    }

    /* Write DMA2D FGPFCCR register */
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 80037a4:	687b      	ldr	r3, [r7, #4]
 80037a6:	681b      	ldr	r3, [r3, #0]
 80037a8:	69da      	ldr	r2, [r3, #28]
 80037aa:	697b      	ldr	r3, [r7, #20]
 80037ac:	43db      	mvns	r3, r3
 80037ae:	ea02 0103 	and.w	r1, r2, r3
 80037b2:	687b      	ldr	r3, [r7, #4]
 80037b4:	681b      	ldr	r3, [r3, #0]
 80037b6:	693a      	ldr	r2, [r7, #16]
 80037b8:	430a      	orrs	r2, r1
 80037ba:	61da      	str	r2, [r3, #28]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 80037bc:	687b      	ldr	r3, [r7, #4]
 80037be:	681b      	ldr	r3, [r3, #0]
 80037c0:	68fa      	ldr	r2, [r7, #12]
 80037c2:	6812      	ldr	r2, [r2, #0]
 80037c4:	611a      	str	r2, [r3, #16]

    /* DMA2D FGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80037c6:	68fb      	ldr	r3, [r7, #12]
 80037c8:	685b      	ldr	r3, [r3, #4]
 80037ca:	2b0a      	cmp	r3, #10
 80037cc:	d003      	beq.n	80037d6 <HAL_DMA2D_ConfigLayer+0x12a>
 80037ce:	68fb      	ldr	r3, [r7, #12]
 80037d0:	685b      	ldr	r3, [r3, #4]
 80037d2:	2b09      	cmp	r3, #9
 80037d4:	d106      	bne.n	80037e4 <HAL_DMA2D_ConfigLayer+0x138>
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 80037d6:	68fb      	ldr	r3, [r7, #12]
 80037d8:	68da      	ldr	r2, [r3, #12]
 80037da:	687b      	ldr	r3, [r7, #4]
 80037dc:	681b      	ldr	r3, [r3, #0]
 80037de:	f022 427f 	bic.w	r2, r2, #4278190080	@ 0xff000000
 80037e2:	621a      	str	r2, [r3, #32]
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80037e4:	687b      	ldr	r3, [r7, #4]
 80037e6:	2201      	movs	r2, #1
 80037e8:	f883 2061 	strb.w	r2, [r3, #97]	@ 0x61

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 80037ec:	687b      	ldr	r3, [r7, #4]
 80037ee:	2200      	movs	r2, #0
 80037f0:	f883 2060 	strb.w	r2, [r3, #96]	@ 0x60

  return HAL_OK;
 80037f4:	2300      	movs	r3, #0
}
 80037f6:	4618      	mov	r0, r3
 80037f8:	371c      	adds	r7, #28
 80037fa:	46bd      	mov	sp, r7
 80037fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003800:	4770      	bx	lr
 8003802:	bf00      	nop
 8003804:	ff33000f 	.word	0xff33000f

08003808 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8003808:	b480      	push	{r7}
 800380a:	b089      	sub	sp, #36	@ 0x24
 800380c:	af00      	add	r7, sp, #0
 800380e:	6078      	str	r0, [r7, #4]
 8003810:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00U;
 8003812:	2300      	movs	r3, #0
 8003814:	61fb      	str	r3, [r7, #28]
  EXTI_Core_TypeDef *EXTI_CurrentCPU;

#if defined(DUAL_CORE) && defined(CORE_CM4)
  EXTI_CurrentCPU = EXTI_D2; /* EXTI for CM4 CPU */
#else
  EXTI_CurrentCPU = EXTI_D1; /* EXTI for CM7 CPU */
 8003816:	4b86      	ldr	r3, [pc, #536]	@ (8003a30 <HAL_GPIO_Init+0x228>)
 8003818:	617b      	str	r3, [r7, #20]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
 800381a:	e18c      	b.n	8003b36 <HAL_GPIO_Init+0x32e>
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
 800381c:	683b      	ldr	r3, [r7, #0]
 800381e:	681a      	ldr	r2, [r3, #0]
 8003820:	2101      	movs	r1, #1
 8003822:	69fb      	ldr	r3, [r7, #28]
 8003824:	fa01 f303 	lsl.w	r3, r1, r3
 8003828:	4013      	ands	r3, r2
 800382a:	613b      	str	r3, [r7, #16]

    if (iocurrent != 0x00U)
 800382c:	693b      	ldr	r3, [r7, #16]
 800382e:	2b00      	cmp	r3, #0
 8003830:	f000 817e 	beq.w	8003b30 <HAL_GPIO_Init+0x328>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8003834:	683b      	ldr	r3, [r7, #0]
 8003836:	685b      	ldr	r3, [r3, #4]
 8003838:	f003 0303 	and.w	r3, r3, #3
 800383c:	2b01      	cmp	r3, #1
 800383e:	d005      	beq.n	800384c <HAL_GPIO_Init+0x44>
 8003840:	683b      	ldr	r3, [r7, #0]
 8003842:	685b      	ldr	r3, [r3, #4]
 8003844:	f003 0303 	and.w	r3, r3, #3
 8003848:	2b02      	cmp	r3, #2
 800384a:	d130      	bne.n	80038ae <HAL_GPIO_Init+0xa6>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));

        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 800384c:	687b      	ldr	r3, [r7, #4]
 800384e:	689b      	ldr	r3, [r3, #8]
 8003850:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 8003852:	69fb      	ldr	r3, [r7, #28]
 8003854:	005b      	lsls	r3, r3, #1
 8003856:	2203      	movs	r2, #3
 8003858:	fa02 f303 	lsl.w	r3, r2, r3
 800385c:	43db      	mvns	r3, r3
 800385e:	69ba      	ldr	r2, [r7, #24]
 8003860:	4013      	ands	r3, r2
 8003862:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8003864:	683b      	ldr	r3, [r7, #0]
 8003866:	68da      	ldr	r2, [r3, #12]
 8003868:	69fb      	ldr	r3, [r7, #28]
 800386a:	005b      	lsls	r3, r3, #1
 800386c:	fa02 f303 	lsl.w	r3, r2, r3
 8003870:	69ba      	ldr	r2, [r7, #24]
 8003872:	4313      	orrs	r3, r2
 8003874:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8003876:	687b      	ldr	r3, [r7, #4]
 8003878:	69ba      	ldr	r2, [r7, #24]
 800387a:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 800387c:	687b      	ldr	r3, [r7, #4]
 800387e:	685b      	ldr	r3, [r3, #4]
 8003880:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
 8003882:	2201      	movs	r2, #1
 8003884:	69fb      	ldr	r3, [r7, #28]
 8003886:	fa02 f303 	lsl.w	r3, r2, r3
 800388a:	43db      	mvns	r3, r3
 800388c:	69ba      	ldr	r2, [r7, #24]
 800388e:	4013      	ands	r3, r2
 8003890:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8003892:	683b      	ldr	r3, [r7, #0]
 8003894:	685b      	ldr	r3, [r3, #4]
 8003896:	091b      	lsrs	r3, r3, #4
 8003898:	f003 0201 	and.w	r2, r3, #1
 800389c:	69fb      	ldr	r3, [r7, #28]
 800389e:	fa02 f303 	lsl.w	r3, r2, r3
 80038a2:	69ba      	ldr	r2, [r7, #24]
 80038a4:	4313      	orrs	r3, r2
 80038a6:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 80038a8:	687b      	ldr	r3, [r7, #4]
 80038aa:	69ba      	ldr	r2, [r7, #24]
 80038ac:	605a      	str	r2, [r3, #4]
      }

      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80038ae:	683b      	ldr	r3, [r7, #0]
 80038b0:	685b      	ldr	r3, [r3, #4]
 80038b2:	f003 0303 	and.w	r3, r3, #3
 80038b6:	2b03      	cmp	r3, #3
 80038b8:	d017      	beq.n	80038ea <HAL_GPIO_Init+0xe2>
      {
       /* Check the Pull parameter */
       assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 80038ba:	687b      	ldr	r3, [r7, #4]
 80038bc:	68db      	ldr	r3, [r3, #12]
 80038be:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 80038c0:	69fb      	ldr	r3, [r7, #28]
 80038c2:	005b      	lsls	r3, r3, #1
 80038c4:	2203      	movs	r2, #3
 80038c6:	fa02 f303 	lsl.w	r3, r2, r3
 80038ca:	43db      	mvns	r3, r3
 80038cc:	69ba      	ldr	r2, [r7, #24]
 80038ce:	4013      	ands	r3, r2
 80038d0:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 80038d2:	683b      	ldr	r3, [r7, #0]
 80038d4:	689a      	ldr	r2, [r3, #8]
 80038d6:	69fb      	ldr	r3, [r7, #28]
 80038d8:	005b      	lsls	r3, r3, #1
 80038da:	fa02 f303 	lsl.w	r3, r2, r3
 80038de:	69ba      	ldr	r2, [r7, #24]
 80038e0:	4313      	orrs	r3, r2
 80038e2:	61bb      	str	r3, [r7, #24]
      GPIOx->PUPDR = temp;
 80038e4:	687b      	ldr	r3, [r7, #4]
 80038e6:	69ba      	ldr	r2, [r7, #24]
 80038e8:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80038ea:	683b      	ldr	r3, [r7, #0]
 80038ec:	685b      	ldr	r3, [r3, #4]
 80038ee:	f003 0303 	and.w	r3, r3, #3
 80038f2:	2b02      	cmp	r3, #2
 80038f4:	d123      	bne.n	800393e <HAL_GPIO_Init+0x136>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 80038f6:	69fb      	ldr	r3, [r7, #28]
 80038f8:	08da      	lsrs	r2, r3, #3
 80038fa:	687b      	ldr	r3, [r7, #4]
 80038fc:	3208      	adds	r2, #8
 80038fe:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003902:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
 8003904:	69fb      	ldr	r3, [r7, #28]
 8003906:	f003 0307 	and.w	r3, r3, #7
 800390a:	009b      	lsls	r3, r3, #2
 800390c:	220f      	movs	r2, #15
 800390e:	fa02 f303 	lsl.w	r3, r2, r3
 8003912:	43db      	mvns	r3, r3
 8003914:	69ba      	ldr	r2, [r7, #24]
 8003916:	4013      	ands	r3, r2
 8003918:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
 800391a:	683b      	ldr	r3, [r7, #0]
 800391c:	691a      	ldr	r2, [r3, #16]
 800391e:	69fb      	ldr	r3, [r7, #28]
 8003920:	f003 0307 	and.w	r3, r3, #7
 8003924:	009b      	lsls	r3, r3, #2
 8003926:	fa02 f303 	lsl.w	r3, r2, r3
 800392a:	69ba      	ldr	r2, [r7, #24]
 800392c:	4313      	orrs	r3, r2
 800392e:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 8003930:	69fb      	ldr	r3, [r7, #28]
 8003932:	08da      	lsrs	r2, r3, #3
 8003934:	687b      	ldr	r3, [r7, #4]
 8003936:	3208      	adds	r2, #8
 8003938:	69b9      	ldr	r1, [r7, #24]
 800393a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 800393e:	687b      	ldr	r3, [r7, #4]
 8003940:	681b      	ldr	r3, [r3, #0]
 8003942:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
 8003944:	69fb      	ldr	r3, [r7, #28]
 8003946:	005b      	lsls	r3, r3, #1
 8003948:	2203      	movs	r2, #3
 800394a:	fa02 f303 	lsl.w	r3, r2, r3
 800394e:	43db      	mvns	r3, r3
 8003950:	69ba      	ldr	r2, [r7, #24]
 8003952:	4013      	ands	r3, r2
 8003954:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8003956:	683b      	ldr	r3, [r7, #0]
 8003958:	685b      	ldr	r3, [r3, #4]
 800395a:	f003 0203 	and.w	r2, r3, #3
 800395e:	69fb      	ldr	r3, [r7, #28]
 8003960:	005b      	lsls	r3, r3, #1
 8003962:	fa02 f303 	lsl.w	r3, r2, r3
 8003966:	69ba      	ldr	r2, [r7, #24]
 8003968:	4313      	orrs	r3, r2
 800396a:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 800396c:	687b      	ldr	r3, [r7, #4]
 800396e:	69ba      	ldr	r2, [r7, #24]
 8003970:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8003972:	683b      	ldr	r3, [r7, #0]
 8003974:	685b      	ldr	r3, [r3, #4]
 8003976:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 800397a:	2b00      	cmp	r3, #0
 800397c:	f000 80d8 	beq.w	8003b30 <HAL_GPIO_Init+0x328>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003980:	4b2c      	ldr	r3, [pc, #176]	@ (8003a34 <HAL_GPIO_Init+0x22c>)
 8003982:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8003986:	4a2b      	ldr	r2, [pc, #172]	@ (8003a34 <HAL_GPIO_Init+0x22c>)
 8003988:	f043 0302 	orr.w	r3, r3, #2
 800398c:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
 8003990:	4b28      	ldr	r3, [pc, #160]	@ (8003a34 <HAL_GPIO_Init+0x22c>)
 8003992:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8003996:	f003 0302 	and.w	r3, r3, #2
 800399a:	60fb      	str	r3, [r7, #12]
 800399c:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 800399e:	4a26      	ldr	r2, [pc, #152]	@ (8003a38 <HAL_GPIO_Init+0x230>)
 80039a0:	69fb      	ldr	r3, [r7, #28]
 80039a2:	089b      	lsrs	r3, r3, #2
 80039a4:	3302      	adds	r3, #2
 80039a6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80039aa:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 80039ac:	69fb      	ldr	r3, [r7, #28]
 80039ae:	f003 0303 	and.w	r3, r3, #3
 80039b2:	009b      	lsls	r3, r3, #2
 80039b4:	220f      	movs	r2, #15
 80039b6:	fa02 f303 	lsl.w	r3, r2, r3
 80039ba:	43db      	mvns	r3, r3
 80039bc:	69ba      	ldr	r2, [r7, #24]
 80039be:	4013      	ands	r3, r2
 80039c0:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 80039c2:	687b      	ldr	r3, [r7, #4]
 80039c4:	4a1d      	ldr	r2, [pc, #116]	@ (8003a3c <HAL_GPIO_Init+0x234>)
 80039c6:	4293      	cmp	r3, r2
 80039c8:	d04a      	beq.n	8003a60 <HAL_GPIO_Init+0x258>
 80039ca:	687b      	ldr	r3, [r7, #4]
 80039cc:	4a1c      	ldr	r2, [pc, #112]	@ (8003a40 <HAL_GPIO_Init+0x238>)
 80039ce:	4293      	cmp	r3, r2
 80039d0:	d02b      	beq.n	8003a2a <HAL_GPIO_Init+0x222>
 80039d2:	687b      	ldr	r3, [r7, #4]
 80039d4:	4a1b      	ldr	r2, [pc, #108]	@ (8003a44 <HAL_GPIO_Init+0x23c>)
 80039d6:	4293      	cmp	r3, r2
 80039d8:	d025      	beq.n	8003a26 <HAL_GPIO_Init+0x21e>
 80039da:	687b      	ldr	r3, [r7, #4]
 80039dc:	4a1a      	ldr	r2, [pc, #104]	@ (8003a48 <HAL_GPIO_Init+0x240>)
 80039de:	4293      	cmp	r3, r2
 80039e0:	d01f      	beq.n	8003a22 <HAL_GPIO_Init+0x21a>
 80039e2:	687b      	ldr	r3, [r7, #4]
 80039e4:	4a19      	ldr	r2, [pc, #100]	@ (8003a4c <HAL_GPIO_Init+0x244>)
 80039e6:	4293      	cmp	r3, r2
 80039e8:	d019      	beq.n	8003a1e <HAL_GPIO_Init+0x216>
 80039ea:	687b      	ldr	r3, [r7, #4]
 80039ec:	4a18      	ldr	r2, [pc, #96]	@ (8003a50 <HAL_GPIO_Init+0x248>)
 80039ee:	4293      	cmp	r3, r2
 80039f0:	d013      	beq.n	8003a1a <HAL_GPIO_Init+0x212>
 80039f2:	687b      	ldr	r3, [r7, #4]
 80039f4:	4a17      	ldr	r2, [pc, #92]	@ (8003a54 <HAL_GPIO_Init+0x24c>)
 80039f6:	4293      	cmp	r3, r2
 80039f8:	d00d      	beq.n	8003a16 <HAL_GPIO_Init+0x20e>
 80039fa:	687b      	ldr	r3, [r7, #4]
 80039fc:	4a16      	ldr	r2, [pc, #88]	@ (8003a58 <HAL_GPIO_Init+0x250>)
 80039fe:	4293      	cmp	r3, r2
 8003a00:	d007      	beq.n	8003a12 <HAL_GPIO_Init+0x20a>
 8003a02:	687b      	ldr	r3, [r7, #4]
 8003a04:	4a15      	ldr	r2, [pc, #84]	@ (8003a5c <HAL_GPIO_Init+0x254>)
 8003a06:	4293      	cmp	r3, r2
 8003a08:	d101      	bne.n	8003a0e <HAL_GPIO_Init+0x206>
 8003a0a:	2309      	movs	r3, #9
 8003a0c:	e029      	b.n	8003a62 <HAL_GPIO_Init+0x25a>
 8003a0e:	230a      	movs	r3, #10
 8003a10:	e027      	b.n	8003a62 <HAL_GPIO_Init+0x25a>
 8003a12:	2307      	movs	r3, #7
 8003a14:	e025      	b.n	8003a62 <HAL_GPIO_Init+0x25a>
 8003a16:	2306      	movs	r3, #6
 8003a18:	e023      	b.n	8003a62 <HAL_GPIO_Init+0x25a>
 8003a1a:	2305      	movs	r3, #5
 8003a1c:	e021      	b.n	8003a62 <HAL_GPIO_Init+0x25a>
 8003a1e:	2304      	movs	r3, #4
 8003a20:	e01f      	b.n	8003a62 <HAL_GPIO_Init+0x25a>
 8003a22:	2303      	movs	r3, #3
 8003a24:	e01d      	b.n	8003a62 <HAL_GPIO_Init+0x25a>
 8003a26:	2302      	movs	r3, #2
 8003a28:	e01b      	b.n	8003a62 <HAL_GPIO_Init+0x25a>
 8003a2a:	2301      	movs	r3, #1
 8003a2c:	e019      	b.n	8003a62 <HAL_GPIO_Init+0x25a>
 8003a2e:	bf00      	nop
 8003a30:	58000080 	.word	0x58000080
 8003a34:	58024400 	.word	0x58024400
 8003a38:	58000400 	.word	0x58000400
 8003a3c:	58020000 	.word	0x58020000
 8003a40:	58020400 	.word	0x58020400
 8003a44:	58020800 	.word	0x58020800
 8003a48:	58020c00 	.word	0x58020c00
 8003a4c:	58021000 	.word	0x58021000
 8003a50:	58021400 	.word	0x58021400
 8003a54:	58021800 	.word	0x58021800
 8003a58:	58021c00 	.word	0x58021c00
 8003a5c:	58022400 	.word	0x58022400
 8003a60:	2300      	movs	r3, #0
 8003a62:	69fa      	ldr	r2, [r7, #28]
 8003a64:	f002 0203 	and.w	r2, r2, #3
 8003a68:	0092      	lsls	r2, r2, #2
 8003a6a:	4093      	lsls	r3, r2
 8003a6c:	69ba      	ldr	r2, [r7, #24]
 8003a6e:	4313      	orrs	r3, r2
 8003a70:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8003a72:	4938      	ldr	r1, [pc, #224]	@ (8003b54 <HAL_GPIO_Init+0x34c>)
 8003a74:	69fb      	ldr	r3, [r7, #28]
 8003a76:	089b      	lsrs	r3, r3, #2
 8003a78:	3302      	adds	r3, #2
 8003a7a:	69ba      	ldr	r2, [r7, #24]
 8003a7c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
 8003a80:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8003a84:	681b      	ldr	r3, [r3, #0]
 8003a86:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 8003a88:	693b      	ldr	r3, [r7, #16]
 8003a8a:	43db      	mvns	r3, r3
 8003a8c:	69ba      	ldr	r2, [r7, #24]
 8003a8e:	4013      	ands	r3, r2
 8003a90:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8003a92:	683b      	ldr	r3, [r7, #0]
 8003a94:	685b      	ldr	r3, [r3, #4]
 8003a96:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8003a9a:	2b00      	cmp	r3, #0
 8003a9c:	d003      	beq.n	8003aa6 <HAL_GPIO_Init+0x29e>
        {
          temp |= iocurrent;
 8003a9e:	69ba      	ldr	r2, [r7, #24]
 8003aa0:	693b      	ldr	r3, [r7, #16]
 8003aa2:	4313      	orrs	r3, r2
 8003aa4:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR1 = temp;
 8003aa6:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8003aaa:	69bb      	ldr	r3, [r7, #24]
 8003aac:	6013      	str	r3, [r2, #0]

        temp = EXTI->FTSR1;
 8003aae:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8003ab2:	685b      	ldr	r3, [r3, #4]
 8003ab4:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 8003ab6:	693b      	ldr	r3, [r7, #16]
 8003ab8:	43db      	mvns	r3, r3
 8003aba:	69ba      	ldr	r2, [r7, #24]
 8003abc:	4013      	ands	r3, r2
 8003abe:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 8003ac0:	683b      	ldr	r3, [r7, #0]
 8003ac2:	685b      	ldr	r3, [r3, #4]
 8003ac4:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8003ac8:	2b00      	cmp	r3, #0
 8003aca:	d003      	beq.n	8003ad4 <HAL_GPIO_Init+0x2cc>
        {
          temp |= iocurrent;
 8003acc:	69ba      	ldr	r2, [r7, #24]
 8003ace:	693b      	ldr	r3, [r7, #16]
 8003ad0:	4313      	orrs	r3, r2
 8003ad2:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR1 = temp;
 8003ad4:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 8003ad8:	69bb      	ldr	r3, [r7, #24]
 8003ada:	6053      	str	r3, [r2, #4]

        temp = EXTI_CurrentCPU->EMR1;
 8003adc:	697b      	ldr	r3, [r7, #20]
 8003ade:	685b      	ldr	r3, [r3, #4]
 8003ae0:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 8003ae2:	693b      	ldr	r3, [r7, #16]
 8003ae4:	43db      	mvns	r3, r3
 8003ae6:	69ba      	ldr	r2, [r7, #24]
 8003ae8:	4013      	ands	r3, r2
 8003aea:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8003aec:	683b      	ldr	r3, [r7, #0]
 8003aee:	685b      	ldr	r3, [r3, #4]
 8003af0:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003af4:	2b00      	cmp	r3, #0
 8003af6:	d003      	beq.n	8003b00 <HAL_GPIO_Init+0x2f8>
        {
          temp |= iocurrent;
 8003af8:	69ba      	ldr	r2, [r7, #24]
 8003afa:	693b      	ldr	r3, [r7, #16]
 8003afc:	4313      	orrs	r3, r2
 8003afe:	61bb      	str	r3, [r7, #24]
        }
        EXTI_CurrentCPU->EMR1 = temp;
 8003b00:	697b      	ldr	r3, [r7, #20]
 8003b02:	69ba      	ldr	r2, [r7, #24]
 8003b04:	605a      	str	r2, [r3, #4]

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
 8003b06:	697b      	ldr	r3, [r7, #20]
 8003b08:	681b      	ldr	r3, [r3, #0]
 8003b0a:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 8003b0c:	693b      	ldr	r3, [r7, #16]
 8003b0e:	43db      	mvns	r3, r3
 8003b10:	69ba      	ldr	r2, [r7, #24]
 8003b12:	4013      	ands	r3, r2
 8003b14:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8003b16:	683b      	ldr	r3, [r7, #0]
 8003b18:	685b      	ldr	r3, [r3, #4]
 8003b1a:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003b1e:	2b00      	cmp	r3, #0
 8003b20:	d003      	beq.n	8003b2a <HAL_GPIO_Init+0x322>
        {
          temp |= iocurrent;
 8003b22:	69ba      	ldr	r2, [r7, #24]
 8003b24:	693b      	ldr	r3, [r7, #16]
 8003b26:	4313      	orrs	r3, r2
 8003b28:	61bb      	str	r3, [r7, #24]
        }
        EXTI_CurrentCPU->IMR1 = temp;
 8003b2a:	697b      	ldr	r3, [r7, #20]
 8003b2c:	69ba      	ldr	r2, [r7, #24]
 8003b2e:	601a      	str	r2, [r3, #0]
      }
    }

    position++;
 8003b30:	69fb      	ldr	r3, [r7, #28]
 8003b32:	3301      	adds	r3, #1
 8003b34:	61fb      	str	r3, [r7, #28]
  while (((GPIO_Init->Pin) >> position) != 0x00U)
 8003b36:	683b      	ldr	r3, [r7, #0]
 8003b38:	681a      	ldr	r2, [r3, #0]
 8003b3a:	69fb      	ldr	r3, [r7, #28]
 8003b3c:	fa22 f303 	lsr.w	r3, r2, r3
 8003b40:	2b00      	cmp	r3, #0
 8003b42:	f47f ae6b 	bne.w	800381c <HAL_GPIO_Init+0x14>
  }
}
 8003b46:	bf00      	nop
 8003b48:	bf00      	nop
 8003b4a:	3724      	adds	r7, #36	@ 0x24
 8003b4c:	46bd      	mov	sp, r7
 8003b4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003b52:	4770      	bx	lr
 8003b54:	58000400 	.word	0x58000400

08003b58 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin: specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 8003b58:	b480      	push	{r7}
 8003b5a:	b087      	sub	sp, #28
 8003b5c:	af00      	add	r7, sp, #0
 8003b5e:	6078      	str	r0, [r7, #4]
 8003b60:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00U;
 8003b62:	2300      	movs	r3, #0
 8003b64:	617b      	str	r3, [r7, #20]
  EXTI_Core_TypeDef *EXTI_CurrentCPU;

#if defined(DUAL_CORE) && defined(CORE_CM4)
  EXTI_CurrentCPU = EXTI_D2; /* EXTI for CM4 CPU */
#else
  EXTI_CurrentCPU = EXTI_D1; /* EXTI for CM7 CPU */
 8003b66:	4b72      	ldr	r3, [pc, #456]	@ (8003d30 <HAL_GPIO_DeInit+0x1d8>)
 8003b68:	613b      	str	r3, [r7, #16]
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* Configure the port pins */
  while ((GPIO_Pin >> position) != 0x00U)
 8003b6a:	e0d3      	b.n	8003d14 <HAL_GPIO_DeInit+0x1bc>
  {
    /* Get current io position */
    iocurrent = GPIO_Pin & (1UL << position) ;
 8003b6c:	2201      	movs	r2, #1
 8003b6e:	697b      	ldr	r3, [r7, #20]
 8003b70:	fa02 f303 	lsl.w	r3, r2, r3
 8003b74:	683a      	ldr	r2, [r7, #0]
 8003b76:	4013      	ands	r3, r2
 8003b78:	60fb      	str	r3, [r7, #12]

    if (iocurrent != 0x00U)
 8003b7a:	68fb      	ldr	r3, [r7, #12]
 8003b7c:	2b00      	cmp	r3, #0
 8003b7e:	f000 80c6 	beq.w	8003d0e <HAL_GPIO_DeInit+0x1b6>
    {
      /*------------------------- EXTI Mode Configuration --------------------*/
      /* Clear the External Interrupt or Event for the current IO */
      tmp = SYSCFG->EXTICR[position >> 2U];
 8003b82:	4a6c      	ldr	r2, [pc, #432]	@ (8003d34 <HAL_GPIO_DeInit+0x1dc>)
 8003b84:	697b      	ldr	r3, [r7, #20]
 8003b86:	089b      	lsrs	r3, r3, #2
 8003b88:	3302      	adds	r3, #2
 8003b8a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8003b8e:	60bb      	str	r3, [r7, #8]
      tmp &= (0x0FUL << (4U * (position & 0x03U)));
 8003b90:	697b      	ldr	r3, [r7, #20]
 8003b92:	f003 0303 	and.w	r3, r3, #3
 8003b96:	009b      	lsls	r3, r3, #2
 8003b98:	220f      	movs	r2, #15
 8003b9a:	fa02 f303 	lsl.w	r3, r2, r3
 8003b9e:	68ba      	ldr	r2, [r7, #8]
 8003ba0:	4013      	ands	r3, r2
 8003ba2:	60bb      	str	r3, [r7, #8]
      if (tmp == (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U))))
 8003ba4:	687b      	ldr	r3, [r7, #4]
 8003ba6:	4a64      	ldr	r2, [pc, #400]	@ (8003d38 <HAL_GPIO_DeInit+0x1e0>)
 8003ba8:	4293      	cmp	r3, r2
 8003baa:	d031      	beq.n	8003c10 <HAL_GPIO_DeInit+0xb8>
 8003bac:	687b      	ldr	r3, [r7, #4]
 8003bae:	4a63      	ldr	r2, [pc, #396]	@ (8003d3c <HAL_GPIO_DeInit+0x1e4>)
 8003bb0:	4293      	cmp	r3, r2
 8003bb2:	d02b      	beq.n	8003c0c <HAL_GPIO_DeInit+0xb4>
 8003bb4:	687b      	ldr	r3, [r7, #4]
 8003bb6:	4a62      	ldr	r2, [pc, #392]	@ (8003d40 <HAL_GPIO_DeInit+0x1e8>)
 8003bb8:	4293      	cmp	r3, r2
 8003bba:	d025      	beq.n	8003c08 <HAL_GPIO_DeInit+0xb0>
 8003bbc:	687b      	ldr	r3, [r7, #4]
 8003bbe:	4a61      	ldr	r2, [pc, #388]	@ (8003d44 <HAL_GPIO_DeInit+0x1ec>)
 8003bc0:	4293      	cmp	r3, r2
 8003bc2:	d01f      	beq.n	8003c04 <HAL_GPIO_DeInit+0xac>
 8003bc4:	687b      	ldr	r3, [r7, #4]
 8003bc6:	4a60      	ldr	r2, [pc, #384]	@ (8003d48 <HAL_GPIO_DeInit+0x1f0>)
 8003bc8:	4293      	cmp	r3, r2
 8003bca:	d019      	beq.n	8003c00 <HAL_GPIO_DeInit+0xa8>
 8003bcc:	687b      	ldr	r3, [r7, #4]
 8003bce:	4a5f      	ldr	r2, [pc, #380]	@ (8003d4c <HAL_GPIO_DeInit+0x1f4>)
 8003bd0:	4293      	cmp	r3, r2
 8003bd2:	d013      	beq.n	8003bfc <HAL_GPIO_DeInit+0xa4>
 8003bd4:	687b      	ldr	r3, [r7, #4]
 8003bd6:	4a5e      	ldr	r2, [pc, #376]	@ (8003d50 <HAL_GPIO_DeInit+0x1f8>)
 8003bd8:	4293      	cmp	r3, r2
 8003bda:	d00d      	beq.n	8003bf8 <HAL_GPIO_DeInit+0xa0>
 8003bdc:	687b      	ldr	r3, [r7, #4]
 8003bde:	4a5d      	ldr	r2, [pc, #372]	@ (8003d54 <HAL_GPIO_DeInit+0x1fc>)
 8003be0:	4293      	cmp	r3, r2
 8003be2:	d007      	beq.n	8003bf4 <HAL_GPIO_DeInit+0x9c>
 8003be4:	687b      	ldr	r3, [r7, #4]
 8003be6:	4a5c      	ldr	r2, [pc, #368]	@ (8003d58 <HAL_GPIO_DeInit+0x200>)
 8003be8:	4293      	cmp	r3, r2
 8003bea:	d101      	bne.n	8003bf0 <HAL_GPIO_DeInit+0x98>
 8003bec:	2309      	movs	r3, #9
 8003bee:	e010      	b.n	8003c12 <HAL_GPIO_DeInit+0xba>
 8003bf0:	230a      	movs	r3, #10
 8003bf2:	e00e      	b.n	8003c12 <HAL_GPIO_DeInit+0xba>
 8003bf4:	2307      	movs	r3, #7
 8003bf6:	e00c      	b.n	8003c12 <HAL_GPIO_DeInit+0xba>
 8003bf8:	2306      	movs	r3, #6
 8003bfa:	e00a      	b.n	8003c12 <HAL_GPIO_DeInit+0xba>
 8003bfc:	2305      	movs	r3, #5
 8003bfe:	e008      	b.n	8003c12 <HAL_GPIO_DeInit+0xba>
 8003c00:	2304      	movs	r3, #4
 8003c02:	e006      	b.n	8003c12 <HAL_GPIO_DeInit+0xba>
 8003c04:	2303      	movs	r3, #3
 8003c06:	e004      	b.n	8003c12 <HAL_GPIO_DeInit+0xba>
 8003c08:	2302      	movs	r3, #2
 8003c0a:	e002      	b.n	8003c12 <HAL_GPIO_DeInit+0xba>
 8003c0c:	2301      	movs	r3, #1
 8003c0e:	e000      	b.n	8003c12 <HAL_GPIO_DeInit+0xba>
 8003c10:	2300      	movs	r3, #0
 8003c12:	697a      	ldr	r2, [r7, #20]
 8003c14:	f002 0203 	and.w	r2, r2, #3
 8003c18:	0092      	lsls	r2, r2, #2
 8003c1a:	4093      	lsls	r3, r2
 8003c1c:	68ba      	ldr	r2, [r7, #8]
 8003c1e:	429a      	cmp	r2, r3
 8003c20:	d136      	bne.n	8003c90 <HAL_GPIO_DeInit+0x138>
      {
        /* Clear EXTI line configuration for Current CPU */
        EXTI_CurrentCPU->IMR1 &= ~(iocurrent);
 8003c22:	693b      	ldr	r3, [r7, #16]
 8003c24:	681a      	ldr	r2, [r3, #0]
 8003c26:	68fb      	ldr	r3, [r7, #12]
 8003c28:	43db      	mvns	r3, r3
 8003c2a:	401a      	ands	r2, r3
 8003c2c:	693b      	ldr	r3, [r7, #16]
 8003c2e:	601a      	str	r2, [r3, #0]
        EXTI_CurrentCPU->EMR1 &= ~(iocurrent);
 8003c30:	693b      	ldr	r3, [r7, #16]
 8003c32:	685a      	ldr	r2, [r3, #4]
 8003c34:	68fb      	ldr	r3, [r7, #12]
 8003c36:	43db      	mvns	r3, r3
 8003c38:	401a      	ands	r2, r3
 8003c3a:	693b      	ldr	r3, [r7, #16]
 8003c3c:	605a      	str	r2, [r3, #4]

        /* Clear Rising Falling edge configuration */
        EXTI->FTSR1 &= ~(iocurrent);
 8003c3e:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8003c42:	685a      	ldr	r2, [r3, #4]
 8003c44:	68fb      	ldr	r3, [r7, #12]
 8003c46:	43db      	mvns	r3, r3
 8003c48:	f04f 41b0 	mov.w	r1, #1476395008	@ 0x58000000
 8003c4c:	4013      	ands	r3, r2
 8003c4e:	604b      	str	r3, [r1, #4]
        EXTI->RTSR1 &= ~(iocurrent);
 8003c50:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8003c54:	681a      	ldr	r2, [r3, #0]
 8003c56:	68fb      	ldr	r3, [r7, #12]
 8003c58:	43db      	mvns	r3, r3
 8003c5a:	f04f 41b0 	mov.w	r1, #1476395008	@ 0x58000000
 8003c5e:	4013      	ands	r3, r2
 8003c60:	600b      	str	r3, [r1, #0]

        tmp = 0x0FUL << (4U * (position & 0x03U));
 8003c62:	697b      	ldr	r3, [r7, #20]
 8003c64:	f003 0303 	and.w	r3, r3, #3
 8003c68:	009b      	lsls	r3, r3, #2
 8003c6a:	220f      	movs	r2, #15
 8003c6c:	fa02 f303 	lsl.w	r3, r2, r3
 8003c70:	60bb      	str	r3, [r7, #8]
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 8003c72:	4a30      	ldr	r2, [pc, #192]	@ (8003d34 <HAL_GPIO_DeInit+0x1dc>)
 8003c74:	697b      	ldr	r3, [r7, #20]
 8003c76:	089b      	lsrs	r3, r3, #2
 8003c78:	3302      	adds	r3, #2
 8003c7a:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 8003c7e:	68bb      	ldr	r3, [r7, #8]
 8003c80:	43da      	mvns	r2, r3
 8003c82:	482c      	ldr	r0, [pc, #176]	@ (8003d34 <HAL_GPIO_DeInit+0x1dc>)
 8003c84:	697b      	ldr	r3, [r7, #20]
 8003c86:	089b      	lsrs	r3, r3, #2
 8003c88:	400a      	ands	r2, r1
 8003c8a:	3302      	adds	r3, #2
 8003c8c:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO in Analog Mode */
      GPIOx->MODER |= (GPIO_MODER_MODE0 << (position * 2U));
 8003c90:	687b      	ldr	r3, [r7, #4]
 8003c92:	681a      	ldr	r2, [r3, #0]
 8003c94:	697b      	ldr	r3, [r7, #20]
 8003c96:	005b      	lsls	r3, r3, #1
 8003c98:	2103      	movs	r1, #3
 8003c9a:	fa01 f303 	lsl.w	r3, r1, r3
 8003c9e:	431a      	orrs	r2, r3
 8003ca0:	687b      	ldr	r3, [r7, #4]
 8003ca2:	601a      	str	r2, [r3, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((position & 0x07U) * 4U)) ;
 8003ca4:	697b      	ldr	r3, [r7, #20]
 8003ca6:	08da      	lsrs	r2, r3, #3
 8003ca8:	687b      	ldr	r3, [r7, #4]
 8003caa:	3208      	adds	r2, #8
 8003cac:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8003cb0:	697b      	ldr	r3, [r7, #20]
 8003cb2:	f003 0307 	and.w	r3, r3, #7
 8003cb6:	009b      	lsls	r3, r3, #2
 8003cb8:	220f      	movs	r2, #15
 8003cba:	fa02 f303 	lsl.w	r3, r2, r3
 8003cbe:	43db      	mvns	r3, r3
 8003cc0:	697a      	ldr	r2, [r7, #20]
 8003cc2:	08d2      	lsrs	r2, r2, #3
 8003cc4:	4019      	ands	r1, r3
 8003cc6:	687b      	ldr	r3, [r7, #4]
 8003cc8:	3208      	adds	r2, #8
 8003cca:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 8003cce:	687b      	ldr	r3, [r7, #4]
 8003cd0:	68da      	ldr	r2, [r3, #12]
 8003cd2:	697b      	ldr	r3, [r7, #20]
 8003cd4:	005b      	lsls	r3, r3, #1
 8003cd6:	2103      	movs	r1, #3
 8003cd8:	fa01 f303 	lsl.w	r3, r1, r3
 8003cdc:	43db      	mvns	r3, r3
 8003cde:	401a      	ands	r2, r3
 8003ce0:	687b      	ldr	r3, [r7, #4]
 8003ce2:	60da      	str	r2, [r3, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT0 << position) ;
 8003ce4:	687b      	ldr	r3, [r7, #4]
 8003ce6:	685a      	ldr	r2, [r3, #4]
 8003ce8:	2101      	movs	r1, #1
 8003cea:	697b      	ldr	r3, [r7, #20]
 8003cec:	fa01 f303 	lsl.w	r3, r1, r3
 8003cf0:	43db      	mvns	r3, r3
 8003cf2:	401a      	ands	r2, r3
 8003cf4:	687b      	ldr	r3, [r7, #4]
 8003cf6:	605a      	str	r2, [r3, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 8003cf8:	687b      	ldr	r3, [r7, #4]
 8003cfa:	689a      	ldr	r2, [r3, #8]
 8003cfc:	697b      	ldr	r3, [r7, #20]
 8003cfe:	005b      	lsls	r3, r3, #1
 8003d00:	2103      	movs	r1, #3
 8003d02:	fa01 f303 	lsl.w	r3, r1, r3
 8003d06:	43db      	mvns	r3, r3
 8003d08:	401a      	ands	r2, r3
 8003d0a:	687b      	ldr	r3, [r7, #4]
 8003d0c:	609a      	str	r2, [r3, #8]
    }

    position++;
 8003d0e:	697b      	ldr	r3, [r7, #20]
 8003d10:	3301      	adds	r3, #1
 8003d12:	617b      	str	r3, [r7, #20]
  while ((GPIO_Pin >> position) != 0x00U)
 8003d14:	683a      	ldr	r2, [r7, #0]
 8003d16:	697b      	ldr	r3, [r7, #20]
 8003d18:	fa22 f303 	lsr.w	r3, r2, r3
 8003d1c:	2b00      	cmp	r3, #0
 8003d1e:	f47f af25 	bne.w	8003b6c <HAL_GPIO_DeInit+0x14>
  }
}
 8003d22:	bf00      	nop
 8003d24:	bf00      	nop
 8003d26:	371c      	adds	r7, #28
 8003d28:	46bd      	mov	sp, r7
 8003d2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d2e:	4770      	bx	lr
 8003d30:	58000080 	.word	0x58000080
 8003d34:	58000400 	.word	0x58000400
 8003d38:	58020000 	.word	0x58020000
 8003d3c:	58020400 	.word	0x58020400
 8003d40:	58020800 	.word	0x58020800
 8003d44:	58020c00 	.word	0x58020c00
 8003d48:	58021000 	.word	0x58021000
 8003d4c:	58021400 	.word	0x58021400
 8003d50:	58021800 	.word	0x58021800
 8003d54:	58021c00 	.word	0x58021c00
 8003d58:	58022400 	.word	0x58022400

08003d5c <HAL_GPIO_ReadPin>:
  * @param  GPIO_Pin: specifies the port bit to read.
  *         This parameter can be GPIO_PIN_x where x can be (0..15).
  * @retval The input port pin value.
  */
GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)
{
 8003d5c:	b480      	push	{r7}
 8003d5e:	b085      	sub	sp, #20
 8003d60:	af00      	add	r7, sp, #0
 8003d62:	6078      	str	r0, [r7, #4]
 8003d64:	460b      	mov	r3, r1
 8003d66:	807b      	strh	r3, [r7, #2]
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != 0x00U)
 8003d68:	687b      	ldr	r3, [r7, #4]
 8003d6a:	691a      	ldr	r2, [r3, #16]
 8003d6c:	887b      	ldrh	r3, [r7, #2]
 8003d6e:	4013      	ands	r3, r2
 8003d70:	2b00      	cmp	r3, #0
 8003d72:	d002      	beq.n	8003d7a <HAL_GPIO_ReadPin+0x1e>
  {
    bitstatus = GPIO_PIN_SET;
 8003d74:	2301      	movs	r3, #1
 8003d76:	73fb      	strb	r3, [r7, #15]
 8003d78:	e001      	b.n	8003d7e <HAL_GPIO_ReadPin+0x22>
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
 8003d7a:	2300      	movs	r3, #0
 8003d7c:	73fb      	strb	r3, [r7, #15]
  }
  return bitstatus;
 8003d7e:	7bfb      	ldrb	r3, [r7, #15]
}
 8003d80:	4618      	mov	r0, r3
 8003d82:	3714      	adds	r7, #20
 8003d84:	46bd      	mov	sp, r7
 8003d86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d8a:	4770      	bx	lr

08003d8c <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8003d8c:	b480      	push	{r7}
 8003d8e:	b083      	sub	sp, #12
 8003d90:	af00      	add	r7, sp, #0
 8003d92:	6078      	str	r0, [r7, #4]
 8003d94:	460b      	mov	r3, r1
 8003d96:	807b      	strh	r3, [r7, #2]
 8003d98:	4613      	mov	r3, r2
 8003d9a:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8003d9c:	787b      	ldrb	r3, [r7, #1]
 8003d9e:	2b00      	cmp	r3, #0
 8003da0:	d003      	beq.n	8003daa <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 8003da2:	887a      	ldrh	r2, [r7, #2]
 8003da4:	687b      	ldr	r3, [r7, #4]
 8003da6:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
  }
}
 8003da8:	e003      	b.n	8003db2 <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 8003daa:	887b      	ldrh	r3, [r7, #2]
 8003dac:	041a      	lsls	r2, r3, #16
 8003dae:	687b      	ldr	r3, [r7, #4]
 8003db0:	619a      	str	r2, [r3, #24]
}
 8003db2:	bf00      	nop
 8003db4:	370c      	adds	r7, #12
 8003db6:	46bd      	mov	sp, r7
 8003db8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003dbc:	4770      	bx	lr
	...

08003dc0 <HAL_I2C_Init>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
{
 8003dc0:	b580      	push	{r7, lr}
 8003dc2:	b082      	sub	sp, #8
 8003dc4:	af00      	add	r7, sp, #0
 8003dc6:	6078      	str	r0, [r7, #4]
  /* Check the I2C handle allocation */
  if (hi2c == NULL)
 8003dc8:	687b      	ldr	r3, [r7, #4]
 8003dca:	2b00      	cmp	r3, #0
 8003dcc:	d101      	bne.n	8003dd2 <HAL_I2C_Init+0x12>
  {
    return HAL_ERROR;
 8003dce:	2301      	movs	r3, #1
 8003dd0:	e08b      	b.n	8003eea <HAL_I2C_Init+0x12a>
  assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
  assert_param(IS_I2C_OWN_ADDRESS2_MASK(hi2c->Init.OwnAddress2Masks));
  assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
  assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));

  if (hi2c->State == HAL_I2C_STATE_RESET)
 8003dd2:	687b      	ldr	r3, [r7, #4]
 8003dd4:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003dd8:	b2db      	uxtb	r3, r3
 8003dda:	2b00      	cmp	r3, #0
 8003ddc:	d106      	bne.n	8003dec <HAL_I2C_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hi2c->Lock = HAL_UNLOCKED;
 8003dde:	687b      	ldr	r3, [r7, #4]
 8003de0:	2200      	movs	r2, #0
 8003de2:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
    hi2c->MspInitCallback(hi2c);
#else
    /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
    HAL_I2C_MspInit(hi2c);
 8003de6:	6878      	ldr	r0, [r7, #4]
 8003de8:	f7fc ff44 	bl	8000c74 <HAL_I2C_MspInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
  }

  hi2c->State = HAL_I2C_STATE_BUSY;
 8003dec:	687b      	ldr	r3, [r7, #4]
 8003dee:	2224      	movs	r2, #36	@ 0x24
 8003df0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 8003df4:	687b      	ldr	r3, [r7, #4]
 8003df6:	681b      	ldr	r3, [r3, #0]
 8003df8:	681a      	ldr	r2, [r3, #0]
 8003dfa:	687b      	ldr	r3, [r7, #4]
 8003dfc:	681b      	ldr	r3, [r3, #0]
 8003dfe:	f022 0201 	bic.w	r2, r2, #1
 8003e02:	601a      	str	r2, [r3, #0]

  /*---------------------------- I2Cx TIMINGR Configuration ------------------*/
  /* Configure I2Cx: Frequency range */
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 8003e04:	687b      	ldr	r3, [r7, #4]
 8003e06:	685a      	ldr	r2, [r3, #4]
 8003e08:	687b      	ldr	r3, [r7, #4]
 8003e0a:	681b      	ldr	r3, [r3, #0]
 8003e0c:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8003e10:	611a      	str	r2, [r3, #16]

  /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
  /* Disable Own Address1 before set the Own Address1 configuration */
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 8003e12:	687b      	ldr	r3, [r7, #4]
 8003e14:	681b      	ldr	r3, [r3, #0]
 8003e16:	689a      	ldr	r2, [r3, #8]
 8003e18:	687b      	ldr	r3, [r7, #4]
 8003e1a:	681b      	ldr	r3, [r3, #0]
 8003e1c:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8003e20:	609a      	str	r2, [r3, #8]

  /* Configure I2Cx: Own Address1 and ack own address1 mode */
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8003e22:	687b      	ldr	r3, [r7, #4]
 8003e24:	68db      	ldr	r3, [r3, #12]
 8003e26:	2b01      	cmp	r3, #1
 8003e28:	d107      	bne.n	8003e3a <HAL_I2C_Init+0x7a>
  {
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8003e2a:	687b      	ldr	r3, [r7, #4]
 8003e2c:	689a      	ldr	r2, [r3, #8]
 8003e2e:	687b      	ldr	r3, [r7, #4]
 8003e30:	681b      	ldr	r3, [r3, #0]
 8003e32:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8003e36:	609a      	str	r2, [r3, #8]
 8003e38:	e006      	b.n	8003e48 <HAL_I2C_Init+0x88>
  }
  else /* I2C_ADDRESSINGMODE_10BIT */
  {
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8003e3a:	687b      	ldr	r3, [r7, #4]
 8003e3c:	689a      	ldr	r2, [r3, #8]
 8003e3e:	687b      	ldr	r3, [r7, #4]
 8003e40:	681b      	ldr	r3, [r3, #0]
 8003e42:	f442 4204 	orr.w	r2, r2, #33792	@ 0x8400
 8003e46:	609a      	str	r2, [r3, #8]
  }

  /*---------------------------- I2Cx CR2 Configuration ----------------------*/
  /* Configure I2Cx: Addressing Master mode */
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8003e48:	687b      	ldr	r3, [r7, #4]
 8003e4a:	68db      	ldr	r3, [r3, #12]
 8003e4c:	2b02      	cmp	r3, #2
 8003e4e:	d108      	bne.n	8003e62 <HAL_I2C_Init+0xa2>
  {
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 8003e50:	687b      	ldr	r3, [r7, #4]
 8003e52:	681b      	ldr	r3, [r3, #0]
 8003e54:	685a      	ldr	r2, [r3, #4]
 8003e56:	687b      	ldr	r3, [r7, #4]
 8003e58:	681b      	ldr	r3, [r3, #0]
 8003e5a:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8003e5e:	605a      	str	r2, [r3, #4]
 8003e60:	e007      	b.n	8003e72 <HAL_I2C_Init+0xb2>
  }
  else
  {
    /* Clear the I2C ADD10 bit */
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 8003e62:	687b      	ldr	r3, [r7, #4]
 8003e64:	681b      	ldr	r3, [r3, #0]
 8003e66:	685a      	ldr	r2, [r3, #4]
 8003e68:	687b      	ldr	r3, [r7, #4]
 8003e6a:	681b      	ldr	r3, [r3, #0]
 8003e6c:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8003e70:	605a      	str	r2, [r3, #4]
  }
  /* Enable the AUTOEND by default, and enable NACK (should be disable only during Slave process */
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 8003e72:	687b      	ldr	r3, [r7, #4]
 8003e74:	681b      	ldr	r3, [r3, #0]
 8003e76:	6859      	ldr	r1, [r3, #4]
 8003e78:	687b      	ldr	r3, [r7, #4]
 8003e7a:	681a      	ldr	r2, [r3, #0]
 8003e7c:	4b1d      	ldr	r3, [pc, #116]	@ (8003ef4 <HAL_I2C_Init+0x134>)
 8003e7e:	430b      	orrs	r3, r1
 8003e80:	6053      	str	r3, [r2, #4]

  /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
  /* Disable Own Address2 before set the Own Address2 configuration */
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 8003e82:	687b      	ldr	r3, [r7, #4]
 8003e84:	681b      	ldr	r3, [r3, #0]
 8003e86:	68da      	ldr	r2, [r3, #12]
 8003e88:	687b      	ldr	r3, [r7, #4]
 8003e8a:	681b      	ldr	r3, [r3, #0]
 8003e8c:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8003e90:	60da      	str	r2, [r3, #12]

  /* Configure I2Cx: Dual mode and Own Address2 */
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8003e92:	687b      	ldr	r3, [r7, #4]
 8003e94:	691a      	ldr	r2, [r3, #16]
 8003e96:	687b      	ldr	r3, [r7, #4]
 8003e98:	695b      	ldr	r3, [r3, #20]
 8003e9a:	ea42 0103 	orr.w	r1, r2, r3
                          (hi2c->Init.OwnAddress2Masks << 8));
 8003e9e:	687b      	ldr	r3, [r7, #4]
 8003ea0:	699b      	ldr	r3, [r3, #24]
 8003ea2:	021a      	lsls	r2, r3, #8
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 8003ea4:	687b      	ldr	r3, [r7, #4]
 8003ea6:	681b      	ldr	r3, [r3, #0]
 8003ea8:	430a      	orrs	r2, r1
 8003eaa:	60da      	str	r2, [r3, #12]

  /*---------------------------- I2Cx CR1 Configuration ----------------------*/
  /* Configure I2Cx: Generalcall and NoStretch mode */
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 8003eac:	687b      	ldr	r3, [r7, #4]
 8003eae:	69d9      	ldr	r1, [r3, #28]
 8003eb0:	687b      	ldr	r3, [r7, #4]
 8003eb2:	6a1a      	ldr	r2, [r3, #32]
 8003eb4:	687b      	ldr	r3, [r7, #4]
 8003eb6:	681b      	ldr	r3, [r3, #0]
 8003eb8:	430a      	orrs	r2, r1
 8003eba:	601a      	str	r2, [r3, #0]

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);
 8003ebc:	687b      	ldr	r3, [r7, #4]
 8003ebe:	681b      	ldr	r3, [r3, #0]
 8003ec0:	681a      	ldr	r2, [r3, #0]
 8003ec2:	687b      	ldr	r3, [r7, #4]
 8003ec4:	681b      	ldr	r3, [r3, #0]
 8003ec6:	f042 0201 	orr.w	r2, r2, #1
 8003eca:	601a      	str	r2, [r3, #0]

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8003ecc:	687b      	ldr	r3, [r7, #4]
 8003ece:	2200      	movs	r2, #0
 8003ed0:	645a      	str	r2, [r3, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 8003ed2:	687b      	ldr	r3, [r7, #4]
 8003ed4:	2220      	movs	r2, #32
 8003ed6:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
  hi2c->PreviousState = I2C_STATE_NONE;
 8003eda:	687b      	ldr	r3, [r7, #4]
 8003edc:	2200      	movs	r2, #0
 8003ede:	631a      	str	r2, [r3, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8003ee0:	687b      	ldr	r3, [r7, #4]
 8003ee2:	2200      	movs	r2, #0
 8003ee4:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42

  return HAL_OK;
 8003ee8:	2300      	movs	r3, #0
}
 8003eea:	4618      	mov	r0, r3
 8003eec:	3708      	adds	r7, #8
 8003eee:	46bd      	mov	sp, r7
 8003ef0:	bd80      	pop	{r7, pc}
 8003ef2:	bf00      	nop
 8003ef4:	02008000 	.word	0x02008000

08003ef8 <HAL_I2C_Mem_Write>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Mem_Write(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress,
                                    uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8003ef8:	b580      	push	{r7, lr}
 8003efa:	b088      	sub	sp, #32
 8003efc:	af02      	add	r7, sp, #8
 8003efe:	60f8      	str	r0, [r7, #12]
 8003f00:	4608      	mov	r0, r1
 8003f02:	4611      	mov	r1, r2
 8003f04:	461a      	mov	r2, r3
 8003f06:	4603      	mov	r3, r0
 8003f08:	817b      	strh	r3, [r7, #10]
 8003f0a:	460b      	mov	r3, r1
 8003f0c:	813b      	strh	r3, [r7, #8]
 8003f0e:	4613      	mov	r3, r2
 8003f10:	80fb      	strh	r3, [r7, #6]
  uint32_t tickstart;

  /* Check the parameters */
  assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8003f12:	68fb      	ldr	r3, [r7, #12]
 8003f14:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8003f18:	b2db      	uxtb	r3, r3
 8003f1a:	2b20      	cmp	r3, #32
 8003f1c:	f040 80f9 	bne.w	8004112 <HAL_I2C_Mem_Write+0x21a>
  {
    if ((pData == NULL) || (Size == 0U))
 8003f20:	6a3b      	ldr	r3, [r7, #32]
 8003f22:	2b00      	cmp	r3, #0
 8003f24:	d002      	beq.n	8003f2c <HAL_I2C_Mem_Write+0x34>
 8003f26:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 8003f28:	2b00      	cmp	r3, #0
 8003f2a:	d105      	bne.n	8003f38 <HAL_I2C_Mem_Write+0x40>
    {
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8003f2c:	68fb      	ldr	r3, [r7, #12]
 8003f2e:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8003f32:	645a      	str	r2, [r3, #68]	@ 0x44
      return  HAL_ERROR;
 8003f34:	2301      	movs	r3, #1
 8003f36:	e0ed      	b.n	8004114 <HAL_I2C_Mem_Write+0x21c>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8003f38:	68fb      	ldr	r3, [r7, #12]
 8003f3a:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8003f3e:	2b01      	cmp	r3, #1
 8003f40:	d101      	bne.n	8003f46 <HAL_I2C_Mem_Write+0x4e>
 8003f42:	2302      	movs	r3, #2
 8003f44:	e0e6      	b.n	8004114 <HAL_I2C_Mem_Write+0x21c>
 8003f46:	68fb      	ldr	r3, [r7, #12]
 8003f48:	2201      	movs	r2, #1
 8003f4a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    /* Init tickstart for timeout management*/
    tickstart = HAL_GetTick();
 8003f4e:	f7ff f917 	bl	8003180 <HAL_GetTick>
 8003f52:	6178      	str	r0, [r7, #20]

    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8003f54:	697b      	ldr	r3, [r7, #20]
 8003f56:	9300      	str	r3, [sp, #0]
 8003f58:	2319      	movs	r3, #25
 8003f5a:	2201      	movs	r2, #1
 8003f5c:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8003f60:	68f8      	ldr	r0, [r7, #12]
 8003f62:	f000 fbaf 	bl	80046c4 <I2C_WaitOnFlagUntilTimeout>
 8003f66:	4603      	mov	r3, r0
 8003f68:	2b00      	cmp	r3, #0
 8003f6a:	d001      	beq.n	8003f70 <HAL_I2C_Mem_Write+0x78>
    {
      return HAL_ERROR;
 8003f6c:	2301      	movs	r3, #1
 8003f6e:	e0d1      	b.n	8004114 <HAL_I2C_Mem_Write+0x21c>
    }

    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8003f70:	68fb      	ldr	r3, [r7, #12]
 8003f72:	2221      	movs	r2, #33	@ 0x21
 8003f74:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8003f78:	68fb      	ldr	r3, [r7, #12]
 8003f7a:	2240      	movs	r2, #64	@ 0x40
 8003f7c:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8003f80:	68fb      	ldr	r3, [r7, #12]
 8003f82:	2200      	movs	r2, #0
 8003f84:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Prepare transfer parameters */
    hi2c->pBuffPtr  = pData;
 8003f86:	68fb      	ldr	r3, [r7, #12]
 8003f88:	6a3a      	ldr	r2, [r7, #32]
 8003f8a:	625a      	str	r2, [r3, #36]	@ 0x24
    hi2c->XferCount = Size;
 8003f8c:	68fb      	ldr	r3, [r7, #12]
 8003f8e:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 8003f90:	855a      	strh	r2, [r3, #42]	@ 0x2a
    hi2c->XferISR   = NULL;
 8003f92:	68fb      	ldr	r3, [r7, #12]
 8003f94:	2200      	movs	r2, #0
 8003f96:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Send Slave Address and Memory Address */
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8003f98:	88f8      	ldrh	r0, [r7, #6]
 8003f9a:	893a      	ldrh	r2, [r7, #8]
 8003f9c:	8979      	ldrh	r1, [r7, #10]
 8003f9e:	697b      	ldr	r3, [r7, #20]
 8003fa0:	9301      	str	r3, [sp, #4]
 8003fa2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003fa4:	9300      	str	r3, [sp, #0]
 8003fa6:	4603      	mov	r3, r0
 8003fa8:	68f8      	ldr	r0, [r7, #12]
 8003faa:	f000 fabf 	bl	800452c <I2C_RequestMemoryWrite>
 8003fae:	4603      	mov	r3, r0
 8003fb0:	2b00      	cmp	r3, #0
 8003fb2:	d005      	beq.n	8003fc0 <HAL_I2C_Mem_Write+0xc8>
    {
      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8003fb4:	68fb      	ldr	r3, [r7, #12]
 8003fb6:	2200      	movs	r2, #0
 8003fb8:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
      return HAL_ERROR;
 8003fbc:	2301      	movs	r3, #1
 8003fbe:	e0a9      	b.n	8004114 <HAL_I2C_Mem_Write+0x21c>
    }

    /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8003fc0:	68fb      	ldr	r3, [r7, #12]
 8003fc2:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003fc4:	b29b      	uxth	r3, r3
 8003fc6:	2bff      	cmp	r3, #255	@ 0xff
 8003fc8:	d90e      	bls.n	8003fe8 <HAL_I2C_Mem_Write+0xf0>
    {
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8003fca:	68fb      	ldr	r3, [r7, #12]
 8003fcc:	22ff      	movs	r2, #255	@ 0xff
 8003fce:	851a      	strh	r2, [r3, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 8003fd0:	68fb      	ldr	r3, [r7, #12]
 8003fd2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003fd4:	b2da      	uxtb	r2, r3
 8003fd6:	8979      	ldrh	r1, [r7, #10]
 8003fd8:	2300      	movs	r3, #0
 8003fda:	9300      	str	r3, [sp, #0]
 8003fdc:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8003fe0:	68f8      	ldr	r0, [r7, #12]
 8003fe2:	f000 fd33 	bl	8004a4c <I2C_TransferConfig>
 8003fe6:	e00f      	b.n	8004008 <HAL_I2C_Mem_Write+0x110>
    }
    else
    {
      hi2c->XferSize = hi2c->XferCount;
 8003fe8:	68fb      	ldr	r3, [r7, #12]
 8003fea:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003fec:	b29a      	uxth	r2, r3
 8003fee:	68fb      	ldr	r3, [r7, #12]
 8003ff0:	851a      	strh	r2, [r3, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8003ff2:	68fb      	ldr	r3, [r7, #12]
 8003ff4:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003ff6:	b2da      	uxtb	r2, r3
 8003ff8:	8979      	ldrh	r1, [r7, #10]
 8003ffa:	2300      	movs	r3, #0
 8003ffc:	9300      	str	r3, [sp, #0]
 8003ffe:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 8004002:	68f8      	ldr	r0, [r7, #12]
 8004004:	f000 fd22 	bl	8004a4c <I2C_TransferConfig>
    }

    do
    {
      /* Wait until TXIS flag is set */
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004008:	697a      	ldr	r2, [r7, #20]
 800400a:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800400c:	68f8      	ldr	r0, [r7, #12]
 800400e:	f000 fbb2 	bl	8004776 <I2C_WaitOnTXISFlagUntilTimeout>
 8004012:	4603      	mov	r3, r0
 8004014:	2b00      	cmp	r3, #0
 8004016:	d001      	beq.n	800401c <HAL_I2C_Mem_Write+0x124>
      {
        return HAL_ERROR;
 8004018:	2301      	movs	r3, #1
 800401a:	e07b      	b.n	8004114 <HAL_I2C_Mem_Write+0x21c>
      }

      /* Write data to TXDR */
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 800401c:	68fb      	ldr	r3, [r7, #12]
 800401e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004020:	781a      	ldrb	r2, [r3, #0]
 8004022:	68fb      	ldr	r3, [r7, #12]
 8004024:	681b      	ldr	r3, [r3, #0]
 8004026:	629a      	str	r2, [r3, #40]	@ 0x28

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 8004028:	68fb      	ldr	r3, [r7, #12]
 800402a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800402c:	1c5a      	adds	r2, r3, #1
 800402e:	68fb      	ldr	r3, [r7, #12]
 8004030:	625a      	str	r2, [r3, #36]	@ 0x24

      hi2c->XferCount--;
 8004032:	68fb      	ldr	r3, [r7, #12]
 8004034:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004036:	b29b      	uxth	r3, r3
 8004038:	3b01      	subs	r3, #1
 800403a:	b29a      	uxth	r2, r3
 800403c:	68fb      	ldr	r3, [r7, #12]
 800403e:	855a      	strh	r2, [r3, #42]	@ 0x2a
      hi2c->XferSize--;
 8004040:	68fb      	ldr	r3, [r7, #12]
 8004042:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004044:	3b01      	subs	r3, #1
 8004046:	b29a      	uxth	r2, r3
 8004048:	68fb      	ldr	r3, [r7, #12]
 800404a:	851a      	strh	r2, [r3, #40]	@ 0x28

      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 800404c:	68fb      	ldr	r3, [r7, #12]
 800404e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004050:	b29b      	uxth	r3, r3
 8004052:	2b00      	cmp	r3, #0
 8004054:	d034      	beq.n	80040c0 <HAL_I2C_Mem_Write+0x1c8>
 8004056:	68fb      	ldr	r3, [r7, #12]
 8004058:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800405a:	2b00      	cmp	r3, #0
 800405c:	d130      	bne.n	80040c0 <HAL_I2C_Mem_Write+0x1c8>
      {
        /* Wait until TCR flag is set */
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 800405e:	697b      	ldr	r3, [r7, #20]
 8004060:	9300      	str	r3, [sp, #0]
 8004062:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004064:	2200      	movs	r2, #0
 8004066:	2180      	movs	r1, #128	@ 0x80
 8004068:	68f8      	ldr	r0, [r7, #12]
 800406a:	f000 fb2b 	bl	80046c4 <I2C_WaitOnFlagUntilTimeout>
 800406e:	4603      	mov	r3, r0
 8004070:	2b00      	cmp	r3, #0
 8004072:	d001      	beq.n	8004078 <HAL_I2C_Mem_Write+0x180>
        {
          return HAL_ERROR;
 8004074:	2301      	movs	r3, #1
 8004076:	e04d      	b.n	8004114 <HAL_I2C_Mem_Write+0x21c>
        }

        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8004078:	68fb      	ldr	r3, [r7, #12]
 800407a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800407c:	b29b      	uxth	r3, r3
 800407e:	2bff      	cmp	r3, #255	@ 0xff
 8004080:	d90e      	bls.n	80040a0 <HAL_I2C_Mem_Write+0x1a8>
        {
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8004082:	68fb      	ldr	r3, [r7, #12]
 8004084:	22ff      	movs	r2, #255	@ 0xff
 8004086:	851a      	strh	r2, [r3, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8004088:	68fb      	ldr	r3, [r7, #12]
 800408a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800408c:	b2da      	uxtb	r2, r3
 800408e:	8979      	ldrh	r1, [r7, #10]
 8004090:	2300      	movs	r3, #0
 8004092:	9300      	str	r3, [sp, #0]
 8004094:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8004098:	68f8      	ldr	r0, [r7, #12]
 800409a:	f000 fcd7 	bl	8004a4c <I2C_TransferConfig>
 800409e:	e00f      	b.n	80040c0 <HAL_I2C_Mem_Write+0x1c8>
                             I2C_NO_STARTSTOP);
        }
        else
        {
          hi2c->XferSize = hi2c->XferCount;
 80040a0:	68fb      	ldr	r3, [r7, #12]
 80040a2:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80040a4:	b29a      	uxth	r2, r3
 80040a6:	68fb      	ldr	r3, [r7, #12]
 80040a8:	851a      	strh	r2, [r3, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80040aa:	68fb      	ldr	r3, [r7, #12]
 80040ac:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80040ae:	b2da      	uxtb	r2, r3
 80040b0:	8979      	ldrh	r1, [r7, #10]
 80040b2:	2300      	movs	r3, #0
 80040b4:	9300      	str	r3, [sp, #0]
 80040b6:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 80040ba:	68f8      	ldr	r0, [r7, #12]
 80040bc:	f000 fcc6 	bl	8004a4c <I2C_TransferConfig>
                             I2C_NO_STARTSTOP);
        }
      }

    } while (hi2c->XferCount > 0U);
 80040c0:	68fb      	ldr	r3, [r7, #12]
 80040c2:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80040c4:	b29b      	uxth	r3, r3
 80040c6:	2b00      	cmp	r3, #0
 80040c8:	d19e      	bne.n	8004008 <HAL_I2C_Mem_Write+0x110>

    /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
    /* Wait until STOPF flag is reset */
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80040ca:	697a      	ldr	r2, [r7, #20]
 80040cc:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 80040ce:	68f8      	ldr	r0, [r7, #12]
 80040d0:	f000 fb98 	bl	8004804 <I2C_WaitOnSTOPFlagUntilTimeout>
 80040d4:	4603      	mov	r3, r0
 80040d6:	2b00      	cmp	r3, #0
 80040d8:	d001      	beq.n	80040de <HAL_I2C_Mem_Write+0x1e6>
    {
      return HAL_ERROR;
 80040da:	2301      	movs	r3, #1
 80040dc:	e01a      	b.n	8004114 <HAL_I2C_Mem_Write+0x21c>
    }

    /* Clear STOP Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80040de:	68fb      	ldr	r3, [r7, #12]
 80040e0:	681b      	ldr	r3, [r3, #0]
 80040e2:	2220      	movs	r2, #32
 80040e4:	61da      	str	r2, [r3, #28]

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
 80040e6:	68fb      	ldr	r3, [r7, #12]
 80040e8:	681b      	ldr	r3, [r3, #0]
 80040ea:	6859      	ldr	r1, [r3, #4]
 80040ec:	68fb      	ldr	r3, [r7, #12]
 80040ee:	681a      	ldr	r2, [r3, #0]
 80040f0:	4b0a      	ldr	r3, [pc, #40]	@ (800411c <HAL_I2C_Mem_Write+0x224>)
 80040f2:	400b      	ands	r3, r1
 80040f4:	6053      	str	r3, [r2, #4]

    hi2c->State = HAL_I2C_STATE_READY;
 80040f6:	68fb      	ldr	r3, [r7, #12]
 80040f8:	2220      	movs	r2, #32
 80040fa:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 80040fe:	68fb      	ldr	r3, [r7, #12]
 8004100:	2200      	movs	r2, #0
 8004102:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004106:	68fb      	ldr	r3, [r7, #12]
 8004108:	2200      	movs	r2, #0
 800410a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    return HAL_OK;
 800410e:	2300      	movs	r3, #0
 8004110:	e000      	b.n	8004114 <HAL_I2C_Mem_Write+0x21c>
  }
  else
  {
    return HAL_BUSY;
 8004112:	2302      	movs	r3, #2
  }
}
 8004114:	4618      	mov	r0, r3
 8004116:	3718      	adds	r7, #24
 8004118:	46bd      	mov	sp, r7
 800411a:	bd80      	pop	{r7, pc}
 800411c:	fe00e800 	.word	0xfe00e800

08004120 <HAL_I2C_Mem_Read>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Mem_Read(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress,
                                   uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8004120:	b580      	push	{r7, lr}
 8004122:	b088      	sub	sp, #32
 8004124:	af02      	add	r7, sp, #8
 8004126:	60f8      	str	r0, [r7, #12]
 8004128:	4608      	mov	r0, r1
 800412a:	4611      	mov	r1, r2
 800412c:	461a      	mov	r2, r3
 800412e:	4603      	mov	r3, r0
 8004130:	817b      	strh	r3, [r7, #10]
 8004132:	460b      	mov	r3, r1
 8004134:	813b      	strh	r3, [r7, #8]
 8004136:	4613      	mov	r3, r2
 8004138:	80fb      	strh	r3, [r7, #6]
  uint32_t tickstart;

  /* Check the parameters */
  assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800413a:	68fb      	ldr	r3, [r7, #12]
 800413c:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8004140:	b2db      	uxtb	r3, r3
 8004142:	2b20      	cmp	r3, #32
 8004144:	f040 80fd 	bne.w	8004342 <HAL_I2C_Mem_Read+0x222>
  {
    if ((pData == NULL) || (Size == 0U))
 8004148:	6a3b      	ldr	r3, [r7, #32]
 800414a:	2b00      	cmp	r3, #0
 800414c:	d002      	beq.n	8004154 <HAL_I2C_Mem_Read+0x34>
 800414e:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 8004150:	2b00      	cmp	r3, #0
 8004152:	d105      	bne.n	8004160 <HAL_I2C_Mem_Read+0x40>
    {
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8004154:	68fb      	ldr	r3, [r7, #12]
 8004156:	f44f 7200 	mov.w	r2, #512	@ 0x200
 800415a:	645a      	str	r2, [r3, #68]	@ 0x44
      return  HAL_ERROR;
 800415c:	2301      	movs	r3, #1
 800415e:	e0f1      	b.n	8004344 <HAL_I2C_Mem_Read+0x224>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8004160:	68fb      	ldr	r3, [r7, #12]
 8004162:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8004166:	2b01      	cmp	r3, #1
 8004168:	d101      	bne.n	800416e <HAL_I2C_Mem_Read+0x4e>
 800416a:	2302      	movs	r3, #2
 800416c:	e0ea      	b.n	8004344 <HAL_I2C_Mem_Read+0x224>
 800416e:	68fb      	ldr	r3, [r7, #12]
 8004170:	2201      	movs	r2, #1
 8004172:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    /* Init tickstart for timeout management*/
    tickstart = HAL_GetTick();
 8004176:	f7ff f803 	bl	8003180 <HAL_GetTick>
 800417a:	6178      	str	r0, [r7, #20]

    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 800417c:	697b      	ldr	r3, [r7, #20]
 800417e:	9300      	str	r3, [sp, #0]
 8004180:	2319      	movs	r3, #25
 8004182:	2201      	movs	r2, #1
 8004184:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 8004188:	68f8      	ldr	r0, [r7, #12]
 800418a:	f000 fa9b 	bl	80046c4 <I2C_WaitOnFlagUntilTimeout>
 800418e:	4603      	mov	r3, r0
 8004190:	2b00      	cmp	r3, #0
 8004192:	d001      	beq.n	8004198 <HAL_I2C_Mem_Read+0x78>
    {
      return HAL_ERROR;
 8004194:	2301      	movs	r3, #1
 8004196:	e0d5      	b.n	8004344 <HAL_I2C_Mem_Read+0x224>
    }

    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8004198:	68fb      	ldr	r3, [r7, #12]
 800419a:	2222      	movs	r2, #34	@ 0x22
 800419c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 80041a0:	68fb      	ldr	r3, [r7, #12]
 80041a2:	2240      	movs	r2, #64	@ 0x40
 80041a4:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80041a8:	68fb      	ldr	r3, [r7, #12]
 80041aa:	2200      	movs	r2, #0
 80041ac:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Prepare transfer parameters */
    hi2c->pBuffPtr  = pData;
 80041ae:	68fb      	ldr	r3, [r7, #12]
 80041b0:	6a3a      	ldr	r2, [r7, #32]
 80041b2:	625a      	str	r2, [r3, #36]	@ 0x24
    hi2c->XferCount = Size;
 80041b4:	68fb      	ldr	r3, [r7, #12]
 80041b6:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 80041b8:	855a      	strh	r2, [r3, #42]	@ 0x2a
    hi2c->XferISR   = NULL;
 80041ba:	68fb      	ldr	r3, [r7, #12]
 80041bc:	2200      	movs	r2, #0
 80041be:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Send Slave Address and Memory Address */
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 80041c0:	88f8      	ldrh	r0, [r7, #6]
 80041c2:	893a      	ldrh	r2, [r7, #8]
 80041c4:	8979      	ldrh	r1, [r7, #10]
 80041c6:	697b      	ldr	r3, [r7, #20]
 80041c8:	9301      	str	r3, [sp, #4]
 80041ca:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80041cc:	9300      	str	r3, [sp, #0]
 80041ce:	4603      	mov	r3, r0
 80041d0:	68f8      	ldr	r0, [r7, #12]
 80041d2:	f000 f9ff 	bl	80045d4 <I2C_RequestMemoryRead>
 80041d6:	4603      	mov	r3, r0
 80041d8:	2b00      	cmp	r3, #0
 80041da:	d005      	beq.n	80041e8 <HAL_I2C_Mem_Read+0xc8>
    {
      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 80041dc:	68fb      	ldr	r3, [r7, #12]
 80041de:	2200      	movs	r2, #0
 80041e0:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
      return HAL_ERROR;
 80041e4:	2301      	movs	r3, #1
 80041e6:	e0ad      	b.n	8004344 <HAL_I2C_Mem_Read+0x224>
    }

    /* Send Slave Address */
    /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 80041e8:	68fb      	ldr	r3, [r7, #12]
 80041ea:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80041ec:	b29b      	uxth	r3, r3
 80041ee:	2bff      	cmp	r3, #255	@ 0xff
 80041f0:	d90e      	bls.n	8004210 <HAL_I2C_Mem_Read+0xf0>
    {
      hi2c->XferSize = MAX_NBYTE_SIZE;
 80041f2:	68fb      	ldr	r3, [r7, #12]
 80041f4:	22ff      	movs	r2, #255	@ 0xff
 80041f6:	851a      	strh	r2, [r3, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 80041f8:	68fb      	ldr	r3, [r7, #12]
 80041fa:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80041fc:	b2da      	uxtb	r2, r3
 80041fe:	8979      	ldrh	r1, [r7, #10]
 8004200:	4b52      	ldr	r3, [pc, #328]	@ (800434c <HAL_I2C_Mem_Read+0x22c>)
 8004202:	9300      	str	r3, [sp, #0]
 8004204:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8004208:	68f8      	ldr	r0, [r7, #12]
 800420a:	f000 fc1f 	bl	8004a4c <I2C_TransferConfig>
 800420e:	e00f      	b.n	8004230 <HAL_I2C_Mem_Read+0x110>
                         I2C_GENERATE_START_READ);
    }
    else
    {
      hi2c->XferSize = hi2c->XferCount;
 8004210:	68fb      	ldr	r3, [r7, #12]
 8004212:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004214:	b29a      	uxth	r2, r3
 8004216:	68fb      	ldr	r3, [r7, #12]
 8004218:	851a      	strh	r2, [r3, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 800421a:	68fb      	ldr	r3, [r7, #12]
 800421c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800421e:	b2da      	uxtb	r2, r3
 8004220:	8979      	ldrh	r1, [r7, #10]
 8004222:	4b4a      	ldr	r3, [pc, #296]	@ (800434c <HAL_I2C_Mem_Read+0x22c>)
 8004224:	9300      	str	r3, [sp, #0]
 8004226:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 800422a:	68f8      	ldr	r0, [r7, #12]
 800422c:	f000 fc0e 	bl	8004a4c <I2C_TransferConfig>
    }

    do
    {
      /* Wait until RXNE flag is set */
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
 8004230:	697b      	ldr	r3, [r7, #20]
 8004232:	9300      	str	r3, [sp, #0]
 8004234:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004236:	2200      	movs	r2, #0
 8004238:	2104      	movs	r1, #4
 800423a:	68f8      	ldr	r0, [r7, #12]
 800423c:	f000 fa42 	bl	80046c4 <I2C_WaitOnFlagUntilTimeout>
 8004240:	4603      	mov	r3, r0
 8004242:	2b00      	cmp	r3, #0
 8004244:	d001      	beq.n	800424a <HAL_I2C_Mem_Read+0x12a>
      {
        return HAL_ERROR;
 8004246:	2301      	movs	r3, #1
 8004248:	e07c      	b.n	8004344 <HAL_I2C_Mem_Read+0x224>
      }

      /* Read data from RXDR */
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 800424a:	68fb      	ldr	r3, [r7, #12]
 800424c:	681b      	ldr	r3, [r3, #0]
 800424e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8004250:	68fb      	ldr	r3, [r7, #12]
 8004252:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004254:	b2d2      	uxtb	r2, r2
 8004256:	701a      	strb	r2, [r3, #0]

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 8004258:	68fb      	ldr	r3, [r7, #12]
 800425a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800425c:	1c5a      	adds	r2, r3, #1
 800425e:	68fb      	ldr	r3, [r7, #12]
 8004260:	625a      	str	r2, [r3, #36]	@ 0x24

      hi2c->XferSize--;
 8004262:	68fb      	ldr	r3, [r7, #12]
 8004264:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004266:	3b01      	subs	r3, #1
 8004268:	b29a      	uxth	r2, r3
 800426a:	68fb      	ldr	r3, [r7, #12]
 800426c:	851a      	strh	r2, [r3, #40]	@ 0x28
      hi2c->XferCount--;
 800426e:	68fb      	ldr	r3, [r7, #12]
 8004270:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004272:	b29b      	uxth	r3, r3
 8004274:	3b01      	subs	r3, #1
 8004276:	b29a      	uxth	r2, r3
 8004278:	68fb      	ldr	r3, [r7, #12]
 800427a:	855a      	strh	r2, [r3, #42]	@ 0x2a

      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 800427c:	68fb      	ldr	r3, [r7, #12]
 800427e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004280:	b29b      	uxth	r3, r3
 8004282:	2b00      	cmp	r3, #0
 8004284:	d034      	beq.n	80042f0 <HAL_I2C_Mem_Read+0x1d0>
 8004286:	68fb      	ldr	r3, [r7, #12]
 8004288:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800428a:	2b00      	cmp	r3, #0
 800428c:	d130      	bne.n	80042f0 <HAL_I2C_Mem_Read+0x1d0>
      {
        /* Wait until TCR flag is set */
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 800428e:	697b      	ldr	r3, [r7, #20]
 8004290:	9300      	str	r3, [sp, #0]
 8004292:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004294:	2200      	movs	r2, #0
 8004296:	2180      	movs	r1, #128	@ 0x80
 8004298:	68f8      	ldr	r0, [r7, #12]
 800429a:	f000 fa13 	bl	80046c4 <I2C_WaitOnFlagUntilTimeout>
 800429e:	4603      	mov	r3, r0
 80042a0:	2b00      	cmp	r3, #0
 80042a2:	d001      	beq.n	80042a8 <HAL_I2C_Mem_Read+0x188>
        {
          return HAL_ERROR;
 80042a4:	2301      	movs	r3, #1
 80042a6:	e04d      	b.n	8004344 <HAL_I2C_Mem_Read+0x224>
        }

        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 80042a8:	68fb      	ldr	r3, [r7, #12]
 80042aa:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80042ac:	b29b      	uxth	r3, r3
 80042ae:	2bff      	cmp	r3, #255	@ 0xff
 80042b0:	d90e      	bls.n	80042d0 <HAL_I2C_Mem_Read+0x1b0>
        {
          hi2c->XferSize = MAX_NBYTE_SIZE;
 80042b2:	68fb      	ldr	r3, [r7, #12]
 80042b4:	22ff      	movs	r2, #255	@ 0xff
 80042b6:	851a      	strh	r2, [r3, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t) hi2c->XferSize, I2C_RELOAD_MODE,
 80042b8:	68fb      	ldr	r3, [r7, #12]
 80042ba:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80042bc:	b2da      	uxtb	r2, r3
 80042be:	8979      	ldrh	r1, [r7, #10]
 80042c0:	2300      	movs	r3, #0
 80042c2:	9300      	str	r3, [sp, #0]
 80042c4:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 80042c8:	68f8      	ldr	r0, [r7, #12]
 80042ca:	f000 fbbf 	bl	8004a4c <I2C_TransferConfig>
 80042ce:	e00f      	b.n	80042f0 <HAL_I2C_Mem_Read+0x1d0>
                             I2C_NO_STARTSTOP);
        }
        else
        {
          hi2c->XferSize = hi2c->XferCount;
 80042d0:	68fb      	ldr	r3, [r7, #12]
 80042d2:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80042d4:	b29a      	uxth	r2, r3
 80042d6:	68fb      	ldr	r3, [r7, #12]
 80042d8:	851a      	strh	r2, [r3, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 80042da:	68fb      	ldr	r3, [r7, #12]
 80042dc:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80042de:	b2da      	uxtb	r2, r3
 80042e0:	8979      	ldrh	r1, [r7, #10]
 80042e2:	2300      	movs	r3, #0
 80042e4:	9300      	str	r3, [sp, #0]
 80042e6:	f04f 7300 	mov.w	r3, #33554432	@ 0x2000000
 80042ea:	68f8      	ldr	r0, [r7, #12]
 80042ec:	f000 fbae 	bl	8004a4c <I2C_TransferConfig>
                             I2C_NO_STARTSTOP);
        }
      }
    } while (hi2c->XferCount > 0U);
 80042f0:	68fb      	ldr	r3, [r7, #12]
 80042f2:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80042f4:	b29b      	uxth	r3, r3
 80042f6:	2b00      	cmp	r3, #0
 80042f8:	d19a      	bne.n	8004230 <HAL_I2C_Mem_Read+0x110>

    /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
    /* Wait until STOPF flag is reset */
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80042fa:	697a      	ldr	r2, [r7, #20]
 80042fc:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 80042fe:	68f8      	ldr	r0, [r7, #12]
 8004300:	f000 fa80 	bl	8004804 <I2C_WaitOnSTOPFlagUntilTimeout>
 8004304:	4603      	mov	r3, r0
 8004306:	2b00      	cmp	r3, #0
 8004308:	d001      	beq.n	800430e <HAL_I2C_Mem_Read+0x1ee>
    {
      return HAL_ERROR;
 800430a:	2301      	movs	r3, #1
 800430c:	e01a      	b.n	8004344 <HAL_I2C_Mem_Read+0x224>
    }

    /* Clear STOP Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800430e:	68fb      	ldr	r3, [r7, #12]
 8004310:	681b      	ldr	r3, [r3, #0]
 8004312:	2220      	movs	r2, #32
 8004314:	61da      	str	r2, [r3, #28]

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
 8004316:	68fb      	ldr	r3, [r7, #12]
 8004318:	681b      	ldr	r3, [r3, #0]
 800431a:	6859      	ldr	r1, [r3, #4]
 800431c:	68fb      	ldr	r3, [r7, #12]
 800431e:	681a      	ldr	r2, [r3, #0]
 8004320:	4b0b      	ldr	r3, [pc, #44]	@ (8004350 <HAL_I2C_Mem_Read+0x230>)
 8004322:	400b      	ands	r3, r1
 8004324:	6053      	str	r3, [r2, #4]

    hi2c->State = HAL_I2C_STATE_READY;
 8004326:	68fb      	ldr	r3, [r7, #12]
 8004328:	2220      	movs	r2, #32
 800432a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 800432e:	68fb      	ldr	r3, [r7, #12]
 8004330:	2200      	movs	r2, #0
 8004332:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004336:	68fb      	ldr	r3, [r7, #12]
 8004338:	2200      	movs	r2, #0
 800433a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    return HAL_OK;
 800433e:	2300      	movs	r3, #0
 8004340:	e000      	b.n	8004344 <HAL_I2C_Mem_Read+0x224>
  }
  else
  {
    return HAL_BUSY;
 8004342:	2302      	movs	r3, #2
  }
}
 8004344:	4618      	mov	r0, r3
 8004346:	3718      	adds	r7, #24
 8004348:	46bd      	mov	sp, r7
 800434a:	bd80      	pop	{r7, pc}
 800434c:	80002400 	.word	0x80002400
 8004350:	fe00e800 	.word	0xfe00e800

08004354 <HAL_I2C_IsDeviceReady>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_IsDeviceReady(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Trials,
                                        uint32_t Timeout)
{
 8004354:	b580      	push	{r7, lr}
 8004356:	b08a      	sub	sp, #40	@ 0x28
 8004358:	af02      	add	r7, sp, #8
 800435a:	60f8      	str	r0, [r7, #12]
 800435c:	607a      	str	r2, [r7, #4]
 800435e:	603b      	str	r3, [r7, #0]
 8004360:	460b      	mov	r3, r1
 8004362:	817b      	strh	r3, [r7, #10]
  uint32_t tickstart;

  __IO uint32_t I2C_Trials = 0UL;
 8004364:	2300      	movs	r3, #0
 8004366:	617b      	str	r3, [r7, #20]

  FlagStatus tmp1;
  FlagStatus tmp2;

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004368:	68fb      	ldr	r3, [r7, #12]
 800436a:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800436e:	b2db      	uxtb	r3, r3
 8004370:	2b20      	cmp	r3, #32
 8004372:	f040 80d2 	bne.w	800451a <HAL_I2C_IsDeviceReady+0x1c6>
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
 8004376:	68fb      	ldr	r3, [r7, #12]
 8004378:	681b      	ldr	r3, [r3, #0]
 800437a:	699b      	ldr	r3, [r3, #24]
 800437c:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 8004380:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8004384:	d101      	bne.n	800438a <HAL_I2C_IsDeviceReady+0x36>
    {
      return HAL_BUSY;
 8004386:	2302      	movs	r3, #2
 8004388:	e0c8      	b.n	800451c <HAL_I2C_IsDeviceReady+0x1c8>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 800438a:	68fb      	ldr	r3, [r7, #12]
 800438c:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8004390:	2b01      	cmp	r3, #1
 8004392:	d101      	bne.n	8004398 <HAL_I2C_IsDeviceReady+0x44>
 8004394:	2302      	movs	r3, #2
 8004396:	e0c1      	b.n	800451c <HAL_I2C_IsDeviceReady+0x1c8>
 8004398:	68fb      	ldr	r3, [r7, #12]
 800439a:	2201      	movs	r2, #1
 800439c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    hi2c->State = HAL_I2C_STATE_BUSY;
 80043a0:	68fb      	ldr	r3, [r7, #12]
 80043a2:	2224      	movs	r2, #36	@ 0x24
 80043a4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80043a8:	68fb      	ldr	r3, [r7, #12]
 80043aa:	2200      	movs	r2, #0
 80043ac:	645a      	str	r2, [r3, #68]	@ 0x44

    do
    {
      /* Generate Start */
      hi2c->Instance->CR2 = I2C_GENERATE_START(hi2c->Init.AddressingMode, DevAddress);
 80043ae:	68fb      	ldr	r3, [r7, #12]
 80043b0:	68db      	ldr	r3, [r3, #12]
 80043b2:	2b01      	cmp	r3, #1
 80043b4:	d105      	bne.n	80043c2 <HAL_I2C_IsDeviceReady+0x6e>
 80043b6:	897b      	ldrh	r3, [r7, #10]
 80043b8:	f3c3 0209 	ubfx	r2, r3, #0, #10
 80043bc:	4b59      	ldr	r3, [pc, #356]	@ (8004524 <HAL_I2C_IsDeviceReady+0x1d0>)
 80043be:	4313      	orrs	r3, r2
 80043c0:	e004      	b.n	80043cc <HAL_I2C_IsDeviceReady+0x78>
 80043c2:	897b      	ldrh	r3, [r7, #10]
 80043c4:	f3c3 0209 	ubfx	r2, r3, #0, #10
 80043c8:	4b57      	ldr	r3, [pc, #348]	@ (8004528 <HAL_I2C_IsDeviceReady+0x1d4>)
 80043ca:	4313      	orrs	r3, r2
 80043cc:	68fa      	ldr	r2, [r7, #12]
 80043ce:	6812      	ldr	r2, [r2, #0]
 80043d0:	6053      	str	r3, [r2, #4]

      /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
      /* Wait until STOPF flag is set or a NACK flag is set*/
      tickstart = HAL_GetTick();
 80043d2:	f7fe fed5 	bl	8003180 <HAL_GetTick>
 80043d6:	61b8      	str	r0, [r7, #24]

      tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF);
 80043d8:	68fb      	ldr	r3, [r7, #12]
 80043da:	681b      	ldr	r3, [r3, #0]
 80043dc:	699b      	ldr	r3, [r3, #24]
 80043de:	f003 0320 	and.w	r3, r3, #32
 80043e2:	2b20      	cmp	r3, #32
 80043e4:	bf0c      	ite	eq
 80043e6:	2301      	moveq	r3, #1
 80043e8:	2300      	movne	r3, #0
 80043ea:	b2db      	uxtb	r3, r3
 80043ec:	77fb      	strb	r3, [r7, #31]
      tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
 80043ee:	68fb      	ldr	r3, [r7, #12]
 80043f0:	681b      	ldr	r3, [r3, #0]
 80043f2:	699b      	ldr	r3, [r3, #24]
 80043f4:	f003 0310 	and.w	r3, r3, #16
 80043f8:	2b10      	cmp	r3, #16
 80043fa:	bf0c      	ite	eq
 80043fc:	2301      	moveq	r3, #1
 80043fe:	2300      	movne	r3, #0
 8004400:	b2db      	uxtb	r3, r3
 8004402:	77bb      	strb	r3, [r7, #30]

      while ((tmp1 == RESET) && (tmp2 == RESET))
 8004404:	e034      	b.n	8004470 <HAL_I2C_IsDeviceReady+0x11c>
      {
        if (Timeout != HAL_MAX_DELAY)
 8004406:	683b      	ldr	r3, [r7, #0]
 8004408:	f1b3 3fff 	cmp.w	r3, #4294967295
 800440c:	d01a      	beq.n	8004444 <HAL_I2C_IsDeviceReady+0xf0>
        {
          if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 800440e:	f7fe feb7 	bl	8003180 <HAL_GetTick>
 8004412:	4602      	mov	r2, r0
 8004414:	69bb      	ldr	r3, [r7, #24]
 8004416:	1ad3      	subs	r3, r2, r3
 8004418:	683a      	ldr	r2, [r7, #0]
 800441a:	429a      	cmp	r2, r3
 800441c:	d302      	bcc.n	8004424 <HAL_I2C_IsDeviceReady+0xd0>
 800441e:	683b      	ldr	r3, [r7, #0]
 8004420:	2b00      	cmp	r3, #0
 8004422:	d10f      	bne.n	8004444 <HAL_I2C_IsDeviceReady+0xf0>
          {
            /* Update I2C state */
            hi2c->State = HAL_I2C_STATE_READY;
 8004424:	68fb      	ldr	r3, [r7, #12]
 8004426:	2220      	movs	r2, #32
 8004428:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

            /* Update I2C error code */
            hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800442c:	68fb      	ldr	r3, [r7, #12]
 800442e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004430:	f043 0220 	orr.w	r2, r3, #32
 8004434:	68fb      	ldr	r3, [r7, #12]
 8004436:	645a      	str	r2, [r3, #68]	@ 0x44

            /* Process Unlocked */
            __HAL_UNLOCK(hi2c);
 8004438:	68fb      	ldr	r3, [r7, #12]
 800443a:	2200      	movs	r2, #0
 800443c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

            return HAL_ERROR;
 8004440:	2301      	movs	r3, #1
 8004442:	e06b      	b.n	800451c <HAL_I2C_IsDeviceReady+0x1c8>
          }
        }

        tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF);
 8004444:	68fb      	ldr	r3, [r7, #12]
 8004446:	681b      	ldr	r3, [r3, #0]
 8004448:	699b      	ldr	r3, [r3, #24]
 800444a:	f003 0320 	and.w	r3, r3, #32
 800444e:	2b20      	cmp	r3, #32
 8004450:	bf0c      	ite	eq
 8004452:	2301      	moveq	r3, #1
 8004454:	2300      	movne	r3, #0
 8004456:	b2db      	uxtb	r3, r3
 8004458:	77fb      	strb	r3, [r7, #31]
        tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
 800445a:	68fb      	ldr	r3, [r7, #12]
 800445c:	681b      	ldr	r3, [r3, #0]
 800445e:	699b      	ldr	r3, [r3, #24]
 8004460:	f003 0310 	and.w	r3, r3, #16
 8004464:	2b10      	cmp	r3, #16
 8004466:	bf0c      	ite	eq
 8004468:	2301      	moveq	r3, #1
 800446a:	2300      	movne	r3, #0
 800446c:	b2db      	uxtb	r3, r3
 800446e:	77bb      	strb	r3, [r7, #30]
      while ((tmp1 == RESET) && (tmp2 == RESET))
 8004470:	7ffb      	ldrb	r3, [r7, #31]
 8004472:	2b00      	cmp	r3, #0
 8004474:	d102      	bne.n	800447c <HAL_I2C_IsDeviceReady+0x128>
 8004476:	7fbb      	ldrb	r3, [r7, #30]
 8004478:	2b00      	cmp	r3, #0
 800447a:	d0c4      	beq.n	8004406 <HAL_I2C_IsDeviceReady+0xb2>
      }

      /* Check if the NACKF flag has not been set */
      if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == RESET)
 800447c:	68fb      	ldr	r3, [r7, #12]
 800447e:	681b      	ldr	r3, [r3, #0]
 8004480:	699b      	ldr	r3, [r3, #24]
 8004482:	f003 0310 	and.w	r3, r3, #16
 8004486:	2b10      	cmp	r3, #16
 8004488:	d01a      	beq.n	80044c0 <HAL_I2C_IsDeviceReady+0x16c>
      {
        /* Wait until STOPF flag is reset */
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
 800448a:	69bb      	ldr	r3, [r7, #24]
 800448c:	9300      	str	r3, [sp, #0]
 800448e:	683b      	ldr	r3, [r7, #0]
 8004490:	2200      	movs	r2, #0
 8004492:	2120      	movs	r1, #32
 8004494:	68f8      	ldr	r0, [r7, #12]
 8004496:	f000 f915 	bl	80046c4 <I2C_WaitOnFlagUntilTimeout>
 800449a:	4603      	mov	r3, r0
 800449c:	2b00      	cmp	r3, #0
 800449e:	d001      	beq.n	80044a4 <HAL_I2C_IsDeviceReady+0x150>
        {
          return HAL_ERROR;
 80044a0:	2301      	movs	r3, #1
 80044a2:	e03b      	b.n	800451c <HAL_I2C_IsDeviceReady+0x1c8>
        }

        /* Clear STOP Flag */
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80044a4:	68fb      	ldr	r3, [r7, #12]
 80044a6:	681b      	ldr	r3, [r3, #0]
 80044a8:	2220      	movs	r2, #32
 80044aa:	61da      	str	r2, [r3, #28]

        /* Device is ready */
        hi2c->State = HAL_I2C_STATE_READY;
 80044ac:	68fb      	ldr	r3, [r7, #12]
 80044ae:	2220      	movs	r2, #32
 80044b0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 80044b4:	68fb      	ldr	r3, [r7, #12]
 80044b6:	2200      	movs	r2, #0
 80044b8:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

        return HAL_OK;
 80044bc:	2300      	movs	r3, #0
 80044be:	e02d      	b.n	800451c <HAL_I2C_IsDeviceReady+0x1c8>
      }
      else
      {
        /* Wait until STOPF flag is reset */
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
 80044c0:	69bb      	ldr	r3, [r7, #24]
 80044c2:	9300      	str	r3, [sp, #0]
 80044c4:	683b      	ldr	r3, [r7, #0]
 80044c6:	2200      	movs	r2, #0
 80044c8:	2120      	movs	r1, #32
 80044ca:	68f8      	ldr	r0, [r7, #12]
 80044cc:	f000 f8fa 	bl	80046c4 <I2C_WaitOnFlagUntilTimeout>
 80044d0:	4603      	mov	r3, r0
 80044d2:	2b00      	cmp	r3, #0
 80044d4:	d001      	beq.n	80044da <HAL_I2C_IsDeviceReady+0x186>
        {
          return HAL_ERROR;
 80044d6:	2301      	movs	r3, #1
 80044d8:	e020      	b.n	800451c <HAL_I2C_IsDeviceReady+0x1c8>
        }

        /* Clear NACK Flag */
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80044da:	68fb      	ldr	r3, [r7, #12]
 80044dc:	681b      	ldr	r3, [r3, #0]
 80044de:	2210      	movs	r2, #16
 80044e0:	61da      	str	r2, [r3, #28]

        /* Clear STOP Flag, auto generated with autoend*/
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80044e2:	68fb      	ldr	r3, [r7, #12]
 80044e4:	681b      	ldr	r3, [r3, #0]
 80044e6:	2220      	movs	r2, #32
 80044e8:	61da      	str	r2, [r3, #28]
      }

      /* Increment Trials */
      I2C_Trials++;
 80044ea:	697b      	ldr	r3, [r7, #20]
 80044ec:	3301      	adds	r3, #1
 80044ee:	617b      	str	r3, [r7, #20]
    } while (I2C_Trials < Trials);
 80044f0:	697b      	ldr	r3, [r7, #20]
 80044f2:	687a      	ldr	r2, [r7, #4]
 80044f4:	429a      	cmp	r2, r3
 80044f6:	f63f af5a 	bhi.w	80043ae <HAL_I2C_IsDeviceReady+0x5a>

    /* Update I2C state */
    hi2c->State = HAL_I2C_STATE_READY;
 80044fa:	68fb      	ldr	r3, [r7, #12]
 80044fc:	2220      	movs	r2, #32
 80044fe:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

    /* Update I2C error code */
    hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004502:	68fb      	ldr	r3, [r7, #12]
 8004504:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004506:	f043 0220 	orr.w	r2, r3, #32
 800450a:	68fb      	ldr	r3, [r7, #12]
 800450c:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 800450e:	68fb      	ldr	r3, [r7, #12]
 8004510:	2200      	movs	r2, #0
 8004512:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    return HAL_ERROR;
 8004516:	2301      	movs	r3, #1
 8004518:	e000      	b.n	800451c <HAL_I2C_IsDeviceReady+0x1c8>
  }
  else
  {
    return HAL_BUSY;
 800451a:	2302      	movs	r3, #2
  }
}
 800451c:	4618      	mov	r0, r3
 800451e:	3720      	adds	r7, #32
 8004520:	46bd      	mov	sp, r7
 8004522:	bd80      	pop	{r7, pc}
 8004524:	02002000 	.word	0x02002000
 8004528:	02002800 	.word	0x02002800

0800452c <I2C_RequestMemoryWrite>:
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress,
                                                uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout,
                                                uint32_t Tickstart)
{
 800452c:	b580      	push	{r7, lr}
 800452e:	b086      	sub	sp, #24
 8004530:	af02      	add	r7, sp, #8
 8004532:	60f8      	str	r0, [r7, #12]
 8004534:	4608      	mov	r0, r1
 8004536:	4611      	mov	r1, r2
 8004538:	461a      	mov	r2, r3
 800453a:	4603      	mov	r3, r0
 800453c:	817b      	strh	r3, [r7, #10]
 800453e:	460b      	mov	r3, r1
 8004540:	813b      	strh	r3, [r7, #8]
 8004542:	4613      	mov	r3, r2
 8004544:	80fb      	strh	r3, [r7, #6]
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8004546:	88fb      	ldrh	r3, [r7, #6]
 8004548:	b2da      	uxtb	r2, r3
 800454a:	8979      	ldrh	r1, [r7, #10]
 800454c:	4b20      	ldr	r3, [pc, #128]	@ (80045d0 <I2C_RequestMemoryWrite+0xa4>)
 800454e:	9300      	str	r3, [sp, #0]
 8004550:	f04f 7380 	mov.w	r3, #16777216	@ 0x1000000
 8004554:	68f8      	ldr	r0, [r7, #12]
 8004556:	f000 fa79 	bl	8004a4c <I2C_TransferConfig>

  /* Wait until TXIS flag is set */
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800455a:	69fa      	ldr	r2, [r7, #28]
 800455c:	69b9      	ldr	r1, [r7, #24]
 800455e:	68f8      	ldr	r0, [r7, #12]
 8004560:	f000 f909 	bl	8004776 <I2C_WaitOnTXISFlagUntilTimeout>
 8004564:	4603      	mov	r3, r0
 8004566:	2b00      	cmp	r3, #0
 8004568:	d001      	beq.n	800456e <I2C_RequestMemoryWrite+0x42>
  {
    return HAL_ERROR;
 800456a:	2301      	movs	r3, #1
 800456c:	e02c      	b.n	80045c8 <I2C_RequestMemoryWrite+0x9c>
  }

  /* If Memory address size is 8Bit */
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800456e:	88fb      	ldrh	r3, [r7, #6]
 8004570:	2b01      	cmp	r3, #1
 8004572:	d105      	bne.n	8004580 <I2C_RequestMemoryWrite+0x54>
  {
    /* Send Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004574:	893b      	ldrh	r3, [r7, #8]
 8004576:	b2da      	uxtb	r2, r3
 8004578:	68fb      	ldr	r3, [r7, #12]
 800457a:	681b      	ldr	r3, [r3, #0]
 800457c:	629a      	str	r2, [r3, #40]	@ 0x28
 800457e:	e015      	b.n	80045ac <I2C_RequestMemoryWrite+0x80>
  }
  /* If Memory address size is 16Bit */
  else
  {
    /* Send MSB of Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8004580:	893b      	ldrh	r3, [r7, #8]
 8004582:	0a1b      	lsrs	r3, r3, #8
 8004584:	b29b      	uxth	r3, r3
 8004586:	b2da      	uxtb	r2, r3
 8004588:	68fb      	ldr	r3, [r7, #12]
 800458a:	681b      	ldr	r3, [r3, #0]
 800458c:	629a      	str	r2, [r3, #40]	@ 0x28

    /* Wait until TXIS flag is set */
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800458e:	69fa      	ldr	r2, [r7, #28]
 8004590:	69b9      	ldr	r1, [r7, #24]
 8004592:	68f8      	ldr	r0, [r7, #12]
 8004594:	f000 f8ef 	bl	8004776 <I2C_WaitOnTXISFlagUntilTimeout>
 8004598:	4603      	mov	r3, r0
 800459a:	2b00      	cmp	r3, #0
 800459c:	d001      	beq.n	80045a2 <I2C_RequestMemoryWrite+0x76>
    {
      return HAL_ERROR;
 800459e:	2301      	movs	r3, #1
 80045a0:	e012      	b.n	80045c8 <I2C_RequestMemoryWrite+0x9c>
    }

    /* Send LSB of Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 80045a2:	893b      	ldrh	r3, [r7, #8]
 80045a4:	b2da      	uxtb	r2, r3
 80045a6:	68fb      	ldr	r3, [r7, #12]
 80045a8:	681b      	ldr	r3, [r3, #0]
 80045aa:	629a      	str	r2, [r3, #40]	@ 0x28
  }

  /* Wait until TCR flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 80045ac:	69fb      	ldr	r3, [r7, #28]
 80045ae:	9300      	str	r3, [sp, #0]
 80045b0:	69bb      	ldr	r3, [r7, #24]
 80045b2:	2200      	movs	r2, #0
 80045b4:	2180      	movs	r1, #128	@ 0x80
 80045b6:	68f8      	ldr	r0, [r7, #12]
 80045b8:	f000 f884 	bl	80046c4 <I2C_WaitOnFlagUntilTimeout>
 80045bc:	4603      	mov	r3, r0
 80045be:	2b00      	cmp	r3, #0
 80045c0:	d001      	beq.n	80045c6 <I2C_RequestMemoryWrite+0x9a>
  {
    return HAL_ERROR;
 80045c2:	2301      	movs	r3, #1
 80045c4:	e000      	b.n	80045c8 <I2C_RequestMemoryWrite+0x9c>
  }

  return HAL_OK;
 80045c6:	2300      	movs	r3, #0
}
 80045c8:	4618      	mov	r0, r3
 80045ca:	3710      	adds	r7, #16
 80045cc:	46bd      	mov	sp, r7
 80045ce:	bd80      	pop	{r7, pc}
 80045d0:	80002000 	.word	0x80002000

080045d4 <I2C_RequestMemoryRead>:
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress,
                                               uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout,
                                               uint32_t Tickstart)
{
 80045d4:	b580      	push	{r7, lr}
 80045d6:	b086      	sub	sp, #24
 80045d8:	af02      	add	r7, sp, #8
 80045da:	60f8      	str	r0, [r7, #12]
 80045dc:	4608      	mov	r0, r1
 80045de:	4611      	mov	r1, r2
 80045e0:	461a      	mov	r2, r3
 80045e2:	4603      	mov	r3, r0
 80045e4:	817b      	strh	r3, [r7, #10]
 80045e6:	460b      	mov	r3, r1
 80045e8:	813b      	strh	r3, [r7, #8]
 80045ea:	4613      	mov	r3, r2
 80045ec:	80fb      	strh	r3, [r7, #6]
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 80045ee:	88fb      	ldrh	r3, [r7, #6]
 80045f0:	b2da      	uxtb	r2, r3
 80045f2:	8979      	ldrh	r1, [r7, #10]
 80045f4:	4b20      	ldr	r3, [pc, #128]	@ (8004678 <I2C_RequestMemoryRead+0xa4>)
 80045f6:	9300      	str	r3, [sp, #0]
 80045f8:	2300      	movs	r3, #0
 80045fa:	68f8      	ldr	r0, [r7, #12]
 80045fc:	f000 fa26 	bl	8004a4c <I2C_TransferConfig>

  /* Wait until TXIS flag is set */
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004600:	69fa      	ldr	r2, [r7, #28]
 8004602:	69b9      	ldr	r1, [r7, #24]
 8004604:	68f8      	ldr	r0, [r7, #12]
 8004606:	f000 f8b6 	bl	8004776 <I2C_WaitOnTXISFlagUntilTimeout>
 800460a:	4603      	mov	r3, r0
 800460c:	2b00      	cmp	r3, #0
 800460e:	d001      	beq.n	8004614 <I2C_RequestMemoryRead+0x40>
  {
    return HAL_ERROR;
 8004610:	2301      	movs	r3, #1
 8004612:	e02c      	b.n	800466e <I2C_RequestMemoryRead+0x9a>
  }

  /* If Memory address size is 8Bit */
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004614:	88fb      	ldrh	r3, [r7, #6]
 8004616:	2b01      	cmp	r3, #1
 8004618:	d105      	bne.n	8004626 <I2C_RequestMemoryRead+0x52>
  {
    /* Send Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 800461a:	893b      	ldrh	r3, [r7, #8]
 800461c:	b2da      	uxtb	r2, r3
 800461e:	68fb      	ldr	r3, [r7, #12]
 8004620:	681b      	ldr	r3, [r3, #0]
 8004622:	629a      	str	r2, [r3, #40]	@ 0x28
 8004624:	e015      	b.n	8004652 <I2C_RequestMemoryRead+0x7e>
  }
  /* If Memory address size is 16Bit */
  else
  {
    /* Send MSB of Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8004626:	893b      	ldrh	r3, [r7, #8]
 8004628:	0a1b      	lsrs	r3, r3, #8
 800462a:	b29b      	uxth	r3, r3
 800462c:	b2da      	uxtb	r2, r3
 800462e:	68fb      	ldr	r3, [r7, #12]
 8004630:	681b      	ldr	r3, [r3, #0]
 8004632:	629a      	str	r2, [r3, #40]	@ 0x28

    /* Wait until TXIS flag is set */
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004634:	69fa      	ldr	r2, [r7, #28]
 8004636:	69b9      	ldr	r1, [r7, #24]
 8004638:	68f8      	ldr	r0, [r7, #12]
 800463a:	f000 f89c 	bl	8004776 <I2C_WaitOnTXISFlagUntilTimeout>
 800463e:	4603      	mov	r3, r0
 8004640:	2b00      	cmp	r3, #0
 8004642:	d001      	beq.n	8004648 <I2C_RequestMemoryRead+0x74>
    {
      return HAL_ERROR;
 8004644:	2301      	movs	r3, #1
 8004646:	e012      	b.n	800466e <I2C_RequestMemoryRead+0x9a>
    }

    /* Send LSB of Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8004648:	893b      	ldrh	r3, [r7, #8]
 800464a:	b2da      	uxtb	r2, r3
 800464c:	68fb      	ldr	r3, [r7, #12]
 800464e:	681b      	ldr	r3, [r3, #0]
 8004650:	629a      	str	r2, [r3, #40]	@ 0x28
  }

  /* Wait until TC flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 8004652:	69fb      	ldr	r3, [r7, #28]
 8004654:	9300      	str	r3, [sp, #0]
 8004656:	69bb      	ldr	r3, [r7, #24]
 8004658:	2200      	movs	r2, #0
 800465a:	2140      	movs	r1, #64	@ 0x40
 800465c:	68f8      	ldr	r0, [r7, #12]
 800465e:	f000 f831 	bl	80046c4 <I2C_WaitOnFlagUntilTimeout>
 8004662:	4603      	mov	r3, r0
 8004664:	2b00      	cmp	r3, #0
 8004666:	d001      	beq.n	800466c <I2C_RequestMemoryRead+0x98>
  {
    return HAL_ERROR;
 8004668:	2301      	movs	r3, #1
 800466a:	e000      	b.n	800466e <I2C_RequestMemoryRead+0x9a>
  }

  return HAL_OK;
 800466c:	2300      	movs	r3, #0
}
 800466e:	4618      	mov	r0, r3
 8004670:	3710      	adds	r7, #16
 8004672:	46bd      	mov	sp, r7
 8004674:	bd80      	pop	{r7, pc}
 8004676:	bf00      	nop
 8004678:	80002000 	.word	0x80002000

0800467c <I2C_Flush_TXDR>:
  * @brief  I2C Tx data register flush process.
  * @param  hi2c I2C handle.
  * @retval None
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
 800467c:	b480      	push	{r7}
 800467e:	b083      	sub	sp, #12
 8004680:	af00      	add	r7, sp, #0
 8004682:	6078      	str	r0, [r7, #4]
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 8004684:	687b      	ldr	r3, [r7, #4]
 8004686:	681b      	ldr	r3, [r3, #0]
 8004688:	699b      	ldr	r3, [r3, #24]
 800468a:	f003 0302 	and.w	r3, r3, #2
 800468e:	2b02      	cmp	r3, #2
 8004690:	d103      	bne.n	800469a <I2C_Flush_TXDR+0x1e>
  {
    hi2c->Instance->TXDR = 0x00U;
 8004692:	687b      	ldr	r3, [r7, #4]
 8004694:	681b      	ldr	r3, [r3, #0]
 8004696:	2200      	movs	r2, #0
 8004698:	629a      	str	r2, [r3, #40]	@ 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 800469a:	687b      	ldr	r3, [r7, #4]
 800469c:	681b      	ldr	r3, [r3, #0]
 800469e:	699b      	ldr	r3, [r3, #24]
 80046a0:	f003 0301 	and.w	r3, r3, #1
 80046a4:	2b01      	cmp	r3, #1
 80046a6:	d007      	beq.n	80046b8 <I2C_Flush_TXDR+0x3c>
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 80046a8:	687b      	ldr	r3, [r7, #4]
 80046aa:	681b      	ldr	r3, [r3, #0]
 80046ac:	699a      	ldr	r2, [r3, #24]
 80046ae:	687b      	ldr	r3, [r7, #4]
 80046b0:	681b      	ldr	r3, [r3, #0]
 80046b2:	f042 0201 	orr.w	r2, r2, #1
 80046b6:	619a      	str	r2, [r3, #24]
  }
}
 80046b8:	bf00      	nop
 80046ba:	370c      	adds	r7, #12
 80046bc:	46bd      	mov	sp, r7
 80046be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80046c2:	4770      	bx	lr

080046c4 <I2C_WaitOnFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status,
                                                    uint32_t Timeout, uint32_t Tickstart)
{
 80046c4:	b580      	push	{r7, lr}
 80046c6:	b084      	sub	sp, #16
 80046c8:	af00      	add	r7, sp, #0
 80046ca:	60f8      	str	r0, [r7, #12]
 80046cc:	60b9      	str	r1, [r7, #8]
 80046ce:	603b      	str	r3, [r7, #0]
 80046d0:	4613      	mov	r3, r2
 80046d2:	71fb      	strb	r3, [r7, #7]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80046d4:	e03b      	b.n	800474e <I2C_WaitOnFlagUntilTimeout+0x8a>
  {
    /* Check if an error is detected */
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 80046d6:	69ba      	ldr	r2, [r7, #24]
 80046d8:	6839      	ldr	r1, [r7, #0]
 80046da:	68f8      	ldr	r0, [r7, #12]
 80046dc:	f000 f8d6 	bl	800488c <I2C_IsErrorOccurred>
 80046e0:	4603      	mov	r3, r0
 80046e2:	2b00      	cmp	r3, #0
 80046e4:	d001      	beq.n	80046ea <I2C_WaitOnFlagUntilTimeout+0x26>
    {
      return HAL_ERROR;
 80046e6:	2301      	movs	r3, #1
 80046e8:	e041      	b.n	800476e <I2C_WaitOnFlagUntilTimeout+0xaa>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80046ea:	683b      	ldr	r3, [r7, #0]
 80046ec:	f1b3 3fff 	cmp.w	r3, #4294967295
 80046f0:	d02d      	beq.n	800474e <I2C_WaitOnFlagUntilTimeout+0x8a>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80046f2:	f7fe fd45 	bl	8003180 <HAL_GetTick>
 80046f6:	4602      	mov	r2, r0
 80046f8:	69bb      	ldr	r3, [r7, #24]
 80046fa:	1ad3      	subs	r3, r2, r3
 80046fc:	683a      	ldr	r2, [r7, #0]
 80046fe:	429a      	cmp	r2, r3
 8004700:	d302      	bcc.n	8004708 <I2C_WaitOnFlagUntilTimeout+0x44>
 8004702:	683b      	ldr	r3, [r7, #0]
 8004704:	2b00      	cmp	r3, #0
 8004706:	d122      	bne.n	800474e <I2C_WaitOnFlagUntilTimeout+0x8a>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 8004708:	68fb      	ldr	r3, [r7, #12]
 800470a:	681b      	ldr	r3, [r3, #0]
 800470c:	699a      	ldr	r2, [r3, #24]
 800470e:	68bb      	ldr	r3, [r7, #8]
 8004710:	4013      	ands	r3, r2
 8004712:	68ba      	ldr	r2, [r7, #8]
 8004714:	429a      	cmp	r2, r3
 8004716:	bf0c      	ite	eq
 8004718:	2301      	moveq	r3, #1
 800471a:	2300      	movne	r3, #0
 800471c:	b2db      	uxtb	r3, r3
 800471e:	461a      	mov	r2, r3
 8004720:	79fb      	ldrb	r3, [r7, #7]
 8004722:	429a      	cmp	r2, r3
 8004724:	d113      	bne.n	800474e <I2C_WaitOnFlagUntilTimeout+0x8a>
        {
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004726:	68fb      	ldr	r3, [r7, #12]
 8004728:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800472a:	f043 0220 	orr.w	r2, r3, #32
 800472e:	68fb      	ldr	r3, [r7, #12]
 8004730:	645a      	str	r2, [r3, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 8004732:	68fb      	ldr	r3, [r7, #12]
 8004734:	2220      	movs	r2, #32
 8004736:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800473a:	68fb      	ldr	r3, [r7, #12]
 800473c:	2200      	movs	r2, #0
 800473e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 8004742:	68fb      	ldr	r3, [r7, #12]
 8004744:	2200      	movs	r2, #0
 8004746:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
          return HAL_ERROR;
 800474a:	2301      	movs	r3, #1
 800474c:	e00f      	b.n	800476e <I2C_WaitOnFlagUntilTimeout+0xaa>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800474e:	68fb      	ldr	r3, [r7, #12]
 8004750:	681b      	ldr	r3, [r3, #0]
 8004752:	699a      	ldr	r2, [r3, #24]
 8004754:	68bb      	ldr	r3, [r7, #8]
 8004756:	4013      	ands	r3, r2
 8004758:	68ba      	ldr	r2, [r7, #8]
 800475a:	429a      	cmp	r2, r3
 800475c:	bf0c      	ite	eq
 800475e:	2301      	moveq	r3, #1
 8004760:	2300      	movne	r3, #0
 8004762:	b2db      	uxtb	r3, r3
 8004764:	461a      	mov	r2, r3
 8004766:	79fb      	ldrb	r3, [r7, #7]
 8004768:	429a      	cmp	r2, r3
 800476a:	d0b4      	beq.n	80046d6 <I2C_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 800476c:	2300      	movs	r3, #0
}
 800476e:	4618      	mov	r0, r3
 8004770:	3710      	adds	r7, #16
 8004772:	46bd      	mov	sp, r7
 8004774:	bd80      	pop	{r7, pc}

08004776 <I2C_WaitOnTXISFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
                                                        uint32_t Tickstart)
{
 8004776:	b580      	push	{r7, lr}
 8004778:	b084      	sub	sp, #16
 800477a:	af00      	add	r7, sp, #0
 800477c:	60f8      	str	r0, [r7, #12]
 800477e:	60b9      	str	r1, [r7, #8]
 8004780:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8004782:	e033      	b.n	80047ec <I2C_WaitOnTXISFlagUntilTimeout+0x76>
  {
    /* Check if an error is detected */
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8004784:	687a      	ldr	r2, [r7, #4]
 8004786:	68b9      	ldr	r1, [r7, #8]
 8004788:	68f8      	ldr	r0, [r7, #12]
 800478a:	f000 f87f 	bl	800488c <I2C_IsErrorOccurred>
 800478e:	4603      	mov	r3, r0
 8004790:	2b00      	cmp	r3, #0
 8004792:	d001      	beq.n	8004798 <I2C_WaitOnTXISFlagUntilTimeout+0x22>
    {
      return HAL_ERROR;
 8004794:	2301      	movs	r3, #1
 8004796:	e031      	b.n	80047fc <I2C_WaitOnTXISFlagUntilTimeout+0x86>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8004798:	68bb      	ldr	r3, [r7, #8]
 800479a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800479e:	d025      	beq.n	80047ec <I2C_WaitOnTXISFlagUntilTimeout+0x76>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80047a0:	f7fe fcee 	bl	8003180 <HAL_GetTick>
 80047a4:	4602      	mov	r2, r0
 80047a6:	687b      	ldr	r3, [r7, #4]
 80047a8:	1ad3      	subs	r3, r2, r3
 80047aa:	68ba      	ldr	r2, [r7, #8]
 80047ac:	429a      	cmp	r2, r3
 80047ae:	d302      	bcc.n	80047b6 <I2C_WaitOnTXISFlagUntilTimeout+0x40>
 80047b0:	68bb      	ldr	r3, [r7, #8]
 80047b2:	2b00      	cmp	r3, #0
 80047b4:	d11a      	bne.n	80047ec <I2C_WaitOnTXISFlagUntilTimeout+0x76>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
 80047b6:	68fb      	ldr	r3, [r7, #12]
 80047b8:	681b      	ldr	r3, [r3, #0]
 80047ba:	699b      	ldr	r3, [r3, #24]
 80047bc:	f003 0302 	and.w	r3, r3, #2
 80047c0:	2b02      	cmp	r3, #2
 80047c2:	d013      	beq.n	80047ec <I2C_WaitOnTXISFlagUntilTimeout+0x76>
        {
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80047c4:	68fb      	ldr	r3, [r7, #12]
 80047c6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80047c8:	f043 0220 	orr.w	r2, r3, #32
 80047cc:	68fb      	ldr	r3, [r7, #12]
 80047ce:	645a      	str	r2, [r3, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 80047d0:	68fb      	ldr	r3, [r7, #12]
 80047d2:	2220      	movs	r2, #32
 80047d4:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
          hi2c->Mode = HAL_I2C_MODE_NONE;
 80047d8:	68fb      	ldr	r3, [r7, #12]
 80047da:	2200      	movs	r2, #0
 80047dc:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 80047e0:	68fb      	ldr	r3, [r7, #12]
 80047e2:	2200      	movs	r2, #0
 80047e4:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

          return HAL_ERROR;
 80047e8:	2301      	movs	r3, #1
 80047ea:	e007      	b.n	80047fc <I2C_WaitOnTXISFlagUntilTimeout+0x86>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 80047ec:	68fb      	ldr	r3, [r7, #12]
 80047ee:	681b      	ldr	r3, [r3, #0]
 80047f0:	699b      	ldr	r3, [r3, #24]
 80047f2:	f003 0302 	and.w	r3, r3, #2
 80047f6:	2b02      	cmp	r3, #2
 80047f8:	d1c4      	bne.n	8004784 <I2C_WaitOnTXISFlagUntilTimeout+0xe>
        }
      }
    }
  }
  return HAL_OK;
 80047fa:	2300      	movs	r3, #0
}
 80047fc:	4618      	mov	r0, r3
 80047fe:	3710      	adds	r7, #16
 8004800:	46bd      	mov	sp, r7
 8004802:	bd80      	pop	{r7, pc}

08004804 <I2C_WaitOnSTOPFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnSTOPFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
                                                        uint32_t Tickstart)
{
 8004804:	b580      	push	{r7, lr}
 8004806:	b084      	sub	sp, #16
 8004808:	af00      	add	r7, sp, #0
 800480a:	60f8      	str	r0, [r7, #12]
 800480c:	60b9      	str	r1, [r7, #8]
 800480e:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8004810:	e02f      	b.n	8004872 <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
  {
    /* Check if an error is detected */
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8004812:	687a      	ldr	r2, [r7, #4]
 8004814:	68b9      	ldr	r1, [r7, #8]
 8004816:	68f8      	ldr	r0, [r7, #12]
 8004818:	f000 f838 	bl	800488c <I2C_IsErrorOccurred>
 800481c:	4603      	mov	r3, r0
 800481e:	2b00      	cmp	r3, #0
 8004820:	d001      	beq.n	8004826 <I2C_WaitOnSTOPFlagUntilTimeout+0x22>
    {
      return HAL_ERROR;
 8004822:	2301      	movs	r3, #1
 8004824:	e02d      	b.n	8004882 <I2C_WaitOnSTOPFlagUntilTimeout+0x7e>
    }

    /* Check for the Timeout */
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004826:	f7fe fcab 	bl	8003180 <HAL_GetTick>
 800482a:	4602      	mov	r2, r0
 800482c:	687b      	ldr	r3, [r7, #4]
 800482e:	1ad3      	subs	r3, r2, r3
 8004830:	68ba      	ldr	r2, [r7, #8]
 8004832:	429a      	cmp	r2, r3
 8004834:	d302      	bcc.n	800483c <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
 8004836:	68bb      	ldr	r3, [r7, #8]
 8004838:	2b00      	cmp	r3, #0
 800483a:	d11a      	bne.n	8004872 <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
    {
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
 800483c:	68fb      	ldr	r3, [r7, #12]
 800483e:	681b      	ldr	r3, [r3, #0]
 8004840:	699b      	ldr	r3, [r3, #24]
 8004842:	f003 0320 	and.w	r3, r3, #32
 8004846:	2b20      	cmp	r3, #32
 8004848:	d013      	beq.n	8004872 <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
      {
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800484a:	68fb      	ldr	r3, [r7, #12]
 800484c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800484e:	f043 0220 	orr.w	r2, r3, #32
 8004852:	68fb      	ldr	r3, [r7, #12]
 8004854:	645a      	str	r2, [r3, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 8004856:	68fb      	ldr	r3, [r7, #12]
 8004858:	2220      	movs	r2, #32
 800485a:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800485e:	68fb      	ldr	r3, [r7, #12]
 8004860:	2200      	movs	r2, #0
 8004862:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 8004866:	68fb      	ldr	r3, [r7, #12]
 8004868:	2200      	movs	r2, #0
 800486a:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

        return HAL_ERROR;
 800486e:	2301      	movs	r3, #1
 8004870:	e007      	b.n	8004882 <I2C_WaitOnSTOPFlagUntilTimeout+0x7e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8004872:	68fb      	ldr	r3, [r7, #12]
 8004874:	681b      	ldr	r3, [r3, #0]
 8004876:	699b      	ldr	r3, [r3, #24]
 8004878:	f003 0320 	and.w	r3, r3, #32
 800487c:	2b20      	cmp	r3, #32
 800487e:	d1c8      	bne.n	8004812 <I2C_WaitOnSTOPFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 8004880:	2300      	movs	r3, #0
}
 8004882:	4618      	mov	r0, r3
 8004884:	3710      	adds	r7, #16
 8004886:	46bd      	mov	sp, r7
 8004888:	bd80      	pop	{r7, pc}
	...

0800488c <I2C_IsErrorOccurred>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsErrorOccurred(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 800488c:	b580      	push	{r7, lr}
 800488e:	b08a      	sub	sp, #40	@ 0x28
 8004890:	af00      	add	r7, sp, #0
 8004892:	60f8      	str	r0, [r7, #12]
 8004894:	60b9      	str	r1, [r7, #8]
 8004896:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8004898:	2300      	movs	r3, #0
 800489a:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
  uint32_t itflag   = hi2c->Instance->ISR;
 800489e:	68fb      	ldr	r3, [r7, #12]
 80048a0:	681b      	ldr	r3, [r3, #0]
 80048a2:	699b      	ldr	r3, [r3, #24]
 80048a4:	61bb      	str	r3, [r7, #24]
  uint32_t error_code = 0;
 80048a6:	2300      	movs	r3, #0
 80048a8:	623b      	str	r3, [r7, #32]
  uint32_t tickstart = Tickstart;
 80048aa:	687b      	ldr	r3, [r7, #4]
 80048ac:	61fb      	str	r3, [r7, #28]
  uint32_t tmp1;
  HAL_I2C_ModeTypeDef tmp2;

  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 80048ae:	69bb      	ldr	r3, [r7, #24]
 80048b0:	f003 0310 	and.w	r3, r3, #16
 80048b4:	2b00      	cmp	r3, #0
 80048b6:	d068      	beq.n	800498a <I2C_IsErrorOccurred+0xfe>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80048b8:	68fb      	ldr	r3, [r7, #12]
 80048ba:	681b      	ldr	r3, [r3, #0]
 80048bc:	2210      	movs	r2, #16
 80048be:	61da      	str	r2, [r3, #28]

    /* Wait until STOP Flag is set or timeout occurred */
    /* AutoEnd should be initiate after AF */
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 80048c0:	e049      	b.n	8004956 <I2C_IsErrorOccurred+0xca>
    {
      /* Check for the Timeout */
      if (Timeout != HAL_MAX_DELAY)
 80048c2:	68bb      	ldr	r3, [r7, #8]
 80048c4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80048c8:	d045      	beq.n	8004956 <I2C_IsErrorOccurred+0xca>
      {
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 80048ca:	f7fe fc59 	bl	8003180 <HAL_GetTick>
 80048ce:	4602      	mov	r2, r0
 80048d0:	69fb      	ldr	r3, [r7, #28]
 80048d2:	1ad3      	subs	r3, r2, r3
 80048d4:	68ba      	ldr	r2, [r7, #8]
 80048d6:	429a      	cmp	r2, r3
 80048d8:	d302      	bcc.n	80048e0 <I2C_IsErrorOccurred+0x54>
 80048da:	68bb      	ldr	r3, [r7, #8]
 80048dc:	2b00      	cmp	r3, #0
 80048de:	d13a      	bne.n	8004956 <I2C_IsErrorOccurred+0xca>
        {
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
 80048e0:	68fb      	ldr	r3, [r7, #12]
 80048e2:	681b      	ldr	r3, [r3, #0]
 80048e4:	685b      	ldr	r3, [r3, #4]
 80048e6:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80048ea:	617b      	str	r3, [r7, #20]
          tmp2 = hi2c->Mode;
 80048ec:	68fb      	ldr	r3, [r7, #12]
 80048ee:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80048f2:	74fb      	strb	r3, [r7, #19]

          /* In case of I2C still busy, try to regenerate a STOP manually */
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 80048f4:	68fb      	ldr	r3, [r7, #12]
 80048f6:	681b      	ldr	r3, [r3, #0]
 80048f8:	699b      	ldr	r3, [r3, #24]
 80048fa:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 80048fe:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8004902:	d121      	bne.n	8004948 <I2C_IsErrorOccurred+0xbc>
 8004904:	697b      	ldr	r3, [r7, #20]
 8004906:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 800490a:	d01d      	beq.n	8004948 <I2C_IsErrorOccurred+0xbc>
              (tmp1 != I2C_CR2_STOP) && \
 800490c:	7cfb      	ldrb	r3, [r7, #19]
 800490e:	2b20      	cmp	r3, #32
 8004910:	d01a      	beq.n	8004948 <I2C_IsErrorOccurred+0xbc>
              (tmp2 != HAL_I2C_MODE_SLAVE))
          {
            /* Generate Stop */
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
 8004912:	68fb      	ldr	r3, [r7, #12]
 8004914:	681b      	ldr	r3, [r3, #0]
 8004916:	685a      	ldr	r2, [r3, #4]
 8004918:	68fb      	ldr	r3, [r7, #12]
 800491a:	681b      	ldr	r3, [r3, #0]
 800491c:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8004920:	605a      	str	r2, [r3, #4]

            /* Update Tick with new reference */
            tickstart = HAL_GetTick();
 8004922:	f7fe fc2d 	bl	8003180 <HAL_GetTick>
 8004926:	61f8      	str	r0, [r7, #28]
          }

          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8004928:	e00e      	b.n	8004948 <I2C_IsErrorOccurred+0xbc>
          {
            /* Check for the Timeout */
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
 800492a:	f7fe fc29 	bl	8003180 <HAL_GetTick>
 800492e:	4602      	mov	r2, r0
 8004930:	69fb      	ldr	r3, [r7, #28]
 8004932:	1ad3      	subs	r3, r2, r3
 8004934:	2b19      	cmp	r3, #25
 8004936:	d907      	bls.n	8004948 <I2C_IsErrorOccurred+0xbc>
            {
              error_code |= HAL_I2C_ERROR_TIMEOUT;
 8004938:	6a3b      	ldr	r3, [r7, #32]
 800493a:	f043 0320 	orr.w	r3, r3, #32
 800493e:	623b      	str	r3, [r7, #32]

              status = HAL_ERROR;
 8004940:	2301      	movs	r3, #1
 8004942:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27

              break;
 8004946:	e006      	b.n	8004956 <I2C_IsErrorOccurred+0xca>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8004948:	68fb      	ldr	r3, [r7, #12]
 800494a:	681b      	ldr	r3, [r3, #0]
 800494c:	699b      	ldr	r3, [r3, #24]
 800494e:	f003 0320 	and.w	r3, r3, #32
 8004952:	2b20      	cmp	r3, #32
 8004954:	d1e9      	bne.n	800492a <I2C_IsErrorOccurred+0x9e>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 8004956:	68fb      	ldr	r3, [r7, #12]
 8004958:	681b      	ldr	r3, [r3, #0]
 800495a:	699b      	ldr	r3, [r3, #24]
 800495c:	f003 0320 	and.w	r3, r3, #32
 8004960:	2b20      	cmp	r3, #32
 8004962:	d003      	beq.n	800496c <I2C_IsErrorOccurred+0xe0>
 8004964:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8004968:	2b00      	cmp	r3, #0
 800496a:	d0aa      	beq.n	80048c2 <I2C_IsErrorOccurred+0x36>
        }
      }
    }

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
 800496c:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8004970:	2b00      	cmp	r3, #0
 8004972:	d103      	bne.n	800497c <I2C_IsErrorOccurred+0xf0>
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004974:	68fb      	ldr	r3, [r7, #12]
 8004976:	681b      	ldr	r3, [r3, #0]
 8004978:	2220      	movs	r2, #32
 800497a:	61da      	str	r2, [r3, #28]
    }

    error_code |= HAL_I2C_ERROR_AF;
 800497c:	6a3b      	ldr	r3, [r7, #32]
 800497e:	f043 0304 	orr.w	r3, r3, #4
 8004982:	623b      	str	r3, [r7, #32]

    status = HAL_ERROR;
 8004984:	2301      	movs	r3, #1
 8004986:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
 800498a:	68fb      	ldr	r3, [r7, #12]
 800498c:	681b      	ldr	r3, [r3, #0]
 800498e:	699b      	ldr	r3, [r3, #24]
 8004990:	61bb      	str	r3, [r7, #24]

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
 8004992:	69bb      	ldr	r3, [r7, #24]
 8004994:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004998:	2b00      	cmp	r3, #0
 800499a:	d00b      	beq.n	80049b4 <I2C_IsErrorOccurred+0x128>
  {
    error_code |= HAL_I2C_ERROR_BERR;
 800499c:	6a3b      	ldr	r3, [r7, #32]
 800499e:	f043 0301 	orr.w	r3, r3, #1
 80049a2:	623b      	str	r3, [r7, #32]

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 80049a4:	68fb      	ldr	r3, [r7, #12]
 80049a6:	681b      	ldr	r3, [r3, #0]
 80049a8:	f44f 7280 	mov.w	r2, #256	@ 0x100
 80049ac:	61da      	str	r2, [r3, #28]

    status = HAL_ERROR;
 80049ae:	2301      	movs	r3, #1
 80049b0:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
 80049b4:	69bb      	ldr	r3, [r7, #24]
 80049b6:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80049ba:	2b00      	cmp	r3, #0
 80049bc:	d00b      	beq.n	80049d6 <I2C_IsErrorOccurred+0x14a>
  {
    error_code |= HAL_I2C_ERROR_OVR;
 80049be:	6a3b      	ldr	r3, [r7, #32]
 80049c0:	f043 0308 	orr.w	r3, r3, #8
 80049c4:	623b      	str	r3, [r7, #32]

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 80049c6:	68fb      	ldr	r3, [r7, #12]
 80049c8:	681b      	ldr	r3, [r3, #0]
 80049ca:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 80049ce:	61da      	str	r2, [r3, #28]

    status = HAL_ERROR;
 80049d0:	2301      	movs	r3, #1
 80049d2:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
 80049d6:	69bb      	ldr	r3, [r7, #24]
 80049d8:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80049dc:	2b00      	cmp	r3, #0
 80049de:	d00b      	beq.n	80049f8 <I2C_IsErrorOccurred+0x16c>
  {
    error_code |= HAL_I2C_ERROR_ARLO;
 80049e0:	6a3b      	ldr	r3, [r7, #32]
 80049e2:	f043 0302 	orr.w	r3, r3, #2
 80049e6:	623b      	str	r3, [r7, #32]

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 80049e8:	68fb      	ldr	r3, [r7, #12]
 80049ea:	681b      	ldr	r3, [r3, #0]
 80049ec:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80049f0:	61da      	str	r2, [r3, #28]

    status = HAL_ERROR;
 80049f2:	2301      	movs	r3, #1
 80049f4:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
  }

  if (status != HAL_OK)
 80049f8:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 80049fc:	2b00      	cmp	r3, #0
 80049fe:	d01c      	beq.n	8004a3a <I2C_IsErrorOccurred+0x1ae>
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);
 8004a00:	68f8      	ldr	r0, [r7, #12]
 8004a02:	f7ff fe3b 	bl	800467c <I2C_Flush_TXDR>

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
 8004a06:	68fb      	ldr	r3, [r7, #12]
 8004a08:	681b      	ldr	r3, [r3, #0]
 8004a0a:	6859      	ldr	r1, [r3, #4]
 8004a0c:	68fb      	ldr	r3, [r7, #12]
 8004a0e:	681a      	ldr	r2, [r3, #0]
 8004a10:	4b0d      	ldr	r3, [pc, #52]	@ (8004a48 <I2C_IsErrorOccurred+0x1bc>)
 8004a12:	400b      	ands	r3, r1
 8004a14:	6053      	str	r3, [r2, #4]

    hi2c->ErrorCode |= error_code;
 8004a16:	68fb      	ldr	r3, [r7, #12]
 8004a18:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8004a1a:	6a3b      	ldr	r3, [r7, #32]
 8004a1c:	431a      	orrs	r2, r3
 8004a1e:	68fb      	ldr	r3, [r7, #12]
 8004a20:	645a      	str	r2, [r3, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 8004a22:	68fb      	ldr	r3, [r7, #12]
 8004a24:	2220      	movs	r2, #32
 8004a26:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004a2a:	68fb      	ldr	r3, [r7, #12]
 8004a2c:	2200      	movs	r2, #0
 8004a2e:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004a32:	68fb      	ldr	r3, [r7, #12]
 8004a34:	2200      	movs	r2, #0
 8004a36:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
  }

  return status;
 8004a3a:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
}
 8004a3e:	4618      	mov	r0, r3
 8004a40:	3728      	adds	r7, #40	@ 0x28
 8004a42:	46bd      	mov	sp, r7
 8004a44:	bd80      	pop	{r7, pc}
 8004a46:	bf00      	nop
 8004a48:	fe00e800 	.word	0xfe00e800

08004a4c <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode,
                               uint32_t Request)
{
 8004a4c:	b480      	push	{r7}
 8004a4e:	b087      	sub	sp, #28
 8004a50:	af00      	add	r7, sp, #0
 8004a52:	60f8      	str	r0, [r7, #12]
 8004a54:	607b      	str	r3, [r7, #4]
 8004a56:	460b      	mov	r3, r1
 8004a58:	817b      	strh	r3, [r7, #10]
 8004a5a:	4613      	mov	r3, r2
 8004a5c:	727b      	strb	r3, [r7, #9]
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004a5e:	897b      	ldrh	r3, [r7, #10]
 8004a60:	f3c3 0209 	ubfx	r2, r3, #0, #10
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
 8004a64:	7a7b      	ldrb	r3, [r7, #9]
 8004a66:	041b      	lsls	r3, r3, #16
 8004a68:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004a6c:	431a      	orrs	r2, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
 8004a6e:	687b      	ldr	r3, [r7, #4]
 8004a70:	431a      	orrs	r2, r3
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004a72:	6a3b      	ldr	r3, [r7, #32]
 8004a74:	4313      	orrs	r3, r2
 8004a76:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8004a7a:	617b      	str	r3, [r7, #20]
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
 8004a7c:	68fb      	ldr	r3, [r7, #12]
 8004a7e:	681b      	ldr	r3, [r3, #0]
 8004a80:	685a      	ldr	r2, [r3, #4]
 8004a82:	6a3b      	ldr	r3, [r7, #32]
 8004a84:	0d5b      	lsrs	r3, r3, #21
 8004a86:	f403 6180 	and.w	r1, r3, #1024	@ 0x400
 8004a8a:	4b08      	ldr	r3, [pc, #32]	@ (8004aac <I2C_TransferConfig+0x60>)
 8004a8c:	430b      	orrs	r3, r1
 8004a8e:	43db      	mvns	r3, r3
 8004a90:	ea02 0103 	and.w	r1, r2, r3
 8004a94:	68fb      	ldr	r3, [r7, #12]
 8004a96:	681b      	ldr	r3, [r3, #0]
 8004a98:	697a      	ldr	r2, [r7, #20]
 8004a9a:	430a      	orrs	r2, r1
 8004a9c:	605a      	str	r2, [r3, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
 8004a9e:	bf00      	nop
 8004aa0:	371c      	adds	r7, #28
 8004aa2:	46bd      	mov	sp, r7
 8004aa4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004aa8:	4770      	bx	lr
 8004aaa:	bf00      	nop
 8004aac:	03ff63ff 	.word	0x03ff63ff

08004ab0 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8004ab0:	b480      	push	{r7}
 8004ab2:	b083      	sub	sp, #12
 8004ab4:	af00      	add	r7, sp, #0
 8004ab6:	6078      	str	r0, [r7, #4]
 8004ab8:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004aba:	687b      	ldr	r3, [r7, #4]
 8004abc:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8004ac0:	b2db      	uxtb	r3, r3
 8004ac2:	2b20      	cmp	r3, #32
 8004ac4:	d138      	bne.n	8004b38 <HAL_I2CEx_ConfigAnalogFilter+0x88>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8004ac6:	687b      	ldr	r3, [r7, #4]
 8004ac8:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8004acc:	2b01      	cmp	r3, #1
 8004ace:	d101      	bne.n	8004ad4 <HAL_I2CEx_ConfigAnalogFilter+0x24>
 8004ad0:	2302      	movs	r3, #2
 8004ad2:	e032      	b.n	8004b3a <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8004ad4:	687b      	ldr	r3, [r7, #4]
 8004ad6:	2201      	movs	r2, #1
 8004ad8:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    hi2c->State = HAL_I2C_STATE_BUSY;
 8004adc:	687b      	ldr	r3, [r7, #4]
 8004ade:	2224      	movs	r2, #36	@ 0x24
 8004ae0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8004ae4:	687b      	ldr	r3, [r7, #4]
 8004ae6:	681b      	ldr	r3, [r3, #0]
 8004ae8:	681a      	ldr	r2, [r3, #0]
 8004aea:	687b      	ldr	r3, [r7, #4]
 8004aec:	681b      	ldr	r3, [r3, #0]
 8004aee:	f022 0201 	bic.w	r2, r2, #1
 8004af2:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 8004af4:	687b      	ldr	r3, [r7, #4]
 8004af6:	681b      	ldr	r3, [r3, #0]
 8004af8:	681a      	ldr	r2, [r3, #0]
 8004afa:	687b      	ldr	r3, [r7, #4]
 8004afc:	681b      	ldr	r3, [r3, #0]
 8004afe:	f422 5280 	bic.w	r2, r2, #4096	@ 0x1000
 8004b02:	601a      	str	r2, [r3, #0]

    /* Set analog filter bit*/
    hi2c->Instance->CR1 |= AnalogFilter;
 8004b04:	687b      	ldr	r3, [r7, #4]
 8004b06:	681b      	ldr	r3, [r3, #0]
 8004b08:	6819      	ldr	r1, [r3, #0]
 8004b0a:	687b      	ldr	r3, [r7, #4]
 8004b0c:	681b      	ldr	r3, [r3, #0]
 8004b0e:	683a      	ldr	r2, [r7, #0]
 8004b10:	430a      	orrs	r2, r1
 8004b12:	601a      	str	r2, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 8004b14:	687b      	ldr	r3, [r7, #4]
 8004b16:	681b      	ldr	r3, [r3, #0]
 8004b18:	681a      	ldr	r2, [r3, #0]
 8004b1a:	687b      	ldr	r3, [r7, #4]
 8004b1c:	681b      	ldr	r3, [r3, #0]
 8004b1e:	f042 0201 	orr.w	r2, r2, #1
 8004b22:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8004b24:	687b      	ldr	r3, [r7, #4]
 8004b26:	2220      	movs	r2, #32
 8004b28:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004b2c:	687b      	ldr	r3, [r7, #4]
 8004b2e:	2200      	movs	r2, #0
 8004b30:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    return HAL_OK;
 8004b34:	2300      	movs	r3, #0
 8004b36:	e000      	b.n	8004b3a <HAL_I2CEx_ConfigAnalogFilter+0x8a>
  }
  else
  {
    return HAL_BUSY;
 8004b38:	2302      	movs	r3, #2
  }
}
 8004b3a:	4618      	mov	r0, r3
 8004b3c:	370c      	adds	r7, #12
 8004b3e:	46bd      	mov	sp, r7
 8004b40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b44:	4770      	bx	lr

08004b46 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8004b46:	b480      	push	{r7}
 8004b48:	b085      	sub	sp, #20
 8004b4a:	af00      	add	r7, sp, #0
 8004b4c:	6078      	str	r0, [r7, #4]
 8004b4e:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004b50:	687b      	ldr	r3, [r7, #4]
 8004b52:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8004b56:	b2db      	uxtb	r3, r3
 8004b58:	2b20      	cmp	r3, #32
 8004b5a:	d139      	bne.n	8004bd0 <HAL_I2CEx_ConfigDigitalFilter+0x8a>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8004b5c:	687b      	ldr	r3, [r7, #4]
 8004b5e:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8004b62:	2b01      	cmp	r3, #1
 8004b64:	d101      	bne.n	8004b6a <HAL_I2CEx_ConfigDigitalFilter+0x24>
 8004b66:	2302      	movs	r3, #2
 8004b68:	e033      	b.n	8004bd2 <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8004b6a:	687b      	ldr	r3, [r7, #4]
 8004b6c:	2201      	movs	r2, #1
 8004b6e:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    hi2c->State = HAL_I2C_STATE_BUSY;
 8004b72:	687b      	ldr	r3, [r7, #4]
 8004b74:	2224      	movs	r2, #36	@ 0x24
 8004b76:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8004b7a:	687b      	ldr	r3, [r7, #4]
 8004b7c:	681b      	ldr	r3, [r3, #0]
 8004b7e:	681a      	ldr	r2, [r3, #0]
 8004b80:	687b      	ldr	r3, [r7, #4]
 8004b82:	681b      	ldr	r3, [r3, #0]
 8004b84:	f022 0201 	bic.w	r2, r2, #1
 8004b88:	601a      	str	r2, [r3, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;
 8004b8a:	687b      	ldr	r3, [r7, #4]
 8004b8c:	681b      	ldr	r3, [r3, #0]
 8004b8e:	681b      	ldr	r3, [r3, #0]
 8004b90:	60fb      	str	r3, [r7, #12]

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
 8004b92:	68fb      	ldr	r3, [r7, #12]
 8004b94:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 8004b98:	60fb      	str	r3, [r7, #12]

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 8004b9a:	683b      	ldr	r3, [r7, #0]
 8004b9c:	021b      	lsls	r3, r3, #8
 8004b9e:	68fa      	ldr	r2, [r7, #12]
 8004ba0:	4313      	orrs	r3, r2
 8004ba2:	60fb      	str	r3, [r7, #12]

    /* Store the new register value */
    hi2c->Instance->CR1 = tmpreg;
 8004ba4:	687b      	ldr	r3, [r7, #4]
 8004ba6:	681b      	ldr	r3, [r3, #0]
 8004ba8:	68fa      	ldr	r2, [r7, #12]
 8004baa:	601a      	str	r2, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 8004bac:	687b      	ldr	r3, [r7, #4]
 8004bae:	681b      	ldr	r3, [r3, #0]
 8004bb0:	681a      	ldr	r2, [r3, #0]
 8004bb2:	687b      	ldr	r3, [r7, #4]
 8004bb4:	681b      	ldr	r3, [r3, #0]
 8004bb6:	f042 0201 	orr.w	r2, r2, #1
 8004bba:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8004bbc:	687b      	ldr	r3, [r7, #4]
 8004bbe:	2220      	movs	r2, #32
 8004bc0:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004bc4:	687b      	ldr	r3, [r7, #4]
 8004bc6:	2200      	movs	r2, #0
 8004bc8:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40

    return HAL_OK;
 8004bcc:	2300      	movs	r3, #0
 8004bce:	e000      	b.n	8004bd2 <HAL_I2CEx_ConfigDigitalFilter+0x8c>
  }
  else
  {
    return HAL_BUSY;
 8004bd0:	2302      	movs	r3, #2
  }
}
 8004bd2:	4618      	mov	r0, r3
 8004bd4:	3714      	adds	r7, #20
 8004bd6:	46bd      	mov	sp, r7
 8004bd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004bdc:	4770      	bx	lr
	...

08004be0 <HAL_LTDC_Init>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_LTDC_Init(LTDC_HandleTypeDef *hltdc)
{
 8004be0:	b580      	push	{r7, lr}
 8004be2:	b084      	sub	sp, #16
 8004be4:	af00      	add	r7, sp, #0
 8004be6:	6078      	str	r0, [r7, #4]
  uint32_t tmp;
  uint32_t tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 8004be8:	687b      	ldr	r3, [r7, #4]
 8004bea:	2b00      	cmp	r3, #0
 8004bec:	d101      	bne.n	8004bf2 <HAL_LTDC_Init+0x12>
  {
    return HAL_ERROR;
 8004bee:	2301      	movs	r3, #1
 8004bf0:	e0bf      	b.n	8004d72 <HAL_LTDC_Init+0x192>
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8004bf2:	687b      	ldr	r3, [r7, #4]
 8004bf4:	f893 30a1 	ldrb.w	r3, [r3, #161]	@ 0xa1
 8004bf8:	b2db      	uxtb	r3, r3
 8004bfa:	2b00      	cmp	r3, #0
 8004bfc:	d106      	bne.n	8004c0c <HAL_LTDC_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hltdc->Lock = HAL_UNLOCKED;
 8004bfe:	687b      	ldr	r3, [r7, #4]
 8004c00:	2200      	movs	r2, #0
 8004c02:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0
    /* Init the low level hardware */
    HAL_LTDC_MspInit(hltdc);
 8004c06:	6878      	ldr	r0, [r7, #4]
 8004c08:	f7fc f91e 	bl	8000e48 <HAL_LTDC_MspInit>
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8004c0c:	687b      	ldr	r3, [r7, #4]
 8004c0e:	2202      	movs	r2, #2
 8004c10:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8004c14:	687b      	ldr	r3, [r7, #4]
 8004c16:	681b      	ldr	r3, [r3, #0]
 8004c18:	699a      	ldr	r2, [r3, #24]
 8004c1a:	687b      	ldr	r3, [r7, #4]
 8004c1c:	681b      	ldr	r3, [r3, #0]
 8004c1e:	f022 4270 	bic.w	r2, r2, #4026531840	@ 0xf0000000
 8004c22:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8004c24:	687b      	ldr	r3, [r7, #4]
 8004c26:	681b      	ldr	r3, [r3, #0]
 8004c28:	6999      	ldr	r1, [r3, #24]
 8004c2a:	687b      	ldr	r3, [r7, #4]
 8004c2c:	685a      	ldr	r2, [r3, #4]
 8004c2e:	687b      	ldr	r3, [r7, #4]
 8004c30:	689b      	ldr	r3, [r3, #8]
 8004c32:	431a      	orrs	r2, r3
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8004c34:	687b      	ldr	r3, [r7, #4]
 8004c36:	68db      	ldr	r3, [r3, #12]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8004c38:	431a      	orrs	r2, r3
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8004c3a:	687b      	ldr	r3, [r7, #4]
 8004c3c:	691b      	ldr	r3, [r3, #16]
 8004c3e:	431a      	orrs	r2, r3
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8004c40:	687b      	ldr	r3, [r7, #4]
 8004c42:	681b      	ldr	r3, [r3, #0]
 8004c44:	430a      	orrs	r2, r1
 8004c46:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8004c48:	687b      	ldr	r3, [r7, #4]
 8004c4a:	681b      	ldr	r3, [r3, #0]
 8004c4c:	6899      	ldr	r1, [r3, #8]
 8004c4e:	687b      	ldr	r3, [r7, #4]
 8004c50:	681a      	ldr	r2, [r3, #0]
 8004c52:	4b4a      	ldr	r3, [pc, #296]	@ (8004d7c <HAL_LTDC_Init+0x19c>)
 8004c54:	400b      	ands	r3, r1
 8004c56:	6093      	str	r3, [r2, #8]
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8004c58:	687b      	ldr	r3, [r7, #4]
 8004c5a:	695b      	ldr	r3, [r3, #20]
 8004c5c:	041b      	lsls	r3, r3, #16
 8004c5e:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8004c60:	687b      	ldr	r3, [r7, #4]
 8004c62:	681b      	ldr	r3, [r3, #0]
 8004c64:	6899      	ldr	r1, [r3, #8]
 8004c66:	687b      	ldr	r3, [r7, #4]
 8004c68:	699a      	ldr	r2, [r3, #24]
 8004c6a:	68fb      	ldr	r3, [r7, #12]
 8004c6c:	431a      	orrs	r2, r3
 8004c6e:	687b      	ldr	r3, [r7, #4]
 8004c70:	681b      	ldr	r3, [r3, #0]
 8004c72:	430a      	orrs	r2, r1
 8004c74:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8004c76:	687b      	ldr	r3, [r7, #4]
 8004c78:	681b      	ldr	r3, [r3, #0]
 8004c7a:	68d9      	ldr	r1, [r3, #12]
 8004c7c:	687b      	ldr	r3, [r7, #4]
 8004c7e:	681a      	ldr	r2, [r3, #0]
 8004c80:	4b3e      	ldr	r3, [pc, #248]	@ (8004d7c <HAL_LTDC_Init+0x19c>)
 8004c82:	400b      	ands	r3, r1
 8004c84:	60d3      	str	r3, [r2, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8004c86:	687b      	ldr	r3, [r7, #4]
 8004c88:	69db      	ldr	r3, [r3, #28]
 8004c8a:	041b      	lsls	r3, r3, #16
 8004c8c:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8004c8e:	687b      	ldr	r3, [r7, #4]
 8004c90:	681b      	ldr	r3, [r3, #0]
 8004c92:	68d9      	ldr	r1, [r3, #12]
 8004c94:	687b      	ldr	r3, [r7, #4]
 8004c96:	6a1a      	ldr	r2, [r3, #32]
 8004c98:	68fb      	ldr	r3, [r7, #12]
 8004c9a:	431a      	orrs	r2, r3
 8004c9c:	687b      	ldr	r3, [r7, #4]
 8004c9e:	681b      	ldr	r3, [r3, #0]
 8004ca0:	430a      	orrs	r2, r1
 8004ca2:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8004ca4:	687b      	ldr	r3, [r7, #4]
 8004ca6:	681b      	ldr	r3, [r3, #0]
 8004ca8:	6919      	ldr	r1, [r3, #16]
 8004caa:	687b      	ldr	r3, [r7, #4]
 8004cac:	681a      	ldr	r2, [r3, #0]
 8004cae:	4b33      	ldr	r3, [pc, #204]	@ (8004d7c <HAL_LTDC_Init+0x19c>)
 8004cb0:	400b      	ands	r3, r1
 8004cb2:	6113      	str	r3, [r2, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8004cb4:	687b      	ldr	r3, [r7, #4]
 8004cb6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004cb8:	041b      	lsls	r3, r3, #16
 8004cba:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8004cbc:	687b      	ldr	r3, [r7, #4]
 8004cbe:	681b      	ldr	r3, [r3, #0]
 8004cc0:	6919      	ldr	r1, [r3, #16]
 8004cc2:	687b      	ldr	r3, [r7, #4]
 8004cc4:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8004cc6:	68fb      	ldr	r3, [r7, #12]
 8004cc8:	431a      	orrs	r2, r3
 8004cca:	687b      	ldr	r3, [r7, #4]
 8004ccc:	681b      	ldr	r3, [r3, #0]
 8004cce:	430a      	orrs	r2, r1
 8004cd0:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8004cd2:	687b      	ldr	r3, [r7, #4]
 8004cd4:	681b      	ldr	r3, [r3, #0]
 8004cd6:	6959      	ldr	r1, [r3, #20]
 8004cd8:	687b      	ldr	r3, [r7, #4]
 8004cda:	681a      	ldr	r2, [r3, #0]
 8004cdc:	4b27      	ldr	r3, [pc, #156]	@ (8004d7c <HAL_LTDC_Init+0x19c>)
 8004cde:	400b      	ands	r3, r1
 8004ce0:	6153      	str	r3, [r2, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8004ce2:	687b      	ldr	r3, [r7, #4]
 8004ce4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004ce6:	041b      	lsls	r3, r3, #16
 8004ce8:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8004cea:	687b      	ldr	r3, [r7, #4]
 8004cec:	681b      	ldr	r3, [r3, #0]
 8004cee:	6959      	ldr	r1, [r3, #20]
 8004cf0:	687b      	ldr	r3, [r7, #4]
 8004cf2:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004cf4:	68fb      	ldr	r3, [r7, #12]
 8004cf6:	431a      	orrs	r2, r3
 8004cf8:	687b      	ldr	r3, [r7, #4]
 8004cfa:	681b      	ldr	r3, [r3, #0]
 8004cfc:	430a      	orrs	r2, r1
 8004cfe:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8004d00:	687b      	ldr	r3, [r7, #4]
 8004d02:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8004d06:	021b      	lsls	r3, r3, #8
 8004d08:	60fb      	str	r3, [r7, #12]
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8004d0a:	687b      	ldr	r3, [r7, #4]
 8004d0c:	f893 3036 	ldrb.w	r3, [r3, #54]	@ 0x36
 8004d10:	041b      	lsls	r3, r3, #16
 8004d12:	60bb      	str	r3, [r7, #8]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8004d14:	687b      	ldr	r3, [r7, #4]
 8004d16:	681b      	ldr	r3, [r3, #0]
 8004d18:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8004d1a:	687b      	ldr	r3, [r7, #4]
 8004d1c:	681b      	ldr	r3, [r3, #0]
 8004d1e:	f002 427f 	and.w	r2, r2, #4278190080	@ 0xff000000
 8004d22:	62da      	str	r2, [r3, #44]	@ 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8004d24:	687b      	ldr	r3, [r7, #4]
 8004d26:	681b      	ldr	r3, [r3, #0]
 8004d28:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8004d2a:	68ba      	ldr	r2, [r7, #8]
 8004d2c:	68fb      	ldr	r3, [r7, #12]
 8004d2e:	4313      	orrs	r3, r2
 8004d30:	687a      	ldr	r2, [r7, #4]
 8004d32:	f892 2034 	ldrb.w	r2, [r2, #52]	@ 0x34
 8004d36:	431a      	orrs	r2, r3
 8004d38:	687b      	ldr	r3, [r7, #4]
 8004d3a:	681b      	ldr	r3, [r3, #0]
 8004d3c:	430a      	orrs	r2, r1
 8004d3e:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8004d40:	687b      	ldr	r3, [r7, #4]
 8004d42:	681b      	ldr	r3, [r3, #0]
 8004d44:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004d46:	687b      	ldr	r3, [r7, #4]
 8004d48:	681b      	ldr	r3, [r3, #0]
 8004d4a:	f042 0206 	orr.w	r2, r2, #6
 8004d4e:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 8004d50:	687b      	ldr	r3, [r7, #4]
 8004d52:	681b      	ldr	r3, [r3, #0]
 8004d54:	699a      	ldr	r2, [r3, #24]
 8004d56:	687b      	ldr	r3, [r7, #4]
 8004d58:	681b      	ldr	r3, [r3, #0]
 8004d5a:	f042 0201 	orr.w	r2, r2, #1
 8004d5e:	619a      	str	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8004d60:	687b      	ldr	r3, [r7, #4]
 8004d62:	2200      	movs	r2, #0
 8004d64:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 8004d68:	687b      	ldr	r3, [r7, #4]
 8004d6a:	2201      	movs	r2, #1
 8004d6c:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

  return HAL_OK;
 8004d70:	2300      	movs	r3, #0
}
 8004d72:	4618      	mov	r0, r3
 8004d74:	3710      	adds	r7, #16
 8004d76:	46bd      	mov	sp, r7
 8004d78:	bd80      	pop	{r7, pc}
 8004d7a:	bf00      	nop
 8004d7c:	f000f800 	.word	0xf000f800

08004d80 <HAL_LTDC_IRQHandler>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
 8004d80:	b580      	push	{r7, lr}
 8004d82:	b084      	sub	sp, #16
 8004d84:	af00      	add	r7, sp, #0
 8004d86:	6078      	str	r0, [r7, #4]
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8004d88:	687b      	ldr	r3, [r7, #4]
 8004d8a:	681b      	ldr	r3, [r3, #0]
 8004d8c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8004d8e:	60fb      	str	r3, [r7, #12]
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8004d90:	687b      	ldr	r3, [r7, #4]
 8004d92:	681b      	ldr	r3, [r3, #0]
 8004d94:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8004d96:	60bb      	str	r3, [r7, #8]

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8004d98:	68fb      	ldr	r3, [r7, #12]
 8004d9a:	f003 0304 	and.w	r3, r3, #4
 8004d9e:	2b00      	cmp	r3, #0
 8004da0:	d023      	beq.n	8004dea <HAL_LTDC_IRQHandler+0x6a>
 8004da2:	68bb      	ldr	r3, [r7, #8]
 8004da4:	f003 0304 	and.w	r3, r3, #4
 8004da8:	2b00      	cmp	r3, #0
 8004daa:	d01e      	beq.n	8004dea <HAL_LTDC_IRQHandler+0x6a>
  {
    /* Disable the transfer Error interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8004dac:	687b      	ldr	r3, [r7, #4]
 8004dae:	681b      	ldr	r3, [r3, #0]
 8004db0:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004db2:	687b      	ldr	r3, [r7, #4]
 8004db4:	681b      	ldr	r3, [r3, #0]
 8004db6:	f022 0204 	bic.w	r2, r2, #4
 8004dba:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Clear the transfer error flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8004dbc:	687b      	ldr	r3, [r7, #4]
 8004dbe:	681b      	ldr	r3, [r3, #0]
 8004dc0:	2204      	movs	r2, #4
 8004dc2:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* Update error code */
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8004dc4:	687b      	ldr	r3, [r7, #4]
 8004dc6:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 8004dca:	f043 0201 	orr.w	r2, r3, #1
 8004dce:	687b      	ldr	r3, [r7, #4]
 8004dd0:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8004dd4:	687b      	ldr	r3, [r7, #4]
 8004dd6:	2204      	movs	r2, #4
 8004dd8:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 8004ddc:	687b      	ldr	r3, [r7, #4]
 8004dde:	2200      	movs	r2, #0
 8004de0:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered error callback*/
    hltdc->ErrorCallback(hltdc);
#else
    /* Call legacy error callback*/
    HAL_LTDC_ErrorCallback(hltdc);
 8004de4:	6878      	ldr	r0, [r7, #4]
 8004de6:	f000 f86f 	bl	8004ec8 <HAL_LTDC_ErrorCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8004dea:	68fb      	ldr	r3, [r7, #12]
 8004dec:	f003 0302 	and.w	r3, r3, #2
 8004df0:	2b00      	cmp	r3, #0
 8004df2:	d023      	beq.n	8004e3c <HAL_LTDC_IRQHandler+0xbc>
 8004df4:	68bb      	ldr	r3, [r7, #8]
 8004df6:	f003 0302 	and.w	r3, r3, #2
 8004dfa:	2b00      	cmp	r3, #0
 8004dfc:	d01e      	beq.n	8004e3c <HAL_LTDC_IRQHandler+0xbc>
  {
    /* Disable the FIFO underrun interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8004dfe:	687b      	ldr	r3, [r7, #4]
 8004e00:	681b      	ldr	r3, [r3, #0]
 8004e02:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004e04:	687b      	ldr	r3, [r7, #4]
 8004e06:	681b      	ldr	r3, [r3, #0]
 8004e08:	f022 0202 	bic.w	r2, r2, #2
 8004e0c:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Clear the FIFO underrun flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8004e0e:	687b      	ldr	r3, [r7, #4]
 8004e10:	681b      	ldr	r3, [r3, #0]
 8004e12:	2202      	movs	r2, #2
 8004e14:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* Update error code */
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8004e16:	687b      	ldr	r3, [r7, #4]
 8004e18:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 8004e1c:	f043 0202 	orr.w	r2, r3, #2
 8004e20:	687b      	ldr	r3, [r7, #4]
 8004e22:	f8c3 20a4 	str.w	r2, [r3, #164]	@ 0xa4

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8004e26:	687b      	ldr	r3, [r7, #4]
 8004e28:	2204      	movs	r2, #4
 8004e2a:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 8004e2e:	687b      	ldr	r3, [r7, #4]
 8004e30:	2200      	movs	r2, #0
 8004e32:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered error callback*/
    hltdc->ErrorCallback(hltdc);
#else
    /* Call legacy error callback*/
    HAL_LTDC_ErrorCallback(hltdc);
 8004e36:	6878      	ldr	r0, [r7, #4]
 8004e38:	f000 f846 	bl	8004ec8 <HAL_LTDC_ErrorCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8004e3c:	68fb      	ldr	r3, [r7, #12]
 8004e3e:	f003 0301 	and.w	r3, r3, #1
 8004e42:	2b00      	cmp	r3, #0
 8004e44:	d01b      	beq.n	8004e7e <HAL_LTDC_IRQHandler+0xfe>
 8004e46:	68bb      	ldr	r3, [r7, #8]
 8004e48:	f003 0301 	and.w	r3, r3, #1
 8004e4c:	2b00      	cmp	r3, #0
 8004e4e:	d016      	beq.n	8004e7e <HAL_LTDC_IRQHandler+0xfe>
  {
    /* Disable the Line interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8004e50:	687b      	ldr	r3, [r7, #4]
 8004e52:	681b      	ldr	r3, [r3, #0]
 8004e54:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004e56:	687b      	ldr	r3, [r7, #4]
 8004e58:	681b      	ldr	r3, [r3, #0]
 8004e5a:	f022 0201 	bic.w	r2, r2, #1
 8004e5e:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Clear the Line interrupt flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8004e60:	687b      	ldr	r3, [r7, #4]
 8004e62:	681b      	ldr	r3, [r3, #0]
 8004e64:	2201      	movs	r2, #1
 8004e66:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_READY;
 8004e68:	687b      	ldr	r3, [r7, #4]
 8004e6a:	2201      	movs	r2, #1
 8004e6c:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 8004e70:	687b      	ldr	r3, [r7, #4]
 8004e72:	2200      	movs	r2, #0
 8004e74:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered Line Event callback */
    hltdc->LineEventCallback(hltdc);
#else
    /*Call Legacy Line Event callback */
    HAL_LTDC_LineEventCallback(hltdc);
 8004e78:	6878      	ldr	r0, [r7, #4]
 8004e7a:	f00c fa2b 	bl	80112d4 <HAL_LTDC_LineEventCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8004e7e:	68fb      	ldr	r3, [r7, #12]
 8004e80:	f003 0308 	and.w	r3, r3, #8
 8004e84:	2b00      	cmp	r3, #0
 8004e86:	d01b      	beq.n	8004ec0 <HAL_LTDC_IRQHandler+0x140>
 8004e88:	68bb      	ldr	r3, [r7, #8]
 8004e8a:	f003 0308 	and.w	r3, r3, #8
 8004e8e:	2b00      	cmp	r3, #0
 8004e90:	d016      	beq.n	8004ec0 <HAL_LTDC_IRQHandler+0x140>
  {
    /* Disable the register reload interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8004e92:	687b      	ldr	r3, [r7, #4]
 8004e94:	681b      	ldr	r3, [r3, #0]
 8004e96:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004e98:	687b      	ldr	r3, [r7, #4]
 8004e9a:	681b      	ldr	r3, [r3, #0]
 8004e9c:	f022 0208 	bic.w	r2, r2, #8
 8004ea0:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Clear the register reload flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8004ea2:	687b      	ldr	r3, [r7, #4]
 8004ea4:	681b      	ldr	r3, [r3, #0]
 8004ea6:	2208      	movs	r2, #8
 8004ea8:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_READY;
 8004eaa:	687b      	ldr	r3, [r7, #4]
 8004eac:	2201      	movs	r2, #1
 8004eae:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 8004eb2:	687b      	ldr	r3, [r7, #4]
 8004eb4:	2200      	movs	r2, #0
 8004eb6:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered reload Event callback */
    hltdc->ReloadEventCallback(hltdc);
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
 8004eba:	6878      	ldr	r0, [r7, #4]
 8004ebc:	f000 f80e 	bl	8004edc <HAL_LTDC_ReloadEventCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 8004ec0:	bf00      	nop
 8004ec2:	3710      	adds	r7, #16
 8004ec4:	46bd      	mov	sp, r7
 8004ec6:	bd80      	pop	{r7, pc}

08004ec8 <HAL_LTDC_ErrorCallback>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
{
 8004ec8:	b480      	push	{r7}
 8004eca:	b083      	sub	sp, #12
 8004ecc:	af00      	add	r7, sp, #0
 8004ece:	6078      	str	r0, [r7, #4]
  UNUSED(hltdc);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_LTDC_ErrorCallback could be implemented in the user file
   */
}
 8004ed0:	bf00      	nop
 8004ed2:	370c      	adds	r7, #12
 8004ed4:	46bd      	mov	sp, r7
 8004ed6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004eda:	4770      	bx	lr

08004edc <HAL_LTDC_ReloadEventCallback>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
{
 8004edc:	b480      	push	{r7}
 8004ede:	b083      	sub	sp, #12
 8004ee0:	af00      	add	r7, sp, #0
 8004ee2:	6078      	str	r0, [r7, #4]
  UNUSED(hltdc);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_LTDC_ReloadEvenCallback could be implemented in the user file
   */
}
 8004ee4:	bf00      	nop
 8004ee6:	370c      	adds	r7, #12
 8004ee8:	46bd      	mov	sp, r7
 8004eea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004eee:	4770      	bx	lr

08004ef0 <HAL_LTDC_ConfigLayer>:
  *                    This parameter can be one of the following values:
  *                    LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_LTDC_ConfigLayer(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 8004ef0:	b5b0      	push	{r4, r5, r7, lr}
 8004ef2:	b084      	sub	sp, #16
 8004ef4:	af00      	add	r7, sp, #0
 8004ef6:	60f8      	str	r0, [r7, #12]
 8004ef8:	60b9      	str	r1, [r7, #8]
 8004efa:	607a      	str	r2, [r7, #4]
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 8004efc:	68fb      	ldr	r3, [r7, #12]
 8004efe:	f893 30a0 	ldrb.w	r3, [r3, #160]	@ 0xa0
 8004f02:	2b01      	cmp	r3, #1
 8004f04:	d101      	bne.n	8004f0a <HAL_LTDC_ConfigLayer+0x1a>
 8004f06:	2302      	movs	r3, #2
 8004f08:	e02c      	b.n	8004f64 <HAL_LTDC_ConfigLayer+0x74>
 8004f0a:	68fb      	ldr	r3, [r7, #12]
 8004f0c:	2201      	movs	r2, #1
 8004f0e:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8004f12:	68fb      	ldr	r3, [r7, #12]
 8004f14:	2202      	movs	r2, #2
 8004f16:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8004f1a:	68fa      	ldr	r2, [r7, #12]
 8004f1c:	687b      	ldr	r3, [r7, #4]
 8004f1e:	2134      	movs	r1, #52	@ 0x34
 8004f20:	fb01 f303 	mul.w	r3, r1, r3
 8004f24:	4413      	add	r3, r2
 8004f26:	f103 0238 	add.w	r2, r3, #56	@ 0x38
 8004f2a:	68bb      	ldr	r3, [r7, #8]
 8004f2c:	4614      	mov	r4, r2
 8004f2e:	461d      	mov	r5, r3
 8004f30:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004f32:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8004f34:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004f36:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8004f38:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004f3a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8004f3c:	682b      	ldr	r3, [r5, #0]
 8004f3e:	6023      	str	r3, [r4, #0]

  /* Configure the LTDC Layer */
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8004f40:	687a      	ldr	r2, [r7, #4]
 8004f42:	68b9      	ldr	r1, [r7, #8]
 8004f44:	68f8      	ldr	r0, [r7, #12]
 8004f46:	f000 f849 	bl	8004fdc <LTDC_SetConfig>

  /* Set the Immediate Reload type */
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8004f4a:	68fb      	ldr	r3, [r7, #12]
 8004f4c:	681b      	ldr	r3, [r3, #0]
 8004f4e:	2201      	movs	r2, #1
 8004f50:	625a      	str	r2, [r3, #36]	@ 0x24

  /* Initialize the LTDC state*/
  hltdc->State  = HAL_LTDC_STATE_READY;
 8004f52:	68fb      	ldr	r3, [r7, #12]
 8004f54:	2201      	movs	r2, #1
 8004f56:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

  /* Process unlocked */
  __HAL_UNLOCK(hltdc);
 8004f5a:	68fb      	ldr	r3, [r7, #12]
 8004f5c:	2200      	movs	r2, #0
 8004f5e:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0

  return HAL_OK;
 8004f62:	2300      	movs	r3, #0
}
 8004f64:	4618      	mov	r0, r3
 8004f66:	3710      	adds	r7, #16
 8004f68:	46bd      	mov	sp, r7
 8004f6a:	bdb0      	pop	{r4, r5, r7, pc}

08004f6c <HAL_LTDC_ProgramLineEvent>:
  * @param  Line    Line Interrupt Position.
  * @note   User application may resort to HAL_LTDC_LineEventCallback() at line interrupt generation.
  * @retval  HAL status
  */
HAL_StatusTypeDef HAL_LTDC_ProgramLineEvent(LTDC_HandleTypeDef *hltdc, uint32_t Line)
{
 8004f6c:	b480      	push	{r7}
 8004f6e:	b083      	sub	sp, #12
 8004f70:	af00      	add	r7, sp, #0
 8004f72:	6078      	str	r0, [r7, #4]
 8004f74:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_LTDC_LIPOS(Line));

  /* Process locked */
  __HAL_LOCK(hltdc);
 8004f76:	687b      	ldr	r3, [r7, #4]
 8004f78:	f893 30a0 	ldrb.w	r3, [r3, #160]	@ 0xa0
 8004f7c:	2b01      	cmp	r3, #1
 8004f7e:	d101      	bne.n	8004f84 <HAL_LTDC_ProgramLineEvent+0x18>
 8004f80:	2302      	movs	r3, #2
 8004f82:	e023      	b.n	8004fcc <HAL_LTDC_ProgramLineEvent+0x60>
 8004f84:	687b      	ldr	r3, [r7, #4]
 8004f86:	2201      	movs	r2, #1
 8004f88:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8004f8c:	687b      	ldr	r3, [r7, #4]
 8004f8e:	2202      	movs	r2, #2
 8004f90:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

  /* Disable the Line interrupt */
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8004f94:	687b      	ldr	r3, [r7, #4]
 8004f96:	681b      	ldr	r3, [r3, #0]
 8004f98:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004f9a:	687b      	ldr	r3, [r7, #4]
 8004f9c:	681b      	ldr	r3, [r3, #0]
 8004f9e:	f022 0201 	bic.w	r2, r2, #1
 8004fa2:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Set the Line Interrupt position */
  LTDC->LIPCR = (uint32_t)Line;
 8004fa4:	4a0c      	ldr	r2, [pc, #48]	@ (8004fd8 <HAL_LTDC_ProgramLineEvent+0x6c>)
 8004fa6:	683b      	ldr	r3, [r7, #0]
 8004fa8:	6413      	str	r3, [r2, #64]	@ 0x40

  /* Enable the Line interrupt */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8004faa:	687b      	ldr	r3, [r7, #4]
 8004fac:	681b      	ldr	r3, [r3, #0]
 8004fae:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004fb0:	687b      	ldr	r3, [r7, #4]
 8004fb2:	681b      	ldr	r3, [r3, #0]
 8004fb4:	f042 0201 	orr.w	r2, r2, #1
 8004fb8:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Change the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 8004fba:	687b      	ldr	r3, [r7, #4]
 8004fbc:	2201      	movs	r2, #1
 8004fbe:	f883 20a1 	strb.w	r2, [r3, #161]	@ 0xa1

  /* Process unlocked */
  __HAL_UNLOCK(hltdc);
 8004fc2:	687b      	ldr	r3, [r7, #4]
 8004fc4:	2200      	movs	r2, #0
 8004fc6:	f883 20a0 	strb.w	r2, [r3, #160]	@ 0xa0

  return HAL_OK;
 8004fca:	2300      	movs	r3, #0
}
 8004fcc:	4618      	mov	r0, r3
 8004fce:	370c      	adds	r7, #12
 8004fd0:	46bd      	mov	sp, r7
 8004fd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004fd6:	4770      	bx	lr
 8004fd8:	50001000 	.word	0x50001000

08004fdc <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 8004fdc:	b480      	push	{r7}
 8004fde:	b089      	sub	sp, #36	@ 0x24
 8004fe0:	af00      	add	r7, sp, #0
 8004fe2:	60f8      	str	r0, [r7, #12]
 8004fe4:	60b9      	str	r1, [r7, #8]
 8004fe6:	607a      	str	r2, [r7, #4]
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8004fe8:	68bb      	ldr	r3, [r7, #8]
 8004fea:	685a      	ldr	r2, [r3, #4]
 8004fec:	68fb      	ldr	r3, [r7, #12]
 8004fee:	681b      	ldr	r3, [r3, #0]
 8004ff0:	68db      	ldr	r3, [r3, #12]
 8004ff2:	0c1b      	lsrs	r3, r3, #16
 8004ff4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004ff8:	4413      	add	r3, r2
 8004ffa:	041b      	lsls	r3, r3, #16
 8004ffc:	61fb      	str	r3, [r7, #28]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8004ffe:	68fb      	ldr	r3, [r7, #12]
 8005000:	681b      	ldr	r3, [r3, #0]
 8005002:	461a      	mov	r2, r3
 8005004:	687b      	ldr	r3, [r7, #4]
 8005006:	01db      	lsls	r3, r3, #7
 8005008:	4413      	add	r3, r2
 800500a:	3384      	adds	r3, #132	@ 0x84
 800500c:	685b      	ldr	r3, [r3, #4]
 800500e:	68fa      	ldr	r2, [r7, #12]
 8005010:	6812      	ldr	r2, [r2, #0]
 8005012:	4611      	mov	r1, r2
 8005014:	687a      	ldr	r2, [r7, #4]
 8005016:	01d2      	lsls	r2, r2, #7
 8005018:	440a      	add	r2, r1
 800501a:	3284      	adds	r2, #132	@ 0x84
 800501c:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
 8005020:	6053      	str	r3, [r2, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8005022:	68bb      	ldr	r3, [r7, #8]
 8005024:	681a      	ldr	r2, [r3, #0]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005026:	68fb      	ldr	r3, [r7, #12]
 8005028:	681b      	ldr	r3, [r3, #0]
 800502a:	68db      	ldr	r3, [r3, #12]
 800502c:	0c1b      	lsrs	r3, r3, #16
 800502e:	f3c3 030b 	ubfx	r3, r3, #0, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8005032:	4413      	add	r3, r2
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005034:	1c5a      	adds	r2, r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8005036:	68fb      	ldr	r3, [r7, #12]
 8005038:	681b      	ldr	r3, [r3, #0]
 800503a:	4619      	mov	r1, r3
 800503c:	687b      	ldr	r3, [r7, #4]
 800503e:	01db      	lsls	r3, r3, #7
 8005040:	440b      	add	r3, r1
 8005042:	3384      	adds	r3, #132	@ 0x84
 8005044:	4619      	mov	r1, r3
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005046:	69fb      	ldr	r3, [r7, #28]
 8005048:	4313      	orrs	r3, r2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 800504a:	604b      	str	r3, [r1, #4]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800504c:	68bb      	ldr	r3, [r7, #8]
 800504e:	68da      	ldr	r2, [r3, #12]
 8005050:	68fb      	ldr	r3, [r7, #12]
 8005052:	681b      	ldr	r3, [r3, #0]
 8005054:	68db      	ldr	r3, [r3, #12]
 8005056:	f3c3 030a 	ubfx	r3, r3, #0, #11
 800505a:	4413      	add	r3, r2
 800505c:	041b      	lsls	r3, r3, #16
 800505e:	61fb      	str	r3, [r7, #28]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8005060:	68fb      	ldr	r3, [r7, #12]
 8005062:	681b      	ldr	r3, [r3, #0]
 8005064:	461a      	mov	r2, r3
 8005066:	687b      	ldr	r3, [r7, #4]
 8005068:	01db      	lsls	r3, r3, #7
 800506a:	4413      	add	r3, r2
 800506c:	3384      	adds	r3, #132	@ 0x84
 800506e:	689b      	ldr	r3, [r3, #8]
 8005070:	68fa      	ldr	r2, [r7, #12]
 8005072:	6812      	ldr	r2, [r2, #0]
 8005074:	4611      	mov	r1, r2
 8005076:	687a      	ldr	r2, [r7, #4]
 8005078:	01d2      	lsls	r2, r2, #7
 800507a:	440a      	add	r2, r1
 800507c:	3284      	adds	r2, #132	@ 0x84
 800507e:	f403 4370 	and.w	r3, r3, #61440	@ 0xf000
 8005082:	6093      	str	r3, [r2, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8005084:	68bb      	ldr	r3, [r7, #8]
 8005086:	689a      	ldr	r2, [r3, #8]
 8005088:	68fb      	ldr	r3, [r7, #12]
 800508a:	681b      	ldr	r3, [r3, #0]
 800508c:	68db      	ldr	r3, [r3, #12]
 800508e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8005092:	4413      	add	r3, r2
 8005094:	1c5a      	adds	r2, r3, #1
 8005096:	68fb      	ldr	r3, [r7, #12]
 8005098:	681b      	ldr	r3, [r3, #0]
 800509a:	4619      	mov	r1, r3
 800509c:	687b      	ldr	r3, [r7, #4]
 800509e:	01db      	lsls	r3, r3, #7
 80050a0:	440b      	add	r3, r1
 80050a2:	3384      	adds	r3, #132	@ 0x84
 80050a4:	4619      	mov	r1, r3
 80050a6:	69fb      	ldr	r3, [r7, #28]
 80050a8:	4313      	orrs	r3, r2
 80050aa:	608b      	str	r3, [r1, #8]

  /* Specifies the pixel format */
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80050ac:	68fb      	ldr	r3, [r7, #12]
 80050ae:	681b      	ldr	r3, [r3, #0]
 80050b0:	461a      	mov	r2, r3
 80050b2:	687b      	ldr	r3, [r7, #4]
 80050b4:	01db      	lsls	r3, r3, #7
 80050b6:	4413      	add	r3, r2
 80050b8:	3384      	adds	r3, #132	@ 0x84
 80050ba:	691b      	ldr	r3, [r3, #16]
 80050bc:	68fa      	ldr	r2, [r7, #12]
 80050be:	6812      	ldr	r2, [r2, #0]
 80050c0:	4611      	mov	r1, r2
 80050c2:	687a      	ldr	r2, [r7, #4]
 80050c4:	01d2      	lsls	r2, r2, #7
 80050c6:	440a      	add	r2, r1
 80050c8:	3284      	adds	r2, #132	@ 0x84
 80050ca:	f023 0307 	bic.w	r3, r3, #7
 80050ce:	6113      	str	r3, [r2, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80050d0:	68fb      	ldr	r3, [r7, #12]
 80050d2:	681b      	ldr	r3, [r3, #0]
 80050d4:	461a      	mov	r2, r3
 80050d6:	687b      	ldr	r3, [r7, #4]
 80050d8:	01db      	lsls	r3, r3, #7
 80050da:	4413      	add	r3, r2
 80050dc:	3384      	adds	r3, #132	@ 0x84
 80050de:	461a      	mov	r2, r3
 80050e0:	68bb      	ldr	r3, [r7, #8]
 80050e2:	691b      	ldr	r3, [r3, #16]
 80050e4:	6113      	str	r3, [r2, #16]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 80050e6:	68bb      	ldr	r3, [r7, #8]
 80050e8:	f893 3031 	ldrb.w	r3, [r3, #49]	@ 0x31
 80050ec:	021b      	lsls	r3, r3, #8
 80050ee:	61fb      	str	r3, [r7, #28]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 80050f0:	68bb      	ldr	r3, [r7, #8]
 80050f2:	f893 3032 	ldrb.w	r3, [r3, #50]	@ 0x32
 80050f6:	041b      	lsls	r3, r3, #16
 80050f8:	61bb      	str	r3, [r7, #24]
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 80050fa:	68bb      	ldr	r3, [r7, #8]
 80050fc:	699b      	ldr	r3, [r3, #24]
 80050fe:	061b      	lsls	r3, r3, #24
 8005100:	617b      	str	r3, [r7, #20]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8005102:	68fb      	ldr	r3, [r7, #12]
 8005104:	681b      	ldr	r3, [r3, #0]
 8005106:	461a      	mov	r2, r3
 8005108:	687b      	ldr	r3, [r7, #4]
 800510a:	01db      	lsls	r3, r3, #7
 800510c:	4413      	add	r3, r2
 800510e:	3384      	adds	r3, #132	@ 0x84
 8005110:	699b      	ldr	r3, [r3, #24]
 8005112:	68fb      	ldr	r3, [r7, #12]
 8005114:	681b      	ldr	r3, [r3, #0]
 8005116:	461a      	mov	r2, r3
 8005118:	687b      	ldr	r3, [r7, #4]
 800511a:	01db      	lsls	r3, r3, #7
 800511c:	4413      	add	r3, r2
 800511e:	3384      	adds	r3, #132	@ 0x84
 8005120:	461a      	mov	r2, r3
 8005122:	2300      	movs	r3, #0
 8005124:	6193      	str	r3, [r2, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8005126:	68bb      	ldr	r3, [r7, #8]
 8005128:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 800512c:	461a      	mov	r2, r3
 800512e:	69fb      	ldr	r3, [r7, #28]
 8005130:	431a      	orrs	r2, r3
 8005132:	69bb      	ldr	r3, [r7, #24]
 8005134:	431a      	orrs	r2, r3
 8005136:	68fb      	ldr	r3, [r7, #12]
 8005138:	681b      	ldr	r3, [r3, #0]
 800513a:	4619      	mov	r1, r3
 800513c:	687b      	ldr	r3, [r7, #4]
 800513e:	01db      	lsls	r3, r3, #7
 8005140:	440b      	add	r3, r1
 8005142:	3384      	adds	r3, #132	@ 0x84
 8005144:	4619      	mov	r1, r3
 8005146:	697b      	ldr	r3, [r7, #20]
 8005148:	4313      	orrs	r3, r2
 800514a:	618b      	str	r3, [r1, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800514c:	68fb      	ldr	r3, [r7, #12]
 800514e:	681b      	ldr	r3, [r3, #0]
 8005150:	461a      	mov	r2, r3
 8005152:	687b      	ldr	r3, [r7, #4]
 8005154:	01db      	lsls	r3, r3, #7
 8005156:	4413      	add	r3, r2
 8005158:	3384      	adds	r3, #132	@ 0x84
 800515a:	695b      	ldr	r3, [r3, #20]
 800515c:	68fa      	ldr	r2, [r7, #12]
 800515e:	6812      	ldr	r2, [r2, #0]
 8005160:	4611      	mov	r1, r2
 8005162:	687a      	ldr	r2, [r7, #4]
 8005164:	01d2      	lsls	r2, r2, #7
 8005166:	440a      	add	r2, r1
 8005168:	3284      	adds	r2, #132	@ 0x84
 800516a:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 800516e:	6153      	str	r3, [r2, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8005170:	68fb      	ldr	r3, [r7, #12]
 8005172:	681b      	ldr	r3, [r3, #0]
 8005174:	461a      	mov	r2, r3
 8005176:	687b      	ldr	r3, [r7, #4]
 8005178:	01db      	lsls	r3, r3, #7
 800517a:	4413      	add	r3, r2
 800517c:	3384      	adds	r3, #132	@ 0x84
 800517e:	461a      	mov	r2, r3
 8005180:	68bb      	ldr	r3, [r7, #8]
 8005182:	695b      	ldr	r3, [r3, #20]
 8005184:	6153      	str	r3, [r2, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8005186:	68fb      	ldr	r3, [r7, #12]
 8005188:	681b      	ldr	r3, [r3, #0]
 800518a:	461a      	mov	r2, r3
 800518c:	687b      	ldr	r3, [r7, #4]
 800518e:	01db      	lsls	r3, r3, #7
 8005190:	4413      	add	r3, r2
 8005192:	3384      	adds	r3, #132	@ 0x84
 8005194:	69da      	ldr	r2, [r3, #28]
 8005196:	68fb      	ldr	r3, [r7, #12]
 8005198:	681b      	ldr	r3, [r3, #0]
 800519a:	4619      	mov	r1, r3
 800519c:	687b      	ldr	r3, [r7, #4]
 800519e:	01db      	lsls	r3, r3, #7
 80051a0:	440b      	add	r3, r1
 80051a2:	3384      	adds	r3, #132	@ 0x84
 80051a4:	4619      	mov	r1, r3
 80051a6:	4b58      	ldr	r3, [pc, #352]	@ (8005308 <LTDC_SetConfig+0x32c>)
 80051a8:	4013      	ands	r3, r2
 80051aa:	61cb      	str	r3, [r1, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 80051ac:	68bb      	ldr	r3, [r7, #8]
 80051ae:	69da      	ldr	r2, [r3, #28]
 80051b0:	68bb      	ldr	r3, [r7, #8]
 80051b2:	6a1b      	ldr	r3, [r3, #32]
 80051b4:	68f9      	ldr	r1, [r7, #12]
 80051b6:	6809      	ldr	r1, [r1, #0]
 80051b8:	4608      	mov	r0, r1
 80051ba:	6879      	ldr	r1, [r7, #4]
 80051bc:	01c9      	lsls	r1, r1, #7
 80051be:	4401      	add	r1, r0
 80051c0:	3184      	adds	r1, #132	@ 0x84
 80051c2:	4313      	orrs	r3, r2
 80051c4:	61cb      	str	r3, [r1, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80051c6:	68fb      	ldr	r3, [r7, #12]
 80051c8:	681b      	ldr	r3, [r3, #0]
 80051ca:	461a      	mov	r2, r3
 80051cc:	687b      	ldr	r3, [r7, #4]
 80051ce:	01db      	lsls	r3, r3, #7
 80051d0:	4413      	add	r3, r2
 80051d2:	3384      	adds	r3, #132	@ 0x84
 80051d4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80051d6:	68fb      	ldr	r3, [r7, #12]
 80051d8:	681b      	ldr	r3, [r3, #0]
 80051da:	461a      	mov	r2, r3
 80051dc:	687b      	ldr	r3, [r7, #4]
 80051de:	01db      	lsls	r3, r3, #7
 80051e0:	4413      	add	r3, r2
 80051e2:	3384      	adds	r3, #132	@ 0x84
 80051e4:	461a      	mov	r2, r3
 80051e6:	2300      	movs	r3, #0
 80051e8:	6293      	str	r3, [r2, #40]	@ 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80051ea:	68fb      	ldr	r3, [r7, #12]
 80051ec:	681b      	ldr	r3, [r3, #0]
 80051ee:	461a      	mov	r2, r3
 80051f0:	687b      	ldr	r3, [r7, #4]
 80051f2:	01db      	lsls	r3, r3, #7
 80051f4:	4413      	add	r3, r2
 80051f6:	3384      	adds	r3, #132	@ 0x84
 80051f8:	461a      	mov	r2, r3
 80051fa:	68bb      	ldr	r3, [r7, #8]
 80051fc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80051fe:	6293      	str	r3, [r2, #40]	@ 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8005200:	68bb      	ldr	r3, [r7, #8]
 8005202:	691b      	ldr	r3, [r3, #16]
 8005204:	2b00      	cmp	r3, #0
 8005206:	d102      	bne.n	800520e <LTDC_SetConfig+0x232>
  {
    tmp = 4U;
 8005208:	2304      	movs	r3, #4
 800520a:	61fb      	str	r3, [r7, #28]
 800520c:	e01b      	b.n	8005246 <LTDC_SetConfig+0x26a>
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 800520e:	68bb      	ldr	r3, [r7, #8]
 8005210:	691b      	ldr	r3, [r3, #16]
 8005212:	2b01      	cmp	r3, #1
 8005214:	d102      	bne.n	800521c <LTDC_SetConfig+0x240>
  {
    tmp = 3U;
 8005216:	2303      	movs	r3, #3
 8005218:	61fb      	str	r3, [r7, #28]
 800521a:	e014      	b.n	8005246 <LTDC_SetConfig+0x26a>
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 800521c:	68bb      	ldr	r3, [r7, #8]
 800521e:	691b      	ldr	r3, [r3, #16]
 8005220:	2b04      	cmp	r3, #4
 8005222:	d00b      	beq.n	800523c <LTDC_SetConfig+0x260>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
 8005224:	68bb      	ldr	r3, [r7, #8]
 8005226:	691b      	ldr	r3, [r3, #16]
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8005228:	2b02      	cmp	r3, #2
 800522a:	d007      	beq.n	800523c <LTDC_SetConfig+0x260>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 800522c:	68bb      	ldr	r3, [r7, #8]
 800522e:	691b      	ldr	r3, [r3, #16]
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
 8005230:	2b03      	cmp	r3, #3
 8005232:	d003      	beq.n	800523c <LTDC_SetConfig+0x260>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_AL88))
 8005234:	68bb      	ldr	r3, [r7, #8]
 8005236:	691b      	ldr	r3, [r3, #16]
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 8005238:	2b07      	cmp	r3, #7
 800523a:	d102      	bne.n	8005242 <LTDC_SetConfig+0x266>
  {
    tmp = 2U;
 800523c:	2302      	movs	r3, #2
 800523e:	61fb      	str	r3, [r7, #28]
 8005240:	e001      	b.n	8005246 <LTDC_SetConfig+0x26a>
  }
  else
  {
    tmp = 1U;
 8005242:	2301      	movs	r3, #1
 8005244:	61fb      	str	r3, [r7, #28]
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8005246:	68fb      	ldr	r3, [r7, #12]
 8005248:	681b      	ldr	r3, [r3, #0]
 800524a:	461a      	mov	r2, r3
 800524c:	687b      	ldr	r3, [r7, #4]
 800524e:	01db      	lsls	r3, r3, #7
 8005250:	4413      	add	r3, r2
 8005252:	3384      	adds	r3, #132	@ 0x84
 8005254:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005256:	68fa      	ldr	r2, [r7, #12]
 8005258:	6812      	ldr	r2, [r2, #0]
 800525a:	4611      	mov	r1, r2
 800525c:	687a      	ldr	r2, [r7, #4]
 800525e:	01d2      	lsls	r2, r2, #7
 8005260:	440a      	add	r2, r1
 8005262:	3284      	adds	r2, #132	@ 0x84
 8005264:	f003 23e0 	and.w	r3, r3, #3758153728	@ 0xe000e000
 8005268:	62d3      	str	r3, [r2, #44]	@ 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
 800526a:	68bb      	ldr	r3, [r7, #8]
 800526c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800526e:	69fa      	ldr	r2, [r7, #28]
 8005270:	fb02 f303 	mul.w	r3, r2, r3
 8005274:	041a      	lsls	r2, r3, #16
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 7U));
 8005276:	68bb      	ldr	r3, [r7, #8]
 8005278:	6859      	ldr	r1, [r3, #4]
 800527a:	68bb      	ldr	r3, [r7, #8]
 800527c:	681b      	ldr	r3, [r3, #0]
 800527e:	1acb      	subs	r3, r1, r3
 8005280:	69f9      	ldr	r1, [r7, #28]
 8005282:	fb01 f303 	mul.w	r3, r1, r3
 8005286:	3307      	adds	r3, #7
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) |
 8005288:	68f9      	ldr	r1, [r7, #12]
 800528a:	6809      	ldr	r1, [r1, #0]
 800528c:	4608      	mov	r0, r1
 800528e:	6879      	ldr	r1, [r7, #4]
 8005290:	01c9      	lsls	r1, r1, #7
 8005292:	4401      	add	r1, r0
 8005294:	3184      	adds	r1, #132	@ 0x84
 8005296:	4313      	orrs	r3, r2
 8005298:	62cb      	str	r3, [r1, #44]	@ 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800529a:	68fb      	ldr	r3, [r7, #12]
 800529c:	681b      	ldr	r3, [r3, #0]
 800529e:	461a      	mov	r2, r3
 80052a0:	687b      	ldr	r3, [r7, #4]
 80052a2:	01db      	lsls	r3, r3, #7
 80052a4:	4413      	add	r3, r2
 80052a6:	3384      	adds	r3, #132	@ 0x84
 80052a8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80052aa:	68fb      	ldr	r3, [r7, #12]
 80052ac:	681b      	ldr	r3, [r3, #0]
 80052ae:	4619      	mov	r1, r3
 80052b0:	687b      	ldr	r3, [r7, #4]
 80052b2:	01db      	lsls	r3, r3, #7
 80052b4:	440b      	add	r3, r1
 80052b6:	3384      	adds	r3, #132	@ 0x84
 80052b8:	4619      	mov	r1, r3
 80052ba:	4b14      	ldr	r3, [pc, #80]	@ (800530c <LTDC_SetConfig+0x330>)
 80052bc:	4013      	ands	r3, r2
 80052be:	630b      	str	r3, [r1, #48]	@ 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80052c0:	68fb      	ldr	r3, [r7, #12]
 80052c2:	681b      	ldr	r3, [r3, #0]
 80052c4:	461a      	mov	r2, r3
 80052c6:	687b      	ldr	r3, [r7, #4]
 80052c8:	01db      	lsls	r3, r3, #7
 80052ca:	4413      	add	r3, r2
 80052cc:	3384      	adds	r3, #132	@ 0x84
 80052ce:	461a      	mov	r2, r3
 80052d0:	68bb      	ldr	r3, [r7, #8]
 80052d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80052d4:	6313      	str	r3, [r2, #48]	@ 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 80052d6:	68fb      	ldr	r3, [r7, #12]
 80052d8:	681b      	ldr	r3, [r3, #0]
 80052da:	461a      	mov	r2, r3
 80052dc:	687b      	ldr	r3, [r7, #4]
 80052de:	01db      	lsls	r3, r3, #7
 80052e0:	4413      	add	r3, r2
 80052e2:	3384      	adds	r3, #132	@ 0x84
 80052e4:	681b      	ldr	r3, [r3, #0]
 80052e6:	68fa      	ldr	r2, [r7, #12]
 80052e8:	6812      	ldr	r2, [r2, #0]
 80052ea:	4611      	mov	r1, r2
 80052ec:	687a      	ldr	r2, [r7, #4]
 80052ee:	01d2      	lsls	r2, r2, #7
 80052f0:	440a      	add	r2, r1
 80052f2:	3284      	adds	r2, #132	@ 0x84
 80052f4:	f043 0301 	orr.w	r3, r3, #1
 80052f8:	6013      	str	r3, [r2, #0]
}
 80052fa:	bf00      	nop
 80052fc:	3724      	adds	r7, #36	@ 0x24
 80052fe:	46bd      	mov	sp, r7
 8005300:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005304:	4770      	bx	lr
 8005306:	bf00      	nop
 8005308:	fffff8f8 	.word	0xfffff8f8
 800530c:	fffff800 	.word	0xfffff800

08005310 <HAL_MDMA_Abort>:
  *        and the Channel will be effectively disabled only after the transfer of
  *        this single data is finished.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_MDMA_Abort(MDMA_HandleTypeDef *hmdma)
{
 8005310:	b580      	push	{r7, lr}
 8005312:	b084      	sub	sp, #16
 8005314:	af00      	add	r7, sp, #0
 8005316:	6078      	str	r0, [r7, #4]
  uint32_t tickstart =  HAL_GetTick();
 8005318:	f7fd ff32 	bl	8003180 <HAL_GetTick>
 800531c:	60f8      	str	r0, [r7, #12]

  /* Check the MDMA peripheral handle */
  if(hmdma == NULL)
 800531e:	687b      	ldr	r3, [r7, #4]
 8005320:	2b00      	cmp	r3, #0
 8005322:	d101      	bne.n	8005328 <HAL_MDMA_Abort+0x18>
  {
    return HAL_ERROR;
 8005324:	2301      	movs	r3, #1
 8005326:	e04a      	b.n	80053be <HAL_MDMA_Abort+0xae>
  }

  if(HAL_MDMA_STATE_BUSY != hmdma->State)
 8005328:	687b      	ldr	r3, [r7, #4]
 800532a:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800532e:	b2db      	uxtb	r3, r3
 8005330:	2b02      	cmp	r3, #2
 8005332:	d008      	beq.n	8005346 <HAL_MDMA_Abort+0x36>
  {
    hmdma->ErrorCode = HAL_MDMA_ERROR_NO_XFER;
 8005334:	687b      	ldr	r3, [r7, #4]
 8005336:	2280      	movs	r2, #128	@ 0x80
 8005338:	669a      	str	r2, [r3, #104]	@ 0x68

    /* Process Unlocked */
    __HAL_UNLOCK(hmdma);
 800533a:	687b      	ldr	r3, [r7, #4]
 800533c:	2200      	movs	r2, #0
 800533e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    return HAL_ERROR;
 8005342:	2301      	movs	r3, #1
 8005344:	e03b      	b.n	80053be <HAL_MDMA_Abort+0xae>
  }
  else
  {
    /* Disable all the transfer interrupts */
    __HAL_MDMA_DISABLE_IT(hmdma, (MDMA_IT_TE | MDMA_IT_CTC | MDMA_IT_BT | MDMA_IT_BRT | MDMA_IT_BFTC));
 8005346:	687b      	ldr	r3, [r7, #4]
 8005348:	681b      	ldr	r3, [r3, #0]
 800534a:	68da      	ldr	r2, [r3, #12]
 800534c:	687b      	ldr	r3, [r7, #4]
 800534e:	681b      	ldr	r3, [r3, #0]
 8005350:	f022 023e 	bic.w	r2, r2, #62	@ 0x3e
 8005354:	60da      	str	r2, [r3, #12]

    /* Disable the channel */
    __HAL_MDMA_DISABLE(hmdma);
 8005356:	687b      	ldr	r3, [r7, #4]
 8005358:	681b      	ldr	r3, [r3, #0]
 800535a:	68da      	ldr	r2, [r3, #12]
 800535c:	687b      	ldr	r3, [r7, #4]
 800535e:	681b      	ldr	r3, [r3, #0]
 8005360:	f022 0201 	bic.w	r2, r2, #1
 8005364:	60da      	str	r2, [r3, #12]

    /* Check if the MDMA Channel is effectively disabled */
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
 8005366:	e016      	b.n	8005396 <HAL_MDMA_Abort+0x86>
    {
      /* Check for the Timeout */
      if( (HAL_GetTick()  - tickstart ) > HAL_TIMEOUT_MDMA_ABORT)
 8005368:	f7fd ff0a 	bl	8003180 <HAL_GetTick>
 800536c:	4602      	mov	r2, r0
 800536e:	68fb      	ldr	r3, [r7, #12]
 8005370:	1ad3      	subs	r3, r2, r3
 8005372:	2b05      	cmp	r3, #5
 8005374:	d90f      	bls.n	8005396 <HAL_MDMA_Abort+0x86>
      {
        /* Update error code */
        hmdma->ErrorCode |= HAL_MDMA_ERROR_TIMEOUT;
 8005376:	687b      	ldr	r3, [r7, #4]
 8005378:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 800537a:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 800537e:	687b      	ldr	r3, [r7, #4]
 8005380:	669a      	str	r2, [r3, #104]	@ 0x68

        /* Process Unlocked */
        __HAL_UNLOCK(hmdma);
 8005382:	687b      	ldr	r3, [r7, #4]
 8005384:	2200      	movs	r2, #0
 8005386:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

        /* Change the MDMA state */
        hmdma->State = HAL_MDMA_STATE_ERROR;
 800538a:	687b      	ldr	r3, [r7, #4]
 800538c:	2203      	movs	r2, #3
 800538e:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

        return HAL_ERROR;
 8005392:	2301      	movs	r3, #1
 8005394:	e013      	b.n	80053be <HAL_MDMA_Abort+0xae>
    while((hmdma->Instance->CCR & MDMA_CCR_EN) != 0U)
 8005396:	687b      	ldr	r3, [r7, #4]
 8005398:	681b      	ldr	r3, [r3, #0]
 800539a:	68db      	ldr	r3, [r3, #12]
 800539c:	f003 0301 	and.w	r3, r3, #1
 80053a0:	2b00      	cmp	r3, #0
 80053a2:	d1e1      	bne.n	8005368 <HAL_MDMA_Abort+0x58>
      }
    }

    /* Clear all interrupt flags */
    __HAL_MDMA_CLEAR_FLAG(hmdma, (MDMA_FLAG_TE | MDMA_FLAG_CTC | MDMA_FLAG_BT | MDMA_FLAG_BRT | MDMA_FLAG_BFTC));
 80053a4:	687b      	ldr	r3, [r7, #4]
 80053a6:	681b      	ldr	r3, [r3, #0]
 80053a8:	221f      	movs	r2, #31
 80053aa:	605a      	str	r2, [r3, #4]

    /* Process Unlocked */
    __HAL_UNLOCK(hmdma);
 80053ac:	687b      	ldr	r3, [r7, #4]
 80053ae:	2200      	movs	r2, #0
 80053b0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Change the MDMA state*/
    hmdma->State = HAL_MDMA_STATE_READY;
 80053b4:	687b      	ldr	r3, [r7, #4]
 80053b6:	2201      	movs	r2, #1
 80053b8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
  }

  return HAL_OK;
 80053bc:	2300      	movs	r3, #0
}
 80053be:	4618      	mov	r0, r3
 80053c0:	3710      	adds	r7, #16
 80053c2:	46bd      	mov	sp, r7
 80053c4:	bd80      	pop	{r7, pc}
	...

080053c8 <HAL_OSPI_Init>:
  *         in the OSPI_InitTypeDef and initialize the associated handle.
  * @param  hospi : OSPI handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_OSPI_Init(OSPI_HandleTypeDef *hospi)
{
 80053c8:	b580      	push	{r7, lr}
 80053ca:	b086      	sub	sp, #24
 80053cc:	af02      	add	r7, sp, #8
 80053ce:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 80053d0:	2300      	movs	r3, #0
 80053d2:	73fb      	strb	r3, [r7, #15]
  uint32_t tickstart = HAL_GetTick();
 80053d4:	f7fd fed4 	bl	8003180 <HAL_GetTick>
 80053d8:	60b8      	str	r0, [r7, #8]

  /* Check the OSPI handle allocation */
  if (hospi == NULL)
 80053da:	687b      	ldr	r3, [r7, #4]
 80053dc:	2b00      	cmp	r3, #0
 80053de:	d102      	bne.n	80053e6 <HAL_OSPI_Init+0x1e>
  {
    status = HAL_ERROR;
 80053e0:	2301      	movs	r3, #1
 80053e2:	73fb      	strb	r3, [r7, #15]
 80053e4:	e0a5      	b.n	8005532 <HAL_OSPI_Init+0x16a>
    assert_param(IS_OSPI_CS_BOUNDARY(hospi->Init.ChipSelectBoundary));
    assert_param(IS_OSPI_DLYBYP(hospi->Init.DelayBlockBypass));
    assert_param(IS_OSPI_MAXTRAN(hospi->Init.MaxTran));

    /* Initialize error code */
    hospi->ErrorCode = HAL_OSPI_ERROR_NONE;
 80053e6:	687b      	ldr	r3, [r7, #4]
 80053e8:	2200      	movs	r2, #0
 80053ea:	655a      	str	r2, [r3, #84]	@ 0x54

    /* Check if the state is the reset state */
    if (hospi->State == HAL_OSPI_STATE_RESET)
 80053ec:	687b      	ldr	r3, [r7, #4]
 80053ee:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80053f0:	2b00      	cmp	r3, #0
 80053f2:	f040 809e 	bne.w	8005532 <HAL_OSPI_Init+0x16a>

      /* Init the low level hardware */
      hospi->MspInitCallback(hospi);
#else
      /* Initialization of the low level hardware */
      HAL_OSPI_MspInit(hospi);
 80053f6:	6878      	ldr	r0, [r7, #4]
 80053f8:	f7fc f80a 	bl	8001410 <HAL_OSPI_MspInit>
#endif /* defined (USE_HAL_OSPI_REGISTER_CALLBACKS) && (USE_HAL_OSPI_REGISTER_CALLBACKS == 1U) */

      /* Configure the default timeout for the OSPI memory access */
      (void)HAL_OSPI_SetTimeout(hospi, HAL_OSPI_TIMEOUT_DEFAULT_VALUE);
 80053fc:	f241 3188 	movw	r1, #5000	@ 0x1388
 8005400:	6878      	ldr	r0, [r7, #4]
 8005402:	f000 fbb2 	bl	8005b6a <HAL_OSPI_SetTimeout>

      /* Configure memory type, device size, chip select high time, delay block bypass,
         free running clock, clock mode */
      MODIFY_REG(hospi->Instance->DCR1,
 8005406:	687b      	ldr	r3, [r7, #4]
 8005408:	681b      	ldr	r3, [r3, #0]
 800540a:	689a      	ldr	r2, [r3, #8]
 800540c:	4b4b      	ldr	r3, [pc, #300]	@ (800553c <HAL_OSPI_Init+0x174>)
 800540e:	4013      	ands	r3, r2
 8005410:	687a      	ldr	r2, [r7, #4]
 8005412:	68d1      	ldr	r1, [r2, #12]
 8005414:	687a      	ldr	r2, [r7, #4]
 8005416:	6912      	ldr	r2, [r2, #16]
 8005418:	3a01      	subs	r2, #1
 800541a:	0412      	lsls	r2, r2, #16
 800541c:	4311      	orrs	r1, r2
 800541e:	687a      	ldr	r2, [r7, #4]
 8005420:	6952      	ldr	r2, [r2, #20]
 8005422:	3a01      	subs	r2, #1
 8005424:	0212      	lsls	r2, r2, #8
 8005426:	4311      	orrs	r1, r2
 8005428:	687a      	ldr	r2, [r7, #4]
 800542a:	6b52      	ldr	r2, [r2, #52]	@ 0x34
 800542c:	4311      	orrs	r1, r2
 800542e:	687a      	ldr	r2, [r7, #4]
 8005430:	69d2      	ldr	r2, [r2, #28]
 8005432:	4311      	orrs	r1, r2
 8005434:	687a      	ldr	r2, [r7, #4]
 8005436:	6812      	ldr	r2, [r2, #0]
 8005438:	430b      	orrs	r3, r1
 800543a:	6093      	str	r3, [r2, #8]
                 (hospi->Init.MemoryType | ((hospi->Init.DeviceSize - 1U) << OCTOSPI_DCR1_DEVSIZE_Pos) |
                  ((hospi->Init.ChipSelectHighTime - 1U) << OCTOSPI_DCR1_CSHT_Pos) |
                  hospi->Init.DelayBlockBypass | hospi->Init.ClockMode));

      /* Configure wrap size */
      MODIFY_REG(hospi->Instance->DCR2, OCTOSPI_DCR2_WRAPSIZE, hospi->Init.WrapSize);
 800543c:	687b      	ldr	r3, [r7, #4]
 800543e:	681b      	ldr	r3, [r3, #0]
 8005440:	68db      	ldr	r3, [r3, #12]
 8005442:	f423 21e0 	bic.w	r1, r3, #458752	@ 0x70000
 8005446:	687b      	ldr	r3, [r7, #4]
 8005448:	6a1a      	ldr	r2, [r3, #32]
 800544a:	687b      	ldr	r3, [r7, #4]
 800544c:	681b      	ldr	r3, [r3, #0]
 800544e:	430a      	orrs	r2, r1
 8005450:	60da      	str	r2, [r3, #12]

      /* Configure chip select boundary and maximum transfer */
      hospi->Instance->DCR3 = ((hospi->Init.ChipSelectBoundary << OCTOSPI_DCR3_CSBOUND_Pos) |
 8005452:	687b      	ldr	r3, [r7, #4]
 8005454:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005456:	0419      	lsls	r1, r3, #16
                               (hospi->Init.MaxTran << OCTOSPI_DCR3_MAXTRAN_Pos));
 8005458:	687b      	ldr	r3, [r7, #4]
 800545a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
      hospi->Instance->DCR3 = ((hospi->Init.ChipSelectBoundary << OCTOSPI_DCR3_CSBOUND_Pos) |
 800545c:	687b      	ldr	r3, [r7, #4]
 800545e:	681b      	ldr	r3, [r3, #0]
 8005460:	430a      	orrs	r2, r1
 8005462:	611a      	str	r2, [r3, #16]

      /* Configure refresh */
      hospi->Instance->DCR4 = hospi->Init.Refresh;
 8005464:	687b      	ldr	r3, [r7, #4]
 8005466:	681b      	ldr	r3, [r3, #0]
 8005468:	687a      	ldr	r2, [r7, #4]
 800546a:	6bd2      	ldr	r2, [r2, #60]	@ 0x3c
 800546c:	615a      	str	r2, [r3, #20]

      /* Configure FIFO threshold */
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FTHRES, ((hospi->Init.FifoThreshold - 1U) << OCTOSPI_CR_FTHRES_Pos));
 800546e:	687b      	ldr	r3, [r7, #4]
 8005470:	681b      	ldr	r3, [r3, #0]
 8005472:	681b      	ldr	r3, [r3, #0]
 8005474:	f423 51f8 	bic.w	r1, r3, #7936	@ 0x1f00
 8005478:	687b      	ldr	r3, [r7, #4]
 800547a:	685b      	ldr	r3, [r3, #4]
 800547c:	3b01      	subs	r3, #1
 800547e:	021a      	lsls	r2, r3, #8
 8005480:	687b      	ldr	r3, [r7, #4]
 8005482:	681b      	ldr	r3, [r3, #0]
 8005484:	430a      	orrs	r2, r1
 8005486:	601a      	str	r2, [r3, #0]

      /* Wait till busy flag is reset */
      status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, hospi->Timeout);
 8005488:	687b      	ldr	r3, [r7, #4]
 800548a:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800548c:	9300      	str	r3, [sp, #0]
 800548e:	68bb      	ldr	r3, [r7, #8]
 8005490:	2200      	movs	r2, #0
 8005492:	2120      	movs	r1, #32
 8005494:	6878      	ldr	r0, [r7, #4]
 8005496:	f001 f86b 	bl	8006570 <OSPI_WaitFlagStateUntilTimeout>
 800549a:	4603      	mov	r3, r0
 800549c:	73fb      	strb	r3, [r7, #15]

      if (status == HAL_OK)
 800549e:	7bfb      	ldrb	r3, [r7, #15]
 80054a0:	2b00      	cmp	r3, #0
 80054a2:	d146      	bne.n	8005532 <HAL_OSPI_Init+0x16a>
      {
        /* Configure clock prescaler */
        MODIFY_REG(hospi->Instance->DCR2, OCTOSPI_DCR2_PRESCALER,
 80054a4:	687b      	ldr	r3, [r7, #4]
 80054a6:	681b      	ldr	r3, [r3, #0]
 80054a8:	68db      	ldr	r3, [r3, #12]
 80054aa:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 80054ae:	687b      	ldr	r3, [r7, #4]
 80054b0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80054b2:	1e5a      	subs	r2, r3, #1
 80054b4:	687b      	ldr	r3, [r7, #4]
 80054b6:	681b      	ldr	r3, [r3, #0]
 80054b8:	430a      	orrs	r2, r1
 80054ba:	60da      	str	r2, [r3, #12]
                   ((hospi->Init.ClockPrescaler - 1U) << OCTOSPI_DCR2_PRESCALER_Pos));

        /* Configure Dual Quad mode */
        MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_DQM, hospi->Init.DualQuad);
 80054bc:	687b      	ldr	r3, [r7, #4]
 80054be:	681b      	ldr	r3, [r3, #0]
 80054c0:	681b      	ldr	r3, [r3, #0]
 80054c2:	f023 0140 	bic.w	r1, r3, #64	@ 0x40
 80054c6:	687b      	ldr	r3, [r7, #4]
 80054c8:	689a      	ldr	r2, [r3, #8]
 80054ca:	687b      	ldr	r3, [r7, #4]
 80054cc:	681b      	ldr	r3, [r3, #0]
 80054ce:	430a      	orrs	r2, r1
 80054d0:	601a      	str	r2, [r3, #0]

        /* Configure sample shifting and delay hold quarter cycle */
        MODIFY_REG(hospi->Instance->TCR, (OCTOSPI_TCR_SSHIFT | OCTOSPI_TCR_DHQC),
 80054d2:	687b      	ldr	r3, [r7, #4]
 80054d4:	681b      	ldr	r3, [r3, #0]
 80054d6:	f8d3 3108 	ldr.w	r3, [r3, #264]	@ 0x108
 80054da:	f023 41a0 	bic.w	r1, r3, #1342177280	@ 0x50000000
 80054de:	687b      	ldr	r3, [r7, #4]
 80054e0:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80054e2:	687b      	ldr	r3, [r7, #4]
 80054e4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80054e6:	431a      	orrs	r2, r3
 80054e8:	687b      	ldr	r3, [r7, #4]
 80054ea:	681b      	ldr	r3, [r3, #0]
 80054ec:	430a      	orrs	r2, r1
 80054ee:	f8c3 2108 	str.w	r2, [r3, #264]	@ 0x108
                   (hospi->Init.SampleShifting | hospi->Init.DelayHoldQuarterCycle));

        /* Enable OctoSPI */
        __HAL_OSPI_ENABLE(hospi);
 80054f2:	687b      	ldr	r3, [r7, #4]
 80054f4:	681b      	ldr	r3, [r3, #0]
 80054f6:	681a      	ldr	r2, [r3, #0]
 80054f8:	687b      	ldr	r3, [r7, #4]
 80054fa:	681b      	ldr	r3, [r3, #0]
 80054fc:	f042 0201 	orr.w	r2, r2, #1
 8005500:	601a      	str	r2, [r3, #0]

        /* Enable free running clock if needed : must be done after OSPI enable */
        if (hospi->Init.FreeRunningClock == HAL_OSPI_FREERUNCLK_ENABLE)
 8005502:	687b      	ldr	r3, [r7, #4]
 8005504:	699b      	ldr	r3, [r3, #24]
 8005506:	2b02      	cmp	r3, #2
 8005508:	d107      	bne.n	800551a <HAL_OSPI_Init+0x152>
        {
          SET_BIT(hospi->Instance->DCR1, OCTOSPI_DCR1_FRCK);
 800550a:	687b      	ldr	r3, [r7, #4]
 800550c:	681b      	ldr	r3, [r3, #0]
 800550e:	689a      	ldr	r2, [r3, #8]
 8005510:	687b      	ldr	r3, [r7, #4]
 8005512:	681b      	ldr	r3, [r3, #0]
 8005514:	f042 0202 	orr.w	r2, r2, #2
 8005518:	609a      	str	r2, [r3, #8]
        }

        /* Initialize the OSPI state */
        if (hospi->Init.MemoryType == HAL_OSPI_MEMTYPE_HYPERBUS)
 800551a:	687b      	ldr	r3, [r7, #4]
 800551c:	68db      	ldr	r3, [r3, #12]
 800551e:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 8005522:	d103      	bne.n	800552c <HAL_OSPI_Init+0x164>
        {
          hospi->State = HAL_OSPI_STATE_HYPERBUS_INIT;
 8005524:	687b      	ldr	r3, [r7, #4]
 8005526:	2201      	movs	r2, #1
 8005528:	651a      	str	r2, [r3, #80]	@ 0x50
 800552a:	e002      	b.n	8005532 <HAL_OSPI_Init+0x16a>
        }
        else
        {
          hospi->State = HAL_OSPI_STATE_READY;
 800552c:	687b      	ldr	r3, [r7, #4]
 800552e:	2202      	movs	r2, #2
 8005530:	651a      	str	r2, [r3, #80]	@ 0x50
      }
    }
  }

  /* Return function status */
  return status;
 8005532:	7bfb      	ldrb	r3, [r7, #15]
}
 8005534:	4618      	mov	r0, r3
 8005536:	3710      	adds	r7, #16
 8005538:	46bd      	mov	sp, r7
 800553a:	bd80      	pop	{r7, pc}
 800553c:	f8e0f8f4 	.word	0xf8e0f8f4

08005540 <HAL_OSPI_DeInit>:
  * @brief  De-Initialize the OSPI peripheral.
  * @param  hospi : OSPI handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_OSPI_DeInit(OSPI_HandleTypeDef *hospi)
{
 8005540:	b580      	push	{r7, lr}
 8005542:	b084      	sub	sp, #16
 8005544:	af00      	add	r7, sp, #0
 8005546:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8005548:	2300      	movs	r3, #0
 800554a:	73fb      	strb	r3, [r7, #15]

  /* Check the OSPI handle allocation */
  if (hospi == NULL)
 800554c:	687b      	ldr	r3, [r7, #4]
 800554e:	2b00      	cmp	r3, #0
 8005550:	d102      	bne.n	8005558 <HAL_OSPI_DeInit+0x18>
  {
    status = HAL_ERROR;
 8005552:	2301      	movs	r3, #1
 8005554:	73fb      	strb	r3, [r7, #15]
 8005556:	e015      	b.n	8005584 <HAL_OSPI_DeInit+0x44>
    /* No error code can be set set as the handler is null */
  }
  else
  {
    /* Disable OctoSPI */
    __HAL_OSPI_DISABLE(hospi);
 8005558:	687b      	ldr	r3, [r7, #4]
 800555a:	681b      	ldr	r3, [r3, #0]
 800555c:	681a      	ldr	r2, [r3, #0]
 800555e:	687b      	ldr	r3, [r7, #4]
 8005560:	681b      	ldr	r3, [r3, #0]
 8005562:	f022 0201 	bic.w	r2, r2, #1
 8005566:	601a      	str	r2, [r3, #0]

    /* Disable free running clock if needed : must be done after OSPI disable */
    CLEAR_BIT(hospi->Instance->DCR1, OCTOSPI_DCR1_FRCK);
 8005568:	687b      	ldr	r3, [r7, #4]
 800556a:	681b      	ldr	r3, [r3, #0]
 800556c:	689a      	ldr	r2, [r3, #8]
 800556e:	687b      	ldr	r3, [r7, #4]
 8005570:	681b      	ldr	r3, [r3, #0]
 8005572:	f022 0202 	bic.w	r2, r2, #2
 8005576:	609a      	str	r2, [r3, #8]

    /* DeInit the low level hardware */
    hospi->MspDeInitCallback(hospi);
#else
    /* De-initialize the low-level hardware */
    HAL_OSPI_MspDeInit(hospi);
 8005578:	6878      	ldr	r0, [r7, #4]
 800557a:	f7fc f835 	bl	80015e8 <HAL_OSPI_MspDeInit>
#endif /* (USE_HAL_OSPI_REGISTER_CALLBACKS) && (USE_HAL_OSPI_REGISTER_CALLBACKS == 1U) */

    /* Reset the driver state */
    hospi->State = HAL_OSPI_STATE_RESET;
 800557e:	687b      	ldr	r3, [r7, #4]
 8005580:	2200      	movs	r2, #0
 8005582:	651a      	str	r2, [r3, #80]	@ 0x50
  }

  return status;
 8005584:	7bfb      	ldrb	r3, [r7, #15]
}
 8005586:	4618      	mov	r0, r3
 8005588:	3710      	adds	r7, #16
 800558a:	46bd      	mov	sp, r7
 800558c:	bd80      	pop	{r7, pc}

0800558e <HAL_OSPI_Command>:
  * @param  cmd     : structure that contains the command configuration information
  * @param  Timeout : Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_OSPI_Command(OSPI_HandleTypeDef *hospi, OSPI_RegularCmdTypeDef *cmd, uint32_t Timeout)
{
 800558e:	b580      	push	{r7, lr}
 8005590:	b08a      	sub	sp, #40	@ 0x28
 8005592:	af02      	add	r7, sp, #8
 8005594:	60f8      	str	r0, [r7, #12]
 8005596:	60b9      	str	r1, [r7, #8]
 8005598:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status;
  uint32_t state;
  uint32_t tickstart = HAL_GetTick();
 800559a:	f7fd fdf1 	bl	8003180 <HAL_GetTick>
 800559e:	61b8      	str	r0, [r7, #24]
    assert_param(IS_OSPI_ALT_BYTES_SIZE(cmd->AlternateBytesSize));
    assert_param(IS_OSPI_ALT_BYTES_DTR_MODE(cmd->AlternateBytesDtrMode));
  }

  assert_param(IS_OSPI_DATA_MODE(cmd->DataMode));
  if (cmd->DataMode != HAL_OSPI_DATA_NONE)
 80055a0:	68bb      	ldr	r3, [r7, #8]
 80055a2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80055a4:	2b00      	cmp	r3, #0

  assert_param(IS_OSPI_DQS_MODE(cmd->DQSMode));
  assert_param(IS_OSPI_SIOO_MODE(cmd->SIOOMode));

  /* Check the state of the driver */
  state = hospi->State;
 80055a6:	68fb      	ldr	r3, [r7, #12]
 80055a8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80055aa:	617b      	str	r3, [r7, #20]
  if (((state == HAL_OSPI_STATE_READY)         && (hospi->Init.MemoryType != HAL_OSPI_MEMTYPE_HYPERBUS)) ||
 80055ac:	697b      	ldr	r3, [r7, #20]
 80055ae:	2b02      	cmp	r3, #2
 80055b0:	d104      	bne.n	80055bc <HAL_OSPI_Command+0x2e>
 80055b2:	68fb      	ldr	r3, [r7, #12]
 80055b4:	68db      	ldr	r3, [r3, #12]
 80055b6:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 80055ba:	d115      	bne.n	80055e8 <HAL_OSPI_Command+0x5a>
 80055bc:	697b      	ldr	r3, [r7, #20]
 80055be:	2b14      	cmp	r3, #20
 80055c0:	d107      	bne.n	80055d2 <HAL_OSPI_Command+0x44>
      ((state == HAL_OSPI_STATE_READ_CMD_CFG)  && ((cmd->OperationType == HAL_OSPI_OPTYPE_WRITE_CFG)
 80055c2:	68bb      	ldr	r3, [r7, #8]
 80055c4:	681b      	ldr	r3, [r3, #0]
 80055c6:	2b02      	cmp	r3, #2
 80055c8:	d00e      	beq.n	80055e8 <HAL_OSPI_Command+0x5a>
                                                   || (cmd->OperationType == HAL_OSPI_OPTYPE_WRAP_CFG))) ||
 80055ca:	68bb      	ldr	r3, [r7, #8]
 80055cc:	681b      	ldr	r3, [r3, #0]
 80055ce:	2b03      	cmp	r3, #3
 80055d0:	d00a      	beq.n	80055e8 <HAL_OSPI_Command+0x5a>
 80055d2:	697b      	ldr	r3, [r7, #20]
 80055d4:	2b24      	cmp	r3, #36	@ 0x24
 80055d6:	d15b      	bne.n	8005690 <HAL_OSPI_Command+0x102>
      ((state == HAL_OSPI_STATE_WRITE_CMD_CFG) && ((cmd->OperationType == HAL_OSPI_OPTYPE_READ_CFG)  ||
 80055d8:	68bb      	ldr	r3, [r7, #8]
 80055da:	681b      	ldr	r3, [r3, #0]
 80055dc:	2b01      	cmp	r3, #1
 80055de:	d003      	beq.n	80055e8 <HAL_OSPI_Command+0x5a>
                                                   (cmd->OperationType == HAL_OSPI_OPTYPE_WRAP_CFG))))
 80055e0:	68bb      	ldr	r3, [r7, #8]
 80055e2:	681b      	ldr	r3, [r3, #0]
      ((state == HAL_OSPI_STATE_WRITE_CMD_CFG) && ((cmd->OperationType == HAL_OSPI_OPTYPE_READ_CFG)  ||
 80055e4:	2b03      	cmp	r3, #3
 80055e6:	d153      	bne.n	8005690 <HAL_OSPI_Command+0x102>
  {
    /* Wait till busy flag is reset */
    status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80055e8:	687b      	ldr	r3, [r7, #4]
 80055ea:	9300      	str	r3, [sp, #0]
 80055ec:	69bb      	ldr	r3, [r7, #24]
 80055ee:	2200      	movs	r2, #0
 80055f0:	2120      	movs	r1, #32
 80055f2:	68f8      	ldr	r0, [r7, #12]
 80055f4:	f000 ffbc 	bl	8006570 <OSPI_WaitFlagStateUntilTimeout>
 80055f8:	4603      	mov	r3, r0
 80055fa:	77fb      	strb	r3, [r7, #31]

    if (status == HAL_OK)
 80055fc:	7ffb      	ldrb	r3, [r7, #31]
 80055fe:	2b00      	cmp	r3, #0
 8005600:	d14c      	bne.n	800569c <HAL_OSPI_Command+0x10e>
    {
      /* Initialize error code */
      hospi->ErrorCode = HAL_OSPI_ERROR_NONE;
 8005602:	68fb      	ldr	r3, [r7, #12]
 8005604:	2200      	movs	r2, #0
 8005606:	655a      	str	r2, [r3, #84]	@ 0x54

      /* Configure the registers */
      status = OSPI_ConfigCmd(hospi, cmd);
 8005608:	68b9      	ldr	r1, [r7, #8]
 800560a:	68f8      	ldr	r0, [r7, #12]
 800560c:	f000 ffe8 	bl	80065e0 <OSPI_ConfigCmd>
 8005610:	4603      	mov	r3, r0
 8005612:	77fb      	strb	r3, [r7, #31]

      if (status == HAL_OK)
 8005614:	7ffb      	ldrb	r3, [r7, #31]
 8005616:	2b00      	cmp	r3, #0
 8005618:	d140      	bne.n	800569c <HAL_OSPI_Command+0x10e>
      {
        if (cmd->DataMode == HAL_OSPI_DATA_NONE)
 800561a:	68bb      	ldr	r3, [r7, #8]
 800561c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800561e:	2b00      	cmp	r3, #0
 8005620:	d10e      	bne.n	8005640 <HAL_OSPI_Command+0xb2>
        {
          /* When there is no data phase, the transfer start as soon as the configuration is done
             so wait until TC flag is set to go back in idle state */
          status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_TC, SET, tickstart, Timeout);
 8005622:	687b      	ldr	r3, [r7, #4]
 8005624:	9300      	str	r3, [sp, #0]
 8005626:	69bb      	ldr	r3, [r7, #24]
 8005628:	2201      	movs	r2, #1
 800562a:	2102      	movs	r1, #2
 800562c:	68f8      	ldr	r0, [r7, #12]
 800562e:	f000 ff9f 	bl	8006570 <OSPI_WaitFlagStateUntilTimeout>
 8005632:	4603      	mov	r3, r0
 8005634:	77fb      	strb	r3, [r7, #31]

          __HAL_OSPI_CLEAR_FLAG(hospi, HAL_OSPI_FLAG_TC);
 8005636:	68fb      	ldr	r3, [r7, #12]
 8005638:	681b      	ldr	r3, [r3, #0]
 800563a:	2202      	movs	r2, #2
 800563c:	625a      	str	r2, [r3, #36]	@ 0x24
    if (status == HAL_OK)
 800563e:	e02d      	b.n	800569c <HAL_OSPI_Command+0x10e>
        }
        else
        {
          /* Update the state */
          if (cmd->OperationType == HAL_OSPI_OPTYPE_COMMON_CFG)
 8005640:	68bb      	ldr	r3, [r7, #8]
 8005642:	681b      	ldr	r3, [r3, #0]
 8005644:	2b00      	cmp	r3, #0
 8005646:	d103      	bne.n	8005650 <HAL_OSPI_Command+0xc2>
          {
            hospi->State = HAL_OSPI_STATE_CMD_CFG;
 8005648:	68fb      	ldr	r3, [r7, #12]
 800564a:	2204      	movs	r2, #4
 800564c:	651a      	str	r2, [r3, #80]	@ 0x50
    if (status == HAL_OK)
 800564e:	e025      	b.n	800569c <HAL_OSPI_Command+0x10e>
          }
          else if (cmd->OperationType == HAL_OSPI_OPTYPE_READ_CFG)
 8005650:	68bb      	ldr	r3, [r7, #8]
 8005652:	681b      	ldr	r3, [r3, #0]
 8005654:	2b01      	cmp	r3, #1
 8005656:	d10b      	bne.n	8005670 <HAL_OSPI_Command+0xe2>
          {
            if (hospi->State == HAL_OSPI_STATE_WRITE_CMD_CFG)
 8005658:	68fb      	ldr	r3, [r7, #12]
 800565a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800565c:	2b24      	cmp	r3, #36	@ 0x24
 800565e:	d103      	bne.n	8005668 <HAL_OSPI_Command+0xda>
            {
              hospi->State = HAL_OSPI_STATE_CMD_CFG;
 8005660:	68fb      	ldr	r3, [r7, #12]
 8005662:	2204      	movs	r2, #4
 8005664:	651a      	str	r2, [r3, #80]	@ 0x50
    if (status == HAL_OK)
 8005666:	e019      	b.n	800569c <HAL_OSPI_Command+0x10e>
            }
            else
            {
              hospi->State = HAL_OSPI_STATE_READ_CMD_CFG;
 8005668:	68fb      	ldr	r3, [r7, #12]
 800566a:	2214      	movs	r2, #20
 800566c:	651a      	str	r2, [r3, #80]	@ 0x50
    if (status == HAL_OK)
 800566e:	e015      	b.n	800569c <HAL_OSPI_Command+0x10e>
            }
          }
          else if (cmd->OperationType == HAL_OSPI_OPTYPE_WRITE_CFG)
 8005670:	68bb      	ldr	r3, [r7, #8]
 8005672:	681b      	ldr	r3, [r3, #0]
 8005674:	2b02      	cmp	r3, #2
 8005676:	d111      	bne.n	800569c <HAL_OSPI_Command+0x10e>
          {
            if (hospi->State == HAL_OSPI_STATE_READ_CMD_CFG)
 8005678:	68fb      	ldr	r3, [r7, #12]
 800567a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 800567c:	2b14      	cmp	r3, #20
 800567e:	d103      	bne.n	8005688 <HAL_OSPI_Command+0xfa>
            {
              hospi->State = HAL_OSPI_STATE_CMD_CFG;
 8005680:	68fb      	ldr	r3, [r7, #12]
 8005682:	2204      	movs	r2, #4
 8005684:	651a      	str	r2, [r3, #80]	@ 0x50
    if (status == HAL_OK)
 8005686:	e009      	b.n	800569c <HAL_OSPI_Command+0x10e>
            }
            else
            {
              hospi->State = HAL_OSPI_STATE_WRITE_CMD_CFG;
 8005688:	68fb      	ldr	r3, [r7, #12]
 800568a:	2224      	movs	r2, #36	@ 0x24
 800568c:	651a      	str	r2, [r3, #80]	@ 0x50
    if (status == HAL_OK)
 800568e:	e005      	b.n	800569c <HAL_OSPI_Command+0x10e>
      }
    }
  }
  else
  {
    status = HAL_ERROR;
 8005690:	2301      	movs	r3, #1
 8005692:	77fb      	strb	r3, [r7, #31]
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 8005694:	68fb      	ldr	r3, [r7, #12]
 8005696:	2210      	movs	r2, #16
 8005698:	655a      	str	r2, [r3, #84]	@ 0x54
 800569a:	e000      	b.n	800569e <HAL_OSPI_Command+0x110>
    if (status == HAL_OK)
 800569c:	bf00      	nop
  }

  /* Return function status */
  return status;
 800569e:	7ffb      	ldrb	r3, [r7, #31]
}
 80056a0:	4618      	mov	r0, r3
 80056a2:	3720      	adds	r7, #32
 80056a4:	46bd      	mov	sp, r7
 80056a6:	bd80      	pop	{r7, pc}

080056a8 <HAL_OSPI_Transmit>:
  * @param  Timeout : Timeout duration
  * @note   This function is used only in Indirect Write Mode
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_OSPI_Transmit(OSPI_HandleTypeDef *hospi, uint8_t *pData, uint32_t Timeout)
{
 80056a8:	b580      	push	{r7, lr}
 80056aa:	b08a      	sub	sp, #40	@ 0x28
 80056ac:	af02      	add	r7, sp, #8
 80056ae:	60f8      	str	r0, [r7, #12]
 80056b0:	60b9      	str	r1, [r7, #8]
 80056b2:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status;
  uint32_t tickstart = HAL_GetTick();
 80056b4:	f7fd fd64 	bl	8003180 <HAL_GetTick>
 80056b8:	61b8      	str	r0, [r7, #24]
  __IO uint32_t *data_reg = &hospi->Instance->DR;
 80056ba:	68fb      	ldr	r3, [r7, #12]
 80056bc:	681b      	ldr	r3, [r3, #0]
 80056be:	3350      	adds	r3, #80	@ 0x50
 80056c0:	617b      	str	r3, [r7, #20]

  /* Check the data pointer allocation */
  if (pData == NULL)
 80056c2:	68bb      	ldr	r3, [r7, #8]
 80056c4:	2b00      	cmp	r3, #0
 80056c6:	d105      	bne.n	80056d4 <HAL_OSPI_Transmit+0x2c>
  {
    status = HAL_ERROR;
 80056c8:	2301      	movs	r3, #1
 80056ca:	77fb      	strb	r3, [r7, #31]
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_PARAM;
 80056cc:	68fb      	ldr	r3, [r7, #12]
 80056ce:	2208      	movs	r2, #8
 80056d0:	655a      	str	r2, [r3, #84]	@ 0x54
 80056d2:	e057      	b.n	8005784 <HAL_OSPI_Transmit+0xdc>
  }
  else
  {
    /* Check the state */
    if (hospi->State == HAL_OSPI_STATE_CMD_CFG)
 80056d4:	68fb      	ldr	r3, [r7, #12]
 80056d6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80056d8:	2b04      	cmp	r3, #4
 80056da:	d14e      	bne.n	800577a <HAL_OSPI_Transmit+0xd2>
    {
      /* Configure counters and size */
      hospi->XferCount = READ_REG(hospi->Instance->DLR) + 1U;
 80056dc:	68fb      	ldr	r3, [r7, #12]
 80056de:	681b      	ldr	r3, [r3, #0]
 80056e0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80056e2:	1c5a      	adds	r2, r3, #1
 80056e4:	68fb      	ldr	r3, [r7, #12]
 80056e6:	649a      	str	r2, [r3, #72]	@ 0x48
      hospi->XferSize  = hospi->XferCount;
 80056e8:	68fb      	ldr	r3, [r7, #12]
 80056ea:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 80056ec:	68fb      	ldr	r3, [r7, #12]
 80056ee:	645a      	str	r2, [r3, #68]	@ 0x44
      hospi->pBuffPtr  = pData;
 80056f0:	68fb      	ldr	r3, [r7, #12]
 80056f2:	68ba      	ldr	r2, [r7, #8]
 80056f4:	641a      	str	r2, [r3, #64]	@ 0x40

      /* Configure CR register with functional mode as indirect write */
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FMODE, OSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 80056f6:	68fb      	ldr	r3, [r7, #12]
 80056f8:	681b      	ldr	r3, [r3, #0]
 80056fa:	681a      	ldr	r2, [r3, #0]
 80056fc:	68fb      	ldr	r3, [r7, #12]
 80056fe:	681b      	ldr	r3, [r3, #0]
 8005700:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8005704:	601a      	str	r2, [r3, #0]

      do
      {
        /* Wait till fifo threshold flag is set to send data */
        status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_FT, SET, tickstart, Timeout);
 8005706:	687b      	ldr	r3, [r7, #4]
 8005708:	9300      	str	r3, [sp, #0]
 800570a:	69bb      	ldr	r3, [r7, #24]
 800570c:	2201      	movs	r2, #1
 800570e:	2104      	movs	r1, #4
 8005710:	68f8      	ldr	r0, [r7, #12]
 8005712:	f000 ff2d 	bl	8006570 <OSPI_WaitFlagStateUntilTimeout>
 8005716:	4603      	mov	r3, r0
 8005718:	77fb      	strb	r3, [r7, #31]

        if (status != HAL_OK)
 800571a:	7ffb      	ldrb	r3, [r7, #31]
 800571c:	2b00      	cmp	r3, #0
 800571e:	d113      	bne.n	8005748 <HAL_OSPI_Transmit+0xa0>
        {
          break;
        }

        *((__IO uint8_t *)data_reg) = *hospi->pBuffPtr;
 8005720:	68fb      	ldr	r3, [r7, #12]
 8005722:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005724:	781a      	ldrb	r2, [r3, #0]
 8005726:	697b      	ldr	r3, [r7, #20]
 8005728:	701a      	strb	r2, [r3, #0]
        hospi->pBuffPtr++;
 800572a:	68fb      	ldr	r3, [r7, #12]
 800572c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800572e:	1c5a      	adds	r2, r3, #1
 8005730:	68fb      	ldr	r3, [r7, #12]
 8005732:	641a      	str	r2, [r3, #64]	@ 0x40
        hospi->XferCount--;
 8005734:	68fb      	ldr	r3, [r7, #12]
 8005736:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005738:	1e5a      	subs	r2, r3, #1
 800573a:	68fb      	ldr	r3, [r7, #12]
 800573c:	649a      	str	r2, [r3, #72]	@ 0x48
      } while (hospi->XferCount > 0U);
 800573e:	68fb      	ldr	r3, [r7, #12]
 8005740:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005742:	2b00      	cmp	r3, #0
 8005744:	d1df      	bne.n	8005706 <HAL_OSPI_Transmit+0x5e>
 8005746:	e000      	b.n	800574a <HAL_OSPI_Transmit+0xa2>
          break;
 8005748:	bf00      	nop

      if (status == HAL_OK)
 800574a:	7ffb      	ldrb	r3, [r7, #31]
 800574c:	2b00      	cmp	r3, #0
 800574e:	d119      	bne.n	8005784 <HAL_OSPI_Transmit+0xdc>
      {
        /* Wait till transfer complete flag is set to go back in idle state */
        status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_TC, SET, tickstart, Timeout);
 8005750:	687b      	ldr	r3, [r7, #4]
 8005752:	9300      	str	r3, [sp, #0]
 8005754:	69bb      	ldr	r3, [r7, #24]
 8005756:	2201      	movs	r2, #1
 8005758:	2102      	movs	r1, #2
 800575a:	68f8      	ldr	r0, [r7, #12]
 800575c:	f000 ff08 	bl	8006570 <OSPI_WaitFlagStateUntilTimeout>
 8005760:	4603      	mov	r3, r0
 8005762:	77fb      	strb	r3, [r7, #31]

        if (status == HAL_OK)
 8005764:	7ffb      	ldrb	r3, [r7, #31]
 8005766:	2b00      	cmp	r3, #0
 8005768:	d10c      	bne.n	8005784 <HAL_OSPI_Transmit+0xdc>
        {
          /* Clear transfer complete flag */
          __HAL_OSPI_CLEAR_FLAG(hospi, HAL_OSPI_FLAG_TC);
 800576a:	68fb      	ldr	r3, [r7, #12]
 800576c:	681b      	ldr	r3, [r3, #0]
 800576e:	2202      	movs	r2, #2
 8005770:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update state */
          hospi->State = HAL_OSPI_STATE_READY;
 8005772:	68fb      	ldr	r3, [r7, #12]
 8005774:	2202      	movs	r2, #2
 8005776:	651a      	str	r2, [r3, #80]	@ 0x50
 8005778:	e004      	b.n	8005784 <HAL_OSPI_Transmit+0xdc>
        }
      }
    }
    else
    {
      status = HAL_ERROR;
 800577a:	2301      	movs	r3, #1
 800577c:	77fb      	strb	r3, [r7, #31]
      hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 800577e:	68fb      	ldr	r3, [r7, #12]
 8005780:	2210      	movs	r2, #16
 8005782:	655a      	str	r2, [r3, #84]	@ 0x54
    }
  }

  /* Return function status */
  return status;
 8005784:	7ffb      	ldrb	r3, [r7, #31]
}
 8005786:	4618      	mov	r0, r3
 8005788:	3720      	adds	r7, #32
 800578a:	46bd      	mov	sp, r7
 800578c:	bd80      	pop	{r7, pc}

0800578e <HAL_OSPI_Receive>:
  * @param  Timeout : Timeout duration
  * @note   This function is used only in Indirect Read Mode
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_OSPI_Receive(OSPI_HandleTypeDef *hospi, uint8_t *pData, uint32_t Timeout)
{
 800578e:	b580      	push	{r7, lr}
 8005790:	b08c      	sub	sp, #48	@ 0x30
 8005792:	af02      	add	r7, sp, #8
 8005794:	60f8      	str	r0, [r7, #12]
 8005796:	60b9      	str	r1, [r7, #8]
 8005798:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status;
  uint32_t tickstart = HAL_GetTick();
 800579a:	f7fd fcf1 	bl	8003180 <HAL_GetTick>
 800579e:	6238      	str	r0, [r7, #32]
  __IO uint32_t *data_reg = &hospi->Instance->DR;
 80057a0:	68fb      	ldr	r3, [r7, #12]
 80057a2:	681b      	ldr	r3, [r3, #0]
 80057a4:	3350      	adds	r3, #80	@ 0x50
 80057a6:	61fb      	str	r3, [r7, #28]
  uint32_t addr_reg = hospi->Instance->AR;
 80057a8:	68fb      	ldr	r3, [r7, #12]
 80057aa:	681b      	ldr	r3, [r3, #0]
 80057ac:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80057ae:	61bb      	str	r3, [r7, #24]
  uint32_t ir_reg = hospi->Instance->IR;
 80057b0:	68fb      	ldr	r3, [r7, #12]
 80057b2:	681b      	ldr	r3, [r3, #0]
 80057b4:	f8d3 3110 	ldr.w	r3, [r3, #272]	@ 0x110
 80057b8:	617b      	str	r3, [r7, #20]

  /* Check the data pointer allocation */
  if (pData == NULL)
 80057ba:	68bb      	ldr	r3, [r7, #8]
 80057bc:	2b00      	cmp	r3, #0
 80057be:	d106      	bne.n	80057ce <HAL_OSPI_Receive+0x40>
  {
    status = HAL_ERROR;
 80057c0:	2301      	movs	r3, #1
 80057c2:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_PARAM;
 80057c6:	68fb      	ldr	r3, [r7, #12]
 80057c8:	2208      	movs	r2, #8
 80057ca:	655a      	str	r2, [r3, #84]	@ 0x54
 80057cc:	e07c      	b.n	80058c8 <HAL_OSPI_Receive+0x13a>
  }
  else
  {
    /* Check the state */
    if (hospi->State == HAL_OSPI_STATE_CMD_CFG)
 80057ce:	68fb      	ldr	r3, [r7, #12]
 80057d0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80057d2:	2b04      	cmp	r3, #4
 80057d4:	d172      	bne.n	80058bc <HAL_OSPI_Receive+0x12e>
    {
      /* Configure counters and size */
      hospi->XferCount = READ_REG(hospi->Instance->DLR) + 1U;
 80057d6:	68fb      	ldr	r3, [r7, #12]
 80057d8:	681b      	ldr	r3, [r3, #0]
 80057da:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80057dc:	1c5a      	adds	r2, r3, #1
 80057de:	68fb      	ldr	r3, [r7, #12]
 80057e0:	649a      	str	r2, [r3, #72]	@ 0x48
      hospi->XferSize  = hospi->XferCount;
 80057e2:	68fb      	ldr	r3, [r7, #12]
 80057e4:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 80057e6:	68fb      	ldr	r3, [r7, #12]
 80057e8:	645a      	str	r2, [r3, #68]	@ 0x44
      hospi->pBuffPtr  = pData;
 80057ea:	68fb      	ldr	r3, [r7, #12]
 80057ec:	68ba      	ldr	r2, [r7, #8]
 80057ee:	641a      	str	r2, [r3, #64]	@ 0x40

      /* Configure CR register with functional mode as indirect read */
      MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FMODE, OSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 80057f0:	68fb      	ldr	r3, [r7, #12]
 80057f2:	681b      	ldr	r3, [r3, #0]
 80057f4:	681b      	ldr	r3, [r3, #0]
 80057f6:	f023 5240 	bic.w	r2, r3, #805306368	@ 0x30000000
 80057fa:	68fb      	ldr	r3, [r7, #12]
 80057fc:	681b      	ldr	r3, [r3, #0]
 80057fe:	f042 5280 	orr.w	r2, r2, #268435456	@ 0x10000000
 8005802:	601a      	str	r2, [r3, #0]

      /* Trig the transfer by re-writing address or instruction register */
      if (hospi->Init.MemoryType == HAL_OSPI_MEMTYPE_HYPERBUS)
 8005804:	68fb      	ldr	r3, [r7, #12]
 8005806:	68db      	ldr	r3, [r3, #12]
 8005808:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 800580c:	d104      	bne.n	8005818 <HAL_OSPI_Receive+0x8a>
      {
        WRITE_REG(hospi->Instance->AR, addr_reg);
 800580e:	68fb      	ldr	r3, [r7, #12]
 8005810:	681b      	ldr	r3, [r3, #0]
 8005812:	69ba      	ldr	r2, [r7, #24]
 8005814:	649a      	str	r2, [r3, #72]	@ 0x48
 8005816:	e011      	b.n	800583c <HAL_OSPI_Receive+0xae>
      }
      else
      {
        if (READ_BIT(hospi->Instance->CCR, OCTOSPI_CCR_ADMODE) != HAL_OSPI_ADDRESS_NONE)
 8005818:	68fb      	ldr	r3, [r7, #12]
 800581a:	681b      	ldr	r3, [r3, #0]
 800581c:	f8d3 3100 	ldr.w	r3, [r3, #256]	@ 0x100
 8005820:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8005824:	2b00      	cmp	r3, #0
 8005826:	d004      	beq.n	8005832 <HAL_OSPI_Receive+0xa4>
        {
          WRITE_REG(hospi->Instance->AR, addr_reg);
 8005828:	68fb      	ldr	r3, [r7, #12]
 800582a:	681b      	ldr	r3, [r3, #0]
 800582c:	69ba      	ldr	r2, [r7, #24]
 800582e:	649a      	str	r2, [r3, #72]	@ 0x48
 8005830:	e004      	b.n	800583c <HAL_OSPI_Receive+0xae>
        }
        else
        {
          WRITE_REG(hospi->Instance->IR, ir_reg);
 8005832:	68fb      	ldr	r3, [r7, #12]
 8005834:	681b      	ldr	r3, [r3, #0]
 8005836:	697a      	ldr	r2, [r7, #20]
 8005838:	f8c3 2110 	str.w	r2, [r3, #272]	@ 0x110
      }

      do
      {
        /* Wait till fifo threshold or transfer complete flags are set to read received data */
        status = OSPI_WaitFlagStateUntilTimeout(hospi, (HAL_OSPI_FLAG_FT | HAL_OSPI_FLAG_TC), SET, tickstart, Timeout);
 800583c:	687b      	ldr	r3, [r7, #4]
 800583e:	9300      	str	r3, [sp, #0]
 8005840:	6a3b      	ldr	r3, [r7, #32]
 8005842:	2201      	movs	r2, #1
 8005844:	2106      	movs	r1, #6
 8005846:	68f8      	ldr	r0, [r7, #12]
 8005848:	f000 fe92 	bl	8006570 <OSPI_WaitFlagStateUntilTimeout>
 800584c:	4603      	mov	r3, r0
 800584e:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27

        if (status != HAL_OK)
 8005852:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8005856:	2b00      	cmp	r3, #0
 8005858:	d114      	bne.n	8005884 <HAL_OSPI_Receive+0xf6>
        {
          break;
        }

        *hospi->pBuffPtr = *((__IO uint8_t *)data_reg);
 800585a:	68fb      	ldr	r3, [r7, #12]
 800585c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800585e:	69fa      	ldr	r2, [r7, #28]
 8005860:	7812      	ldrb	r2, [r2, #0]
 8005862:	b2d2      	uxtb	r2, r2
 8005864:	701a      	strb	r2, [r3, #0]
        hospi->pBuffPtr++;
 8005866:	68fb      	ldr	r3, [r7, #12]
 8005868:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800586a:	1c5a      	adds	r2, r3, #1
 800586c:	68fb      	ldr	r3, [r7, #12]
 800586e:	641a      	str	r2, [r3, #64]	@ 0x40
        hospi->XferCount--;
 8005870:	68fb      	ldr	r3, [r7, #12]
 8005872:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8005874:	1e5a      	subs	r2, r3, #1
 8005876:	68fb      	ldr	r3, [r7, #12]
 8005878:	649a      	str	r2, [r3, #72]	@ 0x48
      } while (hospi->XferCount > 0U);
 800587a:	68fb      	ldr	r3, [r7, #12]
 800587c:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800587e:	2b00      	cmp	r3, #0
 8005880:	d1dc      	bne.n	800583c <HAL_OSPI_Receive+0xae>
 8005882:	e000      	b.n	8005886 <HAL_OSPI_Receive+0xf8>
          break;
 8005884:	bf00      	nop

      if (status == HAL_OK)
 8005886:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800588a:	2b00      	cmp	r3, #0
 800588c:	d11c      	bne.n	80058c8 <HAL_OSPI_Receive+0x13a>
      {
        /* Wait till transfer complete flag is set to go back in idle state */
        status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_TC, SET, tickstart, Timeout);
 800588e:	687b      	ldr	r3, [r7, #4]
 8005890:	9300      	str	r3, [sp, #0]
 8005892:	6a3b      	ldr	r3, [r7, #32]
 8005894:	2201      	movs	r2, #1
 8005896:	2102      	movs	r1, #2
 8005898:	68f8      	ldr	r0, [r7, #12]
 800589a:	f000 fe69 	bl	8006570 <OSPI_WaitFlagStateUntilTimeout>
 800589e:	4603      	mov	r3, r0
 80058a0:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27

        if (status == HAL_OK)
 80058a4:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 80058a8:	2b00      	cmp	r3, #0
 80058aa:	d10d      	bne.n	80058c8 <HAL_OSPI_Receive+0x13a>
        {
          /* Clear transfer complete flag */
          __HAL_OSPI_CLEAR_FLAG(hospi, HAL_OSPI_FLAG_TC);
 80058ac:	68fb      	ldr	r3, [r7, #12]
 80058ae:	681b      	ldr	r3, [r3, #0]
 80058b0:	2202      	movs	r2, #2
 80058b2:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update state */
          hospi->State = HAL_OSPI_STATE_READY;
 80058b4:	68fb      	ldr	r3, [r7, #12]
 80058b6:	2202      	movs	r2, #2
 80058b8:	651a      	str	r2, [r3, #80]	@ 0x50
 80058ba:	e005      	b.n	80058c8 <HAL_OSPI_Receive+0x13a>
        }
      }
    }
    else
    {
      status = HAL_ERROR;
 80058bc:	2301      	movs	r3, #1
 80058be:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
      hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 80058c2:	68fb      	ldr	r3, [r7, #12]
 80058c4:	2210      	movs	r2, #16
 80058c6:	655a      	str	r2, [r3, #84]	@ 0x54
    }
  }

  /* Return function status */
  return status;
 80058c8:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
}
 80058cc:	4618      	mov	r0, r3
 80058ce:	3728      	adds	r7, #40	@ 0x28
 80058d0:	46bd      	mov	sp, r7
 80058d2:	bd80      	pop	{r7, pc}

080058d4 <HAL_OSPI_AutoPolling>:
  * @param  Timeout : Timeout duration
  * @note   This function is used only in Automatic Polling Mode
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_OSPI_AutoPolling(OSPI_HandleTypeDef *hospi, OSPI_AutoPollingTypeDef *cfg, uint32_t Timeout)
{
 80058d4:	b580      	push	{r7, lr}
 80058d6:	b08a      	sub	sp, #40	@ 0x28
 80058d8:	af02      	add	r7, sp, #8
 80058da:	60f8      	str	r0, [r7, #12]
 80058dc:	60b9      	str	r1, [r7, #8]
 80058de:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status;
  uint32_t tickstart = HAL_GetTick();
 80058e0:	f7fd fc4e 	bl	8003180 <HAL_GetTick>
 80058e4:	61b8      	str	r0, [r7, #24]
  uint32_t addr_reg = hospi->Instance->AR;
 80058e6:	68fb      	ldr	r3, [r7, #12]
 80058e8:	681b      	ldr	r3, [r3, #0]
 80058ea:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80058ec:	617b      	str	r3, [r7, #20]
  uint32_t ir_reg = hospi->Instance->IR;
 80058ee:	68fb      	ldr	r3, [r7, #12]
 80058f0:	681b      	ldr	r3, [r3, #0]
 80058f2:	f8d3 3110 	ldr.w	r3, [r3, #272]	@ 0x110
 80058f6:	613b      	str	r3, [r7, #16]
  assert_param(IS_OSPI_AUTOMATIC_STOP(cfg->AutomaticStop));
  assert_param(IS_OSPI_INTERVAL(cfg->Interval));
  assert_param(IS_OSPI_STATUS_BYTES_SIZE(dlr_reg + 1U));

  /* Check the state */
  if ((hospi->State == HAL_OSPI_STATE_CMD_CFG) && (cfg->AutomaticStop == HAL_OSPI_AUTOMATIC_STOP_ENABLE))
 80058f8:	68fb      	ldr	r3, [r7, #12]
 80058fa:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80058fc:	2b04      	cmp	r3, #4
 80058fe:	d164      	bne.n	80059ca <HAL_OSPI_AutoPolling+0xf6>
 8005900:	68bb      	ldr	r3, [r7, #8]
 8005902:	68db      	ldr	r3, [r3, #12]
 8005904:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8005908:	d15f      	bne.n	80059ca <HAL_OSPI_AutoPolling+0xf6>
  {
    /* Wait till busy flag is reset */
    status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800590a:	687b      	ldr	r3, [r7, #4]
 800590c:	9300      	str	r3, [sp, #0]
 800590e:	69bb      	ldr	r3, [r7, #24]
 8005910:	2200      	movs	r2, #0
 8005912:	2120      	movs	r1, #32
 8005914:	68f8      	ldr	r0, [r7, #12]
 8005916:	f000 fe2b 	bl	8006570 <OSPI_WaitFlagStateUntilTimeout>
 800591a:	4603      	mov	r3, r0
 800591c:	77fb      	strb	r3, [r7, #31]

    if (status == HAL_OK)
 800591e:	7ffb      	ldrb	r3, [r7, #31]
 8005920:	2b00      	cmp	r3, #0
 8005922:	d158      	bne.n	80059d6 <HAL_OSPI_AutoPolling+0x102>
    {
      /* Configure registers */
      WRITE_REG(hospi->Instance->PSMAR, cfg->Match);
 8005924:	68fb      	ldr	r3, [r7, #12]
 8005926:	681b      	ldr	r3, [r3, #0]
 8005928:	68ba      	ldr	r2, [r7, #8]
 800592a:	6812      	ldr	r2, [r2, #0]
 800592c:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
      WRITE_REG(hospi->Instance->PSMKR, cfg->Mask);
 8005930:	68fb      	ldr	r3, [r7, #12]
 8005932:	681b      	ldr	r3, [r3, #0]
 8005934:	68ba      	ldr	r2, [r7, #8]
 8005936:	6852      	ldr	r2, [r2, #4]
 8005938:	f8c3 2080 	str.w	r2, [r3, #128]	@ 0x80
      WRITE_REG(hospi->Instance->PIR,   cfg->Interval);
 800593c:	68fb      	ldr	r3, [r7, #12]
 800593e:	681b      	ldr	r3, [r3, #0]
 8005940:	68ba      	ldr	r2, [r7, #8]
 8005942:	6912      	ldr	r2, [r2, #16]
 8005944:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
      MODIFY_REG(hospi->Instance->CR, (OCTOSPI_CR_PMM | OCTOSPI_CR_APMS | OCTOSPI_CR_FMODE),
 8005948:	68fb      	ldr	r3, [r7, #12]
 800594a:	681b      	ldr	r3, [r3, #0]
 800594c:	681b      	ldr	r3, [r3, #0]
 800594e:	f023 5243 	bic.w	r2, r3, #817889280	@ 0x30c00000
 8005952:	68bb      	ldr	r3, [r7, #8]
 8005954:	6899      	ldr	r1, [r3, #8]
 8005956:	68bb      	ldr	r3, [r7, #8]
 8005958:	68db      	ldr	r3, [r3, #12]
 800595a:	430b      	orrs	r3, r1
 800595c:	431a      	orrs	r2, r3
 800595e:	68fb      	ldr	r3, [r7, #12]
 8005960:	681b      	ldr	r3, [r3, #0]
 8005962:	f042 5200 	orr.w	r2, r2, #536870912	@ 0x20000000
 8005966:	601a      	str	r2, [r3, #0]
                 (cfg->MatchMode | cfg->AutomaticStop | OSPI_FUNCTIONAL_MODE_AUTO_POLLING));

      /* Trig the transfer by re-writing address or instruction register */
      if (hospi->Init.MemoryType == HAL_OSPI_MEMTYPE_HYPERBUS)
 8005968:	68fb      	ldr	r3, [r7, #12]
 800596a:	68db      	ldr	r3, [r3, #12]
 800596c:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 8005970:	d104      	bne.n	800597c <HAL_OSPI_AutoPolling+0xa8>
      {
        WRITE_REG(hospi->Instance->AR, addr_reg);
 8005972:	68fb      	ldr	r3, [r7, #12]
 8005974:	681b      	ldr	r3, [r3, #0]
 8005976:	697a      	ldr	r2, [r7, #20]
 8005978:	649a      	str	r2, [r3, #72]	@ 0x48
 800597a:	e011      	b.n	80059a0 <HAL_OSPI_AutoPolling+0xcc>
      }
      else
      {
        if (READ_BIT(hospi->Instance->CCR, OCTOSPI_CCR_ADMODE) != HAL_OSPI_ADDRESS_NONE)
 800597c:	68fb      	ldr	r3, [r7, #12]
 800597e:	681b      	ldr	r3, [r3, #0]
 8005980:	f8d3 3100 	ldr.w	r3, [r3, #256]	@ 0x100
 8005984:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8005988:	2b00      	cmp	r3, #0
 800598a:	d004      	beq.n	8005996 <HAL_OSPI_AutoPolling+0xc2>
        {
          WRITE_REG(hospi->Instance->AR, addr_reg);
 800598c:	68fb      	ldr	r3, [r7, #12]
 800598e:	681b      	ldr	r3, [r3, #0]
 8005990:	697a      	ldr	r2, [r7, #20]
 8005992:	649a      	str	r2, [r3, #72]	@ 0x48
 8005994:	e004      	b.n	80059a0 <HAL_OSPI_AutoPolling+0xcc>
        }
        else
        {
          WRITE_REG(hospi->Instance->IR, ir_reg);
 8005996:	68fb      	ldr	r3, [r7, #12]
 8005998:	681b      	ldr	r3, [r3, #0]
 800599a:	693a      	ldr	r2, [r7, #16]
 800599c:	f8c3 2110 	str.w	r2, [r3, #272]	@ 0x110
        }
      }

      /* Wait till status match flag is set to go back in idle state */
      status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_SM, SET, tickstart, Timeout);
 80059a0:	687b      	ldr	r3, [r7, #4]
 80059a2:	9300      	str	r3, [sp, #0]
 80059a4:	69bb      	ldr	r3, [r7, #24]
 80059a6:	2201      	movs	r2, #1
 80059a8:	2108      	movs	r1, #8
 80059aa:	68f8      	ldr	r0, [r7, #12]
 80059ac:	f000 fde0 	bl	8006570 <OSPI_WaitFlagStateUntilTimeout>
 80059b0:	4603      	mov	r3, r0
 80059b2:	77fb      	strb	r3, [r7, #31]

      if (status == HAL_OK)
 80059b4:	7ffb      	ldrb	r3, [r7, #31]
 80059b6:	2b00      	cmp	r3, #0
 80059b8:	d10d      	bne.n	80059d6 <HAL_OSPI_AutoPolling+0x102>
      {
        /* Clear status match flag */
        __HAL_OSPI_CLEAR_FLAG(hospi, HAL_OSPI_FLAG_SM);
 80059ba:	68fb      	ldr	r3, [r7, #12]
 80059bc:	681b      	ldr	r3, [r3, #0]
 80059be:	2208      	movs	r2, #8
 80059c0:	625a      	str	r2, [r3, #36]	@ 0x24

        /* Update state */
        hospi->State = HAL_OSPI_STATE_READY;
 80059c2:	68fb      	ldr	r3, [r7, #12]
 80059c4:	2202      	movs	r2, #2
 80059c6:	651a      	str	r2, [r3, #80]	@ 0x50
    if (status == HAL_OK)
 80059c8:	e005      	b.n	80059d6 <HAL_OSPI_AutoPolling+0x102>
      }
    }
  }
  else
  {
    status = HAL_ERROR;
 80059ca:	2301      	movs	r3, #1
 80059cc:	77fb      	strb	r3, [r7, #31]
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 80059ce:	68fb      	ldr	r3, [r7, #12]
 80059d0:	2210      	movs	r2, #16
 80059d2:	655a      	str	r2, [r3, #84]	@ 0x54
 80059d4:	e000      	b.n	80059d8 <HAL_OSPI_AutoPolling+0x104>
    if (status == HAL_OK)
 80059d6:	bf00      	nop
  }

  /* Return function status */
  return status;
 80059d8:	7ffb      	ldrb	r3, [r7, #31]
}
 80059da:	4618      	mov	r0, r3
 80059dc:	3720      	adds	r7, #32
 80059de:	46bd      	mov	sp, r7
 80059e0:	bd80      	pop	{r7, pc}
	...

080059e4 <HAL_OSPI_MemoryMapped>:
  * @param  cfg   : structure that contains the memory mapped configuration information.
  * @note   This function is used only in Memory mapped Mode
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_OSPI_MemoryMapped(OSPI_HandleTypeDef *hospi, OSPI_MemoryMappedTypeDef *cfg)
{
 80059e4:	b580      	push	{r7, lr}
 80059e6:	b086      	sub	sp, #24
 80059e8:	af02      	add	r7, sp, #8
 80059ea:	6078      	str	r0, [r7, #4]
 80059ec:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status;
  uint32_t tickstart = HAL_GetTick();
 80059ee:	f7fd fbc7 	bl	8003180 <HAL_GetTick>
 80059f2:	60b8      	str	r0, [r7, #8]

  /* Check the parameters of the memory-mapped configuration structure */
  assert_param(IS_OSPI_TIMEOUT_ACTIVATION(cfg->TimeOutActivation));

  /* Check the state */
  if (hospi->State == HAL_OSPI_STATE_CMD_CFG)
 80059f4:	687b      	ldr	r3, [r7, #4]
 80059f6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80059f8:	2b04      	cmp	r3, #4
 80059fa:	d134      	bne.n	8005a66 <HAL_OSPI_MemoryMapped+0x82>
  {
    /* Wait till busy flag is reset */
    status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, hospi->Timeout);
 80059fc:	687b      	ldr	r3, [r7, #4]
 80059fe:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005a00:	9300      	str	r3, [sp, #0]
 8005a02:	68bb      	ldr	r3, [r7, #8]
 8005a04:	2200      	movs	r2, #0
 8005a06:	2120      	movs	r1, #32
 8005a08:	6878      	ldr	r0, [r7, #4]
 8005a0a:	f000 fdb1 	bl	8006570 <OSPI_WaitFlagStateUntilTimeout>
 8005a0e:	4603      	mov	r3, r0
 8005a10:	73fb      	strb	r3, [r7, #15]

    if (status == HAL_OK)
 8005a12:	7bfb      	ldrb	r3, [r7, #15]
 8005a14:	2b00      	cmp	r3, #0
 8005a16:	d12b      	bne.n	8005a70 <HAL_OSPI_MemoryMapped+0x8c>
    {
      /* Update state */
      hospi->State = HAL_OSPI_STATE_BUSY_MEM_MAPPED;
 8005a18:	687b      	ldr	r3, [r7, #4]
 8005a1a:	2288      	movs	r2, #136	@ 0x88
 8005a1c:	651a      	str	r2, [r3, #80]	@ 0x50

      if (cfg->TimeOutActivation == HAL_OSPI_TIMEOUT_COUNTER_ENABLE)
 8005a1e:	683b      	ldr	r3, [r7, #0]
 8005a20:	681b      	ldr	r3, [r3, #0]
 8005a22:	2b08      	cmp	r3, #8
 8005a24:	d111      	bne.n	8005a4a <HAL_OSPI_MemoryMapped+0x66>
      {
        assert_param(IS_OSPI_TIMEOUT_PERIOD(cfg->TimeOutPeriod));

        /* Configure register */
        WRITE_REG(hospi->Instance->LPTR, cfg->TimeOutPeriod);
 8005a26:	687b      	ldr	r3, [r7, #4]
 8005a28:	681b      	ldr	r3, [r3, #0]
 8005a2a:	683a      	ldr	r2, [r7, #0]
 8005a2c:	6852      	ldr	r2, [r2, #4]
 8005a2e:	f8c3 2130 	str.w	r2, [r3, #304]	@ 0x130

        /* Clear flags related to interrupt */
        __HAL_OSPI_CLEAR_FLAG(hospi, HAL_OSPI_FLAG_TO);
 8005a32:	687b      	ldr	r3, [r7, #4]
 8005a34:	681b      	ldr	r3, [r3, #0]
 8005a36:	2210      	movs	r2, #16
 8005a38:	625a      	str	r2, [r3, #36]	@ 0x24

        /* Enable the timeout interrupt */
        __HAL_OSPI_ENABLE_IT(hospi, HAL_OSPI_IT_TO);
 8005a3a:	687b      	ldr	r3, [r7, #4]
 8005a3c:	681b      	ldr	r3, [r3, #0]
 8005a3e:	681a      	ldr	r2, [r3, #0]
 8005a40:	687b      	ldr	r3, [r7, #4]
 8005a42:	681b      	ldr	r3, [r3, #0]
 8005a44:	f442 1280 	orr.w	r2, r2, #1048576	@ 0x100000
 8005a48:	601a      	str	r2, [r3, #0]
      }

      /* Configure CR register with functional mode as memory-mapped */
      MODIFY_REG(hospi->Instance->CR, (OCTOSPI_CR_TCEN | OCTOSPI_CR_FMODE),
 8005a4a:	687b      	ldr	r3, [r7, #4]
 8005a4c:	681b      	ldr	r3, [r3, #0]
 8005a4e:	681a      	ldr	r2, [r3, #0]
 8005a50:	4b0a      	ldr	r3, [pc, #40]	@ (8005a7c <HAL_OSPI_MemoryMapped+0x98>)
 8005a52:	4013      	ands	r3, r2
 8005a54:	683a      	ldr	r2, [r7, #0]
 8005a56:	6812      	ldr	r2, [r2, #0]
 8005a58:	431a      	orrs	r2, r3
 8005a5a:	687b      	ldr	r3, [r7, #4]
 8005a5c:	681b      	ldr	r3, [r3, #0]
 8005a5e:	f042 5240 	orr.w	r2, r2, #805306368	@ 0x30000000
 8005a62:	601a      	str	r2, [r3, #0]
 8005a64:	e004      	b.n	8005a70 <HAL_OSPI_MemoryMapped+0x8c>
                 (cfg->TimeOutActivation | OSPI_FUNCTIONAL_MODE_MEMORY_MAPPED));
    }
  }
  else
  {
    status = HAL_ERROR;
 8005a66:	2301      	movs	r3, #1
 8005a68:	73fb      	strb	r3, [r7, #15]
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 8005a6a:	687b      	ldr	r3, [r7, #4]
 8005a6c:	2210      	movs	r2, #16
 8005a6e:	655a      	str	r2, [r3, #84]	@ 0x54
  }

  /* Return function status */
  return status;
 8005a70:	7bfb      	ldrb	r3, [r7, #15]
}
 8005a72:	4618      	mov	r0, r3
 8005a74:	3710      	adds	r7, #16
 8005a76:	46bd      	mov	sp, r7
 8005a78:	bd80      	pop	{r7, pc}
 8005a7a:	bf00      	nop
 8005a7c:	cffffff7 	.word	0xcffffff7

08005a80 <HAL_OSPI_Abort>:
  * @brief  Abort the current transmission.
  * @param  hospi : OSPI handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_OSPI_Abort(OSPI_HandleTypeDef *hospi)
{
 8005a80:	b580      	push	{r7, lr}
 8005a82:	b088      	sub	sp, #32
 8005a84:	af02      	add	r7, sp, #8
 8005a86:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8005a88:	2300      	movs	r3, #0
 8005a8a:	75fb      	strb	r3, [r7, #23]
  uint32_t state;
  uint32_t tickstart = HAL_GetTick();
 8005a8c:	f7fd fb78 	bl	8003180 <HAL_GetTick>
 8005a90:	6138      	str	r0, [r7, #16]

  /* Check if the state is in one of the busy or configured states */
  state = hospi->State;
 8005a92:	687b      	ldr	r3, [r7, #4]
 8005a94:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8005a96:	60fb      	str	r3, [r7, #12]
  if (((state & OSPI_BUSY_STATE_MASK) != 0U) || ((state & OSPI_CFG_STATE_MASK) != 0U))
 8005a98:	68fb      	ldr	r3, [r7, #12]
 8005a9a:	f003 0308 	and.w	r3, r3, #8
 8005a9e:	2b00      	cmp	r3, #0
 8005aa0:	d104      	bne.n	8005aac <HAL_OSPI_Abort+0x2c>
 8005aa2:	68fb      	ldr	r3, [r7, #12]
 8005aa4:	f003 0304 	and.w	r3, r3, #4
 8005aa8:	2b00      	cmp	r3, #0
 8005aaa:	d052      	beq.n	8005b52 <HAL_OSPI_Abort+0xd2>
  {
    /* Check if the DMA is enabled */
    if ((hospi->Instance->CR & OCTOSPI_CR_DMAEN) != 0U)
 8005aac:	687b      	ldr	r3, [r7, #4]
 8005aae:	681b      	ldr	r3, [r3, #0]
 8005ab0:	681b      	ldr	r3, [r3, #0]
 8005ab2:	f003 0304 	and.w	r3, r3, #4
 8005ab6:	2b00      	cmp	r3, #0
 8005ab8:	d014      	beq.n	8005ae4 <HAL_OSPI_Abort+0x64>
    {
      /* Disable the DMA transfer on the OctoSPI side */
      CLEAR_BIT(hospi->Instance->CR, OCTOSPI_CR_DMAEN);
 8005aba:	687b      	ldr	r3, [r7, #4]
 8005abc:	681b      	ldr	r3, [r3, #0]
 8005abe:	681a      	ldr	r2, [r3, #0]
 8005ac0:	687b      	ldr	r3, [r7, #4]
 8005ac2:	681b      	ldr	r3, [r3, #0]
 8005ac4:	f022 0204 	bic.w	r2, r2, #4
 8005ac8:	601a      	str	r2, [r3, #0]

      /* Disable the DMA transfer on the DMA side */
      status = HAL_MDMA_Abort(hospi->hmdma);
 8005aca:	687b      	ldr	r3, [r7, #4]
 8005acc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8005ace:	4618      	mov	r0, r3
 8005ad0:	f7ff fc1e 	bl	8005310 <HAL_MDMA_Abort>
 8005ad4:	4603      	mov	r3, r0
 8005ad6:	75fb      	strb	r3, [r7, #23]
      if (status != HAL_OK)
 8005ad8:	7dfb      	ldrb	r3, [r7, #23]
 8005ada:	2b00      	cmp	r3, #0
 8005adc:	d002      	beq.n	8005ae4 <HAL_OSPI_Abort+0x64>
      {
        hospi->ErrorCode = HAL_OSPI_ERROR_DMA;
 8005ade:	687b      	ldr	r3, [r7, #4]
 8005ae0:	2204      	movs	r2, #4
 8005ae2:	655a      	str	r2, [r3, #84]	@ 0x54
      }
    }

    if (__HAL_OSPI_GET_FLAG(hospi, HAL_OSPI_FLAG_BUSY) != RESET)
 8005ae4:	687b      	ldr	r3, [r7, #4]
 8005ae6:	681b      	ldr	r3, [r3, #0]
 8005ae8:	6a1b      	ldr	r3, [r3, #32]
 8005aea:	f003 0320 	and.w	r3, r3, #32
 8005aee:	2b00      	cmp	r3, #0
 8005af0:	d02b      	beq.n	8005b4a <HAL_OSPI_Abort+0xca>
    {
      /* Perform an abort of the OctoSPI */
      SET_BIT(hospi->Instance->CR, OCTOSPI_CR_ABORT);
 8005af2:	687b      	ldr	r3, [r7, #4]
 8005af4:	681b      	ldr	r3, [r3, #0]
 8005af6:	681a      	ldr	r2, [r3, #0]
 8005af8:	687b      	ldr	r3, [r7, #4]
 8005afa:	681b      	ldr	r3, [r3, #0]
 8005afc:	f042 0202 	orr.w	r2, r2, #2
 8005b00:	601a      	str	r2, [r3, #0]

      /* Wait until the transfer complete flag is set to go back in idle state */
      status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_TC, SET, tickstart, hospi->Timeout);
 8005b02:	687b      	ldr	r3, [r7, #4]
 8005b04:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005b06:	9300      	str	r3, [sp, #0]
 8005b08:	693b      	ldr	r3, [r7, #16]
 8005b0a:	2201      	movs	r2, #1
 8005b0c:	2102      	movs	r1, #2
 8005b0e:	6878      	ldr	r0, [r7, #4]
 8005b10:	f000 fd2e 	bl	8006570 <OSPI_WaitFlagStateUntilTimeout>
 8005b14:	4603      	mov	r3, r0
 8005b16:	75fb      	strb	r3, [r7, #23]

      if (status == HAL_OK)
 8005b18:	7dfb      	ldrb	r3, [r7, #23]
 8005b1a:	2b00      	cmp	r3, #0
 8005b1c:	d11f      	bne.n	8005b5e <HAL_OSPI_Abort+0xde>
      {
        /* Clear transfer complete flag */
        __HAL_OSPI_CLEAR_FLAG(hospi, HAL_OSPI_FLAG_TC);
 8005b1e:	687b      	ldr	r3, [r7, #4]
 8005b20:	681b      	ldr	r3, [r3, #0]
 8005b22:	2202      	movs	r2, #2
 8005b24:	625a      	str	r2, [r3, #36]	@ 0x24

        /* Wait until the busy flag is reset to go back in idle state */
        status = OSPI_WaitFlagStateUntilTimeout(hospi, HAL_OSPI_FLAG_BUSY, RESET, tickstart, hospi->Timeout);
 8005b26:	687b      	ldr	r3, [r7, #4]
 8005b28:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8005b2a:	9300      	str	r3, [sp, #0]
 8005b2c:	693b      	ldr	r3, [r7, #16]
 8005b2e:	2200      	movs	r2, #0
 8005b30:	2120      	movs	r1, #32
 8005b32:	6878      	ldr	r0, [r7, #4]
 8005b34:	f000 fd1c 	bl	8006570 <OSPI_WaitFlagStateUntilTimeout>
 8005b38:	4603      	mov	r3, r0
 8005b3a:	75fb      	strb	r3, [r7, #23]

        if (status == HAL_OK)
 8005b3c:	7dfb      	ldrb	r3, [r7, #23]
 8005b3e:	2b00      	cmp	r3, #0
 8005b40:	d10d      	bne.n	8005b5e <HAL_OSPI_Abort+0xde>
        {
          /* Update state */
          hospi->State = HAL_OSPI_STATE_READY;
 8005b42:	687b      	ldr	r3, [r7, #4]
 8005b44:	2202      	movs	r2, #2
 8005b46:	651a      	str	r2, [r3, #80]	@ 0x50
    if (__HAL_OSPI_GET_FLAG(hospi, HAL_OSPI_FLAG_BUSY) != RESET)
 8005b48:	e009      	b.n	8005b5e <HAL_OSPI_Abort+0xde>
      }
    }
    else
    {
      /* Update state */
      hospi->State = HAL_OSPI_STATE_READY;
 8005b4a:	687b      	ldr	r3, [r7, #4]
 8005b4c:	2202      	movs	r2, #2
 8005b4e:	651a      	str	r2, [r3, #80]	@ 0x50
    if (__HAL_OSPI_GET_FLAG(hospi, HAL_OSPI_FLAG_BUSY) != RESET)
 8005b50:	e005      	b.n	8005b5e <HAL_OSPI_Abort+0xde>
    }
  }
  else
  {
    status = HAL_ERROR;
 8005b52:	2301      	movs	r3, #1
 8005b54:	75fb      	strb	r3, [r7, #23]
    hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_SEQUENCE;
 8005b56:	687b      	ldr	r3, [r7, #4]
 8005b58:	2210      	movs	r2, #16
 8005b5a:	655a      	str	r2, [r3, #84]	@ 0x54
 8005b5c:	e000      	b.n	8005b60 <HAL_OSPI_Abort+0xe0>
    if (__HAL_OSPI_GET_FLAG(hospi, HAL_OSPI_FLAG_BUSY) != RESET)
 8005b5e:	bf00      	nop
  }

  /* Return function status */
  return status;
 8005b60:	7dfb      	ldrb	r3, [r7, #23]
}
 8005b62:	4618      	mov	r0, r3
 8005b64:	3718      	adds	r7, #24
 8005b66:	46bd      	mov	sp, r7
 8005b68:	bd80      	pop	{r7, pc}

08005b6a <HAL_OSPI_SetTimeout>:
  * @param  hospi   : OSPI handle.
  * @param  Timeout : Timeout for the memory access.
  * @retval None
  */
HAL_StatusTypeDef HAL_OSPI_SetTimeout(OSPI_HandleTypeDef *hospi, uint32_t Timeout)
{
 8005b6a:	b480      	push	{r7}
 8005b6c:	b083      	sub	sp, #12
 8005b6e:	af00      	add	r7, sp, #0
 8005b70:	6078      	str	r0, [r7, #4]
 8005b72:	6039      	str	r1, [r7, #0]
  hospi->Timeout = Timeout;
 8005b74:	687b      	ldr	r3, [r7, #4]
 8005b76:	683a      	ldr	r2, [r7, #0]
 8005b78:	659a      	str	r2, [r3, #88]	@ 0x58
  return HAL_OK;
 8005b7a:	2300      	movs	r3, #0
}
 8005b7c:	4618      	mov	r0, r3
 8005b7e:	370c      	adds	r7, #12
 8005b80:	46bd      	mov	sp, r7
 8005b82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b86:	4770      	bx	lr

08005b88 <HAL_OSPI_GetState>:
  * @brief  Return the OSPI handle state.
  * @param  hospi : OSPI handle
  * @retval HAL state
  */
uint32_t HAL_OSPI_GetState(const OSPI_HandleTypeDef *hospi)
{
 8005b88:	b480      	push	{r7}
 8005b8a:	b083      	sub	sp, #12
 8005b8c:	af00      	add	r7, sp, #0
 8005b8e:	6078      	str	r0, [r7, #4]
  /* Return OSPI handle state */
  return hospi->State;
 8005b90:	687b      	ldr	r3, [r7, #4]
 8005b92:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
}
 8005b94:	4618      	mov	r0, r3
 8005b96:	370c      	adds	r7, #12
 8005b98:	46bd      	mov	sp, r7
 8005b9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005b9e:	4770      	bx	lr

08005ba0 <HAL_OSPIM_Config>:
  * @param  cfg     : Configuration of the IO Manager for the instance
  * @param  Timeout : Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_OSPIM_Config(OSPI_HandleTypeDef *hospi, OSPIM_CfgTypeDef *cfg, uint32_t Timeout)
{
 8005ba0:	b580      	push	{r7, lr}
 8005ba2:	b094      	sub	sp, #80	@ 0x50
 8005ba4:	af00      	add	r7, sp, #0
 8005ba6:	60f8      	str	r0, [r7, #12]
 8005ba8:	60b9      	str	r1, [r7, #8]
 8005baa:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8005bac:	2300      	movs	r3, #0
 8005bae:	f887 304f 	strb.w	r3, [r7, #79]	@ 0x4f
  uint32_t instance;
  uint8_t index;
  uint8_t ospi_enabled = 0U;
 8005bb2:	2300      	movs	r3, #0
 8005bb4:	f887 3046 	strb.w	r3, [r7, #70]	@ 0x46
  assert_param(IS_OSPIM_PORT(cfg->NCSPort));
  assert_param(IS_OSPIM_IO_PORT(cfg->IOLowPort));
  assert_param(IS_OSPIM_IO_PORT(cfg->IOHighPort));
  assert_param(IS_OSPIM_REQ2ACKTIME(cfg->Req2AckTime));

  if (hospi->Instance == OCTOSPI1)
 8005bb8:	68fb      	ldr	r3, [r7, #12]
 8005bba:	681b      	ldr	r3, [r3, #0]
 8005bbc:	4a9d      	ldr	r2, [pc, #628]	@ (8005e34 <HAL_OSPIM_Config+0x294>)
 8005bbe:	4293      	cmp	r3, r2
 8005bc0:	d105      	bne.n	8005bce <HAL_OSPIM_Config+0x2e>
  {
    instance = 0U;
 8005bc2:	2300      	movs	r3, #0
 8005bc4:	64bb      	str	r3, [r7, #72]	@ 0x48
    other_instance = 1U;
 8005bc6:	2301      	movs	r3, #1
 8005bc8:	f887 3045 	strb.w	r3, [r7, #69]	@ 0x45
 8005bcc:	e004      	b.n	8005bd8 <HAL_OSPIM_Config+0x38>
  }
  else
  {
    instance = 1U;
 8005bce:	2301      	movs	r3, #1
 8005bd0:	64bb      	str	r3, [r7, #72]	@ 0x48
    other_instance = 0U;
 8005bd2:	2300      	movs	r3, #0
 8005bd4:	f887 3045 	strb.w	r3, [r7, #69]	@ 0x45
  }

  /**************** Get current configuration of the instances ****************/
  for (index = 0U; index < OSPI_NB_INSTANCE; index++)
 8005bd8:	2300      	movs	r3, #0
 8005bda:	f887 3047 	strb.w	r3, [r7, #71]	@ 0x47
 8005bde:	e01d      	b.n	8005c1c <HAL_OSPIM_Config+0x7c>
  {
    if (OSPIM_GetConfig(index + 1U, &(IOM_cfg[index])) != HAL_OK)
 8005be0:	f897 3047 	ldrb.w	r3, [r7, #71]	@ 0x47
 8005be4:	3301      	adds	r3, #1
 8005be6:	b2d8      	uxtb	r0, r3
 8005be8:	f897 2047 	ldrb.w	r2, [r7, #71]	@ 0x47
 8005bec:	f107 0114 	add.w	r1, r7, #20
 8005bf0:	4613      	mov	r3, r2
 8005bf2:	005b      	lsls	r3, r3, #1
 8005bf4:	4413      	add	r3, r2
 8005bf6:	00db      	lsls	r3, r3, #3
 8005bf8:	440b      	add	r3, r1
 8005bfa:	4619      	mov	r1, r3
 8005bfc:	f000 fe6a 	bl	80068d4 <OSPIM_GetConfig>
 8005c00:	4603      	mov	r3, r0
 8005c02:	2b00      	cmp	r3, #0
 8005c04:	d005      	beq.n	8005c12 <HAL_OSPIM_Config+0x72>
    {
      status = HAL_ERROR;
 8005c06:	2301      	movs	r3, #1
 8005c08:	f887 304f 	strb.w	r3, [r7, #79]	@ 0x4f
      hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_PARAM;
 8005c0c:	68fb      	ldr	r3, [r7, #12]
 8005c0e:	2208      	movs	r2, #8
 8005c10:	655a      	str	r2, [r3, #84]	@ 0x54
  for (index = 0U; index < OSPI_NB_INSTANCE; index++)
 8005c12:	f897 3047 	ldrb.w	r3, [r7, #71]	@ 0x47
 8005c16:	3301      	adds	r3, #1
 8005c18:	f887 3047 	strb.w	r3, [r7, #71]	@ 0x47
 8005c1c:	f897 3047 	ldrb.w	r3, [r7, #71]	@ 0x47
 8005c20:	2b01      	cmp	r3, #1
 8005c22:	d9dd      	bls.n	8005be0 <HAL_OSPIM_Config+0x40>
    }
  }

  if (status == HAL_OK)
 8005c24:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
 8005c28:	2b00      	cmp	r3, #0
 8005c2a:	f040 8495 	bne.w	8006558 <HAL_OSPIM_Config+0x9b8>
  {
    /********** Disable both OctoSPI to configure OctoSPI IO Manager **********/
    if ((OCTOSPI1->CR & OCTOSPI_CR_EN) != 0U)
 8005c2e:	4b81      	ldr	r3, [pc, #516]	@ (8005e34 <HAL_OSPIM_Config+0x294>)
 8005c30:	681b      	ldr	r3, [r3, #0]
 8005c32:	f003 0301 	and.w	r3, r3, #1
 8005c36:	2b00      	cmp	r3, #0
 8005c38:	d00b      	beq.n	8005c52 <HAL_OSPIM_Config+0xb2>
    {
      CLEAR_BIT(OCTOSPI1->CR, OCTOSPI_CR_EN);
 8005c3a:	4b7e      	ldr	r3, [pc, #504]	@ (8005e34 <HAL_OSPIM_Config+0x294>)
 8005c3c:	681b      	ldr	r3, [r3, #0]
 8005c3e:	4a7d      	ldr	r2, [pc, #500]	@ (8005e34 <HAL_OSPIM_Config+0x294>)
 8005c40:	f023 0301 	bic.w	r3, r3, #1
 8005c44:	6013      	str	r3, [r2, #0]
      ospi_enabled |= 0x1U;
 8005c46:	f897 3046 	ldrb.w	r3, [r7, #70]	@ 0x46
 8005c4a:	f043 0301 	orr.w	r3, r3, #1
 8005c4e:	f887 3046 	strb.w	r3, [r7, #70]	@ 0x46
    }
    if ((OCTOSPI2->CR & OCTOSPI_CR_EN) != 0U)
 8005c52:	4b79      	ldr	r3, [pc, #484]	@ (8005e38 <HAL_OSPIM_Config+0x298>)
 8005c54:	681b      	ldr	r3, [r3, #0]
 8005c56:	f003 0301 	and.w	r3, r3, #1
 8005c5a:	2b00      	cmp	r3, #0
 8005c5c:	d00b      	beq.n	8005c76 <HAL_OSPIM_Config+0xd6>
    {
      CLEAR_BIT(OCTOSPI2->CR, OCTOSPI_CR_EN);
 8005c5e:	4b76      	ldr	r3, [pc, #472]	@ (8005e38 <HAL_OSPIM_Config+0x298>)
 8005c60:	681b      	ldr	r3, [r3, #0]
 8005c62:	4a75      	ldr	r2, [pc, #468]	@ (8005e38 <HAL_OSPIM_Config+0x298>)
 8005c64:	f023 0301 	bic.w	r3, r3, #1
 8005c68:	6013      	str	r3, [r2, #0]
      ospi_enabled |= 0x2U;
 8005c6a:	f897 3046 	ldrb.w	r3, [r7, #70]	@ 0x46
 8005c6e:	f043 0302 	orr.w	r3, r3, #2
 8005c72:	f887 3046 	strb.w	r3, [r7, #70]	@ 0x46
    }

    /***************** Deactivation of previous configuration *****************/
    CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[instance].NCSPort - 1U)], OCTOSPIM_PCR_NCSEN);
 8005c76:	4971      	ldr	r1, [pc, #452]	@ (8005e3c <HAL_OSPIM_Config+0x29c>)
 8005c78:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8005c7a:	4613      	mov	r3, r2
 8005c7c:	005b      	lsls	r3, r3, #1
 8005c7e:	4413      	add	r3, r2
 8005c80:	00db      	lsls	r3, r3, #3
 8005c82:	3350      	adds	r3, #80	@ 0x50
 8005c84:	443b      	add	r3, r7
 8005c86:	3b34      	subs	r3, #52	@ 0x34
 8005c88:	681b      	ldr	r3, [r3, #0]
 8005c8a:	3b01      	subs	r3, #1
 8005c8c:	009b      	lsls	r3, r3, #2
 8005c8e:	440b      	add	r3, r1
 8005c90:	6859      	ldr	r1, [r3, #4]
 8005c92:	486a      	ldr	r0, [pc, #424]	@ (8005e3c <HAL_OSPIM_Config+0x29c>)
 8005c94:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8005c96:	4613      	mov	r3, r2
 8005c98:	005b      	lsls	r3, r3, #1
 8005c9a:	4413      	add	r3, r2
 8005c9c:	00db      	lsls	r3, r3, #3
 8005c9e:	3350      	adds	r3, #80	@ 0x50
 8005ca0:	443b      	add	r3, r7
 8005ca2:	3b34      	subs	r3, #52	@ 0x34
 8005ca4:	681b      	ldr	r3, [r3, #0]
 8005ca6:	3b01      	subs	r3, #1
 8005ca8:	f421 7280 	bic.w	r2, r1, #256	@ 0x100
 8005cac:	009b      	lsls	r3, r3, #2
 8005cae:	4403      	add	r3, r0
 8005cb0:	605a      	str	r2, [r3, #4]
    if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) != 0U)
 8005cb2:	4b62      	ldr	r3, [pc, #392]	@ (8005e3c <HAL_OSPIM_Config+0x29c>)
 8005cb4:	681b      	ldr	r3, [r3, #0]
 8005cb6:	f003 0301 	and.w	r3, r3, #1
 8005cba:	2b00      	cmp	r3, #0
 8005cbc:	f000 80c0 	beq.w	8005e40 <HAL_OSPIM_Config+0x2a0>
    {
      /* De-multiplexing should be performed */
      CLEAR_BIT(OCTOSPIM->CR, OCTOSPIM_CR_MUXEN);
 8005cc0:	4b5e      	ldr	r3, [pc, #376]	@ (8005e3c <HAL_OSPIM_Config+0x29c>)
 8005cc2:	681b      	ldr	r3, [r3, #0]
 8005cc4:	4a5d      	ldr	r2, [pc, #372]	@ (8005e3c <HAL_OSPIM_Config+0x29c>)
 8005cc6:	f023 0301 	bic.w	r3, r3, #1
 8005cca:	6013      	str	r3, [r2, #0]

      if (other_instance == 1U)
 8005ccc:	f897 3045 	ldrb.w	r3, [r7, #69]	@ 0x45
 8005cd0:	2b01      	cmp	r3, #1
 8005cd2:	f040 8162 	bne.w	8005f9a <HAL_OSPIM_Config+0x3fa>
      {
        SET_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].ClkPort - 1U)], OCTOSPIM_PCR_CLKSRC);
 8005cd6:	4959      	ldr	r1, [pc, #356]	@ (8005e3c <HAL_OSPIM_Config+0x29c>)
 8005cd8:	f897 2045 	ldrb.w	r2, [r7, #69]	@ 0x45
 8005cdc:	4613      	mov	r3, r2
 8005cde:	005b      	lsls	r3, r3, #1
 8005ce0:	4413      	add	r3, r2
 8005ce2:	00db      	lsls	r3, r3, #3
 8005ce4:	3350      	adds	r3, #80	@ 0x50
 8005ce6:	443b      	add	r3, r7
 8005ce8:	3b3c      	subs	r3, #60	@ 0x3c
 8005cea:	681b      	ldr	r3, [r3, #0]
 8005cec:	3b01      	subs	r3, #1
 8005cee:	009b      	lsls	r3, r3, #2
 8005cf0:	440b      	add	r3, r1
 8005cf2:	6859      	ldr	r1, [r3, #4]
 8005cf4:	4851      	ldr	r0, [pc, #324]	@ (8005e3c <HAL_OSPIM_Config+0x29c>)
 8005cf6:	f897 2045 	ldrb.w	r2, [r7, #69]	@ 0x45
 8005cfa:	4613      	mov	r3, r2
 8005cfc:	005b      	lsls	r3, r3, #1
 8005cfe:	4413      	add	r3, r2
 8005d00:	00db      	lsls	r3, r3, #3
 8005d02:	3350      	adds	r3, #80	@ 0x50
 8005d04:	443b      	add	r3, r7
 8005d06:	3b3c      	subs	r3, #60	@ 0x3c
 8005d08:	681b      	ldr	r3, [r3, #0]
 8005d0a:	3b01      	subs	r3, #1
 8005d0c:	f041 0202 	orr.w	r2, r1, #2
 8005d10:	009b      	lsls	r3, r3, #2
 8005d12:	4403      	add	r3, r0
 8005d14:	605a      	str	r2, [r3, #4]
        if (IOM_cfg[other_instance].DQSPort != 0U)
 8005d16:	f897 2045 	ldrb.w	r2, [r7, #69]	@ 0x45
 8005d1a:	4613      	mov	r3, r2
 8005d1c:	005b      	lsls	r3, r3, #1
 8005d1e:	4413      	add	r3, r2
 8005d20:	00db      	lsls	r3, r3, #3
 8005d22:	3350      	adds	r3, #80	@ 0x50
 8005d24:	443b      	add	r3, r7
 8005d26:	3b38      	subs	r3, #56	@ 0x38
 8005d28:	681b      	ldr	r3, [r3, #0]
 8005d2a:	2b00      	cmp	r3, #0
 8005d2c:	d01f      	beq.n	8005d6e <HAL_OSPIM_Config+0x1ce>
        {
          SET_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].DQSPort - 1U)], OCTOSPIM_PCR_DQSSRC);
 8005d2e:	4943      	ldr	r1, [pc, #268]	@ (8005e3c <HAL_OSPIM_Config+0x29c>)
 8005d30:	f897 2045 	ldrb.w	r2, [r7, #69]	@ 0x45
 8005d34:	4613      	mov	r3, r2
 8005d36:	005b      	lsls	r3, r3, #1
 8005d38:	4413      	add	r3, r2
 8005d3a:	00db      	lsls	r3, r3, #3
 8005d3c:	3350      	adds	r3, #80	@ 0x50
 8005d3e:	443b      	add	r3, r7
 8005d40:	3b38      	subs	r3, #56	@ 0x38
 8005d42:	681b      	ldr	r3, [r3, #0]
 8005d44:	3b01      	subs	r3, #1
 8005d46:	009b      	lsls	r3, r3, #2
 8005d48:	440b      	add	r3, r1
 8005d4a:	6859      	ldr	r1, [r3, #4]
 8005d4c:	483b      	ldr	r0, [pc, #236]	@ (8005e3c <HAL_OSPIM_Config+0x29c>)
 8005d4e:	f897 2045 	ldrb.w	r2, [r7, #69]	@ 0x45
 8005d52:	4613      	mov	r3, r2
 8005d54:	005b      	lsls	r3, r3, #1
 8005d56:	4413      	add	r3, r2
 8005d58:	00db      	lsls	r3, r3, #3
 8005d5a:	3350      	adds	r3, #80	@ 0x50
 8005d5c:	443b      	add	r3, r7
 8005d5e:	3b38      	subs	r3, #56	@ 0x38
 8005d60:	681b      	ldr	r3, [r3, #0]
 8005d62:	3b01      	subs	r3, #1
 8005d64:	f041 0220 	orr.w	r2, r1, #32
 8005d68:	009b      	lsls	r3, r3, #2
 8005d6a:	4403      	add	r3, r0
 8005d6c:	605a      	str	r2, [r3, #4]
        }
        if (IOM_cfg[other_instance].IOLowPort != HAL_OSPIM_IOPORT_NONE)
 8005d6e:	f897 2045 	ldrb.w	r2, [r7, #69]	@ 0x45
 8005d72:	4613      	mov	r3, r2
 8005d74:	005b      	lsls	r3, r3, #1
 8005d76:	4413      	add	r3, r2
 8005d78:	00db      	lsls	r3, r3, #3
 8005d7a:	3350      	adds	r3, #80	@ 0x50
 8005d7c:	443b      	add	r3, r7
 8005d7e:	3b30      	subs	r3, #48	@ 0x30
 8005d80:	681b      	ldr	r3, [r3, #0]
 8005d82:	2b00      	cmp	r3, #0
 8005d84:	d023      	beq.n	8005dce <HAL_OSPIM_Config+0x22e>
        {
          SET_BIT(OCTOSPIM->PCR[((IOM_cfg[other_instance].IOLowPort - 1U)& OSPI_IOM_PORT_MASK)], \
 8005d86:	492d      	ldr	r1, [pc, #180]	@ (8005e3c <HAL_OSPIM_Config+0x29c>)
 8005d88:	f897 2045 	ldrb.w	r2, [r7, #69]	@ 0x45
 8005d8c:	4613      	mov	r3, r2
 8005d8e:	005b      	lsls	r3, r3, #1
 8005d90:	4413      	add	r3, r2
 8005d92:	00db      	lsls	r3, r3, #3
 8005d94:	3350      	adds	r3, #80	@ 0x50
 8005d96:	443b      	add	r3, r7
 8005d98:	3b30      	subs	r3, #48	@ 0x30
 8005d9a:	681b      	ldr	r3, [r3, #0]
 8005d9c:	3b01      	subs	r3, #1
 8005d9e:	f003 0301 	and.w	r3, r3, #1
 8005da2:	009b      	lsls	r3, r3, #2
 8005da4:	440b      	add	r3, r1
 8005da6:	6859      	ldr	r1, [r3, #4]
 8005da8:	4824      	ldr	r0, [pc, #144]	@ (8005e3c <HAL_OSPIM_Config+0x29c>)
 8005daa:	f897 2045 	ldrb.w	r2, [r7, #69]	@ 0x45
 8005dae:	4613      	mov	r3, r2
 8005db0:	005b      	lsls	r3, r3, #1
 8005db2:	4413      	add	r3, r2
 8005db4:	00db      	lsls	r3, r3, #3
 8005db6:	3350      	adds	r3, #80	@ 0x50
 8005db8:	443b      	add	r3, r7
 8005dba:	3b30      	subs	r3, #48	@ 0x30
 8005dbc:	681b      	ldr	r3, [r3, #0]
 8005dbe:	3b01      	subs	r3, #1
 8005dc0:	f003 0301 	and.w	r3, r3, #1
 8005dc4:	f441 2280 	orr.w	r2, r1, #262144	@ 0x40000
 8005dc8:	009b      	lsls	r3, r3, #2
 8005dca:	4403      	add	r3, r0
 8005dcc:	605a      	str	r2, [r3, #4]
                  OCTOSPIM_PCR_IOLSRC_1);
        }
        if (IOM_cfg[other_instance].IOHighPort != HAL_OSPIM_IOPORT_NONE)
 8005dce:	f897 2045 	ldrb.w	r2, [r7, #69]	@ 0x45
 8005dd2:	4613      	mov	r3, r2
 8005dd4:	005b      	lsls	r3, r3, #1
 8005dd6:	4413      	add	r3, r2
 8005dd8:	00db      	lsls	r3, r3, #3
 8005dda:	3350      	adds	r3, #80	@ 0x50
 8005ddc:	443b      	add	r3, r7
 8005dde:	3b2c      	subs	r3, #44	@ 0x2c
 8005de0:	681b      	ldr	r3, [r3, #0]
 8005de2:	2b00      	cmp	r3, #0
 8005de4:	f000 80d9 	beq.w	8005f9a <HAL_OSPIM_Config+0x3fa>
        {
          SET_BIT(OCTOSPIM->PCR[((IOM_cfg[other_instance].IOHighPort - 1U)& OSPI_IOM_PORT_MASK)], \
 8005de8:	4914      	ldr	r1, [pc, #80]	@ (8005e3c <HAL_OSPIM_Config+0x29c>)
 8005dea:	f897 2045 	ldrb.w	r2, [r7, #69]	@ 0x45
 8005dee:	4613      	mov	r3, r2
 8005df0:	005b      	lsls	r3, r3, #1
 8005df2:	4413      	add	r3, r2
 8005df4:	00db      	lsls	r3, r3, #3
 8005df6:	3350      	adds	r3, #80	@ 0x50
 8005df8:	443b      	add	r3, r7
 8005dfa:	3b2c      	subs	r3, #44	@ 0x2c
 8005dfc:	681b      	ldr	r3, [r3, #0]
 8005dfe:	3b01      	subs	r3, #1
 8005e00:	f003 0301 	and.w	r3, r3, #1
 8005e04:	009b      	lsls	r3, r3, #2
 8005e06:	440b      	add	r3, r1
 8005e08:	6859      	ldr	r1, [r3, #4]
 8005e0a:	480c      	ldr	r0, [pc, #48]	@ (8005e3c <HAL_OSPIM_Config+0x29c>)
 8005e0c:	f897 2045 	ldrb.w	r2, [r7, #69]	@ 0x45
 8005e10:	4613      	mov	r3, r2
 8005e12:	005b      	lsls	r3, r3, #1
 8005e14:	4413      	add	r3, r2
 8005e16:	00db      	lsls	r3, r3, #3
 8005e18:	3350      	adds	r3, #80	@ 0x50
 8005e1a:	443b      	add	r3, r7
 8005e1c:	3b2c      	subs	r3, #44	@ 0x2c
 8005e1e:	681b      	ldr	r3, [r3, #0]
 8005e20:	3b01      	subs	r3, #1
 8005e22:	f003 0301 	and.w	r3, r3, #1
 8005e26:	f041 6280 	orr.w	r2, r1, #67108864	@ 0x4000000
 8005e2a:	009b      	lsls	r3, r3, #2
 8005e2c:	4403      	add	r3, r0
 8005e2e:	605a      	str	r2, [r3, #4]
 8005e30:	e0b3      	b.n	8005f9a <HAL_OSPIM_Config+0x3fa>
 8005e32:	bf00      	nop
 8005e34:	52005000 	.word	0x52005000
 8005e38:	5200a000 	.word	0x5200a000
 8005e3c:	5200b400 	.word	0x5200b400
        }
      }
    }
    else
    {
      if (IOM_cfg[instance].ClkPort != 0U)
 8005e40:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8005e42:	4613      	mov	r3, r2
 8005e44:	005b      	lsls	r3, r3, #1
 8005e46:	4413      	add	r3, r2
 8005e48:	00db      	lsls	r3, r3, #3
 8005e4a:	3350      	adds	r3, #80	@ 0x50
 8005e4c:	443b      	add	r3, r7
 8005e4e:	3b3c      	subs	r3, #60	@ 0x3c
 8005e50:	681b      	ldr	r3, [r3, #0]
 8005e52:	2b00      	cmp	r3, #0
 8005e54:	f000 80a1 	beq.w	8005f9a <HAL_OSPIM_Config+0x3fa>
      {
        CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[instance].ClkPort - 1U)], OCTOSPIM_PCR_CLKEN);
 8005e58:	4993      	ldr	r1, [pc, #588]	@ (80060a8 <HAL_OSPIM_Config+0x508>)
 8005e5a:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8005e5c:	4613      	mov	r3, r2
 8005e5e:	005b      	lsls	r3, r3, #1
 8005e60:	4413      	add	r3, r2
 8005e62:	00db      	lsls	r3, r3, #3
 8005e64:	3350      	adds	r3, #80	@ 0x50
 8005e66:	443b      	add	r3, r7
 8005e68:	3b3c      	subs	r3, #60	@ 0x3c
 8005e6a:	681b      	ldr	r3, [r3, #0]
 8005e6c:	3b01      	subs	r3, #1
 8005e6e:	009b      	lsls	r3, r3, #2
 8005e70:	440b      	add	r3, r1
 8005e72:	6859      	ldr	r1, [r3, #4]
 8005e74:	488c      	ldr	r0, [pc, #560]	@ (80060a8 <HAL_OSPIM_Config+0x508>)
 8005e76:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8005e78:	4613      	mov	r3, r2
 8005e7a:	005b      	lsls	r3, r3, #1
 8005e7c:	4413      	add	r3, r2
 8005e7e:	00db      	lsls	r3, r3, #3
 8005e80:	3350      	adds	r3, #80	@ 0x50
 8005e82:	443b      	add	r3, r7
 8005e84:	3b3c      	subs	r3, #60	@ 0x3c
 8005e86:	681b      	ldr	r3, [r3, #0]
 8005e88:	3b01      	subs	r3, #1
 8005e8a:	f021 0201 	bic.w	r2, r1, #1
 8005e8e:	009b      	lsls	r3, r3, #2
 8005e90:	4403      	add	r3, r0
 8005e92:	605a      	str	r2, [r3, #4]
        if (IOM_cfg[instance].DQSPort != 0U)
 8005e94:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8005e96:	4613      	mov	r3, r2
 8005e98:	005b      	lsls	r3, r3, #1
 8005e9a:	4413      	add	r3, r2
 8005e9c:	00db      	lsls	r3, r3, #3
 8005e9e:	3350      	adds	r3, #80	@ 0x50
 8005ea0:	443b      	add	r3, r7
 8005ea2:	3b38      	subs	r3, #56	@ 0x38
 8005ea4:	681b      	ldr	r3, [r3, #0]
 8005ea6:	2b00      	cmp	r3, #0
 8005ea8:	d01d      	beq.n	8005ee6 <HAL_OSPIM_Config+0x346>
        {
          CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[instance].DQSPort - 1U)], OCTOSPIM_PCR_DQSEN);
 8005eaa:	497f      	ldr	r1, [pc, #508]	@ (80060a8 <HAL_OSPIM_Config+0x508>)
 8005eac:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8005eae:	4613      	mov	r3, r2
 8005eb0:	005b      	lsls	r3, r3, #1
 8005eb2:	4413      	add	r3, r2
 8005eb4:	00db      	lsls	r3, r3, #3
 8005eb6:	3350      	adds	r3, #80	@ 0x50
 8005eb8:	443b      	add	r3, r7
 8005eba:	3b38      	subs	r3, #56	@ 0x38
 8005ebc:	681b      	ldr	r3, [r3, #0]
 8005ebe:	3b01      	subs	r3, #1
 8005ec0:	009b      	lsls	r3, r3, #2
 8005ec2:	440b      	add	r3, r1
 8005ec4:	6859      	ldr	r1, [r3, #4]
 8005ec6:	4878      	ldr	r0, [pc, #480]	@ (80060a8 <HAL_OSPIM_Config+0x508>)
 8005ec8:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8005eca:	4613      	mov	r3, r2
 8005ecc:	005b      	lsls	r3, r3, #1
 8005ece:	4413      	add	r3, r2
 8005ed0:	00db      	lsls	r3, r3, #3
 8005ed2:	3350      	adds	r3, #80	@ 0x50
 8005ed4:	443b      	add	r3, r7
 8005ed6:	3b38      	subs	r3, #56	@ 0x38
 8005ed8:	681b      	ldr	r3, [r3, #0]
 8005eda:	3b01      	subs	r3, #1
 8005edc:	f021 0210 	bic.w	r2, r1, #16
 8005ee0:	009b      	lsls	r3, r3, #2
 8005ee2:	4403      	add	r3, r0
 8005ee4:	605a      	str	r2, [r3, #4]
        }
        if (IOM_cfg[instance].IOLowPort != HAL_OSPIM_IOPORT_NONE)
 8005ee6:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8005ee8:	4613      	mov	r3, r2
 8005eea:	005b      	lsls	r3, r3, #1
 8005eec:	4413      	add	r3, r2
 8005eee:	00db      	lsls	r3, r3, #3
 8005ef0:	3350      	adds	r3, #80	@ 0x50
 8005ef2:	443b      	add	r3, r7
 8005ef4:	3b30      	subs	r3, #48	@ 0x30
 8005ef6:	681b      	ldr	r3, [r3, #0]
 8005ef8:	2b00      	cmp	r3, #0
 8005efa:	d021      	beq.n	8005f40 <HAL_OSPIM_Config+0x3a0>
        {
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[instance].IOLowPort - 1U)& OSPI_IOM_PORT_MASK)], OCTOSPIM_PCR_IOLEN);
 8005efc:	496a      	ldr	r1, [pc, #424]	@ (80060a8 <HAL_OSPIM_Config+0x508>)
 8005efe:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8005f00:	4613      	mov	r3, r2
 8005f02:	005b      	lsls	r3, r3, #1
 8005f04:	4413      	add	r3, r2
 8005f06:	00db      	lsls	r3, r3, #3
 8005f08:	3350      	adds	r3, #80	@ 0x50
 8005f0a:	443b      	add	r3, r7
 8005f0c:	3b30      	subs	r3, #48	@ 0x30
 8005f0e:	681b      	ldr	r3, [r3, #0]
 8005f10:	3b01      	subs	r3, #1
 8005f12:	f003 0301 	and.w	r3, r3, #1
 8005f16:	009b      	lsls	r3, r3, #2
 8005f18:	440b      	add	r3, r1
 8005f1a:	6859      	ldr	r1, [r3, #4]
 8005f1c:	4862      	ldr	r0, [pc, #392]	@ (80060a8 <HAL_OSPIM_Config+0x508>)
 8005f1e:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8005f20:	4613      	mov	r3, r2
 8005f22:	005b      	lsls	r3, r3, #1
 8005f24:	4413      	add	r3, r2
 8005f26:	00db      	lsls	r3, r3, #3
 8005f28:	3350      	adds	r3, #80	@ 0x50
 8005f2a:	443b      	add	r3, r7
 8005f2c:	3b30      	subs	r3, #48	@ 0x30
 8005f2e:	681b      	ldr	r3, [r3, #0]
 8005f30:	3b01      	subs	r3, #1
 8005f32:	f003 0301 	and.w	r3, r3, #1
 8005f36:	f421 3280 	bic.w	r2, r1, #65536	@ 0x10000
 8005f3a:	009b      	lsls	r3, r3, #2
 8005f3c:	4403      	add	r3, r0
 8005f3e:	605a      	str	r2, [r3, #4]
        }
        if (IOM_cfg[instance].IOHighPort != HAL_OSPIM_IOPORT_NONE)
 8005f40:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8005f42:	4613      	mov	r3, r2
 8005f44:	005b      	lsls	r3, r3, #1
 8005f46:	4413      	add	r3, r2
 8005f48:	00db      	lsls	r3, r3, #3
 8005f4a:	3350      	adds	r3, #80	@ 0x50
 8005f4c:	443b      	add	r3, r7
 8005f4e:	3b2c      	subs	r3, #44	@ 0x2c
 8005f50:	681b      	ldr	r3, [r3, #0]
 8005f52:	2b00      	cmp	r3, #0
 8005f54:	d021      	beq.n	8005f9a <HAL_OSPIM_Config+0x3fa>
        {
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[instance].IOHighPort - 1U)& OSPI_IOM_PORT_MASK)], OCTOSPIM_PCR_IOHEN);
 8005f56:	4954      	ldr	r1, [pc, #336]	@ (80060a8 <HAL_OSPIM_Config+0x508>)
 8005f58:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8005f5a:	4613      	mov	r3, r2
 8005f5c:	005b      	lsls	r3, r3, #1
 8005f5e:	4413      	add	r3, r2
 8005f60:	00db      	lsls	r3, r3, #3
 8005f62:	3350      	adds	r3, #80	@ 0x50
 8005f64:	443b      	add	r3, r7
 8005f66:	3b2c      	subs	r3, #44	@ 0x2c
 8005f68:	681b      	ldr	r3, [r3, #0]
 8005f6a:	3b01      	subs	r3, #1
 8005f6c:	f003 0301 	and.w	r3, r3, #1
 8005f70:	009b      	lsls	r3, r3, #2
 8005f72:	440b      	add	r3, r1
 8005f74:	6859      	ldr	r1, [r3, #4]
 8005f76:	484c      	ldr	r0, [pc, #304]	@ (80060a8 <HAL_OSPIM_Config+0x508>)
 8005f78:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 8005f7a:	4613      	mov	r3, r2
 8005f7c:	005b      	lsls	r3, r3, #1
 8005f7e:	4413      	add	r3, r2
 8005f80:	00db      	lsls	r3, r3, #3
 8005f82:	3350      	adds	r3, #80	@ 0x50
 8005f84:	443b      	add	r3, r7
 8005f86:	3b2c      	subs	r3, #44	@ 0x2c
 8005f88:	681b      	ldr	r3, [r3, #0]
 8005f8a:	3b01      	subs	r3, #1
 8005f8c:	f003 0301 	and.w	r3, r3, #1
 8005f90:	f021 7280 	bic.w	r2, r1, #16777216	@ 0x1000000
 8005f94:	009b      	lsls	r3, r3, #2
 8005f96:	4403      	add	r3, r0
 8005f98:	605a      	str	r2, [r3, #4]
        }
      }
    }

    /********************* Deactivation of other instance *********************/
    if ((cfg->ClkPort == IOM_cfg[other_instance].ClkPort) || (cfg->DQSPort == IOM_cfg[other_instance].DQSPort)     ||
 8005f9a:	68bb      	ldr	r3, [r7, #8]
 8005f9c:	6819      	ldr	r1, [r3, #0]
 8005f9e:	f897 2045 	ldrb.w	r2, [r7, #69]	@ 0x45
 8005fa2:	4613      	mov	r3, r2
 8005fa4:	005b      	lsls	r3, r3, #1
 8005fa6:	4413      	add	r3, r2
 8005fa8:	00db      	lsls	r3, r3, #3
 8005faa:	3350      	adds	r3, #80	@ 0x50
 8005fac:	443b      	add	r3, r7
 8005fae:	3b3c      	subs	r3, #60	@ 0x3c
 8005fb0:	681b      	ldr	r3, [r3, #0]
 8005fb2:	4299      	cmp	r1, r3
 8005fb4:	d038      	beq.n	8006028 <HAL_OSPIM_Config+0x488>
 8005fb6:	68bb      	ldr	r3, [r7, #8]
 8005fb8:	6859      	ldr	r1, [r3, #4]
 8005fba:	f897 2045 	ldrb.w	r2, [r7, #69]	@ 0x45
 8005fbe:	4613      	mov	r3, r2
 8005fc0:	005b      	lsls	r3, r3, #1
 8005fc2:	4413      	add	r3, r2
 8005fc4:	00db      	lsls	r3, r3, #3
 8005fc6:	3350      	adds	r3, #80	@ 0x50
 8005fc8:	443b      	add	r3, r7
 8005fca:	3b38      	subs	r3, #56	@ 0x38
 8005fcc:	681b      	ldr	r3, [r3, #0]
 8005fce:	4299      	cmp	r1, r3
 8005fd0:	d02a      	beq.n	8006028 <HAL_OSPIM_Config+0x488>
        (cfg->NCSPort == IOM_cfg[other_instance].NCSPort) || (cfg->IOLowPort == IOM_cfg[other_instance].IOLowPort) ||
 8005fd2:	68bb      	ldr	r3, [r7, #8]
 8005fd4:	6899      	ldr	r1, [r3, #8]
 8005fd6:	f897 2045 	ldrb.w	r2, [r7, #69]	@ 0x45
 8005fda:	4613      	mov	r3, r2
 8005fdc:	005b      	lsls	r3, r3, #1
 8005fde:	4413      	add	r3, r2
 8005fe0:	00db      	lsls	r3, r3, #3
 8005fe2:	3350      	adds	r3, #80	@ 0x50
 8005fe4:	443b      	add	r3, r7
 8005fe6:	3b34      	subs	r3, #52	@ 0x34
 8005fe8:	681b      	ldr	r3, [r3, #0]
    if ((cfg->ClkPort == IOM_cfg[other_instance].ClkPort) || (cfg->DQSPort == IOM_cfg[other_instance].DQSPort)     ||
 8005fea:	4299      	cmp	r1, r3
 8005fec:	d01c      	beq.n	8006028 <HAL_OSPIM_Config+0x488>
        (cfg->NCSPort == IOM_cfg[other_instance].NCSPort) || (cfg->IOLowPort == IOM_cfg[other_instance].IOLowPort) ||
 8005fee:	68bb      	ldr	r3, [r7, #8]
 8005ff0:	68d9      	ldr	r1, [r3, #12]
 8005ff2:	f897 2045 	ldrb.w	r2, [r7, #69]	@ 0x45
 8005ff6:	4613      	mov	r3, r2
 8005ff8:	005b      	lsls	r3, r3, #1
 8005ffa:	4413      	add	r3, r2
 8005ffc:	00db      	lsls	r3, r3, #3
 8005ffe:	3350      	adds	r3, #80	@ 0x50
 8006000:	443b      	add	r3, r7
 8006002:	3b30      	subs	r3, #48	@ 0x30
 8006004:	681b      	ldr	r3, [r3, #0]
 8006006:	4299      	cmp	r1, r3
 8006008:	d00e      	beq.n	8006028 <HAL_OSPIM_Config+0x488>
        (cfg->IOHighPort == IOM_cfg[other_instance].IOHighPort))
 800600a:	68bb      	ldr	r3, [r7, #8]
 800600c:	6919      	ldr	r1, [r3, #16]
 800600e:	f897 2045 	ldrb.w	r2, [r7, #69]	@ 0x45
 8006012:	4613      	mov	r3, r2
 8006014:	005b      	lsls	r3, r3, #1
 8006016:	4413      	add	r3, r2
 8006018:	00db      	lsls	r3, r3, #3
 800601a:	3350      	adds	r3, #80	@ 0x50
 800601c:	443b      	add	r3, r7
 800601e:	3b2c      	subs	r3, #44	@ 0x2c
 8006020:	681b      	ldr	r3, [r3, #0]
        (cfg->NCSPort == IOM_cfg[other_instance].NCSPort) || (cfg->IOLowPort == IOM_cfg[other_instance].IOLowPort) ||
 8006022:	4299      	cmp	r1, r3
 8006024:	f040 810e 	bne.w	8006244 <HAL_OSPIM_Config+0x6a4>
    {
      if ((cfg->ClkPort   == IOM_cfg[other_instance].ClkPort)   &&
 8006028:	68bb      	ldr	r3, [r7, #8]
 800602a:	6819      	ldr	r1, [r3, #0]
 800602c:	f897 2045 	ldrb.w	r2, [r7, #69]	@ 0x45
 8006030:	4613      	mov	r3, r2
 8006032:	005b      	lsls	r3, r3, #1
 8006034:	4413      	add	r3, r2
 8006036:	00db      	lsls	r3, r3, #3
 8006038:	3350      	adds	r3, #80	@ 0x50
 800603a:	443b      	add	r3, r7
 800603c:	3b3c      	subs	r3, #60	@ 0x3c
 800603e:	681b      	ldr	r3, [r3, #0]
 8006040:	4299      	cmp	r1, r3
 8006042:	d133      	bne.n	80060ac <HAL_OSPIM_Config+0x50c>
          (cfg->DQSPort    == IOM_cfg[other_instance].DQSPort)  &&
 8006044:	68bb      	ldr	r3, [r7, #8]
 8006046:	6859      	ldr	r1, [r3, #4]
 8006048:	f897 2045 	ldrb.w	r2, [r7, #69]	@ 0x45
 800604c:	4613      	mov	r3, r2
 800604e:	005b      	lsls	r3, r3, #1
 8006050:	4413      	add	r3, r2
 8006052:	00db      	lsls	r3, r3, #3
 8006054:	3350      	adds	r3, #80	@ 0x50
 8006056:	443b      	add	r3, r7
 8006058:	3b38      	subs	r3, #56	@ 0x38
 800605a:	681b      	ldr	r3, [r3, #0]
      if ((cfg->ClkPort   == IOM_cfg[other_instance].ClkPort)   &&
 800605c:	4299      	cmp	r1, r3
 800605e:	d125      	bne.n	80060ac <HAL_OSPIM_Config+0x50c>
          (cfg->IOLowPort == IOM_cfg[other_instance].IOLowPort) &&
 8006060:	68bb      	ldr	r3, [r7, #8]
 8006062:	68d9      	ldr	r1, [r3, #12]
 8006064:	f897 2045 	ldrb.w	r2, [r7, #69]	@ 0x45
 8006068:	4613      	mov	r3, r2
 800606a:	005b      	lsls	r3, r3, #1
 800606c:	4413      	add	r3, r2
 800606e:	00db      	lsls	r3, r3, #3
 8006070:	3350      	adds	r3, #80	@ 0x50
 8006072:	443b      	add	r3, r7
 8006074:	3b30      	subs	r3, #48	@ 0x30
 8006076:	681b      	ldr	r3, [r3, #0]
          (cfg->DQSPort    == IOM_cfg[other_instance].DQSPort)  &&
 8006078:	4299      	cmp	r1, r3
 800607a:	d117      	bne.n	80060ac <HAL_OSPIM_Config+0x50c>
          (cfg->IOHighPort == IOM_cfg[other_instance].IOHighPort))
 800607c:	68bb      	ldr	r3, [r7, #8]
 800607e:	6919      	ldr	r1, [r3, #16]
 8006080:	f897 2045 	ldrb.w	r2, [r7, #69]	@ 0x45
 8006084:	4613      	mov	r3, r2
 8006086:	005b      	lsls	r3, r3, #1
 8006088:	4413      	add	r3, r2
 800608a:	00db      	lsls	r3, r3, #3
 800608c:	3350      	adds	r3, #80	@ 0x50
 800608e:	443b      	add	r3, r7
 8006090:	3b2c      	subs	r3, #44	@ 0x2c
 8006092:	681b      	ldr	r3, [r3, #0]
          (cfg->IOLowPort == IOM_cfg[other_instance].IOLowPort) &&
 8006094:	4299      	cmp	r1, r3
 8006096:	d109      	bne.n	80060ac <HAL_OSPIM_Config+0x50c>
      {
        /* Multiplexing should be performed */
        SET_BIT(OCTOSPIM->CR, OCTOSPIM_CR_MUXEN);
 8006098:	4b03      	ldr	r3, [pc, #12]	@ (80060a8 <HAL_OSPIM_Config+0x508>)
 800609a:	681b      	ldr	r3, [r3, #0]
 800609c:	4a02      	ldr	r2, [pc, #8]	@ (80060a8 <HAL_OSPIM_Config+0x508>)
 800609e:	f043 0301 	orr.w	r3, r3, #1
 80060a2:	6013      	str	r3, [r2, #0]
 80060a4:	e0ce      	b.n	8006244 <HAL_OSPIM_Config+0x6a4>
 80060a6:	bf00      	nop
 80060a8:	5200b400 	.word	0x5200b400
      }
      else
      {
        CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].ClkPort - 1U)], OCTOSPIM_PCR_CLKEN);
 80060ac:	49bb      	ldr	r1, [pc, #748]	@ (800639c <HAL_OSPIM_Config+0x7fc>)
 80060ae:	f897 2045 	ldrb.w	r2, [r7, #69]	@ 0x45
 80060b2:	4613      	mov	r3, r2
 80060b4:	005b      	lsls	r3, r3, #1
 80060b6:	4413      	add	r3, r2
 80060b8:	00db      	lsls	r3, r3, #3
 80060ba:	3350      	adds	r3, #80	@ 0x50
 80060bc:	443b      	add	r3, r7
 80060be:	3b3c      	subs	r3, #60	@ 0x3c
 80060c0:	681b      	ldr	r3, [r3, #0]
 80060c2:	3b01      	subs	r3, #1
 80060c4:	009b      	lsls	r3, r3, #2
 80060c6:	440b      	add	r3, r1
 80060c8:	6859      	ldr	r1, [r3, #4]
 80060ca:	48b4      	ldr	r0, [pc, #720]	@ (800639c <HAL_OSPIM_Config+0x7fc>)
 80060cc:	f897 2045 	ldrb.w	r2, [r7, #69]	@ 0x45
 80060d0:	4613      	mov	r3, r2
 80060d2:	005b      	lsls	r3, r3, #1
 80060d4:	4413      	add	r3, r2
 80060d6:	00db      	lsls	r3, r3, #3
 80060d8:	3350      	adds	r3, #80	@ 0x50
 80060da:	443b      	add	r3, r7
 80060dc:	3b3c      	subs	r3, #60	@ 0x3c
 80060de:	681b      	ldr	r3, [r3, #0]
 80060e0:	3b01      	subs	r3, #1
 80060e2:	f021 0201 	bic.w	r2, r1, #1
 80060e6:	009b      	lsls	r3, r3, #2
 80060e8:	4403      	add	r3, r0
 80060ea:	605a      	str	r2, [r3, #4]
        if (IOM_cfg[other_instance].DQSPort != 0U)
 80060ec:	f897 2045 	ldrb.w	r2, [r7, #69]	@ 0x45
 80060f0:	4613      	mov	r3, r2
 80060f2:	005b      	lsls	r3, r3, #1
 80060f4:	4413      	add	r3, r2
 80060f6:	00db      	lsls	r3, r3, #3
 80060f8:	3350      	adds	r3, #80	@ 0x50
 80060fa:	443b      	add	r3, r7
 80060fc:	3b38      	subs	r3, #56	@ 0x38
 80060fe:	681b      	ldr	r3, [r3, #0]
 8006100:	2b00      	cmp	r3, #0
 8006102:	d01f      	beq.n	8006144 <HAL_OSPIM_Config+0x5a4>
        {
          CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].DQSPort - 1U)], OCTOSPIM_PCR_DQSEN);
 8006104:	49a5      	ldr	r1, [pc, #660]	@ (800639c <HAL_OSPIM_Config+0x7fc>)
 8006106:	f897 2045 	ldrb.w	r2, [r7, #69]	@ 0x45
 800610a:	4613      	mov	r3, r2
 800610c:	005b      	lsls	r3, r3, #1
 800610e:	4413      	add	r3, r2
 8006110:	00db      	lsls	r3, r3, #3
 8006112:	3350      	adds	r3, #80	@ 0x50
 8006114:	443b      	add	r3, r7
 8006116:	3b38      	subs	r3, #56	@ 0x38
 8006118:	681b      	ldr	r3, [r3, #0]
 800611a:	3b01      	subs	r3, #1
 800611c:	009b      	lsls	r3, r3, #2
 800611e:	440b      	add	r3, r1
 8006120:	6859      	ldr	r1, [r3, #4]
 8006122:	489e      	ldr	r0, [pc, #632]	@ (800639c <HAL_OSPIM_Config+0x7fc>)
 8006124:	f897 2045 	ldrb.w	r2, [r7, #69]	@ 0x45
 8006128:	4613      	mov	r3, r2
 800612a:	005b      	lsls	r3, r3, #1
 800612c:	4413      	add	r3, r2
 800612e:	00db      	lsls	r3, r3, #3
 8006130:	3350      	adds	r3, #80	@ 0x50
 8006132:	443b      	add	r3, r7
 8006134:	3b38      	subs	r3, #56	@ 0x38
 8006136:	681b      	ldr	r3, [r3, #0]
 8006138:	3b01      	subs	r3, #1
 800613a:	f021 0210 	bic.w	r2, r1, #16
 800613e:	009b      	lsls	r3, r3, #2
 8006140:	4403      	add	r3, r0
 8006142:	605a      	str	r2, [r3, #4]
        }
        CLEAR_BIT(OCTOSPIM->PCR[(IOM_cfg[other_instance].NCSPort - 1U)], OCTOSPIM_PCR_NCSEN);
 8006144:	4995      	ldr	r1, [pc, #596]	@ (800639c <HAL_OSPIM_Config+0x7fc>)
 8006146:	f897 2045 	ldrb.w	r2, [r7, #69]	@ 0x45
 800614a:	4613      	mov	r3, r2
 800614c:	005b      	lsls	r3, r3, #1
 800614e:	4413      	add	r3, r2
 8006150:	00db      	lsls	r3, r3, #3
 8006152:	3350      	adds	r3, #80	@ 0x50
 8006154:	443b      	add	r3, r7
 8006156:	3b34      	subs	r3, #52	@ 0x34
 8006158:	681b      	ldr	r3, [r3, #0]
 800615a:	3b01      	subs	r3, #1
 800615c:	009b      	lsls	r3, r3, #2
 800615e:	440b      	add	r3, r1
 8006160:	6859      	ldr	r1, [r3, #4]
 8006162:	488e      	ldr	r0, [pc, #568]	@ (800639c <HAL_OSPIM_Config+0x7fc>)
 8006164:	f897 2045 	ldrb.w	r2, [r7, #69]	@ 0x45
 8006168:	4613      	mov	r3, r2
 800616a:	005b      	lsls	r3, r3, #1
 800616c:	4413      	add	r3, r2
 800616e:	00db      	lsls	r3, r3, #3
 8006170:	3350      	adds	r3, #80	@ 0x50
 8006172:	443b      	add	r3, r7
 8006174:	3b34      	subs	r3, #52	@ 0x34
 8006176:	681b      	ldr	r3, [r3, #0]
 8006178:	3b01      	subs	r3, #1
 800617a:	f421 7280 	bic.w	r2, r1, #256	@ 0x100
 800617e:	009b      	lsls	r3, r3, #2
 8006180:	4403      	add	r3, r0
 8006182:	605a      	str	r2, [r3, #4]
        if (IOM_cfg[other_instance].IOLowPort != HAL_OSPIM_IOPORT_NONE)
 8006184:	f897 2045 	ldrb.w	r2, [r7, #69]	@ 0x45
 8006188:	4613      	mov	r3, r2
 800618a:	005b      	lsls	r3, r3, #1
 800618c:	4413      	add	r3, r2
 800618e:	00db      	lsls	r3, r3, #3
 8006190:	3350      	adds	r3, #80	@ 0x50
 8006192:	443b      	add	r3, r7
 8006194:	3b30      	subs	r3, #48	@ 0x30
 8006196:	681b      	ldr	r3, [r3, #0]
 8006198:	2b00      	cmp	r3, #0
 800619a:	d023      	beq.n	80061e4 <HAL_OSPIM_Config+0x644>
        {
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[other_instance].IOLowPort - 1U)& OSPI_IOM_PORT_MASK)],
 800619c:	497f      	ldr	r1, [pc, #508]	@ (800639c <HAL_OSPIM_Config+0x7fc>)
 800619e:	f897 2045 	ldrb.w	r2, [r7, #69]	@ 0x45
 80061a2:	4613      	mov	r3, r2
 80061a4:	005b      	lsls	r3, r3, #1
 80061a6:	4413      	add	r3, r2
 80061a8:	00db      	lsls	r3, r3, #3
 80061aa:	3350      	adds	r3, #80	@ 0x50
 80061ac:	443b      	add	r3, r7
 80061ae:	3b30      	subs	r3, #48	@ 0x30
 80061b0:	681b      	ldr	r3, [r3, #0]
 80061b2:	3b01      	subs	r3, #1
 80061b4:	f003 0301 	and.w	r3, r3, #1
 80061b8:	009b      	lsls	r3, r3, #2
 80061ba:	440b      	add	r3, r1
 80061bc:	6859      	ldr	r1, [r3, #4]
 80061be:	4877      	ldr	r0, [pc, #476]	@ (800639c <HAL_OSPIM_Config+0x7fc>)
 80061c0:	f897 2045 	ldrb.w	r2, [r7, #69]	@ 0x45
 80061c4:	4613      	mov	r3, r2
 80061c6:	005b      	lsls	r3, r3, #1
 80061c8:	4413      	add	r3, r2
 80061ca:	00db      	lsls	r3, r3, #3
 80061cc:	3350      	adds	r3, #80	@ 0x50
 80061ce:	443b      	add	r3, r7
 80061d0:	3b30      	subs	r3, #48	@ 0x30
 80061d2:	681b      	ldr	r3, [r3, #0]
 80061d4:	3b01      	subs	r3, #1
 80061d6:	f003 0301 	and.w	r3, r3, #1
 80061da:	f421 3280 	bic.w	r2, r1, #65536	@ 0x10000
 80061de:	009b      	lsls	r3, r3, #2
 80061e0:	4403      	add	r3, r0
 80061e2:	605a      	str	r2, [r3, #4]
                    OCTOSPIM_PCR_IOLEN);
        }
        if (IOM_cfg[other_instance].IOHighPort != HAL_OSPIM_IOPORT_NONE)
 80061e4:	f897 2045 	ldrb.w	r2, [r7, #69]	@ 0x45
 80061e8:	4613      	mov	r3, r2
 80061ea:	005b      	lsls	r3, r3, #1
 80061ec:	4413      	add	r3, r2
 80061ee:	00db      	lsls	r3, r3, #3
 80061f0:	3350      	adds	r3, #80	@ 0x50
 80061f2:	443b      	add	r3, r7
 80061f4:	3b2c      	subs	r3, #44	@ 0x2c
 80061f6:	681b      	ldr	r3, [r3, #0]
 80061f8:	2b00      	cmp	r3, #0
 80061fa:	d023      	beq.n	8006244 <HAL_OSPIM_Config+0x6a4>
        {
          CLEAR_BIT(OCTOSPIM->PCR[((IOM_cfg[other_instance].IOHighPort - 1U)& OSPI_IOM_PORT_MASK)],
 80061fc:	4967      	ldr	r1, [pc, #412]	@ (800639c <HAL_OSPIM_Config+0x7fc>)
 80061fe:	f897 2045 	ldrb.w	r2, [r7, #69]	@ 0x45
 8006202:	4613      	mov	r3, r2
 8006204:	005b      	lsls	r3, r3, #1
 8006206:	4413      	add	r3, r2
 8006208:	00db      	lsls	r3, r3, #3
 800620a:	3350      	adds	r3, #80	@ 0x50
 800620c:	443b      	add	r3, r7
 800620e:	3b2c      	subs	r3, #44	@ 0x2c
 8006210:	681b      	ldr	r3, [r3, #0]
 8006212:	3b01      	subs	r3, #1
 8006214:	f003 0301 	and.w	r3, r3, #1
 8006218:	009b      	lsls	r3, r3, #2
 800621a:	440b      	add	r3, r1
 800621c:	6859      	ldr	r1, [r3, #4]
 800621e:	485f      	ldr	r0, [pc, #380]	@ (800639c <HAL_OSPIM_Config+0x7fc>)
 8006220:	f897 2045 	ldrb.w	r2, [r7, #69]	@ 0x45
 8006224:	4613      	mov	r3, r2
 8006226:	005b      	lsls	r3, r3, #1
 8006228:	4413      	add	r3, r2
 800622a:	00db      	lsls	r3, r3, #3
 800622c:	3350      	adds	r3, #80	@ 0x50
 800622e:	443b      	add	r3, r7
 8006230:	3b2c      	subs	r3, #44	@ 0x2c
 8006232:	681b      	ldr	r3, [r3, #0]
 8006234:	3b01      	subs	r3, #1
 8006236:	f003 0301 	and.w	r3, r3, #1
 800623a:	f021 7280 	bic.w	r2, r1, #16777216	@ 0x1000000
 800623e:	009b      	lsls	r3, r3, #2
 8006240:	4403      	add	r3, r0
 8006242:	605a      	str	r2, [r3, #4]
        }
      }
    }

    /******************** Activation of new configuration *********************/
    MODIFY_REG(OCTOSPIM->PCR[(cfg->NCSPort - 1U)], (OCTOSPIM_PCR_NCSEN | OCTOSPIM_PCR_NCSSRC),
 8006244:	4a55      	ldr	r2, [pc, #340]	@ (800639c <HAL_OSPIM_Config+0x7fc>)
 8006246:	68bb      	ldr	r3, [r7, #8]
 8006248:	689b      	ldr	r3, [r3, #8]
 800624a:	3b01      	subs	r3, #1
 800624c:	009b      	lsls	r3, r3, #2
 800624e:	4413      	add	r3, r2
 8006250:	685b      	ldr	r3, [r3, #4]
 8006252:	f423 7240 	bic.w	r2, r3, #768	@ 0x300
 8006256:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8006258:	025b      	lsls	r3, r3, #9
 800625a:	431a      	orrs	r2, r3
 800625c:	494f      	ldr	r1, [pc, #316]	@ (800639c <HAL_OSPIM_Config+0x7fc>)
 800625e:	68bb      	ldr	r3, [r7, #8]
 8006260:	689b      	ldr	r3, [r3, #8]
 8006262:	3b01      	subs	r3, #1
 8006264:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8006268:	009b      	lsls	r3, r3, #2
 800626a:	440b      	add	r3, r1
 800626c:	605a      	str	r2, [r3, #4]
               (OCTOSPIM_PCR_NCSEN | (instance << OCTOSPIM_PCR_NCSSRC_Pos)));

    if ((cfg->Req2AckTime - 1U) > ((OCTOSPIM->CR & OCTOSPIM_CR_REQ2ACK_TIME) >> OCTOSPIM_CR_REQ2ACK_TIME_Pos))
 800626e:	68bb      	ldr	r3, [r7, #8]
 8006270:	695b      	ldr	r3, [r3, #20]
 8006272:	1e5a      	subs	r2, r3, #1
 8006274:	4b49      	ldr	r3, [pc, #292]	@ (800639c <HAL_OSPIM_Config+0x7fc>)
 8006276:	681b      	ldr	r3, [r3, #0]
 8006278:	0c1b      	lsrs	r3, r3, #16
 800627a:	b2db      	uxtb	r3, r3
 800627c:	429a      	cmp	r2, r3
 800627e:	d90a      	bls.n	8006296 <HAL_OSPIM_Config+0x6f6>
    {
      MODIFY_REG(OCTOSPIM->CR, OCTOSPIM_CR_REQ2ACK_TIME, ((cfg->Req2AckTime - 1U) << OCTOSPIM_CR_REQ2ACK_TIME_Pos));
 8006280:	4b46      	ldr	r3, [pc, #280]	@ (800639c <HAL_OSPIM_Config+0x7fc>)
 8006282:	681b      	ldr	r3, [r3, #0]
 8006284:	f423 027f 	bic.w	r2, r3, #16711680	@ 0xff0000
 8006288:	68bb      	ldr	r3, [r7, #8]
 800628a:	695b      	ldr	r3, [r3, #20]
 800628c:	3b01      	subs	r3, #1
 800628e:	041b      	lsls	r3, r3, #16
 8006290:	4942      	ldr	r1, [pc, #264]	@ (800639c <HAL_OSPIM_Config+0x7fc>)
 8006292:	4313      	orrs	r3, r2
 8006294:	600b      	str	r3, [r1, #0]
    }

    if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) != 0U)
 8006296:	4b41      	ldr	r3, [pc, #260]	@ (800639c <HAL_OSPIM_Config+0x7fc>)
 8006298:	681b      	ldr	r3, [r3, #0]
 800629a:	f003 0301 	and.w	r3, r3, #1
 800629e:	2b00      	cmp	r3, #0
 80062a0:	f000 809a 	beq.w	80063d8 <HAL_OSPIM_Config+0x838>
    {
      MODIFY_REG(OCTOSPIM->PCR[(cfg->ClkPort - 1U)], (OCTOSPIM_PCR_CLKEN | OCTOSPIM_PCR_CLKSRC), OCTOSPIM_PCR_CLKEN);
 80062a4:	4a3d      	ldr	r2, [pc, #244]	@ (800639c <HAL_OSPIM_Config+0x7fc>)
 80062a6:	68bb      	ldr	r3, [r7, #8]
 80062a8:	681b      	ldr	r3, [r3, #0]
 80062aa:	3b01      	subs	r3, #1
 80062ac:	009b      	lsls	r3, r3, #2
 80062ae:	4413      	add	r3, r2
 80062b0:	685b      	ldr	r3, [r3, #4]
 80062b2:	f023 0203 	bic.w	r2, r3, #3
 80062b6:	4939      	ldr	r1, [pc, #228]	@ (800639c <HAL_OSPIM_Config+0x7fc>)
 80062b8:	68bb      	ldr	r3, [r7, #8]
 80062ba:	681b      	ldr	r3, [r3, #0]
 80062bc:	3b01      	subs	r3, #1
 80062be:	f042 0201 	orr.w	r2, r2, #1
 80062c2:	009b      	lsls	r3, r3, #2
 80062c4:	440b      	add	r3, r1
 80062c6:	605a      	str	r2, [r3, #4]
      if (cfg->DQSPort != 0U)
 80062c8:	68bb      	ldr	r3, [r7, #8]
 80062ca:	685b      	ldr	r3, [r3, #4]
 80062cc:	2b00      	cmp	r3, #0
 80062ce:	d011      	beq.n	80062f4 <HAL_OSPIM_Config+0x754>
      {
        MODIFY_REG(OCTOSPIM->PCR[(cfg->DQSPort - 1U)], (OCTOSPIM_PCR_DQSEN | OCTOSPIM_PCR_DQSSRC), OCTOSPIM_PCR_DQSEN);
 80062d0:	4a32      	ldr	r2, [pc, #200]	@ (800639c <HAL_OSPIM_Config+0x7fc>)
 80062d2:	68bb      	ldr	r3, [r7, #8]
 80062d4:	685b      	ldr	r3, [r3, #4]
 80062d6:	3b01      	subs	r3, #1
 80062d8:	009b      	lsls	r3, r3, #2
 80062da:	4413      	add	r3, r2
 80062dc:	685b      	ldr	r3, [r3, #4]
 80062de:	f023 0230 	bic.w	r2, r3, #48	@ 0x30
 80062e2:	492e      	ldr	r1, [pc, #184]	@ (800639c <HAL_OSPIM_Config+0x7fc>)
 80062e4:	68bb      	ldr	r3, [r7, #8]
 80062e6:	685b      	ldr	r3, [r3, #4]
 80062e8:	3b01      	subs	r3, #1
 80062ea:	f042 0210 	orr.w	r2, r2, #16
 80062ee:	009b      	lsls	r3, r3, #2
 80062f0:	440b      	add	r3, r1
 80062f2:	605a      	str	r2, [r3, #4]
      }

      if ((cfg->IOLowPort & OCTOSPIM_PCR_IOLEN) != 0U)
 80062f4:	68bb      	ldr	r3, [r7, #8]
 80062f6:	68db      	ldr	r3, [r3, #12]
 80062f8:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80062fc:	2b00      	cmp	r3, #0
 80062fe:	d016      	beq.n	800632e <HAL_OSPIM_Config+0x78e>
      {
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006300:	4a26      	ldr	r2, [pc, #152]	@ (800639c <HAL_OSPIM_Config+0x7fc>)
 8006302:	68bb      	ldr	r3, [r7, #8]
 8006304:	68db      	ldr	r3, [r3, #12]
 8006306:	3b01      	subs	r3, #1
 8006308:	f003 0301 	and.w	r3, r3, #1
 800630c:	009b      	lsls	r3, r3, #2
 800630e:	4413      	add	r3, r2
 8006310:	685b      	ldr	r3, [r3, #4]
 8006312:	f423 22e0 	bic.w	r2, r3, #458752	@ 0x70000
 8006316:	4921      	ldr	r1, [pc, #132]	@ (800639c <HAL_OSPIM_Config+0x7fc>)
 8006318:	68bb      	ldr	r3, [r7, #8]
 800631a:	68db      	ldr	r3, [r3, #12]
 800631c:	3b01      	subs	r3, #1
 800631e:	f003 0301 	and.w	r3, r3, #1
 8006322:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 8006326:	009b      	lsls	r3, r3, #2
 8006328:	440b      	add	r3, r1
 800632a:	605a      	str	r2, [r3, #4]
 800632c:	e019      	b.n	8006362 <HAL_OSPIM_Config+0x7c2>
                   (OCTOSPIM_PCR_IOLEN | OCTOSPIM_PCR_IOLSRC), OCTOSPIM_PCR_IOLEN);
      }
      else if (cfg->IOLowPort != HAL_OSPIM_IOPORT_NONE)
 800632e:	68bb      	ldr	r3, [r7, #8]
 8006330:	68db      	ldr	r3, [r3, #12]
 8006332:	2b00      	cmp	r3, #0
 8006334:	d015      	beq.n	8006362 <HAL_OSPIM_Config+0x7c2>
      {
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006336:	4a19      	ldr	r2, [pc, #100]	@ (800639c <HAL_OSPIM_Config+0x7fc>)
 8006338:	68bb      	ldr	r3, [r7, #8]
 800633a:	68db      	ldr	r3, [r3, #12]
 800633c:	3b01      	subs	r3, #1
 800633e:	f003 0301 	and.w	r3, r3, #1
 8006342:	009b      	lsls	r3, r3, #2
 8006344:	4413      	add	r3, r2
 8006346:	685b      	ldr	r3, [r3, #4]
 8006348:	f023 62e0 	bic.w	r2, r3, #117440512	@ 0x7000000
 800634c:	4913      	ldr	r1, [pc, #76]	@ (800639c <HAL_OSPIM_Config+0x7fc>)
 800634e:	68bb      	ldr	r3, [r7, #8]
 8006350:	68db      	ldr	r3, [r3, #12]
 8006352:	3b01      	subs	r3, #1
 8006354:	f003 0301 	and.w	r3, r3, #1
 8006358:	f042 7280 	orr.w	r2, r2, #16777216	@ 0x1000000
 800635c:	009b      	lsls	r3, r3, #2
 800635e:	440b      	add	r3, r1
 8006360:	605a      	str	r2, [r3, #4]
      else
      {
        /* Nothing to do */
      }

      if ((cfg->IOHighPort & OCTOSPIM_PCR_IOLEN) != 0U)
 8006362:	68bb      	ldr	r3, [r7, #8]
 8006364:	691b      	ldr	r3, [r3, #16]
 8006366:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800636a:	2b00      	cmp	r3, #0
 800636c:	d018      	beq.n	80063a0 <HAL_OSPIM_Config+0x800>
      {
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort - 1U)& OSPI_IOM_PORT_MASK)],
 800636e:	4a0b      	ldr	r2, [pc, #44]	@ (800639c <HAL_OSPIM_Config+0x7fc>)
 8006370:	68bb      	ldr	r3, [r7, #8]
 8006372:	691b      	ldr	r3, [r3, #16]
 8006374:	3b01      	subs	r3, #1
 8006376:	f003 0301 	and.w	r3, r3, #1
 800637a:	009b      	lsls	r3, r3, #2
 800637c:	4413      	add	r3, r2
 800637e:	685b      	ldr	r3, [r3, #4]
 8006380:	f423 22e0 	bic.w	r2, r3, #458752	@ 0x70000
 8006384:	4905      	ldr	r1, [pc, #20]	@ (800639c <HAL_OSPIM_Config+0x7fc>)
 8006386:	68bb      	ldr	r3, [r7, #8]
 8006388:	691b      	ldr	r3, [r3, #16]
 800638a:	3b01      	subs	r3, #1
 800638c:	f003 0301 	and.w	r3, r3, #1
 8006390:	f442 3240 	orr.w	r2, r2, #196608	@ 0x30000
 8006394:	009b      	lsls	r3, r3, #2
 8006396:	440b      	add	r3, r1
 8006398:	605a      	str	r2, [r3, #4]
 800639a:	e0c5      	b.n	8006528 <HAL_OSPIM_Config+0x988>
 800639c:	5200b400 	.word	0x5200b400
                   (OCTOSPIM_PCR_IOLEN | OCTOSPIM_PCR_IOLSRC), (OCTOSPIM_PCR_IOLEN | OCTOSPIM_PCR_IOLSRC_0));
      }
      else if (cfg->IOHighPort != HAL_OSPIM_IOPORT_NONE)
 80063a0:	68bb      	ldr	r3, [r7, #8]
 80063a2:	691b      	ldr	r3, [r3, #16]
 80063a4:	2b00      	cmp	r3, #0
 80063a6:	f000 80bf 	beq.w	8006528 <HAL_OSPIM_Config+0x988>
      {
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort - 1U)& OSPI_IOM_PORT_MASK)],
 80063aa:	4a6e      	ldr	r2, [pc, #440]	@ (8006564 <HAL_OSPIM_Config+0x9c4>)
 80063ac:	68bb      	ldr	r3, [r7, #8]
 80063ae:	691b      	ldr	r3, [r3, #16]
 80063b0:	3b01      	subs	r3, #1
 80063b2:	f003 0301 	and.w	r3, r3, #1
 80063b6:	009b      	lsls	r3, r3, #2
 80063b8:	4413      	add	r3, r2
 80063ba:	685b      	ldr	r3, [r3, #4]
 80063bc:	f023 62e0 	bic.w	r2, r3, #117440512	@ 0x7000000
 80063c0:	4968      	ldr	r1, [pc, #416]	@ (8006564 <HAL_OSPIM_Config+0x9c4>)
 80063c2:	68bb      	ldr	r3, [r7, #8]
 80063c4:	691b      	ldr	r3, [r3, #16]
 80063c6:	3b01      	subs	r3, #1
 80063c8:	f003 0301 	and.w	r3, r3, #1
 80063cc:	f042 7240 	orr.w	r2, r2, #50331648	@ 0x3000000
 80063d0:	009b      	lsls	r3, r3, #2
 80063d2:	440b      	add	r3, r1
 80063d4:	605a      	str	r2, [r3, #4]
 80063d6:	e0a7      	b.n	8006528 <HAL_OSPIM_Config+0x988>
        /* Nothing to do */
      }
    }
    else
    {
      MODIFY_REG(OCTOSPIM->PCR[(cfg->ClkPort - 1U)], (OCTOSPIM_PCR_CLKEN | OCTOSPIM_PCR_CLKSRC),
 80063d8:	4a62      	ldr	r2, [pc, #392]	@ (8006564 <HAL_OSPIM_Config+0x9c4>)
 80063da:	68bb      	ldr	r3, [r7, #8]
 80063dc:	681b      	ldr	r3, [r3, #0]
 80063de:	3b01      	subs	r3, #1
 80063e0:	009b      	lsls	r3, r3, #2
 80063e2:	4413      	add	r3, r2
 80063e4:	685b      	ldr	r3, [r3, #4]
 80063e6:	f023 0203 	bic.w	r2, r3, #3
 80063ea:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80063ec:	005b      	lsls	r3, r3, #1
 80063ee:	431a      	orrs	r2, r3
 80063f0:	495c      	ldr	r1, [pc, #368]	@ (8006564 <HAL_OSPIM_Config+0x9c4>)
 80063f2:	68bb      	ldr	r3, [r7, #8]
 80063f4:	681b      	ldr	r3, [r3, #0]
 80063f6:	3b01      	subs	r3, #1
 80063f8:	f042 0201 	orr.w	r2, r2, #1
 80063fc:	009b      	lsls	r3, r3, #2
 80063fe:	440b      	add	r3, r1
 8006400:	605a      	str	r2, [r3, #4]
                 (OCTOSPIM_PCR_CLKEN | (instance << OCTOSPIM_PCR_CLKSRC_Pos)));
      if (cfg->DQSPort != 0U)
 8006402:	68bb      	ldr	r3, [r7, #8]
 8006404:	685b      	ldr	r3, [r3, #4]
 8006406:	2b00      	cmp	r3, #0
 8006408:	d014      	beq.n	8006434 <HAL_OSPIM_Config+0x894>
      {
        MODIFY_REG(OCTOSPIM->PCR[(cfg->DQSPort - 1U)], (OCTOSPIM_PCR_DQSEN | OCTOSPIM_PCR_DQSSRC),
 800640a:	4a56      	ldr	r2, [pc, #344]	@ (8006564 <HAL_OSPIM_Config+0x9c4>)
 800640c:	68bb      	ldr	r3, [r7, #8]
 800640e:	685b      	ldr	r3, [r3, #4]
 8006410:	3b01      	subs	r3, #1
 8006412:	009b      	lsls	r3, r3, #2
 8006414:	4413      	add	r3, r2
 8006416:	685b      	ldr	r3, [r3, #4]
 8006418:	f023 0230 	bic.w	r2, r3, #48	@ 0x30
 800641c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800641e:	015b      	lsls	r3, r3, #5
 8006420:	431a      	orrs	r2, r3
 8006422:	4950      	ldr	r1, [pc, #320]	@ (8006564 <HAL_OSPIM_Config+0x9c4>)
 8006424:	68bb      	ldr	r3, [r7, #8]
 8006426:	685b      	ldr	r3, [r3, #4]
 8006428:	3b01      	subs	r3, #1
 800642a:	f042 0210 	orr.w	r2, r2, #16
 800642e:	009b      	lsls	r3, r3, #2
 8006430:	440b      	add	r3, r1
 8006432:	605a      	str	r2, [r3, #4]
                   (OCTOSPIM_PCR_DQSEN | (instance << OCTOSPIM_PCR_DQSSRC_Pos)));
      }

      if ((cfg->IOLowPort & OCTOSPIM_PCR_IOLEN) != 0U)
 8006434:	68bb      	ldr	r3, [r7, #8]
 8006436:	68db      	ldr	r3, [r3, #12]
 8006438:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 800643c:	2b00      	cmp	r3, #0
 800643e:	d019      	beq.n	8006474 <HAL_OSPIM_Config+0x8d4>
      {
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort - 1U)& OSPI_IOM_PORT_MASK)],
 8006440:	4a48      	ldr	r2, [pc, #288]	@ (8006564 <HAL_OSPIM_Config+0x9c4>)
 8006442:	68bb      	ldr	r3, [r7, #8]
 8006444:	68db      	ldr	r3, [r3, #12]
 8006446:	3b01      	subs	r3, #1
 8006448:	f003 0301 	and.w	r3, r3, #1
 800644c:	009b      	lsls	r3, r3, #2
 800644e:	4413      	add	r3, r2
 8006450:	685b      	ldr	r3, [r3, #4]
 8006452:	f423 22e0 	bic.w	r2, r3, #458752	@ 0x70000
 8006456:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8006458:	049b      	lsls	r3, r3, #18
 800645a:	431a      	orrs	r2, r3
 800645c:	4941      	ldr	r1, [pc, #260]	@ (8006564 <HAL_OSPIM_Config+0x9c4>)
 800645e:	68bb      	ldr	r3, [r7, #8]
 8006460:	68db      	ldr	r3, [r3, #12]
 8006462:	3b01      	subs	r3, #1
 8006464:	f003 0301 	and.w	r3, r3, #1
 8006468:	f442 3280 	orr.w	r2, r2, #65536	@ 0x10000
 800646c:	009b      	lsls	r3, r3, #2
 800646e:	440b      	add	r3, r1
 8006470:	605a      	str	r2, [r3, #4]
 8006472:	e01c      	b.n	80064ae <HAL_OSPIM_Config+0x90e>
                   (OCTOSPIM_PCR_IOLEN | OCTOSPIM_PCR_IOLSRC),
                   (OCTOSPIM_PCR_IOLEN | (instance << (OCTOSPIM_PCR_IOLSRC_Pos + 1U))));
      }
      else if (cfg->IOLowPort != HAL_OSPIM_IOPORT_NONE)
 8006474:	68bb      	ldr	r3, [r7, #8]
 8006476:	68db      	ldr	r3, [r3, #12]
 8006478:	2b00      	cmp	r3, #0
 800647a:	d018      	beq.n	80064ae <HAL_OSPIM_Config+0x90e>
      {
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOLowPort - 1U)& OSPI_IOM_PORT_MASK)],
 800647c:	4a39      	ldr	r2, [pc, #228]	@ (8006564 <HAL_OSPIM_Config+0x9c4>)
 800647e:	68bb      	ldr	r3, [r7, #8]
 8006480:	68db      	ldr	r3, [r3, #12]
 8006482:	3b01      	subs	r3, #1
 8006484:	f003 0301 	and.w	r3, r3, #1
 8006488:	009b      	lsls	r3, r3, #2
 800648a:	4413      	add	r3, r2
 800648c:	685b      	ldr	r3, [r3, #4]
 800648e:	f023 62e0 	bic.w	r2, r3, #117440512	@ 0x7000000
 8006492:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 8006494:	069b      	lsls	r3, r3, #26
 8006496:	431a      	orrs	r2, r3
 8006498:	4932      	ldr	r1, [pc, #200]	@ (8006564 <HAL_OSPIM_Config+0x9c4>)
 800649a:	68bb      	ldr	r3, [r7, #8]
 800649c:	68db      	ldr	r3, [r3, #12]
 800649e:	3b01      	subs	r3, #1
 80064a0:	f003 0301 	and.w	r3, r3, #1
 80064a4:	f042 7280 	orr.w	r2, r2, #16777216	@ 0x1000000
 80064a8:	009b      	lsls	r3, r3, #2
 80064aa:	440b      	add	r3, r1
 80064ac:	605a      	str	r2, [r3, #4]
      else
      {
        /* Nothing to do */
      }

      if ((cfg->IOHighPort & OCTOSPIM_PCR_IOLEN) != 0U)
 80064ae:	68bb      	ldr	r3, [r7, #8]
 80064b0:	691b      	ldr	r3, [r3, #16]
 80064b2:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80064b6:	2b00      	cmp	r3, #0
 80064b8:	d019      	beq.n	80064ee <HAL_OSPIM_Config+0x94e>
      {
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort - 1U)& OSPI_IOM_PORT_MASK)],
 80064ba:	4a2a      	ldr	r2, [pc, #168]	@ (8006564 <HAL_OSPIM_Config+0x9c4>)
 80064bc:	68bb      	ldr	r3, [r7, #8]
 80064be:	691b      	ldr	r3, [r3, #16]
 80064c0:	3b01      	subs	r3, #1
 80064c2:	f003 0301 	and.w	r3, r3, #1
 80064c6:	009b      	lsls	r3, r3, #2
 80064c8:	4413      	add	r3, r2
 80064ca:	685b      	ldr	r3, [r3, #4]
 80064cc:	f423 22e0 	bic.w	r2, r3, #458752	@ 0x70000
 80064d0:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 80064d2:	049b      	lsls	r3, r3, #18
 80064d4:	431a      	orrs	r2, r3
 80064d6:	4923      	ldr	r1, [pc, #140]	@ (8006564 <HAL_OSPIM_Config+0x9c4>)
 80064d8:	68bb      	ldr	r3, [r7, #8]
 80064da:	691b      	ldr	r3, [r3, #16]
 80064dc:	3b01      	subs	r3, #1
 80064de:	f003 0301 	and.w	r3, r3, #1
 80064e2:	f442 3240 	orr.w	r2, r2, #196608	@ 0x30000
 80064e6:	009b      	lsls	r3, r3, #2
 80064e8:	440b      	add	r3, r1
 80064ea:	605a      	str	r2, [r3, #4]
 80064ec:	e01c      	b.n	8006528 <HAL_OSPIM_Config+0x988>
                   (OCTOSPIM_PCR_IOLEN | OCTOSPIM_PCR_IOLSRC),
                   (OCTOSPIM_PCR_IOLEN | OCTOSPIM_PCR_IOLSRC_0 | (instance << (OCTOSPIM_PCR_IOLSRC_Pos + 1U))));
      }
      else if (cfg->IOHighPort != HAL_OSPIM_IOPORT_NONE)
 80064ee:	68bb      	ldr	r3, [r7, #8]
 80064f0:	691b      	ldr	r3, [r3, #16]
 80064f2:	2b00      	cmp	r3, #0
 80064f4:	d018      	beq.n	8006528 <HAL_OSPIM_Config+0x988>
      {
        MODIFY_REG(OCTOSPIM->PCR[((cfg->IOHighPort - 1U)& OSPI_IOM_PORT_MASK)],
 80064f6:	4a1b      	ldr	r2, [pc, #108]	@ (8006564 <HAL_OSPIM_Config+0x9c4>)
 80064f8:	68bb      	ldr	r3, [r7, #8]
 80064fa:	691b      	ldr	r3, [r3, #16]
 80064fc:	3b01      	subs	r3, #1
 80064fe:	f003 0301 	and.w	r3, r3, #1
 8006502:	009b      	lsls	r3, r3, #2
 8006504:	4413      	add	r3, r2
 8006506:	685b      	ldr	r3, [r3, #4]
 8006508:	f023 62e0 	bic.w	r2, r3, #117440512	@ 0x7000000
 800650c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800650e:	069b      	lsls	r3, r3, #26
 8006510:	431a      	orrs	r2, r3
 8006512:	4914      	ldr	r1, [pc, #80]	@ (8006564 <HAL_OSPIM_Config+0x9c4>)
 8006514:	68bb      	ldr	r3, [r7, #8]
 8006516:	691b      	ldr	r3, [r3, #16]
 8006518:	3b01      	subs	r3, #1
 800651a:	f003 0301 	and.w	r3, r3, #1
 800651e:	f042 7240 	orr.w	r2, r2, #50331648	@ 0x3000000
 8006522:	009b      	lsls	r3, r3, #2
 8006524:	440b      	add	r3, r1
 8006526:	605a      	str	r2, [r3, #4]
        /* Nothing to do */
      }
    }

    /******* Re-enable both OctoSPI after configure OctoSPI IO Manager ********/
    if ((ospi_enabled & 0x1U) != 0U)
 8006528:	f897 3046 	ldrb.w	r3, [r7, #70]	@ 0x46
 800652c:	f003 0301 	and.w	r3, r3, #1
 8006530:	2b00      	cmp	r3, #0
 8006532:	d005      	beq.n	8006540 <HAL_OSPIM_Config+0x9a0>
    {
      SET_BIT(OCTOSPI1->CR, OCTOSPI_CR_EN);
 8006534:	4b0c      	ldr	r3, [pc, #48]	@ (8006568 <HAL_OSPIM_Config+0x9c8>)
 8006536:	681b      	ldr	r3, [r3, #0]
 8006538:	4a0b      	ldr	r2, [pc, #44]	@ (8006568 <HAL_OSPIM_Config+0x9c8>)
 800653a:	f043 0301 	orr.w	r3, r3, #1
 800653e:	6013      	str	r3, [r2, #0]
    }
    if ((ospi_enabled & 0x2U) != 0U)
 8006540:	f897 3046 	ldrb.w	r3, [r7, #70]	@ 0x46
 8006544:	f003 0302 	and.w	r3, r3, #2
 8006548:	2b00      	cmp	r3, #0
 800654a:	d005      	beq.n	8006558 <HAL_OSPIM_Config+0x9b8>
    {
      SET_BIT(OCTOSPI2->CR, OCTOSPI_CR_EN);
 800654c:	4b07      	ldr	r3, [pc, #28]	@ (800656c <HAL_OSPIM_Config+0x9cc>)
 800654e:	681b      	ldr	r3, [r3, #0]
 8006550:	4a06      	ldr	r2, [pc, #24]	@ (800656c <HAL_OSPIM_Config+0x9cc>)
 8006552:	f043 0301 	orr.w	r3, r3, #1
 8006556:	6013      	str	r3, [r2, #0]
    }
  }

  /* Return function status */
  return status;
 8006558:	f897 304f 	ldrb.w	r3, [r7, #79]	@ 0x4f
}
 800655c:	4618      	mov	r0, r3
 800655e:	3750      	adds	r7, #80	@ 0x50
 8006560:	46bd      	mov	sp, r7
 8006562:	bd80      	pop	{r7, pc}
 8006564:	5200b400 	.word	0x5200b400
 8006568:	52005000 	.word	0x52005000
 800656c:	5200a000 	.word	0x5200a000

08006570 <OSPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart : Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef OSPI_WaitFlagStateUntilTimeout(OSPI_HandleTypeDef *hospi, uint32_t Flag,
                                                        FlagStatus State, uint32_t Tickstart, uint32_t Timeout)
{
 8006570:	b580      	push	{r7, lr}
 8006572:	b084      	sub	sp, #16
 8006574:	af00      	add	r7, sp, #0
 8006576:	60f8      	str	r0, [r7, #12]
 8006578:	60b9      	str	r1, [r7, #8]
 800657a:	603b      	str	r3, [r7, #0]
 800657c:	4613      	mov	r3, r2
 800657e:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is in expected state */
  while ((__HAL_OSPI_GET_FLAG(hospi, Flag)) != State)
 8006580:	e01a      	b.n	80065b8 <OSPI_WaitFlagStateUntilTimeout+0x48>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8006582:	69bb      	ldr	r3, [r7, #24]
 8006584:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006588:	d016      	beq.n	80065b8 <OSPI_WaitFlagStateUntilTimeout+0x48>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800658a:	f7fc fdf9 	bl	8003180 <HAL_GetTick>
 800658e:	4602      	mov	r2, r0
 8006590:	683b      	ldr	r3, [r7, #0]
 8006592:	1ad3      	subs	r3, r2, r3
 8006594:	69ba      	ldr	r2, [r7, #24]
 8006596:	429a      	cmp	r2, r3
 8006598:	d302      	bcc.n	80065a0 <OSPI_WaitFlagStateUntilTimeout+0x30>
 800659a:	69bb      	ldr	r3, [r7, #24]
 800659c:	2b00      	cmp	r3, #0
 800659e:	d10b      	bne.n	80065b8 <OSPI_WaitFlagStateUntilTimeout+0x48>
      {
        hospi->State     = HAL_OSPI_STATE_ERROR;
 80065a0:	68fb      	ldr	r3, [r7, #12]
 80065a2:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80065a6:	651a      	str	r2, [r3, #80]	@ 0x50
        hospi->ErrorCode |= HAL_OSPI_ERROR_TIMEOUT;
 80065a8:	68fb      	ldr	r3, [r7, #12]
 80065aa:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80065ac:	f043 0201 	orr.w	r2, r3, #1
 80065b0:	68fb      	ldr	r3, [r7, #12]
 80065b2:	655a      	str	r2, [r3, #84]	@ 0x54

        return HAL_ERROR;
 80065b4:	2301      	movs	r3, #1
 80065b6:	e00e      	b.n	80065d6 <OSPI_WaitFlagStateUntilTimeout+0x66>
  while ((__HAL_OSPI_GET_FLAG(hospi, Flag)) != State)
 80065b8:	68fb      	ldr	r3, [r7, #12]
 80065ba:	681b      	ldr	r3, [r3, #0]
 80065bc:	6a1a      	ldr	r2, [r3, #32]
 80065be:	68bb      	ldr	r3, [r7, #8]
 80065c0:	4013      	ands	r3, r2
 80065c2:	2b00      	cmp	r3, #0
 80065c4:	bf14      	ite	ne
 80065c6:	2301      	movne	r3, #1
 80065c8:	2300      	moveq	r3, #0
 80065ca:	b2db      	uxtb	r3, r3
 80065cc:	461a      	mov	r2, r3
 80065ce:	79fb      	ldrb	r3, [r7, #7]
 80065d0:	429a      	cmp	r2, r3
 80065d2:	d1d6      	bne.n	8006582 <OSPI_WaitFlagStateUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
 80065d4:	2300      	movs	r3, #0
}
 80065d6:	4618      	mov	r0, r3
 80065d8:	3710      	adds	r7, #16
 80065da:	46bd      	mov	sp, r7
 80065dc:	bd80      	pop	{r7, pc}
	...

080065e0 <OSPI_ConfigCmd>:
  * @param  hospi : OSPI handle
  * @param  cmd   : structure that contains the command configuration information
  * @retval HAL status
  */
static HAL_StatusTypeDef OSPI_ConfigCmd(OSPI_HandleTypeDef *hospi, OSPI_RegularCmdTypeDef *cmd)
{
 80065e0:	b480      	push	{r7}
 80065e2:	b089      	sub	sp, #36	@ 0x24
 80065e4:	af00      	add	r7, sp, #0
 80065e6:	6078      	str	r0, [r7, #4]
 80065e8:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 80065ea:	2300      	movs	r3, #0
 80065ec:	77fb      	strb	r3, [r7, #31]
  __IO uint32_t *tcr_reg;
  __IO uint32_t *ir_reg;
  __IO uint32_t *abr_reg;

  /* Re-initialize the value of the functional mode */
  MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FMODE, 0U);
 80065ee:	687b      	ldr	r3, [r7, #4]
 80065f0:	681b      	ldr	r3, [r3, #0]
 80065f2:	681a      	ldr	r2, [r3, #0]
 80065f4:	687b      	ldr	r3, [r7, #4]
 80065f6:	681b      	ldr	r3, [r3, #0]
 80065f8:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 80065fc:	601a      	str	r2, [r3, #0]

  /* Configure the flash ID */
  if (hospi->Init.DualQuad == HAL_OSPI_DUALQUAD_DISABLE)
 80065fe:	687b      	ldr	r3, [r7, #4]
 8006600:	689b      	ldr	r3, [r3, #8]
 8006602:	2b00      	cmp	r3, #0
 8006604:	d10a      	bne.n	800661c <OSPI_ConfigCmd+0x3c>
  {
    MODIFY_REG(hospi->Instance->CR, OCTOSPI_CR_FSEL, cmd->FlashId);
 8006606:	687b      	ldr	r3, [r7, #4]
 8006608:	681b      	ldr	r3, [r3, #0]
 800660a:	681b      	ldr	r3, [r3, #0]
 800660c:	f023 0180 	bic.w	r1, r3, #128	@ 0x80
 8006610:	683b      	ldr	r3, [r7, #0]
 8006612:	685a      	ldr	r2, [r3, #4]
 8006614:	687b      	ldr	r3, [r7, #4]
 8006616:	681b      	ldr	r3, [r3, #0]
 8006618:	430a      	orrs	r2, r1
 800661a:	601a      	str	r2, [r3, #0]
  }

  if (cmd->OperationType == HAL_OSPI_OPTYPE_WRITE_CFG)
 800661c:	683b      	ldr	r3, [r7, #0]
 800661e:	681b      	ldr	r3, [r3, #0]
 8006620:	2b02      	cmp	r3, #2
 8006622:	d114      	bne.n	800664e <OSPI_ConfigCmd+0x6e>
  {
    ccr_reg = &(hospi->Instance->WCCR);
 8006624:	687b      	ldr	r3, [r7, #4]
 8006626:	681b      	ldr	r3, [r3, #0]
 8006628:	f503 73c0 	add.w	r3, r3, #384	@ 0x180
 800662c:	61bb      	str	r3, [r7, #24]
    tcr_reg = &(hospi->Instance->WTCR);
 800662e:	687b      	ldr	r3, [r7, #4]
 8006630:	681b      	ldr	r3, [r3, #0]
 8006632:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 8006636:	617b      	str	r3, [r7, #20]
    ir_reg  = &(hospi->Instance->WIR);
 8006638:	687b      	ldr	r3, [r7, #4]
 800663a:	681b      	ldr	r3, [r3, #0]
 800663c:	f503 73c8 	add.w	r3, r3, #400	@ 0x190
 8006640:	613b      	str	r3, [r7, #16]
    abr_reg = &(hospi->Instance->WABR);
 8006642:	687b      	ldr	r3, [r7, #4]
 8006644:	681b      	ldr	r3, [r3, #0]
 8006646:	f503 73d0 	add.w	r3, r3, #416	@ 0x1a0
 800664a:	60fb      	str	r3, [r7, #12]
 800664c:	e02c      	b.n	80066a8 <OSPI_ConfigCmd+0xc8>
  }
  else if (cmd->OperationType == HAL_OSPI_OPTYPE_WRAP_CFG)
 800664e:	683b      	ldr	r3, [r7, #0]
 8006650:	681b      	ldr	r3, [r3, #0]
 8006652:	2b03      	cmp	r3, #3
 8006654:	d114      	bne.n	8006680 <OSPI_ConfigCmd+0xa0>
  {
    ccr_reg = &(hospi->Instance->WPCCR);
 8006656:	687b      	ldr	r3, [r7, #4]
 8006658:	681b      	ldr	r3, [r3, #0]
 800665a:	f503 73a0 	add.w	r3, r3, #320	@ 0x140
 800665e:	61bb      	str	r3, [r7, #24]
    tcr_reg = &(hospi->Instance->WPTCR);
 8006660:	687b      	ldr	r3, [r7, #4]
 8006662:	681b      	ldr	r3, [r3, #0]
 8006664:	f503 73a4 	add.w	r3, r3, #328	@ 0x148
 8006668:	617b      	str	r3, [r7, #20]
    ir_reg  = &(hospi->Instance->WPIR);
 800666a:	687b      	ldr	r3, [r7, #4]
 800666c:	681b      	ldr	r3, [r3, #0]
 800666e:	f503 73a8 	add.w	r3, r3, #336	@ 0x150
 8006672:	613b      	str	r3, [r7, #16]
    abr_reg = &(hospi->Instance->WPABR);
 8006674:	687b      	ldr	r3, [r7, #4]
 8006676:	681b      	ldr	r3, [r3, #0]
 8006678:	f503 73b0 	add.w	r3, r3, #352	@ 0x160
 800667c:	60fb      	str	r3, [r7, #12]
 800667e:	e013      	b.n	80066a8 <OSPI_ConfigCmd+0xc8>
  }
  else
  {
    ccr_reg = &(hospi->Instance->CCR);
 8006680:	687b      	ldr	r3, [r7, #4]
 8006682:	681b      	ldr	r3, [r3, #0]
 8006684:	f503 7380 	add.w	r3, r3, #256	@ 0x100
 8006688:	61bb      	str	r3, [r7, #24]
    tcr_reg = &(hospi->Instance->TCR);
 800668a:	687b      	ldr	r3, [r7, #4]
 800668c:	681b      	ldr	r3, [r3, #0]
 800668e:	f503 7384 	add.w	r3, r3, #264	@ 0x108
 8006692:	617b      	str	r3, [r7, #20]
    ir_reg  = &(hospi->Instance->IR);
 8006694:	687b      	ldr	r3, [r7, #4]
 8006696:	681b      	ldr	r3, [r3, #0]
 8006698:	f503 7388 	add.w	r3, r3, #272	@ 0x110
 800669c:	613b      	str	r3, [r7, #16]
    abr_reg = &(hospi->Instance->ABR);
 800669e:	687b      	ldr	r3, [r7, #4]
 80066a0:	681b      	ldr	r3, [r3, #0]
 80066a2:	f503 7390 	add.w	r3, r3, #288	@ 0x120
 80066a6:	60fb      	str	r3, [r7, #12]
  }

  /* Configure the CCR register with DQS and SIOO modes */
  *ccr_reg = (cmd->DQSMode | cmd->SIOOMode);
 80066a8:	683b      	ldr	r3, [r7, #0]
 80066aa:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 80066ac:	683b      	ldr	r3, [r7, #0]
 80066ae:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80066b0:	431a      	orrs	r2, r3
 80066b2:	69bb      	ldr	r3, [r7, #24]
 80066b4:	601a      	str	r2, [r3, #0]

  if (cmd->AlternateBytesMode != HAL_OSPI_ALTERNATE_BYTES_NONE)
 80066b6:	683b      	ldr	r3, [r7, #0]
 80066b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80066ba:	2b00      	cmp	r3, #0
 80066bc:	d012      	beq.n	80066e4 <OSPI_ConfigCmd+0x104>
  {
    /* Configure the ABR register with alternate bytes value */
    *abr_reg = cmd->AlternateBytes;
 80066be:	683b      	ldr	r3, [r7, #0]
 80066c0:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80066c2:	68fb      	ldr	r3, [r7, #12]
 80066c4:	601a      	str	r2, [r3, #0]

    /* Configure the CCR register with alternate bytes communication parameters */
    MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_ABMODE | OCTOSPI_CCR_ABDTR | OCTOSPI_CCR_ABSIZE),
 80066c6:	69bb      	ldr	r3, [r7, #24]
 80066c8:	681b      	ldr	r3, [r3, #0]
 80066ca:	f423 127c 	bic.w	r2, r3, #4128768	@ 0x3f0000
 80066ce:	683b      	ldr	r3, [r7, #0]
 80066d0:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 80066d2:	683b      	ldr	r3, [r7, #0]
 80066d4:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80066d6:	4319      	orrs	r1, r3
 80066d8:	683b      	ldr	r3, [r7, #0]
 80066da:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80066dc:	430b      	orrs	r3, r1
 80066de:	431a      	orrs	r2, r3
 80066e0:	69bb      	ldr	r3, [r7, #24]
 80066e2:	601a      	str	r2, [r3, #0]
               (cmd->AlternateBytesMode | cmd->AlternateBytesDtrMode | cmd->AlternateBytesSize));
  }

  /* Configure the TCR register with the number of dummy cycles */
  MODIFY_REG((*tcr_reg), OCTOSPI_TCR_DCYC, cmd->DummyCycles);
 80066e4:	697b      	ldr	r3, [r7, #20]
 80066e6:	681b      	ldr	r3, [r3, #0]
 80066e8:	f023 021f 	bic.w	r2, r3, #31
 80066ec:	683b      	ldr	r3, [r7, #0]
 80066ee:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80066f0:	431a      	orrs	r2, r3
 80066f2:	697b      	ldr	r3, [r7, #20]
 80066f4:	601a      	str	r2, [r3, #0]

  if (cmd->DataMode != HAL_OSPI_DATA_NONE)
 80066f6:	683b      	ldr	r3, [r7, #0]
 80066f8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80066fa:	2b00      	cmp	r3, #0
 80066fc:	d009      	beq.n	8006712 <OSPI_ConfigCmd+0x132>
  {
    if (cmd->OperationType == HAL_OSPI_OPTYPE_COMMON_CFG)
 80066fe:	683b      	ldr	r3, [r7, #0]
 8006700:	681b      	ldr	r3, [r3, #0]
 8006702:	2b00      	cmp	r3, #0
 8006704:	d105      	bne.n	8006712 <OSPI_ConfigCmd+0x132>
    {
      /* Configure the DLR register with the number of data */
      hospi->Instance->DLR = (cmd->NbData - 1U);
 8006706:	683b      	ldr	r3, [r7, #0]
 8006708:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800670a:	687b      	ldr	r3, [r7, #4]
 800670c:	681b      	ldr	r3, [r3, #0]
 800670e:	3a01      	subs	r2, #1
 8006710:	641a      	str	r2, [r3, #64]	@ 0x40
    }
  }

  if (cmd->InstructionMode != HAL_OSPI_INSTRUCTION_NONE)
 8006712:	683b      	ldr	r3, [r7, #0]
 8006714:	68db      	ldr	r3, [r3, #12]
 8006716:	2b00      	cmp	r3, #0
 8006718:	f000 8095 	beq.w	8006846 <OSPI_ConfigCmd+0x266>
  {
    if (cmd->AddressMode != HAL_OSPI_ADDRESS_NONE)
 800671c:	683b      	ldr	r3, [r7, #0]
 800671e:	69db      	ldr	r3, [r3, #28]
 8006720:	2b00      	cmp	r3, #0
 8006722:	d053      	beq.n	80067cc <OSPI_ConfigCmd+0x1ec>
    {
      if (cmd->DataMode != HAL_OSPI_DATA_NONE)
 8006724:	683b      	ldr	r3, [r7, #0]
 8006726:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006728:	2b00      	cmp	r3, #0
 800672a:	d01e      	beq.n	800676a <OSPI_ConfigCmd+0x18a>
      {
        /* ---- Command with instruction, address and data ---- */

        /* Configure the CCR register with all communication parameters */
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_IMODE  | OCTOSPI_CCR_IDTR  | OCTOSPI_CCR_ISIZE  |
 800672c:	69bb      	ldr	r3, [r7, #24]
 800672e:	681a      	ldr	r2, [r3, #0]
 8006730:	4b64      	ldr	r3, [pc, #400]	@ (80068c4 <OSPI_ConfigCmd+0x2e4>)
 8006732:	4013      	ands	r3, r2
 8006734:	683a      	ldr	r2, [r7, #0]
 8006736:	68d1      	ldr	r1, [r2, #12]
 8006738:	683a      	ldr	r2, [r7, #0]
 800673a:	6952      	ldr	r2, [r2, #20]
 800673c:	4311      	orrs	r1, r2
 800673e:	683a      	ldr	r2, [r7, #0]
 8006740:	6912      	ldr	r2, [r2, #16]
 8006742:	4311      	orrs	r1, r2
 8006744:	683a      	ldr	r2, [r7, #0]
 8006746:	69d2      	ldr	r2, [r2, #28]
 8006748:	4311      	orrs	r1, r2
 800674a:	683a      	ldr	r2, [r7, #0]
 800674c:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 800674e:	4311      	orrs	r1, r2
 8006750:	683a      	ldr	r2, [r7, #0]
 8006752:	6a12      	ldr	r2, [r2, #32]
 8006754:	4311      	orrs	r1, r2
 8006756:	683a      	ldr	r2, [r7, #0]
 8006758:	6b92      	ldr	r2, [r2, #56]	@ 0x38
 800675a:	4311      	orrs	r1, r2
 800675c:	683a      	ldr	r2, [r7, #0]
 800675e:	6c12      	ldr	r2, [r2, #64]	@ 0x40
 8006760:	430a      	orrs	r2, r1
 8006762:	431a      	orrs	r2, r3
 8006764:	69bb      	ldr	r3, [r7, #24]
 8006766:	601a      	str	r2, [r3, #0]
 8006768:	e026      	b.n	80067b8 <OSPI_ConfigCmd+0x1d8>
      else
      {
        /* ---- Command with instruction and address ---- */

        /* Configure the CCR register with all communication parameters */
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_IMODE  | OCTOSPI_CCR_IDTR  | OCTOSPI_CCR_ISIZE  |
 800676a:	69bb      	ldr	r3, [r7, #24]
 800676c:	681a      	ldr	r2, [r3, #0]
 800676e:	4b56      	ldr	r3, [pc, #344]	@ (80068c8 <OSPI_ConfigCmd+0x2e8>)
 8006770:	4013      	ands	r3, r2
 8006772:	683a      	ldr	r2, [r7, #0]
 8006774:	68d1      	ldr	r1, [r2, #12]
 8006776:	683a      	ldr	r2, [r7, #0]
 8006778:	6952      	ldr	r2, [r2, #20]
 800677a:	4311      	orrs	r1, r2
 800677c:	683a      	ldr	r2, [r7, #0]
 800677e:	6912      	ldr	r2, [r2, #16]
 8006780:	4311      	orrs	r1, r2
 8006782:	683a      	ldr	r2, [r7, #0]
 8006784:	69d2      	ldr	r2, [r2, #28]
 8006786:	4311      	orrs	r1, r2
 8006788:	683a      	ldr	r2, [r7, #0]
 800678a:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 800678c:	4311      	orrs	r1, r2
 800678e:	683a      	ldr	r2, [r7, #0]
 8006790:	6a12      	ldr	r2, [r2, #32]
 8006792:	430a      	orrs	r2, r1
 8006794:	431a      	orrs	r2, r3
 8006796:	69bb      	ldr	r3, [r7, #24]
 8006798:	601a      	str	r2, [r3, #0]
                                OCTOSPI_CCR_ADMODE | OCTOSPI_CCR_ADDTR | OCTOSPI_CCR_ADSIZE),
                   (cmd->InstructionMode | cmd->InstructionDtrMode | cmd->InstructionSize |
                    cmd->AddressMode     | cmd->AddressDtrMode     | cmd->AddressSize));

        /* The DHQC bit is linked with DDTR bit which should be activated */
        if ((hospi->Init.DelayHoldQuarterCycle == HAL_OSPI_DHQC_ENABLE) &&
 800679a:	687b      	ldr	r3, [r7, #4]
 800679c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800679e:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80067a2:	d109      	bne.n	80067b8 <OSPI_ConfigCmd+0x1d8>
            (cmd->InstructionDtrMode == HAL_OSPI_INSTRUCTION_DTR_ENABLE))
 80067a4:	683b      	ldr	r3, [r7, #0]
 80067a6:	695b      	ldr	r3, [r3, #20]
        if ((hospi->Init.DelayHoldQuarterCycle == HAL_OSPI_DHQC_ENABLE) &&
 80067a8:	2b08      	cmp	r3, #8
 80067aa:	d105      	bne.n	80067b8 <OSPI_ConfigCmd+0x1d8>
        {
          MODIFY_REG((*ccr_reg), OCTOSPI_CCR_DDTR, HAL_OSPI_DATA_DTR_ENABLE);
 80067ac:	69bb      	ldr	r3, [r7, #24]
 80067ae:	681b      	ldr	r3, [r3, #0]
 80067b0:	f043 6200 	orr.w	r2, r3, #134217728	@ 0x8000000
 80067b4:	69bb      	ldr	r3, [r7, #24]
 80067b6:	601a      	str	r2, [r3, #0]
        }
      }

      /* Configure the IR register with the instruction value */
      *ir_reg = cmd->Instruction;
 80067b8:	683b      	ldr	r3, [r7, #0]
 80067ba:	689a      	ldr	r2, [r3, #8]
 80067bc:	693b      	ldr	r3, [r7, #16]
 80067be:	601a      	str	r2, [r3, #0]

      /* Configure the AR register with the address value */
      hospi->Instance->AR = cmd->Address;
 80067c0:	687b      	ldr	r3, [r7, #4]
 80067c2:	681b      	ldr	r3, [r3, #0]
 80067c4:	683a      	ldr	r2, [r7, #0]
 80067c6:	6992      	ldr	r2, [r2, #24]
 80067c8:	649a      	str	r2, [r3, #72]	@ 0x48
 80067ca:	e074      	b.n	80068b6 <OSPI_ConfigCmd+0x2d6>
    }
    else
    {
      if (cmd->DataMode != HAL_OSPI_DATA_NONE)
 80067cc:	683b      	ldr	r3, [r7, #0]
 80067ce:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80067d0:	2b00      	cmp	r3, #0
 80067d2:	d015      	beq.n	8006800 <OSPI_ConfigCmd+0x220>
      {
        /* ---- Command with instruction and data ---- */

        /* Configure the CCR register with all communication parameters */
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_IMODE | OCTOSPI_CCR_IDTR | OCTOSPI_CCR_ISIZE |
 80067d4:	69bb      	ldr	r3, [r7, #24]
 80067d6:	681a      	ldr	r2, [r3, #0]
 80067d8:	4b3c      	ldr	r3, [pc, #240]	@ (80068cc <OSPI_ConfigCmd+0x2ec>)
 80067da:	4013      	ands	r3, r2
 80067dc:	683a      	ldr	r2, [r7, #0]
 80067de:	68d1      	ldr	r1, [r2, #12]
 80067e0:	683a      	ldr	r2, [r7, #0]
 80067e2:	6952      	ldr	r2, [r2, #20]
 80067e4:	4311      	orrs	r1, r2
 80067e6:	683a      	ldr	r2, [r7, #0]
 80067e8:	6912      	ldr	r2, [r2, #16]
 80067ea:	4311      	orrs	r1, r2
 80067ec:	683a      	ldr	r2, [r7, #0]
 80067ee:	6b92      	ldr	r2, [r2, #56]	@ 0x38
 80067f0:	4311      	orrs	r1, r2
 80067f2:	683a      	ldr	r2, [r7, #0]
 80067f4:	6c12      	ldr	r2, [r2, #64]	@ 0x40
 80067f6:	430a      	orrs	r2, r1
 80067f8:	431a      	orrs	r2, r3
 80067fa:	69bb      	ldr	r3, [r7, #24]
 80067fc:	601a      	str	r2, [r3, #0]
 80067fe:	e01d      	b.n	800683c <OSPI_ConfigCmd+0x25c>
      else
      {
        /* ---- Command with only instruction ---- */

        /* Configure the CCR register with all communication parameters */
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_IMODE | OCTOSPI_CCR_IDTR | OCTOSPI_CCR_ISIZE),
 8006800:	69bb      	ldr	r3, [r7, #24]
 8006802:	681b      	ldr	r3, [r3, #0]
 8006804:	f023 023f 	bic.w	r2, r3, #63	@ 0x3f
 8006808:	683b      	ldr	r3, [r7, #0]
 800680a:	68d9      	ldr	r1, [r3, #12]
 800680c:	683b      	ldr	r3, [r7, #0]
 800680e:	695b      	ldr	r3, [r3, #20]
 8006810:	4319      	orrs	r1, r3
 8006812:	683b      	ldr	r3, [r7, #0]
 8006814:	691b      	ldr	r3, [r3, #16]
 8006816:	430b      	orrs	r3, r1
 8006818:	431a      	orrs	r2, r3
 800681a:	69bb      	ldr	r3, [r7, #24]
 800681c:	601a      	str	r2, [r3, #0]
                   (cmd->InstructionMode | cmd->InstructionDtrMode | cmd->InstructionSize));

        /* The DHQC bit is linked with DDTR bit which should be activated */
        if ((hospi->Init.DelayHoldQuarterCycle == HAL_OSPI_DHQC_ENABLE) &&
 800681e:	687b      	ldr	r3, [r7, #4]
 8006820:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8006822:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8006826:	d109      	bne.n	800683c <OSPI_ConfigCmd+0x25c>
            (cmd->InstructionDtrMode == HAL_OSPI_INSTRUCTION_DTR_ENABLE))
 8006828:	683b      	ldr	r3, [r7, #0]
 800682a:	695b      	ldr	r3, [r3, #20]
        if ((hospi->Init.DelayHoldQuarterCycle == HAL_OSPI_DHQC_ENABLE) &&
 800682c:	2b08      	cmp	r3, #8
 800682e:	d105      	bne.n	800683c <OSPI_ConfigCmd+0x25c>
        {
          MODIFY_REG((*ccr_reg), OCTOSPI_CCR_DDTR, HAL_OSPI_DATA_DTR_ENABLE);
 8006830:	69bb      	ldr	r3, [r7, #24]
 8006832:	681b      	ldr	r3, [r3, #0]
 8006834:	f043 6200 	orr.w	r2, r3, #134217728	@ 0x8000000
 8006838:	69bb      	ldr	r3, [r7, #24]
 800683a:	601a      	str	r2, [r3, #0]
        }
      }

      /* Configure the IR register with the instruction value */
      *ir_reg = cmd->Instruction;
 800683c:	683b      	ldr	r3, [r7, #0]
 800683e:	689a      	ldr	r2, [r3, #8]
 8006840:	693b      	ldr	r3, [r7, #16]
 8006842:	601a      	str	r2, [r3, #0]
 8006844:	e037      	b.n	80068b6 <OSPI_ConfigCmd+0x2d6>

    }
  }
  else
  {
    if (cmd->AddressMode != HAL_OSPI_ADDRESS_NONE)
 8006846:	683b      	ldr	r3, [r7, #0]
 8006848:	69db      	ldr	r3, [r3, #28]
 800684a:	2b00      	cmp	r3, #0
 800684c:	d02e      	beq.n	80068ac <OSPI_ConfigCmd+0x2cc>
    {
      if (cmd->DataMode != HAL_OSPI_DATA_NONE)
 800684e:	683b      	ldr	r3, [r7, #0]
 8006850:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006852:	2b00      	cmp	r3, #0
 8006854:	d015      	beq.n	8006882 <OSPI_ConfigCmd+0x2a2>
      {
        /* ---- Command with address and data ---- */

        /* Configure the CCR register with all communication parameters */
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_ADMODE | OCTOSPI_CCR_ADDTR | OCTOSPI_CCR_ADSIZE |
 8006856:	69bb      	ldr	r3, [r7, #24]
 8006858:	681a      	ldr	r2, [r3, #0]
 800685a:	4b1d      	ldr	r3, [pc, #116]	@ (80068d0 <OSPI_ConfigCmd+0x2f0>)
 800685c:	4013      	ands	r3, r2
 800685e:	683a      	ldr	r2, [r7, #0]
 8006860:	69d1      	ldr	r1, [r2, #28]
 8006862:	683a      	ldr	r2, [r7, #0]
 8006864:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8006866:	4311      	orrs	r1, r2
 8006868:	683a      	ldr	r2, [r7, #0]
 800686a:	6a12      	ldr	r2, [r2, #32]
 800686c:	4311      	orrs	r1, r2
 800686e:	683a      	ldr	r2, [r7, #0]
 8006870:	6b92      	ldr	r2, [r2, #56]	@ 0x38
 8006872:	4311      	orrs	r1, r2
 8006874:	683a      	ldr	r2, [r7, #0]
 8006876:	6c12      	ldr	r2, [r2, #64]	@ 0x40
 8006878:	430a      	orrs	r2, r1
 800687a:	431a      	orrs	r2, r3
 800687c:	69bb      	ldr	r3, [r7, #24]
 800687e:	601a      	str	r2, [r3, #0]
 8006880:	e00e      	b.n	80068a0 <OSPI_ConfigCmd+0x2c0>
      else
      {
        /* ---- Command with only address ---- */

        /* Configure the CCR register with all communication parameters */
        MODIFY_REG((*ccr_reg), (OCTOSPI_CCR_ADMODE | OCTOSPI_CCR_ADDTR | OCTOSPI_CCR_ADSIZE),
 8006882:	69bb      	ldr	r3, [r7, #24]
 8006884:	681b      	ldr	r3, [r3, #0]
 8006886:	f423 527c 	bic.w	r2, r3, #16128	@ 0x3f00
 800688a:	683b      	ldr	r3, [r7, #0]
 800688c:	69d9      	ldr	r1, [r3, #28]
 800688e:	683b      	ldr	r3, [r7, #0]
 8006890:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006892:	4319      	orrs	r1, r3
 8006894:	683b      	ldr	r3, [r7, #0]
 8006896:	6a1b      	ldr	r3, [r3, #32]
 8006898:	430b      	orrs	r3, r1
 800689a:	431a      	orrs	r2, r3
 800689c:	69bb      	ldr	r3, [r7, #24]
 800689e:	601a      	str	r2, [r3, #0]
                   (cmd->AddressMode | cmd->AddressDtrMode | cmd->AddressSize));
      }

      /* Configure the AR register with the instruction value */
      hospi->Instance->AR = cmd->Address;
 80068a0:	687b      	ldr	r3, [r7, #4]
 80068a2:	681b      	ldr	r3, [r3, #0]
 80068a4:	683a      	ldr	r2, [r7, #0]
 80068a6:	6992      	ldr	r2, [r2, #24]
 80068a8:	649a      	str	r2, [r3, #72]	@ 0x48
 80068aa:	e004      	b.n	80068b6 <OSPI_ConfigCmd+0x2d6>
    }
    else
    {
      /* ---- Invalid command configuration (no instruction, no address) ---- */
      status = HAL_ERROR;
 80068ac:	2301      	movs	r3, #1
 80068ae:	77fb      	strb	r3, [r7, #31]
      hospi->ErrorCode = HAL_OSPI_ERROR_INVALID_PARAM;
 80068b0:	687b      	ldr	r3, [r7, #4]
 80068b2:	2208      	movs	r2, #8
 80068b4:	655a      	str	r2, [r3, #84]	@ 0x54
    }
  }

  /* Return function status */
  return status;
 80068b6:	7ffb      	ldrb	r3, [r7, #31]
}
 80068b8:	4618      	mov	r0, r3
 80068ba:	3724      	adds	r7, #36	@ 0x24
 80068bc:	46bd      	mov	sp, r7
 80068be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80068c2:	4770      	bx	lr
 80068c4:	f0ffc0c0 	.word	0xf0ffc0c0
 80068c8:	ffffc0c0 	.word	0xffffc0c0
 80068cc:	f0ffffc0 	.word	0xf0ffffc0
 80068d0:	f0ffc0ff 	.word	0xf0ffc0ff

080068d4 <OSPIM_GetConfig>:
  * @param  instance_nb : number of the instance
  * @param  cfg         : configuration of the IO Manager for the instance
  * @retval HAL status
  */
static HAL_StatusTypeDef OSPIM_GetConfig(uint8_t instance_nb, OSPIM_CfgTypeDef *cfg)
{
 80068d4:	b480      	push	{r7}
 80068d6:	b087      	sub	sp, #28
 80068d8:	af00      	add	r7, sp, #0
 80068da:	4603      	mov	r3, r0
 80068dc:	6039      	str	r1, [r7, #0]
 80068de:	71fb      	strb	r3, [r7, #7]
  HAL_StatusTypeDef status = HAL_OK;
 80068e0:	2300      	movs	r3, #0
 80068e2:	75fb      	strb	r3, [r7, #23]
  uint32_t reg;
  uint32_t value = 0U;
 80068e4:	2300      	movs	r3, #0
 80068e6:	613b      	str	r3, [r7, #16]
  uint32_t index;

  if ((instance_nb == 0U) || (instance_nb > OSPI_NB_INSTANCE) || (cfg == NULL))
 80068e8:	79fb      	ldrb	r3, [r7, #7]
 80068ea:	2b00      	cmp	r3, #0
 80068ec:	d005      	beq.n	80068fa <OSPIM_GetConfig+0x26>
 80068ee:	79fb      	ldrb	r3, [r7, #7]
 80068f0:	2b02      	cmp	r3, #2
 80068f2:	d802      	bhi.n	80068fa <OSPIM_GetConfig+0x26>
 80068f4:	683b      	ldr	r3, [r7, #0]
 80068f6:	2b00      	cmp	r3, #0
 80068f8:	d102      	bne.n	8006900 <OSPIM_GetConfig+0x2c>
  {
    /* Invalid parameter -> error returned */
    status = HAL_ERROR;
 80068fa:	2301      	movs	r3, #1
 80068fc:	75fb      	strb	r3, [r7, #23]
 80068fe:	e098      	b.n	8006a32 <OSPIM_GetConfig+0x15e>
  }
  else
  {
    /* Initialize the structure */
    cfg->ClkPort    = 0U;
 8006900:	683b      	ldr	r3, [r7, #0]
 8006902:	2200      	movs	r2, #0
 8006904:	601a      	str	r2, [r3, #0]
    cfg->DQSPort    = 0U;
 8006906:	683b      	ldr	r3, [r7, #0]
 8006908:	2200      	movs	r2, #0
 800690a:	605a      	str	r2, [r3, #4]
    cfg->NCSPort    = 0U;
 800690c:	683b      	ldr	r3, [r7, #0]
 800690e:	2200      	movs	r2, #0
 8006910:	609a      	str	r2, [r3, #8]
    cfg->IOLowPort  = 0U;
 8006912:	683b      	ldr	r3, [r7, #0]
 8006914:	2200      	movs	r2, #0
 8006916:	60da      	str	r2, [r3, #12]
    cfg->IOHighPort = 0U;
 8006918:	683b      	ldr	r3, [r7, #0]
 800691a:	2200      	movs	r2, #0
 800691c:	611a      	str	r2, [r3, #16]

    if (instance_nb == 2U)
 800691e:	79fb      	ldrb	r3, [r7, #7]
 8006920:	2b02      	cmp	r3, #2
 8006922:	d10b      	bne.n	800693c <OSPIM_GetConfig+0x68>
    {
      if ((OCTOSPIM->CR & OCTOSPIM_CR_MUXEN) == 0U)
 8006924:	4b46      	ldr	r3, [pc, #280]	@ (8006a40 <OSPIM_GetConfig+0x16c>)
 8006926:	681b      	ldr	r3, [r3, #0]
 8006928:	f003 0301 	and.w	r3, r3, #1
 800692c:	2b00      	cmp	r3, #0
 800692e:	d102      	bne.n	8006936 <OSPIM_GetConfig+0x62>
      {
        value = (OCTOSPIM_PCR_CLKSRC | OCTOSPIM_PCR_DQSSRC | OCTOSPIM_PCR_NCSSRC
 8006930:	4b44      	ldr	r3, [pc, #272]	@ (8006a44 <OSPIM_GetConfig+0x170>)
 8006932:	613b      	str	r3, [r7, #16]
 8006934:	e002      	b.n	800693c <OSPIM_GetConfig+0x68>
                 | OCTOSPIM_PCR_IOLSRC_1 | OCTOSPIM_PCR_IOHSRC_1);
      }
      else
      {
        value = OCTOSPIM_PCR_NCSSRC;
 8006936:	f44f 7300 	mov.w	r3, #512	@ 0x200
 800693a:	613b      	str	r3, [r7, #16]
      }
    }

    /* Get the information about the instance */
    for (index = 0U; index < OSPI_IOM_NB_PORTS; index ++)
 800693c:	2300      	movs	r3, #0
 800693e:	60fb      	str	r3, [r7, #12]
 8006940:	e074      	b.n	8006a2c <OSPIM_GetConfig+0x158>
    {
      reg = OCTOSPIM->PCR[index];
 8006942:	4a3f      	ldr	r2, [pc, #252]	@ (8006a40 <OSPIM_GetConfig+0x16c>)
 8006944:	68fb      	ldr	r3, [r7, #12]
 8006946:	009b      	lsls	r3, r3, #2
 8006948:	4413      	add	r3, r2
 800694a:	685b      	ldr	r3, [r3, #4]
 800694c:	60bb      	str	r3, [r7, #8]

      if ((reg & OCTOSPIM_PCR_CLKEN) != 0U)
 800694e:	68bb      	ldr	r3, [r7, #8]
 8006950:	f003 0301 	and.w	r3, r3, #1
 8006954:	2b00      	cmp	r3, #0
 8006956:	d00a      	beq.n	800696e <OSPIM_GetConfig+0x9a>
      {
        /* The clock is enabled on this port */
        if ((reg & OCTOSPIM_PCR_CLKSRC) == (value & OCTOSPIM_PCR_CLKSRC))
 8006958:	68ba      	ldr	r2, [r7, #8]
 800695a:	693b      	ldr	r3, [r7, #16]
 800695c:	4053      	eors	r3, r2
 800695e:	f003 0302 	and.w	r3, r3, #2
 8006962:	2b00      	cmp	r3, #0
 8006964:	d103      	bne.n	800696e <OSPIM_GetConfig+0x9a>
        {
          /* The clock correspond to the instance passed as parameter */
          cfg->ClkPort = index + 1U;
 8006966:	68fb      	ldr	r3, [r7, #12]
 8006968:	1c5a      	adds	r2, r3, #1
 800696a:	683b      	ldr	r3, [r7, #0]
 800696c:	601a      	str	r2, [r3, #0]
        }
      }

      if ((reg & OCTOSPIM_PCR_DQSEN) != 0U)
 800696e:	68bb      	ldr	r3, [r7, #8]
 8006970:	f003 0310 	and.w	r3, r3, #16
 8006974:	2b00      	cmp	r3, #0
 8006976:	d00a      	beq.n	800698e <OSPIM_GetConfig+0xba>
      {
        /* The DQS is enabled on this port */
        if ((reg & OCTOSPIM_PCR_DQSSRC) == (value & OCTOSPIM_PCR_DQSSRC))
 8006978:	68ba      	ldr	r2, [r7, #8]
 800697a:	693b      	ldr	r3, [r7, #16]
 800697c:	4053      	eors	r3, r2
 800697e:	f003 0320 	and.w	r3, r3, #32
 8006982:	2b00      	cmp	r3, #0
 8006984:	d103      	bne.n	800698e <OSPIM_GetConfig+0xba>
        {
          /* The DQS correspond to the instance passed as parameter */
          cfg->DQSPort = index + 1U;
 8006986:	68fb      	ldr	r3, [r7, #12]
 8006988:	1c5a      	adds	r2, r3, #1
 800698a:	683b      	ldr	r3, [r7, #0]
 800698c:	605a      	str	r2, [r3, #4]
        }
      }

      if ((reg & OCTOSPIM_PCR_NCSEN) != 0U)
 800698e:	68bb      	ldr	r3, [r7, #8]
 8006990:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006994:	2b00      	cmp	r3, #0
 8006996:	d00a      	beq.n	80069ae <OSPIM_GetConfig+0xda>
      {
        /* The nCS is enabled on this port */
        if ((reg & OCTOSPIM_PCR_NCSSRC) == (value & OCTOSPIM_PCR_NCSSRC))
 8006998:	68ba      	ldr	r2, [r7, #8]
 800699a:	693b      	ldr	r3, [r7, #16]
 800699c:	4053      	eors	r3, r2
 800699e:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80069a2:	2b00      	cmp	r3, #0
 80069a4:	d103      	bne.n	80069ae <OSPIM_GetConfig+0xda>
        {
          /* The nCS correspond to the instance passed as parameter */
          cfg->NCSPort = index + 1U;
 80069a6:	68fb      	ldr	r3, [r7, #12]
 80069a8:	1c5a      	adds	r2, r3, #1
 80069aa:	683b      	ldr	r3, [r7, #0]
 80069ac:	609a      	str	r2, [r3, #8]
        }
      }

      if ((reg & OCTOSPIM_PCR_IOLEN) != 0U)
 80069ae:	68bb      	ldr	r3, [r7, #8]
 80069b0:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80069b4:	2b00      	cmp	r3, #0
 80069b6:	d018      	beq.n	80069ea <OSPIM_GetConfig+0x116>
      {
        /* The IO Low is enabled on this port */
        if ((reg & OCTOSPIM_PCR_IOLSRC_1) == (value & OCTOSPIM_PCR_IOLSRC_1))
 80069b8:	68ba      	ldr	r2, [r7, #8]
 80069ba:	693b      	ldr	r3, [r7, #16]
 80069bc:	4053      	eors	r3, r2
 80069be:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 80069c2:	2b00      	cmp	r3, #0
 80069c4:	d111      	bne.n	80069ea <OSPIM_GetConfig+0x116>
        {
          /* The IO Low correspond to the instance passed as parameter */
          if ((reg & OCTOSPIM_PCR_IOLSRC_0) == 0U)
 80069c6:	68bb      	ldr	r3, [r7, #8]
 80069c8:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80069cc:	2b00      	cmp	r3, #0
 80069ce:	d106      	bne.n	80069de <OSPIM_GetConfig+0x10a>
          {
            cfg->IOLowPort = (OCTOSPIM_PCR_IOLEN | (index + 1U));
 80069d0:	68fb      	ldr	r3, [r7, #12]
 80069d2:	3301      	adds	r3, #1
 80069d4:	f443 3280 	orr.w	r2, r3, #65536	@ 0x10000
 80069d8:	683b      	ldr	r3, [r7, #0]
 80069da:	60da      	str	r2, [r3, #12]
 80069dc:	e005      	b.n	80069ea <OSPIM_GetConfig+0x116>
          }
          else
          {
            cfg->IOLowPort = (OCTOSPIM_PCR_IOHEN | (index + 1U));
 80069de:	68fb      	ldr	r3, [r7, #12]
 80069e0:	3301      	adds	r3, #1
 80069e2:	f043 7280 	orr.w	r2, r3, #16777216	@ 0x1000000
 80069e6:	683b      	ldr	r3, [r7, #0]
 80069e8:	60da      	str	r2, [r3, #12]
          }
        }
      }

      if ((reg & OCTOSPIM_PCR_IOHEN) != 0U)
 80069ea:	68bb      	ldr	r3, [r7, #8]
 80069ec:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 80069f0:	2b00      	cmp	r3, #0
 80069f2:	d018      	beq.n	8006a26 <OSPIM_GetConfig+0x152>
      {
        /* The IO High is enabled on this port */
        if ((reg & OCTOSPIM_PCR_IOHSRC_1) == (value & OCTOSPIM_PCR_IOHSRC_1))
 80069f4:	68ba      	ldr	r2, [r7, #8]
 80069f6:	693b      	ldr	r3, [r7, #16]
 80069f8:	4053      	eors	r3, r2
 80069fa:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 80069fe:	2b00      	cmp	r3, #0
 8006a00:	d111      	bne.n	8006a26 <OSPIM_GetConfig+0x152>
        {
          /* The IO High correspond to the instance passed as parameter */
          if ((reg & OCTOSPIM_PCR_IOHSRC_0) == 0U)
 8006a02:	68bb      	ldr	r3, [r7, #8]
 8006a04:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8006a08:	2b00      	cmp	r3, #0
 8006a0a:	d106      	bne.n	8006a1a <OSPIM_GetConfig+0x146>
          {
            cfg->IOHighPort = (OCTOSPIM_PCR_IOLEN | (index + 1U));
 8006a0c:	68fb      	ldr	r3, [r7, #12]
 8006a0e:	3301      	adds	r3, #1
 8006a10:	f443 3280 	orr.w	r2, r3, #65536	@ 0x10000
 8006a14:	683b      	ldr	r3, [r7, #0]
 8006a16:	611a      	str	r2, [r3, #16]
 8006a18:	e005      	b.n	8006a26 <OSPIM_GetConfig+0x152>
          }
          else
          {
            cfg->IOHighPort = (OCTOSPIM_PCR_IOHEN | (index + 1U));
 8006a1a:	68fb      	ldr	r3, [r7, #12]
 8006a1c:	3301      	adds	r3, #1
 8006a1e:	f043 7280 	orr.w	r2, r3, #16777216	@ 0x1000000
 8006a22:	683b      	ldr	r3, [r7, #0]
 8006a24:	611a      	str	r2, [r3, #16]
    for (index = 0U; index < OSPI_IOM_NB_PORTS; index ++)
 8006a26:	68fb      	ldr	r3, [r7, #12]
 8006a28:	3301      	adds	r3, #1
 8006a2a:	60fb      	str	r3, [r7, #12]
 8006a2c:	68fb      	ldr	r3, [r7, #12]
 8006a2e:	2b01      	cmp	r3, #1
 8006a30:	d987      	bls.n	8006942 <OSPIM_GetConfig+0x6e>
      }
    }
  }

  /* Return function status */
  return status;
 8006a32:	7dfb      	ldrb	r3, [r7, #23]
}
 8006a34:	4618      	mov	r0, r3
 8006a36:	371c      	adds	r7, #28
 8006a38:	46bd      	mov	sp, r7
 8006a3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a3e:	4770      	bx	lr
 8006a40:	5200b400 	.word	0x5200b400
 8006a44:	04040222 	.word	0x04040222

08006a48 <HAL_PWREx_ConfigSupply>:
  *         PWR_SMPS_2V5_SUPPLIES_EXT are used only for lines that supports SMPS
  *         regulator.
  * @retval HAL status.
  */
HAL_StatusTypeDef HAL_PWREx_ConfigSupply (uint32_t SupplySource)
{
 8006a48:	b580      	push	{r7, lr}
 8006a4a:	b084      	sub	sp, #16
 8006a4c:	af00      	add	r7, sp, #0
 8006a4e:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param (IS_PWR_SUPPLY (SupplySource));

  /* Check if supply source was configured */
#if defined (PWR_FLAG_SCUEN)
  if (__HAL_PWR_GET_FLAG (PWR_FLAG_SCUEN) == 0U)
 8006a50:	4b19      	ldr	r3, [pc, #100]	@ (8006ab8 <HAL_PWREx_ConfigSupply+0x70>)
 8006a52:	68db      	ldr	r3, [r3, #12]
 8006a54:	f003 0304 	and.w	r3, r3, #4
 8006a58:	2b04      	cmp	r3, #4
 8006a5a:	d00a      	beq.n	8006a72 <HAL_PWREx_ConfigSupply+0x2a>
#else
  if ((PWR->CR3 & (PWR_CR3_SMPSEN | PWR_CR3_LDOEN | PWR_CR3_BYPASS)) != (PWR_CR3_SMPSEN | PWR_CR3_LDOEN))
#endif /* defined (PWR_FLAG_SCUEN) */
  {
    /* Check supply configuration */
    if ((PWR->CR3 & PWR_SUPPLY_CONFIG_MASK) != SupplySource)
 8006a5c:	4b16      	ldr	r3, [pc, #88]	@ (8006ab8 <HAL_PWREx_ConfigSupply+0x70>)
 8006a5e:	68db      	ldr	r3, [r3, #12]
 8006a60:	f003 0307 	and.w	r3, r3, #7
 8006a64:	687a      	ldr	r2, [r7, #4]
 8006a66:	429a      	cmp	r2, r3
 8006a68:	d001      	beq.n	8006a6e <HAL_PWREx_ConfigSupply+0x26>
    {
      /* Supply configuration update locked, can't apply a new supply config */
      return HAL_ERROR;
 8006a6a:	2301      	movs	r3, #1
 8006a6c:	e01f      	b.n	8006aae <HAL_PWREx_ConfigSupply+0x66>
    else
    {
      /* Supply configuration update locked, but new supply configuration
         matches with old supply configuration : nothing to do
      */
      return HAL_OK;
 8006a6e:	2300      	movs	r3, #0
 8006a70:	e01d      	b.n	8006aae <HAL_PWREx_ConfigSupply+0x66>
    }
  }

  /* Set the power supply configuration */
  MODIFY_REG (PWR->CR3, PWR_SUPPLY_CONFIG_MASK, SupplySource);
 8006a72:	4b11      	ldr	r3, [pc, #68]	@ (8006ab8 <HAL_PWREx_ConfigSupply+0x70>)
 8006a74:	68db      	ldr	r3, [r3, #12]
 8006a76:	f023 0207 	bic.w	r2, r3, #7
 8006a7a:	490f      	ldr	r1, [pc, #60]	@ (8006ab8 <HAL_PWREx_ConfigSupply+0x70>)
 8006a7c:	687b      	ldr	r3, [r7, #4]
 8006a7e:	4313      	orrs	r3, r2
 8006a80:	60cb      	str	r3, [r1, #12]

  /* Get tick */
  tickstart = HAL_GetTick ();
 8006a82:	f7fc fb7d 	bl	8003180 <HAL_GetTick>
 8006a86:	60f8      	str	r0, [r7, #12]

  /* Wait till voltage level flag is set */
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
 8006a88:	e009      	b.n	8006a9e <HAL_PWREx_ConfigSupply+0x56>
  {
    if ((HAL_GetTick () - tickstart) > PWR_FLAG_SETTING_DELAY)
 8006a8a:	f7fc fb79 	bl	8003180 <HAL_GetTick>
 8006a8e:	4602      	mov	r2, r0
 8006a90:	68fb      	ldr	r3, [r7, #12]
 8006a92:	1ad3      	subs	r3, r2, r3
 8006a94:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8006a98:	d901      	bls.n	8006a9e <HAL_PWREx_ConfigSupply+0x56>
    {
      return HAL_ERROR;
 8006a9a:	2301      	movs	r3, #1
 8006a9c:	e007      	b.n	8006aae <HAL_PWREx_ConfigSupply+0x66>
  while (__HAL_PWR_GET_FLAG (PWR_FLAG_ACTVOSRDY) == 0U)
 8006a9e:	4b06      	ldr	r3, [pc, #24]	@ (8006ab8 <HAL_PWREx_ConfigSupply+0x70>)
 8006aa0:	685b      	ldr	r3, [r3, #4]
 8006aa2:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8006aa6:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8006aaa:	d1ee      	bne.n	8006a8a <HAL_PWREx_ConfigSupply+0x42>
      }
    }
  }
#endif /* defined (SMPS) */

  return HAL_OK;
 8006aac:	2300      	movs	r3, #0
}
 8006aae:	4618      	mov	r0, r3
 8006ab0:	3710      	adds	r7, #16
 8006ab2:	46bd      	mov	sp, r7
 8006ab4:	bd80      	pop	{r7, pc}
 8006ab6:	bf00      	nop
 8006ab8:	58024800 	.word	0x58024800

08006abc <HAL_RCC_OscConfig>:
  *         supported by this function. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8006abc:	b580      	push	{r7, lr}
 8006abe:	b08c      	sub	sp, #48	@ 0x30
 8006ac0:	af00      	add	r7, sp, #0
 8006ac2:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t temp1_pllckcfg, temp2_pllckcfg;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8006ac4:	687b      	ldr	r3, [r7, #4]
 8006ac6:	2b00      	cmp	r3, #0
 8006ac8:	d101      	bne.n	8006ace <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8006aca:	2301      	movs	r3, #1
 8006acc:	e3c8      	b.n	8007260 <HAL_RCC_OscConfig+0x7a4>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8006ace:	687b      	ldr	r3, [r7, #4]
 8006ad0:	681b      	ldr	r3, [r3, #0]
 8006ad2:	f003 0301 	and.w	r3, r3, #1
 8006ad6:	2b00      	cmp	r3, #0
 8006ad8:	f000 8087 	beq.w	8006bea <HAL_RCC_OscConfig+0x12e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006adc:	4b88      	ldr	r3, [pc, #544]	@ (8006d00 <HAL_RCC_OscConfig+0x244>)
 8006ade:	691b      	ldr	r3, [r3, #16]
 8006ae0:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8006ae4:	62fb      	str	r3, [r7, #44]	@ 0x2c
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 8006ae6:	4b86      	ldr	r3, [pc, #536]	@ (8006d00 <HAL_RCC_OscConfig+0x244>)
 8006ae8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006aea:	62bb      	str	r3, [r7, #40]	@ 0x28
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSE) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSE)))
 8006aec:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006aee:	2b10      	cmp	r3, #16
 8006af0:	d007      	beq.n	8006b02 <HAL_RCC_OscConfig+0x46>
 8006af2:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8006af4:	2b18      	cmp	r3, #24
 8006af6:	d110      	bne.n	8006b1a <HAL_RCC_OscConfig+0x5e>
 8006af8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006afa:	f003 0303 	and.w	r3, r3, #3
 8006afe:	2b02      	cmp	r3, #2
 8006b00:	d10b      	bne.n	8006b1a <HAL_RCC_OscConfig+0x5e>
    {
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8006b02:	4b7f      	ldr	r3, [pc, #508]	@ (8006d00 <HAL_RCC_OscConfig+0x244>)
 8006b04:	681b      	ldr	r3, [r3, #0]
 8006b06:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006b0a:	2b00      	cmp	r3, #0
 8006b0c:	d06c      	beq.n	8006be8 <HAL_RCC_OscConfig+0x12c>
 8006b0e:	687b      	ldr	r3, [r7, #4]
 8006b10:	685b      	ldr	r3, [r3, #4]
 8006b12:	2b00      	cmp	r3, #0
 8006b14:	d168      	bne.n	8006be8 <HAL_RCC_OscConfig+0x12c>
      {
        return HAL_ERROR;
 8006b16:	2301      	movs	r3, #1
 8006b18:	e3a2      	b.n	8007260 <HAL_RCC_OscConfig+0x7a4>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8006b1a:	687b      	ldr	r3, [r7, #4]
 8006b1c:	685b      	ldr	r3, [r3, #4]
 8006b1e:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8006b22:	d106      	bne.n	8006b32 <HAL_RCC_OscConfig+0x76>
 8006b24:	4b76      	ldr	r3, [pc, #472]	@ (8006d00 <HAL_RCC_OscConfig+0x244>)
 8006b26:	681b      	ldr	r3, [r3, #0]
 8006b28:	4a75      	ldr	r2, [pc, #468]	@ (8006d00 <HAL_RCC_OscConfig+0x244>)
 8006b2a:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006b2e:	6013      	str	r3, [r2, #0]
 8006b30:	e02e      	b.n	8006b90 <HAL_RCC_OscConfig+0xd4>
 8006b32:	687b      	ldr	r3, [r7, #4]
 8006b34:	685b      	ldr	r3, [r3, #4]
 8006b36:	2b00      	cmp	r3, #0
 8006b38:	d10c      	bne.n	8006b54 <HAL_RCC_OscConfig+0x98>
 8006b3a:	4b71      	ldr	r3, [pc, #452]	@ (8006d00 <HAL_RCC_OscConfig+0x244>)
 8006b3c:	681b      	ldr	r3, [r3, #0]
 8006b3e:	4a70      	ldr	r2, [pc, #448]	@ (8006d00 <HAL_RCC_OscConfig+0x244>)
 8006b40:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006b44:	6013      	str	r3, [r2, #0]
 8006b46:	4b6e      	ldr	r3, [pc, #440]	@ (8006d00 <HAL_RCC_OscConfig+0x244>)
 8006b48:	681b      	ldr	r3, [r3, #0]
 8006b4a:	4a6d      	ldr	r2, [pc, #436]	@ (8006d00 <HAL_RCC_OscConfig+0x244>)
 8006b4c:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8006b50:	6013      	str	r3, [r2, #0]
 8006b52:	e01d      	b.n	8006b90 <HAL_RCC_OscConfig+0xd4>
 8006b54:	687b      	ldr	r3, [r7, #4]
 8006b56:	685b      	ldr	r3, [r3, #4]
 8006b58:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8006b5c:	d10c      	bne.n	8006b78 <HAL_RCC_OscConfig+0xbc>
 8006b5e:	4b68      	ldr	r3, [pc, #416]	@ (8006d00 <HAL_RCC_OscConfig+0x244>)
 8006b60:	681b      	ldr	r3, [r3, #0]
 8006b62:	4a67      	ldr	r2, [pc, #412]	@ (8006d00 <HAL_RCC_OscConfig+0x244>)
 8006b64:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8006b68:	6013      	str	r3, [r2, #0]
 8006b6a:	4b65      	ldr	r3, [pc, #404]	@ (8006d00 <HAL_RCC_OscConfig+0x244>)
 8006b6c:	681b      	ldr	r3, [r3, #0]
 8006b6e:	4a64      	ldr	r2, [pc, #400]	@ (8006d00 <HAL_RCC_OscConfig+0x244>)
 8006b70:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8006b74:	6013      	str	r3, [r2, #0]
 8006b76:	e00b      	b.n	8006b90 <HAL_RCC_OscConfig+0xd4>
 8006b78:	4b61      	ldr	r3, [pc, #388]	@ (8006d00 <HAL_RCC_OscConfig+0x244>)
 8006b7a:	681b      	ldr	r3, [r3, #0]
 8006b7c:	4a60      	ldr	r2, [pc, #384]	@ (8006d00 <HAL_RCC_OscConfig+0x244>)
 8006b7e:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8006b82:	6013      	str	r3, [r2, #0]
 8006b84:	4b5e      	ldr	r3, [pc, #376]	@ (8006d00 <HAL_RCC_OscConfig+0x244>)
 8006b86:	681b      	ldr	r3, [r3, #0]
 8006b88:	4a5d      	ldr	r2, [pc, #372]	@ (8006d00 <HAL_RCC_OscConfig+0x244>)
 8006b8a:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8006b8e:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8006b90:	687b      	ldr	r3, [r7, #4]
 8006b92:	685b      	ldr	r3, [r3, #4]
 8006b94:	2b00      	cmp	r3, #0
 8006b96:	d013      	beq.n	8006bc0 <HAL_RCC_OscConfig+0x104>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8006b98:	f7fc faf2 	bl	8003180 <HAL_GetTick>
 8006b9c:	6278      	str	r0, [r7, #36]	@ 0x24

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8006b9e:	e008      	b.n	8006bb2 <HAL_RCC_OscConfig+0xf6>
        {
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8006ba0:	f7fc faee 	bl	8003180 <HAL_GetTick>
 8006ba4:	4602      	mov	r2, r0
 8006ba6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006ba8:	1ad3      	subs	r3, r2, r3
 8006baa:	2b64      	cmp	r3, #100	@ 0x64
 8006bac:	d901      	bls.n	8006bb2 <HAL_RCC_OscConfig+0xf6>
          {
            return HAL_TIMEOUT;
 8006bae:	2303      	movs	r3, #3
 8006bb0:	e356      	b.n	8007260 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8006bb2:	4b53      	ldr	r3, [pc, #332]	@ (8006d00 <HAL_RCC_OscConfig+0x244>)
 8006bb4:	681b      	ldr	r3, [r3, #0]
 8006bb6:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006bba:	2b00      	cmp	r3, #0
 8006bbc:	d0f0      	beq.n	8006ba0 <HAL_RCC_OscConfig+0xe4>
 8006bbe:	e014      	b.n	8006bea <HAL_RCC_OscConfig+0x12e>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8006bc0:	f7fc fade 	bl	8003180 <HAL_GetTick>
 8006bc4:	6278      	str	r0, [r7, #36]	@ 0x24

        /* Wait till HSE is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 8006bc6:	e008      	b.n	8006bda <HAL_RCC_OscConfig+0x11e>
        {
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8006bc8:	f7fc fada 	bl	8003180 <HAL_GetTick>
 8006bcc:	4602      	mov	r2, r0
 8006bce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006bd0:	1ad3      	subs	r3, r2, r3
 8006bd2:	2b64      	cmp	r3, #100	@ 0x64
 8006bd4:	d901      	bls.n	8006bda <HAL_RCC_OscConfig+0x11e>
          {
            return HAL_TIMEOUT;
 8006bd6:	2303      	movs	r3, #3
 8006bd8:	e342      	b.n	8007260 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 8006bda:	4b49      	ldr	r3, [pc, #292]	@ (8006d00 <HAL_RCC_OscConfig+0x244>)
 8006bdc:	681b      	ldr	r3, [r3, #0]
 8006bde:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8006be2:	2b00      	cmp	r3, #0
 8006be4:	d1f0      	bne.n	8006bc8 <HAL_RCC_OscConfig+0x10c>
 8006be6:	e000      	b.n	8006bea <HAL_RCC_OscConfig+0x12e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8006be8:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8006bea:	687b      	ldr	r3, [r7, #4]
 8006bec:	681b      	ldr	r3, [r3, #0]
 8006bee:	f003 0302 	and.w	r3, r3, #2
 8006bf2:	2b00      	cmp	r3, #0
 8006bf4:	f000 808c 	beq.w	8006d10 <HAL_RCC_OscConfig+0x254>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_HSICALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* When the HSI is used as system clock it will not be disabled */
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006bf8:	4b41      	ldr	r3, [pc, #260]	@ (8006d00 <HAL_RCC_OscConfig+0x244>)
 8006bfa:	691b      	ldr	r3, [r3, #16]
 8006bfc:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8006c00:	623b      	str	r3, [r7, #32]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 8006c02:	4b3f      	ldr	r3, [pc, #252]	@ (8006d00 <HAL_RCC_OscConfig+0x244>)
 8006c04:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006c06:	61fb      	str	r3, [r7, #28]
    if ((temp_sysclksrc == RCC_CFGR_SWS_HSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_HSI)))
 8006c08:	6a3b      	ldr	r3, [r7, #32]
 8006c0a:	2b00      	cmp	r3, #0
 8006c0c:	d007      	beq.n	8006c1e <HAL_RCC_OscConfig+0x162>
 8006c0e:	6a3b      	ldr	r3, [r7, #32]
 8006c10:	2b18      	cmp	r3, #24
 8006c12:	d137      	bne.n	8006c84 <HAL_RCC_OscConfig+0x1c8>
 8006c14:	69fb      	ldr	r3, [r7, #28]
 8006c16:	f003 0303 	and.w	r3, r3, #3
 8006c1a:	2b00      	cmp	r3, #0
 8006c1c:	d132      	bne.n	8006c84 <HAL_RCC_OscConfig+0x1c8>
    {
      /* When HSI is used as system clock it will not be disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 8006c1e:	4b38      	ldr	r3, [pc, #224]	@ (8006d00 <HAL_RCC_OscConfig+0x244>)
 8006c20:	681b      	ldr	r3, [r3, #0]
 8006c22:	f003 0304 	and.w	r3, r3, #4
 8006c26:	2b00      	cmp	r3, #0
 8006c28:	d005      	beq.n	8006c36 <HAL_RCC_OscConfig+0x17a>
 8006c2a:	687b      	ldr	r3, [r7, #4]
 8006c2c:	68db      	ldr	r3, [r3, #12]
 8006c2e:	2b00      	cmp	r3, #0
 8006c30:	d101      	bne.n	8006c36 <HAL_RCC_OscConfig+0x17a>
      {
        return HAL_ERROR;
 8006c32:	2301      	movs	r3, #1
 8006c34:	e314      	b.n	8007260 <HAL_RCC_OscConfig+0x7a4>
      }
      /* Otherwise, only HSI division and calibration are allowed */
      else
      {
        /* Enable the Internal High Speed oscillator (HSI, HSIDIV2, HSIDIV4, or HSIDIV8) */
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 8006c36:	4b32      	ldr	r3, [pc, #200]	@ (8006d00 <HAL_RCC_OscConfig+0x244>)
 8006c38:	681b      	ldr	r3, [r3, #0]
 8006c3a:	f023 0219 	bic.w	r2, r3, #25
 8006c3e:	687b      	ldr	r3, [r7, #4]
 8006c40:	68db      	ldr	r3, [r3, #12]
 8006c42:	492f      	ldr	r1, [pc, #188]	@ (8006d00 <HAL_RCC_OscConfig+0x244>)
 8006c44:	4313      	orrs	r3, r2
 8006c46:	600b      	str	r3, [r1, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8006c48:	f7fc fa9a 	bl	8003180 <HAL_GetTick>
 8006c4c:	6278      	str	r0, [r7, #36]	@ 0x24

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8006c4e:	e008      	b.n	8006c62 <HAL_RCC_OscConfig+0x1a6>
        {
          if ((uint32_t)(HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006c50:	f7fc fa96 	bl	8003180 <HAL_GetTick>
 8006c54:	4602      	mov	r2, r0
 8006c56:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006c58:	1ad3      	subs	r3, r2, r3
 8006c5a:	2b02      	cmp	r3, #2
 8006c5c:	d901      	bls.n	8006c62 <HAL_RCC_OscConfig+0x1a6>
          {
            return HAL_TIMEOUT;
 8006c5e:	2303      	movs	r3, #3
 8006c60:	e2fe      	b.n	8007260 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8006c62:	4b27      	ldr	r3, [pc, #156]	@ (8006d00 <HAL_RCC_OscConfig+0x244>)
 8006c64:	681b      	ldr	r3, [r3, #0]
 8006c66:	f003 0304 	and.w	r3, r3, #4
 8006c6a:	2b00      	cmp	r3, #0
 8006c6c:	d0f0      	beq.n	8006c50 <HAL_RCC_OscConfig+0x194>
          }
        }
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006c6e:	4b24      	ldr	r3, [pc, #144]	@ (8006d00 <HAL_RCC_OscConfig+0x244>)
 8006c70:	685b      	ldr	r3, [r3, #4]
 8006c72:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 8006c76:	687b      	ldr	r3, [r7, #4]
 8006c78:	691b      	ldr	r3, [r3, #16]
 8006c7a:	061b      	lsls	r3, r3, #24
 8006c7c:	4920      	ldr	r1, [pc, #128]	@ (8006d00 <HAL_RCC_OscConfig+0x244>)
 8006c7e:	4313      	orrs	r3, r2
 8006c80:	604b      	str	r3, [r1, #4]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 8006c82:	e045      	b.n	8006d10 <HAL_RCC_OscConfig+0x254>
    }

    else
    {
      /* Check the HSI State */
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8006c84:	687b      	ldr	r3, [r7, #4]
 8006c86:	68db      	ldr	r3, [r3, #12]
 8006c88:	2b00      	cmp	r3, #0
 8006c8a:	d026      	beq.n	8006cda <HAL_RCC_OscConfig+0x21e>
      {
        /* Enable the Internal High Speed oscillator (HSI, HSIDIV2,HSIDIV4, or HSIDIV8) */
        __HAL_RCC_HSI_CONFIG(RCC_OscInitStruct->HSIState);
 8006c8c:	4b1c      	ldr	r3, [pc, #112]	@ (8006d00 <HAL_RCC_OscConfig+0x244>)
 8006c8e:	681b      	ldr	r3, [r3, #0]
 8006c90:	f023 0219 	bic.w	r2, r3, #25
 8006c94:	687b      	ldr	r3, [r7, #4]
 8006c96:	68db      	ldr	r3, [r3, #12]
 8006c98:	4919      	ldr	r1, [pc, #100]	@ (8006d00 <HAL_RCC_OscConfig+0x244>)
 8006c9a:	4313      	orrs	r3, r2
 8006c9c:	600b      	str	r3, [r1, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8006c9e:	f7fc fa6f 	bl	8003180 <HAL_GetTick>
 8006ca2:	6278      	str	r0, [r7, #36]	@ 0x24

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8006ca4:	e008      	b.n	8006cb8 <HAL_RCC_OscConfig+0x1fc>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006ca6:	f7fc fa6b 	bl	8003180 <HAL_GetTick>
 8006caa:	4602      	mov	r2, r0
 8006cac:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006cae:	1ad3      	subs	r3, r2, r3
 8006cb0:	2b02      	cmp	r3, #2
 8006cb2:	d901      	bls.n	8006cb8 <HAL_RCC_OscConfig+0x1fc>
          {
            return HAL_TIMEOUT;
 8006cb4:	2303      	movs	r3, #3
 8006cb6:	e2d3      	b.n	8007260 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8006cb8:	4b11      	ldr	r3, [pc, #68]	@ (8006d00 <HAL_RCC_OscConfig+0x244>)
 8006cba:	681b      	ldr	r3, [r3, #0]
 8006cbc:	f003 0304 	and.w	r3, r3, #4
 8006cc0:	2b00      	cmp	r3, #0
 8006cc2:	d0f0      	beq.n	8006ca6 <HAL_RCC_OscConfig+0x1ea>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8006cc4:	4b0e      	ldr	r3, [pc, #56]	@ (8006d00 <HAL_RCC_OscConfig+0x244>)
 8006cc6:	685b      	ldr	r3, [r3, #4]
 8006cc8:	f023 42fe 	bic.w	r2, r3, #2130706432	@ 0x7f000000
 8006ccc:	687b      	ldr	r3, [r7, #4]
 8006cce:	691b      	ldr	r3, [r3, #16]
 8006cd0:	061b      	lsls	r3, r3, #24
 8006cd2:	490b      	ldr	r1, [pc, #44]	@ (8006d00 <HAL_RCC_OscConfig+0x244>)
 8006cd4:	4313      	orrs	r3, r2
 8006cd6:	604b      	str	r3, [r1, #4]
 8006cd8:	e01a      	b.n	8006d10 <HAL_RCC_OscConfig+0x254>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8006cda:	4b09      	ldr	r3, [pc, #36]	@ (8006d00 <HAL_RCC_OscConfig+0x244>)
 8006cdc:	681b      	ldr	r3, [r3, #0]
 8006cde:	4a08      	ldr	r2, [pc, #32]	@ (8006d00 <HAL_RCC_OscConfig+0x244>)
 8006ce0:	f023 0301 	bic.w	r3, r3, #1
 8006ce4:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8006ce6:	f7fc fa4b 	bl	8003180 <HAL_GetTick>
 8006cea:	6278      	str	r0, [r7, #36]	@ 0x24

        /* Wait till HSI is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 8006cec:	e00a      	b.n	8006d04 <HAL_RCC_OscConfig+0x248>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8006cee:	f7fc fa47 	bl	8003180 <HAL_GetTick>
 8006cf2:	4602      	mov	r2, r0
 8006cf4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006cf6:	1ad3      	subs	r3, r2, r3
 8006cf8:	2b02      	cmp	r3, #2
 8006cfa:	d903      	bls.n	8006d04 <HAL_RCC_OscConfig+0x248>
          {
            return HAL_TIMEOUT;
 8006cfc:	2303      	movs	r3, #3
 8006cfe:	e2af      	b.n	8007260 <HAL_RCC_OscConfig+0x7a4>
 8006d00:	58024400 	.word	0x58024400
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 8006d04:	4b96      	ldr	r3, [pc, #600]	@ (8006f60 <HAL_RCC_OscConfig+0x4a4>)
 8006d06:	681b      	ldr	r3, [r3, #0]
 8006d08:	f003 0304 	and.w	r3, r3, #4
 8006d0c:	2b00      	cmp	r3, #0
 8006d0e:	d1ee      	bne.n	8006cee <HAL_RCC_OscConfig+0x232>
        }
      }
    }
  }
  /*----------------------------- CSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_CSI) == RCC_OSCILLATORTYPE_CSI)
 8006d10:	687b      	ldr	r3, [r7, #4]
 8006d12:	681b      	ldr	r3, [r3, #0]
 8006d14:	f003 0310 	and.w	r3, r3, #16
 8006d18:	2b00      	cmp	r3, #0
 8006d1a:	d06a      	beq.n	8006df2 <HAL_RCC_OscConfig+0x336>
    /* Check the parameters */
    assert_param(IS_RCC_CSI(RCC_OscInitStruct->CSIState));
    assert_param(IS_RCC_CSICALIBRATION_VALUE(RCC_OscInitStruct->CSICalibrationValue));

    /* When the CSI is used as system clock it will not disabled */
    const uint32_t temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 8006d1c:	4b90      	ldr	r3, [pc, #576]	@ (8006f60 <HAL_RCC_OscConfig+0x4a4>)
 8006d1e:	691b      	ldr	r3, [r3, #16]
 8006d20:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8006d24:	61bb      	str	r3, [r7, #24]
    const uint32_t temp_pllckselr = RCC->PLLCKSELR;
 8006d26:	4b8e      	ldr	r3, [pc, #568]	@ (8006f60 <HAL_RCC_OscConfig+0x4a4>)
 8006d28:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006d2a:	617b      	str	r3, [r7, #20]
    if ((temp_sysclksrc == RCC_CFGR_SWS_CSI) || ((temp_sysclksrc == RCC_CFGR_SWS_PLL1) && ((temp_pllckselr & RCC_PLLCKSELR_PLLSRC) == RCC_PLLCKSELR_PLLSRC_CSI)))
 8006d2c:	69bb      	ldr	r3, [r7, #24]
 8006d2e:	2b08      	cmp	r3, #8
 8006d30:	d007      	beq.n	8006d42 <HAL_RCC_OscConfig+0x286>
 8006d32:	69bb      	ldr	r3, [r7, #24]
 8006d34:	2b18      	cmp	r3, #24
 8006d36:	d11b      	bne.n	8006d70 <HAL_RCC_OscConfig+0x2b4>
 8006d38:	697b      	ldr	r3, [r7, #20]
 8006d3a:	f003 0303 	and.w	r3, r3, #3
 8006d3e:	2b01      	cmp	r3, #1
 8006d40:	d116      	bne.n	8006d70 <HAL_RCC_OscConfig+0x2b4>
    {
      /* When CSI is used as system clock it will not disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
 8006d42:	4b87      	ldr	r3, [pc, #540]	@ (8006f60 <HAL_RCC_OscConfig+0x4a4>)
 8006d44:	681b      	ldr	r3, [r3, #0]
 8006d46:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006d4a:	2b00      	cmp	r3, #0
 8006d4c:	d005      	beq.n	8006d5a <HAL_RCC_OscConfig+0x29e>
 8006d4e:	687b      	ldr	r3, [r7, #4]
 8006d50:	69db      	ldr	r3, [r3, #28]
 8006d52:	2b80      	cmp	r3, #128	@ 0x80
 8006d54:	d001      	beq.n	8006d5a <HAL_RCC_OscConfig+0x29e>
      {
        return HAL_ERROR;
 8006d56:	2301      	movs	r3, #1
 8006d58:	e282      	b.n	8007260 <HAL_RCC_OscConfig+0x7a4>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (CSI) calibration value.*/
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 8006d5a:	4b81      	ldr	r3, [pc, #516]	@ (8006f60 <HAL_RCC_OscConfig+0x4a4>)
 8006d5c:	68db      	ldr	r3, [r3, #12]
 8006d5e:	f023 527c 	bic.w	r2, r3, #1056964608	@ 0x3f000000
 8006d62:	687b      	ldr	r3, [r7, #4]
 8006d64:	6a1b      	ldr	r3, [r3, #32]
 8006d66:	061b      	lsls	r3, r3, #24
 8006d68:	497d      	ldr	r1, [pc, #500]	@ (8006f60 <HAL_RCC_OscConfig+0x4a4>)
 8006d6a:	4313      	orrs	r3, r2
 8006d6c:	60cb      	str	r3, [r1, #12]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U) && (RCC_OscInitStruct->CSIState != RCC_CSI_ON))
 8006d6e:	e040      	b.n	8006df2 <HAL_RCC_OscConfig+0x336>
      }
    }
    else
    {
      /* Check the CSI State */
      if ((RCC_OscInitStruct->CSIState) != RCC_CSI_OFF)
 8006d70:	687b      	ldr	r3, [r7, #4]
 8006d72:	69db      	ldr	r3, [r3, #28]
 8006d74:	2b00      	cmp	r3, #0
 8006d76:	d023      	beq.n	8006dc0 <HAL_RCC_OscConfig+0x304>
      {
        /* Enable the Internal High Speed oscillator (CSI). */
        __HAL_RCC_CSI_ENABLE();
 8006d78:	4b79      	ldr	r3, [pc, #484]	@ (8006f60 <HAL_RCC_OscConfig+0x4a4>)
 8006d7a:	681b      	ldr	r3, [r3, #0]
 8006d7c:	4a78      	ldr	r2, [pc, #480]	@ (8006f60 <HAL_RCC_OscConfig+0x4a4>)
 8006d7e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8006d82:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8006d84:	f7fc f9fc 	bl	8003180 <HAL_GetTick>
 8006d88:	6278      	str	r0, [r7, #36]	@ 0x24

        /* Wait till CSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 8006d8a:	e008      	b.n	8006d9e <HAL_RCC_OscConfig+0x2e2>
        {
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
 8006d8c:	f7fc f9f8 	bl	8003180 <HAL_GetTick>
 8006d90:	4602      	mov	r2, r0
 8006d92:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006d94:	1ad3      	subs	r3, r2, r3
 8006d96:	2b02      	cmp	r3, #2
 8006d98:	d901      	bls.n	8006d9e <HAL_RCC_OscConfig+0x2e2>
          {
            return HAL_TIMEOUT;
 8006d9a:	2303      	movs	r3, #3
 8006d9c:	e260      	b.n	8007260 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 8006d9e:	4b70      	ldr	r3, [pc, #448]	@ (8006f60 <HAL_RCC_OscConfig+0x4a4>)
 8006da0:	681b      	ldr	r3, [r3, #0]
 8006da2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006da6:	2b00      	cmp	r3, #0
 8006da8:	d0f0      	beq.n	8006d8c <HAL_RCC_OscConfig+0x2d0>
          }
        }

        /* Adjusts the Internal High Speed oscillator (CSI) calibration value.*/
        __HAL_RCC_CSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->CSICalibrationValue);
 8006daa:	4b6d      	ldr	r3, [pc, #436]	@ (8006f60 <HAL_RCC_OscConfig+0x4a4>)
 8006dac:	68db      	ldr	r3, [r3, #12]
 8006dae:	f023 527c 	bic.w	r2, r3, #1056964608	@ 0x3f000000
 8006db2:	687b      	ldr	r3, [r7, #4]
 8006db4:	6a1b      	ldr	r3, [r3, #32]
 8006db6:	061b      	lsls	r3, r3, #24
 8006db8:	4969      	ldr	r1, [pc, #420]	@ (8006f60 <HAL_RCC_OscConfig+0x4a4>)
 8006dba:	4313      	orrs	r3, r2
 8006dbc:	60cb      	str	r3, [r1, #12]
 8006dbe:	e018      	b.n	8006df2 <HAL_RCC_OscConfig+0x336>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (CSI). */
        __HAL_RCC_CSI_DISABLE();
 8006dc0:	4b67      	ldr	r3, [pc, #412]	@ (8006f60 <HAL_RCC_OscConfig+0x4a4>)
 8006dc2:	681b      	ldr	r3, [r3, #0]
 8006dc4:	4a66      	ldr	r2, [pc, #408]	@ (8006f60 <HAL_RCC_OscConfig+0x4a4>)
 8006dc6:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8006dca:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8006dcc:	f7fc f9d8 	bl	8003180 <HAL_GetTick>
 8006dd0:	6278      	str	r0, [r7, #36]	@ 0x24

        /* Wait till CSI is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
 8006dd2:	e008      	b.n	8006de6 <HAL_RCC_OscConfig+0x32a>
        {
          if ((HAL_GetTick() - tickstart) > CSI_TIMEOUT_VALUE)
 8006dd4:	f7fc f9d4 	bl	8003180 <HAL_GetTick>
 8006dd8:	4602      	mov	r2, r0
 8006dda:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006ddc:	1ad3      	subs	r3, r2, r3
 8006dde:	2b02      	cmp	r3, #2
 8006de0:	d901      	bls.n	8006de6 <HAL_RCC_OscConfig+0x32a>
          {
            return HAL_TIMEOUT;
 8006de2:	2303      	movs	r3, #3
 8006de4:	e23c      	b.n	8007260 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) != 0U)
 8006de6:	4b5e      	ldr	r3, [pc, #376]	@ (8006f60 <HAL_RCC_OscConfig+0x4a4>)
 8006de8:	681b      	ldr	r3, [r3, #0]
 8006dea:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006dee:	2b00      	cmp	r3, #0
 8006df0:	d1f0      	bne.n	8006dd4 <HAL_RCC_OscConfig+0x318>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8006df2:	687b      	ldr	r3, [r7, #4]
 8006df4:	681b      	ldr	r3, [r3, #0]
 8006df6:	f003 0308 	and.w	r3, r3, #8
 8006dfa:	2b00      	cmp	r3, #0
 8006dfc:	d036      	beq.n	8006e6c <HAL_RCC_OscConfig+0x3b0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 8006dfe:	687b      	ldr	r3, [r7, #4]
 8006e00:	695b      	ldr	r3, [r3, #20]
 8006e02:	2b00      	cmp	r3, #0
 8006e04:	d019      	beq.n	8006e3a <HAL_RCC_OscConfig+0x37e>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8006e06:	4b56      	ldr	r3, [pc, #344]	@ (8006f60 <HAL_RCC_OscConfig+0x4a4>)
 8006e08:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006e0a:	4a55      	ldr	r2, [pc, #340]	@ (8006f60 <HAL_RCC_OscConfig+0x4a4>)
 8006e0c:	f043 0301 	orr.w	r3, r3, #1
 8006e10:	6753      	str	r3, [r2, #116]	@ 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8006e12:	f7fc f9b5 	bl	8003180 <HAL_GetTick>
 8006e16:	6278      	str	r0, [r7, #36]	@ 0x24

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 8006e18:	e008      	b.n	8006e2c <HAL_RCC_OscConfig+0x370>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8006e1a:	f7fc f9b1 	bl	8003180 <HAL_GetTick>
 8006e1e:	4602      	mov	r2, r0
 8006e20:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006e22:	1ad3      	subs	r3, r2, r3
 8006e24:	2b02      	cmp	r3, #2
 8006e26:	d901      	bls.n	8006e2c <HAL_RCC_OscConfig+0x370>
        {
          return HAL_TIMEOUT;
 8006e28:	2303      	movs	r3, #3
 8006e2a:	e219      	b.n	8007260 <HAL_RCC_OscConfig+0x7a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 8006e2c:	4b4c      	ldr	r3, [pc, #304]	@ (8006f60 <HAL_RCC_OscConfig+0x4a4>)
 8006e2e:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006e30:	f003 0302 	and.w	r3, r3, #2
 8006e34:	2b00      	cmp	r3, #0
 8006e36:	d0f0      	beq.n	8006e1a <HAL_RCC_OscConfig+0x35e>
 8006e38:	e018      	b.n	8006e6c <HAL_RCC_OscConfig+0x3b0>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8006e3a:	4b49      	ldr	r3, [pc, #292]	@ (8006f60 <HAL_RCC_OscConfig+0x4a4>)
 8006e3c:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006e3e:	4a48      	ldr	r2, [pc, #288]	@ (8006f60 <HAL_RCC_OscConfig+0x4a4>)
 8006e40:	f023 0301 	bic.w	r3, r3, #1
 8006e44:	6753      	str	r3, [r2, #116]	@ 0x74

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8006e46:	f7fc f99b 	bl	8003180 <HAL_GetTick>
 8006e4a:	6278      	str	r0, [r7, #36]	@ 0x24

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 8006e4c:	e008      	b.n	8006e60 <HAL_RCC_OscConfig+0x3a4>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8006e4e:	f7fc f997 	bl	8003180 <HAL_GetTick>
 8006e52:	4602      	mov	r2, r0
 8006e54:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006e56:	1ad3      	subs	r3, r2, r3
 8006e58:	2b02      	cmp	r3, #2
 8006e5a:	d901      	bls.n	8006e60 <HAL_RCC_OscConfig+0x3a4>
        {
          return HAL_TIMEOUT;
 8006e5c:	2303      	movs	r3, #3
 8006e5e:	e1ff      	b.n	8007260 <HAL_RCC_OscConfig+0x7a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 8006e60:	4b3f      	ldr	r3, [pc, #252]	@ (8006f60 <HAL_RCC_OscConfig+0x4a4>)
 8006e62:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8006e64:	f003 0302 	and.w	r3, r3, #2
 8006e68:	2b00      	cmp	r3, #0
 8006e6a:	d1f0      	bne.n	8006e4e <HAL_RCC_OscConfig+0x392>
      }
    }
  }

  /*------------------------------ HSI48 Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 8006e6c:	687b      	ldr	r3, [r7, #4]
 8006e6e:	681b      	ldr	r3, [r3, #0]
 8006e70:	f003 0320 	and.w	r3, r3, #32
 8006e74:	2b00      	cmp	r3, #0
 8006e76:	d036      	beq.n	8006ee6 <HAL_RCC_OscConfig+0x42a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));

    /* Check the HSI48 State */
    if ((RCC_OscInitStruct->HSI48State) != RCC_HSI48_OFF)
 8006e78:	687b      	ldr	r3, [r7, #4]
 8006e7a:	699b      	ldr	r3, [r3, #24]
 8006e7c:	2b00      	cmp	r3, #0
 8006e7e:	d019      	beq.n	8006eb4 <HAL_RCC_OscConfig+0x3f8>
    {
      /* Enable the Internal Low Speed oscillator (HSI48). */
      __HAL_RCC_HSI48_ENABLE();
 8006e80:	4b37      	ldr	r3, [pc, #220]	@ (8006f60 <HAL_RCC_OscConfig+0x4a4>)
 8006e82:	681b      	ldr	r3, [r3, #0]
 8006e84:	4a36      	ldr	r2, [pc, #216]	@ (8006f60 <HAL_RCC_OscConfig+0x4a4>)
 8006e86:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8006e8a:	6013      	str	r3, [r2, #0]

      /* Get time-out */
      tickstart = HAL_GetTick();
 8006e8c:	f7fc f978 	bl	8003180 <HAL_GetTick>
 8006e90:	6278      	str	r0, [r7, #36]	@ 0x24

      /* Wait till HSI48 is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 8006e92:	e008      	b.n	8006ea6 <HAL_RCC_OscConfig+0x3ea>
      {
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8006e94:	f7fc f974 	bl	8003180 <HAL_GetTick>
 8006e98:	4602      	mov	r2, r0
 8006e9a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006e9c:	1ad3      	subs	r3, r2, r3
 8006e9e:	2b02      	cmp	r3, #2
 8006ea0:	d901      	bls.n	8006ea6 <HAL_RCC_OscConfig+0x3ea>
        {
          return HAL_TIMEOUT;
 8006ea2:	2303      	movs	r3, #3
 8006ea4:	e1dc      	b.n	8007260 <HAL_RCC_OscConfig+0x7a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 8006ea6:	4b2e      	ldr	r3, [pc, #184]	@ (8006f60 <HAL_RCC_OscConfig+0x4a4>)
 8006ea8:	681b      	ldr	r3, [r3, #0]
 8006eaa:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8006eae:	2b00      	cmp	r3, #0
 8006eb0:	d0f0      	beq.n	8006e94 <HAL_RCC_OscConfig+0x3d8>
 8006eb2:	e018      	b.n	8006ee6 <HAL_RCC_OscConfig+0x42a>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (HSI48). */
      __HAL_RCC_HSI48_DISABLE();
 8006eb4:	4b2a      	ldr	r3, [pc, #168]	@ (8006f60 <HAL_RCC_OscConfig+0x4a4>)
 8006eb6:	681b      	ldr	r3, [r3, #0]
 8006eb8:	4a29      	ldr	r2, [pc, #164]	@ (8006f60 <HAL_RCC_OscConfig+0x4a4>)
 8006eba:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8006ebe:	6013      	str	r3, [r2, #0]

      /* Get time-out */
      tickstart = HAL_GetTick();
 8006ec0:	f7fc f95e 	bl	8003180 <HAL_GetTick>
 8006ec4:	6278      	str	r0, [r7, #36]	@ 0x24

      /* Wait till HSI48 is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 8006ec6:	e008      	b.n	8006eda <HAL_RCC_OscConfig+0x41e>
      {
        if ((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8006ec8:	f7fc f95a 	bl	8003180 <HAL_GetTick>
 8006ecc:	4602      	mov	r2, r0
 8006ece:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006ed0:	1ad3      	subs	r3, r2, r3
 8006ed2:	2b02      	cmp	r3, #2
 8006ed4:	d901      	bls.n	8006eda <HAL_RCC_OscConfig+0x41e>
        {
          return HAL_TIMEOUT;
 8006ed6:	2303      	movs	r3, #3
 8006ed8:	e1c2      	b.n	8007260 <HAL_RCC_OscConfig+0x7a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 8006eda:	4b21      	ldr	r3, [pc, #132]	@ (8006f60 <HAL_RCC_OscConfig+0x4a4>)
 8006edc:	681b      	ldr	r3, [r3, #0]
 8006ede:	f403 5300 	and.w	r3, r3, #8192	@ 0x2000
 8006ee2:	2b00      	cmp	r3, #0
 8006ee4:	d1f0      	bne.n	8006ec8 <HAL_RCC_OscConfig+0x40c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8006ee6:	687b      	ldr	r3, [r7, #4]
 8006ee8:	681b      	ldr	r3, [r3, #0]
 8006eea:	f003 0304 	and.w	r3, r3, #4
 8006eee:	2b00      	cmp	r3, #0
 8006ef0:	f000 8086 	beq.w	8007000 <HAL_RCC_OscConfig+0x544>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Enable write access to Backup domain */
    PWR->CR1 |= PWR_CR1_DBP;
 8006ef4:	4b1b      	ldr	r3, [pc, #108]	@ (8006f64 <HAL_RCC_OscConfig+0x4a8>)
 8006ef6:	681b      	ldr	r3, [r3, #0]
 8006ef8:	4a1a      	ldr	r2, [pc, #104]	@ (8006f64 <HAL_RCC_OscConfig+0x4a8>)
 8006efa:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8006efe:	6013      	str	r3, [r2, #0]

    /* Wait for Backup domain Write protection disable */
    tickstart = HAL_GetTick();
 8006f00:	f7fc f93e 	bl	8003180 <HAL_GetTick>
 8006f04:	6278      	str	r0, [r7, #36]	@ 0x24

    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 8006f06:	e008      	b.n	8006f1a <HAL_RCC_OscConfig+0x45e>
    {
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8006f08:	f7fc f93a 	bl	8003180 <HAL_GetTick>
 8006f0c:	4602      	mov	r2, r0
 8006f0e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006f10:	1ad3      	subs	r3, r2, r3
 8006f12:	2b64      	cmp	r3, #100	@ 0x64
 8006f14:	d901      	bls.n	8006f1a <HAL_RCC_OscConfig+0x45e>
      {
        return HAL_TIMEOUT;
 8006f16:	2303      	movs	r3, #3
 8006f18:	e1a2      	b.n	8007260 <HAL_RCC_OscConfig+0x7a4>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 8006f1a:	4b12      	ldr	r3, [pc, #72]	@ (8006f64 <HAL_RCC_OscConfig+0x4a8>)
 8006f1c:	681b      	ldr	r3, [r3, #0]
 8006f1e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006f22:	2b00      	cmp	r3, #0
 8006f24:	d0f0      	beq.n	8006f08 <HAL_RCC_OscConfig+0x44c>
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8006f26:	687b      	ldr	r3, [r7, #4]
 8006f28:	689b      	ldr	r3, [r3, #8]
 8006f2a:	2b01      	cmp	r3, #1
 8006f2c:	d106      	bne.n	8006f3c <HAL_RCC_OscConfig+0x480>
 8006f2e:	4b0c      	ldr	r3, [pc, #48]	@ (8006f60 <HAL_RCC_OscConfig+0x4a4>)
 8006f30:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006f32:	4a0b      	ldr	r2, [pc, #44]	@ (8006f60 <HAL_RCC_OscConfig+0x4a4>)
 8006f34:	f043 0301 	orr.w	r3, r3, #1
 8006f38:	6713      	str	r3, [r2, #112]	@ 0x70
 8006f3a:	e032      	b.n	8006fa2 <HAL_RCC_OscConfig+0x4e6>
 8006f3c:	687b      	ldr	r3, [r7, #4]
 8006f3e:	689b      	ldr	r3, [r3, #8]
 8006f40:	2b00      	cmp	r3, #0
 8006f42:	d111      	bne.n	8006f68 <HAL_RCC_OscConfig+0x4ac>
 8006f44:	4b06      	ldr	r3, [pc, #24]	@ (8006f60 <HAL_RCC_OscConfig+0x4a4>)
 8006f46:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006f48:	4a05      	ldr	r2, [pc, #20]	@ (8006f60 <HAL_RCC_OscConfig+0x4a4>)
 8006f4a:	f023 0301 	bic.w	r3, r3, #1
 8006f4e:	6713      	str	r3, [r2, #112]	@ 0x70
 8006f50:	4b03      	ldr	r3, [pc, #12]	@ (8006f60 <HAL_RCC_OscConfig+0x4a4>)
 8006f52:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006f54:	4a02      	ldr	r2, [pc, #8]	@ (8006f60 <HAL_RCC_OscConfig+0x4a4>)
 8006f56:	f023 0304 	bic.w	r3, r3, #4
 8006f5a:	6713      	str	r3, [r2, #112]	@ 0x70
 8006f5c:	e021      	b.n	8006fa2 <HAL_RCC_OscConfig+0x4e6>
 8006f5e:	bf00      	nop
 8006f60:	58024400 	.word	0x58024400
 8006f64:	58024800 	.word	0x58024800
 8006f68:	687b      	ldr	r3, [r7, #4]
 8006f6a:	689b      	ldr	r3, [r3, #8]
 8006f6c:	2b05      	cmp	r3, #5
 8006f6e:	d10c      	bne.n	8006f8a <HAL_RCC_OscConfig+0x4ce>
 8006f70:	4b83      	ldr	r3, [pc, #524]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 8006f72:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006f74:	4a82      	ldr	r2, [pc, #520]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 8006f76:	f043 0304 	orr.w	r3, r3, #4
 8006f7a:	6713      	str	r3, [r2, #112]	@ 0x70
 8006f7c:	4b80      	ldr	r3, [pc, #512]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 8006f7e:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006f80:	4a7f      	ldr	r2, [pc, #508]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 8006f82:	f043 0301 	orr.w	r3, r3, #1
 8006f86:	6713      	str	r3, [r2, #112]	@ 0x70
 8006f88:	e00b      	b.n	8006fa2 <HAL_RCC_OscConfig+0x4e6>
 8006f8a:	4b7d      	ldr	r3, [pc, #500]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 8006f8c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006f8e:	4a7c      	ldr	r2, [pc, #496]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 8006f90:	f023 0301 	bic.w	r3, r3, #1
 8006f94:	6713      	str	r3, [r2, #112]	@ 0x70
 8006f96:	4b7a      	ldr	r3, [pc, #488]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 8006f98:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006f9a:	4a79      	ldr	r2, [pc, #484]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 8006f9c:	f023 0304 	bic.w	r3, r3, #4
 8006fa0:	6713      	str	r3, [r2, #112]	@ 0x70
    /* Check the LSE State */
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8006fa2:	687b      	ldr	r3, [r7, #4]
 8006fa4:	689b      	ldr	r3, [r3, #8]
 8006fa6:	2b00      	cmp	r3, #0
 8006fa8:	d015      	beq.n	8006fd6 <HAL_RCC_OscConfig+0x51a>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8006faa:	f7fc f8e9 	bl	8003180 <HAL_GetTick>
 8006fae:	6278      	str	r0, [r7, #36]	@ 0x24

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8006fb0:	e00a      	b.n	8006fc8 <HAL_RCC_OscConfig+0x50c>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006fb2:	f7fc f8e5 	bl	8003180 <HAL_GetTick>
 8006fb6:	4602      	mov	r2, r0
 8006fb8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006fba:	1ad3      	subs	r3, r2, r3
 8006fbc:	f241 3288 	movw	r2, #5000	@ 0x1388
 8006fc0:	4293      	cmp	r3, r2
 8006fc2:	d901      	bls.n	8006fc8 <HAL_RCC_OscConfig+0x50c>
        {
          return HAL_TIMEOUT;
 8006fc4:	2303      	movs	r3, #3
 8006fc6:	e14b      	b.n	8007260 <HAL_RCC_OscConfig+0x7a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8006fc8:	4b6d      	ldr	r3, [pc, #436]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 8006fca:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006fcc:	f003 0302 	and.w	r3, r3, #2
 8006fd0:	2b00      	cmp	r3, #0
 8006fd2:	d0ee      	beq.n	8006fb2 <HAL_RCC_OscConfig+0x4f6>
 8006fd4:	e014      	b.n	8007000 <HAL_RCC_OscConfig+0x544>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8006fd6:	f7fc f8d3 	bl	8003180 <HAL_GetTick>
 8006fda:	6278      	str	r0, [r7, #36]	@ 0x24

      /* Wait till LSE is disabled */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 8006fdc:	e00a      	b.n	8006ff4 <HAL_RCC_OscConfig+0x538>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8006fde:	f7fc f8cf 	bl	8003180 <HAL_GetTick>
 8006fe2:	4602      	mov	r2, r0
 8006fe4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8006fe6:	1ad3      	subs	r3, r2, r3
 8006fe8:	f241 3288 	movw	r2, #5000	@ 0x1388
 8006fec:	4293      	cmp	r3, r2
 8006fee:	d901      	bls.n	8006ff4 <HAL_RCC_OscConfig+0x538>
        {
          return HAL_TIMEOUT;
 8006ff0:	2303      	movs	r3, #3
 8006ff2:	e135      	b.n	8007260 <HAL_RCC_OscConfig+0x7a4>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 8006ff4:	4b62      	ldr	r3, [pc, #392]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 8006ff6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8006ff8:	f003 0302 	and.w	r3, r3, #2
 8006ffc:	2b00      	cmp	r3, #0
 8006ffe:	d1ee      	bne.n	8006fde <HAL_RCC_OscConfig+0x522>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8007000:	687b      	ldr	r3, [r7, #4]
 8007002:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8007004:	2b00      	cmp	r3, #0
 8007006:	f000 812a 	beq.w	800725e <HAL_RCC_OscConfig+0x7a2>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL1)
 800700a:	4b5d      	ldr	r3, [pc, #372]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 800700c:	691b      	ldr	r3, [r3, #16]
 800700e:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8007012:	2b18      	cmp	r3, #24
 8007014:	f000 80ba 	beq.w	800718c <HAL_RCC_OscConfig+0x6d0>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8007018:	687b      	ldr	r3, [r7, #4]
 800701a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800701c:	2b02      	cmp	r3, #2
 800701e:	f040 8095 	bne.w	800714c <HAL_RCC_OscConfig+0x690>
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
        assert_param(IS_RCC_PLLFRACN_VALUE(RCC_OscInitStruct->PLL.PLLFRACN));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8007022:	4b57      	ldr	r3, [pc, #348]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 8007024:	681b      	ldr	r3, [r3, #0]
 8007026:	4a56      	ldr	r2, [pc, #344]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 8007028:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 800702c:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 800702e:	f7fc f8a7 	bl	8003180 <HAL_GetTick>
 8007032:	6278      	str	r0, [r7, #36]	@ 0x24

        /* Wait till PLL is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 8007034:	e008      	b.n	8007048 <HAL_RCC_OscConfig+0x58c>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8007036:	f7fc f8a3 	bl	8003180 <HAL_GetTick>
 800703a:	4602      	mov	r2, r0
 800703c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800703e:	1ad3      	subs	r3, r2, r3
 8007040:	2b02      	cmp	r3, #2
 8007042:	d901      	bls.n	8007048 <HAL_RCC_OscConfig+0x58c>
          {
            return HAL_TIMEOUT;
 8007044:	2303      	movs	r3, #3
 8007046:	e10b      	b.n	8007260 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 8007048:	4b4d      	ldr	r3, [pc, #308]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 800704a:	681b      	ldr	r3, [r3, #0]
 800704c:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8007050:	2b00      	cmp	r3, #0
 8007052:	d1f0      	bne.n	8007036 <HAL_RCC_OscConfig+0x57a>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8007054:	4b4a      	ldr	r3, [pc, #296]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 8007056:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 8007058:	4b4a      	ldr	r3, [pc, #296]	@ (8007184 <HAL_RCC_OscConfig+0x6c8>)
 800705a:	4013      	ands	r3, r2
 800705c:	687a      	ldr	r2, [r7, #4]
 800705e:	6a91      	ldr	r1, [r2, #40]	@ 0x28
 8007060:	687a      	ldr	r2, [r7, #4]
 8007062:	6ad2      	ldr	r2, [r2, #44]	@ 0x2c
 8007064:	0112      	lsls	r2, r2, #4
 8007066:	430a      	orrs	r2, r1
 8007068:	4945      	ldr	r1, [pc, #276]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 800706a:	4313      	orrs	r3, r2
 800706c:	628b      	str	r3, [r1, #40]	@ 0x28
 800706e:	687b      	ldr	r3, [r7, #4]
 8007070:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007072:	3b01      	subs	r3, #1
 8007074:	f3c3 0208 	ubfx	r2, r3, #0, #9
 8007078:	687b      	ldr	r3, [r7, #4]
 800707a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800707c:	3b01      	subs	r3, #1
 800707e:	025b      	lsls	r3, r3, #9
 8007080:	b29b      	uxth	r3, r3
 8007082:	431a      	orrs	r2, r3
 8007084:	687b      	ldr	r3, [r7, #4]
 8007086:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8007088:	3b01      	subs	r3, #1
 800708a:	041b      	lsls	r3, r3, #16
 800708c:	f403 03fe 	and.w	r3, r3, #8323072	@ 0x7f0000
 8007090:	431a      	orrs	r2, r3
 8007092:	687b      	ldr	r3, [r7, #4]
 8007094:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8007096:	3b01      	subs	r3, #1
 8007098:	061b      	lsls	r3, r3, #24
 800709a:	f003 43fe 	and.w	r3, r3, #2130706432	@ 0x7f000000
 800709e:	4938      	ldr	r1, [pc, #224]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 80070a0:	4313      	orrs	r3, r2
 80070a2:	630b      	str	r3, [r1, #48]	@ 0x30
                             RCC_OscInitStruct->PLL.PLLP,
                             RCC_OscInitStruct->PLL.PLLQ,
                             RCC_OscInitStruct->PLL.PLLR);

        /* Disable PLLFRACN . */
        __HAL_RCC_PLLFRACN_DISABLE();
 80070a4:	4b36      	ldr	r3, [pc, #216]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 80070a6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80070a8:	4a35      	ldr	r2, [pc, #212]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 80070aa:	f023 0301 	bic.w	r3, r3, #1
 80070ae:	62d3      	str	r3, [r2, #44]	@ 0x2c

        /* Configure PLL PLL1FRACN */
        __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
 80070b0:	4b33      	ldr	r3, [pc, #204]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 80070b2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80070b4:	4b34      	ldr	r3, [pc, #208]	@ (8007188 <HAL_RCC_OscConfig+0x6cc>)
 80070b6:	4013      	ands	r3, r2
 80070b8:	687a      	ldr	r2, [r7, #4]
 80070ba:	6c92      	ldr	r2, [r2, #72]	@ 0x48
 80070bc:	00d2      	lsls	r2, r2, #3
 80070be:	4930      	ldr	r1, [pc, #192]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 80070c0:	4313      	orrs	r3, r2
 80070c2:	634b      	str	r3, [r1, #52]	@ 0x34

        /* Select PLL1 input reference frequency range: VCI */
        __HAL_RCC_PLL_VCIRANGE(RCC_OscInitStruct->PLL.PLLRGE) ;
 80070c4:	4b2e      	ldr	r3, [pc, #184]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 80070c6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80070c8:	f023 020c 	bic.w	r2, r3, #12
 80070cc:	687b      	ldr	r3, [r7, #4]
 80070ce:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80070d0:	492b      	ldr	r1, [pc, #172]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 80070d2:	4313      	orrs	r3, r2
 80070d4:	62cb      	str	r3, [r1, #44]	@ 0x2c

        /* Select PLL1 output frequency range : VCO */
        __HAL_RCC_PLL_VCORANGE(RCC_OscInitStruct->PLL.PLLVCOSEL) ;
 80070d6:	4b2a      	ldr	r3, [pc, #168]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 80070d8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80070da:	f023 0202 	bic.w	r2, r3, #2
 80070de:	687b      	ldr	r3, [r7, #4]
 80070e0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80070e2:	4927      	ldr	r1, [pc, #156]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 80070e4:	4313      	orrs	r3, r2
 80070e6:	62cb      	str	r3, [r1, #44]	@ 0x2c

        /* Enable PLL System Clock output. */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVP);
 80070e8:	4b25      	ldr	r3, [pc, #148]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 80070ea:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80070ec:	4a24      	ldr	r2, [pc, #144]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 80070ee:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 80070f2:	62d3      	str	r3, [r2, #44]	@ 0x2c

        /* Enable PLL1Q Clock output. */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80070f4:	4b22      	ldr	r3, [pc, #136]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 80070f6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80070f8:	4a21      	ldr	r2, [pc, #132]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 80070fa:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80070fe:	62d3      	str	r3, [r2, #44]	@ 0x2c

        /* Enable PLL1R  Clock output. */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVR);
 8007100:	4b1f      	ldr	r3, [pc, #124]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 8007102:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007104:	4a1e      	ldr	r2, [pc, #120]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 8007106:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800710a:	62d3      	str	r3, [r2, #44]	@ 0x2c

        /* Enable PLL1FRACN . */
        __HAL_RCC_PLLFRACN_ENABLE();
 800710c:	4b1c      	ldr	r3, [pc, #112]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 800710e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007110:	4a1b      	ldr	r2, [pc, #108]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 8007112:	f043 0301 	orr.w	r3, r3, #1
 8007116:	62d3      	str	r3, [r2, #44]	@ 0x2c

        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8007118:	4b19      	ldr	r3, [pc, #100]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 800711a:	681b      	ldr	r3, [r3, #0]
 800711c:	4a18      	ldr	r2, [pc, #96]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 800711e:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8007122:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8007124:	f7fc f82c 	bl	8003180 <HAL_GetTick>
 8007128:	6278      	str	r0, [r7, #36]	@ 0x24

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 800712a:	e008      	b.n	800713e <HAL_RCC_OscConfig+0x682>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800712c:	f7fc f828 	bl	8003180 <HAL_GetTick>
 8007130:	4602      	mov	r2, r0
 8007132:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007134:	1ad3      	subs	r3, r2, r3
 8007136:	2b02      	cmp	r3, #2
 8007138:	d901      	bls.n	800713e <HAL_RCC_OscConfig+0x682>
          {
            return HAL_TIMEOUT;
 800713a:	2303      	movs	r3, #3
 800713c:	e090      	b.n	8007260 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 800713e:	4b10      	ldr	r3, [pc, #64]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 8007140:	681b      	ldr	r3, [r3, #0]
 8007142:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8007146:	2b00      	cmp	r3, #0
 8007148:	d0f0      	beq.n	800712c <HAL_RCC_OscConfig+0x670>
 800714a:	e088      	b.n	800725e <HAL_RCC_OscConfig+0x7a2>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800714c:	4b0c      	ldr	r3, [pc, #48]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 800714e:	681b      	ldr	r3, [r3, #0]
 8007150:	4a0b      	ldr	r2, [pc, #44]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 8007152:	f023 7380 	bic.w	r3, r3, #16777216	@ 0x1000000
 8007156:	6013      	str	r3, [r2, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8007158:	f7fc f812 	bl	8003180 <HAL_GetTick>
 800715c:	6278      	str	r0, [r7, #36]	@ 0x24

        /* Wait till PLL is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 800715e:	e008      	b.n	8007172 <HAL_RCC_OscConfig+0x6b6>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8007160:	f7fc f80e 	bl	8003180 <HAL_GetTick>
 8007164:	4602      	mov	r2, r0
 8007166:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8007168:	1ad3      	subs	r3, r2, r3
 800716a:	2b02      	cmp	r3, #2
 800716c:	d901      	bls.n	8007172 <HAL_RCC_OscConfig+0x6b6>
          {
            return HAL_TIMEOUT;
 800716e:	2303      	movs	r3, #3
 8007170:	e076      	b.n	8007260 <HAL_RCC_OscConfig+0x7a4>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != 0U)
 8007172:	4b03      	ldr	r3, [pc, #12]	@ (8007180 <HAL_RCC_OscConfig+0x6c4>)
 8007174:	681b      	ldr	r3, [r3, #0]
 8007176:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 800717a:	2b00      	cmp	r3, #0
 800717c:	d1f0      	bne.n	8007160 <HAL_RCC_OscConfig+0x6a4>
 800717e:	e06e      	b.n	800725e <HAL_RCC_OscConfig+0x7a2>
 8007180:	58024400 	.word	0x58024400
 8007184:	fffffc0c 	.word	0xfffffc0c
 8007188:	ffff0007 	.word	0xffff0007
      }
    }
    else
    {
      /* Do not return HAL_ERROR if request repeats the current configuration */
      temp1_pllckcfg = RCC->PLLCKSELR;
 800718c:	4b36      	ldr	r3, [pc, #216]	@ (8007268 <HAL_RCC_OscConfig+0x7ac>)
 800718e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007190:	613b      	str	r3, [r7, #16]
      temp2_pllckcfg = RCC->PLL1DIVR;
 8007192:	4b35      	ldr	r3, [pc, #212]	@ (8007268 <HAL_RCC_OscConfig+0x7ac>)
 8007194:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8007196:	60fb      	str	r3, [r7, #12]
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8007198:	687b      	ldr	r3, [r7, #4]
 800719a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800719c:	2b01      	cmp	r3, #1
 800719e:	d031      	beq.n	8007204 <HAL_RCC_OscConfig+0x748>
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80071a0:	693b      	ldr	r3, [r7, #16]
 80071a2:	f003 0203 	and.w	r2, r3, #3
 80071a6:	687b      	ldr	r3, [r7, #4]
 80071a8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
      if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80071aa:	429a      	cmp	r2, r3
 80071ac:	d12a      	bne.n	8007204 <HAL_RCC_OscConfig+0x748>
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
 80071ae:	693b      	ldr	r3, [r7, #16]
 80071b0:	091b      	lsrs	r3, r3, #4
 80071b2:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 80071b6:	687b      	ldr	r3, [r7, #4]
 80071b8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
          (READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80071ba:	429a      	cmp	r2, r3
 80071bc:	d122      	bne.n	8007204 <HAL_RCC_OscConfig+0x748>
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
 80071be:	68fb      	ldr	r3, [r7, #12]
 80071c0:	f3c3 0208 	ubfx	r2, r3, #0, #9
 80071c4:	687b      	ldr	r3, [r7, #4]
 80071c6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80071c8:	3b01      	subs	r3, #1
          ((READ_BIT(temp1_pllckcfg, RCC_PLLCKSELR_DIVM1) >> RCC_PLLCKSELR_DIVM1_Pos) != RCC_OscInitStruct->PLL.PLLM) ||
 80071ca:	429a      	cmp	r2, r3
 80071cc:	d11a      	bne.n	8007204 <HAL_RCC_OscConfig+0x748>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
 80071ce:	68fb      	ldr	r3, [r7, #12]
 80071d0:	0a5b      	lsrs	r3, r3, #9
 80071d2:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 80071d6:	687b      	ldr	r3, [r7, #4]
 80071d8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80071da:	3b01      	subs	r3, #1
          (READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_N1) != (RCC_OscInitStruct->PLL.PLLN - 1U)) ||
 80071dc:	429a      	cmp	r2, r3
 80071de:	d111      	bne.n	8007204 <HAL_RCC_OscConfig+0x748>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 80071e0:	68fb      	ldr	r3, [r7, #12]
 80071e2:	0c1b      	lsrs	r3, r3, #16
 80071e4:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 80071e8:	687b      	ldr	r3, [r7, #4]
 80071ea:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80071ec:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_P1) >> RCC_PLL1DIVR_P1_Pos) != (RCC_OscInitStruct->PLL.PLLP - 1U)) ||
 80071ee:	429a      	cmp	r2, r3
 80071f0:	d108      	bne.n	8007204 <HAL_RCC_OscConfig+0x748>
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_R1) >> RCC_PLL1DIVR_R1_Pos) != (RCC_OscInitStruct->PLL.PLLR - 1U)))
 80071f2:	68fb      	ldr	r3, [r7, #12]
 80071f4:	0e1b      	lsrs	r3, r3, #24
 80071f6:	f003 027f 	and.w	r2, r3, #127	@ 0x7f
 80071fa:	687b      	ldr	r3, [r7, #4]
 80071fc:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80071fe:	3b01      	subs	r3, #1
          ((READ_BIT(temp2_pllckcfg, RCC_PLL1DIVR_Q1) >> RCC_PLL1DIVR_Q1_Pos) != (RCC_OscInitStruct->PLL.PLLQ - 1U)) ||
 8007200:	429a      	cmp	r2, r3
 8007202:	d001      	beq.n	8007208 <HAL_RCC_OscConfig+0x74c>
      {
        return HAL_ERROR;
 8007204:	2301      	movs	r3, #1
 8007206:	e02b      	b.n	8007260 <HAL_RCC_OscConfig+0x7a4>
      }
      else
      {
        /* Check if only fractional part needs to be updated  */
        temp1_pllckcfg = ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> RCC_PLL1FRACR_FRACN1_Pos);
 8007208:	4b17      	ldr	r3, [pc, #92]	@ (8007268 <HAL_RCC_OscConfig+0x7ac>)
 800720a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 800720c:	08db      	lsrs	r3, r3, #3
 800720e:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8007212:	613b      	str	r3, [r7, #16]
        if (RCC_OscInitStruct->PLL.PLLFRACN != temp1_pllckcfg)
 8007214:	687b      	ldr	r3, [r7, #4]
 8007216:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8007218:	693a      	ldr	r2, [r7, #16]
 800721a:	429a      	cmp	r2, r3
 800721c:	d01f      	beq.n	800725e <HAL_RCC_OscConfig+0x7a2>
        {
          assert_param(IS_RCC_PLLFRACN_VALUE(RCC_OscInitStruct->PLL.PLLFRACN));
          /* Disable PLL1FRACEN */
          __HAL_RCC_PLLFRACN_DISABLE();
 800721e:	4b12      	ldr	r3, [pc, #72]	@ (8007268 <HAL_RCC_OscConfig+0x7ac>)
 8007220:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007222:	4a11      	ldr	r2, [pc, #68]	@ (8007268 <HAL_RCC_OscConfig+0x7ac>)
 8007224:	f023 0301 	bic.w	r3, r3, #1
 8007228:	62d3      	str	r3, [r2, #44]	@ 0x2c
          /* Get Start Tick*/
          tickstart = HAL_GetTick();
 800722a:	f7fb ffa9 	bl	8003180 <HAL_GetTick>
 800722e:	6278      	str	r0, [r7, #36]	@ 0x24
          /* Wait at least 2 CK_REF (PLL input source divided by M) period to make sure next latched value will be taken into account. */
          while ((HAL_GetTick() - tickstart) < PLL_FRAC_TIMEOUT_VALUE)
 8007230:	bf00      	nop
 8007232:	f7fb ffa5 	bl	8003180 <HAL_GetTick>
 8007236:	4602      	mov	r2, r0
 8007238:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800723a:	4293      	cmp	r3, r2
 800723c:	d0f9      	beq.n	8007232 <HAL_RCC_OscConfig+0x776>
          {
          }
          /* Configure PLL1 PLL1FRACN */
          __HAL_RCC_PLLFRACN_CONFIG(RCC_OscInitStruct->PLL.PLLFRACN);
 800723e:	4b0a      	ldr	r3, [pc, #40]	@ (8007268 <HAL_RCC_OscConfig+0x7ac>)
 8007240:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8007242:	4b0a      	ldr	r3, [pc, #40]	@ (800726c <HAL_RCC_OscConfig+0x7b0>)
 8007244:	4013      	ands	r3, r2
 8007246:	687a      	ldr	r2, [r7, #4]
 8007248:	6c92      	ldr	r2, [r2, #72]	@ 0x48
 800724a:	00d2      	lsls	r2, r2, #3
 800724c:	4906      	ldr	r1, [pc, #24]	@ (8007268 <HAL_RCC_OscConfig+0x7ac>)
 800724e:	4313      	orrs	r3, r2
 8007250:	634b      	str	r3, [r1, #52]	@ 0x34
          /* Enable PLL1FRACEN to latch new value. */
          __HAL_RCC_PLLFRACN_ENABLE();
 8007252:	4b05      	ldr	r3, [pc, #20]	@ (8007268 <HAL_RCC_OscConfig+0x7ac>)
 8007254:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007256:	4a04      	ldr	r2, [pc, #16]	@ (8007268 <HAL_RCC_OscConfig+0x7ac>)
 8007258:	f043 0301 	orr.w	r3, r3, #1
 800725c:	62d3      	str	r3, [r2, #44]	@ 0x2c
        }
      }
    }
  }
  return HAL_OK;
 800725e:	2300      	movs	r3, #0
}
 8007260:	4618      	mov	r0, r3
 8007262:	3730      	adds	r7, #48	@ 0x30
 8007264:	46bd      	mov	sp, r7
 8007266:	bd80      	pop	{r7, pc}
 8007268:	58024400 	.word	0x58024400
 800726c:	ffff0007 	.word	0xffff0007

08007270 <HAL_RCC_ClockConfig>:
  *         D1CPRE[3:0] bits to ensure that  Domain1 core clock not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8007270:	b580      	push	{r7, lr}
 8007272:	b086      	sub	sp, #24
 8007274:	af00      	add	r7, sp, #0
 8007276:	6078      	str	r0, [r7, #4]
 8007278:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef halstatus;
  uint32_t tickstart;
  uint32_t common_system_clock;

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 800727a:	687b      	ldr	r3, [r7, #4]
 800727c:	2b00      	cmp	r3, #0
 800727e:	d101      	bne.n	8007284 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8007280:	2301      	movs	r3, #1
 8007282:	e19c      	b.n	80075be <HAL_RCC_ClockConfig+0x34e>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8007284:	4b8a      	ldr	r3, [pc, #552]	@ (80074b0 <HAL_RCC_ClockConfig+0x240>)
 8007286:	681b      	ldr	r3, [r3, #0]
 8007288:	f003 030f 	and.w	r3, r3, #15
 800728c:	683a      	ldr	r2, [r7, #0]
 800728e:	429a      	cmp	r2, r3
 8007290:	d910      	bls.n	80072b4 <HAL_RCC_ClockConfig+0x44>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8007292:	4b87      	ldr	r3, [pc, #540]	@ (80074b0 <HAL_RCC_ClockConfig+0x240>)
 8007294:	681b      	ldr	r3, [r3, #0]
 8007296:	f023 020f 	bic.w	r2, r3, #15
 800729a:	4985      	ldr	r1, [pc, #532]	@ (80074b0 <HAL_RCC_ClockConfig+0x240>)
 800729c:	683b      	ldr	r3, [r7, #0]
 800729e:	4313      	orrs	r3, r2
 80072a0:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 80072a2:	4b83      	ldr	r3, [pc, #524]	@ (80074b0 <HAL_RCC_ClockConfig+0x240>)
 80072a4:	681b      	ldr	r3, [r3, #0]
 80072a6:	f003 030f 	and.w	r3, r3, #15
 80072aa:	683a      	ldr	r2, [r7, #0]
 80072ac:	429a      	cmp	r2, r3
 80072ae:	d001      	beq.n	80072b4 <HAL_RCC_ClockConfig+0x44>
    {
      return HAL_ERROR;
 80072b0:	2301      	movs	r3, #1
 80072b2:	e184      	b.n	80075be <HAL_RCC_ClockConfig+0x34e>

  }

  /* Increasing the BUS frequency divider */
  /*-------------------------- D1PCLK1/CDPCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
 80072b4:	687b      	ldr	r3, [r7, #4]
 80072b6:	681b      	ldr	r3, [r3, #0]
 80072b8:	f003 0304 	and.w	r3, r3, #4
 80072bc:	2b00      	cmp	r3, #0
 80072be:	d010      	beq.n	80072e2 <HAL_RCC_ClockConfig+0x72>
  {
#if defined (RCC_D1CFGR_D1PPRE)
    if ((RCC_ClkInitStruct->APB3CLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
 80072c0:	687b      	ldr	r3, [r7, #4]
 80072c2:	691a      	ldr	r2, [r3, #16]
 80072c4:	4b7b      	ldr	r3, [pc, #492]	@ (80074b4 <HAL_RCC_ClockConfig+0x244>)
 80072c6:	699b      	ldr	r3, [r3, #24]
 80072c8:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 80072cc:	429a      	cmp	r2, r3
 80072ce:	d908      	bls.n	80072e2 <HAL_RCC_ClockConfig+0x72>
    {
      assert_param(IS_RCC_D1PCLK1(RCC_ClkInitStruct->APB3CLKDivider));
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
 80072d0:	4b78      	ldr	r3, [pc, #480]	@ (80074b4 <HAL_RCC_ClockConfig+0x244>)
 80072d2:	699b      	ldr	r3, [r3, #24]
 80072d4:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 80072d8:	687b      	ldr	r3, [r7, #4]
 80072da:	691b      	ldr	r3, [r3, #16]
 80072dc:	4975      	ldr	r1, [pc, #468]	@ (80074b4 <HAL_RCC_ClockConfig+0x244>)
 80072de:	4313      	orrs	r3, r2
 80072e0:	618b      	str	r3, [r1, #24]
    }
#endif
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80072e2:	687b      	ldr	r3, [r7, #4]
 80072e4:	681b      	ldr	r3, [r3, #0]
 80072e6:	f003 0308 	and.w	r3, r3, #8
 80072ea:	2b00      	cmp	r3, #0
 80072ec:	d010      	beq.n	8007310 <HAL_RCC_ClockConfig+0xa0>
  {
#if defined (RCC_D2CFGR_D2PPRE1)
    if ((RCC_ClkInitStruct->APB1CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
 80072ee:	687b      	ldr	r3, [r7, #4]
 80072f0:	695a      	ldr	r2, [r3, #20]
 80072f2:	4b70      	ldr	r3, [pc, #448]	@ (80074b4 <HAL_RCC_ClockConfig+0x244>)
 80072f4:	69db      	ldr	r3, [r3, #28]
 80072f6:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 80072fa:	429a      	cmp	r2, r3
 80072fc:	d908      	bls.n	8007310 <HAL_RCC_ClockConfig+0xa0>
    {
      assert_param(IS_RCC_PCLK1(RCC_ClkInitStruct->APB1CLKDivider));
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 80072fe:	4b6d      	ldr	r3, [pc, #436]	@ (80074b4 <HAL_RCC_ClockConfig+0x244>)
 8007300:	69db      	ldr	r3, [r3, #28]
 8007302:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 8007306:	687b      	ldr	r3, [r7, #4]
 8007308:	695b      	ldr	r3, [r3, #20]
 800730a:	496a      	ldr	r1, [pc, #424]	@ (80074b4 <HAL_RCC_ClockConfig+0x244>)
 800730c:	4313      	orrs	r3, r2
 800730e:	61cb      	str	r3, [r1, #28]
      MODIFY_REG(RCC->CDCFGR2, RCC_CDCFGR2_CDPPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
    }
#endif
  }
  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8007310:	687b      	ldr	r3, [r7, #4]
 8007312:	681b      	ldr	r3, [r3, #0]
 8007314:	f003 0310 	and.w	r3, r3, #16
 8007318:	2b00      	cmp	r3, #0
 800731a:	d010      	beq.n	800733e <HAL_RCC_ClockConfig+0xce>
  {
#if defined(RCC_D2CFGR_D2PPRE2)
    if ((RCC_ClkInitStruct->APB2CLKDivider) > (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
 800731c:	687b      	ldr	r3, [r7, #4]
 800731e:	699a      	ldr	r2, [r3, #24]
 8007320:	4b64      	ldr	r3, [pc, #400]	@ (80074b4 <HAL_RCC_ClockConfig+0x244>)
 8007322:	69db      	ldr	r3, [r3, #28]
 8007324:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 8007328:	429a      	cmp	r2, r3
 800732a:	d908      	bls.n	800733e <HAL_RCC_ClockConfig+0xce>
    {
      assert_param(IS_RCC_PCLK2(RCC_ClkInitStruct->APB2CLKDivider));
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
 800732c:	4b61      	ldr	r3, [pc, #388]	@ (80074b4 <HAL_RCC_ClockConfig+0x244>)
 800732e:	69db      	ldr	r3, [r3, #28]
 8007330:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8007334:	687b      	ldr	r3, [r7, #4]
 8007336:	699b      	ldr	r3, [r3, #24]
 8007338:	495e      	ldr	r1, [pc, #376]	@ (80074b4 <HAL_RCC_ClockConfig+0x244>)
 800733a:	4313      	orrs	r3, r2
 800733c:	61cb      	str	r3, [r1, #28]
    }
#endif
  }

  /*-------------------------- D3PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
 800733e:	687b      	ldr	r3, [r7, #4]
 8007340:	681b      	ldr	r3, [r3, #0]
 8007342:	f003 0320 	and.w	r3, r3, #32
 8007346:	2b00      	cmp	r3, #0
 8007348:	d010      	beq.n	800736c <HAL_RCC_ClockConfig+0xfc>
  {
#if defined(RCC_D3CFGR_D3PPRE)
    if ((RCC_ClkInitStruct->APB4CLKDivider) > (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
 800734a:	687b      	ldr	r3, [r7, #4]
 800734c:	69da      	ldr	r2, [r3, #28]
 800734e:	4b59      	ldr	r3, [pc, #356]	@ (80074b4 <HAL_RCC_ClockConfig+0x244>)
 8007350:	6a1b      	ldr	r3, [r3, #32]
 8007352:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 8007356:	429a      	cmp	r2, r3
 8007358:	d908      	bls.n	800736c <HAL_RCC_ClockConfig+0xfc>
    {
      assert_param(IS_RCC_D3PCLK1(RCC_ClkInitStruct->APB4CLKDivider));
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
 800735a:	4b56      	ldr	r3, [pc, #344]	@ (80074b4 <HAL_RCC_ClockConfig+0x244>)
 800735c:	6a1b      	ldr	r3, [r3, #32]
 800735e:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 8007362:	687b      	ldr	r3, [r7, #4]
 8007364:	69db      	ldr	r3, [r3, #28]
 8007366:	4953      	ldr	r1, [pc, #332]	@ (80074b4 <HAL_RCC_ClockConfig+0x244>)
 8007368:	4313      	orrs	r3, r2
 800736a:	620b      	str	r3, [r1, #32]
    }
#endif
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800736c:	687b      	ldr	r3, [r7, #4]
 800736e:	681b      	ldr	r3, [r3, #0]
 8007370:	f003 0302 	and.w	r3, r3, #2
 8007374:	2b00      	cmp	r3, #0
 8007376:	d010      	beq.n	800739a <HAL_RCC_ClockConfig+0x12a>
  {
#if defined (RCC_D1CFGR_HPRE)
    if ((RCC_ClkInitStruct->AHBCLKDivider) > (RCC->D1CFGR & RCC_D1CFGR_HPRE))
 8007378:	687b      	ldr	r3, [r7, #4]
 800737a:	68da      	ldr	r2, [r3, #12]
 800737c:	4b4d      	ldr	r3, [pc, #308]	@ (80074b4 <HAL_RCC_ClockConfig+0x244>)
 800737e:	699b      	ldr	r3, [r3, #24]
 8007380:	f003 030f 	and.w	r3, r3, #15
 8007384:	429a      	cmp	r2, r3
 8007386:	d908      	bls.n	800739a <HAL_RCC_ClockConfig+0x12a>
    {
      /* Set the new HCLK clock divider */
      assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8007388:	4b4a      	ldr	r3, [pc, #296]	@ (80074b4 <HAL_RCC_ClockConfig+0x244>)
 800738a:	699b      	ldr	r3, [r3, #24]
 800738c:	f023 020f 	bic.w	r2, r3, #15
 8007390:	687b      	ldr	r3, [r7, #4]
 8007392:	68db      	ldr	r3, [r3, #12]
 8007394:	4947      	ldr	r1, [pc, #284]	@ (80074b4 <HAL_RCC_ClockConfig+0x244>)
 8007396:	4313      	orrs	r3, r2
 8007398:	618b      	str	r3, [r1, #24]
    }
#endif
  }

  /*------------------------- SYSCLK Configuration -------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800739a:	687b      	ldr	r3, [r7, #4]
 800739c:	681b      	ldr	r3, [r3, #0]
 800739e:	f003 0301 	and.w	r3, r3, #1
 80073a2:	2b00      	cmp	r3, #0
 80073a4:	d055      	beq.n	8007452 <HAL_RCC_ClockConfig+0x1e2>
  {
    assert_param(IS_RCC_SYSCLK(RCC_ClkInitStruct->SYSCLKDivider));
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
#if defined(RCC_D1CFGR_D1CPRE)
    MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1CPRE, RCC_ClkInitStruct->SYSCLKDivider);
 80073a6:	4b43      	ldr	r3, [pc, #268]	@ (80074b4 <HAL_RCC_ClockConfig+0x244>)
 80073a8:	699b      	ldr	r3, [r3, #24]
 80073aa:	f423 6270 	bic.w	r2, r3, #3840	@ 0xf00
 80073ae:	687b      	ldr	r3, [r7, #4]
 80073b0:	689b      	ldr	r3, [r3, #8]
 80073b2:	4940      	ldr	r1, [pc, #256]	@ (80074b4 <HAL_RCC_ClockConfig+0x244>)
 80073b4:	4313      	orrs	r3, r2
 80073b6:	618b      	str	r3, [r1, #24]
#else
    MODIFY_REG(RCC->CDCFGR1, RCC_CDCFGR1_CDCPRE, RCC_ClkInitStruct->SYSCLKDivider);
#endif
    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80073b8:	687b      	ldr	r3, [r7, #4]
 80073ba:	685b      	ldr	r3, [r3, #4]
 80073bc:	2b02      	cmp	r3, #2
 80073be:	d107      	bne.n	80073d0 <HAL_RCC_ClockConfig+0x160>
    {
      /* Check the HSE ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 80073c0:	4b3c      	ldr	r3, [pc, #240]	@ (80074b4 <HAL_RCC_ClockConfig+0x244>)
 80073c2:	681b      	ldr	r3, [r3, #0]
 80073c4:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80073c8:	2b00      	cmp	r3, #0
 80073ca:	d121      	bne.n	8007410 <HAL_RCC_ClockConfig+0x1a0>
      {
        return HAL_ERROR;
 80073cc:	2301      	movs	r3, #1
 80073ce:	e0f6      	b.n	80075be <HAL_RCC_ClockConfig+0x34e>
      }
    }
    /* PLL is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 80073d0:	687b      	ldr	r3, [r7, #4]
 80073d2:	685b      	ldr	r3, [r3, #4]
 80073d4:	2b03      	cmp	r3, #3
 80073d6:	d107      	bne.n	80073e8 <HAL_RCC_ClockConfig+0x178>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 80073d8:	4b36      	ldr	r3, [pc, #216]	@ (80074b4 <HAL_RCC_ClockConfig+0x244>)
 80073da:	681b      	ldr	r3, [r3, #0]
 80073dc:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80073e0:	2b00      	cmp	r3, #0
 80073e2:	d115      	bne.n	8007410 <HAL_RCC_ClockConfig+0x1a0>
      {
        return HAL_ERROR;
 80073e4:	2301      	movs	r3, #1
 80073e6:	e0ea      	b.n	80075be <HAL_RCC_ClockConfig+0x34e>
      }
    }
    /* CSI is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_CSI)
 80073e8:	687b      	ldr	r3, [r7, #4]
 80073ea:	685b      	ldr	r3, [r3, #4]
 80073ec:	2b01      	cmp	r3, #1
 80073ee:	d107      	bne.n	8007400 <HAL_RCC_ClockConfig+0x190>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_CSIRDY) == 0U)
 80073f0:	4b30      	ldr	r3, [pc, #192]	@ (80074b4 <HAL_RCC_ClockConfig+0x244>)
 80073f2:	681b      	ldr	r3, [r3, #0]
 80073f4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80073f8:	2b00      	cmp	r3, #0
 80073fa:	d109      	bne.n	8007410 <HAL_RCC_ClockConfig+0x1a0>
      {
        return HAL_ERROR;
 80073fc:	2301      	movs	r3, #1
 80073fe:	e0de      	b.n	80075be <HAL_RCC_ClockConfig+0x34e>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8007400:	4b2c      	ldr	r3, [pc, #176]	@ (80074b4 <HAL_RCC_ClockConfig+0x244>)
 8007402:	681b      	ldr	r3, [r3, #0]
 8007404:	f003 0304 	and.w	r3, r3, #4
 8007408:	2b00      	cmp	r3, #0
 800740a:	d101      	bne.n	8007410 <HAL_RCC_ClockConfig+0x1a0>
      {
        return HAL_ERROR;
 800740c:	2301      	movs	r3, #1
 800740e:	e0d6      	b.n	80075be <HAL_RCC_ClockConfig+0x34e>
      }
    }
    MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 8007410:	4b28      	ldr	r3, [pc, #160]	@ (80074b4 <HAL_RCC_ClockConfig+0x244>)
 8007412:	691b      	ldr	r3, [r3, #16]
 8007414:	f023 0207 	bic.w	r2, r3, #7
 8007418:	687b      	ldr	r3, [r7, #4]
 800741a:	685b      	ldr	r3, [r3, #4]
 800741c:	4925      	ldr	r1, [pc, #148]	@ (80074b4 <HAL_RCC_ClockConfig+0x244>)
 800741e:	4313      	orrs	r3, r2
 8007420:	610b      	str	r3, [r1, #16]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 8007422:	f7fb fead 	bl	8003180 <HAL_GetTick>
 8007426:	6178      	str	r0, [r7, #20]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8007428:	e00a      	b.n	8007440 <HAL_RCC_ClockConfig+0x1d0>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800742a:	f7fb fea9 	bl	8003180 <HAL_GetTick>
 800742e:	4602      	mov	r2, r0
 8007430:	697b      	ldr	r3, [r7, #20]
 8007432:	1ad3      	subs	r3, r2, r3
 8007434:	f241 3288 	movw	r2, #5000	@ 0x1388
 8007438:	4293      	cmp	r3, r2
 800743a:	d901      	bls.n	8007440 <HAL_RCC_ClockConfig+0x1d0>
      {
        return HAL_TIMEOUT;
 800743c:	2303      	movs	r3, #3
 800743e:	e0be      	b.n	80075be <HAL_RCC_ClockConfig+0x34e>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8007440:	4b1c      	ldr	r3, [pc, #112]	@ (80074b4 <HAL_RCC_ClockConfig+0x244>)
 8007442:	691b      	ldr	r3, [r3, #16]
 8007444:	f003 0238 	and.w	r2, r3, #56	@ 0x38
 8007448:	687b      	ldr	r3, [r7, #4]
 800744a:	685b      	ldr	r3, [r3, #4]
 800744c:	00db      	lsls	r3, r3, #3
 800744e:	429a      	cmp	r2, r3
 8007450:	d1eb      	bne.n	800742a <HAL_RCC_ClockConfig+0x1ba>

  }

  /* Decreasing the BUS frequency divider */
  /*-------------------------- HCLK Configuration --------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8007452:	687b      	ldr	r3, [r7, #4]
 8007454:	681b      	ldr	r3, [r3, #0]
 8007456:	f003 0302 	and.w	r3, r3, #2
 800745a:	2b00      	cmp	r3, #0
 800745c:	d010      	beq.n	8007480 <HAL_RCC_ClockConfig+0x210>
  {
#if defined(RCC_D1CFGR_HPRE)
    if ((RCC_ClkInitStruct->AHBCLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_HPRE))
 800745e:	687b      	ldr	r3, [r7, #4]
 8007460:	68da      	ldr	r2, [r3, #12]
 8007462:	4b14      	ldr	r3, [pc, #80]	@ (80074b4 <HAL_RCC_ClockConfig+0x244>)
 8007464:	699b      	ldr	r3, [r3, #24]
 8007466:	f003 030f 	and.w	r3, r3, #15
 800746a:	429a      	cmp	r2, r3
 800746c:	d208      	bcs.n	8007480 <HAL_RCC_ClockConfig+0x210>
    {
      /* Set the new HCLK clock divider */
      assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800746e:	4b11      	ldr	r3, [pc, #68]	@ (80074b4 <HAL_RCC_ClockConfig+0x244>)
 8007470:	699b      	ldr	r3, [r3, #24]
 8007472:	f023 020f 	bic.w	r2, r3, #15
 8007476:	687b      	ldr	r3, [r7, #4]
 8007478:	68db      	ldr	r3, [r3, #12]
 800747a:	490e      	ldr	r1, [pc, #56]	@ (80074b4 <HAL_RCC_ClockConfig+0x244>)
 800747c:	4313      	orrs	r3, r2
 800747e:	618b      	str	r3, [r1, #24]
    }
#endif
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 8007480:	4b0b      	ldr	r3, [pc, #44]	@ (80074b0 <HAL_RCC_ClockConfig+0x240>)
 8007482:	681b      	ldr	r3, [r3, #0]
 8007484:	f003 030f 	and.w	r3, r3, #15
 8007488:	683a      	ldr	r2, [r7, #0]
 800748a:	429a      	cmp	r2, r3
 800748c:	d214      	bcs.n	80074b8 <HAL_RCC_ClockConfig+0x248>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800748e:	4b08      	ldr	r3, [pc, #32]	@ (80074b0 <HAL_RCC_ClockConfig+0x240>)
 8007490:	681b      	ldr	r3, [r3, #0]
 8007492:	f023 020f 	bic.w	r2, r3, #15
 8007496:	4906      	ldr	r1, [pc, #24]	@ (80074b0 <HAL_RCC_ClockConfig+0x240>)
 8007498:	683b      	ldr	r3, [r7, #0]
 800749a:	4313      	orrs	r3, r2
 800749c:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 800749e:	4b04      	ldr	r3, [pc, #16]	@ (80074b0 <HAL_RCC_ClockConfig+0x240>)
 80074a0:	681b      	ldr	r3, [r3, #0]
 80074a2:	f003 030f 	and.w	r3, r3, #15
 80074a6:	683a      	ldr	r2, [r7, #0]
 80074a8:	429a      	cmp	r2, r3
 80074aa:	d005      	beq.n	80074b8 <HAL_RCC_ClockConfig+0x248>
    {
      return HAL_ERROR;
 80074ac:	2301      	movs	r3, #1
 80074ae:	e086      	b.n	80075be <HAL_RCC_ClockConfig+0x34e>
 80074b0:	52002000 	.word	0x52002000
 80074b4:	58024400 	.word	0x58024400
    }
  }

  /*-------------------------- D1PCLK1/CDPCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D1PCLK1) == RCC_CLOCKTYPE_D1PCLK1)
 80074b8:	687b      	ldr	r3, [r7, #4]
 80074ba:	681b      	ldr	r3, [r3, #0]
 80074bc:	f003 0304 	and.w	r3, r3, #4
 80074c0:	2b00      	cmp	r3, #0
 80074c2:	d010      	beq.n	80074e6 <HAL_RCC_ClockConfig+0x276>
  {
#if defined(RCC_D1CFGR_D1PPRE)
    if ((RCC_ClkInitStruct->APB3CLKDivider) < (RCC->D1CFGR & RCC_D1CFGR_D1PPRE))
 80074c4:	687b      	ldr	r3, [r7, #4]
 80074c6:	691a      	ldr	r2, [r3, #16]
 80074c8:	4b3f      	ldr	r3, [pc, #252]	@ (80075c8 <HAL_RCC_ClockConfig+0x358>)
 80074ca:	699b      	ldr	r3, [r3, #24]
 80074cc:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 80074d0:	429a      	cmp	r2, r3
 80074d2:	d208      	bcs.n	80074e6 <HAL_RCC_ClockConfig+0x276>
    {
      assert_param(IS_RCC_D1PCLK1(RCC_ClkInitStruct->APB3CLKDivider));
      MODIFY_REG(RCC->D1CFGR, RCC_D1CFGR_D1PPRE, RCC_ClkInitStruct->APB3CLKDivider);
 80074d4:	4b3c      	ldr	r3, [pc, #240]	@ (80075c8 <HAL_RCC_ClockConfig+0x358>)
 80074d6:	699b      	ldr	r3, [r3, #24]
 80074d8:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 80074dc:	687b      	ldr	r3, [r7, #4]
 80074de:	691b      	ldr	r3, [r3, #16]
 80074e0:	4939      	ldr	r1, [pc, #228]	@ (80075c8 <HAL_RCC_ClockConfig+0x358>)
 80074e2:	4313      	orrs	r3, r2
 80074e4:	618b      	str	r3, [r1, #24]
    }
#endif
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80074e6:	687b      	ldr	r3, [r7, #4]
 80074e8:	681b      	ldr	r3, [r3, #0]
 80074ea:	f003 0308 	and.w	r3, r3, #8
 80074ee:	2b00      	cmp	r3, #0
 80074f0:	d010      	beq.n	8007514 <HAL_RCC_ClockConfig+0x2a4>
  {
#if defined(RCC_D2CFGR_D2PPRE1)
    if ((RCC_ClkInitStruct->APB1CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE1))
 80074f2:	687b      	ldr	r3, [r7, #4]
 80074f4:	695a      	ldr	r2, [r3, #20]
 80074f6:	4b34      	ldr	r3, [pc, #208]	@ (80075c8 <HAL_RCC_ClockConfig+0x358>)
 80074f8:	69db      	ldr	r3, [r3, #28]
 80074fa:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 80074fe:	429a      	cmp	r2, r3
 8007500:	d208      	bcs.n	8007514 <HAL_RCC_ClockConfig+0x2a4>
    {
      assert_param(IS_RCC_PCLK1(RCC_ClkInitStruct->APB1CLKDivider));
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE1, (RCC_ClkInitStruct->APB1CLKDivider));
 8007502:	4b31      	ldr	r3, [pc, #196]	@ (80075c8 <HAL_RCC_ClockConfig+0x358>)
 8007504:	69db      	ldr	r3, [r3, #28]
 8007506:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 800750a:	687b      	ldr	r3, [r7, #4]
 800750c:	695b      	ldr	r3, [r3, #20]
 800750e:	492e      	ldr	r1, [pc, #184]	@ (80075c8 <HAL_RCC_ClockConfig+0x358>)
 8007510:	4313      	orrs	r3, r2
 8007512:	61cb      	str	r3, [r1, #28]
    }
#endif
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8007514:	687b      	ldr	r3, [r7, #4]
 8007516:	681b      	ldr	r3, [r3, #0]
 8007518:	f003 0310 	and.w	r3, r3, #16
 800751c:	2b00      	cmp	r3, #0
 800751e:	d010      	beq.n	8007542 <HAL_RCC_ClockConfig+0x2d2>
  {
#if defined (RCC_D2CFGR_D2PPRE2)
    if ((RCC_ClkInitStruct->APB2CLKDivider) < (RCC->D2CFGR & RCC_D2CFGR_D2PPRE2))
 8007520:	687b      	ldr	r3, [r7, #4]
 8007522:	699a      	ldr	r2, [r3, #24]
 8007524:	4b28      	ldr	r3, [pc, #160]	@ (80075c8 <HAL_RCC_ClockConfig+0x358>)
 8007526:	69db      	ldr	r3, [r3, #28]
 8007528:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 800752c:	429a      	cmp	r2, r3
 800752e:	d208      	bcs.n	8007542 <HAL_RCC_ClockConfig+0x2d2>
    {
      assert_param(IS_RCC_PCLK2(RCC_ClkInitStruct->APB2CLKDivider));
      MODIFY_REG(RCC->D2CFGR, RCC_D2CFGR_D2PPRE2, (RCC_ClkInitStruct->APB2CLKDivider));
 8007530:	4b25      	ldr	r3, [pc, #148]	@ (80075c8 <HAL_RCC_ClockConfig+0x358>)
 8007532:	69db      	ldr	r3, [r3, #28]
 8007534:	f423 62e0 	bic.w	r2, r3, #1792	@ 0x700
 8007538:	687b      	ldr	r3, [r7, #4]
 800753a:	699b      	ldr	r3, [r3, #24]
 800753c:	4922      	ldr	r1, [pc, #136]	@ (80075c8 <HAL_RCC_ClockConfig+0x358>)
 800753e:	4313      	orrs	r3, r2
 8007540:	61cb      	str	r3, [r1, #28]
    }
#endif
  }

  /*-------------------------- D3PCLK1/SRDPCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_D3PCLK1) == RCC_CLOCKTYPE_D3PCLK1)
 8007542:	687b      	ldr	r3, [r7, #4]
 8007544:	681b      	ldr	r3, [r3, #0]
 8007546:	f003 0320 	and.w	r3, r3, #32
 800754a:	2b00      	cmp	r3, #0
 800754c:	d010      	beq.n	8007570 <HAL_RCC_ClockConfig+0x300>
  {
#if defined(RCC_D3CFGR_D3PPRE)
    if ((RCC_ClkInitStruct->APB4CLKDivider) < (RCC->D3CFGR & RCC_D3CFGR_D3PPRE))
 800754e:	687b      	ldr	r3, [r7, #4]
 8007550:	69da      	ldr	r2, [r3, #28]
 8007552:	4b1d      	ldr	r3, [pc, #116]	@ (80075c8 <HAL_RCC_ClockConfig+0x358>)
 8007554:	6a1b      	ldr	r3, [r3, #32]
 8007556:	f003 0370 	and.w	r3, r3, #112	@ 0x70
 800755a:	429a      	cmp	r2, r3
 800755c:	d208      	bcs.n	8007570 <HAL_RCC_ClockConfig+0x300>
    {
      assert_param(IS_RCC_D3PCLK1(RCC_ClkInitStruct->APB4CLKDivider));
      MODIFY_REG(RCC->D3CFGR, RCC_D3CFGR_D3PPRE, (RCC_ClkInitStruct->APB4CLKDivider));
 800755e:	4b1a      	ldr	r3, [pc, #104]	@ (80075c8 <HAL_RCC_ClockConfig+0x358>)
 8007560:	6a1b      	ldr	r3, [r3, #32]
 8007562:	f023 0270 	bic.w	r2, r3, #112	@ 0x70
 8007566:	687b      	ldr	r3, [r7, #4]
 8007568:	69db      	ldr	r3, [r3, #28]
 800756a:	4917      	ldr	r1, [pc, #92]	@ (80075c8 <HAL_RCC_ClockConfig+0x358>)
 800756c:	4313      	orrs	r3, r2
 800756e:	620b      	str	r3, [r1, #32]
#endif
  }

  /* Update the SystemCoreClock global variable */
#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
 8007570:	f000 f834 	bl	80075dc <HAL_RCC_GetSysClockFreq>
 8007574:	4602      	mov	r2, r0
 8007576:	4b14      	ldr	r3, [pc, #80]	@ (80075c8 <HAL_RCC_ClockConfig+0x358>)
 8007578:	699b      	ldr	r3, [r3, #24]
 800757a:	0a1b      	lsrs	r3, r3, #8
 800757c:	f003 030f 	and.w	r3, r3, #15
 8007580:	4912      	ldr	r1, [pc, #72]	@ (80075cc <HAL_RCC_ClockConfig+0x35c>)
 8007582:	5ccb      	ldrb	r3, [r1, r3]
 8007584:	f003 031f 	and.w	r3, r3, #31
 8007588:	fa22 f303 	lsr.w	r3, r2, r3
 800758c:	613b      	str	r3, [r7, #16]
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE) >> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 800758e:	4b0e      	ldr	r3, [pc, #56]	@ (80075c8 <HAL_RCC_ClockConfig+0x358>)
 8007590:	699b      	ldr	r3, [r3, #24]
 8007592:	f003 030f 	and.w	r3, r3, #15
 8007596:	4a0d      	ldr	r2, [pc, #52]	@ (80075cc <HAL_RCC_ClockConfig+0x35c>)
 8007598:	5cd3      	ldrb	r3, [r2, r3]
 800759a:	f003 031f 	and.w	r3, r3, #31
 800759e:	693a      	ldr	r2, [r7, #16]
 80075a0:	fa22 f303 	lsr.w	r3, r2, r3
 80075a4:	4a0a      	ldr	r2, [pc, #40]	@ (80075d0 <HAL_RCC_ClockConfig+0x360>)
 80075a6:	6013      	str	r3, [r2, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
 80075a8:	4a0a      	ldr	r2, [pc, #40]	@ (80075d4 <HAL_RCC_ClockConfig+0x364>)
 80075aa:	693b      	ldr	r3, [r7, #16]
 80075ac:	6013      	str	r3, [r2, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  /* Configure the source of time base considering new system clocks settings*/
  halstatus = HAL_InitTick(uwTickPrio);
 80075ae:	4b0a      	ldr	r3, [pc, #40]	@ (80075d8 <HAL_RCC_ClockConfig+0x368>)
 80075b0:	681b      	ldr	r3, [r3, #0]
 80075b2:	4618      	mov	r0, r3
 80075b4:	f7fb fd9a 	bl	80030ec <HAL_InitTick>
 80075b8:	4603      	mov	r3, r0
 80075ba:	73fb      	strb	r3, [r7, #15]

  return halstatus;
 80075bc:	7bfb      	ldrb	r3, [r7, #15]
}
 80075be:	4618      	mov	r0, r3
 80075c0:	3718      	adds	r7, #24
 80075c2:	46bd      	mov	sp, r7
 80075c4:	bd80      	pop	{r7, pc}
 80075c6:	bf00      	nop
 80075c8:	58024400 	.word	0x58024400
 80075cc:	08027500 	.word	0x08027500
 80075d0:	24000008 	.word	0x24000008
 80075d4:	24000004 	.word	0x24000004
 80075d8:	24000010 	.word	0x24000010

080075dc <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 80075dc:	b480      	push	{r7}
 80075de:	b089      	sub	sp, #36	@ 0x24
 80075e0:	af00      	add	r7, sp, #0
  float_t fracn1, pllvco;
  uint32_t sysclockfreq;

  /* Get SYSCLK source -------------------------------------------------------*/

  switch (RCC->CFGR & RCC_CFGR_SWS)
 80075e2:	4bb3      	ldr	r3, [pc, #716]	@ (80078b0 <HAL_RCC_GetSysClockFreq+0x2d4>)
 80075e4:	691b      	ldr	r3, [r3, #16]
 80075e6:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 80075ea:	2b18      	cmp	r3, #24
 80075ec:	f200 8155 	bhi.w	800789a <HAL_RCC_GetSysClockFreq+0x2be>
 80075f0:	a201      	add	r2, pc, #4	@ (adr r2, 80075f8 <HAL_RCC_GetSysClockFreq+0x1c>)
 80075f2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80075f6:	bf00      	nop
 80075f8:	0800765d 	.word	0x0800765d
 80075fc:	0800789b 	.word	0x0800789b
 8007600:	0800789b 	.word	0x0800789b
 8007604:	0800789b 	.word	0x0800789b
 8007608:	0800789b 	.word	0x0800789b
 800760c:	0800789b 	.word	0x0800789b
 8007610:	0800789b 	.word	0x0800789b
 8007614:	0800789b 	.word	0x0800789b
 8007618:	08007683 	.word	0x08007683
 800761c:	0800789b 	.word	0x0800789b
 8007620:	0800789b 	.word	0x0800789b
 8007624:	0800789b 	.word	0x0800789b
 8007628:	0800789b 	.word	0x0800789b
 800762c:	0800789b 	.word	0x0800789b
 8007630:	0800789b 	.word	0x0800789b
 8007634:	0800789b 	.word	0x0800789b
 8007638:	08007689 	.word	0x08007689
 800763c:	0800789b 	.word	0x0800789b
 8007640:	0800789b 	.word	0x0800789b
 8007644:	0800789b 	.word	0x0800789b
 8007648:	0800789b 	.word	0x0800789b
 800764c:	0800789b 	.word	0x0800789b
 8007650:	0800789b 	.word	0x0800789b
 8007654:	0800789b 	.word	0x0800789b
 8007658:	0800768f 	.word	0x0800768f
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */

      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 800765c:	4b94      	ldr	r3, [pc, #592]	@ (80078b0 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800765e:	681b      	ldr	r3, [r3, #0]
 8007660:	f003 0320 	and.w	r3, r3, #32
 8007664:	2b00      	cmp	r3, #0
 8007666:	d009      	beq.n	800767c <HAL_RCC_GetSysClockFreq+0xa0>
      {
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8007668:	4b91      	ldr	r3, [pc, #580]	@ (80078b0 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800766a:	681b      	ldr	r3, [r3, #0]
 800766c:	08db      	lsrs	r3, r3, #3
 800766e:	f003 0303 	and.w	r3, r3, #3
 8007672:	4a90      	ldr	r2, [pc, #576]	@ (80078b4 <HAL_RCC_GetSysClockFreq+0x2d8>)
 8007674:	fa22 f303 	lsr.w	r3, r2, r3
 8007678:	61bb      	str	r3, [r7, #24]
      else
      {
        sysclockfreq = (uint32_t) HSI_VALUE;
      }

      break;
 800767a:	e111      	b.n	80078a0 <HAL_RCC_GetSysClockFreq+0x2c4>
        sysclockfreq = (uint32_t) HSI_VALUE;
 800767c:	4b8d      	ldr	r3, [pc, #564]	@ (80078b4 <HAL_RCC_GetSysClockFreq+0x2d8>)
 800767e:	61bb      	str	r3, [r7, #24]
      break;
 8007680:	e10e      	b.n	80078a0 <HAL_RCC_GetSysClockFreq+0x2c4>

    case RCC_CFGR_SWS_CSI:  /* CSI used as system clock  source */
      sysclockfreq = CSI_VALUE;
 8007682:	4b8d      	ldr	r3, [pc, #564]	@ (80078b8 <HAL_RCC_GetSysClockFreq+0x2dc>)
 8007684:	61bb      	str	r3, [r7, #24]
      break;
 8007686:	e10b      	b.n	80078a0 <HAL_RCC_GetSysClockFreq+0x2c4>

    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
      sysclockfreq = HSE_VALUE;
 8007688:	4b8c      	ldr	r3, [pc, #560]	@ (80078bc <HAL_RCC_GetSysClockFreq+0x2e0>)
 800768a:	61bb      	str	r3, [r7, #24]
      break;
 800768c:	e108      	b.n	80078a0 <HAL_RCC_GetSysClockFreq+0x2c4>
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 800768e:	4b88      	ldr	r3, [pc, #544]	@ (80078b0 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007690:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8007692:	f003 0303 	and.w	r3, r3, #3
 8007696:	617b      	str	r3, [r7, #20]
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
 8007698:	4b85      	ldr	r3, [pc, #532]	@ (80078b0 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800769a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800769c:	091b      	lsrs	r3, r3, #4
 800769e:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80076a2:	613b      	str	r3, [r7, #16]
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
 80076a4:	4b82      	ldr	r3, [pc, #520]	@ (80078b0 <HAL_RCC_GetSysClockFreq+0x2d4>)
 80076a6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80076a8:	f003 0301 	and.w	r3, r3, #1
 80076ac:	60fb      	str	r3, [r7, #12]
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 80076ae:	4b80      	ldr	r3, [pc, #512]	@ (80078b0 <HAL_RCC_GetSysClockFreq+0x2d4>)
 80076b0:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80076b2:	08db      	lsrs	r3, r3, #3
 80076b4:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80076b8:	68fa      	ldr	r2, [r7, #12]
 80076ba:	fb02 f303 	mul.w	r3, r2, r3
 80076be:	ee07 3a90 	vmov	s15, r3
 80076c2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80076c6:	edc7 7a02 	vstr	s15, [r7, #8]

      if (pllm != 0U)
 80076ca:	693b      	ldr	r3, [r7, #16]
 80076cc:	2b00      	cmp	r3, #0
 80076ce:	f000 80e1 	beq.w	8007894 <HAL_RCC_GetSysClockFreq+0x2b8>
 80076d2:	697b      	ldr	r3, [r7, #20]
 80076d4:	2b02      	cmp	r3, #2
 80076d6:	f000 8083 	beq.w	80077e0 <HAL_RCC_GetSysClockFreq+0x204>
 80076da:	697b      	ldr	r3, [r7, #20]
 80076dc:	2b02      	cmp	r3, #2
 80076de:	f200 80a1 	bhi.w	8007824 <HAL_RCC_GetSysClockFreq+0x248>
 80076e2:	697b      	ldr	r3, [r7, #20]
 80076e4:	2b00      	cmp	r3, #0
 80076e6:	d003      	beq.n	80076f0 <HAL_RCC_GetSysClockFreq+0x114>
 80076e8:	697b      	ldr	r3, [r7, #20]
 80076ea:	2b01      	cmp	r3, #1
 80076ec:	d056      	beq.n	800779c <HAL_RCC_GetSysClockFreq+0x1c0>
 80076ee:	e099      	b.n	8007824 <HAL_RCC_GetSysClockFreq+0x248>
      {
        switch (pllsource)
        {
          case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 80076f0:	4b6f      	ldr	r3, [pc, #444]	@ (80078b0 <HAL_RCC_GetSysClockFreq+0x2d4>)
 80076f2:	681b      	ldr	r3, [r3, #0]
 80076f4:	f003 0320 	and.w	r3, r3, #32
 80076f8:	2b00      	cmp	r3, #0
 80076fa:	d02d      	beq.n	8007758 <HAL_RCC_GetSysClockFreq+0x17c>
            {
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 80076fc:	4b6c      	ldr	r3, [pc, #432]	@ (80078b0 <HAL_RCC_GetSysClockFreq+0x2d4>)
 80076fe:	681b      	ldr	r3, [r3, #0]
 8007700:	08db      	lsrs	r3, r3, #3
 8007702:	f003 0303 	and.w	r3, r3, #3
 8007706:	4a6b      	ldr	r2, [pc, #428]	@ (80078b4 <HAL_RCC_GetSysClockFreq+0x2d8>)
 8007708:	fa22 f303 	lsr.w	r3, r2, r3
 800770c:	607b      	str	r3, [r7, #4]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 800770e:	687b      	ldr	r3, [r7, #4]
 8007710:	ee07 3a90 	vmov	s15, r3
 8007714:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007718:	693b      	ldr	r3, [r7, #16]
 800771a:	ee07 3a90 	vmov	s15, r3
 800771e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007722:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8007726:	4b62      	ldr	r3, [pc, #392]	@ (80078b0 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007728:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800772a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800772e:	ee07 3a90 	vmov	s15, r3
 8007732:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007736:	ed97 6a02 	vldr	s12, [r7, #8]
 800773a:	eddf 5a61 	vldr	s11, [pc, #388]	@ 80078c0 <HAL_RCC_GetSysClockFreq+0x2e4>
 800773e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8007742:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8007746:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800774a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800774e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007752:	edc7 7a07 	vstr	s15, [r7, #28]
            }
            else
            {
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            }
            break;
 8007756:	e087      	b.n	8007868 <HAL_RCC_GetSysClockFreq+0x28c>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8007758:	693b      	ldr	r3, [r7, #16]
 800775a:	ee07 3a90 	vmov	s15, r3
 800775e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8007762:	eddf 6a58 	vldr	s13, [pc, #352]	@ 80078c4 <HAL_RCC_GetSysClockFreq+0x2e8>
 8007766:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800776a:	4b51      	ldr	r3, [pc, #324]	@ (80078b0 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800776c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800776e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007772:	ee07 3a90 	vmov	s15, r3
 8007776:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800777a:	ed97 6a02 	vldr	s12, [r7, #8]
 800777e:	eddf 5a50 	vldr	s11, [pc, #320]	@ 80078c0 <HAL_RCC_GetSysClockFreq+0x2e4>
 8007782:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8007786:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800778a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800778e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8007792:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007796:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 800779a:	e065      	b.n	8007868 <HAL_RCC_GetSysClockFreq+0x28c>

          case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 800779c:	693b      	ldr	r3, [r7, #16]
 800779e:	ee07 3a90 	vmov	s15, r3
 80077a2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80077a6:	eddf 6a48 	vldr	s13, [pc, #288]	@ 80078c8 <HAL_RCC_GetSysClockFreq+0x2ec>
 80077aa:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80077ae:	4b40      	ldr	r3, [pc, #256]	@ (80078b0 <HAL_RCC_GetSysClockFreq+0x2d4>)
 80077b0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80077b2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80077b6:	ee07 3a90 	vmov	s15, r3
 80077ba:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80077be:	ed97 6a02 	vldr	s12, [r7, #8]
 80077c2:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 80078c0 <HAL_RCC_GetSysClockFreq+0x2e4>
 80077c6:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80077ca:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80077ce:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80077d2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80077d6:	ee67 7a27 	vmul.f32	s15, s14, s15
 80077da:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 80077de:	e043      	b.n	8007868 <HAL_RCC_GetSysClockFreq+0x28c>

          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 80077e0:	693b      	ldr	r3, [r7, #16]
 80077e2:	ee07 3a90 	vmov	s15, r3
 80077e6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80077ea:	eddf 6a38 	vldr	s13, [pc, #224]	@ 80078cc <HAL_RCC_GetSysClockFreq+0x2f0>
 80077ee:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80077f2:	4b2f      	ldr	r3, [pc, #188]	@ (80078b0 <HAL_RCC_GetSysClockFreq+0x2d4>)
 80077f4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80077f6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80077fa:	ee07 3a90 	vmov	s15, r3
 80077fe:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007802:	ed97 6a02 	vldr	s12, [r7, #8]
 8007806:	eddf 5a2e 	vldr	s11, [pc, #184]	@ 80078c0 <HAL_RCC_GetSysClockFreq+0x2e4>
 800780a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800780e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8007812:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8007816:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800781a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800781e:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 8007822:	e021      	b.n	8007868 <HAL_RCC_GetSysClockFreq+0x28c>

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8007824:	693b      	ldr	r3, [r7, #16]
 8007826:	ee07 3a90 	vmov	s15, r3
 800782a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800782e:	eddf 6a26 	vldr	s13, [pc, #152]	@ 80078c8 <HAL_RCC_GetSysClockFreq+0x2ec>
 8007832:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8007836:	4b1e      	ldr	r3, [pc, #120]	@ (80078b0 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8007838:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800783a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800783e:	ee07 3a90 	vmov	s15, r3
 8007842:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8007846:	ed97 6a02 	vldr	s12, [r7, #8]
 800784a:	eddf 5a1d 	vldr	s11, [pc, #116]	@ 80078c0 <HAL_RCC_GetSysClockFreq+0x2e4>
 800784e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8007852:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8007856:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800785a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800785e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8007862:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 8007866:	bf00      	nop
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
 8007868:	4b11      	ldr	r3, [pc, #68]	@ (80078b0 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800786a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800786c:	0a5b      	lsrs	r3, r3, #9
 800786e:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8007872:	3301      	adds	r3, #1
 8007874:	603b      	str	r3, [r7, #0]
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
 8007876:	683b      	ldr	r3, [r7, #0]
 8007878:	ee07 3a90 	vmov	s15, r3
 800787c:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8007880:	edd7 6a07 	vldr	s13, [r7, #28]
 8007884:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8007888:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800788c:	ee17 3a90 	vmov	r3, s15
 8007890:	61bb      	str	r3, [r7, #24]
      }
      else
      {
        sysclockfreq = 0U;
      }
      break;
 8007892:	e005      	b.n	80078a0 <HAL_RCC_GetSysClockFreq+0x2c4>
        sysclockfreq = 0U;
 8007894:	2300      	movs	r3, #0
 8007896:	61bb      	str	r3, [r7, #24]
      break;
 8007898:	e002      	b.n	80078a0 <HAL_RCC_GetSysClockFreq+0x2c4>

    default:
      sysclockfreq = CSI_VALUE;
 800789a:	4b07      	ldr	r3, [pc, #28]	@ (80078b8 <HAL_RCC_GetSysClockFreq+0x2dc>)
 800789c:	61bb      	str	r3, [r7, #24]
      break;
 800789e:	bf00      	nop
  }

  return sysclockfreq;
 80078a0:	69bb      	ldr	r3, [r7, #24]
}
 80078a2:	4618      	mov	r0, r3
 80078a4:	3724      	adds	r7, #36	@ 0x24
 80078a6:	46bd      	mov	sp, r7
 80078a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80078ac:	4770      	bx	lr
 80078ae:	bf00      	nop
 80078b0:	58024400 	.word	0x58024400
 80078b4:	03d09000 	.word	0x03d09000
 80078b8:	003d0900 	.word	0x003d0900
 80078bc:	017d7840 	.word	0x017d7840
 80078c0:	46000000 	.word	0x46000000
 80078c4:	4c742400 	.word	0x4c742400
 80078c8:	4a742400 	.word	0x4a742400
 80078cc:	4bbebc20 	.word	0x4bbebc20

080078d0 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemD2Clock CMSIS variable is used to store System domain2 Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 80078d0:	b580      	push	{r7, lr}
 80078d2:	b082      	sub	sp, #8
 80078d4:	af00      	add	r7, sp, #0
  uint32_t common_system_clock;

#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE) >> RCC_D1CFGR_D1CPRE_Pos] & 0x1FU);
 80078d6:	f7ff fe81 	bl	80075dc <HAL_RCC_GetSysClockFreq>
 80078da:	4602      	mov	r2, r0
 80078dc:	4b10      	ldr	r3, [pc, #64]	@ (8007920 <HAL_RCC_GetHCLKFreq+0x50>)
 80078de:	699b      	ldr	r3, [r3, #24]
 80078e0:	0a1b      	lsrs	r3, r3, #8
 80078e2:	f003 030f 	and.w	r3, r3, #15
 80078e6:	490f      	ldr	r1, [pc, #60]	@ (8007924 <HAL_RCC_GetHCLKFreq+0x54>)
 80078e8:	5ccb      	ldrb	r3, [r1, r3]
 80078ea:	f003 031f 	and.w	r3, r3, #31
 80078ee:	fa22 f303 	lsr.w	r3, r2, r3
 80078f2:	607b      	str	r3, [r7, #4]
#else
  common_system_clock = HAL_RCC_GetSysClockFreq() >> (D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE) >> RCC_CDCFGR1_CDCPRE_Pos] & 0x1FU);
#endif

#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE) >> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 80078f4:	4b0a      	ldr	r3, [pc, #40]	@ (8007920 <HAL_RCC_GetHCLKFreq+0x50>)
 80078f6:	699b      	ldr	r3, [r3, #24]
 80078f8:	f003 030f 	and.w	r3, r3, #15
 80078fc:	4a09      	ldr	r2, [pc, #36]	@ (8007924 <HAL_RCC_GetHCLKFreq+0x54>)
 80078fe:	5cd3      	ldrb	r3, [r2, r3]
 8007900:	f003 031f 	and.w	r3, r3, #31
 8007904:	687a      	ldr	r2, [r7, #4]
 8007906:	fa22 f303 	lsr.w	r3, r2, r3
 800790a:	4a07      	ldr	r2, [pc, #28]	@ (8007928 <HAL_RCC_GetHCLKFreq+0x58>)
 800790c:	6013      	str	r3, [r2, #0]
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
#else
  SystemCoreClock = common_system_clock;
 800790e:	4a07      	ldr	r2, [pc, #28]	@ (800792c <HAL_RCC_GetHCLKFreq+0x5c>)
 8007910:	687b      	ldr	r3, [r7, #4]
 8007912:	6013      	str	r3, [r2, #0]
#endif /* DUAL_CORE && CORE_CM4 */

  return SystemD2Clock;
 8007914:	4b04      	ldr	r3, [pc, #16]	@ (8007928 <HAL_RCC_GetHCLKFreq+0x58>)
 8007916:	681b      	ldr	r3, [r3, #0]
}
 8007918:	4618      	mov	r0, r3
 800791a:	3708      	adds	r7, #8
 800791c:	46bd      	mov	sp, r7
 800791e:	bd80      	pop	{r7, pc}
 8007920:	58024400 	.word	0x58024400
 8007924:	08027500 	.word	0x08027500
 8007928:	24000008 	.word	0x24000008
 800792c:	24000004 	.word	0x24000004

08007930 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8007930:	b580      	push	{r7, lr}
 8007932:	af00      	add	r7, sp, #0
#if defined (RCC_D2CFGR_D2PPRE1)
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE1) >> RCC_D2CFGR_D2PPRE1_Pos]) & 0x1FU));
 8007934:	f7ff ffcc 	bl	80078d0 <HAL_RCC_GetHCLKFreq>
 8007938:	4602      	mov	r2, r0
 800793a:	4b06      	ldr	r3, [pc, #24]	@ (8007954 <HAL_RCC_GetPCLK1Freq+0x24>)
 800793c:	69db      	ldr	r3, [r3, #28]
 800793e:	091b      	lsrs	r3, r3, #4
 8007940:	f003 0307 	and.w	r3, r3, #7
 8007944:	4904      	ldr	r1, [pc, #16]	@ (8007958 <HAL_RCC_GetPCLK1Freq+0x28>)
 8007946:	5ccb      	ldrb	r3, [r1, r3]
 8007948:	f003 031f 	and.w	r3, r3, #31
 800794c:	fa22 f303 	lsr.w	r3, r2, r3
#else
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE1) >> RCC_CDCFGR2_CDPPRE1_Pos]) & 0x1FU));
#endif
}
 8007950:	4618      	mov	r0, r3
 8007952:	bd80      	pop	{r7, pc}
 8007954:	58024400 	.word	0x58024400
 8007958:	08027500 	.word	0x08027500

0800795c <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 800795c:	b580      	push	{r7, lr}
 800795e:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
#if defined(RCC_D2CFGR_D2PPRE2)
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->D2CFGR & RCC_D2CFGR_D2PPRE2) >> RCC_D2CFGR_D2PPRE2_Pos]) & 0x1FU));
 8007960:	f7ff ffb6 	bl	80078d0 <HAL_RCC_GetHCLKFreq>
 8007964:	4602      	mov	r2, r0
 8007966:	4b06      	ldr	r3, [pc, #24]	@ (8007980 <HAL_RCC_GetPCLK2Freq+0x24>)
 8007968:	69db      	ldr	r3, [r3, #28]
 800796a:	0a1b      	lsrs	r3, r3, #8
 800796c:	f003 0307 	and.w	r3, r3, #7
 8007970:	4904      	ldr	r1, [pc, #16]	@ (8007984 <HAL_RCC_GetPCLK2Freq+0x28>)
 8007972:	5ccb      	ldrb	r3, [r1, r3]
 8007974:	f003 031f 	and.w	r3, r3, #31
 8007978:	fa22 f303 	lsr.w	r3, r2, r3
#else
  return (HAL_RCC_GetHCLKFreq() >> ((D1CorePrescTable[(RCC->CDCFGR2 & RCC_CDCFGR2_CDPPRE2) >> RCC_CDCFGR2_CDPPRE2_Pos]) & 0x1FU));
#endif
}
 800797c:	4618      	mov	r0, r3
 800797e:	bd80      	pop	{r7, pc}
 8007980:	58024400 	.word	0x58024400
 8007984:	08027500 	.word	0x08027500

08007988 <HAL_RCCEx_PeriphCLKConfig>:
  * (*) : Available on some STM32H7 lines only.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8007988:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800798c:	b0c6      	sub	sp, #280	@ 0x118
 800798e:	af00      	add	r7, sp, #0
 8007990:	f8c7 0104 	str.w	r0, [r7, #260]	@ 0x104
  uint32_t tmpreg;
  uint32_t tickstart;
  HAL_StatusTypeDef ret = HAL_OK;      /* Intermediate status */
 8007994:	2300      	movs	r3, #0
 8007996:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
  HAL_StatusTypeDef status = HAL_OK;   /* Final status */
 800799a:	2300      	movs	r3, #0
 800799c:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116

  /*---------------------------- SPDIFRX configuration -------------------------------*/

  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPDIFRX) == RCC_PERIPHCLK_SPDIFRX)
 80079a0:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80079a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80079a8:	f002 6400 	and.w	r4, r2, #134217728	@ 0x8000000
 80079ac:	2500      	movs	r5, #0
 80079ae:	ea54 0305 	orrs.w	r3, r4, r5
 80079b2:	d049      	beq.n	8007a48 <HAL_RCCEx_PeriphCLKConfig+0xc0>
  {

    switch (PeriphClkInit->SpdifrxClockSelection)
 80079b4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80079b8:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 80079ba:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 80079be:	d02f      	beq.n	8007a20 <HAL_RCCEx_PeriphCLKConfig+0x98>
 80079c0:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 80079c4:	d828      	bhi.n	8007a18 <HAL_RCCEx_PeriphCLKConfig+0x90>
 80079c6:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 80079ca:	d01a      	beq.n	8007a02 <HAL_RCCEx_PeriphCLKConfig+0x7a>
 80079cc:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 80079d0:	d822      	bhi.n	8007a18 <HAL_RCCEx_PeriphCLKConfig+0x90>
 80079d2:	2b00      	cmp	r3, #0
 80079d4:	d003      	beq.n	80079de <HAL_RCCEx_PeriphCLKConfig+0x56>
 80079d6:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 80079da:	d007      	beq.n	80079ec <HAL_RCCEx_PeriphCLKConfig+0x64>
 80079dc:	e01c      	b.n	8007a18 <HAL_RCCEx_PeriphCLKConfig+0x90>
    {
      case RCC_SPDIFRXCLKSOURCE_PLL:      /* PLL is used as clock source for SPDIFRX*/
        /* Enable PLL1Q Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80079de:	4bab      	ldr	r3, [pc, #684]	@ (8007c8c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 80079e0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80079e2:	4aaa      	ldr	r2, [pc, #680]	@ (8007c8c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 80079e4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80079e8:	62d3      	str	r3, [r2, #44]	@ 0x2c

        /* SPDIFRX clock source configuration done later after clock selection check */
        break;
 80079ea:	e01a      	b.n	8007a22 <HAL_RCCEx_PeriphCLKConfig+0x9a>

      case RCC_SPDIFRXCLKSOURCE_PLL2: /* PLL2 is used as clock source for SPDIFRX*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 80079ec:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80079f0:	3308      	adds	r3, #8
 80079f2:	2102      	movs	r1, #2
 80079f4:	4618      	mov	r0, r3
 80079f6:	f001 fc25 	bl	8009244 <RCCEx_PLL2_Config>
 80079fa:	4603      	mov	r3, r0
 80079fc:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117

        /* SPDIFRX clock source configuration done later after clock selection check */
        break;
 8007a00:	e00f      	b.n	8007a22 <HAL_RCCEx_PeriphCLKConfig+0x9a>

      case RCC_SPDIFRXCLKSOURCE_PLL3:  /* PLL3 is used as clock source for SPDIFRX*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8007a02:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007a06:	3328      	adds	r3, #40	@ 0x28
 8007a08:	2102      	movs	r1, #2
 8007a0a:	4618      	mov	r0, r3
 8007a0c:	f001 fccc 	bl	80093a8 <RCCEx_PLL3_Config>
 8007a10:	4603      	mov	r3, r0
 8007a12:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117

        /* SPDIFRX clock source configuration done later after clock selection check */
        break;
 8007a16:	e004      	b.n	8007a22 <HAL_RCCEx_PeriphCLKConfig+0x9a>
        /* Internal OSC clock is used as source of SPDIFRX clock*/
        /* SPDIFRX clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8007a18:	2301      	movs	r3, #1
 8007a1a:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
        break;
 8007a1e:	e000      	b.n	8007a22 <HAL_RCCEx_PeriphCLKConfig+0x9a>
        break;
 8007a20:	bf00      	nop
    }

    if (ret == HAL_OK)
 8007a22:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8007a26:	2b00      	cmp	r3, #0
 8007a28:	d10a      	bne.n	8007a40 <HAL_RCCEx_PeriphCLKConfig+0xb8>
    {
      /* Set the source of SPDIFRX clock*/
      __HAL_RCC_SPDIFRX_CONFIG(PeriphClkInit->SpdifrxClockSelection);
 8007a2a:	4b98      	ldr	r3, [pc, #608]	@ (8007c8c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007a2c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8007a2e:	f423 1140 	bic.w	r1, r3, #3145728	@ 0x300000
 8007a32:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007a36:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 8007a38:	4a94      	ldr	r2, [pc, #592]	@ (8007c8c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007a3a:	430b      	orrs	r3, r1
 8007a3c:	6513      	str	r3, [r2, #80]	@ 0x50
 8007a3e:	e003      	b.n	8007a48 <HAL_RCCEx_PeriphCLKConfig+0xc0>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8007a40:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8007a44:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
    }
  }

  /*---------------------------- SAI1 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI1) == RCC_PERIPHCLK_SAI1)
 8007a48:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007a4c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007a50:	f402 7880 	and.w	r8, r2, #256	@ 0x100
 8007a54:	f04f 0900 	mov.w	r9, #0
 8007a58:	ea58 0309 	orrs.w	r3, r8, r9
 8007a5c:	d047      	beq.n	8007aee <HAL_RCCEx_PeriphCLKConfig+0x166>
  {
    switch (PeriphClkInit->Sai1ClockSelection)
 8007a5e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007a62:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8007a64:	2b04      	cmp	r3, #4
 8007a66:	d82a      	bhi.n	8007abe <HAL_RCCEx_PeriphCLKConfig+0x136>
 8007a68:	a201      	add	r2, pc, #4	@ (adr r2, 8007a70 <HAL_RCCEx_PeriphCLKConfig+0xe8>)
 8007a6a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8007a6e:	bf00      	nop
 8007a70:	08007a85 	.word	0x08007a85
 8007a74:	08007a93 	.word	0x08007a93
 8007a78:	08007aa9 	.word	0x08007aa9
 8007a7c:	08007ac7 	.word	0x08007ac7
 8007a80:	08007ac7 	.word	0x08007ac7
    {
      case RCC_SAI1CLKSOURCE_PLL:      /* PLL is used as clock source for SAI1*/
        /* Enable SAI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007a84:	4b81      	ldr	r3, [pc, #516]	@ (8007c8c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007a86:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007a88:	4a80      	ldr	r2, [pc, #512]	@ (8007c8c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007a8a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8007a8e:	62d3      	str	r3, [r2, #44]	@ 0x2c

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 8007a90:	e01a      	b.n	8007ac8 <HAL_RCCEx_PeriphCLKConfig+0x140>

      case RCC_SAI1CLKSOURCE_PLL2: /* PLL2 is used as clock source for SAI1*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8007a92:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007a96:	3308      	adds	r3, #8
 8007a98:	2100      	movs	r1, #0
 8007a9a:	4618      	mov	r0, r3
 8007a9c:	f001 fbd2 	bl	8009244 <RCCEx_PLL2_Config>
 8007aa0:	4603      	mov	r3, r0
 8007aa2:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 8007aa6:	e00f      	b.n	8007ac8 <HAL_RCCEx_PeriphCLKConfig+0x140>

      case RCC_SAI1CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SAI1*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8007aa8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007aac:	3328      	adds	r3, #40	@ 0x28
 8007aae:	2100      	movs	r1, #0
 8007ab0:	4618      	mov	r0, r3
 8007ab2:	f001 fc79 	bl	80093a8 <RCCEx_PLL3_Config>
 8007ab6:	4603      	mov	r3, r0
 8007ab8:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 8007abc:	e004      	b.n	8007ac8 <HAL_RCCEx_PeriphCLKConfig+0x140>
        /* HSI, HSE, or CSI oscillator is used as source of SAI1 clock */
        /* SAI1 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8007abe:	2301      	movs	r3, #1
 8007ac0:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
        break;
 8007ac4:	e000      	b.n	8007ac8 <HAL_RCCEx_PeriphCLKConfig+0x140>
        break;
 8007ac6:	bf00      	nop
    }

    if (ret == HAL_OK)
 8007ac8:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8007acc:	2b00      	cmp	r3, #0
 8007ace:	d10a      	bne.n	8007ae6 <HAL_RCCEx_PeriphCLKConfig+0x15e>
    {
      /* Set the source of SAI1 clock*/
      __HAL_RCC_SAI1_CONFIG(PeriphClkInit->Sai1ClockSelection);
 8007ad0:	4b6e      	ldr	r3, [pc, #440]	@ (8007c8c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007ad2:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8007ad4:	f023 0107 	bic.w	r1, r3, #7
 8007ad8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007adc:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8007ade:	4a6b      	ldr	r2, [pc, #428]	@ (8007c8c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007ae0:	430b      	orrs	r3, r1
 8007ae2:	6513      	str	r3, [r2, #80]	@ 0x50
 8007ae4:	e003      	b.n	8007aee <HAL_RCCEx_PeriphCLKConfig+0x166>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8007ae6:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8007aea:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
  }
#endif  /*SAI2B*/

#if defined(SAI4)
  /*---------------------------- SAI4A configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4A) == RCC_PERIPHCLK_SAI4A)
 8007aee:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007af2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007af6:	f402 6a80 	and.w	sl, r2, #1024	@ 0x400
 8007afa:	f04f 0b00 	mov.w	fp, #0
 8007afe:	ea5a 030b 	orrs.w	r3, sl, fp
 8007b02:	d05b      	beq.n	8007bbc <HAL_RCCEx_PeriphCLKConfig+0x234>
  {
    switch (PeriphClkInit->Sai4AClockSelection)
 8007b04:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007b08:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 8007b0c:	f5b3 0f20 	cmp.w	r3, #10485760	@ 0xa00000
 8007b10:	d03b      	beq.n	8007b8a <HAL_RCCEx_PeriphCLKConfig+0x202>
 8007b12:	f5b3 0f20 	cmp.w	r3, #10485760	@ 0xa00000
 8007b16:	d834      	bhi.n	8007b82 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 8007b18:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8007b1c:	d037      	beq.n	8007b8e <HAL_RCCEx_PeriphCLKConfig+0x206>
 8007b1e:	f5b3 0f00 	cmp.w	r3, #8388608	@ 0x800000
 8007b22:	d82e      	bhi.n	8007b82 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 8007b24:	f5b3 0fc0 	cmp.w	r3, #6291456	@ 0x600000
 8007b28:	d033      	beq.n	8007b92 <HAL_RCCEx_PeriphCLKConfig+0x20a>
 8007b2a:	f5b3 0fc0 	cmp.w	r3, #6291456	@ 0x600000
 8007b2e:	d828      	bhi.n	8007b82 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 8007b30:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8007b34:	d01a      	beq.n	8007b6c <HAL_RCCEx_PeriphCLKConfig+0x1e4>
 8007b36:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8007b3a:	d822      	bhi.n	8007b82 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 8007b3c:	2b00      	cmp	r3, #0
 8007b3e:	d003      	beq.n	8007b48 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
 8007b40:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 8007b44:	d007      	beq.n	8007b56 <HAL_RCCEx_PeriphCLKConfig+0x1ce>
 8007b46:	e01c      	b.n	8007b82 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
    {
      case RCC_SAI4ACLKSOURCE_PLL:      /* PLL is used as clock source for SAI2*/
        /* Enable SAI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007b48:	4b50      	ldr	r3, [pc, #320]	@ (8007c8c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007b4a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007b4c:	4a4f      	ldr	r2, [pc, #316]	@ (8007c8c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007b4e:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8007b52:	62d3      	str	r3, [r2, #44]	@ 0x2c

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 8007b54:	e01e      	b.n	8007b94 <HAL_RCCEx_PeriphCLKConfig+0x20c>

      case RCC_SAI4ACLKSOURCE_PLL2: /* PLL2 is used as clock source for SAI2*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8007b56:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007b5a:	3308      	adds	r3, #8
 8007b5c:	2100      	movs	r1, #0
 8007b5e:	4618      	mov	r0, r3
 8007b60:	f001 fb70 	bl	8009244 <RCCEx_PLL2_Config>
 8007b64:	4603      	mov	r3, r0
 8007b66:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117

        /* SAI2 clock source configuration done later after clock selection check */
        break;
 8007b6a:	e013      	b.n	8007b94 <HAL_RCCEx_PeriphCLKConfig+0x20c>

      case RCC_SAI4ACLKSOURCE_PLL3:  /* PLL3 is used as clock source for SAI2*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8007b6c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007b70:	3328      	adds	r3, #40	@ 0x28
 8007b72:	2100      	movs	r1, #0
 8007b74:	4618      	mov	r0, r3
 8007b76:	f001 fc17 	bl	80093a8 <RCCEx_PLL3_Config>
 8007b7a:	4603      	mov	r3, r0
 8007b7c:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 8007b80:	e008      	b.n	8007b94 <HAL_RCCEx_PeriphCLKConfig+0x20c>
        /* SAI4A clock source configuration done later after clock selection check */
        break;
#endif /* RCC_VER_3_0 */

      default:
        ret = HAL_ERROR;
 8007b82:	2301      	movs	r3, #1
 8007b84:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
        break;
 8007b88:	e004      	b.n	8007b94 <HAL_RCCEx_PeriphCLKConfig+0x20c>
        break;
 8007b8a:	bf00      	nop
 8007b8c:	e002      	b.n	8007b94 <HAL_RCCEx_PeriphCLKConfig+0x20c>
        break;
 8007b8e:	bf00      	nop
 8007b90:	e000      	b.n	8007b94 <HAL_RCCEx_PeriphCLKConfig+0x20c>
        break;
 8007b92:	bf00      	nop
    }

    if (ret == HAL_OK)
 8007b94:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8007b98:	2b00      	cmp	r3, #0
 8007b9a:	d10b      	bne.n	8007bb4 <HAL_RCCEx_PeriphCLKConfig+0x22c>
    {
      /* Set the source of SAI4A clock*/
      __HAL_RCC_SAI4A_CONFIG(PeriphClkInit->Sai4AClockSelection);
 8007b9c:	4b3b      	ldr	r3, [pc, #236]	@ (8007c8c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007b9e:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8007ba0:	f423 0160 	bic.w	r1, r3, #14680064	@ 0xe00000
 8007ba4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007ba8:	f8d3 30a4 	ldr.w	r3, [r3, #164]	@ 0xa4
 8007bac:	4a37      	ldr	r2, [pc, #220]	@ (8007c8c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007bae:	430b      	orrs	r3, r1
 8007bb0:	6593      	str	r3, [r2, #88]	@ 0x58
 8007bb2:	e003      	b.n	8007bbc <HAL_RCCEx_PeriphCLKConfig+0x234>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8007bb4:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8007bb8:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
    }
  }
  /*---------------------------- SAI4B configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI4B) == RCC_PERIPHCLK_SAI4B)
 8007bbc:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007bc0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007bc4:	f402 6300 	and.w	r3, r2, #2048	@ 0x800
 8007bc8:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8007bcc:	2300      	movs	r3, #0
 8007bce:	f8c7 30fc 	str.w	r3, [r7, #252]	@ 0xfc
 8007bd2:	e9d7 123e 	ldrd	r1, r2, [r7, #248]	@ 0xf8
 8007bd6:	460b      	mov	r3, r1
 8007bd8:	4313      	orrs	r3, r2
 8007bda:	d05d      	beq.n	8007c98 <HAL_RCCEx_PeriphCLKConfig+0x310>
  {
    switch (PeriphClkInit->Sai4BClockSelection)
 8007bdc:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007be0:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8007be4:	f1b3 6fa0 	cmp.w	r3, #83886080	@ 0x5000000
 8007be8:	d03b      	beq.n	8007c62 <HAL_RCCEx_PeriphCLKConfig+0x2da>
 8007bea:	f1b3 6fa0 	cmp.w	r3, #83886080	@ 0x5000000
 8007bee:	d834      	bhi.n	8007c5a <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 8007bf0:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 8007bf4:	d037      	beq.n	8007c66 <HAL_RCCEx_PeriphCLKConfig+0x2de>
 8007bf6:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 8007bfa:	d82e      	bhi.n	8007c5a <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 8007bfc:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 8007c00:	d033      	beq.n	8007c6a <HAL_RCCEx_PeriphCLKConfig+0x2e2>
 8007c02:	f1b3 7f40 	cmp.w	r3, #50331648	@ 0x3000000
 8007c06:	d828      	bhi.n	8007c5a <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 8007c08:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8007c0c:	d01a      	beq.n	8007c44 <HAL_RCCEx_PeriphCLKConfig+0x2bc>
 8007c0e:	f1b3 7f00 	cmp.w	r3, #33554432	@ 0x2000000
 8007c12:	d822      	bhi.n	8007c5a <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 8007c14:	2b00      	cmp	r3, #0
 8007c16:	d003      	beq.n	8007c20 <HAL_RCCEx_PeriphCLKConfig+0x298>
 8007c18:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8007c1c:	d007      	beq.n	8007c2e <HAL_RCCEx_PeriphCLKConfig+0x2a6>
 8007c1e:	e01c      	b.n	8007c5a <HAL_RCCEx_PeriphCLKConfig+0x2d2>
    {
      case RCC_SAI4BCLKSOURCE_PLL:      /* PLL is used as clock source for SAI2*/
        /* Enable SAI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007c20:	4b1a      	ldr	r3, [pc, #104]	@ (8007c8c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007c22:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007c24:	4a19      	ldr	r2, [pc, #100]	@ (8007c8c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007c26:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8007c2a:	62d3      	str	r3, [r2, #44]	@ 0x2c

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 8007c2c:	e01e      	b.n	8007c6c <HAL_RCCEx_PeriphCLKConfig+0x2e4>

      case RCC_SAI4BCLKSOURCE_PLL2: /* PLL2 is used as clock source for SAI2*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8007c2e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007c32:	3308      	adds	r3, #8
 8007c34:	2100      	movs	r1, #0
 8007c36:	4618      	mov	r0, r3
 8007c38:	f001 fb04 	bl	8009244 <RCCEx_PLL2_Config>
 8007c3c:	4603      	mov	r3, r0
 8007c3e:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117

        /* SAI2 clock source configuration done later after clock selection check */
        break;
 8007c42:	e013      	b.n	8007c6c <HAL_RCCEx_PeriphCLKConfig+0x2e4>

      case RCC_SAI4BCLKSOURCE_PLL3:  /* PLL3 is used as clock source for SAI2*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8007c44:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007c48:	3328      	adds	r3, #40	@ 0x28
 8007c4a:	2100      	movs	r1, #0
 8007c4c:	4618      	mov	r0, r3
 8007c4e:	f001 fbab 	bl	80093a8 <RCCEx_PLL3_Config>
 8007c52:	4603      	mov	r3, r0
 8007c54:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117

        /* SAI1 clock source configuration done later after clock selection check */
        break;
 8007c58:	e008      	b.n	8007c6c <HAL_RCCEx_PeriphCLKConfig+0x2e4>
        /* SAI4B clock source configuration done later after clock selection check */
        break;
#endif /* RCC_VER_3_0 */

      default:
        ret = HAL_ERROR;
 8007c5a:	2301      	movs	r3, #1
 8007c5c:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
        break;
 8007c60:	e004      	b.n	8007c6c <HAL_RCCEx_PeriphCLKConfig+0x2e4>
        break;
 8007c62:	bf00      	nop
 8007c64:	e002      	b.n	8007c6c <HAL_RCCEx_PeriphCLKConfig+0x2e4>
        break;
 8007c66:	bf00      	nop
 8007c68:	e000      	b.n	8007c6c <HAL_RCCEx_PeriphCLKConfig+0x2e4>
        break;
 8007c6a:	bf00      	nop
    }

    if (ret == HAL_OK)
 8007c6c:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8007c70:	2b00      	cmp	r3, #0
 8007c72:	d10d      	bne.n	8007c90 <HAL_RCCEx_PeriphCLKConfig+0x308>
    {
      /* Set the source of SAI4B clock*/
      __HAL_RCC_SAI4B_CONFIG(PeriphClkInit->Sai4BClockSelection);
 8007c74:	4b05      	ldr	r3, [pc, #20]	@ (8007c8c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007c76:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8007c78:	f023 61e0 	bic.w	r1, r3, #117440512	@ 0x7000000
 8007c7c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007c80:	f8d3 30a8 	ldr.w	r3, [r3, #168]	@ 0xa8
 8007c84:	4a01      	ldr	r2, [pc, #4]	@ (8007c8c <HAL_RCCEx_PeriphCLKConfig+0x304>)
 8007c86:	430b      	orrs	r3, r1
 8007c88:	6593      	str	r3, [r2, #88]	@ 0x58
 8007c8a:	e005      	b.n	8007c98 <HAL_RCCEx_PeriphCLKConfig+0x310>
 8007c8c:	58024400 	.word	0x58024400
    }
    else
    {
      /* set overall return value */
      status = ret;
 8007c90:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8007c94:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
  }
#endif  /*QUADSPI*/

#if defined(OCTOSPI1) || defined(OCTOSPI2)
  /*---------------------------- OCTOSPI configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_OSPI) == RCC_PERIPHCLK_OSPI)
 8007c98:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007c9c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007ca0:	f002 7300 	and.w	r3, r2, #33554432	@ 0x2000000
 8007ca4:	f8c7 30f0 	str.w	r3, [r7, #240]	@ 0xf0
 8007ca8:	2300      	movs	r3, #0
 8007caa:	f8c7 30f4 	str.w	r3, [r7, #244]	@ 0xf4
 8007cae:	e9d7 123c 	ldrd	r1, r2, [r7, #240]	@ 0xf0
 8007cb2:	460b      	mov	r3, r1
 8007cb4:	4313      	orrs	r3, r2
 8007cb6:	d03a      	beq.n	8007d2e <HAL_RCCEx_PeriphCLKConfig+0x3a6>
  {
    switch (PeriphClkInit->OspiClockSelection)
 8007cb8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007cbc:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8007cbe:	2b30      	cmp	r3, #48	@ 0x30
 8007cc0:	d01f      	beq.n	8007d02 <HAL_RCCEx_PeriphCLKConfig+0x37a>
 8007cc2:	2b30      	cmp	r3, #48	@ 0x30
 8007cc4:	d819      	bhi.n	8007cfa <HAL_RCCEx_PeriphCLKConfig+0x372>
 8007cc6:	2b20      	cmp	r3, #32
 8007cc8:	d00c      	beq.n	8007ce4 <HAL_RCCEx_PeriphCLKConfig+0x35c>
 8007cca:	2b20      	cmp	r3, #32
 8007ccc:	d815      	bhi.n	8007cfa <HAL_RCCEx_PeriphCLKConfig+0x372>
 8007cce:	2b00      	cmp	r3, #0
 8007cd0:	d019      	beq.n	8007d06 <HAL_RCCEx_PeriphCLKConfig+0x37e>
 8007cd2:	2b10      	cmp	r3, #16
 8007cd4:	d111      	bne.n	8007cfa <HAL_RCCEx_PeriphCLKConfig+0x372>
    {
      case RCC_OSPICLKSOURCE_PLL:      /* PLL is used as clock source for OSPI*/
        /* Enable OSPI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007cd6:	4baa      	ldr	r3, [pc, #680]	@ (8007f80 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8007cd8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007cda:	4aa9      	ldr	r2, [pc, #676]	@ (8007f80 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8007cdc:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8007ce0:	62d3      	str	r3, [r2, #44]	@ 0x2c

        /* OSPI clock source configuration done later after clock selection check */
        break;
 8007ce2:	e011      	b.n	8007d08 <HAL_RCCEx_PeriphCLKConfig+0x380>

      case RCC_OSPICLKSOURCE_PLL2: /* PLL2 is used as clock source for OSPI*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8007ce4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007ce8:	3308      	adds	r3, #8
 8007cea:	2102      	movs	r1, #2
 8007cec:	4618      	mov	r0, r3
 8007cee:	f001 faa9 	bl	8009244 <RCCEx_PLL2_Config>
 8007cf2:	4603      	mov	r3, r0
 8007cf4:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117

        /* OSPI clock source configuration done later after clock selection check */
        break;
 8007cf8:	e006      	b.n	8007d08 <HAL_RCCEx_PeriphCLKConfig+0x380>
      case RCC_OSPICLKSOURCE_HCLK:
        /* HCLK clock selected as OSPI kernel peripheral clock */
        break;

      default:
        ret = HAL_ERROR;
 8007cfa:	2301      	movs	r3, #1
 8007cfc:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
        break;
 8007d00:	e002      	b.n	8007d08 <HAL_RCCEx_PeriphCLKConfig+0x380>
        break;
 8007d02:	bf00      	nop
 8007d04:	e000      	b.n	8007d08 <HAL_RCCEx_PeriphCLKConfig+0x380>
        break;
 8007d06:	bf00      	nop
    }

    if (ret == HAL_OK)
 8007d08:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8007d0c:	2b00      	cmp	r3, #0
 8007d0e:	d10a      	bne.n	8007d26 <HAL_RCCEx_PeriphCLKConfig+0x39e>
    {
      /* Set the source of OSPI clock*/
      __HAL_RCC_OSPI_CONFIG(PeriphClkInit->OspiClockSelection);
 8007d10:	4b9b      	ldr	r3, [pc, #620]	@ (8007f80 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8007d12:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8007d14:	f023 0130 	bic.w	r1, r3, #48	@ 0x30
 8007d18:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007d1c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8007d1e:	4a98      	ldr	r2, [pc, #608]	@ (8007f80 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8007d20:	430b      	orrs	r3, r1
 8007d22:	64d3      	str	r3, [r2, #76]	@ 0x4c
 8007d24:	e003      	b.n	8007d2e <HAL_RCCEx_PeriphCLKConfig+0x3a6>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8007d26:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8007d2a:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
    }
  }
#endif  /*OCTOSPI*/

  /*---------------------------- SPI1/2/3 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI123) == RCC_PERIPHCLK_SPI123)
 8007d2e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007d32:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007d36:	f402 5380 	and.w	r3, r2, #4096	@ 0x1000
 8007d3a:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 8007d3e:	2300      	movs	r3, #0
 8007d40:	f8c7 30ec 	str.w	r3, [r7, #236]	@ 0xec
 8007d44:	e9d7 123a 	ldrd	r1, r2, [r7, #232]	@ 0xe8
 8007d48:	460b      	mov	r3, r1
 8007d4a:	4313      	orrs	r3, r2
 8007d4c:	d051      	beq.n	8007df2 <HAL_RCCEx_PeriphCLKConfig+0x46a>
  {
    switch (PeriphClkInit->Spi123ClockSelection)
 8007d4e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007d52:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8007d54:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8007d58:	d035      	beq.n	8007dc6 <HAL_RCCEx_PeriphCLKConfig+0x43e>
 8007d5a:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8007d5e:	d82e      	bhi.n	8007dbe <HAL_RCCEx_PeriphCLKConfig+0x436>
 8007d60:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 8007d64:	d031      	beq.n	8007dca <HAL_RCCEx_PeriphCLKConfig+0x442>
 8007d66:	f5b3 5f40 	cmp.w	r3, #12288	@ 0x3000
 8007d6a:	d828      	bhi.n	8007dbe <HAL_RCCEx_PeriphCLKConfig+0x436>
 8007d6c:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8007d70:	d01a      	beq.n	8007da8 <HAL_RCCEx_PeriphCLKConfig+0x420>
 8007d72:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8007d76:	d822      	bhi.n	8007dbe <HAL_RCCEx_PeriphCLKConfig+0x436>
 8007d78:	2b00      	cmp	r3, #0
 8007d7a:	d003      	beq.n	8007d84 <HAL_RCCEx_PeriphCLKConfig+0x3fc>
 8007d7c:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8007d80:	d007      	beq.n	8007d92 <HAL_RCCEx_PeriphCLKConfig+0x40a>
 8007d82:	e01c      	b.n	8007dbe <HAL_RCCEx_PeriphCLKConfig+0x436>
    {
      case RCC_SPI123CLKSOURCE_PLL:      /* PLL is used as clock source for SPI1/2/3 */
        /* Enable SPI Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007d84:	4b7e      	ldr	r3, [pc, #504]	@ (8007f80 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8007d86:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007d88:	4a7d      	ldr	r2, [pc, #500]	@ (8007f80 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8007d8a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8007d8e:	62d3      	str	r3, [r2, #44]	@ 0x2c

        /* SPI1/2/3 clock source configuration done later after clock selection check */
        break;
 8007d90:	e01c      	b.n	8007dcc <HAL_RCCEx_PeriphCLKConfig+0x444>

      case RCC_SPI123CLKSOURCE_PLL2: /* PLL2 is used as clock source for SPI1/2/3 */
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8007d92:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007d96:	3308      	adds	r3, #8
 8007d98:	2100      	movs	r1, #0
 8007d9a:	4618      	mov	r0, r3
 8007d9c:	f001 fa52 	bl	8009244 <RCCEx_PLL2_Config>
 8007da0:	4603      	mov	r3, r0
 8007da2:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117

        /* SPI1/2/3 clock source configuration done later after clock selection check */
        break;
 8007da6:	e011      	b.n	8007dcc <HAL_RCCEx_PeriphCLKConfig+0x444>

      case RCC_SPI123CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SPI1/2/3 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8007da8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007dac:	3328      	adds	r3, #40	@ 0x28
 8007dae:	2100      	movs	r1, #0
 8007db0:	4618      	mov	r0, r3
 8007db2:	f001 faf9 	bl	80093a8 <RCCEx_PLL3_Config>
 8007db6:	4603      	mov	r3, r0
 8007db8:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117

        /* SPI1/2/3 clock source configuration done later after clock selection check */
        break;
 8007dbc:	e006      	b.n	8007dcc <HAL_RCCEx_PeriphCLKConfig+0x444>
        /* HSI, HSE, or CSI oscillator is used as source of SPI1/2/3 clock */
        /* SPI1/2/3 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8007dbe:	2301      	movs	r3, #1
 8007dc0:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
        break;
 8007dc4:	e002      	b.n	8007dcc <HAL_RCCEx_PeriphCLKConfig+0x444>
        break;
 8007dc6:	bf00      	nop
 8007dc8:	e000      	b.n	8007dcc <HAL_RCCEx_PeriphCLKConfig+0x444>
        break;
 8007dca:	bf00      	nop
    }

    if (ret == HAL_OK)
 8007dcc:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8007dd0:	2b00      	cmp	r3, #0
 8007dd2:	d10a      	bne.n	8007dea <HAL_RCCEx_PeriphCLKConfig+0x462>
    {
      /* Set the source of SPI1/2/3 clock*/
      __HAL_RCC_SPI123_CONFIG(PeriphClkInit->Spi123ClockSelection);
 8007dd4:	4b6a      	ldr	r3, [pc, #424]	@ (8007f80 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8007dd6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8007dd8:	f423 41e0 	bic.w	r1, r3, #28672	@ 0x7000
 8007ddc:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007de0:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8007de2:	4a67      	ldr	r2, [pc, #412]	@ (8007f80 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8007de4:	430b      	orrs	r3, r1
 8007de6:	6513      	str	r3, [r2, #80]	@ 0x50
 8007de8:	e003      	b.n	8007df2 <HAL_RCCEx_PeriphCLKConfig+0x46a>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8007dea:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8007dee:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
    }
  }

  /*---------------------------- SPI4/5 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI45) == RCC_PERIPHCLK_SPI45)
 8007df2:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007df6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007dfa:	f402 5300 	and.w	r3, r2, #8192	@ 0x2000
 8007dfe:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8007e02:	2300      	movs	r3, #0
 8007e04:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 8007e08:	e9d7 1238 	ldrd	r1, r2, [r7, #224]	@ 0xe0
 8007e0c:	460b      	mov	r3, r1
 8007e0e:	4313      	orrs	r3, r2
 8007e10:	d053      	beq.n	8007eba <HAL_RCCEx_PeriphCLKConfig+0x532>
  {
    switch (PeriphClkInit->Spi45ClockSelection)
 8007e12:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007e16:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8007e18:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8007e1c:	d033      	beq.n	8007e86 <HAL_RCCEx_PeriphCLKConfig+0x4fe>
 8007e1e:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8007e22:	d82c      	bhi.n	8007e7e <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 8007e24:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8007e28:	d02f      	beq.n	8007e8a <HAL_RCCEx_PeriphCLKConfig+0x502>
 8007e2a:	f5b3 2f80 	cmp.w	r3, #262144	@ 0x40000
 8007e2e:	d826      	bhi.n	8007e7e <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 8007e30:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 8007e34:	d02b      	beq.n	8007e8e <HAL_RCCEx_PeriphCLKConfig+0x506>
 8007e36:	f5b3 3f40 	cmp.w	r3, #196608	@ 0x30000
 8007e3a:	d820      	bhi.n	8007e7e <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 8007e3c:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8007e40:	d012      	beq.n	8007e68 <HAL_RCCEx_PeriphCLKConfig+0x4e0>
 8007e42:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 8007e46:	d81a      	bhi.n	8007e7e <HAL_RCCEx_PeriphCLKConfig+0x4f6>
 8007e48:	2b00      	cmp	r3, #0
 8007e4a:	d022      	beq.n	8007e92 <HAL_RCCEx_PeriphCLKConfig+0x50a>
 8007e4c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8007e50:	d115      	bne.n	8007e7e <HAL_RCCEx_PeriphCLKConfig+0x4f6>
        /* SPI4/5 clock source configuration done later after clock selection check */
        break;

      case RCC_SPI45CLKSOURCE_PLL2: /* PLL2 is used as clock source for SPI4/5 */

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8007e52:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007e56:	3308      	adds	r3, #8
 8007e58:	2101      	movs	r1, #1
 8007e5a:	4618      	mov	r0, r3
 8007e5c:	f001 f9f2 	bl	8009244 <RCCEx_PLL2_Config>
 8007e60:	4603      	mov	r3, r0
 8007e62:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117

        /* SPI4/5 clock source configuration done later after clock selection check */
        break;
 8007e66:	e015      	b.n	8007e94 <HAL_RCCEx_PeriphCLKConfig+0x50c>
      case RCC_SPI45CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SPI4/5 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8007e68:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007e6c:	3328      	adds	r3, #40	@ 0x28
 8007e6e:	2101      	movs	r1, #1
 8007e70:	4618      	mov	r0, r3
 8007e72:	f001 fa99 	bl	80093a8 <RCCEx_PLL3_Config>
 8007e76:	4603      	mov	r3, r0
 8007e78:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
        /* SPI4/5 clock source configuration done later after clock selection check */
        break;
 8007e7c:	e00a      	b.n	8007e94 <HAL_RCCEx_PeriphCLKConfig+0x50c>
        /* HSE,  oscillator is used as source of SPI4/5 clock */
        /* SPI4/5 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8007e7e:	2301      	movs	r3, #1
 8007e80:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
        break;
 8007e84:	e006      	b.n	8007e94 <HAL_RCCEx_PeriphCLKConfig+0x50c>
        break;
 8007e86:	bf00      	nop
 8007e88:	e004      	b.n	8007e94 <HAL_RCCEx_PeriphCLKConfig+0x50c>
        break;
 8007e8a:	bf00      	nop
 8007e8c:	e002      	b.n	8007e94 <HAL_RCCEx_PeriphCLKConfig+0x50c>
        break;
 8007e8e:	bf00      	nop
 8007e90:	e000      	b.n	8007e94 <HAL_RCCEx_PeriphCLKConfig+0x50c>
        break;
 8007e92:	bf00      	nop
    }

    if (ret == HAL_OK)
 8007e94:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8007e98:	2b00      	cmp	r3, #0
 8007e9a:	d10a      	bne.n	8007eb2 <HAL_RCCEx_PeriphCLKConfig+0x52a>
    {
      /* Set the source of SPI4/5 clock*/
      __HAL_RCC_SPI45_CONFIG(PeriphClkInit->Spi45ClockSelection);
 8007e9c:	4b38      	ldr	r3, [pc, #224]	@ (8007f80 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8007e9e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8007ea0:	f423 21e0 	bic.w	r1, r3, #458752	@ 0x70000
 8007ea4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007ea8:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8007eaa:	4a35      	ldr	r2, [pc, #212]	@ (8007f80 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8007eac:	430b      	orrs	r3, r1
 8007eae:	6513      	str	r3, [r2, #80]	@ 0x50
 8007eb0:	e003      	b.n	8007eba <HAL_RCCEx_PeriphCLKConfig+0x532>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8007eb2:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8007eb6:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
    }
  }

  /*---------------------------- SPI6 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SPI6) == RCC_PERIPHCLK_SPI6)
 8007eba:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007ebe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007ec2:	f402 4380 	and.w	r3, r2, #16384	@ 0x4000
 8007ec6:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 8007eca:	2300      	movs	r3, #0
 8007ecc:	f8c7 30dc 	str.w	r3, [r7, #220]	@ 0xdc
 8007ed0:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 8007ed4:	460b      	mov	r3, r1
 8007ed6:	4313      	orrs	r3, r2
 8007ed8:	d058      	beq.n	8007f8c <HAL_RCCEx_PeriphCLKConfig+0x604>
  {
    switch (PeriphClkInit->Spi6ClockSelection)
 8007eda:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007ede:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 8007ee2:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8007ee6:	d033      	beq.n	8007f50 <HAL_RCCEx_PeriphCLKConfig+0x5c8>
 8007ee8:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 8007eec:	d82c      	bhi.n	8007f48 <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 8007eee:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007ef2:	d02f      	beq.n	8007f54 <HAL_RCCEx_PeriphCLKConfig+0x5cc>
 8007ef4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007ef8:	d826      	bhi.n	8007f48 <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 8007efa:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 8007efe:	d02b      	beq.n	8007f58 <HAL_RCCEx_PeriphCLKConfig+0x5d0>
 8007f00:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 8007f04:	d820      	bhi.n	8007f48 <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 8007f06:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8007f0a:	d012      	beq.n	8007f32 <HAL_RCCEx_PeriphCLKConfig+0x5aa>
 8007f0c:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8007f10:	d81a      	bhi.n	8007f48 <HAL_RCCEx_PeriphCLKConfig+0x5c0>
 8007f12:	2b00      	cmp	r3, #0
 8007f14:	d022      	beq.n	8007f5c <HAL_RCCEx_PeriphCLKConfig+0x5d4>
 8007f16:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8007f1a:	d115      	bne.n	8007f48 <HAL_RCCEx_PeriphCLKConfig+0x5c0>
        /* SPI6 clock source configuration done later after clock selection check */
        break;

      case RCC_SPI6CLKSOURCE_PLL2: /* PLL2 is used as clock source for SPI6*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8007f1c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007f20:	3308      	adds	r3, #8
 8007f22:	2101      	movs	r1, #1
 8007f24:	4618      	mov	r0, r3
 8007f26:	f001 f98d 	bl	8009244 <RCCEx_PLL2_Config>
 8007f2a:	4603      	mov	r3, r0
 8007f2c:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117

        /* SPI6 clock source configuration done later after clock selection check */
        break;
 8007f30:	e015      	b.n	8007f5e <HAL_RCCEx_PeriphCLKConfig+0x5d6>
      case RCC_SPI6CLKSOURCE_PLL3:  /* PLL3 is used as clock source for SPI6*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8007f32:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007f36:	3328      	adds	r3, #40	@ 0x28
 8007f38:	2101      	movs	r1, #1
 8007f3a:	4618      	mov	r0, r3
 8007f3c:	f001 fa34 	bl	80093a8 <RCCEx_PLL3_Config>
 8007f40:	4603      	mov	r3, r0
 8007f42:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
        /* SPI6 clock source configuration done later after clock selection check */
        break;
 8007f46:	e00a      	b.n	8007f5e <HAL_RCCEx_PeriphCLKConfig+0x5d6>
        /* SPI6 clock source configuration done later after clock selection check */
        break;
#endif

      default:
        ret = HAL_ERROR;
 8007f48:	2301      	movs	r3, #1
 8007f4a:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
        break;
 8007f4e:	e006      	b.n	8007f5e <HAL_RCCEx_PeriphCLKConfig+0x5d6>
        break;
 8007f50:	bf00      	nop
 8007f52:	e004      	b.n	8007f5e <HAL_RCCEx_PeriphCLKConfig+0x5d6>
        break;
 8007f54:	bf00      	nop
 8007f56:	e002      	b.n	8007f5e <HAL_RCCEx_PeriphCLKConfig+0x5d6>
        break;
 8007f58:	bf00      	nop
 8007f5a:	e000      	b.n	8007f5e <HAL_RCCEx_PeriphCLKConfig+0x5d6>
        break;
 8007f5c:	bf00      	nop
    }

    if (ret == HAL_OK)
 8007f5e:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8007f62:	2b00      	cmp	r3, #0
 8007f64:	d10e      	bne.n	8007f84 <HAL_RCCEx_PeriphCLKConfig+0x5fc>
    {
      /* Set the source of SPI6 clock*/
      __HAL_RCC_SPI6_CONFIG(PeriphClkInit->Spi6ClockSelection);
 8007f66:	4b06      	ldr	r3, [pc, #24]	@ (8007f80 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8007f68:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8007f6a:	f023 41e0 	bic.w	r1, r3, #1879048192	@ 0x70000000
 8007f6e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007f72:	f8d3 30ac 	ldr.w	r3, [r3, #172]	@ 0xac
 8007f76:	4a02      	ldr	r2, [pc, #8]	@ (8007f80 <HAL_RCCEx_PeriphCLKConfig+0x5f8>)
 8007f78:	430b      	orrs	r3, r1
 8007f7a:	6593      	str	r3, [r2, #88]	@ 0x58
 8007f7c:	e006      	b.n	8007f8c <HAL_RCCEx_PeriphCLKConfig+0x604>
 8007f7e:	bf00      	nop
 8007f80:	58024400 	.word	0x58024400
    }
    else
    {
      /* set overall return value */
      status = ret;
 8007f84:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8007f88:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
  }
#endif /*DSI*/

#if defined(FDCAN1) || defined(FDCAN2)
  /*---------------------------- FDCAN configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FDCAN) == RCC_PERIPHCLK_FDCAN)
 8007f8c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007f90:	e9d3 2300 	ldrd	r2, r3, [r3]
 8007f94:	f402 4300 	and.w	r3, r2, #32768	@ 0x8000
 8007f98:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8007f9c:	2300      	movs	r3, #0
 8007f9e:	f8c7 30d4 	str.w	r3, [r7, #212]	@ 0xd4
 8007fa2:	e9d7 1234 	ldrd	r1, r2, [r7, #208]	@ 0xd0
 8007fa6:	460b      	mov	r3, r1
 8007fa8:	4313      	orrs	r3, r2
 8007faa:	d037      	beq.n	800801c <HAL_RCCEx_PeriphCLKConfig+0x694>
  {
    switch (PeriphClkInit->FdcanClockSelection)
 8007fac:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007fb0:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8007fb2:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8007fb6:	d00e      	beq.n	8007fd6 <HAL_RCCEx_PeriphCLKConfig+0x64e>
 8007fb8:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 8007fbc:	d816      	bhi.n	8007fec <HAL_RCCEx_PeriphCLKConfig+0x664>
 8007fbe:	2b00      	cmp	r3, #0
 8007fc0:	d018      	beq.n	8007ff4 <HAL_RCCEx_PeriphCLKConfig+0x66c>
 8007fc2:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8007fc6:	d111      	bne.n	8007fec <HAL_RCCEx_PeriphCLKConfig+0x664>
    {
      case RCC_FDCANCLKSOURCE_PLL:      /* PLL is used as clock source for FDCAN*/
        /* Enable FDCAN Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8007fc8:	4bc4      	ldr	r3, [pc, #784]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8007fca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8007fcc:	4ac3      	ldr	r2, [pc, #780]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8007fce:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8007fd2:	62d3      	str	r3, [r2, #44]	@ 0x2c

        /* FDCAN clock source configuration done later after clock selection check */
        break;
 8007fd4:	e00f      	b.n	8007ff6 <HAL_RCCEx_PeriphCLKConfig+0x66e>

      case RCC_FDCANCLKSOURCE_PLL2: /* PLL2 is used as clock source for FDCAN*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8007fd6:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8007fda:	3308      	adds	r3, #8
 8007fdc:	2101      	movs	r1, #1
 8007fde:	4618      	mov	r0, r3
 8007fe0:	f001 f930 	bl	8009244 <RCCEx_PLL2_Config>
 8007fe4:	4603      	mov	r3, r0
 8007fe6:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117

        /* FDCAN clock source configuration done later after clock selection check */
        break;
 8007fea:	e004      	b.n	8007ff6 <HAL_RCCEx_PeriphCLKConfig+0x66e>
        /* HSE is used as clock source for FDCAN*/
        /* FDCAN clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8007fec:	2301      	movs	r3, #1
 8007fee:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
        break;
 8007ff2:	e000      	b.n	8007ff6 <HAL_RCCEx_PeriphCLKConfig+0x66e>
        break;
 8007ff4:	bf00      	nop
    }

    if (ret == HAL_OK)
 8007ff6:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8007ffa:	2b00      	cmp	r3, #0
 8007ffc:	d10a      	bne.n	8008014 <HAL_RCCEx_PeriphCLKConfig+0x68c>
    {
      /* Set the source of FDCAN clock*/
      __HAL_RCC_FDCAN_CONFIG(PeriphClkInit->FdcanClockSelection);
 8007ffe:	4bb7      	ldr	r3, [pc, #732]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008000:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8008002:	f023 5140 	bic.w	r1, r3, #805306368	@ 0x30000000
 8008006:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800800a:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800800c:	4ab3      	ldr	r2, [pc, #716]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800800e:	430b      	orrs	r3, r1
 8008010:	6513      	str	r3, [r2, #80]	@ 0x50
 8008012:	e003      	b.n	800801c <HAL_RCCEx_PeriphCLKConfig+0x694>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008014:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8008018:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
    }
  }
#endif /*FDCAN1 || FDCAN2*/

  /*---------------------------- FMC configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_FMC) == RCC_PERIPHCLK_FMC)
 800801c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008020:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008024:	f002 7380 	and.w	r3, r2, #16777216	@ 0x1000000
 8008028:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 800802c:	2300      	movs	r3, #0
 800802e:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 8008032:	e9d7 1232 	ldrd	r1, r2, [r7, #200]	@ 0xc8
 8008036:	460b      	mov	r3, r1
 8008038:	4313      	orrs	r3, r2
 800803a:	d039      	beq.n	80080b0 <HAL_RCCEx_PeriphCLKConfig+0x728>
  {
    switch (PeriphClkInit->FmcClockSelection)
 800803c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008040:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8008042:	2b03      	cmp	r3, #3
 8008044:	d81c      	bhi.n	8008080 <HAL_RCCEx_PeriphCLKConfig+0x6f8>
 8008046:	a201      	add	r2, pc, #4	@ (adr r2, 800804c <HAL_RCCEx_PeriphCLKConfig+0x6c4>)
 8008048:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800804c:	08008089 	.word	0x08008089
 8008050:	0800805d 	.word	0x0800805d
 8008054:	0800806b 	.word	0x0800806b
 8008058:	08008089 	.word	0x08008089
    {
      case RCC_FMCCLKSOURCE_PLL:      /* PLL is used as clock source for FMC*/
        /* Enable FMC Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 800805c:	4b9f      	ldr	r3, [pc, #636]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800805e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008060:	4a9e      	ldr	r2, [pc, #632]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008062:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8008066:	62d3      	str	r3, [r2, #44]	@ 0x2c

        /* FMC clock source configuration done later after clock selection check */
        break;
 8008068:	e00f      	b.n	800808a <HAL_RCCEx_PeriphCLKConfig+0x702>

      case RCC_FMCCLKSOURCE_PLL2: /* PLL2 is used as clock source for FMC*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 800806a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800806e:	3308      	adds	r3, #8
 8008070:	2102      	movs	r1, #2
 8008072:	4618      	mov	r0, r3
 8008074:	f001 f8e6 	bl	8009244 <RCCEx_PLL2_Config>
 8008078:	4603      	mov	r3, r0
 800807a:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117

        /* FMC clock source configuration done later after clock selection check */
        break;
 800807e:	e004      	b.n	800808a <HAL_RCCEx_PeriphCLKConfig+0x702>
      case RCC_FMCCLKSOURCE_HCLK:
        /* D1/CD HCLK  clock selected as FMC kernel peripheral clock */
        break;

      default:
        ret = HAL_ERROR;
 8008080:	2301      	movs	r3, #1
 8008082:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
        break;
 8008086:	e000      	b.n	800808a <HAL_RCCEx_PeriphCLKConfig+0x702>
        break;
 8008088:	bf00      	nop
    }

    if (ret == HAL_OK)
 800808a:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800808e:	2b00      	cmp	r3, #0
 8008090:	d10a      	bne.n	80080a8 <HAL_RCCEx_PeriphCLKConfig+0x720>
    {
      /* Set the source of FMC clock*/
      __HAL_RCC_FMC_CONFIG(PeriphClkInit->FmcClockSelection);
 8008092:	4b92      	ldr	r3, [pc, #584]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008094:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8008096:	f023 0103 	bic.w	r1, r3, #3
 800809a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800809e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80080a0:	4a8e      	ldr	r2, [pc, #568]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80080a2:	430b      	orrs	r3, r1
 80080a4:	64d3      	str	r3, [r2, #76]	@ 0x4c
 80080a6:	e003      	b.n	80080b0 <HAL_RCCEx_PeriphCLKConfig+0x728>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80080a8:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 80080ac:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
    }
  }

  /*---------------------------- RTC configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 80080b0:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80080b4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80080b8:	f402 0380 	and.w	r3, r2, #4194304	@ 0x400000
 80080bc:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 80080c0:	2300      	movs	r3, #0
 80080c2:	f8c7 30c4 	str.w	r3, [r7, #196]	@ 0xc4
 80080c6:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 80080ca:	460b      	mov	r3, r1
 80080cc:	4313      	orrs	r3, r2
 80080ce:	f000 8099 	beq.w	8008204 <HAL_RCCEx_PeriphCLKConfig+0x87c>
  {
    /* check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable write access to Backup domain */
    SET_BIT(PWR->CR1, PWR_CR1_DBP);
 80080d2:	4b83      	ldr	r3, [pc, #524]	@ (80082e0 <HAL_RCCEx_PeriphCLKConfig+0x958>)
 80080d4:	681b      	ldr	r3, [r3, #0]
 80080d6:	4a82      	ldr	r2, [pc, #520]	@ (80082e0 <HAL_RCCEx_PeriphCLKConfig+0x958>)
 80080d8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80080dc:	6013      	str	r3, [r2, #0]

    /* Wait for Backup domain Write protection disable */
    tickstart = HAL_GetTick();
 80080de:	f7fb f84f 	bl	8003180 <HAL_GetTick>
 80080e2:	f8c7 0110 	str.w	r0, [r7, #272]	@ 0x110

    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 80080e6:	e00b      	b.n	8008100 <HAL_RCCEx_PeriphCLKConfig+0x778>
    {
      if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80080e8:	f7fb f84a 	bl	8003180 <HAL_GetTick>
 80080ec:	4602      	mov	r2, r0
 80080ee:	f8d7 3110 	ldr.w	r3, [r7, #272]	@ 0x110
 80080f2:	1ad3      	subs	r3, r2, r3
 80080f4:	2b64      	cmp	r3, #100	@ 0x64
 80080f6:	d903      	bls.n	8008100 <HAL_RCCEx_PeriphCLKConfig+0x778>
      {
        ret = HAL_TIMEOUT;
 80080f8:	2303      	movs	r3, #3
 80080fa:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
        break;
 80080fe:	e005      	b.n	800810c <HAL_RCCEx_PeriphCLKConfig+0x784>
    while ((PWR->CR1 & PWR_CR1_DBP) == 0U)
 8008100:	4b77      	ldr	r3, [pc, #476]	@ (80082e0 <HAL_RCCEx_PeriphCLKConfig+0x958>)
 8008102:	681b      	ldr	r3, [r3, #0]
 8008104:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8008108:	2b00      	cmp	r3, #0
 800810a:	d0ed      	beq.n	80080e8 <HAL_RCCEx_PeriphCLKConfig+0x760>
      }
    }

    if (ret == HAL_OK)
 800810c:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8008110:	2b00      	cmp	r3, #0
 8008112:	d173      	bne.n	80081fc <HAL_RCCEx_PeriphCLKConfig+0x874>
    {
      /* Reset the Backup domain only if the RTC Clock source selection is modified */
      if ((RCC->BDCR & RCC_BDCR_RTCSEL) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL))
 8008114:	4b71      	ldr	r3, [pc, #452]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008116:	6f1a      	ldr	r2, [r3, #112]	@ 0x70
 8008118:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800811c:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 8008120:	4053      	eors	r3, r2
 8008122:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8008126:	2b00      	cmp	r3, #0
 8008128:	d015      	beq.n	8008156 <HAL_RCCEx_PeriphCLKConfig+0x7ce>
      {
        /* Store the content of BDCR register before the reset of Backup Domain */
        tmpreg = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800812a:	4b6c      	ldr	r3, [pc, #432]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800812c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800812e:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8008132:	f8c7 310c 	str.w	r3, [r7, #268]	@ 0x10c
        /* RTC Clock selection can be changed only if the Backup Domain is reset */
        __HAL_RCC_BACKUPRESET_FORCE();
 8008136:	4b69      	ldr	r3, [pc, #420]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008138:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800813a:	4a68      	ldr	r2, [pc, #416]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800813c:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8008140:	6713      	str	r3, [r2, #112]	@ 0x70
        __HAL_RCC_BACKUPRESET_RELEASE();
 8008142:	4b66      	ldr	r3, [pc, #408]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008144:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8008146:	4a65      	ldr	r2, [pc, #404]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008148:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800814c:	6713      	str	r3, [r2, #112]	@ 0x70
        /* Restore the Content of BDCR register */
        RCC->BDCR = tmpreg;
 800814e:	4a63      	ldr	r2, [pc, #396]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x954>)
 8008150:	f8d7 310c 	ldr.w	r3, [r7, #268]	@ 0x10c
 8008154:	6713      	str	r3, [r2, #112]	@ 0x70
      }

      /* If LSE is selected as RTC clock source (and enabled prior to Backup Domain reset), wait for LSE reactivation */
      if (PeriphClkInit->RTCClockSelection == RCC_RTCCLKSOURCE_LSE)
 8008156:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800815a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 800815e:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8008162:	d118      	bne.n	8008196 <HAL_RCCEx_PeriphCLKConfig+0x80e>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8008164:	f7fb f80c 	bl	8003180 <HAL_GetTick>
 8008168:	f8c7 0110 	str.w	r0, [r7, #272]	@ 0x110

        /* Wait till LSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 800816c:	e00d      	b.n	800818a <HAL_RCCEx_PeriphCLKConfig+0x802>
        {
          if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800816e:	f7fb f807 	bl	8003180 <HAL_GetTick>
 8008172:	4602      	mov	r2, r0
 8008174:	f8d7 3110 	ldr.w	r3, [r7, #272]	@ 0x110
 8008178:	1ad2      	subs	r2, r2, r3
 800817a:	f241 3388 	movw	r3, #5000	@ 0x1388
 800817e:	429a      	cmp	r2, r3
 8008180:	d903      	bls.n	800818a <HAL_RCCEx_PeriphCLKConfig+0x802>
          {
            ret = HAL_TIMEOUT;
 8008182:	2303      	movs	r3, #3
 8008184:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
            break;
 8008188:	e005      	b.n	8008196 <HAL_RCCEx_PeriphCLKConfig+0x80e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 800818a:	4b54      	ldr	r3, [pc, #336]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x954>)
 800818c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800818e:	f003 0302 	and.w	r3, r3, #2
 8008192:	2b00      	cmp	r3, #0
 8008194:	d0eb      	beq.n	800816e <HAL_RCCEx_PeriphCLKConfig+0x7e6>
          }
        }
      }

      if (ret == HAL_OK)
 8008196:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800819a:	2b00      	cmp	r3, #0
 800819c:	d129      	bne.n	80081f2 <HAL_RCCEx_PeriphCLKConfig+0x86a>
      {
        __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800819e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80081a2:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 80081a6:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80081aa:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80081ae:	d10e      	bne.n	80081ce <HAL_RCCEx_PeriphCLKConfig+0x846>
 80081b0:	4b4a      	ldr	r3, [pc, #296]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80081b2:	691b      	ldr	r3, [r3, #16]
 80081b4:	f423 517c 	bic.w	r1, r3, #16128	@ 0x3f00
 80081b8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80081bc:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 80081c0:	091a      	lsrs	r2, r3, #4
 80081c2:	4b48      	ldr	r3, [pc, #288]	@ (80082e4 <HAL_RCCEx_PeriphCLKConfig+0x95c>)
 80081c4:	4013      	ands	r3, r2
 80081c6:	4a45      	ldr	r2, [pc, #276]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80081c8:	430b      	orrs	r3, r1
 80081ca:	6113      	str	r3, [r2, #16]
 80081cc:	e005      	b.n	80081da <HAL_RCCEx_PeriphCLKConfig+0x852>
 80081ce:	4b43      	ldr	r3, [pc, #268]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80081d0:	691b      	ldr	r3, [r3, #16]
 80081d2:	4a42      	ldr	r2, [pc, #264]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80081d4:	f423 537c 	bic.w	r3, r3, #16128	@ 0x3f00
 80081d8:	6113      	str	r3, [r2, #16]
 80081da:	4b40      	ldr	r3, [pc, #256]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80081dc:	6f19      	ldr	r1, [r3, #112]	@ 0x70
 80081de:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80081e2:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 80081e6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80081ea:	4a3c      	ldr	r2, [pc, #240]	@ (80082dc <HAL_RCCEx_PeriphCLKConfig+0x954>)
 80081ec:	430b      	orrs	r3, r1
 80081ee:	6713      	str	r3, [r2, #112]	@ 0x70
 80081f0:	e008      	b.n	8008204 <HAL_RCCEx_PeriphCLKConfig+0x87c>
      }
      else
      {
        /* set overall return value */
        status = ret;
 80081f2:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 80081f6:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
 80081fa:	e003      	b.n	8008204 <HAL_RCCEx_PeriphCLKConfig+0x87c>
      }
    }
    else
    {
      /* set overall return value */
      status = ret;
 80081fc:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8008200:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
    }
  }


  /*-------------------------- USART1/6 configuration --------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART16) == RCC_PERIPHCLK_USART16)
 8008204:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008208:	e9d3 2300 	ldrd	r2, r3, [r3]
 800820c:	f002 0301 	and.w	r3, r2, #1
 8008210:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8008214:	2300      	movs	r3, #0
 8008216:	f8c7 30bc 	str.w	r3, [r7, #188]	@ 0xbc
 800821a:	e9d7 122e 	ldrd	r1, r2, [r7, #184]	@ 0xb8
 800821e:	460b      	mov	r3, r1
 8008220:	4313      	orrs	r3, r2
 8008222:	f000 808f 	beq.w	8008344 <HAL_RCCEx_PeriphCLKConfig+0x9bc>
  {
    switch (PeriphClkInit->Usart16ClockSelection)
 8008226:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800822a:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 800822c:	2b28      	cmp	r3, #40	@ 0x28
 800822e:	d871      	bhi.n	8008314 <HAL_RCCEx_PeriphCLKConfig+0x98c>
 8008230:	a201      	add	r2, pc, #4	@ (adr r2, 8008238 <HAL_RCCEx_PeriphCLKConfig+0x8b0>)
 8008232:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008236:	bf00      	nop
 8008238:	0800831d 	.word	0x0800831d
 800823c:	08008315 	.word	0x08008315
 8008240:	08008315 	.word	0x08008315
 8008244:	08008315 	.word	0x08008315
 8008248:	08008315 	.word	0x08008315
 800824c:	08008315 	.word	0x08008315
 8008250:	08008315 	.word	0x08008315
 8008254:	08008315 	.word	0x08008315
 8008258:	080082e9 	.word	0x080082e9
 800825c:	08008315 	.word	0x08008315
 8008260:	08008315 	.word	0x08008315
 8008264:	08008315 	.word	0x08008315
 8008268:	08008315 	.word	0x08008315
 800826c:	08008315 	.word	0x08008315
 8008270:	08008315 	.word	0x08008315
 8008274:	08008315 	.word	0x08008315
 8008278:	080082ff 	.word	0x080082ff
 800827c:	08008315 	.word	0x08008315
 8008280:	08008315 	.word	0x08008315
 8008284:	08008315 	.word	0x08008315
 8008288:	08008315 	.word	0x08008315
 800828c:	08008315 	.word	0x08008315
 8008290:	08008315 	.word	0x08008315
 8008294:	08008315 	.word	0x08008315
 8008298:	0800831d 	.word	0x0800831d
 800829c:	08008315 	.word	0x08008315
 80082a0:	08008315 	.word	0x08008315
 80082a4:	08008315 	.word	0x08008315
 80082a8:	08008315 	.word	0x08008315
 80082ac:	08008315 	.word	0x08008315
 80082b0:	08008315 	.word	0x08008315
 80082b4:	08008315 	.word	0x08008315
 80082b8:	0800831d 	.word	0x0800831d
 80082bc:	08008315 	.word	0x08008315
 80082c0:	08008315 	.word	0x08008315
 80082c4:	08008315 	.word	0x08008315
 80082c8:	08008315 	.word	0x08008315
 80082cc:	08008315 	.word	0x08008315
 80082d0:	08008315 	.word	0x08008315
 80082d4:	08008315 	.word	0x08008315
 80082d8:	0800831d 	.word	0x0800831d
 80082dc:	58024400 	.word	0x58024400
 80082e0:	58024800 	.word	0x58024800
 80082e4:	00ffffcf 	.word	0x00ffffcf
      case RCC_USART16CLKSOURCE_PCLK2: /* CD/D2 PCLK2 as clock source for USART1/6 */
        /* USART1/6 clock source configuration done later after clock selection check */
        break;

      case RCC_USART16CLKSOURCE_PLL2: /* PLL2 is used as clock source for USART1/6 */
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 80082e8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80082ec:	3308      	adds	r3, #8
 80082ee:	2101      	movs	r1, #1
 80082f0:	4618      	mov	r0, r3
 80082f2:	f000 ffa7 	bl	8009244 <RCCEx_PLL2_Config>
 80082f6:	4603      	mov	r3, r0
 80082f8:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
        /* USART1/6 clock source configuration done later after clock selection check */
        break;
 80082fc:	e00f      	b.n	800831e <HAL_RCCEx_PeriphCLKConfig+0x996>

      case RCC_USART16CLKSOURCE_PLL3: /* PLL3 is used as clock source for USART1/6 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 80082fe:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008302:	3328      	adds	r3, #40	@ 0x28
 8008304:	2101      	movs	r1, #1
 8008306:	4618      	mov	r0, r3
 8008308:	f001 f84e 	bl	80093a8 <RCCEx_PLL3_Config>
 800830c:	4603      	mov	r3, r0
 800830e:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
        /* USART1/6 clock source configuration done later after clock selection check */
        break;
 8008312:	e004      	b.n	800831e <HAL_RCCEx_PeriphCLKConfig+0x996>
        /* LSE,  oscillator is used as source of USART1/6 clock */
        /* USART1/6 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008314:	2301      	movs	r3, #1
 8008316:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
        break;
 800831a:	e000      	b.n	800831e <HAL_RCCEx_PeriphCLKConfig+0x996>
        break;
 800831c:	bf00      	nop
    }

    if (ret == HAL_OK)
 800831e:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8008322:	2b00      	cmp	r3, #0
 8008324:	d10a      	bne.n	800833c <HAL_RCCEx_PeriphCLKConfig+0x9b4>
    {
      /* Set the source of USART1/6 clock */
      __HAL_RCC_USART16_CONFIG(PeriphClkInit->Usart16ClockSelection);
 8008326:	4bbf      	ldr	r3, [pc, #764]	@ (8008624 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 8008328:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800832a:	f023 0138 	bic.w	r1, r3, #56	@ 0x38
 800832e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008332:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8008334:	4abb      	ldr	r2, [pc, #748]	@ (8008624 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 8008336:	430b      	orrs	r3, r1
 8008338:	6553      	str	r3, [r2, #84]	@ 0x54
 800833a:	e003      	b.n	8008344 <HAL_RCCEx_PeriphCLKConfig+0x9bc>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800833c:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8008340:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
    }
  }

  /*-------------------------- USART2/3/4/5/7/8 Configuration --------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART234578) == RCC_PERIPHCLK_USART234578)
 8008344:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008348:	e9d3 2300 	ldrd	r2, r3, [r3]
 800834c:	f002 0302 	and.w	r3, r2, #2
 8008350:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8008354:	2300      	movs	r3, #0
 8008356:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 800835a:	e9d7 122c 	ldrd	r1, r2, [r7, #176]	@ 0xb0
 800835e:	460b      	mov	r3, r1
 8008360:	4313      	orrs	r3, r2
 8008362:	d041      	beq.n	80083e8 <HAL_RCCEx_PeriphCLKConfig+0xa60>
  {
    switch (PeriphClkInit->Usart234578ClockSelection)
 8008364:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008368:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800836a:	2b05      	cmp	r3, #5
 800836c:	d824      	bhi.n	80083b8 <HAL_RCCEx_PeriphCLKConfig+0xa30>
 800836e:	a201      	add	r2, pc, #4	@ (adr r2, 8008374 <HAL_RCCEx_PeriphCLKConfig+0x9ec>)
 8008370:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008374:	080083c1 	.word	0x080083c1
 8008378:	0800838d 	.word	0x0800838d
 800837c:	080083a3 	.word	0x080083a3
 8008380:	080083c1 	.word	0x080083c1
 8008384:	080083c1 	.word	0x080083c1
 8008388:	080083c1 	.word	0x080083c1
      case RCC_USART234578CLKSOURCE_PCLK1: /* CD/D2 PCLK1 as clock source for USART2/3/4/5/7/8 */
        /* USART2/3/4/5/7/8 clock source configuration done later after clock selection check */
        break;

      case RCC_USART234578CLKSOURCE_PLL2: /* PLL2 is used as clock source for USART2/3/4/5/7/8 */
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 800838c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008390:	3308      	adds	r3, #8
 8008392:	2101      	movs	r1, #1
 8008394:	4618      	mov	r0, r3
 8008396:	f000 ff55 	bl	8009244 <RCCEx_PLL2_Config>
 800839a:	4603      	mov	r3, r0
 800839c:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
        /* USART2/3/4/5/7/8 clock source configuration done later after clock selection check */
        break;
 80083a0:	e00f      	b.n	80083c2 <HAL_RCCEx_PeriphCLKConfig+0xa3a>

      case RCC_USART234578CLKSOURCE_PLL3: /* PLL3 is used as clock source for USART2/3/4/5/7/8 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 80083a2:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80083a6:	3328      	adds	r3, #40	@ 0x28
 80083a8:	2101      	movs	r1, #1
 80083aa:	4618      	mov	r0, r3
 80083ac:	f000 fffc 	bl	80093a8 <RCCEx_PLL3_Config>
 80083b0:	4603      	mov	r3, r0
 80083b2:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
        /* USART2/3/4/5/7/8 clock source configuration done later after clock selection check */
        break;
 80083b6:	e004      	b.n	80083c2 <HAL_RCCEx_PeriphCLKConfig+0xa3a>
        /* LSE,  oscillator is used as source of USART2/3/4/5/7/8 clock */
        /* USART2/3/4/5/7/8 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80083b8:	2301      	movs	r3, #1
 80083ba:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
        break;
 80083be:	e000      	b.n	80083c2 <HAL_RCCEx_PeriphCLKConfig+0xa3a>
        break;
 80083c0:	bf00      	nop
    }

    if (ret == HAL_OK)
 80083c2:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 80083c6:	2b00      	cmp	r3, #0
 80083c8:	d10a      	bne.n	80083e0 <HAL_RCCEx_PeriphCLKConfig+0xa58>
    {
      /* Set the source of USART2/3/4/5/7/8 clock */
      __HAL_RCC_USART234578_CONFIG(PeriphClkInit->Usart234578ClockSelection);
 80083ca:	4b96      	ldr	r3, [pc, #600]	@ (8008624 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 80083cc:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80083ce:	f023 0107 	bic.w	r1, r3, #7
 80083d2:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80083d6:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80083d8:	4a92      	ldr	r2, [pc, #584]	@ (8008624 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 80083da:	430b      	orrs	r3, r1
 80083dc:	6553      	str	r3, [r2, #84]	@ 0x54
 80083de:	e003      	b.n	80083e8 <HAL_RCCEx_PeriphCLKConfig+0xa60>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80083e0:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 80083e4:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
    }
  }

  /*-------------------------- LPUART1 Configuration -------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 80083e8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80083ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 80083f0:	f002 0304 	and.w	r3, r2, #4
 80083f4:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 80083f8:	2300      	movs	r3, #0
 80083fa:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 80083fe:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 8008402:	460b      	mov	r3, r1
 8008404:	4313      	orrs	r3, r2
 8008406:	d044      	beq.n	8008492 <HAL_RCCEx_PeriphCLKConfig+0xb0a>
  {
    switch (PeriphClkInit->Lpuart1ClockSelection)
 8008408:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800840c:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8008410:	2b05      	cmp	r3, #5
 8008412:	d825      	bhi.n	8008460 <HAL_RCCEx_PeriphCLKConfig+0xad8>
 8008414:	a201      	add	r2, pc, #4	@ (adr r2, 800841c <HAL_RCCEx_PeriphCLKConfig+0xa94>)
 8008416:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800841a:	bf00      	nop
 800841c:	08008469 	.word	0x08008469
 8008420:	08008435 	.word	0x08008435
 8008424:	0800844b 	.word	0x0800844b
 8008428:	08008469 	.word	0x08008469
 800842c:	08008469 	.word	0x08008469
 8008430:	08008469 	.word	0x08008469
      case RCC_LPUART1CLKSOURCE_PCLK4: /* SRD/D3 PCLK1 (PCLK4) as clock source for LPUART1 */
        /* LPUART1 clock source configuration done later after clock selection check */
        break;

      case RCC_LPUART1CLKSOURCE_PLL2: /* PLL2 is used as clock source for LPUART1 */
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8008434:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008438:	3308      	adds	r3, #8
 800843a:	2101      	movs	r1, #1
 800843c:	4618      	mov	r0, r3
 800843e:	f000 ff01 	bl	8009244 <RCCEx_PLL2_Config>
 8008442:	4603      	mov	r3, r0
 8008444:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
        /* LPUART1 clock source configuration done later after clock selection check */
        break;
 8008448:	e00f      	b.n	800846a <HAL_RCCEx_PeriphCLKConfig+0xae2>

      case RCC_LPUART1CLKSOURCE_PLL3: /* PLL3 is used as clock source for LPUART1 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 800844a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800844e:	3328      	adds	r3, #40	@ 0x28
 8008450:	2101      	movs	r1, #1
 8008452:	4618      	mov	r0, r3
 8008454:	f000 ffa8 	bl	80093a8 <RCCEx_PLL3_Config>
 8008458:	4603      	mov	r3, r0
 800845a:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
        /* LPUART1 clock source configuration done later after clock selection check */
        break;
 800845e:	e004      	b.n	800846a <HAL_RCCEx_PeriphCLKConfig+0xae2>
        /* LSE,  oscillator is used as source of LPUART1 clock */
        /* LPUART1 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008460:	2301      	movs	r3, #1
 8008462:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
        break;
 8008466:	e000      	b.n	800846a <HAL_RCCEx_PeriphCLKConfig+0xae2>
        break;
 8008468:	bf00      	nop
    }

    if (ret == HAL_OK)
 800846a:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800846e:	2b00      	cmp	r3, #0
 8008470:	d10b      	bne.n	800848a <HAL_RCCEx_PeriphCLKConfig+0xb02>
    {
      /* Set the source of LPUART1 clock */
      __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
 8008472:	4b6c      	ldr	r3, [pc, #432]	@ (8008624 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 8008474:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8008476:	f023 0107 	bic.w	r1, r3, #7
 800847a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800847e:	f8d3 3090 	ldr.w	r3, [r3, #144]	@ 0x90
 8008482:	4a68      	ldr	r2, [pc, #416]	@ (8008624 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 8008484:	430b      	orrs	r3, r1
 8008486:	6593      	str	r3, [r2, #88]	@ 0x58
 8008488:	e003      	b.n	8008492 <HAL_RCCEx_PeriphCLKConfig+0xb0a>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800848a:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800848e:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
    }
  }

  /*---------------------------- LPTIM1 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == RCC_PERIPHCLK_LPTIM1)
 8008492:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008496:	e9d3 2300 	ldrd	r2, r3, [r3]
 800849a:	f002 0320 	and.w	r3, r2, #32
 800849e:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 80084a2:	2300      	movs	r3, #0
 80084a4:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
 80084a8:	e9d7 1228 	ldrd	r1, r2, [r7, #160]	@ 0xa0
 80084ac:	460b      	mov	r3, r1
 80084ae:	4313      	orrs	r3, r2
 80084b0:	d055      	beq.n	800855e <HAL_RCCEx_PeriphCLKConfig+0xbd6>
  {
    switch (PeriphClkInit->Lptim1ClockSelection)
 80084b2:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80084b6:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 80084ba:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 80084be:	d033      	beq.n	8008528 <HAL_RCCEx_PeriphCLKConfig+0xba0>
 80084c0:	f1b3 4fa0 	cmp.w	r3, #1342177280	@ 0x50000000
 80084c4:	d82c      	bhi.n	8008520 <HAL_RCCEx_PeriphCLKConfig+0xb98>
 80084c6:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80084ca:	d02f      	beq.n	800852c <HAL_RCCEx_PeriphCLKConfig+0xba4>
 80084cc:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80084d0:	d826      	bhi.n	8008520 <HAL_RCCEx_PeriphCLKConfig+0xb98>
 80084d2:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 80084d6:	d02b      	beq.n	8008530 <HAL_RCCEx_PeriphCLKConfig+0xba8>
 80084d8:	f1b3 5f40 	cmp.w	r3, #805306368	@ 0x30000000
 80084dc:	d820      	bhi.n	8008520 <HAL_RCCEx_PeriphCLKConfig+0xb98>
 80084de:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 80084e2:	d012      	beq.n	800850a <HAL_RCCEx_PeriphCLKConfig+0xb82>
 80084e4:	f1b3 5f00 	cmp.w	r3, #536870912	@ 0x20000000
 80084e8:	d81a      	bhi.n	8008520 <HAL_RCCEx_PeriphCLKConfig+0xb98>
 80084ea:	2b00      	cmp	r3, #0
 80084ec:	d022      	beq.n	8008534 <HAL_RCCEx_PeriphCLKConfig+0xbac>
 80084ee:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 80084f2:	d115      	bne.n	8008520 <HAL_RCCEx_PeriphCLKConfig+0xb98>
        /* LPTIM1 clock source configuration done later after clock selection check */
        break;

      case RCC_LPTIM1CLKSOURCE_PLL2: /* PLL2 is used as clock source for LPTIM1*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 80084f4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80084f8:	3308      	adds	r3, #8
 80084fa:	2100      	movs	r1, #0
 80084fc:	4618      	mov	r0, r3
 80084fe:	f000 fea1 	bl	8009244 <RCCEx_PLL2_Config>
 8008502:	4603      	mov	r3, r0
 8008504:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117

        /* LPTIM1 clock source configuration done later after clock selection check */
        break;
 8008508:	e015      	b.n	8008536 <HAL_RCCEx_PeriphCLKConfig+0xbae>

      case RCC_LPTIM1CLKSOURCE_PLL3:  /* PLL3 is used as clock source for LPTIM1*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 800850a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800850e:	3328      	adds	r3, #40	@ 0x28
 8008510:	2102      	movs	r1, #2
 8008512:	4618      	mov	r0, r3
 8008514:	f000 ff48 	bl	80093a8 <RCCEx_PLL3_Config>
 8008518:	4603      	mov	r3, r0
 800851a:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117

        /* LPTIM1 clock source configuration done later after clock selection check */
        break;
 800851e:	e00a      	b.n	8008536 <HAL_RCCEx_PeriphCLKConfig+0xbae>
        /* HSI, HSE, or CSI oscillator is used as source of LPTIM1 clock */
        /* LPTIM1 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008520:	2301      	movs	r3, #1
 8008522:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
        break;
 8008526:	e006      	b.n	8008536 <HAL_RCCEx_PeriphCLKConfig+0xbae>
        break;
 8008528:	bf00      	nop
 800852a:	e004      	b.n	8008536 <HAL_RCCEx_PeriphCLKConfig+0xbae>
        break;
 800852c:	bf00      	nop
 800852e:	e002      	b.n	8008536 <HAL_RCCEx_PeriphCLKConfig+0xbae>
        break;
 8008530:	bf00      	nop
 8008532:	e000      	b.n	8008536 <HAL_RCCEx_PeriphCLKConfig+0xbae>
        break;
 8008534:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008536:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800853a:	2b00      	cmp	r3, #0
 800853c:	d10b      	bne.n	8008556 <HAL_RCCEx_PeriphCLKConfig+0xbce>
    {
      /* Set the source of LPTIM1 clock*/
      __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->Lptim1ClockSelection);
 800853e:	4b39      	ldr	r3, [pc, #228]	@ (8008624 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 8008540:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8008542:	f023 41e0 	bic.w	r1, r3, #1879048192	@ 0x70000000
 8008546:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800854a:	f8d3 308c 	ldr.w	r3, [r3, #140]	@ 0x8c
 800854e:	4a35      	ldr	r2, [pc, #212]	@ (8008624 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 8008550:	430b      	orrs	r3, r1
 8008552:	6553      	str	r3, [r2, #84]	@ 0x54
 8008554:	e003      	b.n	800855e <HAL_RCCEx_PeriphCLKConfig+0xbd6>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008556:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800855a:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
    }
  }

  /*---------------------------- LPTIM2 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM2) == RCC_PERIPHCLK_LPTIM2)
 800855e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008562:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008566:	f002 0340 	and.w	r3, r2, #64	@ 0x40
 800856a:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 800856e:	2300      	movs	r3, #0
 8008570:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 8008574:	e9d7 1226 	ldrd	r1, r2, [r7, #152]	@ 0x98
 8008578:	460b      	mov	r3, r1
 800857a:	4313      	orrs	r3, r2
 800857c:	d058      	beq.n	8008630 <HAL_RCCEx_PeriphCLKConfig+0xca8>
  {
    switch (PeriphClkInit->Lptim2ClockSelection)
 800857e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008582:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8008586:	f5b3 5fa0 	cmp.w	r3, #5120	@ 0x1400
 800858a:	d033      	beq.n	80085f4 <HAL_RCCEx_PeriphCLKConfig+0xc6c>
 800858c:	f5b3 5fa0 	cmp.w	r3, #5120	@ 0x1400
 8008590:	d82c      	bhi.n	80085ec <HAL_RCCEx_PeriphCLKConfig+0xc64>
 8008592:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8008596:	d02f      	beq.n	80085f8 <HAL_RCCEx_PeriphCLKConfig+0xc70>
 8008598:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800859c:	d826      	bhi.n	80085ec <HAL_RCCEx_PeriphCLKConfig+0xc64>
 800859e:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 80085a2:	d02b      	beq.n	80085fc <HAL_RCCEx_PeriphCLKConfig+0xc74>
 80085a4:	f5b3 6f40 	cmp.w	r3, #3072	@ 0xc00
 80085a8:	d820      	bhi.n	80085ec <HAL_RCCEx_PeriphCLKConfig+0xc64>
 80085aa:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80085ae:	d012      	beq.n	80085d6 <HAL_RCCEx_PeriphCLKConfig+0xc4e>
 80085b0:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80085b4:	d81a      	bhi.n	80085ec <HAL_RCCEx_PeriphCLKConfig+0xc64>
 80085b6:	2b00      	cmp	r3, #0
 80085b8:	d022      	beq.n	8008600 <HAL_RCCEx_PeriphCLKConfig+0xc78>
 80085ba:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80085be:	d115      	bne.n	80085ec <HAL_RCCEx_PeriphCLKConfig+0xc64>
        /* LPTIM2 clock source configuration done later after clock selection check */
        break;

      case RCC_LPTIM2CLKSOURCE_PLL2: /* PLL2 is used as clock source for LPTIM2*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 80085c0:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80085c4:	3308      	adds	r3, #8
 80085c6:	2100      	movs	r1, #0
 80085c8:	4618      	mov	r0, r3
 80085ca:	f000 fe3b 	bl	8009244 <RCCEx_PLL2_Config>
 80085ce:	4603      	mov	r3, r0
 80085d0:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117

        /* LPTIM2 clock source configuration done later after clock selection check */
        break;
 80085d4:	e015      	b.n	8008602 <HAL_RCCEx_PeriphCLKConfig+0xc7a>

      case RCC_LPTIM2CLKSOURCE_PLL3:  /* PLL3 is used as clock source for LPTIM2*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 80085d6:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80085da:	3328      	adds	r3, #40	@ 0x28
 80085dc:	2102      	movs	r1, #2
 80085de:	4618      	mov	r0, r3
 80085e0:	f000 fee2 	bl	80093a8 <RCCEx_PLL3_Config>
 80085e4:	4603      	mov	r3, r0
 80085e6:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117

        /* LPTIM2 clock source configuration done later after clock selection check */
        break;
 80085ea:	e00a      	b.n	8008602 <HAL_RCCEx_PeriphCLKConfig+0xc7a>
        /* HSI, HSE, or CSI oscillator is used as source of LPTIM2 clock */
        /* LPTIM2 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80085ec:	2301      	movs	r3, #1
 80085ee:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
        break;
 80085f2:	e006      	b.n	8008602 <HAL_RCCEx_PeriphCLKConfig+0xc7a>
        break;
 80085f4:	bf00      	nop
 80085f6:	e004      	b.n	8008602 <HAL_RCCEx_PeriphCLKConfig+0xc7a>
        break;
 80085f8:	bf00      	nop
 80085fa:	e002      	b.n	8008602 <HAL_RCCEx_PeriphCLKConfig+0xc7a>
        break;
 80085fc:	bf00      	nop
 80085fe:	e000      	b.n	8008602 <HAL_RCCEx_PeriphCLKConfig+0xc7a>
        break;
 8008600:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008602:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8008606:	2b00      	cmp	r3, #0
 8008608:	d10e      	bne.n	8008628 <HAL_RCCEx_PeriphCLKConfig+0xca0>
    {
      /* Set the source of LPTIM2 clock*/
      __HAL_RCC_LPTIM2_CONFIG(PeriphClkInit->Lptim2ClockSelection);
 800860a:	4b06      	ldr	r3, [pc, #24]	@ (8008624 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 800860c:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800860e:	f423 51e0 	bic.w	r1, r3, #7168	@ 0x1c00
 8008612:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008616:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 800861a:	4a02      	ldr	r2, [pc, #8]	@ (8008624 <HAL_RCCEx_PeriphCLKConfig+0xc9c>)
 800861c:	430b      	orrs	r3, r1
 800861e:	6593      	str	r3, [r2, #88]	@ 0x58
 8008620:	e006      	b.n	8008630 <HAL_RCCEx_PeriphCLKConfig+0xca8>
 8008622:	bf00      	nop
 8008624:	58024400 	.word	0x58024400
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008628:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800862c:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
    }
  }

  /*---------------------------- LPTIM345 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM345) == RCC_PERIPHCLK_LPTIM345)
 8008630:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008634:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008638:	f002 0380 	and.w	r3, r2, #128	@ 0x80
 800863c:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8008640:	2300      	movs	r3, #0
 8008642:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8008646:	e9d7 1224 	ldrd	r1, r2, [r7, #144]	@ 0x90
 800864a:	460b      	mov	r3, r1
 800864c:	4313      	orrs	r3, r2
 800864e:	d055      	beq.n	80086fc <HAL_RCCEx_PeriphCLKConfig+0xd74>
  {
    switch (PeriphClkInit->Lptim345ClockSelection)
 8008650:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008654:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8008658:	f5b3 4f20 	cmp.w	r3, #40960	@ 0xa000
 800865c:	d033      	beq.n	80086c6 <HAL_RCCEx_PeriphCLKConfig+0xd3e>
 800865e:	f5b3 4f20 	cmp.w	r3, #40960	@ 0xa000
 8008662:	d82c      	bhi.n	80086be <HAL_RCCEx_PeriphCLKConfig+0xd36>
 8008664:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8008668:	d02f      	beq.n	80086ca <HAL_RCCEx_PeriphCLKConfig+0xd42>
 800866a:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800866e:	d826      	bhi.n	80086be <HAL_RCCEx_PeriphCLKConfig+0xd36>
 8008670:	f5b3 4fc0 	cmp.w	r3, #24576	@ 0x6000
 8008674:	d02b      	beq.n	80086ce <HAL_RCCEx_PeriphCLKConfig+0xd46>
 8008676:	f5b3 4fc0 	cmp.w	r3, #24576	@ 0x6000
 800867a:	d820      	bhi.n	80086be <HAL_RCCEx_PeriphCLKConfig+0xd36>
 800867c:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8008680:	d012      	beq.n	80086a8 <HAL_RCCEx_PeriphCLKConfig+0xd20>
 8008682:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8008686:	d81a      	bhi.n	80086be <HAL_RCCEx_PeriphCLKConfig+0xd36>
 8008688:	2b00      	cmp	r3, #0
 800868a:	d022      	beq.n	80086d2 <HAL_RCCEx_PeriphCLKConfig+0xd4a>
 800868c:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8008690:	d115      	bne.n	80086be <HAL_RCCEx_PeriphCLKConfig+0xd36>
      case RCC_LPTIM345CLKSOURCE_PCLK4:      /* SRD/D3 PCLK1 (PCLK4) as clock source for LPTIM3/4/5 */
        /* LPTIM3/4/5 clock source configuration done later after clock selection check */
        break;

      case RCC_LPTIM345CLKSOURCE_PLL2: /* PLL2 is used as clock source for LPTIM3/4/5 */
        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8008692:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008696:	3308      	adds	r3, #8
 8008698:	2100      	movs	r1, #0
 800869a:	4618      	mov	r0, r3
 800869c:	f000 fdd2 	bl	8009244 <RCCEx_PLL2_Config>
 80086a0:	4603      	mov	r3, r0
 80086a2:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117

        /* LPTIM3/4/5 clock source configuration done later after clock selection check */
        break;
 80086a6:	e015      	b.n	80086d4 <HAL_RCCEx_PeriphCLKConfig+0xd4c>

      case RCC_LPTIM345CLKSOURCE_PLL3:  /* PLL3 is used as clock source for LPTIM3/4/5 */
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 80086a8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80086ac:	3328      	adds	r3, #40	@ 0x28
 80086ae:	2102      	movs	r1, #2
 80086b0:	4618      	mov	r0, r3
 80086b2:	f000 fe79 	bl	80093a8 <RCCEx_PLL3_Config>
 80086b6:	4603      	mov	r3, r0
 80086b8:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117

        /* LPTIM3/4/5 clock source configuration done later after clock selection check */
        break;
 80086bc:	e00a      	b.n	80086d4 <HAL_RCCEx_PeriphCLKConfig+0xd4c>
        /* HSI, HSE, or CSI oscillator is used as source of LPTIM3/4/5 clock */
        /* LPTIM3/4/5 clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80086be:	2301      	movs	r3, #1
 80086c0:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
        break;
 80086c4:	e006      	b.n	80086d4 <HAL_RCCEx_PeriphCLKConfig+0xd4c>
        break;
 80086c6:	bf00      	nop
 80086c8:	e004      	b.n	80086d4 <HAL_RCCEx_PeriphCLKConfig+0xd4c>
        break;
 80086ca:	bf00      	nop
 80086cc:	e002      	b.n	80086d4 <HAL_RCCEx_PeriphCLKConfig+0xd4c>
        break;
 80086ce:	bf00      	nop
 80086d0:	e000      	b.n	80086d4 <HAL_RCCEx_PeriphCLKConfig+0xd4c>
        break;
 80086d2:	bf00      	nop
    }

    if (ret == HAL_OK)
 80086d4:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 80086d8:	2b00      	cmp	r3, #0
 80086da:	d10b      	bne.n	80086f4 <HAL_RCCEx_PeriphCLKConfig+0xd6c>
    {
      /* Set the source of LPTIM3/4/5 clock */
      __HAL_RCC_LPTIM345_CONFIG(PeriphClkInit->Lptim345ClockSelection);
 80086dc:	4ba0      	ldr	r3, [pc, #640]	@ (8008960 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 80086de:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80086e0:	f423 4160 	bic.w	r1, r3, #57344	@ 0xe000
 80086e4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80086e8:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 80086ec:	4a9c      	ldr	r2, [pc, #624]	@ (8008960 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 80086ee:	430b      	orrs	r3, r1
 80086f0:	6593      	str	r3, [r2, #88]	@ 0x58
 80086f2:	e003      	b.n	80086fc <HAL_RCCEx_PeriphCLKConfig+0xd74>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80086f4:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 80086f8:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
    }
  }

  /*------------------------------ I2C1/2/3/5* Configuration ------------------------*/
#if defined(I2C5)
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1235) == RCC_PERIPHCLK_I2C1235)
 80086fc:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008700:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008704:	f002 0308 	and.w	r3, r2, #8
 8008708:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 800870c:	2300      	movs	r3, #0
 800870e:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8008712:	e9d7 1222 	ldrd	r1, r2, [r7, #136]	@ 0x88
 8008716:	460b      	mov	r3, r1
 8008718:	4313      	orrs	r3, r2
 800871a:	d01e      	beq.n	800875a <HAL_RCCEx_PeriphCLKConfig+0xdd2>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1235CLKSOURCE(PeriphClkInit->I2c1235ClockSelection));

    if ((PeriphClkInit->I2c1235ClockSelection) == RCC_I2C1235CLKSOURCE_PLL3)
 800871c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008720:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8008724:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8008728:	d10c      	bne.n	8008744 <HAL_RCCEx_PeriphCLKConfig+0xdbc>
    {
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
 800872a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800872e:	3328      	adds	r3, #40	@ 0x28
 8008730:	2102      	movs	r1, #2
 8008732:	4618      	mov	r0, r3
 8008734:	f000 fe38 	bl	80093a8 <RCCEx_PLL3_Config>
 8008738:	4603      	mov	r3, r0
 800873a:	2b00      	cmp	r3, #0
 800873c:	d002      	beq.n	8008744 <HAL_RCCEx_PeriphCLKConfig+0xdbc>
      {
        status = HAL_ERROR;
 800873e:	2301      	movs	r3, #1
 8008740:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
      }
    }

    __HAL_RCC_I2C1235_CONFIG(PeriphClkInit->I2c1235ClockSelection);
 8008744:	4b86      	ldr	r3, [pc, #536]	@ (8008960 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008746:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8008748:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 800874c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008750:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8008754:	4a82      	ldr	r2, [pc, #520]	@ (8008960 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008756:	430b      	orrs	r3, r1
 8008758:	6553      	str	r3, [r2, #84]	@ 0x54

  }
#endif /* I2C5 */

  /*------------------------------ I2C4 Configuration ------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C4) == RCC_PERIPHCLK_I2C4)
 800875a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800875e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008762:	f002 0310 	and.w	r3, r2, #16
 8008766:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 800876a:	2300      	movs	r3, #0
 800876c:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8008770:	e9d7 1220 	ldrd	r1, r2, [r7, #128]	@ 0x80
 8008774:	460b      	mov	r3, r1
 8008776:	4313      	orrs	r3, r2
 8008778:	d01e      	beq.n	80087b8 <HAL_RCCEx_PeriphCLKConfig+0xe30>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C4CLKSOURCE(PeriphClkInit->I2c4ClockSelection));

    if ((PeriphClkInit->I2c4ClockSelection) == RCC_I2C4CLKSOURCE_PLL3)
 800877a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800877e:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 8008782:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8008786:	d10c      	bne.n	80087a2 <HAL_RCCEx_PeriphCLKConfig+0xe1a>
    {
      if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
 8008788:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800878c:	3328      	adds	r3, #40	@ 0x28
 800878e:	2102      	movs	r1, #2
 8008790:	4618      	mov	r0, r3
 8008792:	f000 fe09 	bl	80093a8 <RCCEx_PLL3_Config>
 8008796:	4603      	mov	r3, r0
 8008798:	2b00      	cmp	r3, #0
 800879a:	d002      	beq.n	80087a2 <HAL_RCCEx_PeriphCLKConfig+0xe1a>
      {
        status = HAL_ERROR;
 800879c:	2301      	movs	r3, #1
 800879e:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
      }
    }

    __HAL_RCC_I2C4_CONFIG(PeriphClkInit->I2c4ClockSelection);
 80087a2:	4b6f      	ldr	r3, [pc, #444]	@ (8008960 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 80087a4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80087a6:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 80087aa:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80087ae:	f8d3 3094 	ldr.w	r3, [r3, #148]	@ 0x94
 80087b2:	4a6b      	ldr	r2, [pc, #428]	@ (8008960 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 80087b4:	430b      	orrs	r3, r1
 80087b6:	6593      	str	r3, [r2, #88]	@ 0x58

  }

  /*---------------------------- ADC configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_ADC) == RCC_PERIPHCLK_ADC)
 80087b8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80087bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80087c0:	f402 2300 	and.w	r3, r2, #524288	@ 0x80000
 80087c4:	67bb      	str	r3, [r7, #120]	@ 0x78
 80087c6:	2300      	movs	r3, #0
 80087c8:	67fb      	str	r3, [r7, #124]	@ 0x7c
 80087ca:	e9d7 121e 	ldrd	r1, r2, [r7, #120]	@ 0x78
 80087ce:	460b      	mov	r3, r1
 80087d0:	4313      	orrs	r3, r2
 80087d2:	d03e      	beq.n	8008852 <HAL_RCCEx_PeriphCLKConfig+0xeca>
  {
    switch (PeriphClkInit->AdcClockSelection)
 80087d4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80087d8:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 80087dc:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 80087e0:	d022      	beq.n	8008828 <HAL_RCCEx_PeriphCLKConfig+0xea0>
 80087e2:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 80087e6:	d81b      	bhi.n	8008820 <HAL_RCCEx_PeriphCLKConfig+0xe98>
 80087e8:	2b00      	cmp	r3, #0
 80087ea:	d003      	beq.n	80087f4 <HAL_RCCEx_PeriphCLKConfig+0xe6c>
 80087ec:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80087f0:	d00b      	beq.n	800880a <HAL_RCCEx_PeriphCLKConfig+0xe82>
 80087f2:	e015      	b.n	8008820 <HAL_RCCEx_PeriphCLKConfig+0xe98>
    {

      case RCC_ADCCLKSOURCE_PLL2: /* PLL2 is used as clock source for ADC*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 80087f4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80087f8:	3308      	adds	r3, #8
 80087fa:	2100      	movs	r1, #0
 80087fc:	4618      	mov	r0, r3
 80087fe:	f000 fd21 	bl	8009244 <RCCEx_PLL2_Config>
 8008802:	4603      	mov	r3, r0
 8008804:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117

        /* ADC clock source configuration done later after clock selection check */
        break;
 8008808:	e00f      	b.n	800882a <HAL_RCCEx_PeriphCLKConfig+0xea2>

      case RCC_ADCCLKSOURCE_PLL3:  /* PLL3 is used as clock source for ADC*/
        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 800880a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800880e:	3328      	adds	r3, #40	@ 0x28
 8008810:	2102      	movs	r1, #2
 8008812:	4618      	mov	r0, r3
 8008814:	f000 fdc8 	bl	80093a8 <RCCEx_PLL3_Config>
 8008818:	4603      	mov	r3, r0
 800881a:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117

        /* ADC clock source configuration done later after clock selection check */
        break;
 800881e:	e004      	b.n	800882a <HAL_RCCEx_PeriphCLKConfig+0xea2>
        /* HSI, HSE, or CSI oscillator is used as source of ADC clock */
        /* ADC clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 8008820:	2301      	movs	r3, #1
 8008822:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
        break;
 8008826:	e000      	b.n	800882a <HAL_RCCEx_PeriphCLKConfig+0xea2>
        break;
 8008828:	bf00      	nop
    }

    if (ret == HAL_OK)
 800882a:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800882e:	2b00      	cmp	r3, #0
 8008830:	d10b      	bne.n	800884a <HAL_RCCEx_PeriphCLKConfig+0xec2>
    {
      /* Set the source of ADC clock*/
      __HAL_RCC_ADC_CONFIG(PeriphClkInit->AdcClockSelection);
 8008832:	4b4b      	ldr	r3, [pc, #300]	@ (8008960 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008834:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8008836:	f423 3140 	bic.w	r1, r3, #196608	@ 0x30000
 800883a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800883e:	f8d3 30a0 	ldr.w	r3, [r3, #160]	@ 0xa0
 8008842:	4a47      	ldr	r2, [pc, #284]	@ (8008960 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008844:	430b      	orrs	r3, r1
 8008846:	6593      	str	r3, [r2, #88]	@ 0x58
 8008848:	e003      	b.n	8008852 <HAL_RCCEx_PeriphCLKConfig+0xeca>
    }
    else
    {
      /* set overall return value */
      status = ret;
 800884a:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 800884e:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
    }
  }

  /*------------------------------ USB Configuration -------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == RCC_PERIPHCLK_USB)
 8008852:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008856:	e9d3 2300 	ldrd	r2, r3, [r3]
 800885a:	f402 2380 	and.w	r3, r2, #262144	@ 0x40000
 800885e:	673b      	str	r3, [r7, #112]	@ 0x70
 8008860:	2300      	movs	r3, #0
 8008862:	677b      	str	r3, [r7, #116]	@ 0x74
 8008864:	e9d7 121c 	ldrd	r1, r2, [r7, #112]	@ 0x70
 8008868:	460b      	mov	r3, r1
 800886a:	4313      	orrs	r3, r2
 800886c:	d03b      	beq.n	80088e6 <HAL_RCCEx_PeriphCLKConfig+0xf5e>
  {

    switch (PeriphClkInit->UsbClockSelection)
 800886e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008872:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8008876:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 800887a:	d01f      	beq.n	80088bc <HAL_RCCEx_PeriphCLKConfig+0xf34>
 800887c:	f5b3 1f40 	cmp.w	r3, #3145728	@ 0x300000
 8008880:	d818      	bhi.n	80088b4 <HAL_RCCEx_PeriphCLKConfig+0xf2c>
 8008882:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 8008886:	d003      	beq.n	8008890 <HAL_RCCEx_PeriphCLKConfig+0xf08>
 8008888:	f5b3 1f00 	cmp.w	r3, #2097152	@ 0x200000
 800888c:	d007      	beq.n	800889e <HAL_RCCEx_PeriphCLKConfig+0xf16>
 800888e:	e011      	b.n	80088b4 <HAL_RCCEx_PeriphCLKConfig+0xf2c>
    {
      case RCC_USBCLKSOURCE_PLL:      /* PLL is used as clock source for USB*/
        /* Enable USB Clock output generated form System USB . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008890:	4b33      	ldr	r3, [pc, #204]	@ (8008960 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008892:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008894:	4a32      	ldr	r2, [pc, #200]	@ (8008960 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008896:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800889a:	62d3      	str	r3, [r2, #44]	@ 0x2c

        /* USB clock source configuration done later after clock selection check */
        break;
 800889c:	e00f      	b.n	80088be <HAL_RCCEx_PeriphCLKConfig+0xf36>

      case RCC_USBCLKSOURCE_PLL3: /* PLL3 is used as clock source for USB*/

        ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 800889e:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80088a2:	3328      	adds	r3, #40	@ 0x28
 80088a4:	2101      	movs	r1, #1
 80088a6:	4618      	mov	r0, r3
 80088a8:	f000 fd7e 	bl	80093a8 <RCCEx_PLL3_Config>
 80088ac:	4603      	mov	r3, r0
 80088ae:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117

        /* USB clock source configuration done later after clock selection check */
        break;
 80088b2:	e004      	b.n	80088be <HAL_RCCEx_PeriphCLKConfig+0xf36>
        /* HSI48 oscillator is used as source of USB clock */
        /* USB clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80088b4:	2301      	movs	r3, #1
 80088b6:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
        break;
 80088ba:	e000      	b.n	80088be <HAL_RCCEx_PeriphCLKConfig+0xf36>
        break;
 80088bc:	bf00      	nop
    }

    if (ret == HAL_OK)
 80088be:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 80088c2:	2b00      	cmp	r3, #0
 80088c4:	d10b      	bne.n	80088de <HAL_RCCEx_PeriphCLKConfig+0xf56>
    {
      /* Set the source of USB clock*/
      __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 80088c6:	4b26      	ldr	r3, [pc, #152]	@ (8008960 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 80088c8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80088ca:	f423 1140 	bic.w	r1, r3, #3145728	@ 0x300000
 80088ce:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80088d2:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80088d6:	4a22      	ldr	r2, [pc, #136]	@ (8008960 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 80088d8:	430b      	orrs	r3, r1
 80088da:	6553      	str	r3, [r2, #84]	@ 0x54
 80088dc:	e003      	b.n	80088e6 <HAL_RCCEx_PeriphCLKConfig+0xf5e>
    }
    else
    {
      /* set overall return value */
      status = ret;
 80088de:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 80088e2:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
    }

  }

  /*------------------------------------- SDMMC Configuration ------------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDMMC) == RCC_PERIPHCLK_SDMMC)
 80088e6:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80088ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 80088ee:	f402 3380 	and.w	r3, r2, #65536	@ 0x10000
 80088f2:	66bb      	str	r3, [r7, #104]	@ 0x68
 80088f4:	2300      	movs	r3, #0
 80088f6:	66fb      	str	r3, [r7, #108]	@ 0x6c
 80088f8:	e9d7 121a 	ldrd	r1, r2, [r7, #104]	@ 0x68
 80088fc:	460b      	mov	r3, r1
 80088fe:	4313      	orrs	r3, r2
 8008900:	d034      	beq.n	800896c <HAL_RCCEx_PeriphCLKConfig+0xfe4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDMMC(PeriphClkInit->SdmmcClockSelection));

    switch (PeriphClkInit->SdmmcClockSelection)
 8008902:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008906:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8008908:	2b00      	cmp	r3, #0
 800890a:	d003      	beq.n	8008914 <HAL_RCCEx_PeriphCLKConfig+0xf8c>
 800890c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8008910:	d007      	beq.n	8008922 <HAL_RCCEx_PeriphCLKConfig+0xf9a>
 8008912:	e011      	b.n	8008938 <HAL_RCCEx_PeriphCLKConfig+0xfb0>
    {
      case RCC_SDMMCCLKSOURCE_PLL:      /* PLL is used as clock source for SDMMC*/
        /* Enable SDMMC Clock output generated form System PLL . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 8008914:	4b12      	ldr	r3, [pc, #72]	@ (8008960 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008916:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008918:	4a11      	ldr	r2, [pc, #68]	@ (8008960 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800891a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800891e:	62d3      	str	r3, [r2, #44]	@ 0x2c

        /* SDMMC clock source configuration done later after clock selection check */
        break;
 8008920:	e00e      	b.n	8008940 <HAL_RCCEx_PeriphCLKConfig+0xfb8>

      case RCC_SDMMCCLKSOURCE_PLL2: /* PLL2 is used as clock source for SDMMC*/

        ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8008922:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008926:	3308      	adds	r3, #8
 8008928:	2102      	movs	r1, #2
 800892a:	4618      	mov	r0, r3
 800892c:	f000 fc8a 	bl	8009244 <RCCEx_PLL2_Config>
 8008930:	4603      	mov	r3, r0
 8008932:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117

        /* SDMMC clock source configuration done later after clock selection check */
        break;
 8008936:	e003      	b.n	8008940 <HAL_RCCEx_PeriphCLKConfig+0xfb8>

      default:
        ret = HAL_ERROR;
 8008938:	2301      	movs	r3, #1
 800893a:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
        break;
 800893e:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008940:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8008944:	2b00      	cmp	r3, #0
 8008946:	d10d      	bne.n	8008964 <HAL_RCCEx_PeriphCLKConfig+0xfdc>
    {
      /* Set the source of SDMMC clock*/
      __HAL_RCC_SDMMC_CONFIG(PeriphClkInit->SdmmcClockSelection);
 8008948:	4b05      	ldr	r3, [pc, #20]	@ (8008960 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 800894a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800894c:	f423 3180 	bic.w	r1, r3, #65536	@ 0x10000
 8008950:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008954:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8008956:	4a02      	ldr	r2, [pc, #8]	@ (8008960 <HAL_RCCEx_PeriphCLKConfig+0xfd8>)
 8008958:	430b      	orrs	r3, r1
 800895a:	64d3      	str	r3, [r2, #76]	@ 0x4c
 800895c:	e006      	b.n	800896c <HAL_RCCEx_PeriphCLKConfig+0xfe4>
 800895e:	bf00      	nop
 8008960:	58024400 	.word	0x58024400
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008964:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8008968:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
    }
  }

#if defined(LTDC)
  /*-------------------------------------- LTDC Configuration -----------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)
 800896c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008970:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008974:	f002 5300 	and.w	r3, r2, #536870912	@ 0x20000000
 8008978:	663b      	str	r3, [r7, #96]	@ 0x60
 800897a:	2300      	movs	r3, #0
 800897c:	667b      	str	r3, [r7, #100]	@ 0x64
 800897e:	e9d7 1218 	ldrd	r1, r2, [r7, #96]	@ 0x60
 8008982:	460b      	mov	r3, r1
 8008984:	4313      	orrs	r3, r2
 8008986:	d00c      	beq.n	80089a2 <HAL_RCCEx_PeriphCLKConfig+0x101a>
  {
    if (RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE) != HAL_OK)
 8008988:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 800898c:	3328      	adds	r3, #40	@ 0x28
 800898e:	2102      	movs	r1, #2
 8008990:	4618      	mov	r0, r3
 8008992:	f000 fd09 	bl	80093a8 <RCCEx_PLL3_Config>
 8008996:	4603      	mov	r3, r0
 8008998:	2b00      	cmp	r3, #0
 800899a:	d002      	beq.n	80089a2 <HAL_RCCEx_PeriphCLKConfig+0x101a>
    {
      status = HAL_ERROR;
 800899c:	2301      	movs	r3, #1
 800899e:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
    }
  }
#endif /* LTDC */

  /*------------------------------ RNG Configuration -------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RNG) == RCC_PERIPHCLK_RNG)
 80089a2:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80089a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80089aa:	f402 3300 	and.w	r3, r2, #131072	@ 0x20000
 80089ae:	65bb      	str	r3, [r7, #88]	@ 0x58
 80089b0:	2300      	movs	r3, #0
 80089b2:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80089b4:	e9d7 1216 	ldrd	r1, r2, [r7, #88]	@ 0x58
 80089b8:	460b      	mov	r3, r1
 80089ba:	4313      	orrs	r3, r2
 80089bc:	d036      	beq.n	8008a2c <HAL_RCCEx_PeriphCLKConfig+0x10a4>
  {

    switch (PeriphClkInit->RngClockSelection)
 80089be:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 80089c2:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80089c4:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80089c8:	d018      	beq.n	80089fc <HAL_RCCEx_PeriphCLKConfig+0x1074>
 80089ca:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80089ce:	d811      	bhi.n	80089f4 <HAL_RCCEx_PeriphCLKConfig+0x106c>
 80089d0:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80089d4:	d014      	beq.n	8008a00 <HAL_RCCEx_PeriphCLKConfig+0x1078>
 80089d6:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80089da:	d80b      	bhi.n	80089f4 <HAL_RCCEx_PeriphCLKConfig+0x106c>
 80089dc:	2b00      	cmp	r3, #0
 80089de:	d011      	beq.n	8008a04 <HAL_RCCEx_PeriphCLKConfig+0x107c>
 80089e0:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80089e4:	d106      	bne.n	80089f4 <HAL_RCCEx_PeriphCLKConfig+0x106c>
    {
      case RCC_RNGCLKSOURCE_PLL:     /* PLL is used as clock source for RNG*/
        /* Enable RNG Clock output generated form System RNG . */
        __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL1_DIVQ);
 80089e6:	4bb7      	ldr	r3, [pc, #732]	@ (8008cc4 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 80089e8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80089ea:	4ab6      	ldr	r2, [pc, #728]	@ (8008cc4 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 80089ec:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80089f0:	62d3      	str	r3, [r2, #44]	@ 0x2c

        /* RNG clock source configuration done later after clock selection check */
        break;
 80089f2:	e008      	b.n	8008a06 <HAL_RCCEx_PeriphCLKConfig+0x107e>
        /* HSI48 oscillator is used as source of RNG clock */
        /* RNG clock source configuration done later after clock selection check */
        break;

      default:
        ret = HAL_ERROR;
 80089f4:	2301      	movs	r3, #1
 80089f6:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
        break;
 80089fa:	e004      	b.n	8008a06 <HAL_RCCEx_PeriphCLKConfig+0x107e>
        break;
 80089fc:	bf00      	nop
 80089fe:	e002      	b.n	8008a06 <HAL_RCCEx_PeriphCLKConfig+0x107e>
        break;
 8008a00:	bf00      	nop
 8008a02:	e000      	b.n	8008a06 <HAL_RCCEx_PeriphCLKConfig+0x107e>
        break;
 8008a04:	bf00      	nop
    }

    if (ret == HAL_OK)
 8008a06:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8008a0a:	2b00      	cmp	r3, #0
 8008a0c:	d10a      	bne.n	8008a24 <HAL_RCCEx_PeriphCLKConfig+0x109c>
    {
      /* Set the source of RNG clock*/
      __HAL_RCC_RNG_CONFIG(PeriphClkInit->RngClockSelection);
 8008a0e:	4bad      	ldr	r3, [pc, #692]	@ (8008cc4 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008a10:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8008a12:	f423 7140 	bic.w	r1, r3, #768	@ 0x300
 8008a16:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008a1a:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8008a1c:	4aa9      	ldr	r2, [pc, #676]	@ (8008cc4 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008a1e:	430b      	orrs	r3, r1
 8008a20:	6553      	str	r3, [r2, #84]	@ 0x54
 8008a22:	e003      	b.n	8008a2c <HAL_RCCEx_PeriphCLKConfig+0x10a4>
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008a24:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8008a28:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
    }

  }

  /*------------------------------ SWPMI1 Configuration ------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SWPMI1) == RCC_PERIPHCLK_SWPMI1)
 8008a2c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008a30:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008a34:	f402 1380 	and.w	r3, r2, #1048576	@ 0x100000
 8008a38:	653b      	str	r3, [r7, #80]	@ 0x50
 8008a3a:	2300      	movs	r3, #0
 8008a3c:	657b      	str	r3, [r7, #84]	@ 0x54
 8008a3e:	e9d7 1214 	ldrd	r1, r2, [r7, #80]	@ 0x50
 8008a42:	460b      	mov	r3, r1
 8008a44:	4313      	orrs	r3, r2
 8008a46:	d009      	beq.n	8008a5c <HAL_RCCEx_PeriphCLKConfig+0x10d4>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SWPMI1CLKSOURCE(PeriphClkInit->Swpmi1ClockSelection));

    /* Configure the SWPMI1 interface clock source */
    __HAL_RCC_SWPMI1_CONFIG(PeriphClkInit->Swpmi1ClockSelection);
 8008a48:	4b9e      	ldr	r3, [pc, #632]	@ (8008cc4 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008a4a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8008a4c:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 8008a50:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008a54:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8008a56:	4a9b      	ldr	r2, [pc, #620]	@ (8008cc4 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008a58:	430b      	orrs	r3, r1
 8008a5a:	6513      	str	r3, [r2, #80]	@ 0x50
    /* Configure the HRTIM1 clock source */
    __HAL_RCC_HRTIM1_CONFIG(PeriphClkInit->Hrtim1ClockSelection);
  }
#endif  /*HRTIM1*/
  /*------------------------------ DFSDM1 Configuration ------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_DFSDM1) == RCC_PERIPHCLK_DFSDM1)
 8008a5c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008a60:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008a64:	f402 1300 	and.w	r3, r2, #2097152	@ 0x200000
 8008a68:	64bb      	str	r3, [r7, #72]	@ 0x48
 8008a6a:	2300      	movs	r3, #0
 8008a6c:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8008a6e:	e9d7 1212 	ldrd	r1, r2, [r7, #72]	@ 0x48
 8008a72:	460b      	mov	r3, r1
 8008a74:	4313      	orrs	r3, r2
 8008a76:	d009      	beq.n	8008a8c <HAL_RCCEx_PeriphCLKConfig+0x1104>
  {
    /* Check the parameters */
    assert_param(IS_RCC_DFSDM1CLKSOURCE(PeriphClkInit->Dfsdm1ClockSelection));

    /* Configure the DFSDM1 interface clock source */
    __HAL_RCC_DFSDM1_CONFIG(PeriphClkInit->Dfsdm1ClockSelection);
 8008a78:	4b92      	ldr	r3, [pc, #584]	@ (8008cc4 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008a7a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8008a7c:	f023 7180 	bic.w	r1, r3, #16777216	@ 0x1000000
 8008a80:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008a84:	6e9b      	ldr	r3, [r3, #104]	@ 0x68
 8008a86:	4a8f      	ldr	r2, [pc, #572]	@ (8008cc4 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008a88:	430b      	orrs	r3, r1
 8008a8a:	6513      	str	r3, [r2, #80]	@ 0x50
    __HAL_RCC_DFSDM2_CONFIG(PeriphClkInit->Dfsdm2ClockSelection);
  }
#endif  /* DFSDM2 */

  /*------------------------------------ TIM configuration --------------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == RCC_PERIPHCLK_TIM)
 8008a8c:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008a90:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008a94:	f002 4380 	and.w	r3, r2, #1073741824	@ 0x40000000
 8008a98:	643b      	str	r3, [r7, #64]	@ 0x40
 8008a9a:	2300      	movs	r3, #0
 8008a9c:	647b      	str	r3, [r7, #68]	@ 0x44
 8008a9e:	e9d7 1210 	ldrd	r1, r2, [r7, #64]	@ 0x40
 8008aa2:	460b      	mov	r3, r1
 8008aa4:	4313      	orrs	r3, r2
 8008aa6:	d00e      	beq.n	8008ac6 <HAL_RCCEx_PeriphCLKConfig+0x113e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_TIMPRES(PeriphClkInit->TIMPresSelection));

    /* Configure Timer Prescaler */
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8008aa8:	4b86      	ldr	r3, [pc, #536]	@ (8008cc4 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008aaa:	691b      	ldr	r3, [r3, #16]
 8008aac:	4a85      	ldr	r2, [pc, #532]	@ (8008cc4 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008aae:	f423 4300 	bic.w	r3, r3, #32768	@ 0x8000
 8008ab2:	6113      	str	r3, [r2, #16]
 8008ab4:	4b83      	ldr	r3, [pc, #524]	@ (8008cc4 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008ab6:	6919      	ldr	r1, [r3, #16]
 8008ab8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008abc:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 8008ac0:	4a80      	ldr	r2, [pc, #512]	@ (8008cc4 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008ac2:	430b      	orrs	r3, r1
 8008ac4:	6113      	str	r3, [r2, #16]
  }

  /*------------------------------------ CKPER configuration --------------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CKPER) == RCC_PERIPHCLK_CKPER)
 8008ac6:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008aca:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008ace:	f002 4300 	and.w	r3, r2, #2147483648	@ 0x80000000
 8008ad2:	63bb      	str	r3, [r7, #56]	@ 0x38
 8008ad4:	2300      	movs	r3, #0
 8008ad6:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8008ad8:	e9d7 120e 	ldrd	r1, r2, [r7, #56]	@ 0x38
 8008adc:	460b      	mov	r3, r1
 8008ade:	4313      	orrs	r3, r2
 8008ae0:	d009      	beq.n	8008af6 <HAL_RCCEx_PeriphCLKConfig+0x116e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLKPSOURCE(PeriphClkInit->CkperClockSelection));

    /* Configure the CKPER clock source */
    __HAL_RCC_CLKP_CONFIG(PeriphClkInit->CkperClockSelection);
 8008ae2:	4b78      	ldr	r3, [pc, #480]	@ (8008cc4 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008ae4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8008ae6:	f023 5140 	bic.w	r1, r3, #805306368	@ 0x30000000
 8008aea:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008aee:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8008af0:	4a74      	ldr	r2, [pc, #464]	@ (8008cc4 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008af2:	430b      	orrs	r3, r1
 8008af4:	64d3      	str	r3, [r2, #76]	@ 0x4c
  }

  /*------------------------------ CEC Configuration ------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CEC) == RCC_PERIPHCLK_CEC)
 8008af6:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008afa:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008afe:	f402 0300 	and.w	r3, r2, #8388608	@ 0x800000
 8008b02:	633b      	str	r3, [r7, #48]	@ 0x30
 8008b04:	2300      	movs	r3, #0
 8008b06:	637b      	str	r3, [r7, #52]	@ 0x34
 8008b08:	e9d7 120c 	ldrd	r1, r2, [r7, #48]	@ 0x30
 8008b0c:	460b      	mov	r3, r1
 8008b0e:	4313      	orrs	r3, r2
 8008b10:	d00a      	beq.n	8008b28 <HAL_RCCEx_PeriphCLKConfig+0x11a0>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CECCLKSOURCE(PeriphClkInit->CecClockSelection));

    /* Configure the CEC interface clock source */
    __HAL_RCC_CEC_CONFIG(PeriphClkInit->CecClockSelection);
 8008b12:	4b6c      	ldr	r3, [pc, #432]	@ (8008cc4 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008b14:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8008b16:	f423 0140 	bic.w	r1, r3, #12582912	@ 0xc00000
 8008b1a:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008b1e:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8008b22:	4a68      	ldr	r2, [pc, #416]	@ (8008cc4 <HAL_RCCEx_PeriphCLKConfig+0x133c>)
 8008b24:	430b      	orrs	r3, r1
 8008b26:	6553      	str	r3, [r2, #84]	@ 0x54
  }

  /*---------------------------- PLL2 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVP) == RCC_PERIPHCLK_PLL2_DIVP)
 8008b28:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008b2c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008b30:	2100      	movs	r1, #0
 8008b32:	62b9      	str	r1, [r7, #40]	@ 0x28
 8008b34:	f003 0301 	and.w	r3, r3, #1
 8008b38:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8008b3a:	e9d7 120a 	ldrd	r1, r2, [r7, #40]	@ 0x28
 8008b3e:	460b      	mov	r3, r1
 8008b40:	4313      	orrs	r3, r2
 8008b42:	d011      	beq.n	8008b68 <HAL_RCCEx_PeriphCLKConfig+0x11e0>
  {
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_P_UPDATE);
 8008b44:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008b48:	3308      	adds	r3, #8
 8008b4a:	2100      	movs	r1, #0
 8008b4c:	4618      	mov	r0, r3
 8008b4e:	f000 fb79 	bl	8009244 <RCCEx_PLL2_Config>
 8008b52:	4603      	mov	r3, r0
 8008b54:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
    
    if (ret == HAL_OK)
 8008b58:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8008b5c:	2b00      	cmp	r3, #0
 8008b5e:	d003      	beq.n	8008b68 <HAL_RCCEx_PeriphCLKConfig+0x11e0>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008b60:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8008b64:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
    } 
  }
  
  
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVQ) == RCC_PERIPHCLK_PLL2_DIVQ)
 8008b68:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008b6c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008b70:	2100      	movs	r1, #0
 8008b72:	6239      	str	r1, [r7, #32]
 8008b74:	f003 0302 	and.w	r3, r3, #2
 8008b78:	627b      	str	r3, [r7, #36]	@ 0x24
 8008b7a:	e9d7 1208 	ldrd	r1, r2, [r7, #32]
 8008b7e:	460b      	mov	r3, r1
 8008b80:	4313      	orrs	r3, r2
 8008b82:	d011      	beq.n	8008ba8 <HAL_RCCEx_PeriphCLKConfig+0x1220>
  {
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_Q_UPDATE);
 8008b84:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008b88:	3308      	adds	r3, #8
 8008b8a:	2101      	movs	r1, #1
 8008b8c:	4618      	mov	r0, r3
 8008b8e:	f000 fb59 	bl	8009244 <RCCEx_PLL2_Config>
 8008b92:	4603      	mov	r3, r0
 8008b94:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
    
    if (ret == HAL_OK)
 8008b98:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8008b9c:	2b00      	cmp	r3, #0
 8008b9e:	d003      	beq.n	8008ba8 <HAL_RCCEx_PeriphCLKConfig+0x1220>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008ba0:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8008ba4:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
    }
  }
  
  
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL2_DIVR) == RCC_PERIPHCLK_PLL2_DIVR)
 8008ba8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008bac:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008bb0:	2100      	movs	r1, #0
 8008bb2:	61b9      	str	r1, [r7, #24]
 8008bb4:	f003 0304 	and.w	r3, r3, #4
 8008bb8:	61fb      	str	r3, [r7, #28]
 8008bba:	e9d7 1206 	ldrd	r1, r2, [r7, #24]
 8008bbe:	460b      	mov	r3, r1
 8008bc0:	4313      	orrs	r3, r2
 8008bc2:	d011      	beq.n	8008be8 <HAL_RCCEx_PeriphCLKConfig+0x1260>
  {
    ret = RCCEx_PLL2_Config(&(PeriphClkInit->PLL2), DIVIDER_R_UPDATE);
 8008bc4:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008bc8:	3308      	adds	r3, #8
 8008bca:	2102      	movs	r1, #2
 8008bcc:	4618      	mov	r0, r3
 8008bce:	f000 fb39 	bl	8009244 <RCCEx_PLL2_Config>
 8008bd2:	4603      	mov	r3, r0
 8008bd4:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
    
    if (ret == HAL_OK)
 8008bd8:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8008bdc:	2b00      	cmp	r3, #0
 8008bde:	d003      	beq.n	8008be8 <HAL_RCCEx_PeriphCLKConfig+0x1260>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008be0:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8008be4:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
    }
  }
  

  /*---------------------------- PLL3 configuration -------------------------------*/
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVP) == RCC_PERIPHCLK_PLL3_DIVP)
 8008be8:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008bec:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008bf0:	2100      	movs	r1, #0
 8008bf2:	6139      	str	r1, [r7, #16]
 8008bf4:	f003 0308 	and.w	r3, r3, #8
 8008bf8:	617b      	str	r3, [r7, #20]
 8008bfa:	e9d7 1204 	ldrd	r1, r2, [r7, #16]
 8008bfe:	460b      	mov	r3, r1
 8008c00:	4313      	orrs	r3, r2
 8008c02:	d011      	beq.n	8008c28 <HAL_RCCEx_PeriphCLKConfig+0x12a0>
  {
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_P_UPDATE);
 8008c04:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008c08:	3328      	adds	r3, #40	@ 0x28
 8008c0a:	2100      	movs	r1, #0
 8008c0c:	4618      	mov	r0, r3
 8008c0e:	f000 fbcb 	bl	80093a8 <RCCEx_PLL3_Config>
 8008c12:	4603      	mov	r3, r0
 8008c14:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
  
    if (ret == HAL_OK)
 8008c18:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8008c1c:	2b00      	cmp	r3, #0
 8008c1e:	d003      	beq.n	8008c28 <HAL_RCCEx_PeriphCLKConfig+0x12a0>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008c20:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8008c24:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
    }
  }
  
  
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVQ) == RCC_PERIPHCLK_PLL3_DIVQ)
 8008c28:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008c2c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008c30:	2100      	movs	r1, #0
 8008c32:	60b9      	str	r1, [r7, #8]
 8008c34:	f003 0310 	and.w	r3, r3, #16
 8008c38:	60fb      	str	r3, [r7, #12]
 8008c3a:	e9d7 1202 	ldrd	r1, r2, [r7, #8]
 8008c3e:	460b      	mov	r3, r1
 8008c40:	4313      	orrs	r3, r2
 8008c42:	d011      	beq.n	8008c68 <HAL_RCCEx_PeriphCLKConfig+0x12e0>
  {
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_Q_UPDATE);
 8008c44:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008c48:	3328      	adds	r3, #40	@ 0x28
 8008c4a:	2101      	movs	r1, #1
 8008c4c:	4618      	mov	r0, r3
 8008c4e:	f000 fbab 	bl	80093a8 <RCCEx_PLL3_Config>
 8008c52:	4603      	mov	r3, r0
 8008c54:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
    
    if (ret == HAL_OK)
 8008c58:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8008c5c:	2b00      	cmp	r3, #0
 8008c5e:	d003      	beq.n	8008c68 <HAL_RCCEx_PeriphCLKConfig+0x12e0>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008c60:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8008c64:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
    }
  }
  
  
  if (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLL3_DIVR) == RCC_PERIPHCLK_PLL3_DIVR)
 8008c68:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008c6c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008c70:	2100      	movs	r1, #0
 8008c72:	6039      	str	r1, [r7, #0]
 8008c74:	f003 0320 	and.w	r3, r3, #32
 8008c78:	607b      	str	r3, [r7, #4]
 8008c7a:	e9d7 1200 	ldrd	r1, r2, [r7]
 8008c7e:	460b      	mov	r3, r1
 8008c80:	4313      	orrs	r3, r2
 8008c82:	d011      	beq.n	8008ca8 <HAL_RCCEx_PeriphCLKConfig+0x1320>
  {
    ret = RCCEx_PLL3_Config(&(PeriphClkInit->PLL3), DIVIDER_R_UPDATE);
 8008c84:	f8d7 3104 	ldr.w	r3, [r7, #260]	@ 0x104
 8008c88:	3328      	adds	r3, #40	@ 0x28
 8008c8a:	2102      	movs	r1, #2
 8008c8c:	4618      	mov	r0, r3
 8008c8e:	f000 fb8b 	bl	80093a8 <RCCEx_PLL3_Config>
 8008c92:	4603      	mov	r3, r0
 8008c94:	f887 3117 	strb.w	r3, [r7, #279]	@ 0x117
    
    if (ret == HAL_OK)
 8008c98:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8008c9c:	2b00      	cmp	r3, #0
 8008c9e:	d003      	beq.n	8008ca8 <HAL_RCCEx_PeriphCLKConfig+0x1320>
      /*Nothing to do*/
    }
    else
    {
      /* set overall return value */
      status = ret;
 8008ca0:	f897 3117 	ldrb.w	r3, [r7, #279]	@ 0x117
 8008ca4:	f887 3116 	strb.w	r3, [r7, #278]	@ 0x116
    } 
  }

  if (status == HAL_OK)
 8008ca8:	f897 3116 	ldrb.w	r3, [r7, #278]	@ 0x116
 8008cac:	2b00      	cmp	r3, #0
 8008cae:	d101      	bne.n	8008cb4 <HAL_RCCEx_PeriphCLKConfig+0x132c>
  {
    return HAL_OK;
 8008cb0:	2300      	movs	r3, #0
 8008cb2:	e000      	b.n	8008cb6 <HAL_RCCEx_PeriphCLKConfig+0x132e>
  }
  return HAL_ERROR;
 8008cb4:	2301      	movs	r3, #1
}
 8008cb6:	4618      	mov	r0, r3
 8008cb8:	f507 778c 	add.w	r7, r7, #280	@ 0x118
 8008cbc:	46bd      	mov	sp, r7
 8008cbe:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8008cc2:	bf00      	nop
 8008cc4:	58024400 	.word	0x58024400

08008cc8 <HAL_RCCEx_GetD3PCLK1Freq>:
  * @note   Each time D3PCLK1 changes, this function must be called to update the
  *         right D3PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval D3PCLK1 frequency
  */
uint32_t HAL_RCCEx_GetD3PCLK1Freq(void)
{
 8008cc8:	b580      	push	{r7, lr}
 8008cca:	af00      	add	r7, sp, #0
#if defined(RCC_D3CFGR_D3PPRE)
  /* Get HCLK source and Compute D3PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> (D1CorePrescTable[(RCC->D3CFGR & RCC_D3CFGR_D3PPRE) >> RCC_D3CFGR_D3PPRE_Pos] & 0x1FU));
 8008ccc:	f7fe fe00 	bl	80078d0 <HAL_RCC_GetHCLKFreq>
 8008cd0:	4602      	mov	r2, r0
 8008cd2:	4b06      	ldr	r3, [pc, #24]	@ (8008cec <HAL_RCCEx_GetD3PCLK1Freq+0x24>)
 8008cd4:	6a1b      	ldr	r3, [r3, #32]
 8008cd6:	091b      	lsrs	r3, r3, #4
 8008cd8:	f003 0307 	and.w	r3, r3, #7
 8008cdc:	4904      	ldr	r1, [pc, #16]	@ (8008cf0 <HAL_RCCEx_GetD3PCLK1Freq+0x28>)
 8008cde:	5ccb      	ldrb	r3, [r1, r3]
 8008ce0:	f003 031f 	and.w	r3, r3, #31
 8008ce4:	fa22 f303 	lsr.w	r3, r2, r3
#else
  /* Get HCLK source and Compute D3PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> (D1CorePrescTable[(RCC->SRDCFGR & RCC_SRDCFGR_SRDPPRE) >> RCC_SRDCFGR_SRDPPRE_Pos] & 0x1FU));
#endif
}
 8008ce8:	4618      	mov	r0, r3
 8008cea:	bd80      	pop	{r7, pc}
 8008cec:	58024400 	.word	0x58024400
 8008cf0:	08027500 	.word	0x08027500

08008cf4 <HAL_RCCEx_GetPLL2ClockFreq>:
  *         right PLL2CLK value. Otherwise, any configuration based on this function will be incorrect.
  * @param  PLL2_Clocks structure.
  * @retval None
  */
void HAL_RCCEx_GetPLL2ClockFreq(PLL2_ClocksTypeDef *PLL2_Clocks)
{
 8008cf4:	b480      	push	{r7}
 8008cf6:	b089      	sub	sp, #36	@ 0x24
 8008cf8:	af00      	add	r7, sp, #0
 8008cfa:	6078      	str	r0, [r7, #4]
  float_t fracn2, pll2vco;

  /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLL2M) * PLL2N
     PLL2xCLK = PLL2_VCO / PLL2x
  */
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 8008cfc:	4ba1      	ldr	r3, [pc, #644]	@ (8008f84 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8008cfe:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008d00:	f003 0303 	and.w	r3, r3, #3
 8008d04:	61bb      	str	r3, [r7, #24]
  pll2m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM2) >> 12);
 8008d06:	4b9f      	ldr	r3, [pc, #636]	@ (8008f84 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8008d08:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008d0a:	0b1b      	lsrs	r3, r3, #12
 8008d0c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8008d10:	617b      	str	r3, [r7, #20]
  pll2fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL2FRACEN) >> RCC_PLLCFGR_PLL2FRACEN_Pos;
 8008d12:	4b9c      	ldr	r3, [pc, #624]	@ (8008f84 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8008d14:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008d16:	091b      	lsrs	r3, r3, #4
 8008d18:	f003 0301 	and.w	r3, r3, #1
 8008d1c:	613b      	str	r3, [r7, #16]
  fracn2 = (float_t)(uint32_t)(pll2fracen * ((RCC->PLL2FRACR & RCC_PLL2FRACR_FRACN2) >> 3));
 8008d1e:	4b99      	ldr	r3, [pc, #612]	@ (8008f84 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8008d20:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8008d22:	08db      	lsrs	r3, r3, #3
 8008d24:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8008d28:	693a      	ldr	r2, [r7, #16]
 8008d2a:	fb02 f303 	mul.w	r3, r2, r3
 8008d2e:	ee07 3a90 	vmov	s15, r3
 8008d32:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008d36:	edc7 7a03 	vstr	s15, [r7, #12]

  if (pll2m != 0U)
 8008d3a:	697b      	ldr	r3, [r7, #20]
 8008d3c:	2b00      	cmp	r3, #0
 8008d3e:	f000 8111 	beq.w	8008f64 <HAL_RCCEx_GetPLL2ClockFreq+0x270>
  {
    switch (pllsource)
 8008d42:	69bb      	ldr	r3, [r7, #24]
 8008d44:	2b02      	cmp	r3, #2
 8008d46:	f000 8083 	beq.w	8008e50 <HAL_RCCEx_GetPLL2ClockFreq+0x15c>
 8008d4a:	69bb      	ldr	r3, [r7, #24]
 8008d4c:	2b02      	cmp	r3, #2
 8008d4e:	f200 80a1 	bhi.w	8008e94 <HAL_RCCEx_GetPLL2ClockFreq+0x1a0>
 8008d52:	69bb      	ldr	r3, [r7, #24]
 8008d54:	2b00      	cmp	r3, #0
 8008d56:	d003      	beq.n	8008d60 <HAL_RCCEx_GetPLL2ClockFreq+0x6c>
 8008d58:	69bb      	ldr	r3, [r7, #24]
 8008d5a:	2b01      	cmp	r3, #1
 8008d5c:	d056      	beq.n	8008e0c <HAL_RCCEx_GetPLL2ClockFreq+0x118>
 8008d5e:	e099      	b.n	8008e94 <HAL_RCCEx_GetPLL2ClockFreq+0x1a0>
    {

      case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8008d60:	4b88      	ldr	r3, [pc, #544]	@ (8008f84 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8008d62:	681b      	ldr	r3, [r3, #0]
 8008d64:	f003 0320 	and.w	r3, r3, #32
 8008d68:	2b00      	cmp	r3, #0
 8008d6a:	d02d      	beq.n	8008dc8 <HAL_RCCEx_GetPLL2ClockFreq+0xd4>
        {
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8008d6c:	4b85      	ldr	r3, [pc, #532]	@ (8008f84 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8008d6e:	681b      	ldr	r3, [r3, #0]
 8008d70:	08db      	lsrs	r3, r3, #3
 8008d72:	f003 0303 	and.w	r3, r3, #3
 8008d76:	4a84      	ldr	r2, [pc, #528]	@ (8008f88 <HAL_RCCEx_GetPLL2ClockFreq+0x294>)
 8008d78:	fa22 f303 	lsr.w	r3, r2, r3
 8008d7c:	60bb      	str	r3, [r7, #8]
          pll2vco = ((float_t)hsivalue / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
 8008d7e:	68bb      	ldr	r3, [r7, #8]
 8008d80:	ee07 3a90 	vmov	s15, r3
 8008d84:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8008d88:	697b      	ldr	r3, [r7, #20]
 8008d8a:	ee07 3a90 	vmov	s15, r3
 8008d8e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008d92:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8008d96:	4b7b      	ldr	r3, [pc, #492]	@ (8008f84 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8008d98:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008d9a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008d9e:	ee07 3a90 	vmov	s15, r3
 8008da2:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8008da6:	ed97 6a03 	vldr	s12, [r7, #12]
 8008daa:	eddf 5a78 	vldr	s11, [pc, #480]	@ 8008f8c <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8008dae:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8008db2:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8008db6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8008dba:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008dbe:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008dc2:	edc7 7a07 	vstr	s15, [r7, #28]
        }
        else
        {
          pll2vco = ((float_t)HSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
        }
        break;
 8008dc6:	e087      	b.n	8008ed8 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
          pll2vco = ((float_t)HSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
 8008dc8:	697b      	ldr	r3, [r7, #20]
 8008dca:	ee07 3a90 	vmov	s15, r3
 8008dce:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008dd2:	eddf 6a6f 	vldr	s13, [pc, #444]	@ 8008f90 <HAL_RCCEx_GetPLL2ClockFreq+0x29c>
 8008dd6:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8008dda:	4b6a      	ldr	r3, [pc, #424]	@ (8008f84 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8008ddc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008dde:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008de2:	ee07 3a90 	vmov	s15, r3
 8008de6:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8008dea:	ed97 6a03 	vldr	s12, [r7, #12]
 8008dee:	eddf 5a67 	vldr	s11, [pc, #412]	@ 8008f8c <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8008df2:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8008df6:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8008dfa:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8008dfe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008e02:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008e06:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8008e0a:	e065      	b.n	8008ed8 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>

      case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
        pll2vco = ((float_t)CSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
 8008e0c:	697b      	ldr	r3, [r7, #20]
 8008e0e:	ee07 3a90 	vmov	s15, r3
 8008e12:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008e16:	eddf 6a5f 	vldr	s13, [pc, #380]	@ 8008f94 <HAL_RCCEx_GetPLL2ClockFreq+0x2a0>
 8008e1a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8008e1e:	4b59      	ldr	r3, [pc, #356]	@ (8008f84 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8008e20:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008e22:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008e26:	ee07 3a90 	vmov	s15, r3
 8008e2a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8008e2e:	ed97 6a03 	vldr	s12, [r7, #12]
 8008e32:	eddf 5a56 	vldr	s11, [pc, #344]	@ 8008f8c <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8008e36:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8008e3a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8008e3e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8008e42:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008e46:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008e4a:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8008e4e:	e043      	b.n	8008ed8 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>

      case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
        pll2vco = ((float_t)HSE_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
 8008e50:	697b      	ldr	r3, [r7, #20]
 8008e52:	ee07 3a90 	vmov	s15, r3
 8008e56:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008e5a:	eddf 6a4f 	vldr	s13, [pc, #316]	@ 8008f98 <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>
 8008e5e:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8008e62:	4b48      	ldr	r3, [pc, #288]	@ (8008f84 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8008e64:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008e66:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008e6a:	ee07 3a90 	vmov	s15, r3
 8008e6e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8008e72:	ed97 6a03 	vldr	s12, [r7, #12]
 8008e76:	eddf 5a45 	vldr	s11, [pc, #276]	@ 8008f8c <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8008e7a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8008e7e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8008e82:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8008e86:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008e8a:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008e8e:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8008e92:	e021      	b.n	8008ed8 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>

      default:
        pll2vco = ((float_t)CSI_VALUE / (float_t)pll2m) * ((float_t)(uint32_t)(RCC->PLL2DIVR & RCC_PLL2DIVR_N2) + (fracn2 / (float_t)0x2000) + (float_t)1);
 8008e94:	697b      	ldr	r3, [r7, #20]
 8008e96:	ee07 3a90 	vmov	s15, r3
 8008e9a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008e9e:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 8008f94 <HAL_RCCEx_GetPLL2ClockFreq+0x2a0>
 8008ea2:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8008ea6:	4b37      	ldr	r3, [pc, #220]	@ (8008f84 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8008ea8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008eaa:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008eae:	ee07 3a90 	vmov	s15, r3
 8008eb2:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8008eb6:	ed97 6a03 	vldr	s12, [r7, #12]
 8008eba:	eddf 5a34 	vldr	s11, [pc, #208]	@ 8008f8c <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8008ebe:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8008ec2:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8008ec6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8008eca:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8008ece:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008ed2:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 8008ed6:	bf00      	nop
    }
    PLL2_Clocks->PLL2_P_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_P2) >> 9)  + (float_t)1)) ;
 8008ed8:	4b2a      	ldr	r3, [pc, #168]	@ (8008f84 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8008eda:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008edc:	0a5b      	lsrs	r3, r3, #9
 8008ede:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8008ee2:	ee07 3a90 	vmov	s15, r3
 8008ee6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008eea:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8008eee:	ee37 7a87 	vadd.f32	s14, s15, s14
 8008ef2:	edd7 6a07 	vldr	s13, [r7, #28]
 8008ef6:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8008efa:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8008efe:	ee17 2a90 	vmov	r2, s15
 8008f02:	687b      	ldr	r3, [r7, #4]
 8008f04:	601a      	str	r2, [r3, #0]
    PLL2_Clocks->PLL2_Q_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_Q2) >> 16) + (float_t)1)) ;
 8008f06:	4b1f      	ldr	r3, [pc, #124]	@ (8008f84 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8008f08:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008f0a:	0c1b      	lsrs	r3, r3, #16
 8008f0c:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8008f10:	ee07 3a90 	vmov	s15, r3
 8008f14:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008f18:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8008f1c:	ee37 7a87 	vadd.f32	s14, s15, s14
 8008f20:	edd7 6a07 	vldr	s13, [r7, #28]
 8008f24:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8008f28:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8008f2c:	ee17 2a90 	vmov	r2, s15
 8008f30:	687b      	ldr	r3, [r7, #4]
 8008f32:	605a      	str	r2, [r3, #4]
    PLL2_Clocks->PLL2_R_Frequency = (uint32_t)(float_t)(pll2vco / ((float_t)(uint32_t)((RCC->PLL2DIVR & RCC_PLL2DIVR_R2) >> 24) + (float_t)1)) ;
 8008f34:	4b13      	ldr	r3, [pc, #76]	@ (8008f84 <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8008f36:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8008f38:	0e1b      	lsrs	r3, r3, #24
 8008f3a:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8008f3e:	ee07 3a90 	vmov	s15, r3
 8008f42:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008f46:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8008f4a:	ee37 7a87 	vadd.f32	s14, s15, s14
 8008f4e:	edd7 6a07 	vldr	s13, [r7, #28]
 8008f52:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8008f56:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8008f5a:	ee17 2a90 	vmov	r2, s15
 8008f5e:	687b      	ldr	r3, [r7, #4]
 8008f60:	609a      	str	r2, [r3, #8]
  {
    PLL2_Clocks->PLL2_P_Frequency = 0U;
    PLL2_Clocks->PLL2_Q_Frequency = 0U;
    PLL2_Clocks->PLL2_R_Frequency = 0U;
  }
}
 8008f62:	e008      	b.n	8008f76 <HAL_RCCEx_GetPLL2ClockFreq+0x282>
    PLL2_Clocks->PLL2_P_Frequency = 0U;
 8008f64:	687b      	ldr	r3, [r7, #4]
 8008f66:	2200      	movs	r2, #0
 8008f68:	601a      	str	r2, [r3, #0]
    PLL2_Clocks->PLL2_Q_Frequency = 0U;
 8008f6a:	687b      	ldr	r3, [r7, #4]
 8008f6c:	2200      	movs	r2, #0
 8008f6e:	605a      	str	r2, [r3, #4]
    PLL2_Clocks->PLL2_R_Frequency = 0U;
 8008f70:	687b      	ldr	r3, [r7, #4]
 8008f72:	2200      	movs	r2, #0
 8008f74:	609a      	str	r2, [r3, #8]
}
 8008f76:	bf00      	nop
 8008f78:	3724      	adds	r7, #36	@ 0x24
 8008f7a:	46bd      	mov	sp, r7
 8008f7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f80:	4770      	bx	lr
 8008f82:	bf00      	nop
 8008f84:	58024400 	.word	0x58024400
 8008f88:	03d09000 	.word	0x03d09000
 8008f8c:	46000000 	.word	0x46000000
 8008f90:	4c742400 	.word	0x4c742400
 8008f94:	4a742400 	.word	0x4a742400
 8008f98:	4bbebc20 	.word	0x4bbebc20

08008f9c <HAL_RCCEx_GetPLL3ClockFreq>:
  *         right PLL3CLK value. Otherwise, any configuration based on this function will be incorrect.
  * @param  PLL3_Clocks structure.
  * @retval None
  */
void HAL_RCCEx_GetPLL3ClockFreq(PLL3_ClocksTypeDef *PLL3_Clocks)
{
 8008f9c:	b480      	push	{r7}
 8008f9e:	b089      	sub	sp, #36	@ 0x24
 8008fa0:	af00      	add	r7, sp, #0
 8008fa2:	6078      	str	r0, [r7, #4]
  float_t fracn3, pll3vco;

  /* PLL3_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLL3M) * PLL3N
     PLL3xCLK = PLL3_VCO / PLLxR
  */
  pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 8008fa4:	4ba1      	ldr	r3, [pc, #644]	@ (800922c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8008fa6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008fa8:	f003 0303 	and.w	r3, r3, #3
 8008fac:	61bb      	str	r3, [r7, #24]
  pll3m = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM3) >> 20)  ;
 8008fae:	4b9f      	ldr	r3, [pc, #636]	@ (800922c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8008fb0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8008fb2:	0d1b      	lsrs	r3, r3, #20
 8008fb4:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8008fb8:	617b      	str	r3, [r7, #20]
  pll3fracen = (RCC->PLLCFGR & RCC_PLLCFGR_PLL3FRACEN) >> RCC_PLLCFGR_PLL3FRACEN_Pos;
 8008fba:	4b9c      	ldr	r3, [pc, #624]	@ (800922c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8008fbc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8008fbe:	0a1b      	lsrs	r3, r3, #8
 8008fc0:	f003 0301 	and.w	r3, r3, #1
 8008fc4:	613b      	str	r3, [r7, #16]
  fracn3 = (float_t)(uint32_t)(pll3fracen * ((RCC->PLL3FRACR & RCC_PLL3FRACR_FRACN3) >> 3));
 8008fc6:	4b99      	ldr	r3, [pc, #612]	@ (800922c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8008fc8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8008fca:	08db      	lsrs	r3, r3, #3
 8008fcc:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8008fd0:	693a      	ldr	r2, [r7, #16]
 8008fd2:	fb02 f303 	mul.w	r3, r2, r3
 8008fd6:	ee07 3a90 	vmov	s15, r3
 8008fda:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008fde:	edc7 7a03 	vstr	s15, [r7, #12]

  if (pll3m != 0U)
 8008fe2:	697b      	ldr	r3, [r7, #20]
 8008fe4:	2b00      	cmp	r3, #0
 8008fe6:	f000 8111 	beq.w	800920c <HAL_RCCEx_GetPLL3ClockFreq+0x270>
  {
    switch (pllsource)
 8008fea:	69bb      	ldr	r3, [r7, #24]
 8008fec:	2b02      	cmp	r3, #2
 8008fee:	f000 8083 	beq.w	80090f8 <HAL_RCCEx_GetPLL3ClockFreq+0x15c>
 8008ff2:	69bb      	ldr	r3, [r7, #24]
 8008ff4:	2b02      	cmp	r3, #2
 8008ff6:	f200 80a1 	bhi.w	800913c <HAL_RCCEx_GetPLL3ClockFreq+0x1a0>
 8008ffa:	69bb      	ldr	r3, [r7, #24]
 8008ffc:	2b00      	cmp	r3, #0
 8008ffe:	d003      	beq.n	8009008 <HAL_RCCEx_GetPLL3ClockFreq+0x6c>
 8009000:	69bb      	ldr	r3, [r7, #24]
 8009002:	2b01      	cmp	r3, #1
 8009004:	d056      	beq.n	80090b4 <HAL_RCCEx_GetPLL3ClockFreq+0x118>
 8009006:	e099      	b.n	800913c <HAL_RCCEx_GetPLL3ClockFreq+0x1a0>
    {
      case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8009008:	4b88      	ldr	r3, [pc, #544]	@ (800922c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800900a:	681b      	ldr	r3, [r3, #0]
 800900c:	f003 0320 	and.w	r3, r3, #32
 8009010:	2b00      	cmp	r3, #0
 8009012:	d02d      	beq.n	8009070 <HAL_RCCEx_GetPLL3ClockFreq+0xd4>
        {
          hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8009014:	4b85      	ldr	r3, [pc, #532]	@ (800922c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009016:	681b      	ldr	r3, [r3, #0]
 8009018:	08db      	lsrs	r3, r3, #3
 800901a:	f003 0303 	and.w	r3, r3, #3
 800901e:	4a84      	ldr	r2, [pc, #528]	@ (8009230 <HAL_RCCEx_GetPLL3ClockFreq+0x294>)
 8009020:	fa22 f303 	lsr.w	r3, r2, r3
 8009024:	60bb      	str	r3, [r7, #8]
          pll3vco = ((float_t)hsivalue / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
 8009026:	68bb      	ldr	r3, [r7, #8]
 8009028:	ee07 3a90 	vmov	s15, r3
 800902c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009030:	697b      	ldr	r3, [r7, #20]
 8009032:	ee07 3a90 	vmov	s15, r3
 8009036:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800903a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800903e:	4b7b      	ldr	r3, [pc, #492]	@ (800922c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009040:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8009042:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009046:	ee07 3a90 	vmov	s15, r3
 800904a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800904e:	ed97 6a03 	vldr	s12, [r7, #12]
 8009052:	eddf 5a78 	vldr	s11, [pc, #480]	@ 8009234 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8009056:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800905a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800905e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8009062:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009066:	ee67 7a27 	vmul.f32	s15, s14, s15
 800906a:	edc7 7a07 	vstr	s15, [r7, #28]
        }
        else
        {
          pll3vco = ((float_t)HSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
        }
        break;
 800906e:	e087      	b.n	8009180 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
          pll3vco = ((float_t)HSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
 8009070:	697b      	ldr	r3, [r7, #20]
 8009072:	ee07 3a90 	vmov	s15, r3
 8009076:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800907a:	eddf 6a6f 	vldr	s13, [pc, #444]	@ 8009238 <HAL_RCCEx_GetPLL3ClockFreq+0x29c>
 800907e:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009082:	4b6a      	ldr	r3, [pc, #424]	@ (800922c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009084:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8009086:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800908a:	ee07 3a90 	vmov	s15, r3
 800908e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009092:	ed97 6a03 	vldr	s12, [r7, #12]
 8009096:	eddf 5a67 	vldr	s11, [pc, #412]	@ 8009234 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 800909a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800909e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80090a2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80090a6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80090aa:	ee67 7a27 	vmul.f32	s15, s14, s15
 80090ae:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 80090b2:	e065      	b.n	8009180 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
      case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
        pll3vco = ((float_t)CSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
 80090b4:	697b      	ldr	r3, [r7, #20]
 80090b6:	ee07 3a90 	vmov	s15, r3
 80090ba:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80090be:	eddf 6a5f 	vldr	s13, [pc, #380]	@ 800923c <HAL_RCCEx_GetPLL3ClockFreq+0x2a0>
 80090c2:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80090c6:	4b59      	ldr	r3, [pc, #356]	@ (800922c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 80090c8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80090ca:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80090ce:	ee07 3a90 	vmov	s15, r3
 80090d2:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80090d6:	ed97 6a03 	vldr	s12, [r7, #12]
 80090da:	eddf 5a56 	vldr	s11, [pc, #344]	@ 8009234 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 80090de:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80090e2:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80090e6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80090ea:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80090ee:	ee67 7a27 	vmul.f32	s15, s14, s15
 80090f2:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 80090f6:	e043      	b.n	8009180 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>

      case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
        pll3vco = ((float_t)HSE_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
 80090f8:	697b      	ldr	r3, [r7, #20]
 80090fa:	ee07 3a90 	vmov	s15, r3
 80090fe:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009102:	eddf 6a4f 	vldr	s13, [pc, #316]	@ 8009240 <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>
 8009106:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800910a:	4b48      	ldr	r3, [pc, #288]	@ (800922c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 800910c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800910e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009112:	ee07 3a90 	vmov	s15, r3
 8009116:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800911a:	ed97 6a03 	vldr	s12, [r7, #12]
 800911e:	eddf 5a45 	vldr	s11, [pc, #276]	@ 8009234 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8009122:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009126:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800912a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 800912e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009132:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009136:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 800913a:	e021      	b.n	8009180 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>

      default:
        pll3vco = ((float_t)CSI_VALUE / (float_t)pll3m) * ((float_t)(uint32_t)(RCC->PLL3DIVR & RCC_PLL3DIVR_N3) + (fracn3 / (float_t)0x2000) + (float_t)1);
 800913c:	697b      	ldr	r3, [r7, #20]
 800913e:	ee07 3a90 	vmov	s15, r3
 8009142:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009146:	eddf 6a3d 	vldr	s13, [pc, #244]	@ 800923c <HAL_RCCEx_GetPLL3ClockFreq+0x2a0>
 800914a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800914e:	4b37      	ldr	r3, [pc, #220]	@ (800922c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009150:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8009152:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009156:	ee07 3a90 	vmov	s15, r3
 800915a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800915e:	ed97 6a03 	vldr	s12, [r7, #12]
 8009162:	eddf 5a34 	vldr	s11, [pc, #208]	@ 8009234 <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8009166:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800916a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 800916e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8009172:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009176:	ee67 7a27 	vmul.f32	s15, s14, s15
 800917a:	edc7 7a07 	vstr	s15, [r7, #28]
        break;
 800917e:	bf00      	nop
    }
    PLL3_Clocks->PLL3_P_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_P3) >> 9)  + (float_t)1)) ;
 8009180:	4b2a      	ldr	r3, [pc, #168]	@ (800922c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009182:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8009184:	0a5b      	lsrs	r3, r3, #9
 8009186:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 800918a:	ee07 3a90 	vmov	s15, r3
 800918e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009192:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8009196:	ee37 7a87 	vadd.f32	s14, s15, s14
 800919a:	edd7 6a07 	vldr	s13, [r7, #28]
 800919e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80091a2:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80091a6:	ee17 2a90 	vmov	r2, s15
 80091aa:	687b      	ldr	r3, [r7, #4]
 80091ac:	601a      	str	r2, [r3, #0]
    PLL3_Clocks->PLL3_Q_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_Q3) >> 16) + (float_t)1)) ;
 80091ae:	4b1f      	ldr	r3, [pc, #124]	@ (800922c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 80091b0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80091b2:	0c1b      	lsrs	r3, r3, #16
 80091b4:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 80091b8:	ee07 3a90 	vmov	s15, r3
 80091bc:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80091c0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80091c4:	ee37 7a87 	vadd.f32	s14, s15, s14
 80091c8:	edd7 6a07 	vldr	s13, [r7, #28]
 80091cc:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80091d0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80091d4:	ee17 2a90 	vmov	r2, s15
 80091d8:	687b      	ldr	r3, [r7, #4]
 80091da:	605a      	str	r2, [r3, #4]
    PLL3_Clocks->PLL3_R_Frequency = (uint32_t)(float_t)(pll3vco / ((float_t)(uint32_t)((RCC->PLL3DIVR & RCC_PLL3DIVR_R3) >> 24) + (float_t)1)) ;
 80091dc:	4b13      	ldr	r3, [pc, #76]	@ (800922c <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 80091de:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80091e0:	0e1b      	lsrs	r3, r3, #24
 80091e2:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 80091e6:	ee07 3a90 	vmov	s15, r3
 80091ea:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80091ee:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80091f2:	ee37 7a87 	vadd.f32	s14, s15, s14
 80091f6:	edd7 6a07 	vldr	s13, [r7, #28]
 80091fa:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80091fe:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8009202:	ee17 2a90 	vmov	r2, s15
 8009206:	687b      	ldr	r3, [r7, #4]
 8009208:	609a      	str	r2, [r3, #8]
    PLL3_Clocks->PLL3_P_Frequency = 0U;
    PLL3_Clocks->PLL3_Q_Frequency = 0U;
    PLL3_Clocks->PLL3_R_Frequency = 0U;
  }

}
 800920a:	e008      	b.n	800921e <HAL_RCCEx_GetPLL3ClockFreq+0x282>
    PLL3_Clocks->PLL3_P_Frequency = 0U;
 800920c:	687b      	ldr	r3, [r7, #4]
 800920e:	2200      	movs	r2, #0
 8009210:	601a      	str	r2, [r3, #0]
    PLL3_Clocks->PLL3_Q_Frequency = 0U;
 8009212:	687b      	ldr	r3, [r7, #4]
 8009214:	2200      	movs	r2, #0
 8009216:	605a      	str	r2, [r3, #4]
    PLL3_Clocks->PLL3_R_Frequency = 0U;
 8009218:	687b      	ldr	r3, [r7, #4]
 800921a:	2200      	movs	r2, #0
 800921c:	609a      	str	r2, [r3, #8]
}
 800921e:	bf00      	nop
 8009220:	3724      	adds	r7, #36	@ 0x24
 8009222:	46bd      	mov	sp, r7
 8009224:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009228:	4770      	bx	lr
 800922a:	bf00      	nop
 800922c:	58024400 	.word	0x58024400
 8009230:	03d09000 	.word	0x03d09000
 8009234:	46000000 	.word	0x46000000
 8009238:	4c742400 	.word	0x4c742400
 800923c:	4a742400 	.word	0x4a742400
 8009240:	4bbebc20 	.word	0x4bbebc20

08009244 <RCCEx_PLL2_Config>:
  * @note   PLL2 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL2_Config(RCC_PLL2InitTypeDef *pll2, uint32_t Divider)
{
 8009244:	b580      	push	{r7, lr}
 8009246:	b084      	sub	sp, #16
 8009248:	af00      	add	r7, sp, #0
 800924a:	6078      	str	r0, [r7, #4]
 800924c:	6039      	str	r1, [r7, #0]

  uint32_t tickstart;
  HAL_StatusTypeDef status = HAL_OK;
 800924e:	2300      	movs	r3, #0
 8009250:	73fb      	strb	r3, [r7, #15]
  assert_param(IS_RCC_PLL2RGE_VALUE(pll2->PLL2RGE));
  assert_param(IS_RCC_PLL2VCO_VALUE(pll2->PLL2VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll2->PLL2FRACN));

  /* Check that PLL2 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 8009252:	4b53      	ldr	r3, [pc, #332]	@ (80093a0 <RCCEx_PLL2_Config+0x15c>)
 8009254:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009256:	f003 0303 	and.w	r3, r3, #3
 800925a:	2b03      	cmp	r3, #3
 800925c:	d101      	bne.n	8009262 <RCCEx_PLL2_Config+0x1e>
  {
    return HAL_ERROR;
 800925e:	2301      	movs	r3, #1
 8009260:	e099      	b.n	8009396 <RCCEx_PLL2_Config+0x152>


  else
  {
    /* Disable  PLL2. */
    __HAL_RCC_PLL2_DISABLE();
 8009262:	4b4f      	ldr	r3, [pc, #316]	@ (80093a0 <RCCEx_PLL2_Config+0x15c>)
 8009264:	681b      	ldr	r3, [r3, #0]
 8009266:	4a4e      	ldr	r2, [pc, #312]	@ (80093a0 <RCCEx_PLL2_Config+0x15c>)
 8009268:	f023 6380 	bic.w	r3, r3, #67108864	@ 0x4000000
 800926c:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800926e:	f7f9 ff87 	bl	8003180 <HAL_GetTick>
 8009272:	60b8      	str	r0, [r7, #8]

    /* Wait till PLL is disabled */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
 8009274:	e008      	b.n	8009288 <RCCEx_PLL2_Config+0x44>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 8009276:	f7f9 ff83 	bl	8003180 <HAL_GetTick>
 800927a:	4602      	mov	r2, r0
 800927c:	68bb      	ldr	r3, [r7, #8]
 800927e:	1ad3      	subs	r3, r2, r3
 8009280:	2b02      	cmp	r3, #2
 8009282:	d901      	bls.n	8009288 <RCCEx_PLL2_Config+0x44>
      {
        return HAL_TIMEOUT;
 8009284:	2303      	movs	r3, #3
 8009286:	e086      	b.n	8009396 <RCCEx_PLL2_Config+0x152>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != 0U)
 8009288:	4b45      	ldr	r3, [pc, #276]	@ (80093a0 <RCCEx_PLL2_Config+0x15c>)
 800928a:	681b      	ldr	r3, [r3, #0]
 800928c:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8009290:	2b00      	cmp	r3, #0
 8009292:	d1f0      	bne.n	8009276 <RCCEx_PLL2_Config+0x32>
      }
    }

    /* Configure PLL2 multiplication and division factors. */
    __HAL_RCC_PLL2_CONFIG(pll2->PLL2M,
 8009294:	4b42      	ldr	r3, [pc, #264]	@ (80093a0 <RCCEx_PLL2_Config+0x15c>)
 8009296:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009298:	f423 327c 	bic.w	r2, r3, #258048	@ 0x3f000
 800929c:	687b      	ldr	r3, [r7, #4]
 800929e:	681b      	ldr	r3, [r3, #0]
 80092a0:	031b      	lsls	r3, r3, #12
 80092a2:	493f      	ldr	r1, [pc, #252]	@ (80093a0 <RCCEx_PLL2_Config+0x15c>)
 80092a4:	4313      	orrs	r3, r2
 80092a6:	628b      	str	r3, [r1, #40]	@ 0x28
 80092a8:	687b      	ldr	r3, [r7, #4]
 80092aa:	685b      	ldr	r3, [r3, #4]
 80092ac:	3b01      	subs	r3, #1
 80092ae:	f3c3 0208 	ubfx	r2, r3, #0, #9
 80092b2:	687b      	ldr	r3, [r7, #4]
 80092b4:	689b      	ldr	r3, [r3, #8]
 80092b6:	3b01      	subs	r3, #1
 80092b8:	025b      	lsls	r3, r3, #9
 80092ba:	b29b      	uxth	r3, r3
 80092bc:	431a      	orrs	r2, r3
 80092be:	687b      	ldr	r3, [r7, #4]
 80092c0:	68db      	ldr	r3, [r3, #12]
 80092c2:	3b01      	subs	r3, #1
 80092c4:	041b      	lsls	r3, r3, #16
 80092c6:	f403 03fe 	and.w	r3, r3, #8323072	@ 0x7f0000
 80092ca:	431a      	orrs	r2, r3
 80092cc:	687b      	ldr	r3, [r7, #4]
 80092ce:	691b      	ldr	r3, [r3, #16]
 80092d0:	3b01      	subs	r3, #1
 80092d2:	061b      	lsls	r3, r3, #24
 80092d4:	f003 43fe 	and.w	r3, r3, #2130706432	@ 0x7f000000
 80092d8:	4931      	ldr	r1, [pc, #196]	@ (80093a0 <RCCEx_PLL2_Config+0x15c>)
 80092da:	4313      	orrs	r3, r2
 80092dc:	638b      	str	r3, [r1, #56]	@ 0x38
                          pll2->PLL2P,
                          pll2->PLL2Q,
                          pll2->PLL2R);

    /* Select PLL2 input reference frequency range: VCI */
    __HAL_RCC_PLL2_VCIRANGE(pll2->PLL2RGE) ;
 80092de:	4b30      	ldr	r3, [pc, #192]	@ (80093a0 <RCCEx_PLL2_Config+0x15c>)
 80092e0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80092e2:	f023 02c0 	bic.w	r2, r3, #192	@ 0xc0
 80092e6:	687b      	ldr	r3, [r7, #4]
 80092e8:	695b      	ldr	r3, [r3, #20]
 80092ea:	492d      	ldr	r1, [pc, #180]	@ (80093a0 <RCCEx_PLL2_Config+0x15c>)
 80092ec:	4313      	orrs	r3, r2
 80092ee:	62cb      	str	r3, [r1, #44]	@ 0x2c

    /* Select PLL2 output frequency range : VCO */
    __HAL_RCC_PLL2_VCORANGE(pll2->PLL2VCOSEL) ;
 80092f0:	4b2b      	ldr	r3, [pc, #172]	@ (80093a0 <RCCEx_PLL2_Config+0x15c>)
 80092f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80092f4:	f023 0220 	bic.w	r2, r3, #32
 80092f8:	687b      	ldr	r3, [r7, #4]
 80092fa:	699b      	ldr	r3, [r3, #24]
 80092fc:	4928      	ldr	r1, [pc, #160]	@ (80093a0 <RCCEx_PLL2_Config+0x15c>)
 80092fe:	4313      	orrs	r3, r2
 8009300:	62cb      	str	r3, [r1, #44]	@ 0x2c

    /* Disable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_DISABLE();
 8009302:	4b27      	ldr	r3, [pc, #156]	@ (80093a0 <RCCEx_PLL2_Config+0x15c>)
 8009304:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009306:	4a26      	ldr	r2, [pc, #152]	@ (80093a0 <RCCEx_PLL2_Config+0x15c>)
 8009308:	f023 0310 	bic.w	r3, r3, #16
 800930c:	62d3      	str	r3, [r2, #44]	@ 0x2c

    /* Configures PLL2 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL2FRACN_CONFIG(pll2->PLL2FRACN);
 800930e:	4b24      	ldr	r3, [pc, #144]	@ (80093a0 <RCCEx_PLL2_Config+0x15c>)
 8009310:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 8009312:	4b24      	ldr	r3, [pc, #144]	@ (80093a4 <RCCEx_PLL2_Config+0x160>)
 8009314:	4013      	ands	r3, r2
 8009316:	687a      	ldr	r2, [r7, #4]
 8009318:	69d2      	ldr	r2, [r2, #28]
 800931a:	00d2      	lsls	r2, r2, #3
 800931c:	4920      	ldr	r1, [pc, #128]	@ (80093a0 <RCCEx_PLL2_Config+0x15c>)
 800931e:	4313      	orrs	r3, r2
 8009320:	63cb      	str	r3, [r1, #60]	@ 0x3c

    /* Enable PLL2FRACN . */
    __HAL_RCC_PLL2FRACN_ENABLE();
 8009322:	4b1f      	ldr	r3, [pc, #124]	@ (80093a0 <RCCEx_PLL2_Config+0x15c>)
 8009324:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009326:	4a1e      	ldr	r2, [pc, #120]	@ (80093a0 <RCCEx_PLL2_Config+0x15c>)
 8009328:	f043 0310 	orr.w	r3, r3, #16
 800932c:	62d3      	str	r3, [r2, #44]	@ 0x2c

    /* Enable the PLL2 clock output */
    if (Divider == DIVIDER_P_UPDATE)
 800932e:	683b      	ldr	r3, [r7, #0]
 8009330:	2b00      	cmp	r3, #0
 8009332:	d106      	bne.n	8009342 <RCCEx_PLL2_Config+0xfe>
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVP);
 8009334:	4b1a      	ldr	r3, [pc, #104]	@ (80093a0 <RCCEx_PLL2_Config+0x15c>)
 8009336:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009338:	4a19      	ldr	r2, [pc, #100]	@ (80093a0 <RCCEx_PLL2_Config+0x15c>)
 800933a:	f443 2300 	orr.w	r3, r3, #524288	@ 0x80000
 800933e:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8009340:	e00f      	b.n	8009362 <RCCEx_PLL2_Config+0x11e>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
 8009342:	683b      	ldr	r3, [r7, #0]
 8009344:	2b01      	cmp	r3, #1
 8009346:	d106      	bne.n	8009356 <RCCEx_PLL2_Config+0x112>
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVQ);
 8009348:	4b15      	ldr	r3, [pc, #84]	@ (80093a0 <RCCEx_PLL2_Config+0x15c>)
 800934a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800934c:	4a14      	ldr	r2, [pc, #80]	@ (80093a0 <RCCEx_PLL2_Config+0x15c>)
 800934e:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8009352:	62d3      	str	r3, [r2, #44]	@ 0x2c
 8009354:	e005      	b.n	8009362 <RCCEx_PLL2_Config+0x11e>
    }
    else
    {
      __HAL_RCC_PLL2CLKOUT_ENABLE(RCC_PLL2_DIVR);
 8009356:	4b12      	ldr	r3, [pc, #72]	@ (80093a0 <RCCEx_PLL2_Config+0x15c>)
 8009358:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800935a:	4a11      	ldr	r2, [pc, #68]	@ (80093a0 <RCCEx_PLL2_Config+0x15c>)
 800935c:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8009360:	62d3      	str	r3, [r2, #44]	@ 0x2c
    }

    /* Enable  PLL2. */
    __HAL_RCC_PLL2_ENABLE();
 8009362:	4b0f      	ldr	r3, [pc, #60]	@ (80093a0 <RCCEx_PLL2_Config+0x15c>)
 8009364:	681b      	ldr	r3, [r3, #0]
 8009366:	4a0e      	ldr	r2, [pc, #56]	@ (80093a0 <RCCEx_PLL2_Config+0x15c>)
 8009368:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 800936c:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 800936e:	f7f9 ff07 	bl	8003180 <HAL_GetTick>
 8009372:	60b8      	str	r0, [r7, #8]

    /* Wait till PLL2 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 8009374:	e008      	b.n	8009388 <RCCEx_PLL2_Config+0x144>
    {
      if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 8009376:	f7f9 ff03 	bl	8003180 <HAL_GetTick>
 800937a:	4602      	mov	r2, r0
 800937c:	68bb      	ldr	r3, [r7, #8]
 800937e:	1ad3      	subs	r3, r2, r3
 8009380:	2b02      	cmp	r3, #2
 8009382:	d901      	bls.n	8009388 <RCCEx_PLL2_Config+0x144>
      {
        return HAL_TIMEOUT;
 8009384:	2303      	movs	r3, #3
 8009386:	e006      	b.n	8009396 <RCCEx_PLL2_Config+0x152>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) == 0U)
 8009388:	4b05      	ldr	r3, [pc, #20]	@ (80093a0 <RCCEx_PLL2_Config+0x15c>)
 800938a:	681b      	ldr	r3, [r3, #0]
 800938c:	f003 6300 	and.w	r3, r3, #134217728	@ 0x8000000
 8009390:	2b00      	cmp	r3, #0
 8009392:	d0f0      	beq.n	8009376 <RCCEx_PLL2_Config+0x132>
    }

  }


  return status;
 8009394:	7bfb      	ldrb	r3, [r7, #15]
}
 8009396:	4618      	mov	r0, r3
 8009398:	3710      	adds	r7, #16
 800939a:	46bd      	mov	sp, r7
 800939c:	bd80      	pop	{r7, pc}
 800939e:	bf00      	nop
 80093a0:	58024400 	.word	0x58024400
 80093a4:	ffff0007 	.word	0xffff0007

080093a8 <RCCEx_PLL3_Config>:
  * @note   PLL3 is temporary disabled to apply new parameters
  *
  * @retval HAL status
  */
static HAL_StatusTypeDef RCCEx_PLL3_Config(RCC_PLL3InitTypeDef *pll3, uint32_t Divider)
{
 80093a8:	b580      	push	{r7, lr}
 80093aa:	b084      	sub	sp, #16
 80093ac:	af00      	add	r7, sp, #0
 80093ae:	6078      	str	r0, [r7, #4]
 80093b0:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;
  HAL_StatusTypeDef status = HAL_OK;
 80093b2:	2300      	movs	r3, #0
 80093b4:	73fb      	strb	r3, [r7, #15]
  assert_param(IS_RCC_PLL3RGE_VALUE(pll3->PLL3RGE));
  assert_param(IS_RCC_PLL3VCO_VALUE(pll3->PLL3VCOSEL));
  assert_param(IS_RCC_PLLFRACN_VALUE(pll3->PLL3FRACN));

  /* Check that PLL3 OSC clock source is already set */
  if (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_NONE)
 80093b6:	4b53      	ldr	r3, [pc, #332]	@ (8009504 <RCCEx_PLL3_Config+0x15c>)
 80093b8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80093ba:	f003 0303 	and.w	r3, r3, #3
 80093be:	2b03      	cmp	r3, #3
 80093c0:	d101      	bne.n	80093c6 <RCCEx_PLL3_Config+0x1e>
  {
    return HAL_ERROR;
 80093c2:	2301      	movs	r3, #1
 80093c4:	e099      	b.n	80094fa <RCCEx_PLL3_Config+0x152>


  else
  {
    /* Disable  PLL3. */
    __HAL_RCC_PLL3_DISABLE();
 80093c6:	4b4f      	ldr	r3, [pc, #316]	@ (8009504 <RCCEx_PLL3_Config+0x15c>)
 80093c8:	681b      	ldr	r3, [r3, #0]
 80093ca:	4a4e      	ldr	r2, [pc, #312]	@ (8009504 <RCCEx_PLL3_Config+0x15c>)
 80093cc:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80093d0:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 80093d2:	f7f9 fed5 	bl	8003180 <HAL_GetTick>
 80093d6:	60b8      	str	r0, [r7, #8]
    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
 80093d8:	e008      	b.n	80093ec <RCCEx_PLL3_Config+0x44>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 80093da:	f7f9 fed1 	bl	8003180 <HAL_GetTick>
 80093de:	4602      	mov	r2, r0
 80093e0:	68bb      	ldr	r3, [r7, #8]
 80093e2:	1ad3      	subs	r3, r2, r3
 80093e4:	2b02      	cmp	r3, #2
 80093e6:	d901      	bls.n	80093ec <RCCEx_PLL3_Config+0x44>
      {
        return HAL_TIMEOUT;
 80093e8:	2303      	movs	r3, #3
 80093ea:	e086      	b.n	80094fa <RCCEx_PLL3_Config+0x152>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) != 0U)
 80093ec:	4b45      	ldr	r3, [pc, #276]	@ (8009504 <RCCEx_PLL3_Config+0x15c>)
 80093ee:	681b      	ldr	r3, [r3, #0]
 80093f0:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 80093f4:	2b00      	cmp	r3, #0
 80093f6:	d1f0      	bne.n	80093da <RCCEx_PLL3_Config+0x32>
      }
    }

    /* Configure the PLL3  multiplication and division factors. */
    __HAL_RCC_PLL3_CONFIG(pll3->PLL3M,
 80093f8:	4b42      	ldr	r3, [pc, #264]	@ (8009504 <RCCEx_PLL3_Config+0x15c>)
 80093fa:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80093fc:	f023 727c 	bic.w	r2, r3, #66060288	@ 0x3f00000
 8009400:	687b      	ldr	r3, [r7, #4]
 8009402:	681b      	ldr	r3, [r3, #0]
 8009404:	051b      	lsls	r3, r3, #20
 8009406:	493f      	ldr	r1, [pc, #252]	@ (8009504 <RCCEx_PLL3_Config+0x15c>)
 8009408:	4313      	orrs	r3, r2
 800940a:	628b      	str	r3, [r1, #40]	@ 0x28
 800940c:	687b      	ldr	r3, [r7, #4]
 800940e:	685b      	ldr	r3, [r3, #4]
 8009410:	3b01      	subs	r3, #1
 8009412:	f3c3 0208 	ubfx	r2, r3, #0, #9
 8009416:	687b      	ldr	r3, [r7, #4]
 8009418:	689b      	ldr	r3, [r3, #8]
 800941a:	3b01      	subs	r3, #1
 800941c:	025b      	lsls	r3, r3, #9
 800941e:	b29b      	uxth	r3, r3
 8009420:	431a      	orrs	r2, r3
 8009422:	687b      	ldr	r3, [r7, #4]
 8009424:	68db      	ldr	r3, [r3, #12]
 8009426:	3b01      	subs	r3, #1
 8009428:	041b      	lsls	r3, r3, #16
 800942a:	f403 03fe 	and.w	r3, r3, #8323072	@ 0x7f0000
 800942e:	431a      	orrs	r2, r3
 8009430:	687b      	ldr	r3, [r7, #4]
 8009432:	691b      	ldr	r3, [r3, #16]
 8009434:	3b01      	subs	r3, #1
 8009436:	061b      	lsls	r3, r3, #24
 8009438:	f003 43fe 	and.w	r3, r3, #2130706432	@ 0x7f000000
 800943c:	4931      	ldr	r1, [pc, #196]	@ (8009504 <RCCEx_PLL3_Config+0x15c>)
 800943e:	4313      	orrs	r3, r2
 8009440:	640b      	str	r3, [r1, #64]	@ 0x40
                          pll3->PLL3P,
                          pll3->PLL3Q,
                          pll3->PLL3R);

    /* Select PLL3 input reference frequency range: VCI */
    __HAL_RCC_PLL3_VCIRANGE(pll3->PLL3RGE) ;
 8009442:	4b30      	ldr	r3, [pc, #192]	@ (8009504 <RCCEx_PLL3_Config+0x15c>)
 8009444:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009446:	f423 6240 	bic.w	r2, r3, #3072	@ 0xc00
 800944a:	687b      	ldr	r3, [r7, #4]
 800944c:	695b      	ldr	r3, [r3, #20]
 800944e:	492d      	ldr	r1, [pc, #180]	@ (8009504 <RCCEx_PLL3_Config+0x15c>)
 8009450:	4313      	orrs	r3, r2
 8009452:	62cb      	str	r3, [r1, #44]	@ 0x2c

    /* Select PLL3 output frequency range : VCO */
    __HAL_RCC_PLL3_VCORANGE(pll3->PLL3VCOSEL) ;
 8009454:	4b2b      	ldr	r3, [pc, #172]	@ (8009504 <RCCEx_PLL3_Config+0x15c>)
 8009456:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8009458:	f423 7200 	bic.w	r2, r3, #512	@ 0x200
 800945c:	687b      	ldr	r3, [r7, #4]
 800945e:	699b      	ldr	r3, [r3, #24]
 8009460:	4928      	ldr	r1, [pc, #160]	@ (8009504 <RCCEx_PLL3_Config+0x15c>)
 8009462:	4313      	orrs	r3, r2
 8009464:	62cb      	str	r3, [r1, #44]	@ 0x2c

    /* Disable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_DISABLE();
 8009466:	4b27      	ldr	r3, [pc, #156]	@ (8009504 <RCCEx_PLL3_Config+0x15c>)
 8009468:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800946a:	4a26      	ldr	r2, [pc, #152]	@ (8009504 <RCCEx_PLL3_Config+0x15c>)
 800946c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8009470:	62d3      	str	r3, [r2, #44]	@ 0x2c

    /* Configures PLL3 clock Fractional Part Of The Multiplication Factor */
    __HAL_RCC_PLL3FRACN_CONFIG(pll3->PLL3FRACN);
 8009472:	4b24      	ldr	r3, [pc, #144]	@ (8009504 <RCCEx_PLL3_Config+0x15c>)
 8009474:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8009476:	4b24      	ldr	r3, [pc, #144]	@ (8009508 <RCCEx_PLL3_Config+0x160>)
 8009478:	4013      	ands	r3, r2
 800947a:	687a      	ldr	r2, [r7, #4]
 800947c:	69d2      	ldr	r2, [r2, #28]
 800947e:	00d2      	lsls	r2, r2, #3
 8009480:	4920      	ldr	r1, [pc, #128]	@ (8009504 <RCCEx_PLL3_Config+0x15c>)
 8009482:	4313      	orrs	r3, r2
 8009484:	644b      	str	r3, [r1, #68]	@ 0x44

    /* Enable PLL3FRACN . */
    __HAL_RCC_PLL3FRACN_ENABLE();
 8009486:	4b1f      	ldr	r3, [pc, #124]	@ (8009504 <RCCEx_PLL3_Config+0x15c>)
 8009488:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800948a:	4a1e      	ldr	r2, [pc, #120]	@ (8009504 <RCCEx_PLL3_Config+0x15c>)
 800948c:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8009490:	62d3      	str	r3, [r2, #44]	@ 0x2c

    /* Enable the PLL3 clock output */
    if (Divider == DIVIDER_P_UPDATE)
 8009492:	683b      	ldr	r3, [r7, #0]
 8009494:	2b00      	cmp	r3, #0
 8009496:	d106      	bne.n	80094a6 <RCCEx_PLL3_Config+0xfe>
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVP);
 8009498:	4b1a      	ldr	r3, [pc, #104]	@ (8009504 <RCCEx_PLL3_Config+0x15c>)
 800949a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800949c:	4a19      	ldr	r2, [pc, #100]	@ (8009504 <RCCEx_PLL3_Config+0x15c>)
 800949e:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 80094a2:	62d3      	str	r3, [r2, #44]	@ 0x2c
 80094a4:	e00f      	b.n	80094c6 <RCCEx_PLL3_Config+0x11e>
    }
    else if (Divider == DIVIDER_Q_UPDATE)
 80094a6:	683b      	ldr	r3, [r7, #0]
 80094a8:	2b01      	cmp	r3, #1
 80094aa:	d106      	bne.n	80094ba <RCCEx_PLL3_Config+0x112>
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVQ);
 80094ac:	4b15      	ldr	r3, [pc, #84]	@ (8009504 <RCCEx_PLL3_Config+0x15c>)
 80094ae:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80094b0:	4a14      	ldr	r2, [pc, #80]	@ (8009504 <RCCEx_PLL3_Config+0x15c>)
 80094b2:	f443 0300 	orr.w	r3, r3, #8388608	@ 0x800000
 80094b6:	62d3      	str	r3, [r2, #44]	@ 0x2c
 80094b8:	e005      	b.n	80094c6 <RCCEx_PLL3_Config+0x11e>
    }
    else
    {
      __HAL_RCC_PLL3CLKOUT_ENABLE(RCC_PLL3_DIVR);
 80094ba:	4b12      	ldr	r3, [pc, #72]	@ (8009504 <RCCEx_PLL3_Config+0x15c>)
 80094bc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80094be:	4a11      	ldr	r2, [pc, #68]	@ (8009504 <RCCEx_PLL3_Config+0x15c>)
 80094c0:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80094c4:	62d3      	str	r3, [r2, #44]	@ 0x2c
    }

    /* Enable  PLL3. */
    __HAL_RCC_PLL3_ENABLE();
 80094c6:	4b0f      	ldr	r3, [pc, #60]	@ (8009504 <RCCEx_PLL3_Config+0x15c>)
 80094c8:	681b      	ldr	r3, [r3, #0]
 80094ca:	4a0e      	ldr	r2, [pc, #56]	@ (8009504 <RCCEx_PLL3_Config+0x15c>)
 80094cc:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80094d0:	6013      	str	r3, [r2, #0]

    /* Get Start Tick*/
    tickstart = HAL_GetTick();
 80094d2:	f7f9 fe55 	bl	8003180 <HAL_GetTick>
 80094d6:	60b8      	str	r0, [r7, #8]

    /* Wait till PLL3 is ready */
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 80094d8:	e008      	b.n	80094ec <RCCEx_PLL3_Config+0x144>
    {
      if ((HAL_GetTick() - tickstart) > PLL3_TIMEOUT_VALUE)
 80094da:	f7f9 fe51 	bl	8003180 <HAL_GetTick>
 80094de:	4602      	mov	r2, r0
 80094e0:	68bb      	ldr	r3, [r7, #8]
 80094e2:	1ad3      	subs	r3, r2, r3
 80094e4:	2b02      	cmp	r3, #2
 80094e6:	d901      	bls.n	80094ec <RCCEx_PLL3_Config+0x144>
      {
        return HAL_TIMEOUT;
 80094e8:	2303      	movs	r3, #3
 80094ea:	e006      	b.n	80094fa <RCCEx_PLL3_Config+0x152>
    while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL3RDY) == 0U)
 80094ec:	4b05      	ldr	r3, [pc, #20]	@ (8009504 <RCCEx_PLL3_Config+0x15c>)
 80094ee:	681b      	ldr	r3, [r3, #0]
 80094f0:	f003 5300 	and.w	r3, r3, #536870912	@ 0x20000000
 80094f4:	2b00      	cmp	r3, #0
 80094f6:	d0f0      	beq.n	80094da <RCCEx_PLL3_Config+0x132>
    }

  }


  return status;
 80094f8:	7bfb      	ldrb	r3, [r7, #15]
}
 80094fa:	4618      	mov	r0, r3
 80094fc:	3710      	adds	r7, #16
 80094fe:	46bd      	mov	sp, r7
 8009500:	bd80      	pop	{r7, pc}
 8009502:	bf00      	nop
 8009504:	58024400 	.word	0x58024400
 8009508:	ffff0007 	.word	0xffff0007

0800950c <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 800950c:	b580      	push	{r7, lr}
 800950e:	b082      	sub	sp, #8
 8009510:	af00      	add	r7, sp, #0
 8009512:	6078      	str	r0, [r7, #4]
 8009514:	6039      	str	r1, [r7, #0]
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 8009516:	687b      	ldr	r3, [r7, #4]
 8009518:	2b00      	cmp	r3, #0
 800951a:	d101      	bne.n	8009520 <HAL_SDRAM_Init+0x14>
  {
    return HAL_ERROR;
 800951c:	2301      	movs	r3, #1
 800951e:	e02b      	b.n	8009578 <HAL_SDRAM_Init+0x6c>
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 8009520:	687b      	ldr	r3, [r7, #4]
 8009522:	f893 302c 	ldrb.w	r3, [r3, #44]	@ 0x2c
 8009526:	b2db      	uxtb	r3, r3
 8009528:	2b00      	cmp	r3, #0
 800952a:	d106      	bne.n	800953a <HAL_SDRAM_Init+0x2e>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 800952c:	687b      	ldr	r3, [r7, #4]
 800952e:	2200      	movs	r2, #0
 8009530:	f883 202d 	strb.w	r2, [r3, #45]	@ 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8009534:	6878      	ldr	r0, [r7, #4]
 8009536:	f7f7 fa5f 	bl	80009f8 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800953a:	687b      	ldr	r3, [r7, #4]
 800953c:	2202      	movs	r2, #2
 800953e:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8009542:	687b      	ldr	r3, [r7, #4]
 8009544:	681a      	ldr	r2, [r3, #0]
 8009546:	687b      	ldr	r3, [r7, #4]
 8009548:	3304      	adds	r3, #4
 800954a:	4619      	mov	r1, r3
 800954c:	4610      	mov	r0, r2
 800954e:	f002 fd77 	bl	800c040 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 8009552:	687b      	ldr	r3, [r7, #4]
 8009554:	6818      	ldr	r0, [r3, #0]
 8009556:	687b      	ldr	r3, [r7, #4]
 8009558:	685b      	ldr	r3, [r3, #4]
 800955a:	461a      	mov	r2, r3
 800955c:	6839      	ldr	r1, [r7, #0]
 800955e:	f002 fdcb 	bl	800c0f8 <FMC_SDRAM_Timing_Init>

  /* Enable FMC Peripheral */
  __FMC_ENABLE();
 8009562:	4b07      	ldr	r3, [pc, #28]	@ (8009580 <HAL_SDRAM_Init+0x74>)
 8009564:	681b      	ldr	r3, [r3, #0]
 8009566:	4a06      	ldr	r2, [pc, #24]	@ (8009580 <HAL_SDRAM_Init+0x74>)
 8009568:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 800956c:	6013      	str	r3, [r2, #0]
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 800956e:	687b      	ldr	r3, [r7, #4]
 8009570:	2201      	movs	r2, #1
 8009572:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c

  return HAL_OK;
 8009576:	2300      	movs	r3, #0
}
 8009578:	4618      	mov	r0, r3
 800957a:	3708      	adds	r7, #8
 800957c:	46bd      	mov	sp, r7
 800957e:	bd80      	pop	{r7, pc}
 8009580:	52004000 	.word	0x52004000

08009584 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 8009584:	b580      	push	{r7, lr}
 8009586:	b086      	sub	sp, #24
 8009588:	af00      	add	r7, sp, #0
 800958a:	60f8      	str	r0, [r7, #12]
 800958c:	60b9      	str	r1, [r7, #8]
 800958e:	607a      	str	r2, [r7, #4]
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8009590:	68fb      	ldr	r3, [r7, #12]
 8009592:	f893 302c 	ldrb.w	r3, [r3, #44]	@ 0x2c
 8009596:	75fb      	strb	r3, [r7, #23]

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 8009598:	7dfb      	ldrb	r3, [r7, #23]
 800959a:	2b02      	cmp	r3, #2
 800959c:	d101      	bne.n	80095a2 <HAL_SDRAM_SendCommand+0x1e>
  {
    return HAL_BUSY;
 800959e:	2302      	movs	r3, #2
 80095a0:	e021      	b.n	80095e6 <HAL_SDRAM_SendCommand+0x62>
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 80095a2:	7dfb      	ldrb	r3, [r7, #23]
 80095a4:	2b01      	cmp	r3, #1
 80095a6:	d002      	beq.n	80095ae <HAL_SDRAM_SendCommand+0x2a>
 80095a8:	7dfb      	ldrb	r3, [r7, #23]
 80095aa:	2b05      	cmp	r3, #5
 80095ac:	d118      	bne.n	80095e0 <HAL_SDRAM_SendCommand+0x5c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 80095ae:	68fb      	ldr	r3, [r7, #12]
 80095b0:	2202      	movs	r2, #2
 80095b2:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 80095b6:	68fb      	ldr	r3, [r7, #12]
 80095b8:	681b      	ldr	r3, [r3, #0]
 80095ba:	687a      	ldr	r2, [r7, #4]
 80095bc:	68b9      	ldr	r1, [r7, #8]
 80095be:	4618      	mov	r0, r3
 80095c0:	f002 fe04 	bl	800c1cc <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 80095c4:	68bb      	ldr	r3, [r7, #8]
 80095c6:	681b      	ldr	r3, [r3, #0]
 80095c8:	2b02      	cmp	r3, #2
 80095ca:	d104      	bne.n	80095d6 <HAL_SDRAM_SendCommand+0x52>
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 80095cc:	68fb      	ldr	r3, [r7, #12]
 80095ce:	2205      	movs	r2, #5
 80095d0:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 80095d4:	e006      	b.n	80095e4 <HAL_SDRAM_SendCommand+0x60>
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 80095d6:	68fb      	ldr	r3, [r7, #12]
 80095d8:	2201      	movs	r2, #1
 80095da:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 80095de:	e001      	b.n	80095e4 <HAL_SDRAM_SendCommand+0x60>
    }
  }
  else
  {
    return HAL_ERROR;
 80095e0:	2301      	movs	r3, #1
 80095e2:	e000      	b.n	80095e6 <HAL_SDRAM_SendCommand+0x62>
  }

  return HAL_OK;
 80095e4:	2300      	movs	r3, #0
}
 80095e6:	4618      	mov	r0, r3
 80095e8:	3718      	adds	r7, #24
 80095ea:	46bd      	mov	sp, r7
 80095ec:	bd80      	pop	{r7, pc}

080095ee <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 80095ee:	b580      	push	{r7, lr}
 80095f0:	b082      	sub	sp, #8
 80095f2:	af00      	add	r7, sp, #0
 80095f4:	6078      	str	r0, [r7, #4]
 80095f6:	6039      	str	r1, [r7, #0]
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 80095f8:	687b      	ldr	r3, [r7, #4]
 80095fa:	f893 302c 	ldrb.w	r3, [r3, #44]	@ 0x2c
 80095fe:	b2db      	uxtb	r3, r3
 8009600:	2b02      	cmp	r3, #2
 8009602:	d101      	bne.n	8009608 <HAL_SDRAM_ProgramRefreshRate+0x1a>
  {
    return HAL_BUSY;
 8009604:	2302      	movs	r3, #2
 8009606:	e016      	b.n	8009636 <HAL_SDRAM_ProgramRefreshRate+0x48>
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 8009608:	687b      	ldr	r3, [r7, #4]
 800960a:	f893 302c 	ldrb.w	r3, [r3, #44]	@ 0x2c
 800960e:	b2db      	uxtb	r3, r3
 8009610:	2b01      	cmp	r3, #1
 8009612:	d10f      	bne.n	8009634 <HAL_SDRAM_ProgramRefreshRate+0x46>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8009614:	687b      	ldr	r3, [r7, #4]
 8009616:	2202      	movs	r2, #2
 8009618:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 800961c:	687b      	ldr	r3, [r7, #4]
 800961e:	681b      	ldr	r3, [r3, #0]
 8009620:	6839      	ldr	r1, [r7, #0]
 8009622:	4618      	mov	r0, r3
 8009624:	f002 fdf6 	bl	800c214 <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 8009628:	687b      	ldr	r3, [r7, #4]
 800962a:	2201      	movs	r2, #1
 800962c:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8009630:	2300      	movs	r3, #0
 8009632:	e000      	b.n	8009636 <HAL_SDRAM_ProgramRefreshRate+0x48>
    return HAL_ERROR;
 8009634:	2301      	movs	r3, #1
}
 8009636:	4618      	mov	r0, r3
 8009638:	3708      	adds	r7, #8
 800963a:	46bd      	mov	sp, r7
 800963c:	bd80      	pop	{r7, pc}
	...

08009640 <HAL_SPI_Init>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 8009640:	b580      	push	{r7, lr}
 8009642:	b084      	sub	sp, #16
 8009644:	af00      	add	r7, sp, #0
 8009646:	6078      	str	r0, [r7, #4]
#if (USE_SPI_CRC != 0UL)
  uint32_t crc_poly_msb_mask;
#endif /* USE_SPI_CRC */

  /* Check the SPI handle allocation */
  if (hspi == NULL)
 8009648:	687b      	ldr	r3, [r7, #4]
 800964a:	2b00      	cmp	r3, #0
 800964c:	d101      	bne.n	8009652 <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 800964e:	2301      	movs	r3, #1
 8009650:	e10f      	b.n	8009872 <HAL_SPI_Init+0x232>
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
    assert_param(IS_SPI_CRC_INITIALIZATION_PATTERN(hspi->Init.TxCRCInitializationPattern));
    assert_param(IS_SPI_CRC_INITIALIZATION_PATTERN(hspi->Init.RxCRCInitializationPattern));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8009652:	687b      	ldr	r3, [r7, #4]
 8009654:	2200      	movs	r2, #0
 8009656:	629a      	str	r2, [r3, #40]	@ 0x28
#endif /* USE_SPI_CRC */

  /* Verify that the SPI instance supports Data Size higher than 16bits */
  if ((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (hspi->Init.DataSize > SPI_DATASIZE_16BIT))
 8009658:	687b      	ldr	r3, [r7, #4]
 800965a:	681b      	ldr	r3, [r3, #0]
 800965c:	4a87      	ldr	r2, [pc, #540]	@ (800987c <HAL_SPI_Init+0x23c>)
 800965e:	4293      	cmp	r3, r2
 8009660:	d00f      	beq.n	8009682 <HAL_SPI_Init+0x42>
 8009662:	687b      	ldr	r3, [r7, #4]
 8009664:	681b      	ldr	r3, [r3, #0]
 8009666:	4a86      	ldr	r2, [pc, #536]	@ (8009880 <HAL_SPI_Init+0x240>)
 8009668:	4293      	cmp	r3, r2
 800966a:	d00a      	beq.n	8009682 <HAL_SPI_Init+0x42>
 800966c:	687b      	ldr	r3, [r7, #4]
 800966e:	681b      	ldr	r3, [r3, #0]
 8009670:	4a84      	ldr	r2, [pc, #528]	@ (8009884 <HAL_SPI_Init+0x244>)
 8009672:	4293      	cmp	r3, r2
 8009674:	d005      	beq.n	8009682 <HAL_SPI_Init+0x42>
 8009676:	687b      	ldr	r3, [r7, #4]
 8009678:	68db      	ldr	r3, [r3, #12]
 800967a:	2b0f      	cmp	r3, #15
 800967c:	d901      	bls.n	8009682 <HAL_SPI_Init+0x42>
  {
    return HAL_ERROR;
 800967e:	2301      	movs	r3, #1
 8009680:	e0f7      	b.n	8009872 <HAL_SPI_Init+0x232>
  }

  /* Verify that the SPI instance supports requested data packing */
  packet_length = SPI_GetPacketSize(hspi);
 8009682:	6878      	ldr	r0, [r7, #4]
 8009684:	f000 fbbc 	bl	8009e00 <SPI_GetPacketSize>
 8009688:	60f8      	str	r0, [r7, #12]
  if (((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_LOWEND_FIFO_SIZE)) ||
 800968a:	687b      	ldr	r3, [r7, #4]
 800968c:	681b      	ldr	r3, [r3, #0]
 800968e:	4a7b      	ldr	r2, [pc, #492]	@ (800987c <HAL_SPI_Init+0x23c>)
 8009690:	4293      	cmp	r3, r2
 8009692:	d00c      	beq.n	80096ae <HAL_SPI_Init+0x6e>
 8009694:	687b      	ldr	r3, [r7, #4]
 8009696:	681b      	ldr	r3, [r3, #0]
 8009698:	4a79      	ldr	r2, [pc, #484]	@ (8009880 <HAL_SPI_Init+0x240>)
 800969a:	4293      	cmp	r3, r2
 800969c:	d007      	beq.n	80096ae <HAL_SPI_Init+0x6e>
 800969e:	687b      	ldr	r3, [r7, #4]
 80096a0:	681b      	ldr	r3, [r3, #0]
 80096a2:	4a78      	ldr	r2, [pc, #480]	@ (8009884 <HAL_SPI_Init+0x244>)
 80096a4:	4293      	cmp	r3, r2
 80096a6:	d002      	beq.n	80096ae <HAL_SPI_Init+0x6e>
 80096a8:	68fb      	ldr	r3, [r7, #12]
 80096aa:	2b08      	cmp	r3, #8
 80096ac:	d811      	bhi.n	80096d2 <HAL_SPI_Init+0x92>
      ((IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_HIGHEND_FIFO_SIZE)))
 80096ae:	687b      	ldr	r3, [r7, #4]
 80096b0:	681b      	ldr	r3, [r3, #0]
  if (((!IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_LOWEND_FIFO_SIZE)) ||
 80096b2:	4a72      	ldr	r2, [pc, #456]	@ (800987c <HAL_SPI_Init+0x23c>)
 80096b4:	4293      	cmp	r3, r2
 80096b6:	d009      	beq.n	80096cc <HAL_SPI_Init+0x8c>
      ((IS_SPI_HIGHEND_INSTANCE(hspi->Instance)) && (packet_length > SPI_HIGHEND_FIFO_SIZE)))
 80096b8:	687b      	ldr	r3, [r7, #4]
 80096ba:	681b      	ldr	r3, [r3, #0]
 80096bc:	4a70      	ldr	r2, [pc, #448]	@ (8009880 <HAL_SPI_Init+0x240>)
 80096be:	4293      	cmp	r3, r2
 80096c0:	d004      	beq.n	80096cc <HAL_SPI_Init+0x8c>
 80096c2:	687b      	ldr	r3, [r7, #4]
 80096c4:	681b      	ldr	r3, [r3, #0]
 80096c6:	4a6f      	ldr	r2, [pc, #444]	@ (8009884 <HAL_SPI_Init+0x244>)
 80096c8:	4293      	cmp	r3, r2
 80096ca:	d104      	bne.n	80096d6 <HAL_SPI_Init+0x96>
 80096cc:	68fb      	ldr	r3, [r7, #12]
 80096ce:	2b10      	cmp	r3, #16
 80096d0:	d901      	bls.n	80096d6 <HAL_SPI_Init+0x96>
  {
    return HAL_ERROR;
 80096d2:	2301      	movs	r3, #1
 80096d4:	e0cd      	b.n	8009872 <HAL_SPI_Init+0x232>
  {
    crc_length = hspi->Init.DataSize << SPI_CFG1_CRCSIZE_Pos;
  }
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 80096d6:	687b      	ldr	r3, [r7, #4]
 80096d8:	f893 3081 	ldrb.w	r3, [r3, #129]	@ 0x81
 80096dc:	b2db      	uxtb	r3, r3
 80096de:	2b00      	cmp	r3, #0
 80096e0:	d106      	bne.n	80096f0 <HAL_SPI_Init+0xb0>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 80096e2:	687b      	ldr	r3, [r7, #4]
 80096e4:	2200      	movs	r2, #0
 80096e6:	f883 2080 	strb.w	r2, [r3, #128]	@ 0x80

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 80096ea:	6878      	ldr	r0, [r7, #4]
 80096ec:	f7f8 f810 	bl	8001710 <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 80096f0:	687b      	ldr	r3, [r7, #4]
 80096f2:	2202      	movs	r2, #2
 80096f4:	f883 2081 	strb.w	r2, [r3, #129]	@ 0x81

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 80096f8:	687b      	ldr	r3, [r7, #4]
 80096fa:	681b      	ldr	r3, [r3, #0]
 80096fc:	681a      	ldr	r2, [r3, #0]
 80096fe:	687b      	ldr	r3, [r7, #4]
 8009700:	681b      	ldr	r3, [r3, #0]
 8009702:	f022 0201 	bic.w	r2, r2, #1
 8009706:	601a      	str	r2, [r3, #0]

#if (USE_SPI_CRC == 0)
  /* Keep the default value of CRCSIZE in case of CRC is not used */
  crc_length = hspi->Instance->CFG1 & SPI_CFG1_CRCSIZE;
 8009708:	687b      	ldr	r3, [r7, #4]
 800970a:	681b      	ldr	r3, [r3, #0]
 800970c:	689b      	ldr	r3, [r3, #8]
 800970e:	f403 13f8 	and.w	r3, r3, #2031616	@ 0x1f0000
 8009712:	60bb      	str	r3, [r7, #8]
  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Clock polarity and phase, NSS management,
  Communication speed, First bit, CRC calculation state, CRC Length */

  /* SPIx NSS Software Management Configuration */
  if ((hspi->Init.NSS == SPI_NSS_SOFT) && (((hspi->Init.Mode == SPI_MODE_MASTER) &&  \
 8009714:	687b      	ldr	r3, [r7, #4]
 8009716:	699b      	ldr	r3, [r3, #24]
 8009718:	f1b3 6f80 	cmp.w	r3, #67108864	@ 0x4000000
 800971c:	d119      	bne.n	8009752 <HAL_SPI_Init+0x112>
 800971e:	687b      	ldr	r3, [r7, #4]
 8009720:	685b      	ldr	r3, [r3, #4]
 8009722:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8009726:	d103      	bne.n	8009730 <HAL_SPI_Init+0xf0>
                                            (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_LOW)) || \
 8009728:	687b      	ldr	r3, [r7, #4]
 800972a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
  if ((hspi->Init.NSS == SPI_NSS_SOFT) && (((hspi->Init.Mode == SPI_MODE_MASTER) &&  \
 800972c:	2b00      	cmp	r3, #0
 800972e:	d008      	beq.n	8009742 <HAL_SPI_Init+0x102>
                                           ((hspi->Init.Mode == SPI_MODE_SLAVE) && \
 8009730:	687b      	ldr	r3, [r7, #4]
 8009732:	685b      	ldr	r3, [r3, #4]
                                            (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_LOW)) || \
 8009734:	2b00      	cmp	r3, #0
 8009736:	d10c      	bne.n	8009752 <HAL_SPI_Init+0x112>
                                            (hspi->Init.NSSPolarity == SPI_NSS_POLARITY_HIGH))))
 8009738:	687b      	ldr	r3, [r7, #4]
 800973a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
                                           ((hspi->Init.Mode == SPI_MODE_SLAVE) && \
 800973c:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 8009740:	d107      	bne.n	8009752 <HAL_SPI_Init+0x112>
  {
    SET_BIT(hspi->Instance->CR1, SPI_CR1_SSI);
 8009742:	687b      	ldr	r3, [r7, #4]
 8009744:	681b      	ldr	r3, [r3, #0]
 8009746:	681a      	ldr	r2, [r3, #0]
 8009748:	687b      	ldr	r3, [r7, #4]
 800974a:	681b      	ldr	r3, [r3, #0]
 800974c:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8009750:	601a      	str	r2, [r3, #0]
  }

  /* SPIx Master Rx Auto Suspend Configuration */
  if (((hspi->Init.Mode & SPI_MODE_MASTER) == SPI_MODE_MASTER) && (hspi->Init.DataSize >= SPI_DATASIZE_8BIT))
 8009752:	687b      	ldr	r3, [r7, #4]
 8009754:	685b      	ldr	r3, [r3, #4]
 8009756:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800975a:	2b00      	cmp	r3, #0
 800975c:	d00f      	beq.n	800977e <HAL_SPI_Init+0x13e>
 800975e:	687b      	ldr	r3, [r7, #4]
 8009760:	68db      	ldr	r3, [r3, #12]
 8009762:	2b06      	cmp	r3, #6
 8009764:	d90b      	bls.n	800977e <HAL_SPI_Init+0x13e>
  {
    MODIFY_REG(hspi->Instance->CR1, SPI_CR1_MASRX, hspi->Init.MasterReceiverAutoSusp);
 8009766:	687b      	ldr	r3, [r7, #4]
 8009768:	681b      	ldr	r3, [r3, #0]
 800976a:	681b      	ldr	r3, [r3, #0]
 800976c:	f423 7180 	bic.w	r1, r3, #256	@ 0x100
 8009770:	687b      	ldr	r3, [r7, #4]
 8009772:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8009774:	687b      	ldr	r3, [r7, #4]
 8009776:	681b      	ldr	r3, [r3, #0]
 8009778:	430a      	orrs	r2, r1
 800977a:	601a      	str	r2, [r3, #0]
 800977c:	e007      	b.n	800978e <HAL_SPI_Init+0x14e>
  }
  else
  {
    CLEAR_BIT(hspi->Instance->CR1, SPI_CR1_MASRX);
 800977e:	687b      	ldr	r3, [r7, #4]
 8009780:	681b      	ldr	r3, [r3, #0]
 8009782:	681a      	ldr	r2, [r3, #0]
 8009784:	687b      	ldr	r3, [r7, #4]
 8009786:	681b      	ldr	r3, [r3, #0]
 8009788:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 800978c:	601a      	str	r2, [r3, #0]
  }

  /* SPIx CFG1 Configuration */
  WRITE_REG(hspi->Instance->CFG1, (hspi->Init.BaudRatePrescaler | hspi->Init.CRCCalculation | crc_length |
 800978e:	687b      	ldr	r3, [r7, #4]
 8009790:	69da      	ldr	r2, [r3, #28]
 8009792:	687b      	ldr	r3, [r7, #4]
 8009794:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8009796:	431a      	orrs	r2, r3
 8009798:	68bb      	ldr	r3, [r7, #8]
 800979a:	431a      	orrs	r2, r3
 800979c:	687b      	ldr	r3, [r7, #4]
 800979e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80097a0:	ea42 0103 	orr.w	r1, r2, r3
 80097a4:	687b      	ldr	r3, [r7, #4]
 80097a6:	68da      	ldr	r2, [r3, #12]
 80097a8:	687b      	ldr	r3, [r7, #4]
 80097aa:	681b      	ldr	r3, [r3, #0]
 80097ac:	430a      	orrs	r2, r1
 80097ae:	609a      	str	r2, [r3, #8]
                                   hspi->Init.FifoThreshold     | hspi->Init.DataSize));

  /* SPIx CFG2 Configuration */
  WRITE_REG(hspi->Instance->CFG2, (hspi->Init.NSSPMode                | hspi->Init.TIMode    |
 80097b0:	687b      	ldr	r3, [r7, #4]
 80097b2:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 80097b4:	687b      	ldr	r3, [r7, #4]
 80097b6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80097b8:	431a      	orrs	r2, r3
 80097ba:	687b      	ldr	r3, [r7, #4]
 80097bc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80097be:	431a      	orrs	r2, r3
 80097c0:	687b      	ldr	r3, [r7, #4]
 80097c2:	699b      	ldr	r3, [r3, #24]
 80097c4:	431a      	orrs	r2, r3
 80097c6:	687b      	ldr	r3, [r7, #4]
 80097c8:	691b      	ldr	r3, [r3, #16]
 80097ca:	431a      	orrs	r2, r3
 80097cc:	687b      	ldr	r3, [r7, #4]
 80097ce:	695b      	ldr	r3, [r3, #20]
 80097d0:	431a      	orrs	r2, r3
 80097d2:	687b      	ldr	r3, [r7, #4]
 80097d4:	6a1b      	ldr	r3, [r3, #32]
 80097d6:	431a      	orrs	r2, r3
 80097d8:	687b      	ldr	r3, [r7, #4]
 80097da:	685b      	ldr	r3, [r3, #4]
 80097dc:	431a      	orrs	r2, r3
 80097de:	687b      	ldr	r3, [r7, #4]
 80097e0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80097e2:	431a      	orrs	r2, r3
 80097e4:	687b      	ldr	r3, [r7, #4]
 80097e6:	689b      	ldr	r3, [r3, #8]
 80097e8:	431a      	orrs	r2, r3
 80097ea:	687b      	ldr	r3, [r7, #4]
 80097ec:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80097ee:	ea42 0103 	orr.w	r1, r2, r3
 80097f2:	687b      	ldr	r3, [r7, #4]
 80097f4:	6d9a      	ldr	r2, [r3, #88]	@ 0x58
 80097f6:	687b      	ldr	r3, [r7, #4]
 80097f8:	681b      	ldr	r3, [r3, #0]
 80097fa:	430a      	orrs	r2, r1
 80097fc:	60da      	str	r2, [r3, #12]
    }
  }
#endif /* USE_SPI_CRC */

  /* Insure that Underrun configuration is managed only by Salve */
  if (hspi->Init.Mode == SPI_MODE_SLAVE)
 80097fe:	687b      	ldr	r3, [r7, #4]
 8009800:	685b      	ldr	r3, [r3, #4]
 8009802:	2b00      	cmp	r3, #0
 8009804:	d113      	bne.n	800982e <HAL_SPI_Init+0x1ee>
    /* Set Default Underrun configuration */
#if (USE_SPI_CRC != 0UL)
    if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_DISABLE)
#endif /* USE_SPI_CRC */
    {
      MODIFY_REG(hspi->Instance->CFG1, SPI_CFG1_UDRDET, SPI_CFG1_UDRDET_0);
 8009806:	687b      	ldr	r3, [r7, #4]
 8009808:	681b      	ldr	r3, [r3, #0]
 800980a:	689b      	ldr	r3, [r3, #8]
 800980c:	f423 52c0 	bic.w	r2, r3, #6144	@ 0x1800
 8009810:	687b      	ldr	r3, [r7, #4]
 8009812:	681b      	ldr	r3, [r3, #0]
 8009814:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8009818:	609a      	str	r2, [r3, #8]
    }
    MODIFY_REG(hspi->Instance->CFG1, SPI_CFG1_UDRCFG, SPI_CFG1_UDRCFG_1);
 800981a:	687b      	ldr	r3, [r7, #4]
 800981c:	681b      	ldr	r3, [r3, #0]
 800981e:	689b      	ldr	r3, [r3, #8]
 8009820:	f423 62c0 	bic.w	r2, r3, #1536	@ 0x600
 8009824:	687b      	ldr	r3, [r7, #4]
 8009826:	681b      	ldr	r3, [r3, #0]
 8009828:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 800982c:	609a      	str	r2, [r3, #8]
  }

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800982e:	687b      	ldr	r3, [r7, #4]
 8009830:	681b      	ldr	r3, [r3, #0]
 8009832:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8009834:	687b      	ldr	r3, [r7, #4]
 8009836:	681b      	ldr	r3, [r3, #0]
 8009838:	f022 0201 	bic.w	r2, r2, #1
 800983c:	651a      	str	r2, [r3, #80]	@ 0x50
#endif /* SPI_I2SCFGR_I2SMOD */

  /* Insure that AFCNTR is managed only by Master */
  if ((hspi->Init.Mode & SPI_MODE_MASTER) == SPI_MODE_MASTER)
 800983e:	687b      	ldr	r3, [r7, #4]
 8009840:	685b      	ldr	r3, [r3, #4]
 8009842:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8009846:	2b00      	cmp	r3, #0
 8009848:	d00a      	beq.n	8009860 <HAL_SPI_Init+0x220>
  {
    /* Alternate function GPIOs control */
    MODIFY_REG(hspi->Instance->CFG2, SPI_CFG2_AFCNTR, (hspi->Init.MasterKeepIOState));
 800984a:	687b      	ldr	r3, [r7, #4]
 800984c:	681b      	ldr	r3, [r3, #0]
 800984e:	68db      	ldr	r3, [r3, #12]
 8009850:	f023 4100 	bic.w	r1, r3, #2147483648	@ 0x80000000
 8009854:	687b      	ldr	r3, [r7, #4]
 8009856:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 8009858:	687b      	ldr	r3, [r7, #4]
 800985a:	681b      	ldr	r3, [r3, #0]
 800985c:	430a      	orrs	r2, r1
 800985e:	60da      	str	r2, [r3, #12]
  }

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8009860:	687b      	ldr	r3, [r7, #4]
 8009862:	2200      	movs	r2, #0
 8009864:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
  hspi->State     = HAL_SPI_STATE_READY;
 8009868:	687b      	ldr	r3, [r7, #4]
 800986a:	2201      	movs	r2, #1
 800986c:	f883 2081 	strb.w	r2, [r3, #129]	@ 0x81

  return HAL_OK;
 8009870:	2300      	movs	r3, #0
}
 8009872:	4618      	mov	r0, r3
 8009874:	3710      	adds	r7, #16
 8009876:	46bd      	mov	sp, r7
 8009878:	bd80      	pop	{r7, pc}
 800987a:	bf00      	nop
 800987c:	40013000 	.word	0x40013000
 8009880:	40003800 	.word	0x40003800
 8009884:	40003c00 	.word	0x40003c00

08009888 <HAL_SPI_Transmit>:
  * @param  Size   : amount of data to be sent
  * @param  Timeout: Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8009888:	b580      	push	{r7, lr}
 800988a:	b088      	sub	sp, #32
 800988c:	af02      	add	r7, sp, #8
 800988e:	60f8      	str	r0, [r7, #12]
 8009890:	60b9      	str	r1, [r7, #8]
 8009892:	603b      	str	r3, [r7, #0]
 8009894:	4613      	mov	r3, r2
 8009896:	80fb      	strh	r3, [r7, #6]
#if defined (__GNUC__)
  __IO uint16_t *ptxdr_16bits = (__IO uint16_t *)(&(hspi->Instance->TXDR));
 8009898:	68fb      	ldr	r3, [r7, #12]
 800989a:	681b      	ldr	r3, [r3, #0]
 800989c:	3320      	adds	r3, #32
 800989e:	617b      	str	r3, [r7, #20]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE_2LINES_TXONLY(hspi->Init.Direction));

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 80098a0:	f7f9 fc6e 	bl	8003180 <HAL_GetTick>
 80098a4:	6138      	str	r0, [r7, #16]

  if (hspi->State != HAL_SPI_STATE_READY)
 80098a6:	68fb      	ldr	r3, [r7, #12]
 80098a8:	f893 3081 	ldrb.w	r3, [r3, #129]	@ 0x81
 80098ac:	b2db      	uxtb	r3, r3
 80098ae:	2b01      	cmp	r3, #1
 80098b0:	d001      	beq.n	80098b6 <HAL_SPI_Transmit+0x2e>
  {
    return HAL_BUSY;
 80098b2:	2302      	movs	r3, #2
 80098b4:	e1d1      	b.n	8009c5a <HAL_SPI_Transmit+0x3d2>
  }

  if ((pData == NULL) || (Size == 0UL))
 80098b6:	68bb      	ldr	r3, [r7, #8]
 80098b8:	2b00      	cmp	r3, #0
 80098ba:	d002      	beq.n	80098c2 <HAL_SPI_Transmit+0x3a>
 80098bc:	88fb      	ldrh	r3, [r7, #6]
 80098be:	2b00      	cmp	r3, #0
 80098c0:	d101      	bne.n	80098c6 <HAL_SPI_Transmit+0x3e>
  {
    return HAL_ERROR;
 80098c2:	2301      	movs	r3, #1
 80098c4:	e1c9      	b.n	8009c5a <HAL_SPI_Transmit+0x3d2>
  }

  /* Lock the process */
  __HAL_LOCK(hspi);
 80098c6:	68fb      	ldr	r3, [r7, #12]
 80098c8:	f893 3080 	ldrb.w	r3, [r3, #128]	@ 0x80
 80098cc:	2b01      	cmp	r3, #1
 80098ce:	d101      	bne.n	80098d4 <HAL_SPI_Transmit+0x4c>
 80098d0:	2302      	movs	r3, #2
 80098d2:	e1c2      	b.n	8009c5a <HAL_SPI_Transmit+0x3d2>
 80098d4:	68fb      	ldr	r3, [r7, #12]
 80098d6:	2201      	movs	r2, #1
 80098d8:	f883 2080 	strb.w	r2, [r3, #128]	@ 0x80

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 80098dc:	68fb      	ldr	r3, [r7, #12]
 80098de:	2203      	movs	r2, #3
 80098e0:	f883 2081 	strb.w	r2, [r3, #129]	@ 0x81
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80098e4:	68fb      	ldr	r3, [r7, #12]
 80098e6:	2200      	movs	r2, #0
 80098e8:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 80098ec:	68fb      	ldr	r3, [r7, #12]
 80098ee:	68ba      	ldr	r2, [r7, #8]
 80098f0:	65da      	str	r2, [r3, #92]	@ 0x5c
  hspi->TxXferSize  = Size;
 80098f2:	68fb      	ldr	r3, [r7, #12]
 80098f4:	88fa      	ldrh	r2, [r7, #6]
 80098f6:	f8a3 2060 	strh.w	r2, [r3, #96]	@ 0x60
  hspi->TxXferCount = Size;
 80098fa:	68fb      	ldr	r3, [r7, #12]
 80098fc:	88fa      	ldrh	r2, [r7, #6]
 80098fe:	f8a3 2062 	strh.w	r2, [r3, #98]	@ 0x62

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = NULL;
 8009902:	68fb      	ldr	r3, [r7, #12]
 8009904:	2200      	movs	r2, #0
 8009906:	665a      	str	r2, [r3, #100]	@ 0x64
  hspi->RxXferSize  = (uint16_t) 0UL;
 8009908:	68fb      	ldr	r3, [r7, #12]
 800990a:	2200      	movs	r2, #0
 800990c:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
  hspi->RxXferCount = (uint16_t) 0UL;
 8009910:	68fb      	ldr	r3, [r7, #12]
 8009912:	2200      	movs	r2, #0
 8009914:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
  hspi->TxISR       = NULL;
 8009918:	68fb      	ldr	r3, [r7, #12]
 800991a:	2200      	movs	r2, #0
 800991c:	675a      	str	r2, [r3, #116]	@ 0x74
  hspi->RxISR       = NULL;
 800991e:	68fb      	ldr	r3, [r7, #12]
 8009920:	2200      	movs	r2, #0
 8009922:	671a      	str	r2, [r3, #112]	@ 0x70

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8009924:	68fb      	ldr	r3, [r7, #12]
 8009926:	689b      	ldr	r3, [r3, #8]
 8009928:	f5b3 2fc0 	cmp.w	r3, #393216	@ 0x60000
 800992c:	d108      	bne.n	8009940 <HAL_SPI_Transmit+0xb8>
  {
    SPI_1LINE_TX(hspi);
 800992e:	68fb      	ldr	r3, [r7, #12]
 8009930:	681b      	ldr	r3, [r3, #0]
 8009932:	681a      	ldr	r2, [r3, #0]
 8009934:	68fb      	ldr	r3, [r7, #12]
 8009936:	681b      	ldr	r3, [r3, #0]
 8009938:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800993c:	601a      	str	r2, [r3, #0]
 800993e:	e009      	b.n	8009954 <HAL_SPI_Transmit+0xcc>
  }
  else
  {
    SPI_2LINES_TX(hspi);
 8009940:	68fb      	ldr	r3, [r7, #12]
 8009942:	681b      	ldr	r3, [r3, #0]
 8009944:	68db      	ldr	r3, [r3, #12]
 8009946:	f423 22c0 	bic.w	r2, r3, #393216	@ 0x60000
 800994a:	68fb      	ldr	r3, [r7, #12]
 800994c:	681b      	ldr	r3, [r3, #0]
 800994e:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 8009952:	60da      	str	r2, [r3, #12]
  }

  /* Set the number of data at current transfer */
  MODIFY_REG(hspi->Instance->CR2, SPI_CR2_TSIZE, Size);
 8009954:	68fb      	ldr	r3, [r7, #12]
 8009956:	681b      	ldr	r3, [r3, #0]
 8009958:	685a      	ldr	r2, [r3, #4]
 800995a:	4b96      	ldr	r3, [pc, #600]	@ (8009bb4 <HAL_SPI_Transmit+0x32c>)
 800995c:	4013      	ands	r3, r2
 800995e:	88f9      	ldrh	r1, [r7, #6]
 8009960:	68fa      	ldr	r2, [r7, #12]
 8009962:	6812      	ldr	r2, [r2, #0]
 8009964:	430b      	orrs	r3, r1
 8009966:	6053      	str	r3, [r2, #4]

  /* Enable SPI peripheral */
  __HAL_SPI_ENABLE(hspi);
 8009968:	68fb      	ldr	r3, [r7, #12]
 800996a:	681b      	ldr	r3, [r3, #0]
 800996c:	681a      	ldr	r2, [r3, #0]
 800996e:	68fb      	ldr	r3, [r7, #12]
 8009970:	681b      	ldr	r3, [r3, #0]
 8009972:	f042 0201 	orr.w	r2, r2, #1
 8009976:	601a      	str	r2, [r3, #0]

  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8009978:	68fb      	ldr	r3, [r7, #12]
 800997a:	685b      	ldr	r3, [r3, #4]
 800997c:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8009980:	d107      	bne.n	8009992 <HAL_SPI_Transmit+0x10a>
  {
    /* Master transfer start */
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CSTART);
 8009982:	68fb      	ldr	r3, [r7, #12]
 8009984:	681b      	ldr	r3, [r3, #0]
 8009986:	681a      	ldr	r2, [r3, #0]
 8009988:	68fb      	ldr	r3, [r7, #12]
 800998a:	681b      	ldr	r3, [r3, #0]
 800998c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8009990:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 32 Bit mode */
  if (hspi->Init.DataSize > SPI_DATASIZE_16BIT)
 8009992:	68fb      	ldr	r3, [r7, #12]
 8009994:	68db      	ldr	r3, [r3, #12]
 8009996:	2b0f      	cmp	r3, #15
 8009998:	d947      	bls.n	8009a2a <HAL_SPI_Transmit+0x1a2>
  {
    /* Transmit data in 32 Bit mode */
    while (hspi->TxXferCount > 0UL)
 800999a:	e03f      	b.n	8009a1c <HAL_SPI_Transmit+0x194>
    {
      /* Wait until TXP flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP))
 800999c:	68fb      	ldr	r3, [r7, #12]
 800999e:	681b      	ldr	r3, [r3, #0]
 80099a0:	695b      	ldr	r3, [r3, #20]
 80099a2:	f003 0302 	and.w	r3, r3, #2
 80099a6:	2b02      	cmp	r3, #2
 80099a8:	d114      	bne.n	80099d4 <HAL_SPI_Transmit+0x14c>
      {
        *((__IO uint32_t *)&hspi->Instance->TXDR) = *((const uint32_t *)hspi->pTxBuffPtr);
 80099aa:	68fb      	ldr	r3, [r7, #12]
 80099ac:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 80099ae:	68fb      	ldr	r3, [r7, #12]
 80099b0:	681b      	ldr	r3, [r3, #0]
 80099b2:	6812      	ldr	r2, [r2, #0]
 80099b4:	621a      	str	r2, [r3, #32]
        hspi->pTxBuffPtr += sizeof(uint32_t);
 80099b6:	68fb      	ldr	r3, [r7, #12]
 80099b8:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80099ba:	1d1a      	adds	r2, r3, #4
 80099bc:	68fb      	ldr	r3, [r7, #12]
 80099be:	65da      	str	r2, [r3, #92]	@ 0x5c
        hspi->TxXferCount--;
 80099c0:	68fb      	ldr	r3, [r7, #12]
 80099c2:	f8b3 3062 	ldrh.w	r3, [r3, #98]	@ 0x62
 80099c6:	b29b      	uxth	r3, r3
 80099c8:	3b01      	subs	r3, #1
 80099ca:	b29a      	uxth	r2, r3
 80099cc:	68fb      	ldr	r3, [r7, #12]
 80099ce:	f8a3 2062 	strh.w	r2, [r3, #98]	@ 0x62
 80099d2:	e023      	b.n	8009a1c <HAL_SPI_Transmit+0x194>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80099d4:	f7f9 fbd4 	bl	8003180 <HAL_GetTick>
 80099d8:	4602      	mov	r2, r0
 80099da:	693b      	ldr	r3, [r7, #16]
 80099dc:	1ad3      	subs	r3, r2, r3
 80099de:	683a      	ldr	r2, [r7, #0]
 80099e0:	429a      	cmp	r2, r3
 80099e2:	d803      	bhi.n	80099ec <HAL_SPI_Transmit+0x164>
 80099e4:	683b      	ldr	r3, [r7, #0]
 80099e6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80099ea:	d102      	bne.n	80099f2 <HAL_SPI_Transmit+0x16a>
 80099ec:	683b      	ldr	r3, [r7, #0]
 80099ee:	2b00      	cmp	r3, #0
 80099f0:	d114      	bne.n	8009a1c <HAL_SPI_Transmit+0x194>
        {
          /* Call standard close procedure with error check */
          SPI_CloseTransfer(hspi);
 80099f2:	68f8      	ldr	r0, [r7, #12]
 80099f4:	f000 f936 	bl	8009c64 <SPI_CloseTransfer>

          SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 80099f8:	68fb      	ldr	r3, [r7, #12]
 80099fa:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 80099fe:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8009a02:	68fb      	ldr	r3, [r7, #12]
 8009a04:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
          hspi->State = HAL_SPI_STATE_READY;
 8009a08:	68fb      	ldr	r3, [r7, #12]
 8009a0a:	2201      	movs	r2, #1
 8009a0c:	f883 2081 	strb.w	r2, [r3, #129]	@ 0x81

          /* Unlock the process */
          __HAL_UNLOCK(hspi);
 8009a10:	68fb      	ldr	r3, [r7, #12]
 8009a12:	2200      	movs	r2, #0
 8009a14:	f883 2080 	strb.w	r2, [r3, #128]	@ 0x80

          return HAL_TIMEOUT;
 8009a18:	2303      	movs	r3, #3
 8009a1a:	e11e      	b.n	8009c5a <HAL_SPI_Transmit+0x3d2>
    while (hspi->TxXferCount > 0UL)
 8009a1c:	68fb      	ldr	r3, [r7, #12]
 8009a1e:	f8b3 3062 	ldrh.w	r3, [r3, #98]	@ 0x62
 8009a22:	b29b      	uxth	r3, r3
 8009a24:	2b00      	cmp	r3, #0
 8009a26:	d1b9      	bne.n	800999c <HAL_SPI_Transmit+0x114>
 8009a28:	e0f1      	b.n	8009c0e <HAL_SPI_Transmit+0x386>
        }
      }
    }
  }
  /* Transmit data in 16 Bit mode */
  else if (hspi->Init.DataSize > SPI_DATASIZE_8BIT)
 8009a2a:	68fb      	ldr	r3, [r7, #12]
 8009a2c:	68db      	ldr	r3, [r3, #12]
 8009a2e:	2b07      	cmp	r3, #7
 8009a30:	f240 80e6 	bls.w	8009c00 <HAL_SPI_Transmit+0x378>
  {
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0UL)
 8009a34:	e05d      	b.n	8009af2 <HAL_SPI_Transmit+0x26a>
    {
      /* Wait until TXP flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP))
 8009a36:	68fb      	ldr	r3, [r7, #12]
 8009a38:	681b      	ldr	r3, [r3, #0]
 8009a3a:	695b      	ldr	r3, [r3, #20]
 8009a3c:	f003 0302 	and.w	r3, r3, #2
 8009a40:	2b02      	cmp	r3, #2
 8009a42:	d132      	bne.n	8009aaa <HAL_SPI_Transmit+0x222>
      {
        if ((hspi->TxXferCount > 1UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_01DATA))
 8009a44:	68fb      	ldr	r3, [r7, #12]
 8009a46:	f8b3 3062 	ldrh.w	r3, [r3, #98]	@ 0x62
 8009a4a:	b29b      	uxth	r3, r3
 8009a4c:	2b01      	cmp	r3, #1
 8009a4e:	d918      	bls.n	8009a82 <HAL_SPI_Transmit+0x1fa>
 8009a50:	68fb      	ldr	r3, [r7, #12]
 8009a52:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8009a54:	2b00      	cmp	r3, #0
 8009a56:	d014      	beq.n	8009a82 <HAL_SPI_Transmit+0x1fa>
        {
          *((__IO uint32_t *)&hspi->Instance->TXDR) = *((const uint32_t *)hspi->pTxBuffPtr);
 8009a58:	68fb      	ldr	r3, [r7, #12]
 8009a5a:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8009a5c:	68fb      	ldr	r3, [r7, #12]
 8009a5e:	681b      	ldr	r3, [r3, #0]
 8009a60:	6812      	ldr	r2, [r2, #0]
 8009a62:	621a      	str	r2, [r3, #32]
          hspi->pTxBuffPtr += sizeof(uint32_t);
 8009a64:	68fb      	ldr	r3, [r7, #12]
 8009a66:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8009a68:	1d1a      	adds	r2, r3, #4
 8009a6a:	68fb      	ldr	r3, [r7, #12]
 8009a6c:	65da      	str	r2, [r3, #92]	@ 0x5c
          hspi->TxXferCount -= (uint16_t)2UL;
 8009a6e:	68fb      	ldr	r3, [r7, #12]
 8009a70:	f8b3 3062 	ldrh.w	r3, [r3, #98]	@ 0x62
 8009a74:	b29b      	uxth	r3, r3
 8009a76:	3b02      	subs	r3, #2
 8009a78:	b29a      	uxth	r2, r3
 8009a7a:	68fb      	ldr	r3, [r7, #12]
 8009a7c:	f8a3 2062 	strh.w	r2, [r3, #98]	@ 0x62
 8009a80:	e037      	b.n	8009af2 <HAL_SPI_Transmit+0x26a>
        }
        else
        {
#if defined (__GNUC__)
          *ptxdr_16bits = *((const uint16_t *)hspi->pTxBuffPtr);
 8009a82:	68fb      	ldr	r3, [r7, #12]
 8009a84:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8009a86:	881a      	ldrh	r2, [r3, #0]
 8009a88:	697b      	ldr	r3, [r7, #20]
 8009a8a:	801a      	strh	r2, [r3, #0]
#else
          *((__IO uint16_t *)&hspi->Instance->TXDR) = *((const uint16_t *)hspi->pTxBuffPtr);
#endif /* __GNUC__ */
          hspi->pTxBuffPtr += sizeof(uint16_t);
 8009a8c:	68fb      	ldr	r3, [r7, #12]
 8009a8e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8009a90:	1c9a      	adds	r2, r3, #2
 8009a92:	68fb      	ldr	r3, [r7, #12]
 8009a94:	65da      	str	r2, [r3, #92]	@ 0x5c
          hspi->TxXferCount--;
 8009a96:	68fb      	ldr	r3, [r7, #12]
 8009a98:	f8b3 3062 	ldrh.w	r3, [r3, #98]	@ 0x62
 8009a9c:	b29b      	uxth	r3, r3
 8009a9e:	3b01      	subs	r3, #1
 8009aa0:	b29a      	uxth	r2, r3
 8009aa2:	68fb      	ldr	r3, [r7, #12]
 8009aa4:	f8a3 2062 	strh.w	r2, [r3, #98]	@ 0x62
 8009aa8:	e023      	b.n	8009af2 <HAL_SPI_Transmit+0x26a>
        }
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8009aaa:	f7f9 fb69 	bl	8003180 <HAL_GetTick>
 8009aae:	4602      	mov	r2, r0
 8009ab0:	693b      	ldr	r3, [r7, #16]
 8009ab2:	1ad3      	subs	r3, r2, r3
 8009ab4:	683a      	ldr	r2, [r7, #0]
 8009ab6:	429a      	cmp	r2, r3
 8009ab8:	d803      	bhi.n	8009ac2 <HAL_SPI_Transmit+0x23a>
 8009aba:	683b      	ldr	r3, [r7, #0]
 8009abc:	f1b3 3fff 	cmp.w	r3, #4294967295
 8009ac0:	d102      	bne.n	8009ac8 <HAL_SPI_Transmit+0x240>
 8009ac2:	683b      	ldr	r3, [r7, #0]
 8009ac4:	2b00      	cmp	r3, #0
 8009ac6:	d114      	bne.n	8009af2 <HAL_SPI_Transmit+0x26a>
        {
          /* Call standard close procedure with error check */
          SPI_CloseTransfer(hspi);
 8009ac8:	68f8      	ldr	r0, [r7, #12]
 8009aca:	f000 f8cb 	bl	8009c64 <SPI_CloseTransfer>

          SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 8009ace:	68fb      	ldr	r3, [r7, #12]
 8009ad0:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8009ad4:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8009ad8:	68fb      	ldr	r3, [r7, #12]
 8009ada:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
          hspi->State = HAL_SPI_STATE_READY;
 8009ade:	68fb      	ldr	r3, [r7, #12]
 8009ae0:	2201      	movs	r2, #1
 8009ae2:	f883 2081 	strb.w	r2, [r3, #129]	@ 0x81

          /* Unlock the process */
          __HAL_UNLOCK(hspi);
 8009ae6:	68fb      	ldr	r3, [r7, #12]
 8009ae8:	2200      	movs	r2, #0
 8009aea:	f883 2080 	strb.w	r2, [r3, #128]	@ 0x80

          return HAL_TIMEOUT;
 8009aee:	2303      	movs	r3, #3
 8009af0:	e0b3      	b.n	8009c5a <HAL_SPI_Transmit+0x3d2>
    while (hspi->TxXferCount > 0UL)
 8009af2:	68fb      	ldr	r3, [r7, #12]
 8009af4:	f8b3 3062 	ldrh.w	r3, [r3, #98]	@ 0x62
 8009af8:	b29b      	uxth	r3, r3
 8009afa:	2b00      	cmp	r3, #0
 8009afc:	d19b      	bne.n	8009a36 <HAL_SPI_Transmit+0x1ae>
 8009afe:	e086      	b.n	8009c0e <HAL_SPI_Transmit+0x386>
  else
  {
    while (hspi->TxXferCount > 0UL)
    {
      /* Wait until TXP flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXP))
 8009b00:	68fb      	ldr	r3, [r7, #12]
 8009b02:	681b      	ldr	r3, [r3, #0]
 8009b04:	695b      	ldr	r3, [r3, #20]
 8009b06:	f003 0302 	and.w	r3, r3, #2
 8009b0a:	2b02      	cmp	r3, #2
 8009b0c:	d154      	bne.n	8009bb8 <HAL_SPI_Transmit+0x330>
      {
        if ((hspi->TxXferCount > 3UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_03DATA))
 8009b0e:	68fb      	ldr	r3, [r7, #12]
 8009b10:	f8b3 3062 	ldrh.w	r3, [r3, #98]	@ 0x62
 8009b14:	b29b      	uxth	r3, r3
 8009b16:	2b03      	cmp	r3, #3
 8009b18:	d918      	bls.n	8009b4c <HAL_SPI_Transmit+0x2c4>
 8009b1a:	68fb      	ldr	r3, [r7, #12]
 8009b1c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8009b1e:	2b40      	cmp	r3, #64	@ 0x40
 8009b20:	d914      	bls.n	8009b4c <HAL_SPI_Transmit+0x2c4>
        {
          *((__IO uint32_t *)&hspi->Instance->TXDR) = *((const uint32_t *)hspi->pTxBuffPtr);
 8009b22:	68fb      	ldr	r3, [r7, #12]
 8009b24:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8009b26:	68fb      	ldr	r3, [r7, #12]
 8009b28:	681b      	ldr	r3, [r3, #0]
 8009b2a:	6812      	ldr	r2, [r2, #0]
 8009b2c:	621a      	str	r2, [r3, #32]
          hspi->pTxBuffPtr += sizeof(uint32_t);
 8009b2e:	68fb      	ldr	r3, [r7, #12]
 8009b30:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8009b32:	1d1a      	adds	r2, r3, #4
 8009b34:	68fb      	ldr	r3, [r7, #12]
 8009b36:	65da      	str	r2, [r3, #92]	@ 0x5c
          hspi->TxXferCount -= (uint16_t)4UL;
 8009b38:	68fb      	ldr	r3, [r7, #12]
 8009b3a:	f8b3 3062 	ldrh.w	r3, [r3, #98]	@ 0x62
 8009b3e:	b29b      	uxth	r3, r3
 8009b40:	3b04      	subs	r3, #4
 8009b42:	b29a      	uxth	r2, r3
 8009b44:	68fb      	ldr	r3, [r7, #12]
 8009b46:	f8a3 2062 	strh.w	r2, [r3, #98]	@ 0x62
 8009b4a:	e059      	b.n	8009c00 <HAL_SPI_Transmit+0x378>
        }
        else if ((hspi->TxXferCount > 1UL) && (hspi->Init.FifoThreshold > SPI_FIFO_THRESHOLD_01DATA))
 8009b4c:	68fb      	ldr	r3, [r7, #12]
 8009b4e:	f8b3 3062 	ldrh.w	r3, [r3, #98]	@ 0x62
 8009b52:	b29b      	uxth	r3, r3
 8009b54:	2b01      	cmp	r3, #1
 8009b56:	d917      	bls.n	8009b88 <HAL_SPI_Transmit+0x300>
 8009b58:	68fb      	ldr	r3, [r7, #12]
 8009b5a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8009b5c:	2b00      	cmp	r3, #0
 8009b5e:	d013      	beq.n	8009b88 <HAL_SPI_Transmit+0x300>
        {
#if defined (__GNUC__)
          *ptxdr_16bits = *((const uint16_t *)hspi->pTxBuffPtr);
 8009b60:	68fb      	ldr	r3, [r7, #12]
 8009b62:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8009b64:	881a      	ldrh	r2, [r3, #0]
 8009b66:	697b      	ldr	r3, [r7, #20]
 8009b68:	801a      	strh	r2, [r3, #0]
#else
          *((__IO uint16_t *)&hspi->Instance->TXDR) = *((const uint16_t *)hspi->pTxBuffPtr);
#endif /* __GNUC__ */
          hspi->pTxBuffPtr += sizeof(uint16_t);
 8009b6a:	68fb      	ldr	r3, [r7, #12]
 8009b6c:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8009b6e:	1c9a      	adds	r2, r3, #2
 8009b70:	68fb      	ldr	r3, [r7, #12]
 8009b72:	65da      	str	r2, [r3, #92]	@ 0x5c
          hspi->TxXferCount -= (uint16_t)2UL;
 8009b74:	68fb      	ldr	r3, [r7, #12]
 8009b76:	f8b3 3062 	ldrh.w	r3, [r3, #98]	@ 0x62
 8009b7a:	b29b      	uxth	r3, r3
 8009b7c:	3b02      	subs	r3, #2
 8009b7e:	b29a      	uxth	r2, r3
 8009b80:	68fb      	ldr	r3, [r7, #12]
 8009b82:	f8a3 2062 	strh.w	r2, [r3, #98]	@ 0x62
 8009b86:	e03b      	b.n	8009c00 <HAL_SPI_Transmit+0x378>
        }
        else
        {
          *((__IO uint8_t *)&hspi->Instance->TXDR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8009b88:	68fb      	ldr	r3, [r7, #12]
 8009b8a:	6dda      	ldr	r2, [r3, #92]	@ 0x5c
 8009b8c:	68fb      	ldr	r3, [r7, #12]
 8009b8e:	681b      	ldr	r3, [r3, #0]
 8009b90:	3320      	adds	r3, #32
 8009b92:	7812      	ldrb	r2, [r2, #0]
 8009b94:	701a      	strb	r2, [r3, #0]
          hspi->pTxBuffPtr += sizeof(uint8_t);
 8009b96:	68fb      	ldr	r3, [r7, #12]
 8009b98:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8009b9a:	1c5a      	adds	r2, r3, #1
 8009b9c:	68fb      	ldr	r3, [r7, #12]
 8009b9e:	65da      	str	r2, [r3, #92]	@ 0x5c
          hspi->TxXferCount--;
 8009ba0:	68fb      	ldr	r3, [r7, #12]
 8009ba2:	f8b3 3062 	ldrh.w	r3, [r3, #98]	@ 0x62
 8009ba6:	b29b      	uxth	r3, r3
 8009ba8:	3b01      	subs	r3, #1
 8009baa:	b29a      	uxth	r2, r3
 8009bac:	68fb      	ldr	r3, [r7, #12]
 8009bae:	f8a3 2062 	strh.w	r2, [r3, #98]	@ 0x62
 8009bb2:	e025      	b.n	8009c00 <HAL_SPI_Transmit+0x378>
 8009bb4:	ffff0000 	.word	0xffff0000
        }
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8009bb8:	f7f9 fae2 	bl	8003180 <HAL_GetTick>
 8009bbc:	4602      	mov	r2, r0
 8009bbe:	693b      	ldr	r3, [r7, #16]
 8009bc0:	1ad3      	subs	r3, r2, r3
 8009bc2:	683a      	ldr	r2, [r7, #0]
 8009bc4:	429a      	cmp	r2, r3
 8009bc6:	d803      	bhi.n	8009bd0 <HAL_SPI_Transmit+0x348>
 8009bc8:	683b      	ldr	r3, [r7, #0]
 8009bca:	f1b3 3fff 	cmp.w	r3, #4294967295
 8009bce:	d102      	bne.n	8009bd6 <HAL_SPI_Transmit+0x34e>
 8009bd0:	683b      	ldr	r3, [r7, #0]
 8009bd2:	2b00      	cmp	r3, #0
 8009bd4:	d114      	bne.n	8009c00 <HAL_SPI_Transmit+0x378>
        {
          /* Call standard close procedure with error check */
          SPI_CloseTransfer(hspi);
 8009bd6:	68f8      	ldr	r0, [r7, #12]
 8009bd8:	f000 f844 	bl	8009c64 <SPI_CloseTransfer>

          SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_TIMEOUT);
 8009bdc:	68fb      	ldr	r3, [r7, #12]
 8009bde:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8009be2:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8009be6:	68fb      	ldr	r3, [r7, #12]
 8009be8:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
          hspi->State = HAL_SPI_STATE_READY;
 8009bec:	68fb      	ldr	r3, [r7, #12]
 8009bee:	2201      	movs	r2, #1
 8009bf0:	f883 2081 	strb.w	r2, [r3, #129]	@ 0x81

          /* Unlock the process */
          __HAL_UNLOCK(hspi);
 8009bf4:	68fb      	ldr	r3, [r7, #12]
 8009bf6:	2200      	movs	r2, #0
 8009bf8:	f883 2080 	strb.w	r2, [r3, #128]	@ 0x80

          return HAL_TIMEOUT;
 8009bfc:	2303      	movs	r3, #3
 8009bfe:	e02c      	b.n	8009c5a <HAL_SPI_Transmit+0x3d2>
    while (hspi->TxXferCount > 0UL)
 8009c00:	68fb      	ldr	r3, [r7, #12]
 8009c02:	f8b3 3062 	ldrh.w	r3, [r3, #98]	@ 0x62
 8009c06:	b29b      	uxth	r3, r3
 8009c08:	2b00      	cmp	r3, #0
 8009c0a:	f47f af79 	bne.w	8009b00 <HAL_SPI_Transmit+0x278>
      }
    }
  }

  /* Wait for Tx (and CRC) data to be sent */
  if (SPI_WaitOnFlagUntilTimeout(hspi, SPI_FLAG_EOT, RESET, Timeout, tickstart) != HAL_OK)
 8009c0e:	693b      	ldr	r3, [r7, #16]
 8009c10:	9300      	str	r3, [sp, #0]
 8009c12:	683b      	ldr	r3, [r7, #0]
 8009c14:	2200      	movs	r2, #0
 8009c16:	2108      	movs	r1, #8
 8009c18:	68f8      	ldr	r0, [r7, #12]
 8009c1a:	f000 f8c3 	bl	8009da4 <SPI_WaitOnFlagUntilTimeout>
 8009c1e:	4603      	mov	r3, r0
 8009c20:	2b00      	cmp	r3, #0
 8009c22:	d007      	beq.n	8009c34 <HAL_SPI_Transmit+0x3ac>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8009c24:	68fb      	ldr	r3, [r7, #12]
 8009c26:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8009c2a:	f043 0220 	orr.w	r2, r3, #32
 8009c2e:	68fb      	ldr	r3, [r7, #12]
 8009c30:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
  }

  /* Call standard close procedure with error check */
  SPI_CloseTransfer(hspi);
 8009c34:	68f8      	ldr	r0, [r7, #12]
 8009c36:	f000 f815 	bl	8009c64 <SPI_CloseTransfer>

  hspi->State = HAL_SPI_STATE_READY;
 8009c3a:	68fb      	ldr	r3, [r7, #12]
 8009c3c:	2201      	movs	r2, #1
 8009c3e:	f883 2081 	strb.w	r2, [r3, #129]	@ 0x81

  /* Unlock the process */
  __HAL_UNLOCK(hspi);
 8009c42:	68fb      	ldr	r3, [r7, #12]
 8009c44:	2200      	movs	r2, #0
 8009c46:	f883 2080 	strb.w	r2, [r3, #128]	@ 0x80

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8009c4a:	68fb      	ldr	r3, [r7, #12]
 8009c4c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8009c50:	2b00      	cmp	r3, #0
 8009c52:	d001      	beq.n	8009c58 <HAL_SPI_Transmit+0x3d0>
  {
    return HAL_ERROR;
 8009c54:	2301      	movs	r3, #1
 8009c56:	e000      	b.n	8009c5a <HAL_SPI_Transmit+0x3d2>
  }
  else
  {
    return HAL_OK;
 8009c58:	2300      	movs	r3, #0
  }
}
 8009c5a:	4618      	mov	r0, r3
 8009c5c:	3718      	adds	r7, #24
 8009c5e:	46bd      	mov	sp, r7
 8009c60:	bd80      	pop	{r7, pc}
 8009c62:	bf00      	nop

08009c64 <SPI_CloseTransfer>:
  *               the configuration information for SPI module.
  * @retval HAL_ERROR: if any error detected
  *         HAL_OK: if nothing detected
  */
static void SPI_CloseTransfer(SPI_HandleTypeDef *hspi)
{
 8009c64:	b480      	push	{r7}
 8009c66:	b085      	sub	sp, #20
 8009c68:	af00      	add	r7, sp, #0
 8009c6a:	6078      	str	r0, [r7, #4]
  uint32_t itflag = hspi->Instance->SR;
 8009c6c:	687b      	ldr	r3, [r7, #4]
 8009c6e:	681b      	ldr	r3, [r3, #0]
 8009c70:	695b      	ldr	r3, [r3, #20]
 8009c72:	60fb      	str	r3, [r7, #12]

  __HAL_SPI_CLEAR_EOTFLAG(hspi);
 8009c74:	687b      	ldr	r3, [r7, #4]
 8009c76:	681b      	ldr	r3, [r3, #0]
 8009c78:	699a      	ldr	r2, [r3, #24]
 8009c7a:	687b      	ldr	r3, [r7, #4]
 8009c7c:	681b      	ldr	r3, [r3, #0]
 8009c7e:	f042 0208 	orr.w	r2, r2, #8
 8009c82:	619a      	str	r2, [r3, #24]
  __HAL_SPI_CLEAR_TXTFFLAG(hspi);
 8009c84:	687b      	ldr	r3, [r7, #4]
 8009c86:	681b      	ldr	r3, [r3, #0]
 8009c88:	699a      	ldr	r2, [r3, #24]
 8009c8a:	687b      	ldr	r3, [r7, #4]
 8009c8c:	681b      	ldr	r3, [r3, #0]
 8009c8e:	f042 0210 	orr.w	r2, r2, #16
 8009c92:	619a      	str	r2, [r3, #24]

  /* Disable SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 8009c94:	687b      	ldr	r3, [r7, #4]
 8009c96:	681b      	ldr	r3, [r3, #0]
 8009c98:	681a      	ldr	r2, [r3, #0]
 8009c9a:	687b      	ldr	r3, [r7, #4]
 8009c9c:	681b      	ldr	r3, [r3, #0]
 8009c9e:	f022 0201 	bic.w	r2, r2, #1
 8009ca2:	601a      	str	r2, [r3, #0]

  /* Disable ITs */
  __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_EOT | SPI_IT_TXP | SPI_IT_RXP | SPI_IT_DXP | SPI_IT_UDR | SPI_IT_OVR | \
 8009ca4:	687b      	ldr	r3, [r7, #4]
 8009ca6:	681b      	ldr	r3, [r3, #0]
 8009ca8:	6919      	ldr	r1, [r3, #16]
 8009caa:	687b      	ldr	r3, [r7, #4]
 8009cac:	681a      	ldr	r2, [r3, #0]
 8009cae:	4b3c      	ldr	r3, [pc, #240]	@ (8009da0 <SPI_CloseTransfer+0x13c>)
 8009cb0:	400b      	ands	r3, r1
 8009cb2:	6113      	str	r3, [r2, #16]
                              SPI_IT_FRE | SPI_IT_MODF));

  /* Disable Tx DMA Request */
  CLEAR_BIT(hspi->Instance->CFG1, SPI_CFG1_TXDMAEN | SPI_CFG1_RXDMAEN);
 8009cb4:	687b      	ldr	r3, [r7, #4]
 8009cb6:	681b      	ldr	r3, [r3, #0]
 8009cb8:	689a      	ldr	r2, [r3, #8]
 8009cba:	687b      	ldr	r3, [r7, #4]
 8009cbc:	681b      	ldr	r3, [r3, #0]
 8009cbe:	f422 4240 	bic.w	r2, r2, #49152	@ 0xc000
 8009cc2:	609a      	str	r2, [r3, #8]

  /* Report UnderRun error for non RX Only communication */
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8009cc4:	687b      	ldr	r3, [r7, #4]
 8009cc6:	f893 3081 	ldrb.w	r3, [r3, #129]	@ 0x81
 8009cca:	b2db      	uxtb	r3, r3
 8009ccc:	2b04      	cmp	r3, #4
 8009cce:	d014      	beq.n	8009cfa <SPI_CloseTransfer+0x96>
  {
    if ((itflag & SPI_FLAG_UDR) != 0UL)
 8009cd0:	68fb      	ldr	r3, [r7, #12]
 8009cd2:	f003 0320 	and.w	r3, r3, #32
 8009cd6:	2b00      	cmp	r3, #0
 8009cd8:	d00f      	beq.n	8009cfa <SPI_CloseTransfer+0x96>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_UDR);
 8009cda:	687b      	ldr	r3, [r7, #4]
 8009cdc:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8009ce0:	f043 0280 	orr.w	r2, r3, #128	@ 0x80
 8009ce4:	687b      	ldr	r3, [r7, #4]
 8009ce6:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
      __HAL_SPI_CLEAR_UDRFLAG(hspi);
 8009cea:	687b      	ldr	r3, [r7, #4]
 8009cec:	681b      	ldr	r3, [r3, #0]
 8009cee:	699a      	ldr	r2, [r3, #24]
 8009cf0:	687b      	ldr	r3, [r7, #4]
 8009cf2:	681b      	ldr	r3, [r3, #0]
 8009cf4:	f042 0220 	orr.w	r2, r2, #32
 8009cf8:	619a      	str	r2, [r3, #24]
    }
  }

  /* Report OverRun error for non TX Only communication */
  if (hspi->State != HAL_SPI_STATE_BUSY_TX)
 8009cfa:	687b      	ldr	r3, [r7, #4]
 8009cfc:	f893 3081 	ldrb.w	r3, [r3, #129]	@ 0x81
 8009d00:	b2db      	uxtb	r3, r3
 8009d02:	2b03      	cmp	r3, #3
 8009d04:	d014      	beq.n	8009d30 <SPI_CloseTransfer+0xcc>
  {
    if ((itflag & SPI_FLAG_OVR) != 0UL)
 8009d06:	68fb      	ldr	r3, [r7, #12]
 8009d08:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8009d0c:	2b00      	cmp	r3, #0
 8009d0e:	d00f      	beq.n	8009d30 <SPI_CloseTransfer+0xcc>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 8009d10:	687b      	ldr	r3, [r7, #4]
 8009d12:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8009d16:	f043 0204 	orr.w	r2, r3, #4
 8009d1a:	687b      	ldr	r3, [r7, #4]
 8009d1c:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
      __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8009d20:	687b      	ldr	r3, [r7, #4]
 8009d22:	681b      	ldr	r3, [r3, #0]
 8009d24:	699a      	ldr	r2, [r3, #24]
 8009d26:	687b      	ldr	r3, [r7, #4]
 8009d28:	681b      	ldr	r3, [r3, #0]
 8009d2a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8009d2e:	619a      	str	r2, [r3, #24]
    }
#endif /* USE_SPI_CRC */
  }

  /* SPI Mode Fault error interrupt occurred -------------------------------*/
  if ((itflag & SPI_FLAG_MODF) != 0UL)
 8009d30:	68fb      	ldr	r3, [r7, #12]
 8009d32:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 8009d36:	2b00      	cmp	r3, #0
 8009d38:	d00f      	beq.n	8009d5a <SPI_CloseTransfer+0xf6>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 8009d3a:	687b      	ldr	r3, [r7, #4]
 8009d3c:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8009d40:	f043 0201 	orr.w	r2, r3, #1
 8009d44:	687b      	ldr	r3, [r7, #4]
 8009d46:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
    __HAL_SPI_CLEAR_MODFFLAG(hspi);
 8009d4a:	687b      	ldr	r3, [r7, #4]
 8009d4c:	681b      	ldr	r3, [r3, #0]
 8009d4e:	699a      	ldr	r2, [r3, #24]
 8009d50:	687b      	ldr	r3, [r7, #4]
 8009d52:	681b      	ldr	r3, [r3, #0]
 8009d54:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8009d58:	619a      	str	r2, [r3, #24]
  }

  /* SPI Frame error interrupt occurred ------------------------------------*/
  if ((itflag & SPI_FLAG_FRE) != 0UL)
 8009d5a:	68fb      	ldr	r3, [r7, #12]
 8009d5c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8009d60:	2b00      	cmp	r3, #0
 8009d62:	d00f      	beq.n	8009d84 <SPI_CloseTransfer+0x120>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 8009d64:	687b      	ldr	r3, [r7, #4]
 8009d66:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 8009d6a:	f043 0208 	orr.w	r2, r3, #8
 8009d6e:	687b      	ldr	r3, [r7, #4]
 8009d70:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
    __HAL_SPI_CLEAR_FREFLAG(hspi);
 8009d74:	687b      	ldr	r3, [r7, #4]
 8009d76:	681b      	ldr	r3, [r3, #0]
 8009d78:	699a      	ldr	r2, [r3, #24]
 8009d7a:	687b      	ldr	r3, [r7, #4]
 8009d7c:	681b      	ldr	r3, [r3, #0]
 8009d7e:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8009d82:	619a      	str	r2, [r3, #24]
  }

  hspi->TxXferCount = (uint16_t)0UL;
 8009d84:	687b      	ldr	r3, [r7, #4]
 8009d86:	2200      	movs	r2, #0
 8009d88:	f8a3 2062 	strh.w	r2, [r3, #98]	@ 0x62
  hspi->RxXferCount = (uint16_t)0UL;
 8009d8c:	687b      	ldr	r3, [r7, #4]
 8009d8e:	2200      	movs	r2, #0
 8009d90:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
}
 8009d94:	bf00      	nop
 8009d96:	3714      	adds	r7, #20
 8009d98:	46bd      	mov	sp, r7
 8009d9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d9e:	4770      	bx	lr
 8009da0:	fffffc90 	.word	0xfffffc90

08009da4 <SPI_WaitOnFlagUntilTimeout>:
  * @param Tickstart: Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitOnFlagUntilTimeout(const SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus Status,
                                                    uint32_t Timeout, uint32_t Tickstart)
{
 8009da4:	b580      	push	{r7, lr}
 8009da6:	b084      	sub	sp, #16
 8009da8:	af00      	add	r7, sp, #0
 8009daa:	60f8      	str	r0, [r7, #12]
 8009dac:	60b9      	str	r1, [r7, #8]
 8009dae:	603b      	str	r3, [r7, #0]
 8009db0:	4613      	mov	r3, r2
 8009db2:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) == Status)
 8009db4:	e010      	b.n	8009dd8 <SPI_WaitOnFlagUntilTimeout+0x34>
  {
    /* Check for the Timeout */
    if ((((HAL_GetTick() - Tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8009db6:	f7f9 f9e3 	bl	8003180 <HAL_GetTick>
 8009dba:	4602      	mov	r2, r0
 8009dbc:	69bb      	ldr	r3, [r7, #24]
 8009dbe:	1ad3      	subs	r3, r2, r3
 8009dc0:	683a      	ldr	r2, [r7, #0]
 8009dc2:	429a      	cmp	r2, r3
 8009dc4:	d803      	bhi.n	8009dce <SPI_WaitOnFlagUntilTimeout+0x2a>
 8009dc6:	683b      	ldr	r3, [r7, #0]
 8009dc8:	f1b3 3fff 	cmp.w	r3, #4294967295
 8009dcc:	d102      	bne.n	8009dd4 <SPI_WaitOnFlagUntilTimeout+0x30>
 8009dce:	683b      	ldr	r3, [r7, #0]
 8009dd0:	2b00      	cmp	r3, #0
 8009dd2:	d101      	bne.n	8009dd8 <SPI_WaitOnFlagUntilTimeout+0x34>
    {
      return HAL_TIMEOUT;
 8009dd4:	2303      	movs	r3, #3
 8009dd6:	e00f      	b.n	8009df8 <SPI_WaitOnFlagUntilTimeout+0x54>
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) == Status)
 8009dd8:	68fb      	ldr	r3, [r7, #12]
 8009dda:	681b      	ldr	r3, [r3, #0]
 8009ddc:	695a      	ldr	r2, [r3, #20]
 8009dde:	68bb      	ldr	r3, [r7, #8]
 8009de0:	4013      	ands	r3, r2
 8009de2:	68ba      	ldr	r2, [r7, #8]
 8009de4:	429a      	cmp	r2, r3
 8009de6:	bf0c      	ite	eq
 8009de8:	2301      	moveq	r3, #1
 8009dea:	2300      	movne	r3, #0
 8009dec:	b2db      	uxtb	r3, r3
 8009dee:	461a      	mov	r2, r3
 8009df0:	79fb      	ldrb	r3, [r7, #7]
 8009df2:	429a      	cmp	r2, r3
 8009df4:	d0df      	beq.n	8009db6 <SPI_WaitOnFlagUntilTimeout+0x12>
    }
  }
  return HAL_OK;
 8009df6:	2300      	movs	r3, #0
}
 8009df8:	4618      	mov	r0, r3
 8009dfa:	3710      	adds	r7, #16
 8009dfc:	46bd      	mov	sp, r7
 8009dfe:	bd80      	pop	{r7, pc}

08009e00 <SPI_GetPacketSize>:
  * @param  hspi: pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval Packet size occupied in the fifo
  */
static uint32_t SPI_GetPacketSize(const SPI_HandleTypeDef *hspi)
{
 8009e00:	b480      	push	{r7}
 8009e02:	b085      	sub	sp, #20
 8009e04:	af00      	add	r7, sp, #0
 8009e06:	6078      	str	r0, [r7, #4]
  uint32_t fifo_threashold = (hspi->Init.FifoThreshold >> SPI_CFG1_FTHLV_Pos) + 1UL;
 8009e08:	687b      	ldr	r3, [r7, #4]
 8009e0a:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8009e0c:	095b      	lsrs	r3, r3, #5
 8009e0e:	3301      	adds	r3, #1
 8009e10:	60fb      	str	r3, [r7, #12]
  uint32_t data_size       = (hspi->Init.DataSize      >> SPI_CFG1_DSIZE_Pos) + 1UL;
 8009e12:	687b      	ldr	r3, [r7, #4]
 8009e14:	68db      	ldr	r3, [r3, #12]
 8009e16:	3301      	adds	r3, #1
 8009e18:	60bb      	str	r3, [r7, #8]

  /* Convert data size to Byte */
  data_size = (data_size + 7UL) / 8UL;
 8009e1a:	68bb      	ldr	r3, [r7, #8]
 8009e1c:	3307      	adds	r3, #7
 8009e1e:	08db      	lsrs	r3, r3, #3
 8009e20:	60bb      	str	r3, [r7, #8]

  return data_size * fifo_threashold;
 8009e22:	68bb      	ldr	r3, [r7, #8]
 8009e24:	68fa      	ldr	r2, [r7, #12]
 8009e26:	fb02 f303 	mul.w	r3, r2, r3
}
 8009e2a:	4618      	mov	r0, r3
 8009e2c:	3714      	adds	r7, #20
 8009e2e:	46bd      	mov	sp, r7
 8009e30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e34:	4770      	bx	lr

08009e36 <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 8009e36:	b580      	push	{r7, lr}
 8009e38:	b082      	sub	sp, #8
 8009e3a:	af00      	add	r7, sp, #0
 8009e3c:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8009e3e:	687b      	ldr	r3, [r7, #4]
 8009e40:	2b00      	cmp	r3, #0
 8009e42:	d101      	bne.n	8009e48 <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 8009e44:	2301      	movs	r3, #1
 8009e46:	e049      	b.n	8009edc <HAL_TIM_Base_Init+0xa6>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8009e48:	687b      	ldr	r3, [r7, #4]
 8009e4a:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8009e4e:	b2db      	uxtb	r3, r3
 8009e50:	2b00      	cmp	r3, #0
 8009e52:	d106      	bne.n	8009e62 <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8009e54:	687b      	ldr	r3, [r7, #4]
 8009e56:	2200      	movs	r2, #0
 8009e58:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 8009e5c:	6878      	ldr	r0, [r7, #4]
 8009e5e:	f7f7 fe9f 	bl	8001ba0 <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8009e62:	687b      	ldr	r3, [r7, #4]
 8009e64:	2202      	movs	r2, #2
 8009e66:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8009e6a:	687b      	ldr	r3, [r7, #4]
 8009e6c:	681a      	ldr	r2, [r3, #0]
 8009e6e:	687b      	ldr	r3, [r7, #4]
 8009e70:	3304      	adds	r3, #4
 8009e72:	4619      	mov	r1, r3
 8009e74:	4610      	mov	r0, r2
 8009e76:	f000 fac7 	bl	800a408 <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8009e7a:	687b      	ldr	r3, [r7, #4]
 8009e7c:	2201      	movs	r2, #1
 8009e7e:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8009e82:	687b      	ldr	r3, [r7, #4]
 8009e84:	2201      	movs	r2, #1
 8009e86:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8009e8a:	687b      	ldr	r3, [r7, #4]
 8009e8c:	2201      	movs	r2, #1
 8009e8e:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8009e92:	687b      	ldr	r3, [r7, #4]
 8009e94:	2201      	movs	r2, #1
 8009e96:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8009e9a:	687b      	ldr	r3, [r7, #4]
 8009e9c:	2201      	movs	r2, #1
 8009e9e:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8009ea2:	687b      	ldr	r3, [r7, #4]
 8009ea4:	2201      	movs	r2, #1
 8009ea6:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8009eaa:	687b      	ldr	r3, [r7, #4]
 8009eac:	2201      	movs	r2, #1
 8009eae:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8009eb2:	687b      	ldr	r3, [r7, #4]
 8009eb4:	2201      	movs	r2, #1
 8009eb6:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8009eba:	687b      	ldr	r3, [r7, #4]
 8009ebc:	2201      	movs	r2, #1
 8009ebe:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8009ec2:	687b      	ldr	r3, [r7, #4]
 8009ec4:	2201      	movs	r2, #1
 8009ec6:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8009eca:	687b      	ldr	r3, [r7, #4]
 8009ecc:	2201      	movs	r2, #1
 8009ece:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8009ed2:	687b      	ldr	r3, [r7, #4]
 8009ed4:	2201      	movs	r2, #1
 8009ed6:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  return HAL_OK;
 8009eda:	2300      	movs	r3, #0
}
 8009edc:	4618      	mov	r0, r3
 8009ede:	3708      	adds	r7, #8
 8009ee0:	46bd      	mov	sp, r7
 8009ee2:	bd80      	pop	{r7, pc}

08009ee4 <HAL_TIM_PWM_Init>:
  *         Ex: call @ref HAL_TIM_PWM_DeInit() before HAL_TIM_PWM_Init()
  * @param  htim TIM PWM handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
{
 8009ee4:	b580      	push	{r7, lr}
 8009ee6:	b082      	sub	sp, #8
 8009ee8:	af00      	add	r7, sp, #0
 8009eea:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8009eec:	687b      	ldr	r3, [r7, #4]
 8009eee:	2b00      	cmp	r3, #0
 8009ef0:	d101      	bne.n	8009ef6 <HAL_TIM_PWM_Init+0x12>
  {
    return HAL_ERROR;
 8009ef2:	2301      	movs	r3, #1
 8009ef4:	e049      	b.n	8009f8a <HAL_TIM_PWM_Init+0xa6>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8009ef6:	687b      	ldr	r3, [r7, #4]
 8009ef8:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8009efc:	b2db      	uxtb	r3, r3
 8009efe:	2b00      	cmp	r3, #0
 8009f00:	d106      	bne.n	8009f10 <HAL_TIM_PWM_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8009f02:	687b      	ldr	r3, [r7, #4]
 8009f04:	2200      	movs	r2, #0
 8009f06:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->PWM_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_PWM_MspInit(htim);
 8009f0a:	6878      	ldr	r0, [r7, #4]
 8009f0c:	f000 f841 	bl	8009f92 <HAL_TIM_PWM_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8009f10:	687b      	ldr	r3, [r7, #4]
 8009f12:	2202      	movs	r2, #2
 8009f14:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Init the base time for the PWM */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8009f18:	687b      	ldr	r3, [r7, #4]
 8009f1a:	681a      	ldr	r2, [r3, #0]
 8009f1c:	687b      	ldr	r3, [r7, #4]
 8009f1e:	3304      	adds	r3, #4
 8009f20:	4619      	mov	r1, r3
 8009f22:	4610      	mov	r0, r2
 8009f24:	f000 fa70 	bl	800a408 <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8009f28:	687b      	ldr	r3, [r7, #4]
 8009f2a:	2201      	movs	r2, #1
 8009f2c:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8009f30:	687b      	ldr	r3, [r7, #4]
 8009f32:	2201      	movs	r2, #1
 8009f34:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8009f38:	687b      	ldr	r3, [r7, #4]
 8009f3a:	2201      	movs	r2, #1
 8009f3c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8009f40:	687b      	ldr	r3, [r7, #4]
 8009f42:	2201      	movs	r2, #1
 8009f44:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8009f48:	687b      	ldr	r3, [r7, #4]
 8009f4a:	2201      	movs	r2, #1
 8009f4c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8009f50:	687b      	ldr	r3, [r7, #4]
 8009f52:	2201      	movs	r2, #1
 8009f54:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8009f58:	687b      	ldr	r3, [r7, #4]
 8009f5a:	2201      	movs	r2, #1
 8009f5c:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8009f60:	687b      	ldr	r3, [r7, #4]
 8009f62:	2201      	movs	r2, #1
 8009f64:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8009f68:	687b      	ldr	r3, [r7, #4]
 8009f6a:	2201      	movs	r2, #1
 8009f6c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8009f70:	687b      	ldr	r3, [r7, #4]
 8009f72:	2201      	movs	r2, #1
 8009f74:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8009f78:	687b      	ldr	r3, [r7, #4]
 8009f7a:	2201      	movs	r2, #1
 8009f7c:	f883 2047 	strb.w	r2, [r3, #71]	@ 0x47

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8009f80:	687b      	ldr	r3, [r7, #4]
 8009f82:	2201      	movs	r2, #1
 8009f84:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  return HAL_OK;
 8009f88:	2300      	movs	r3, #0
}
 8009f8a:	4618      	mov	r0, r3
 8009f8c:	3708      	adds	r7, #8
 8009f8e:	46bd      	mov	sp, r7
 8009f90:	bd80      	pop	{r7, pc}

08009f92 <HAL_TIM_PWM_MspInit>:
  * @brief  Initializes the TIM PWM MSP.
  * @param  htim TIM PWM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef *htim)
{
 8009f92:	b480      	push	{r7}
 8009f94:	b083      	sub	sp, #12
 8009f96:	af00      	add	r7, sp, #0
 8009f98:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_MspInit could be implemented in the user file
   */
}
 8009f9a:	bf00      	nop
 8009f9c:	370c      	adds	r7, #12
 8009f9e:	46bd      	mov	sp, r7
 8009fa0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009fa4:	4770      	bx	lr
	...

08009fa8 <HAL_TIM_PWM_Start>:
  *            @arg TIM_CHANNEL_5: TIM Channel 5 selected
  *            @arg TIM_CHANNEL_6: TIM Channel 6 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 8009fa8:	b580      	push	{r7, lr}
 8009faa:	b084      	sub	sp, #16
 8009fac:	af00      	add	r7, sp, #0
 8009fae:	6078      	str	r0, [r7, #4]
 8009fb0:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));

  /* Check the TIM channel state */
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 8009fb2:	683b      	ldr	r3, [r7, #0]
 8009fb4:	2b00      	cmp	r3, #0
 8009fb6:	d109      	bne.n	8009fcc <HAL_TIM_PWM_Start+0x24>
 8009fb8:	687b      	ldr	r3, [r7, #4]
 8009fba:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8009fbe:	b2db      	uxtb	r3, r3
 8009fc0:	2b01      	cmp	r3, #1
 8009fc2:	bf14      	ite	ne
 8009fc4:	2301      	movne	r3, #1
 8009fc6:	2300      	moveq	r3, #0
 8009fc8:	b2db      	uxtb	r3, r3
 8009fca:	e03c      	b.n	800a046 <HAL_TIM_PWM_Start+0x9e>
 8009fcc:	683b      	ldr	r3, [r7, #0]
 8009fce:	2b04      	cmp	r3, #4
 8009fd0:	d109      	bne.n	8009fe6 <HAL_TIM_PWM_Start+0x3e>
 8009fd2:	687b      	ldr	r3, [r7, #4]
 8009fd4:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8009fd8:	b2db      	uxtb	r3, r3
 8009fda:	2b01      	cmp	r3, #1
 8009fdc:	bf14      	ite	ne
 8009fde:	2301      	movne	r3, #1
 8009fe0:	2300      	moveq	r3, #0
 8009fe2:	b2db      	uxtb	r3, r3
 8009fe4:	e02f      	b.n	800a046 <HAL_TIM_PWM_Start+0x9e>
 8009fe6:	683b      	ldr	r3, [r7, #0]
 8009fe8:	2b08      	cmp	r3, #8
 8009fea:	d109      	bne.n	800a000 <HAL_TIM_PWM_Start+0x58>
 8009fec:	687b      	ldr	r3, [r7, #4]
 8009fee:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8009ff2:	b2db      	uxtb	r3, r3
 8009ff4:	2b01      	cmp	r3, #1
 8009ff6:	bf14      	ite	ne
 8009ff8:	2301      	movne	r3, #1
 8009ffa:	2300      	moveq	r3, #0
 8009ffc:	b2db      	uxtb	r3, r3
 8009ffe:	e022      	b.n	800a046 <HAL_TIM_PWM_Start+0x9e>
 800a000:	683b      	ldr	r3, [r7, #0]
 800a002:	2b0c      	cmp	r3, #12
 800a004:	d109      	bne.n	800a01a <HAL_TIM_PWM_Start+0x72>
 800a006:	687b      	ldr	r3, [r7, #4]
 800a008:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800a00c:	b2db      	uxtb	r3, r3
 800a00e:	2b01      	cmp	r3, #1
 800a010:	bf14      	ite	ne
 800a012:	2301      	movne	r3, #1
 800a014:	2300      	moveq	r3, #0
 800a016:	b2db      	uxtb	r3, r3
 800a018:	e015      	b.n	800a046 <HAL_TIM_PWM_Start+0x9e>
 800a01a:	683b      	ldr	r3, [r7, #0]
 800a01c:	2b10      	cmp	r3, #16
 800a01e:	d109      	bne.n	800a034 <HAL_TIM_PWM_Start+0x8c>
 800a020:	687b      	ldr	r3, [r7, #4]
 800a022:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 800a026:	b2db      	uxtb	r3, r3
 800a028:	2b01      	cmp	r3, #1
 800a02a:	bf14      	ite	ne
 800a02c:	2301      	movne	r3, #1
 800a02e:	2300      	moveq	r3, #0
 800a030:	b2db      	uxtb	r3, r3
 800a032:	e008      	b.n	800a046 <HAL_TIM_PWM_Start+0x9e>
 800a034:	687b      	ldr	r3, [r7, #4]
 800a036:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 800a03a:	b2db      	uxtb	r3, r3
 800a03c:	2b01      	cmp	r3, #1
 800a03e:	bf14      	ite	ne
 800a040:	2301      	movne	r3, #1
 800a042:	2300      	moveq	r3, #0
 800a044:	b2db      	uxtb	r3, r3
 800a046:	2b00      	cmp	r3, #0
 800a048:	d001      	beq.n	800a04e <HAL_TIM_PWM_Start+0xa6>
  {
    return HAL_ERROR;
 800a04a:	2301      	movs	r3, #1
 800a04c:	e0ab      	b.n	800a1a6 <HAL_TIM_PWM_Start+0x1fe>
  }

  /* Set the TIM channel state */
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 800a04e:	683b      	ldr	r3, [r7, #0]
 800a050:	2b00      	cmp	r3, #0
 800a052:	d104      	bne.n	800a05e <HAL_TIM_PWM_Start+0xb6>
 800a054:	687b      	ldr	r3, [r7, #4]
 800a056:	2202      	movs	r2, #2
 800a058:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800a05c:	e023      	b.n	800a0a6 <HAL_TIM_PWM_Start+0xfe>
 800a05e:	683b      	ldr	r3, [r7, #0]
 800a060:	2b04      	cmp	r3, #4
 800a062:	d104      	bne.n	800a06e <HAL_TIM_PWM_Start+0xc6>
 800a064:	687b      	ldr	r3, [r7, #4]
 800a066:	2202      	movs	r2, #2
 800a068:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800a06c:	e01b      	b.n	800a0a6 <HAL_TIM_PWM_Start+0xfe>
 800a06e:	683b      	ldr	r3, [r7, #0]
 800a070:	2b08      	cmp	r3, #8
 800a072:	d104      	bne.n	800a07e <HAL_TIM_PWM_Start+0xd6>
 800a074:	687b      	ldr	r3, [r7, #4]
 800a076:	2202      	movs	r2, #2
 800a078:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800a07c:	e013      	b.n	800a0a6 <HAL_TIM_PWM_Start+0xfe>
 800a07e:	683b      	ldr	r3, [r7, #0]
 800a080:	2b0c      	cmp	r3, #12
 800a082:	d104      	bne.n	800a08e <HAL_TIM_PWM_Start+0xe6>
 800a084:	687b      	ldr	r3, [r7, #4]
 800a086:	2202      	movs	r2, #2
 800a088:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800a08c:	e00b      	b.n	800a0a6 <HAL_TIM_PWM_Start+0xfe>
 800a08e:	683b      	ldr	r3, [r7, #0]
 800a090:	2b10      	cmp	r3, #16
 800a092:	d104      	bne.n	800a09e <HAL_TIM_PWM_Start+0xf6>
 800a094:	687b      	ldr	r3, [r7, #4]
 800a096:	2202      	movs	r2, #2
 800a098:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 800a09c:	e003      	b.n	800a0a6 <HAL_TIM_PWM_Start+0xfe>
 800a09e:	687b      	ldr	r3, [r7, #4]
 800a0a0:	2202      	movs	r2, #2
 800a0a2:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43

  /* Enable the Capture compare channel */
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 800a0a6:	687b      	ldr	r3, [r7, #4]
 800a0a8:	681b      	ldr	r3, [r3, #0]
 800a0aa:	2201      	movs	r2, #1
 800a0ac:	6839      	ldr	r1, [r7, #0]
 800a0ae:	4618      	mov	r0, r3
 800a0b0:	f000 fd32 	bl	800ab18 <TIM_CCxChannelCmd>

  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 800a0b4:	687b      	ldr	r3, [r7, #4]
 800a0b6:	681b      	ldr	r3, [r3, #0]
 800a0b8:	4a3d      	ldr	r2, [pc, #244]	@ (800a1b0 <HAL_TIM_PWM_Start+0x208>)
 800a0ba:	4293      	cmp	r3, r2
 800a0bc:	d013      	beq.n	800a0e6 <HAL_TIM_PWM_Start+0x13e>
 800a0be:	687b      	ldr	r3, [r7, #4]
 800a0c0:	681b      	ldr	r3, [r3, #0]
 800a0c2:	4a3c      	ldr	r2, [pc, #240]	@ (800a1b4 <HAL_TIM_PWM_Start+0x20c>)
 800a0c4:	4293      	cmp	r3, r2
 800a0c6:	d00e      	beq.n	800a0e6 <HAL_TIM_PWM_Start+0x13e>
 800a0c8:	687b      	ldr	r3, [r7, #4]
 800a0ca:	681b      	ldr	r3, [r3, #0]
 800a0cc:	4a3a      	ldr	r2, [pc, #232]	@ (800a1b8 <HAL_TIM_PWM_Start+0x210>)
 800a0ce:	4293      	cmp	r3, r2
 800a0d0:	d009      	beq.n	800a0e6 <HAL_TIM_PWM_Start+0x13e>
 800a0d2:	687b      	ldr	r3, [r7, #4]
 800a0d4:	681b      	ldr	r3, [r3, #0]
 800a0d6:	4a39      	ldr	r2, [pc, #228]	@ (800a1bc <HAL_TIM_PWM_Start+0x214>)
 800a0d8:	4293      	cmp	r3, r2
 800a0da:	d004      	beq.n	800a0e6 <HAL_TIM_PWM_Start+0x13e>
 800a0dc:	687b      	ldr	r3, [r7, #4]
 800a0de:	681b      	ldr	r3, [r3, #0]
 800a0e0:	4a37      	ldr	r2, [pc, #220]	@ (800a1c0 <HAL_TIM_PWM_Start+0x218>)
 800a0e2:	4293      	cmp	r3, r2
 800a0e4:	d101      	bne.n	800a0ea <HAL_TIM_PWM_Start+0x142>
 800a0e6:	2301      	movs	r3, #1
 800a0e8:	e000      	b.n	800a0ec <HAL_TIM_PWM_Start+0x144>
 800a0ea:	2300      	movs	r3, #0
 800a0ec:	2b00      	cmp	r3, #0
 800a0ee:	d007      	beq.n	800a100 <HAL_TIM_PWM_Start+0x158>
  {
    /* Enable the main output */
    __HAL_TIM_MOE_ENABLE(htim);
 800a0f0:	687b      	ldr	r3, [r7, #4]
 800a0f2:	681b      	ldr	r3, [r3, #0]
 800a0f4:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800a0f6:	687b      	ldr	r3, [r7, #4]
 800a0f8:	681b      	ldr	r3, [r3, #0]
 800a0fa:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 800a0fe:	645a      	str	r2, [r3, #68]	@ 0x44
  }

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800a100:	687b      	ldr	r3, [r7, #4]
 800a102:	681b      	ldr	r3, [r3, #0]
 800a104:	4a2a      	ldr	r2, [pc, #168]	@ (800a1b0 <HAL_TIM_PWM_Start+0x208>)
 800a106:	4293      	cmp	r3, r2
 800a108:	d02c      	beq.n	800a164 <HAL_TIM_PWM_Start+0x1bc>
 800a10a:	687b      	ldr	r3, [r7, #4]
 800a10c:	681b      	ldr	r3, [r3, #0]
 800a10e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800a112:	d027      	beq.n	800a164 <HAL_TIM_PWM_Start+0x1bc>
 800a114:	687b      	ldr	r3, [r7, #4]
 800a116:	681b      	ldr	r3, [r3, #0]
 800a118:	4a2a      	ldr	r2, [pc, #168]	@ (800a1c4 <HAL_TIM_PWM_Start+0x21c>)
 800a11a:	4293      	cmp	r3, r2
 800a11c:	d022      	beq.n	800a164 <HAL_TIM_PWM_Start+0x1bc>
 800a11e:	687b      	ldr	r3, [r7, #4]
 800a120:	681b      	ldr	r3, [r3, #0]
 800a122:	4a29      	ldr	r2, [pc, #164]	@ (800a1c8 <HAL_TIM_PWM_Start+0x220>)
 800a124:	4293      	cmp	r3, r2
 800a126:	d01d      	beq.n	800a164 <HAL_TIM_PWM_Start+0x1bc>
 800a128:	687b      	ldr	r3, [r7, #4]
 800a12a:	681b      	ldr	r3, [r3, #0]
 800a12c:	4a27      	ldr	r2, [pc, #156]	@ (800a1cc <HAL_TIM_PWM_Start+0x224>)
 800a12e:	4293      	cmp	r3, r2
 800a130:	d018      	beq.n	800a164 <HAL_TIM_PWM_Start+0x1bc>
 800a132:	687b      	ldr	r3, [r7, #4]
 800a134:	681b      	ldr	r3, [r3, #0]
 800a136:	4a1f      	ldr	r2, [pc, #124]	@ (800a1b4 <HAL_TIM_PWM_Start+0x20c>)
 800a138:	4293      	cmp	r3, r2
 800a13a:	d013      	beq.n	800a164 <HAL_TIM_PWM_Start+0x1bc>
 800a13c:	687b      	ldr	r3, [r7, #4]
 800a13e:	681b      	ldr	r3, [r3, #0]
 800a140:	4a23      	ldr	r2, [pc, #140]	@ (800a1d0 <HAL_TIM_PWM_Start+0x228>)
 800a142:	4293      	cmp	r3, r2
 800a144:	d00e      	beq.n	800a164 <HAL_TIM_PWM_Start+0x1bc>
 800a146:	687b      	ldr	r3, [r7, #4]
 800a148:	681b      	ldr	r3, [r3, #0]
 800a14a:	4a1b      	ldr	r2, [pc, #108]	@ (800a1b8 <HAL_TIM_PWM_Start+0x210>)
 800a14c:	4293      	cmp	r3, r2
 800a14e:	d009      	beq.n	800a164 <HAL_TIM_PWM_Start+0x1bc>
 800a150:	687b      	ldr	r3, [r7, #4]
 800a152:	681b      	ldr	r3, [r3, #0]
 800a154:	4a1f      	ldr	r2, [pc, #124]	@ (800a1d4 <HAL_TIM_PWM_Start+0x22c>)
 800a156:	4293      	cmp	r3, r2
 800a158:	d004      	beq.n	800a164 <HAL_TIM_PWM_Start+0x1bc>
 800a15a:	687b      	ldr	r3, [r7, #4]
 800a15c:	681b      	ldr	r3, [r3, #0]
 800a15e:	4a1e      	ldr	r2, [pc, #120]	@ (800a1d8 <HAL_TIM_PWM_Start+0x230>)
 800a160:	4293      	cmp	r3, r2
 800a162:	d115      	bne.n	800a190 <HAL_TIM_PWM_Start+0x1e8>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800a164:	687b      	ldr	r3, [r7, #4]
 800a166:	681b      	ldr	r3, [r3, #0]
 800a168:	689a      	ldr	r2, [r3, #8]
 800a16a:	4b1c      	ldr	r3, [pc, #112]	@ (800a1dc <HAL_TIM_PWM_Start+0x234>)
 800a16c:	4013      	ands	r3, r2
 800a16e:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800a170:	68fb      	ldr	r3, [r7, #12]
 800a172:	2b06      	cmp	r3, #6
 800a174:	d015      	beq.n	800a1a2 <HAL_TIM_PWM_Start+0x1fa>
 800a176:	68fb      	ldr	r3, [r7, #12]
 800a178:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800a17c:	d011      	beq.n	800a1a2 <HAL_TIM_PWM_Start+0x1fa>
    {
      __HAL_TIM_ENABLE(htim);
 800a17e:	687b      	ldr	r3, [r7, #4]
 800a180:	681b      	ldr	r3, [r3, #0]
 800a182:	681a      	ldr	r2, [r3, #0]
 800a184:	687b      	ldr	r3, [r7, #4]
 800a186:	681b      	ldr	r3, [r3, #0]
 800a188:	f042 0201 	orr.w	r2, r2, #1
 800a18c:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800a18e:	e008      	b.n	800a1a2 <HAL_TIM_PWM_Start+0x1fa>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 800a190:	687b      	ldr	r3, [r7, #4]
 800a192:	681b      	ldr	r3, [r3, #0]
 800a194:	681a      	ldr	r2, [r3, #0]
 800a196:	687b      	ldr	r3, [r7, #4]
 800a198:	681b      	ldr	r3, [r3, #0]
 800a19a:	f042 0201 	orr.w	r2, r2, #1
 800a19e:	601a      	str	r2, [r3, #0]
 800a1a0:	e000      	b.n	800a1a4 <HAL_TIM_PWM_Start+0x1fc>
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800a1a2:	bf00      	nop
  }

  /* Return function status */
  return HAL_OK;
 800a1a4:	2300      	movs	r3, #0
}
 800a1a6:	4618      	mov	r0, r3
 800a1a8:	3710      	adds	r7, #16
 800a1aa:	46bd      	mov	sp, r7
 800a1ac:	bd80      	pop	{r7, pc}
 800a1ae:	bf00      	nop
 800a1b0:	40010000 	.word	0x40010000
 800a1b4:	40010400 	.word	0x40010400
 800a1b8:	40014000 	.word	0x40014000
 800a1bc:	40014400 	.word	0x40014400
 800a1c0:	40014800 	.word	0x40014800
 800a1c4:	40000400 	.word	0x40000400
 800a1c8:	40000800 	.word	0x40000800
 800a1cc:	40000c00 	.word	0x40000c00
 800a1d0:	40001800 	.word	0x40001800
 800a1d4:	4000e000 	.word	0x4000e000
 800a1d8:	4000e400 	.word	0x4000e400
 800a1dc:	00010007 	.word	0x00010007

0800a1e0 <HAL_TIM_PWM_ConfigChannel>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim,
                                            const TIM_OC_InitTypeDef *sConfig,
                                            uint32_t Channel)
{
 800a1e0:	b580      	push	{r7, lr}
 800a1e2:	b086      	sub	sp, #24
 800a1e4:	af00      	add	r7, sp, #0
 800a1e6:	60f8      	str	r0, [r7, #12]
 800a1e8:	60b9      	str	r1, [r7, #8]
 800a1ea:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 800a1ec:	2300      	movs	r3, #0
 800a1ee:	75fb      	strb	r3, [r7, #23]
  assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
  assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
  assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));

  /* Process Locked */
  __HAL_LOCK(htim);
 800a1f0:	68fb      	ldr	r3, [r7, #12]
 800a1f2:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800a1f6:	2b01      	cmp	r3, #1
 800a1f8:	d101      	bne.n	800a1fe <HAL_TIM_PWM_ConfigChannel+0x1e>
 800a1fa:	2302      	movs	r3, #2
 800a1fc:	e0ff      	b.n	800a3fe <HAL_TIM_PWM_ConfigChannel+0x21e>
 800a1fe:	68fb      	ldr	r3, [r7, #12]
 800a200:	2201      	movs	r2, #1
 800a202:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  switch (Channel)
 800a206:	687b      	ldr	r3, [r7, #4]
 800a208:	2b14      	cmp	r3, #20
 800a20a:	f200 80f0 	bhi.w	800a3ee <HAL_TIM_PWM_ConfigChannel+0x20e>
 800a20e:	a201      	add	r2, pc, #4	@ (adr r2, 800a214 <HAL_TIM_PWM_ConfigChannel+0x34>)
 800a210:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a214:	0800a269 	.word	0x0800a269
 800a218:	0800a3ef 	.word	0x0800a3ef
 800a21c:	0800a3ef 	.word	0x0800a3ef
 800a220:	0800a3ef 	.word	0x0800a3ef
 800a224:	0800a2a9 	.word	0x0800a2a9
 800a228:	0800a3ef 	.word	0x0800a3ef
 800a22c:	0800a3ef 	.word	0x0800a3ef
 800a230:	0800a3ef 	.word	0x0800a3ef
 800a234:	0800a2eb 	.word	0x0800a2eb
 800a238:	0800a3ef 	.word	0x0800a3ef
 800a23c:	0800a3ef 	.word	0x0800a3ef
 800a240:	0800a3ef 	.word	0x0800a3ef
 800a244:	0800a32b 	.word	0x0800a32b
 800a248:	0800a3ef 	.word	0x0800a3ef
 800a24c:	0800a3ef 	.word	0x0800a3ef
 800a250:	0800a3ef 	.word	0x0800a3ef
 800a254:	0800a36d 	.word	0x0800a36d
 800a258:	0800a3ef 	.word	0x0800a3ef
 800a25c:	0800a3ef 	.word	0x0800a3ef
 800a260:	0800a3ef 	.word	0x0800a3ef
 800a264:	0800a3ad 	.word	0x0800a3ad
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));

      /* Configure the Channel 1 in PWM mode */
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 800a268:	68fb      	ldr	r3, [r7, #12]
 800a26a:	681b      	ldr	r3, [r3, #0]
 800a26c:	68b9      	ldr	r1, [r7, #8]
 800a26e:	4618      	mov	r0, r3
 800a270:	f000 f97c 	bl	800a56c <TIM_OC1_SetConfig>

      /* Set the Preload enable bit for channel1 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800a274:	68fb      	ldr	r3, [r7, #12]
 800a276:	681b      	ldr	r3, [r3, #0]
 800a278:	699a      	ldr	r2, [r3, #24]
 800a27a:	68fb      	ldr	r3, [r7, #12]
 800a27c:	681b      	ldr	r3, [r3, #0]
 800a27e:	f042 0208 	orr.w	r2, r2, #8
 800a282:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 800a284:	68fb      	ldr	r3, [r7, #12]
 800a286:	681b      	ldr	r3, [r3, #0]
 800a288:	699a      	ldr	r2, [r3, #24]
 800a28a:	68fb      	ldr	r3, [r7, #12]
 800a28c:	681b      	ldr	r3, [r3, #0]
 800a28e:	f022 0204 	bic.w	r2, r2, #4
 800a292:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800a294:	68fb      	ldr	r3, [r7, #12]
 800a296:	681b      	ldr	r3, [r3, #0]
 800a298:	6999      	ldr	r1, [r3, #24]
 800a29a:	68bb      	ldr	r3, [r7, #8]
 800a29c:	691a      	ldr	r2, [r3, #16]
 800a29e:	68fb      	ldr	r3, [r7, #12]
 800a2a0:	681b      	ldr	r3, [r3, #0]
 800a2a2:	430a      	orrs	r2, r1
 800a2a4:	619a      	str	r2, [r3, #24]
      break;
 800a2a6:	e0a5      	b.n	800a3f4 <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

      /* Configure the Channel 2 in PWM mode */
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 800a2a8:	68fb      	ldr	r3, [r7, #12]
 800a2aa:	681b      	ldr	r3, [r3, #0]
 800a2ac:	68b9      	ldr	r1, [r7, #8]
 800a2ae:	4618      	mov	r0, r3
 800a2b0:	f000 f9ec 	bl	800a68c <TIM_OC2_SetConfig>

      /* Set the Preload enable bit for channel2 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800a2b4:	68fb      	ldr	r3, [r7, #12]
 800a2b6:	681b      	ldr	r3, [r3, #0]
 800a2b8:	699a      	ldr	r2, [r3, #24]
 800a2ba:	68fb      	ldr	r3, [r7, #12]
 800a2bc:	681b      	ldr	r3, [r3, #0]
 800a2be:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800a2c2:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 800a2c4:	68fb      	ldr	r3, [r7, #12]
 800a2c6:	681b      	ldr	r3, [r3, #0]
 800a2c8:	699a      	ldr	r2, [r3, #24]
 800a2ca:	68fb      	ldr	r3, [r7, #12]
 800a2cc:	681b      	ldr	r3, [r3, #0]
 800a2ce:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800a2d2:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800a2d4:	68fb      	ldr	r3, [r7, #12]
 800a2d6:	681b      	ldr	r3, [r3, #0]
 800a2d8:	6999      	ldr	r1, [r3, #24]
 800a2da:	68bb      	ldr	r3, [r7, #8]
 800a2dc:	691b      	ldr	r3, [r3, #16]
 800a2de:	021a      	lsls	r2, r3, #8
 800a2e0:	68fb      	ldr	r3, [r7, #12]
 800a2e2:	681b      	ldr	r3, [r3, #0]
 800a2e4:	430a      	orrs	r2, r1
 800a2e6:	619a      	str	r2, [r3, #24]
      break;
 800a2e8:	e084      	b.n	800a3f4 <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));

      /* Configure the Channel 3 in PWM mode */
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 800a2ea:	68fb      	ldr	r3, [r7, #12]
 800a2ec:	681b      	ldr	r3, [r3, #0]
 800a2ee:	68b9      	ldr	r1, [r7, #8]
 800a2f0:	4618      	mov	r0, r3
 800a2f2:	f000 fa55 	bl	800a7a0 <TIM_OC3_SetConfig>

      /* Set the Preload enable bit for channel3 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800a2f6:	68fb      	ldr	r3, [r7, #12]
 800a2f8:	681b      	ldr	r3, [r3, #0]
 800a2fa:	69da      	ldr	r2, [r3, #28]
 800a2fc:	68fb      	ldr	r3, [r7, #12]
 800a2fe:	681b      	ldr	r3, [r3, #0]
 800a300:	f042 0208 	orr.w	r2, r2, #8
 800a304:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 800a306:	68fb      	ldr	r3, [r7, #12]
 800a308:	681b      	ldr	r3, [r3, #0]
 800a30a:	69da      	ldr	r2, [r3, #28]
 800a30c:	68fb      	ldr	r3, [r7, #12]
 800a30e:	681b      	ldr	r3, [r3, #0]
 800a310:	f022 0204 	bic.w	r2, r2, #4
 800a314:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800a316:	68fb      	ldr	r3, [r7, #12]
 800a318:	681b      	ldr	r3, [r3, #0]
 800a31a:	69d9      	ldr	r1, [r3, #28]
 800a31c:	68bb      	ldr	r3, [r7, #8]
 800a31e:	691a      	ldr	r2, [r3, #16]
 800a320:	68fb      	ldr	r3, [r7, #12]
 800a322:	681b      	ldr	r3, [r3, #0]
 800a324:	430a      	orrs	r2, r1
 800a326:	61da      	str	r2, [r3, #28]
      break;
 800a328:	e064      	b.n	800a3f4 <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));

      /* Configure the Channel 4 in PWM mode */
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 800a32a:	68fb      	ldr	r3, [r7, #12]
 800a32c:	681b      	ldr	r3, [r3, #0]
 800a32e:	68b9      	ldr	r1, [r7, #8]
 800a330:	4618      	mov	r0, r3
 800a332:	f000 fabd 	bl	800a8b0 <TIM_OC4_SetConfig>

      /* Set the Preload enable bit for channel4 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 800a336:	68fb      	ldr	r3, [r7, #12]
 800a338:	681b      	ldr	r3, [r3, #0]
 800a33a:	69da      	ldr	r2, [r3, #28]
 800a33c:	68fb      	ldr	r3, [r7, #12]
 800a33e:	681b      	ldr	r3, [r3, #0]
 800a340:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800a344:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 800a346:	68fb      	ldr	r3, [r7, #12]
 800a348:	681b      	ldr	r3, [r3, #0]
 800a34a:	69da      	ldr	r2, [r3, #28]
 800a34c:	68fb      	ldr	r3, [r7, #12]
 800a34e:	681b      	ldr	r3, [r3, #0]
 800a350:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800a354:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800a356:	68fb      	ldr	r3, [r7, #12]
 800a358:	681b      	ldr	r3, [r3, #0]
 800a35a:	69d9      	ldr	r1, [r3, #28]
 800a35c:	68bb      	ldr	r3, [r7, #8]
 800a35e:	691b      	ldr	r3, [r3, #16]
 800a360:	021a      	lsls	r2, r3, #8
 800a362:	68fb      	ldr	r3, [r7, #12]
 800a364:	681b      	ldr	r3, [r3, #0]
 800a366:	430a      	orrs	r2, r1
 800a368:	61da      	str	r2, [r3, #28]
      break;
 800a36a:	e043      	b.n	800a3f4 <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC5_INSTANCE(htim->Instance));

      /* Configure the Channel 5 in PWM mode */
      TIM_OC5_SetConfig(htim->Instance, sConfig);
 800a36c:	68fb      	ldr	r3, [r7, #12]
 800a36e:	681b      	ldr	r3, [r3, #0]
 800a370:	68b9      	ldr	r1, [r7, #8]
 800a372:	4618      	mov	r0, r3
 800a374:	f000 fb06 	bl	800a984 <TIM_OC5_SetConfig>

      /* Set the Preload enable bit for channel5*/
      htim->Instance->CCMR3 |= TIM_CCMR3_OC5PE;
 800a378:	68fb      	ldr	r3, [r7, #12]
 800a37a:	681b      	ldr	r3, [r3, #0]
 800a37c:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800a37e:	68fb      	ldr	r3, [r7, #12]
 800a380:	681b      	ldr	r3, [r3, #0]
 800a382:	f042 0208 	orr.w	r2, r2, #8
 800a386:	655a      	str	r2, [r3, #84]	@ 0x54

      /* Configure the Output Fast mode */
      htim->Instance->CCMR3 &= ~TIM_CCMR3_OC5FE;
 800a388:	68fb      	ldr	r3, [r7, #12]
 800a38a:	681b      	ldr	r3, [r3, #0]
 800a38c:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800a38e:	68fb      	ldr	r3, [r7, #12]
 800a390:	681b      	ldr	r3, [r3, #0]
 800a392:	f022 0204 	bic.w	r2, r2, #4
 800a396:	655a      	str	r2, [r3, #84]	@ 0x54
      htim->Instance->CCMR3 |= sConfig->OCFastMode;
 800a398:	68fb      	ldr	r3, [r7, #12]
 800a39a:	681b      	ldr	r3, [r3, #0]
 800a39c:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 800a39e:	68bb      	ldr	r3, [r7, #8]
 800a3a0:	691a      	ldr	r2, [r3, #16]
 800a3a2:	68fb      	ldr	r3, [r7, #12]
 800a3a4:	681b      	ldr	r3, [r3, #0]
 800a3a6:	430a      	orrs	r2, r1
 800a3a8:	655a      	str	r2, [r3, #84]	@ 0x54
      break;
 800a3aa:	e023      	b.n	800a3f4 <HAL_TIM_PWM_ConfigChannel+0x214>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC6_INSTANCE(htim->Instance));

      /* Configure the Channel 6 in PWM mode */
      TIM_OC6_SetConfig(htim->Instance, sConfig);
 800a3ac:	68fb      	ldr	r3, [r7, #12]
 800a3ae:	681b      	ldr	r3, [r3, #0]
 800a3b0:	68b9      	ldr	r1, [r7, #8]
 800a3b2:	4618      	mov	r0, r3
 800a3b4:	f000 fb4a 	bl	800aa4c <TIM_OC6_SetConfig>

      /* Set the Preload enable bit for channel6 */
      htim->Instance->CCMR3 |= TIM_CCMR3_OC6PE;
 800a3b8:	68fb      	ldr	r3, [r7, #12]
 800a3ba:	681b      	ldr	r3, [r3, #0]
 800a3bc:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800a3be:	68fb      	ldr	r3, [r7, #12]
 800a3c0:	681b      	ldr	r3, [r3, #0]
 800a3c2:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800a3c6:	655a      	str	r2, [r3, #84]	@ 0x54

      /* Configure the Output Fast mode */
      htim->Instance->CCMR3 &= ~TIM_CCMR3_OC6FE;
 800a3c8:	68fb      	ldr	r3, [r7, #12]
 800a3ca:	681b      	ldr	r3, [r3, #0]
 800a3cc:	6d5a      	ldr	r2, [r3, #84]	@ 0x54
 800a3ce:	68fb      	ldr	r3, [r7, #12]
 800a3d0:	681b      	ldr	r3, [r3, #0]
 800a3d2:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800a3d6:	655a      	str	r2, [r3, #84]	@ 0x54
      htim->Instance->CCMR3 |= sConfig->OCFastMode << 8U;
 800a3d8:	68fb      	ldr	r3, [r7, #12]
 800a3da:	681b      	ldr	r3, [r3, #0]
 800a3dc:	6d59      	ldr	r1, [r3, #84]	@ 0x54
 800a3de:	68bb      	ldr	r3, [r7, #8]
 800a3e0:	691b      	ldr	r3, [r3, #16]
 800a3e2:	021a      	lsls	r2, r3, #8
 800a3e4:	68fb      	ldr	r3, [r7, #12]
 800a3e6:	681b      	ldr	r3, [r3, #0]
 800a3e8:	430a      	orrs	r2, r1
 800a3ea:	655a      	str	r2, [r3, #84]	@ 0x54
      break;
 800a3ec:	e002      	b.n	800a3f4 <HAL_TIM_PWM_ConfigChannel+0x214>
    }

    default:
      status = HAL_ERROR;
 800a3ee:	2301      	movs	r3, #1
 800a3f0:	75fb      	strb	r3, [r7, #23]
      break;
 800a3f2:	bf00      	nop
  }

  __HAL_UNLOCK(htim);
 800a3f4:	68fb      	ldr	r3, [r7, #12]
 800a3f6:	2200      	movs	r2, #0
 800a3f8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return status;
 800a3fc:	7dfb      	ldrb	r3, [r7, #23]
}
 800a3fe:	4618      	mov	r0, r3
 800a400:	3718      	adds	r7, #24
 800a402:	46bd      	mov	sp, r7
 800a404:	bd80      	pop	{r7, pc}
 800a406:	bf00      	nop

0800a408 <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, const TIM_Base_InitTypeDef *Structure)
{
 800a408:	b480      	push	{r7}
 800a40a:	b085      	sub	sp, #20
 800a40c:	af00      	add	r7, sp, #0
 800a40e:	6078      	str	r0, [r7, #4]
 800a410:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 800a412:	687b      	ldr	r3, [r7, #4]
 800a414:	681b      	ldr	r3, [r3, #0]
 800a416:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800a418:	687b      	ldr	r3, [r7, #4]
 800a41a:	4a4a      	ldr	r2, [pc, #296]	@ (800a544 <TIM_Base_SetConfig+0x13c>)
 800a41c:	4293      	cmp	r3, r2
 800a41e:	d013      	beq.n	800a448 <TIM_Base_SetConfig+0x40>
 800a420:	687b      	ldr	r3, [r7, #4]
 800a422:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800a426:	d00f      	beq.n	800a448 <TIM_Base_SetConfig+0x40>
 800a428:	687b      	ldr	r3, [r7, #4]
 800a42a:	4a47      	ldr	r2, [pc, #284]	@ (800a548 <TIM_Base_SetConfig+0x140>)
 800a42c:	4293      	cmp	r3, r2
 800a42e:	d00b      	beq.n	800a448 <TIM_Base_SetConfig+0x40>
 800a430:	687b      	ldr	r3, [r7, #4]
 800a432:	4a46      	ldr	r2, [pc, #280]	@ (800a54c <TIM_Base_SetConfig+0x144>)
 800a434:	4293      	cmp	r3, r2
 800a436:	d007      	beq.n	800a448 <TIM_Base_SetConfig+0x40>
 800a438:	687b      	ldr	r3, [r7, #4]
 800a43a:	4a45      	ldr	r2, [pc, #276]	@ (800a550 <TIM_Base_SetConfig+0x148>)
 800a43c:	4293      	cmp	r3, r2
 800a43e:	d003      	beq.n	800a448 <TIM_Base_SetConfig+0x40>
 800a440:	687b      	ldr	r3, [r7, #4]
 800a442:	4a44      	ldr	r2, [pc, #272]	@ (800a554 <TIM_Base_SetConfig+0x14c>)
 800a444:	4293      	cmp	r3, r2
 800a446:	d108      	bne.n	800a45a <TIM_Base_SetConfig+0x52>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800a448:	68fb      	ldr	r3, [r7, #12]
 800a44a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 800a44e:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 800a450:	683b      	ldr	r3, [r7, #0]
 800a452:	685b      	ldr	r3, [r3, #4]
 800a454:	68fa      	ldr	r2, [r7, #12]
 800a456:	4313      	orrs	r3, r2
 800a458:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800a45a:	687b      	ldr	r3, [r7, #4]
 800a45c:	4a39      	ldr	r2, [pc, #228]	@ (800a544 <TIM_Base_SetConfig+0x13c>)
 800a45e:	4293      	cmp	r3, r2
 800a460:	d027      	beq.n	800a4b2 <TIM_Base_SetConfig+0xaa>
 800a462:	687b      	ldr	r3, [r7, #4]
 800a464:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800a468:	d023      	beq.n	800a4b2 <TIM_Base_SetConfig+0xaa>
 800a46a:	687b      	ldr	r3, [r7, #4]
 800a46c:	4a36      	ldr	r2, [pc, #216]	@ (800a548 <TIM_Base_SetConfig+0x140>)
 800a46e:	4293      	cmp	r3, r2
 800a470:	d01f      	beq.n	800a4b2 <TIM_Base_SetConfig+0xaa>
 800a472:	687b      	ldr	r3, [r7, #4]
 800a474:	4a35      	ldr	r2, [pc, #212]	@ (800a54c <TIM_Base_SetConfig+0x144>)
 800a476:	4293      	cmp	r3, r2
 800a478:	d01b      	beq.n	800a4b2 <TIM_Base_SetConfig+0xaa>
 800a47a:	687b      	ldr	r3, [r7, #4]
 800a47c:	4a34      	ldr	r2, [pc, #208]	@ (800a550 <TIM_Base_SetConfig+0x148>)
 800a47e:	4293      	cmp	r3, r2
 800a480:	d017      	beq.n	800a4b2 <TIM_Base_SetConfig+0xaa>
 800a482:	687b      	ldr	r3, [r7, #4]
 800a484:	4a33      	ldr	r2, [pc, #204]	@ (800a554 <TIM_Base_SetConfig+0x14c>)
 800a486:	4293      	cmp	r3, r2
 800a488:	d013      	beq.n	800a4b2 <TIM_Base_SetConfig+0xaa>
 800a48a:	687b      	ldr	r3, [r7, #4]
 800a48c:	4a32      	ldr	r2, [pc, #200]	@ (800a558 <TIM_Base_SetConfig+0x150>)
 800a48e:	4293      	cmp	r3, r2
 800a490:	d00f      	beq.n	800a4b2 <TIM_Base_SetConfig+0xaa>
 800a492:	687b      	ldr	r3, [r7, #4]
 800a494:	4a31      	ldr	r2, [pc, #196]	@ (800a55c <TIM_Base_SetConfig+0x154>)
 800a496:	4293      	cmp	r3, r2
 800a498:	d00b      	beq.n	800a4b2 <TIM_Base_SetConfig+0xaa>
 800a49a:	687b      	ldr	r3, [r7, #4]
 800a49c:	4a30      	ldr	r2, [pc, #192]	@ (800a560 <TIM_Base_SetConfig+0x158>)
 800a49e:	4293      	cmp	r3, r2
 800a4a0:	d007      	beq.n	800a4b2 <TIM_Base_SetConfig+0xaa>
 800a4a2:	687b      	ldr	r3, [r7, #4]
 800a4a4:	4a2f      	ldr	r2, [pc, #188]	@ (800a564 <TIM_Base_SetConfig+0x15c>)
 800a4a6:	4293      	cmp	r3, r2
 800a4a8:	d003      	beq.n	800a4b2 <TIM_Base_SetConfig+0xaa>
 800a4aa:	687b      	ldr	r3, [r7, #4]
 800a4ac:	4a2e      	ldr	r2, [pc, #184]	@ (800a568 <TIM_Base_SetConfig+0x160>)
 800a4ae:	4293      	cmp	r3, r2
 800a4b0:	d108      	bne.n	800a4c4 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 800a4b2:	68fb      	ldr	r3, [r7, #12]
 800a4b4:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800a4b8:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800a4ba:	683b      	ldr	r3, [r7, #0]
 800a4bc:	68db      	ldr	r3, [r3, #12]
 800a4be:	68fa      	ldr	r2, [r7, #12]
 800a4c0:	4313      	orrs	r3, r2
 800a4c2:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800a4c4:	68fb      	ldr	r3, [r7, #12]
 800a4c6:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 800a4ca:	683b      	ldr	r3, [r7, #0]
 800a4cc:	695b      	ldr	r3, [r3, #20]
 800a4ce:	4313      	orrs	r3, r2
 800a4d0:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 800a4d2:	687b      	ldr	r3, [r7, #4]
 800a4d4:	68fa      	ldr	r2, [r7, #12]
 800a4d6:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800a4d8:	683b      	ldr	r3, [r7, #0]
 800a4da:	689a      	ldr	r2, [r3, #8]
 800a4dc:	687b      	ldr	r3, [r7, #4]
 800a4de:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800a4e0:	683b      	ldr	r3, [r7, #0]
 800a4e2:	681a      	ldr	r2, [r3, #0]
 800a4e4:	687b      	ldr	r3, [r7, #4]
 800a4e6:	629a      	str	r2, [r3, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800a4e8:	687b      	ldr	r3, [r7, #4]
 800a4ea:	4a16      	ldr	r2, [pc, #88]	@ (800a544 <TIM_Base_SetConfig+0x13c>)
 800a4ec:	4293      	cmp	r3, r2
 800a4ee:	d00f      	beq.n	800a510 <TIM_Base_SetConfig+0x108>
 800a4f0:	687b      	ldr	r3, [r7, #4]
 800a4f2:	4a18      	ldr	r2, [pc, #96]	@ (800a554 <TIM_Base_SetConfig+0x14c>)
 800a4f4:	4293      	cmp	r3, r2
 800a4f6:	d00b      	beq.n	800a510 <TIM_Base_SetConfig+0x108>
 800a4f8:	687b      	ldr	r3, [r7, #4]
 800a4fa:	4a17      	ldr	r2, [pc, #92]	@ (800a558 <TIM_Base_SetConfig+0x150>)
 800a4fc:	4293      	cmp	r3, r2
 800a4fe:	d007      	beq.n	800a510 <TIM_Base_SetConfig+0x108>
 800a500:	687b      	ldr	r3, [r7, #4]
 800a502:	4a16      	ldr	r2, [pc, #88]	@ (800a55c <TIM_Base_SetConfig+0x154>)
 800a504:	4293      	cmp	r3, r2
 800a506:	d003      	beq.n	800a510 <TIM_Base_SetConfig+0x108>
 800a508:	687b      	ldr	r3, [r7, #4]
 800a50a:	4a15      	ldr	r2, [pc, #84]	@ (800a560 <TIM_Base_SetConfig+0x158>)
 800a50c:	4293      	cmp	r3, r2
 800a50e:	d103      	bne.n	800a518 <TIM_Base_SetConfig+0x110>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 800a510:	683b      	ldr	r3, [r7, #0]
 800a512:	691a      	ldr	r2, [r3, #16]
 800a514:	687b      	ldr	r3, [r7, #4]
 800a516:	631a      	str	r2, [r3, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800a518:	687b      	ldr	r3, [r7, #4]
 800a51a:	2201      	movs	r2, #1
 800a51c:	615a      	str	r2, [r3, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 800a51e:	687b      	ldr	r3, [r7, #4]
 800a520:	691b      	ldr	r3, [r3, #16]
 800a522:	f003 0301 	and.w	r3, r3, #1
 800a526:	2b01      	cmp	r3, #1
 800a528:	d105      	bne.n	800a536 <TIM_Base_SetConfig+0x12e>
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 800a52a:	687b      	ldr	r3, [r7, #4]
 800a52c:	691b      	ldr	r3, [r3, #16]
 800a52e:	f023 0201 	bic.w	r2, r3, #1
 800a532:	687b      	ldr	r3, [r7, #4]
 800a534:	611a      	str	r2, [r3, #16]
  }
}
 800a536:	bf00      	nop
 800a538:	3714      	adds	r7, #20
 800a53a:	46bd      	mov	sp, r7
 800a53c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a540:	4770      	bx	lr
 800a542:	bf00      	nop
 800a544:	40010000 	.word	0x40010000
 800a548:	40000400 	.word	0x40000400
 800a54c:	40000800 	.word	0x40000800
 800a550:	40000c00 	.word	0x40000c00
 800a554:	40010400 	.word	0x40010400
 800a558:	40014000 	.word	0x40014000
 800a55c:	40014400 	.word	0x40014400
 800a560:	40014800 	.word	0x40014800
 800a564:	4000e000 	.word	0x4000e000
 800a568:	4000e400 	.word	0x4000e400

0800a56c <TIM_OC1_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 800a56c:	b480      	push	{r7}
 800a56e:	b087      	sub	sp, #28
 800a570:	af00      	add	r7, sp, #0
 800a572:	6078      	str	r0, [r7, #4]
 800a574:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800a576:	687b      	ldr	r3, [r7, #4]
 800a578:	6a1b      	ldr	r3, [r3, #32]
 800a57a:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 800a57c:	687b      	ldr	r3, [r7, #4]
 800a57e:	6a1b      	ldr	r3, [r3, #32]
 800a580:	f023 0201 	bic.w	r2, r3, #1
 800a584:	687b      	ldr	r3, [r7, #4]
 800a586:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800a588:	687b      	ldr	r3, [r7, #4]
 800a58a:	685b      	ldr	r3, [r3, #4]
 800a58c:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 800a58e:	687b      	ldr	r3, [r7, #4]
 800a590:	699b      	ldr	r3, [r3, #24]
 800a592:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
 800a594:	68fa      	ldr	r2, [r7, #12]
 800a596:	4b37      	ldr	r3, [pc, #220]	@ (800a674 <TIM_OC1_SetConfig+0x108>)
 800a598:	4013      	ands	r3, r2
 800a59a:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 800a59c:	68fb      	ldr	r3, [r7, #12]
 800a59e:	f023 0303 	bic.w	r3, r3, #3
 800a5a2:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 800a5a4:	683b      	ldr	r3, [r7, #0]
 800a5a6:	681b      	ldr	r3, [r3, #0]
 800a5a8:	68fa      	ldr	r2, [r7, #12]
 800a5aa:	4313      	orrs	r3, r2
 800a5ac:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
 800a5ae:	697b      	ldr	r3, [r7, #20]
 800a5b0:	f023 0302 	bic.w	r3, r3, #2
 800a5b4:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 800a5b6:	683b      	ldr	r3, [r7, #0]
 800a5b8:	689b      	ldr	r3, [r3, #8]
 800a5ba:	697a      	ldr	r2, [r7, #20]
 800a5bc:	4313      	orrs	r3, r2
 800a5be:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 800a5c0:	687b      	ldr	r3, [r7, #4]
 800a5c2:	4a2d      	ldr	r2, [pc, #180]	@ (800a678 <TIM_OC1_SetConfig+0x10c>)
 800a5c4:	4293      	cmp	r3, r2
 800a5c6:	d00f      	beq.n	800a5e8 <TIM_OC1_SetConfig+0x7c>
 800a5c8:	687b      	ldr	r3, [r7, #4]
 800a5ca:	4a2c      	ldr	r2, [pc, #176]	@ (800a67c <TIM_OC1_SetConfig+0x110>)
 800a5cc:	4293      	cmp	r3, r2
 800a5ce:	d00b      	beq.n	800a5e8 <TIM_OC1_SetConfig+0x7c>
 800a5d0:	687b      	ldr	r3, [r7, #4]
 800a5d2:	4a2b      	ldr	r2, [pc, #172]	@ (800a680 <TIM_OC1_SetConfig+0x114>)
 800a5d4:	4293      	cmp	r3, r2
 800a5d6:	d007      	beq.n	800a5e8 <TIM_OC1_SetConfig+0x7c>
 800a5d8:	687b      	ldr	r3, [r7, #4]
 800a5da:	4a2a      	ldr	r2, [pc, #168]	@ (800a684 <TIM_OC1_SetConfig+0x118>)
 800a5dc:	4293      	cmp	r3, r2
 800a5de:	d003      	beq.n	800a5e8 <TIM_OC1_SetConfig+0x7c>
 800a5e0:	687b      	ldr	r3, [r7, #4]
 800a5e2:	4a29      	ldr	r2, [pc, #164]	@ (800a688 <TIM_OC1_SetConfig+0x11c>)
 800a5e4:	4293      	cmp	r3, r2
 800a5e6:	d10c      	bne.n	800a602 <TIM_OC1_SetConfig+0x96>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
 800a5e8:	697b      	ldr	r3, [r7, #20]
 800a5ea:	f023 0308 	bic.w	r3, r3, #8
 800a5ee:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 800a5f0:	683b      	ldr	r3, [r7, #0]
 800a5f2:	68db      	ldr	r3, [r3, #12]
 800a5f4:	697a      	ldr	r2, [r7, #20]
 800a5f6:	4313      	orrs	r3, r2
 800a5f8:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
 800a5fa:	697b      	ldr	r3, [r7, #20]
 800a5fc:	f023 0304 	bic.w	r3, r3, #4
 800a600:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800a602:	687b      	ldr	r3, [r7, #4]
 800a604:	4a1c      	ldr	r2, [pc, #112]	@ (800a678 <TIM_OC1_SetConfig+0x10c>)
 800a606:	4293      	cmp	r3, r2
 800a608:	d00f      	beq.n	800a62a <TIM_OC1_SetConfig+0xbe>
 800a60a:	687b      	ldr	r3, [r7, #4]
 800a60c:	4a1b      	ldr	r2, [pc, #108]	@ (800a67c <TIM_OC1_SetConfig+0x110>)
 800a60e:	4293      	cmp	r3, r2
 800a610:	d00b      	beq.n	800a62a <TIM_OC1_SetConfig+0xbe>
 800a612:	687b      	ldr	r3, [r7, #4]
 800a614:	4a1a      	ldr	r2, [pc, #104]	@ (800a680 <TIM_OC1_SetConfig+0x114>)
 800a616:	4293      	cmp	r3, r2
 800a618:	d007      	beq.n	800a62a <TIM_OC1_SetConfig+0xbe>
 800a61a:	687b      	ldr	r3, [r7, #4]
 800a61c:	4a19      	ldr	r2, [pc, #100]	@ (800a684 <TIM_OC1_SetConfig+0x118>)
 800a61e:	4293      	cmp	r3, r2
 800a620:	d003      	beq.n	800a62a <TIM_OC1_SetConfig+0xbe>
 800a622:	687b      	ldr	r3, [r7, #4]
 800a624:	4a18      	ldr	r2, [pc, #96]	@ (800a688 <TIM_OC1_SetConfig+0x11c>)
 800a626:	4293      	cmp	r3, r2
 800a628:	d111      	bne.n	800a64e <TIM_OC1_SetConfig+0xe2>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS1;
 800a62a:	693b      	ldr	r3, [r7, #16]
 800a62c:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 800a630:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 800a632:	693b      	ldr	r3, [r7, #16]
 800a634:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 800a638:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
 800a63a:	683b      	ldr	r3, [r7, #0]
 800a63c:	695b      	ldr	r3, [r3, #20]
 800a63e:	693a      	ldr	r2, [r7, #16]
 800a640:	4313      	orrs	r3, r2
 800a642:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 800a644:	683b      	ldr	r3, [r7, #0]
 800a646:	699b      	ldr	r3, [r3, #24]
 800a648:	693a      	ldr	r2, [r7, #16]
 800a64a:	4313      	orrs	r3, r2
 800a64c:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800a64e:	687b      	ldr	r3, [r7, #4]
 800a650:	693a      	ldr	r2, [r7, #16]
 800a652:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 800a654:	687b      	ldr	r3, [r7, #4]
 800a656:	68fa      	ldr	r2, [r7, #12]
 800a658:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 800a65a:	683b      	ldr	r3, [r7, #0]
 800a65c:	685a      	ldr	r2, [r3, #4]
 800a65e:	687b      	ldr	r3, [r7, #4]
 800a660:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800a662:	687b      	ldr	r3, [r7, #4]
 800a664:	697a      	ldr	r2, [r7, #20]
 800a666:	621a      	str	r2, [r3, #32]
}
 800a668:	bf00      	nop
 800a66a:	371c      	adds	r7, #28
 800a66c:	46bd      	mov	sp, r7
 800a66e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a672:	4770      	bx	lr
 800a674:	fffeff8f 	.word	0xfffeff8f
 800a678:	40010000 	.word	0x40010000
 800a67c:	40010400 	.word	0x40010400
 800a680:	40014000 	.word	0x40014000
 800a684:	40014400 	.word	0x40014400
 800a688:	40014800 	.word	0x40014800

0800a68c <TIM_OC2_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 800a68c:	b480      	push	{r7}
 800a68e:	b087      	sub	sp, #28
 800a690:	af00      	add	r7, sp, #0
 800a692:	6078      	str	r0, [r7, #4]
 800a694:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800a696:	687b      	ldr	r3, [r7, #4]
 800a698:	6a1b      	ldr	r3, [r3, #32]
 800a69a:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800a69c:	687b      	ldr	r3, [r7, #4]
 800a69e:	6a1b      	ldr	r3, [r3, #32]
 800a6a0:	f023 0210 	bic.w	r2, r3, #16
 800a6a4:	687b      	ldr	r3, [r7, #4]
 800a6a6:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800a6a8:	687b      	ldr	r3, [r7, #4]
 800a6aa:	685b      	ldr	r3, [r3, #4]
 800a6ac:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 800a6ae:	687b      	ldr	r3, [r7, #4]
 800a6b0:	699b      	ldr	r3, [r3, #24]
 800a6b2:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR1_OC2M;
 800a6b4:	68fa      	ldr	r2, [r7, #12]
 800a6b6:	4b34      	ldr	r3, [pc, #208]	@ (800a788 <TIM_OC2_SetConfig+0xfc>)
 800a6b8:	4013      	ands	r3, r2
 800a6ba:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 800a6bc:	68fb      	ldr	r3, [r7, #12]
 800a6be:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800a6c2:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800a6c4:	683b      	ldr	r3, [r7, #0]
 800a6c6:	681b      	ldr	r3, [r3, #0]
 800a6c8:	021b      	lsls	r3, r3, #8
 800a6ca:	68fa      	ldr	r2, [r7, #12]
 800a6cc:	4313      	orrs	r3, r2
 800a6ce:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC2P;
 800a6d0:	697b      	ldr	r3, [r7, #20]
 800a6d2:	f023 0320 	bic.w	r3, r3, #32
 800a6d6:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800a6d8:	683b      	ldr	r3, [r7, #0]
 800a6da:	689b      	ldr	r3, [r3, #8]
 800a6dc:	011b      	lsls	r3, r3, #4
 800a6de:	697a      	ldr	r2, [r7, #20]
 800a6e0:	4313      	orrs	r3, r2
 800a6e2:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 800a6e4:	687b      	ldr	r3, [r7, #4]
 800a6e6:	4a29      	ldr	r2, [pc, #164]	@ (800a78c <TIM_OC2_SetConfig+0x100>)
 800a6e8:	4293      	cmp	r3, r2
 800a6ea:	d003      	beq.n	800a6f4 <TIM_OC2_SetConfig+0x68>
 800a6ec:	687b      	ldr	r3, [r7, #4]
 800a6ee:	4a28      	ldr	r2, [pc, #160]	@ (800a790 <TIM_OC2_SetConfig+0x104>)
 800a6f0:	4293      	cmp	r3, r2
 800a6f2:	d10d      	bne.n	800a710 <TIM_OC2_SetConfig+0x84>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC2NP;
 800a6f4:	697b      	ldr	r3, [r7, #20]
 800a6f6:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800a6fa:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800a6fc:	683b      	ldr	r3, [r7, #0]
 800a6fe:	68db      	ldr	r3, [r3, #12]
 800a700:	011b      	lsls	r3, r3, #4
 800a702:	697a      	ldr	r2, [r7, #20]
 800a704:	4313      	orrs	r3, r2
 800a706:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC2NE;
 800a708:	697b      	ldr	r3, [r7, #20]
 800a70a:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 800a70e:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800a710:	687b      	ldr	r3, [r7, #4]
 800a712:	4a1e      	ldr	r2, [pc, #120]	@ (800a78c <TIM_OC2_SetConfig+0x100>)
 800a714:	4293      	cmp	r3, r2
 800a716:	d00f      	beq.n	800a738 <TIM_OC2_SetConfig+0xac>
 800a718:	687b      	ldr	r3, [r7, #4]
 800a71a:	4a1d      	ldr	r2, [pc, #116]	@ (800a790 <TIM_OC2_SetConfig+0x104>)
 800a71c:	4293      	cmp	r3, r2
 800a71e:	d00b      	beq.n	800a738 <TIM_OC2_SetConfig+0xac>
 800a720:	687b      	ldr	r3, [r7, #4]
 800a722:	4a1c      	ldr	r2, [pc, #112]	@ (800a794 <TIM_OC2_SetConfig+0x108>)
 800a724:	4293      	cmp	r3, r2
 800a726:	d007      	beq.n	800a738 <TIM_OC2_SetConfig+0xac>
 800a728:	687b      	ldr	r3, [r7, #4]
 800a72a:	4a1b      	ldr	r2, [pc, #108]	@ (800a798 <TIM_OC2_SetConfig+0x10c>)
 800a72c:	4293      	cmp	r3, r2
 800a72e:	d003      	beq.n	800a738 <TIM_OC2_SetConfig+0xac>
 800a730:	687b      	ldr	r3, [r7, #4]
 800a732:	4a1a      	ldr	r2, [pc, #104]	@ (800a79c <TIM_OC2_SetConfig+0x110>)
 800a734:	4293      	cmp	r3, r2
 800a736:	d113      	bne.n	800a760 <TIM_OC2_SetConfig+0xd4>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS2;
 800a738:	693b      	ldr	r3, [r7, #16]
 800a73a:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 800a73e:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 800a740:	693b      	ldr	r3, [r7, #16]
 800a742:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800a746:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
 800a748:	683b      	ldr	r3, [r7, #0]
 800a74a:	695b      	ldr	r3, [r3, #20]
 800a74c:	009b      	lsls	r3, r3, #2
 800a74e:	693a      	ldr	r2, [r7, #16]
 800a750:	4313      	orrs	r3, r2
 800a752:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 800a754:	683b      	ldr	r3, [r7, #0]
 800a756:	699b      	ldr	r3, [r3, #24]
 800a758:	009b      	lsls	r3, r3, #2
 800a75a:	693a      	ldr	r2, [r7, #16]
 800a75c:	4313      	orrs	r3, r2
 800a75e:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800a760:	687b      	ldr	r3, [r7, #4]
 800a762:	693a      	ldr	r2, [r7, #16]
 800a764:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 800a766:	687b      	ldr	r3, [r7, #4]
 800a768:	68fa      	ldr	r2, [r7, #12]
 800a76a:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR2 = OC_Config->Pulse;
 800a76c:	683b      	ldr	r3, [r7, #0]
 800a76e:	685a      	ldr	r2, [r3, #4]
 800a770:	687b      	ldr	r3, [r7, #4]
 800a772:	639a      	str	r2, [r3, #56]	@ 0x38

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800a774:	687b      	ldr	r3, [r7, #4]
 800a776:	697a      	ldr	r2, [r7, #20]
 800a778:	621a      	str	r2, [r3, #32]
}
 800a77a:	bf00      	nop
 800a77c:	371c      	adds	r7, #28
 800a77e:	46bd      	mov	sp, r7
 800a780:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a784:	4770      	bx	lr
 800a786:	bf00      	nop
 800a788:	feff8fff 	.word	0xfeff8fff
 800a78c:	40010000 	.word	0x40010000
 800a790:	40010400 	.word	0x40010400
 800a794:	40014000 	.word	0x40014000
 800a798:	40014400 	.word	0x40014400
 800a79c:	40014800 	.word	0x40014800

0800a7a0 <TIM_OC3_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 800a7a0:	b480      	push	{r7}
 800a7a2:	b087      	sub	sp, #28
 800a7a4:	af00      	add	r7, sp, #0
 800a7a6:	6078      	str	r0, [r7, #4]
 800a7a8:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800a7aa:	687b      	ldr	r3, [r7, #4]
 800a7ac:	6a1b      	ldr	r3, [r3, #32]
 800a7ae:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 800a7b0:	687b      	ldr	r3, [r7, #4]
 800a7b2:	6a1b      	ldr	r3, [r3, #32]
 800a7b4:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 800a7b8:	687b      	ldr	r3, [r7, #4]
 800a7ba:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800a7bc:	687b      	ldr	r3, [r7, #4]
 800a7be:	685b      	ldr	r3, [r3, #4]
 800a7c0:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 800a7c2:	687b      	ldr	r3, [r7, #4]
 800a7c4:	69db      	ldr	r3, [r3, #28]
 800a7c6:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
 800a7c8:	68fa      	ldr	r2, [r7, #12]
 800a7ca:	4b33      	ldr	r3, [pc, #204]	@ (800a898 <TIM_OC3_SetConfig+0xf8>)
 800a7cc:	4013      	ands	r3, r2
 800a7ce:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 800a7d0:	68fb      	ldr	r3, [r7, #12]
 800a7d2:	f023 0303 	bic.w	r3, r3, #3
 800a7d6:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 800a7d8:	683b      	ldr	r3, [r7, #0]
 800a7da:	681b      	ldr	r3, [r3, #0]
 800a7dc:	68fa      	ldr	r2, [r7, #12]
 800a7de:	4313      	orrs	r3, r2
 800a7e0:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
 800a7e2:	697b      	ldr	r3, [r7, #20]
 800a7e4:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 800a7e8:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 800a7ea:	683b      	ldr	r3, [r7, #0]
 800a7ec:	689b      	ldr	r3, [r3, #8]
 800a7ee:	021b      	lsls	r3, r3, #8
 800a7f0:	697a      	ldr	r2, [r7, #20]
 800a7f2:	4313      	orrs	r3, r2
 800a7f4:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 800a7f6:	687b      	ldr	r3, [r7, #4]
 800a7f8:	4a28      	ldr	r2, [pc, #160]	@ (800a89c <TIM_OC3_SetConfig+0xfc>)
 800a7fa:	4293      	cmp	r3, r2
 800a7fc:	d003      	beq.n	800a806 <TIM_OC3_SetConfig+0x66>
 800a7fe:	687b      	ldr	r3, [r7, #4]
 800a800:	4a27      	ldr	r2, [pc, #156]	@ (800a8a0 <TIM_OC3_SetConfig+0x100>)
 800a802:	4293      	cmp	r3, r2
 800a804:	d10d      	bne.n	800a822 <TIM_OC3_SetConfig+0x82>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
 800a806:	697b      	ldr	r3, [r7, #20]
 800a808:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 800a80c:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 800a80e:	683b      	ldr	r3, [r7, #0]
 800a810:	68db      	ldr	r3, [r3, #12]
 800a812:	021b      	lsls	r3, r3, #8
 800a814:	697a      	ldr	r2, [r7, #20]
 800a816:	4313      	orrs	r3, r2
 800a818:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
 800a81a:	697b      	ldr	r3, [r7, #20]
 800a81c:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 800a820:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800a822:	687b      	ldr	r3, [r7, #4]
 800a824:	4a1d      	ldr	r2, [pc, #116]	@ (800a89c <TIM_OC3_SetConfig+0xfc>)
 800a826:	4293      	cmp	r3, r2
 800a828:	d00f      	beq.n	800a84a <TIM_OC3_SetConfig+0xaa>
 800a82a:	687b      	ldr	r3, [r7, #4]
 800a82c:	4a1c      	ldr	r2, [pc, #112]	@ (800a8a0 <TIM_OC3_SetConfig+0x100>)
 800a82e:	4293      	cmp	r3, r2
 800a830:	d00b      	beq.n	800a84a <TIM_OC3_SetConfig+0xaa>
 800a832:	687b      	ldr	r3, [r7, #4]
 800a834:	4a1b      	ldr	r2, [pc, #108]	@ (800a8a4 <TIM_OC3_SetConfig+0x104>)
 800a836:	4293      	cmp	r3, r2
 800a838:	d007      	beq.n	800a84a <TIM_OC3_SetConfig+0xaa>
 800a83a:	687b      	ldr	r3, [r7, #4]
 800a83c:	4a1a      	ldr	r2, [pc, #104]	@ (800a8a8 <TIM_OC3_SetConfig+0x108>)
 800a83e:	4293      	cmp	r3, r2
 800a840:	d003      	beq.n	800a84a <TIM_OC3_SetConfig+0xaa>
 800a842:	687b      	ldr	r3, [r7, #4]
 800a844:	4a19      	ldr	r2, [pc, #100]	@ (800a8ac <TIM_OC3_SetConfig+0x10c>)
 800a846:	4293      	cmp	r3, r2
 800a848:	d113      	bne.n	800a872 <TIM_OC3_SetConfig+0xd2>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS3;
 800a84a:	693b      	ldr	r3, [r7, #16]
 800a84c:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800a850:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 800a852:	693b      	ldr	r3, [r7, #16]
 800a854:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 800a858:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
 800a85a:	683b      	ldr	r3, [r7, #0]
 800a85c:	695b      	ldr	r3, [r3, #20]
 800a85e:	011b      	lsls	r3, r3, #4
 800a860:	693a      	ldr	r2, [r7, #16]
 800a862:	4313      	orrs	r3, r2
 800a864:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 800a866:	683b      	ldr	r3, [r7, #0]
 800a868:	699b      	ldr	r3, [r3, #24]
 800a86a:	011b      	lsls	r3, r3, #4
 800a86c:	693a      	ldr	r2, [r7, #16]
 800a86e:	4313      	orrs	r3, r2
 800a870:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800a872:	687b      	ldr	r3, [r7, #4]
 800a874:	693a      	ldr	r2, [r7, #16]
 800a876:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 800a878:	687b      	ldr	r3, [r7, #4]
 800a87a:	68fa      	ldr	r2, [r7, #12]
 800a87c:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 800a87e:	683b      	ldr	r3, [r7, #0]
 800a880:	685a      	ldr	r2, [r3, #4]
 800a882:	687b      	ldr	r3, [r7, #4]
 800a884:	63da      	str	r2, [r3, #60]	@ 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800a886:	687b      	ldr	r3, [r7, #4]
 800a888:	697a      	ldr	r2, [r7, #20]
 800a88a:	621a      	str	r2, [r3, #32]
}
 800a88c:	bf00      	nop
 800a88e:	371c      	adds	r7, #28
 800a890:	46bd      	mov	sp, r7
 800a892:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a896:	4770      	bx	lr
 800a898:	fffeff8f 	.word	0xfffeff8f
 800a89c:	40010000 	.word	0x40010000
 800a8a0:	40010400 	.word	0x40010400
 800a8a4:	40014000 	.word	0x40014000
 800a8a8:	40014400 	.word	0x40014400
 800a8ac:	40014800 	.word	0x40014800

0800a8b0 <TIM_OC4_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 800a8b0:	b480      	push	{r7}
 800a8b2:	b087      	sub	sp, #28
 800a8b4:	af00      	add	r7, sp, #0
 800a8b6:	6078      	str	r0, [r7, #4]
 800a8b8:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800a8ba:	687b      	ldr	r3, [r7, #4]
 800a8bc:	6a1b      	ldr	r3, [r3, #32]
 800a8be:	613b      	str	r3, [r7, #16]

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 800a8c0:	687b      	ldr	r3, [r7, #4]
 800a8c2:	6a1b      	ldr	r3, [r3, #32]
 800a8c4:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 800a8c8:	687b      	ldr	r3, [r7, #4]
 800a8ca:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800a8cc:	687b      	ldr	r3, [r7, #4]
 800a8ce:	685b      	ldr	r3, [r3, #4]
 800a8d0:	617b      	str	r3, [r7, #20]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 800a8d2:	687b      	ldr	r3, [r7, #4]
 800a8d4:	69db      	ldr	r3, [r3, #28]
 800a8d6:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
 800a8d8:	68fa      	ldr	r2, [r7, #12]
 800a8da:	4b24      	ldr	r3, [pc, #144]	@ (800a96c <TIM_OC4_SetConfig+0xbc>)
 800a8dc:	4013      	ands	r3, r2
 800a8de:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 800a8e0:	68fb      	ldr	r3, [r7, #12]
 800a8e2:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 800a8e6:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800a8e8:	683b      	ldr	r3, [r7, #0]
 800a8ea:	681b      	ldr	r3, [r3, #0]
 800a8ec:	021b      	lsls	r3, r3, #8
 800a8ee:	68fa      	ldr	r2, [r7, #12]
 800a8f0:	4313      	orrs	r3, r2
 800a8f2:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
 800a8f4:	693b      	ldr	r3, [r7, #16]
 800a8f6:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 800a8fa:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 800a8fc:	683b      	ldr	r3, [r7, #0]
 800a8fe:	689b      	ldr	r3, [r3, #8]
 800a900:	031b      	lsls	r3, r3, #12
 800a902:	693a      	ldr	r2, [r7, #16]
 800a904:	4313      	orrs	r3, r2
 800a906:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800a908:	687b      	ldr	r3, [r7, #4]
 800a90a:	4a19      	ldr	r2, [pc, #100]	@ (800a970 <TIM_OC4_SetConfig+0xc0>)
 800a90c:	4293      	cmp	r3, r2
 800a90e:	d00f      	beq.n	800a930 <TIM_OC4_SetConfig+0x80>
 800a910:	687b      	ldr	r3, [r7, #4]
 800a912:	4a18      	ldr	r2, [pc, #96]	@ (800a974 <TIM_OC4_SetConfig+0xc4>)
 800a914:	4293      	cmp	r3, r2
 800a916:	d00b      	beq.n	800a930 <TIM_OC4_SetConfig+0x80>
 800a918:	687b      	ldr	r3, [r7, #4]
 800a91a:	4a17      	ldr	r2, [pc, #92]	@ (800a978 <TIM_OC4_SetConfig+0xc8>)
 800a91c:	4293      	cmp	r3, r2
 800a91e:	d007      	beq.n	800a930 <TIM_OC4_SetConfig+0x80>
 800a920:	687b      	ldr	r3, [r7, #4]
 800a922:	4a16      	ldr	r2, [pc, #88]	@ (800a97c <TIM_OC4_SetConfig+0xcc>)
 800a924:	4293      	cmp	r3, r2
 800a926:	d003      	beq.n	800a930 <TIM_OC4_SetConfig+0x80>
 800a928:	687b      	ldr	r3, [r7, #4]
 800a92a:	4a15      	ldr	r2, [pc, #84]	@ (800a980 <TIM_OC4_SetConfig+0xd0>)
 800a92c:	4293      	cmp	r3, r2
 800a92e:	d109      	bne.n	800a944 <TIM_OC4_SetConfig+0x94>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
 800a930:	697b      	ldr	r3, [r7, #20]
 800a932:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 800a936:	617b      	str	r3, [r7, #20]

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800a938:	683b      	ldr	r3, [r7, #0]
 800a93a:	695b      	ldr	r3, [r3, #20]
 800a93c:	019b      	lsls	r3, r3, #6
 800a93e:	697a      	ldr	r2, [r7, #20]
 800a940:	4313      	orrs	r3, r2
 800a942:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800a944:	687b      	ldr	r3, [r7, #4]
 800a946:	697a      	ldr	r2, [r7, #20]
 800a948:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 800a94a:	687b      	ldr	r3, [r7, #4]
 800a94c:	68fa      	ldr	r2, [r7, #12]
 800a94e:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 800a950:	683b      	ldr	r3, [r7, #0]
 800a952:	685a      	ldr	r2, [r3, #4]
 800a954:	687b      	ldr	r3, [r7, #4]
 800a956:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800a958:	687b      	ldr	r3, [r7, #4]
 800a95a:	693a      	ldr	r2, [r7, #16]
 800a95c:	621a      	str	r2, [r3, #32]
}
 800a95e:	bf00      	nop
 800a960:	371c      	adds	r7, #28
 800a962:	46bd      	mov	sp, r7
 800a964:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a968:	4770      	bx	lr
 800a96a:	bf00      	nop
 800a96c:	feff8fff 	.word	0xfeff8fff
 800a970:	40010000 	.word	0x40010000
 800a974:	40010400 	.word	0x40010400
 800a978:	40014000 	.word	0x40014000
 800a97c:	40014400 	.word	0x40014400
 800a980:	40014800 	.word	0x40014800

0800a984 <TIM_OC5_SetConfig>:
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC5_SetConfig(TIM_TypeDef *TIMx,
                              const TIM_OC_InitTypeDef *OC_Config)
{
 800a984:	b480      	push	{r7}
 800a986:	b087      	sub	sp, #28
 800a988:	af00      	add	r7, sp, #0
 800a98a:	6078      	str	r0, [r7, #4]
 800a98c:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800a98e:	687b      	ldr	r3, [r7, #4]
 800a990:	6a1b      	ldr	r3, [r3, #32]
 800a992:	613b      	str	r3, [r7, #16]

  /* Disable the output: Reset the CCxE Bit */
  TIMx->CCER &= ~TIM_CCER_CC5E;
 800a994:	687b      	ldr	r3, [r7, #4]
 800a996:	6a1b      	ldr	r3, [r3, #32]
 800a998:	f423 3280 	bic.w	r2, r3, #65536	@ 0x10000
 800a99c:	687b      	ldr	r3, [r7, #4]
 800a99e:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800a9a0:	687b      	ldr	r3, [r7, #4]
 800a9a2:	685b      	ldr	r3, [r3, #4]
 800a9a4:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR3;
 800a9a6:	687b      	ldr	r3, [r7, #4]
 800a9a8:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800a9aa:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~(TIM_CCMR3_OC5M);
 800a9ac:	68fa      	ldr	r2, [r7, #12]
 800a9ae:	4b21      	ldr	r3, [pc, #132]	@ (800aa34 <TIM_OC5_SetConfig+0xb0>)
 800a9b0:	4013      	ands	r3, r2
 800a9b2:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 800a9b4:	683b      	ldr	r3, [r7, #0]
 800a9b6:	681b      	ldr	r3, [r3, #0]
 800a9b8:	68fa      	ldr	r2, [r7, #12]
 800a9ba:	4313      	orrs	r3, r2
 800a9bc:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC5P;
 800a9be:	693b      	ldr	r3, [r7, #16]
 800a9c0:	f423 3300 	bic.w	r3, r3, #131072	@ 0x20000
 800a9c4:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 16U);
 800a9c6:	683b      	ldr	r3, [r7, #0]
 800a9c8:	689b      	ldr	r3, [r3, #8]
 800a9ca:	041b      	lsls	r3, r3, #16
 800a9cc:	693a      	ldr	r2, [r7, #16]
 800a9ce:	4313      	orrs	r3, r2
 800a9d0:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800a9d2:	687b      	ldr	r3, [r7, #4]
 800a9d4:	4a18      	ldr	r2, [pc, #96]	@ (800aa38 <TIM_OC5_SetConfig+0xb4>)
 800a9d6:	4293      	cmp	r3, r2
 800a9d8:	d00f      	beq.n	800a9fa <TIM_OC5_SetConfig+0x76>
 800a9da:	687b      	ldr	r3, [r7, #4]
 800a9dc:	4a17      	ldr	r2, [pc, #92]	@ (800aa3c <TIM_OC5_SetConfig+0xb8>)
 800a9de:	4293      	cmp	r3, r2
 800a9e0:	d00b      	beq.n	800a9fa <TIM_OC5_SetConfig+0x76>
 800a9e2:	687b      	ldr	r3, [r7, #4]
 800a9e4:	4a16      	ldr	r2, [pc, #88]	@ (800aa40 <TIM_OC5_SetConfig+0xbc>)
 800a9e6:	4293      	cmp	r3, r2
 800a9e8:	d007      	beq.n	800a9fa <TIM_OC5_SetConfig+0x76>
 800a9ea:	687b      	ldr	r3, [r7, #4]
 800a9ec:	4a15      	ldr	r2, [pc, #84]	@ (800aa44 <TIM_OC5_SetConfig+0xc0>)
 800a9ee:	4293      	cmp	r3, r2
 800a9f0:	d003      	beq.n	800a9fa <TIM_OC5_SetConfig+0x76>
 800a9f2:	687b      	ldr	r3, [r7, #4]
 800a9f4:	4a14      	ldr	r2, [pc, #80]	@ (800aa48 <TIM_OC5_SetConfig+0xc4>)
 800a9f6:	4293      	cmp	r3, r2
 800a9f8:	d109      	bne.n	800aa0e <TIM_OC5_SetConfig+0x8a>
  {
    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS5;
 800a9fa:	697b      	ldr	r3, [r7, #20]
 800a9fc:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 800aa00:	617b      	str	r3, [r7, #20]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 8U);
 800aa02:	683b      	ldr	r3, [r7, #0]
 800aa04:	695b      	ldr	r3, [r3, #20]
 800aa06:	021b      	lsls	r3, r3, #8
 800aa08:	697a      	ldr	r2, [r7, #20]
 800aa0a:	4313      	orrs	r3, r2
 800aa0c:	617b      	str	r3, [r7, #20]
  }
  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800aa0e:	687b      	ldr	r3, [r7, #4]
 800aa10:	697a      	ldr	r2, [r7, #20]
 800aa12:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR3 */
  TIMx->CCMR3 = tmpccmrx;
 800aa14:	687b      	ldr	r3, [r7, #4]
 800aa16:	68fa      	ldr	r2, [r7, #12]
 800aa18:	655a      	str	r2, [r3, #84]	@ 0x54

  /* Set the Capture Compare Register value */
  TIMx->CCR5 = OC_Config->Pulse;
 800aa1a:	683b      	ldr	r3, [r7, #0]
 800aa1c:	685a      	ldr	r2, [r3, #4]
 800aa1e:	687b      	ldr	r3, [r7, #4]
 800aa20:	659a      	str	r2, [r3, #88]	@ 0x58

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800aa22:	687b      	ldr	r3, [r7, #4]
 800aa24:	693a      	ldr	r2, [r7, #16]
 800aa26:	621a      	str	r2, [r3, #32]
}
 800aa28:	bf00      	nop
 800aa2a:	371c      	adds	r7, #28
 800aa2c:	46bd      	mov	sp, r7
 800aa2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aa32:	4770      	bx	lr
 800aa34:	fffeff8f 	.word	0xfffeff8f
 800aa38:	40010000 	.word	0x40010000
 800aa3c:	40010400 	.word	0x40010400
 800aa40:	40014000 	.word	0x40014000
 800aa44:	40014400 	.word	0x40014400
 800aa48:	40014800 	.word	0x40014800

0800aa4c <TIM_OC6_SetConfig>:
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC6_SetConfig(TIM_TypeDef *TIMx,
                              const TIM_OC_InitTypeDef *OC_Config)
{
 800aa4c:	b480      	push	{r7}
 800aa4e:	b087      	sub	sp, #28
 800aa50:	af00      	add	r7, sp, #0
 800aa52:	6078      	str	r0, [r7, #4]
 800aa54:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 800aa56:	687b      	ldr	r3, [r7, #4]
 800aa58:	6a1b      	ldr	r3, [r3, #32]
 800aa5a:	613b      	str	r3, [r7, #16]

  /* Disable the output: Reset the CCxE Bit */
  TIMx->CCER &= ~TIM_CCER_CC6E;
 800aa5c:	687b      	ldr	r3, [r7, #4]
 800aa5e:	6a1b      	ldr	r3, [r3, #32]
 800aa60:	f423 1280 	bic.w	r2, r3, #1048576	@ 0x100000
 800aa64:	687b      	ldr	r3, [r7, #4]
 800aa66:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 800aa68:	687b      	ldr	r3, [r7, #4]
 800aa6a:	685b      	ldr	r3, [r3, #4]
 800aa6c:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR3;
 800aa6e:	687b      	ldr	r3, [r7, #4]
 800aa70:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800aa72:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~(TIM_CCMR3_OC6M);
 800aa74:	68fa      	ldr	r2, [r7, #12]
 800aa76:	4b22      	ldr	r3, [pc, #136]	@ (800ab00 <TIM_OC6_SetConfig+0xb4>)
 800aa78:	4013      	ands	r3, r2
 800aa7a:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800aa7c:	683b      	ldr	r3, [r7, #0]
 800aa7e:	681b      	ldr	r3, [r3, #0]
 800aa80:	021b      	lsls	r3, r3, #8
 800aa82:	68fa      	ldr	r2, [r7, #12]
 800aa84:	4313      	orrs	r3, r2
 800aa86:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= (uint32_t)~TIM_CCER_CC6P;
 800aa88:	693b      	ldr	r3, [r7, #16]
 800aa8a:	f423 1300 	bic.w	r3, r3, #2097152	@ 0x200000
 800aa8e:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 20U);
 800aa90:	683b      	ldr	r3, [r7, #0]
 800aa92:	689b      	ldr	r3, [r3, #8]
 800aa94:	051b      	lsls	r3, r3, #20
 800aa96:	693a      	ldr	r2, [r7, #16]
 800aa98:	4313      	orrs	r3, r2
 800aa9a:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 800aa9c:	687b      	ldr	r3, [r7, #4]
 800aa9e:	4a19      	ldr	r2, [pc, #100]	@ (800ab04 <TIM_OC6_SetConfig+0xb8>)
 800aaa0:	4293      	cmp	r3, r2
 800aaa2:	d00f      	beq.n	800aac4 <TIM_OC6_SetConfig+0x78>
 800aaa4:	687b      	ldr	r3, [r7, #4]
 800aaa6:	4a18      	ldr	r2, [pc, #96]	@ (800ab08 <TIM_OC6_SetConfig+0xbc>)
 800aaa8:	4293      	cmp	r3, r2
 800aaaa:	d00b      	beq.n	800aac4 <TIM_OC6_SetConfig+0x78>
 800aaac:	687b      	ldr	r3, [r7, #4]
 800aaae:	4a17      	ldr	r2, [pc, #92]	@ (800ab0c <TIM_OC6_SetConfig+0xc0>)
 800aab0:	4293      	cmp	r3, r2
 800aab2:	d007      	beq.n	800aac4 <TIM_OC6_SetConfig+0x78>
 800aab4:	687b      	ldr	r3, [r7, #4]
 800aab6:	4a16      	ldr	r2, [pc, #88]	@ (800ab10 <TIM_OC6_SetConfig+0xc4>)
 800aab8:	4293      	cmp	r3, r2
 800aaba:	d003      	beq.n	800aac4 <TIM_OC6_SetConfig+0x78>
 800aabc:	687b      	ldr	r3, [r7, #4]
 800aabe:	4a15      	ldr	r2, [pc, #84]	@ (800ab14 <TIM_OC6_SetConfig+0xc8>)
 800aac0:	4293      	cmp	r3, r2
 800aac2:	d109      	bne.n	800aad8 <TIM_OC6_SetConfig+0x8c>
  {
    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS6;
 800aac4:	697b      	ldr	r3, [r7, #20]
 800aac6:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800aaca:	617b      	str	r3, [r7, #20]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 10U);
 800aacc:	683b      	ldr	r3, [r7, #0]
 800aace:	695b      	ldr	r3, [r3, #20]
 800aad0:	029b      	lsls	r3, r3, #10
 800aad2:	697a      	ldr	r2, [r7, #20]
 800aad4:	4313      	orrs	r3, r2
 800aad6:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 800aad8:	687b      	ldr	r3, [r7, #4]
 800aada:	697a      	ldr	r2, [r7, #20]
 800aadc:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR3 */
  TIMx->CCMR3 = tmpccmrx;
 800aade:	687b      	ldr	r3, [r7, #4]
 800aae0:	68fa      	ldr	r2, [r7, #12]
 800aae2:	655a      	str	r2, [r3, #84]	@ 0x54

  /* Set the Capture Compare Register value */
  TIMx->CCR6 = OC_Config->Pulse;
 800aae4:	683b      	ldr	r3, [r7, #0]
 800aae6:	685a      	ldr	r2, [r3, #4]
 800aae8:	687b      	ldr	r3, [r7, #4]
 800aaea:	65da      	str	r2, [r3, #92]	@ 0x5c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 800aaec:	687b      	ldr	r3, [r7, #4]
 800aaee:	693a      	ldr	r2, [r7, #16]
 800aaf0:	621a      	str	r2, [r3, #32]
}
 800aaf2:	bf00      	nop
 800aaf4:	371c      	adds	r7, #28
 800aaf6:	46bd      	mov	sp, r7
 800aaf8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aafc:	4770      	bx	lr
 800aafe:	bf00      	nop
 800ab00:	feff8fff 	.word	0xfeff8fff
 800ab04:	40010000 	.word	0x40010000
 800ab08:	40010400 	.word	0x40010400
 800ab0c:	40014000 	.word	0x40014000
 800ab10:	40014400 	.word	0x40014400
 800ab14:	40014800 	.word	0x40014800

0800ab18 <TIM_CCxChannelCmd>:
  * @param  ChannelState specifies the TIM Channel CCxE bit new state.
  *          This parameter can be: TIM_CCx_ENABLE or TIM_CCx_DISABLE.
  * @retval None
  */
void TIM_CCxChannelCmd(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ChannelState)
{
 800ab18:	b480      	push	{r7}
 800ab1a:	b087      	sub	sp, #28
 800ab1c:	af00      	add	r7, sp, #0
 800ab1e:	60f8      	str	r0, [r7, #12]
 800ab20:	60b9      	str	r1, [r7, #8]
 800ab22:	607a      	str	r2, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_CC1_INSTANCE(TIMx));
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 800ab24:	68bb      	ldr	r3, [r7, #8]
 800ab26:	f003 031f 	and.w	r3, r3, #31
 800ab2a:	2201      	movs	r2, #1
 800ab2c:	fa02 f303 	lsl.w	r3, r2, r3
 800ab30:	617b      	str	r3, [r7, #20]

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 800ab32:	68fb      	ldr	r3, [r7, #12]
 800ab34:	6a1a      	ldr	r2, [r3, #32]
 800ab36:	697b      	ldr	r3, [r7, #20]
 800ab38:	43db      	mvns	r3, r3
 800ab3a:	401a      	ands	r2, r3
 800ab3c:	68fb      	ldr	r3, [r7, #12]
 800ab3e:	621a      	str	r2, [r3, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 800ab40:	68fb      	ldr	r3, [r7, #12]
 800ab42:	6a1a      	ldr	r2, [r3, #32]
 800ab44:	68bb      	ldr	r3, [r7, #8]
 800ab46:	f003 031f 	and.w	r3, r3, #31
 800ab4a:	6879      	ldr	r1, [r7, #4]
 800ab4c:	fa01 f303 	lsl.w	r3, r1, r3
 800ab50:	431a      	orrs	r2, r3
 800ab52:	68fb      	ldr	r3, [r7, #12]
 800ab54:	621a      	str	r2, [r3, #32]
}
 800ab56:	bf00      	nop
 800ab58:	371c      	adds	r7, #28
 800ab5a:	46bd      	mov	sp, r7
 800ab5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ab60:	4770      	bx	lr

0800ab62 <HAL_UART_Init>:
  *        parameters in the UART_InitTypeDef and initialize the associated handle.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 800ab62:	b580      	push	{r7, lr}
 800ab64:	b082      	sub	sp, #8
 800ab66:	af00      	add	r7, sp, #0
 800ab68:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 800ab6a:	687b      	ldr	r3, [r7, #4]
 800ab6c:	2b00      	cmp	r3, #0
 800ab6e:	d101      	bne.n	800ab74 <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 800ab70:	2301      	movs	r3, #1
 800ab72:	e042      	b.n	800abfa <HAL_UART_Init+0x98>
  {
    /* Check the parameters */
    assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
  }

  if (huart->gState == HAL_UART_STATE_RESET)
 800ab74:	687b      	ldr	r3, [r7, #4]
 800ab76:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800ab7a:	2b00      	cmp	r3, #0
 800ab7c:	d106      	bne.n	800ab8c <HAL_UART_Init+0x2a>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 800ab7e:	687b      	ldr	r3, [r7, #4]
 800ab80:	2200      	movs	r2, #0
 800ab82:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 800ab86:	6878      	ldr	r0, [r7, #4]
 800ab88:	f7f7 f8b4 	bl	8001cf4 <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 800ab8c:	687b      	ldr	r3, [r7, #4]
 800ab8e:	2224      	movs	r2, #36	@ 0x24
 800ab90:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  __HAL_UART_DISABLE(huart);
 800ab94:	687b      	ldr	r3, [r7, #4]
 800ab96:	681b      	ldr	r3, [r3, #0]
 800ab98:	681a      	ldr	r2, [r3, #0]
 800ab9a:	687b      	ldr	r3, [r7, #4]
 800ab9c:	681b      	ldr	r3, [r3, #0]
 800ab9e:	f022 0201 	bic.w	r2, r2, #1
 800aba2:	601a      	str	r2, [r3, #0]

  /* Perform advanced settings configuration */
  /* For some items, configuration requires to be done prior TE and RE bits are set */
  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 800aba4:	687b      	ldr	r3, [r7, #4]
 800aba6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800aba8:	2b00      	cmp	r3, #0
 800abaa:	d002      	beq.n	800abb2 <HAL_UART_Init+0x50>
  {
    UART_AdvFeatureConfig(huart);
 800abac:	6878      	ldr	r0, [r7, #4]
 800abae:	f000 ff23 	bl	800b9f8 <UART_AdvFeatureConfig>
  }

  /* Set the UART Communication parameters */
  if (UART_SetConfig(huart) == HAL_ERROR)
 800abb2:	6878      	ldr	r0, [r7, #4]
 800abb4:	f000 f8b4 	bl	800ad20 <UART_SetConfig>
 800abb8:	4603      	mov	r3, r0
 800abba:	2b01      	cmp	r3, #1
 800abbc:	d101      	bne.n	800abc2 <HAL_UART_Init+0x60>
  {
    return HAL_ERROR;
 800abbe:	2301      	movs	r3, #1
 800abc0:	e01b      	b.n	800abfa <HAL_UART_Init+0x98>
  }

  /* In asynchronous mode, the following bits must be kept cleared:
  - LINEN and CLKEN bits in the USART_CR2 register,
  - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 800abc2:	687b      	ldr	r3, [r7, #4]
 800abc4:	681b      	ldr	r3, [r3, #0]
 800abc6:	685a      	ldr	r2, [r3, #4]
 800abc8:	687b      	ldr	r3, [r7, #4]
 800abca:	681b      	ldr	r3, [r3, #0]
 800abcc:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 800abd0:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 800abd2:	687b      	ldr	r3, [r7, #4]
 800abd4:	681b      	ldr	r3, [r3, #0]
 800abd6:	689a      	ldr	r2, [r3, #8]
 800abd8:	687b      	ldr	r3, [r7, #4]
 800abda:	681b      	ldr	r3, [r3, #0]
 800abdc:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 800abe0:	609a      	str	r2, [r3, #8]

  __HAL_UART_ENABLE(huart);
 800abe2:	687b      	ldr	r3, [r7, #4]
 800abe4:	681b      	ldr	r3, [r3, #0]
 800abe6:	681a      	ldr	r2, [r3, #0]
 800abe8:	687b      	ldr	r3, [r7, #4]
 800abea:	681b      	ldr	r3, [r3, #0]
 800abec:	f042 0201 	orr.w	r2, r2, #1
 800abf0:	601a      	str	r2, [r3, #0]

  /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
  return (UART_CheckIdleState(huart));
 800abf2:	6878      	ldr	r0, [r7, #4]
 800abf4:	f000 ffa2 	bl	800bb3c <UART_CheckIdleState>
 800abf8:	4603      	mov	r3, r0
}
 800abfa:	4618      	mov	r0, r3
 800abfc:	3708      	adds	r7, #8
 800abfe:	46bd      	mov	sp, r7
 800ac00:	bd80      	pop	{r7, pc}

0800ac02 <HAL_UART_Transmit>:
  * @param Size    Amount of data elements (u8 or u16) to be sent.
  * @param Timeout Timeout duration.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, const uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 800ac02:	b580      	push	{r7, lr}
 800ac04:	b08a      	sub	sp, #40	@ 0x28
 800ac06:	af02      	add	r7, sp, #8
 800ac08:	60f8      	str	r0, [r7, #12]
 800ac0a:	60b9      	str	r1, [r7, #8]
 800ac0c:	603b      	str	r3, [r7, #0]
 800ac0e:	4613      	mov	r3, r2
 800ac10:	80fb      	strh	r3, [r7, #6]
  const uint8_t  *pdata8bits;
  const uint16_t *pdata16bits;
  uint32_t tickstart;

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 800ac12:	68fb      	ldr	r3, [r7, #12]
 800ac14:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800ac18:	2b20      	cmp	r3, #32
 800ac1a:	d17b      	bne.n	800ad14 <HAL_UART_Transmit+0x112>
  {
    if ((pData == NULL) || (Size == 0U))
 800ac1c:	68bb      	ldr	r3, [r7, #8]
 800ac1e:	2b00      	cmp	r3, #0
 800ac20:	d002      	beq.n	800ac28 <HAL_UART_Transmit+0x26>
 800ac22:	88fb      	ldrh	r3, [r7, #6]
 800ac24:	2b00      	cmp	r3, #0
 800ac26:	d101      	bne.n	800ac2c <HAL_UART_Transmit+0x2a>
    {
      return  HAL_ERROR;
 800ac28:	2301      	movs	r3, #1
 800ac2a:	e074      	b.n	800ad16 <HAL_UART_Transmit+0x114>
    }

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 800ac2c:	68fb      	ldr	r3, [r7, #12]
 800ac2e:	2200      	movs	r2, #0
 800ac30:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90
    huart->gState = HAL_UART_STATE_BUSY_TX;
 800ac34:	68fb      	ldr	r3, [r7, #12]
 800ac36:	2221      	movs	r2, #33	@ 0x21
 800ac38:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

    /* Init tickstart for timeout management */
    tickstart = HAL_GetTick();
 800ac3c:	f7f8 faa0 	bl	8003180 <HAL_GetTick>
 800ac40:	6178      	str	r0, [r7, #20]

    huart->TxXferSize  = Size;
 800ac42:	68fb      	ldr	r3, [r7, #12]
 800ac44:	88fa      	ldrh	r2, [r7, #6]
 800ac46:	f8a3 2054 	strh.w	r2, [r3, #84]	@ 0x54
    huart->TxXferCount = Size;
 800ac4a:	68fb      	ldr	r3, [r7, #12]
 800ac4c:	88fa      	ldrh	r2, [r7, #6]
 800ac4e:	f8a3 2056 	strh.w	r2, [r3, #86]	@ 0x56

    /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 800ac52:	68fb      	ldr	r3, [r7, #12]
 800ac54:	689b      	ldr	r3, [r3, #8]
 800ac56:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800ac5a:	d108      	bne.n	800ac6e <HAL_UART_Transmit+0x6c>
 800ac5c:	68fb      	ldr	r3, [r7, #12]
 800ac5e:	691b      	ldr	r3, [r3, #16]
 800ac60:	2b00      	cmp	r3, #0
 800ac62:	d104      	bne.n	800ac6e <HAL_UART_Transmit+0x6c>
    {
      pdata8bits  = NULL;
 800ac64:	2300      	movs	r3, #0
 800ac66:	61fb      	str	r3, [r7, #28]
      pdata16bits = (const uint16_t *) pData;
 800ac68:	68bb      	ldr	r3, [r7, #8]
 800ac6a:	61bb      	str	r3, [r7, #24]
 800ac6c:	e003      	b.n	800ac76 <HAL_UART_Transmit+0x74>
    }
    else
    {
      pdata8bits  = pData;
 800ac6e:	68bb      	ldr	r3, [r7, #8]
 800ac70:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 800ac72:	2300      	movs	r3, #0
 800ac74:	61bb      	str	r3, [r7, #24]
    }

    while (huart->TxXferCount > 0U)
 800ac76:	e030      	b.n	800acda <HAL_UART_Transmit+0xd8>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 800ac78:	683b      	ldr	r3, [r7, #0]
 800ac7a:	9300      	str	r3, [sp, #0]
 800ac7c:	697b      	ldr	r3, [r7, #20]
 800ac7e:	2200      	movs	r2, #0
 800ac80:	2180      	movs	r1, #128	@ 0x80
 800ac82:	68f8      	ldr	r0, [r7, #12]
 800ac84:	f001 f804 	bl	800bc90 <UART_WaitOnFlagUntilTimeout>
 800ac88:	4603      	mov	r3, r0
 800ac8a:	2b00      	cmp	r3, #0
 800ac8c:	d005      	beq.n	800ac9a <HAL_UART_Transmit+0x98>
      {

        huart->gState = HAL_UART_STATE_READY;
 800ac8e:	68fb      	ldr	r3, [r7, #12]
 800ac90:	2220      	movs	r2, #32
 800ac92:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

        return HAL_TIMEOUT;
 800ac96:	2303      	movs	r3, #3
 800ac98:	e03d      	b.n	800ad16 <HAL_UART_Transmit+0x114>
      }
      if (pdata8bits == NULL)
 800ac9a:	69fb      	ldr	r3, [r7, #28]
 800ac9c:	2b00      	cmp	r3, #0
 800ac9e:	d10b      	bne.n	800acb8 <HAL_UART_Transmit+0xb6>
      {
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 800aca0:	69bb      	ldr	r3, [r7, #24]
 800aca2:	881b      	ldrh	r3, [r3, #0]
 800aca4:	461a      	mov	r2, r3
 800aca6:	68fb      	ldr	r3, [r7, #12]
 800aca8:	681b      	ldr	r3, [r3, #0]
 800acaa:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800acae:	629a      	str	r2, [r3, #40]	@ 0x28
        pdata16bits++;
 800acb0:	69bb      	ldr	r3, [r7, #24]
 800acb2:	3302      	adds	r3, #2
 800acb4:	61bb      	str	r3, [r7, #24]
 800acb6:	e007      	b.n	800acc8 <HAL_UART_Transmit+0xc6>
      }
      else
      {
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 800acb8:	69fb      	ldr	r3, [r7, #28]
 800acba:	781a      	ldrb	r2, [r3, #0]
 800acbc:	68fb      	ldr	r3, [r7, #12]
 800acbe:	681b      	ldr	r3, [r3, #0]
 800acc0:	629a      	str	r2, [r3, #40]	@ 0x28
        pdata8bits++;
 800acc2:	69fb      	ldr	r3, [r7, #28]
 800acc4:	3301      	adds	r3, #1
 800acc6:	61fb      	str	r3, [r7, #28]
      }
      huart->TxXferCount--;
 800acc8:	68fb      	ldr	r3, [r7, #12]
 800acca:	f8b3 3056 	ldrh.w	r3, [r3, #86]	@ 0x56
 800acce:	b29b      	uxth	r3, r3
 800acd0:	3b01      	subs	r3, #1
 800acd2:	b29a      	uxth	r2, r3
 800acd4:	68fb      	ldr	r3, [r7, #12]
 800acd6:	f8a3 2056 	strh.w	r2, [r3, #86]	@ 0x56
    while (huart->TxXferCount > 0U)
 800acda:	68fb      	ldr	r3, [r7, #12]
 800acdc:	f8b3 3056 	ldrh.w	r3, [r3, #86]	@ 0x56
 800ace0:	b29b      	uxth	r3, r3
 800ace2:	2b00      	cmp	r3, #0
 800ace4:	d1c8      	bne.n	800ac78 <HAL_UART_Transmit+0x76>
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 800ace6:	683b      	ldr	r3, [r7, #0]
 800ace8:	9300      	str	r3, [sp, #0]
 800acea:	697b      	ldr	r3, [r7, #20]
 800acec:	2200      	movs	r2, #0
 800acee:	2140      	movs	r1, #64	@ 0x40
 800acf0:	68f8      	ldr	r0, [r7, #12]
 800acf2:	f000 ffcd 	bl	800bc90 <UART_WaitOnFlagUntilTimeout>
 800acf6:	4603      	mov	r3, r0
 800acf8:	2b00      	cmp	r3, #0
 800acfa:	d005      	beq.n	800ad08 <HAL_UART_Transmit+0x106>
    {
      huart->gState = HAL_UART_STATE_READY;
 800acfc:	68fb      	ldr	r3, [r7, #12]
 800acfe:	2220      	movs	r2, #32
 800ad00:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

      return HAL_TIMEOUT;
 800ad04:	2303      	movs	r3, #3
 800ad06:	e006      	b.n	800ad16 <HAL_UART_Transmit+0x114>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
 800ad08:	68fb      	ldr	r3, [r7, #12]
 800ad0a:	2220      	movs	r2, #32
 800ad0c:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

    return HAL_OK;
 800ad10:	2300      	movs	r3, #0
 800ad12:	e000      	b.n	800ad16 <HAL_UART_Transmit+0x114>
  }
  else
  {
    return HAL_BUSY;
 800ad14:	2302      	movs	r3, #2
  }
}
 800ad16:	4618      	mov	r0, r3
 800ad18:	3720      	adds	r7, #32
 800ad1a:	46bd      	mov	sp, r7
 800ad1c:	bd80      	pop	{r7, pc}
	...

0800ad20 <UART_SetConfig>:
  * @brief Configure the UART peripheral.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
{
 800ad20:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800ad24:	b092      	sub	sp, #72	@ 0x48
 800ad26:	af00      	add	r7, sp, #0
 800ad28:	6178      	str	r0, [r7, #20]
  uint32_t tmpreg;
  uint16_t brrtemp;
  UART_ClockSourceTypeDef clocksource;
  uint32_t usartdiv;
  HAL_StatusTypeDef ret               = HAL_OK;
 800ad2a:	2300      	movs	r3, #0
 800ad2c:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 800ad30:	697b      	ldr	r3, [r7, #20]
 800ad32:	689a      	ldr	r2, [r3, #8]
 800ad34:	697b      	ldr	r3, [r7, #20]
 800ad36:	691b      	ldr	r3, [r3, #16]
 800ad38:	431a      	orrs	r2, r3
 800ad3a:	697b      	ldr	r3, [r7, #20]
 800ad3c:	695b      	ldr	r3, [r3, #20]
 800ad3e:	431a      	orrs	r2, r3
 800ad40:	697b      	ldr	r3, [r7, #20]
 800ad42:	69db      	ldr	r3, [r3, #28]
 800ad44:	4313      	orrs	r3, r2
 800ad46:	647b      	str	r3, [r7, #68]	@ 0x44
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 800ad48:	697b      	ldr	r3, [r7, #20]
 800ad4a:	681b      	ldr	r3, [r3, #0]
 800ad4c:	681a      	ldr	r2, [r3, #0]
 800ad4e:	4bbe      	ldr	r3, [pc, #760]	@ (800b048 <UART_SetConfig+0x328>)
 800ad50:	4013      	ands	r3, r2
 800ad52:	697a      	ldr	r2, [r7, #20]
 800ad54:	6812      	ldr	r2, [r2, #0]
 800ad56:	6c79      	ldr	r1, [r7, #68]	@ 0x44
 800ad58:	430b      	orrs	r3, r1
 800ad5a:	6013      	str	r3, [r2, #0]

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits according
  * to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 800ad5c:	697b      	ldr	r3, [r7, #20]
 800ad5e:	681b      	ldr	r3, [r3, #0]
 800ad60:	685b      	ldr	r3, [r3, #4]
 800ad62:	f423 5140 	bic.w	r1, r3, #12288	@ 0x3000
 800ad66:	697b      	ldr	r3, [r7, #20]
 800ad68:	68da      	ldr	r2, [r3, #12]
 800ad6a:	697b      	ldr	r3, [r7, #20]
 800ad6c:	681b      	ldr	r3, [r3, #0]
 800ad6e:	430a      	orrs	r2, r1
 800ad70:	605a      	str	r2, [r3, #4]
  /* Configure
  * - UART HardWare Flow Control: set CTSE and RTSE bits according
  *   to huart->Init.HwFlowCtl value
  * - one-bit sampling method versus three samples' majority rule according
  *   to huart->Init.OneBitSampling (not applicable to LPUART) */
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 800ad72:	697b      	ldr	r3, [r7, #20]
 800ad74:	699b      	ldr	r3, [r3, #24]
 800ad76:	647b      	str	r3, [r7, #68]	@ 0x44

  if (!(UART_INSTANCE_LOWPOWER(huart)))
 800ad78:	697b      	ldr	r3, [r7, #20]
 800ad7a:	681b      	ldr	r3, [r3, #0]
 800ad7c:	4ab3      	ldr	r2, [pc, #716]	@ (800b04c <UART_SetConfig+0x32c>)
 800ad7e:	4293      	cmp	r3, r2
 800ad80:	d004      	beq.n	800ad8c <UART_SetConfig+0x6c>
  {
    tmpreg |= huart->Init.OneBitSampling;
 800ad82:	697b      	ldr	r3, [r7, #20]
 800ad84:	6a1b      	ldr	r3, [r3, #32]
 800ad86:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800ad88:	4313      	orrs	r3, r2
 800ad8a:	647b      	str	r3, [r7, #68]	@ 0x44
  }
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 800ad8c:	697b      	ldr	r3, [r7, #20]
 800ad8e:	681b      	ldr	r3, [r3, #0]
 800ad90:	689a      	ldr	r2, [r3, #8]
 800ad92:	4baf      	ldr	r3, [pc, #700]	@ (800b050 <UART_SetConfig+0x330>)
 800ad94:	4013      	ands	r3, r2
 800ad96:	697a      	ldr	r2, [r7, #20]
 800ad98:	6812      	ldr	r2, [r2, #0]
 800ad9a:	6c79      	ldr	r1, [r7, #68]	@ 0x44
 800ad9c:	430b      	orrs	r3, r1
 800ad9e:	6093      	str	r3, [r2, #8]

  /*-------------------------- USART PRESC Configuration -----------------------*/
  /* Configure
  * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
  MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
 800ada0:	697b      	ldr	r3, [r7, #20]
 800ada2:	681b      	ldr	r3, [r3, #0]
 800ada4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800ada6:	f023 010f 	bic.w	r1, r3, #15
 800adaa:	697b      	ldr	r3, [r7, #20]
 800adac:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 800adae:	697b      	ldr	r3, [r7, #20]
 800adb0:	681b      	ldr	r3, [r3, #0]
 800adb2:	430a      	orrs	r2, r1
 800adb4:	62da      	str	r2, [r3, #44]	@ 0x2c

  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
 800adb6:	697b      	ldr	r3, [r7, #20]
 800adb8:	681b      	ldr	r3, [r3, #0]
 800adba:	4aa6      	ldr	r2, [pc, #664]	@ (800b054 <UART_SetConfig+0x334>)
 800adbc:	4293      	cmp	r3, r2
 800adbe:	d177      	bne.n	800aeb0 <UART_SetConfig+0x190>
 800adc0:	4ba5      	ldr	r3, [pc, #660]	@ (800b058 <UART_SetConfig+0x338>)
 800adc2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800adc4:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 800adc8:	2b28      	cmp	r3, #40	@ 0x28
 800adca:	d86d      	bhi.n	800aea8 <UART_SetConfig+0x188>
 800adcc:	a201      	add	r2, pc, #4	@ (adr r2, 800add4 <UART_SetConfig+0xb4>)
 800adce:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800add2:	bf00      	nop
 800add4:	0800ae79 	.word	0x0800ae79
 800add8:	0800aea9 	.word	0x0800aea9
 800addc:	0800aea9 	.word	0x0800aea9
 800ade0:	0800aea9 	.word	0x0800aea9
 800ade4:	0800aea9 	.word	0x0800aea9
 800ade8:	0800aea9 	.word	0x0800aea9
 800adec:	0800aea9 	.word	0x0800aea9
 800adf0:	0800aea9 	.word	0x0800aea9
 800adf4:	0800ae81 	.word	0x0800ae81
 800adf8:	0800aea9 	.word	0x0800aea9
 800adfc:	0800aea9 	.word	0x0800aea9
 800ae00:	0800aea9 	.word	0x0800aea9
 800ae04:	0800aea9 	.word	0x0800aea9
 800ae08:	0800aea9 	.word	0x0800aea9
 800ae0c:	0800aea9 	.word	0x0800aea9
 800ae10:	0800aea9 	.word	0x0800aea9
 800ae14:	0800ae89 	.word	0x0800ae89
 800ae18:	0800aea9 	.word	0x0800aea9
 800ae1c:	0800aea9 	.word	0x0800aea9
 800ae20:	0800aea9 	.word	0x0800aea9
 800ae24:	0800aea9 	.word	0x0800aea9
 800ae28:	0800aea9 	.word	0x0800aea9
 800ae2c:	0800aea9 	.word	0x0800aea9
 800ae30:	0800aea9 	.word	0x0800aea9
 800ae34:	0800ae91 	.word	0x0800ae91
 800ae38:	0800aea9 	.word	0x0800aea9
 800ae3c:	0800aea9 	.word	0x0800aea9
 800ae40:	0800aea9 	.word	0x0800aea9
 800ae44:	0800aea9 	.word	0x0800aea9
 800ae48:	0800aea9 	.word	0x0800aea9
 800ae4c:	0800aea9 	.word	0x0800aea9
 800ae50:	0800aea9 	.word	0x0800aea9
 800ae54:	0800ae99 	.word	0x0800ae99
 800ae58:	0800aea9 	.word	0x0800aea9
 800ae5c:	0800aea9 	.word	0x0800aea9
 800ae60:	0800aea9 	.word	0x0800aea9
 800ae64:	0800aea9 	.word	0x0800aea9
 800ae68:	0800aea9 	.word	0x0800aea9
 800ae6c:	0800aea9 	.word	0x0800aea9
 800ae70:	0800aea9 	.word	0x0800aea9
 800ae74:	0800aea1 	.word	0x0800aea1
 800ae78:	2301      	movs	r3, #1
 800ae7a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800ae7e:	e326      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800ae80:	2304      	movs	r3, #4
 800ae82:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800ae86:	e322      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800ae88:	2308      	movs	r3, #8
 800ae8a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800ae8e:	e31e      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800ae90:	2310      	movs	r3, #16
 800ae92:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800ae96:	e31a      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800ae98:	2320      	movs	r3, #32
 800ae9a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800ae9e:	e316      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800aea0:	2340      	movs	r3, #64	@ 0x40
 800aea2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800aea6:	e312      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800aea8:	2380      	movs	r3, #128	@ 0x80
 800aeaa:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800aeae:	e30e      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800aeb0:	697b      	ldr	r3, [r7, #20]
 800aeb2:	681b      	ldr	r3, [r3, #0]
 800aeb4:	4a69      	ldr	r2, [pc, #420]	@ (800b05c <UART_SetConfig+0x33c>)
 800aeb6:	4293      	cmp	r3, r2
 800aeb8:	d130      	bne.n	800af1c <UART_SetConfig+0x1fc>
 800aeba:	4b67      	ldr	r3, [pc, #412]	@ (800b058 <UART_SetConfig+0x338>)
 800aebc:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800aebe:	f003 0307 	and.w	r3, r3, #7
 800aec2:	2b05      	cmp	r3, #5
 800aec4:	d826      	bhi.n	800af14 <UART_SetConfig+0x1f4>
 800aec6:	a201      	add	r2, pc, #4	@ (adr r2, 800aecc <UART_SetConfig+0x1ac>)
 800aec8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800aecc:	0800aee5 	.word	0x0800aee5
 800aed0:	0800aeed 	.word	0x0800aeed
 800aed4:	0800aef5 	.word	0x0800aef5
 800aed8:	0800aefd 	.word	0x0800aefd
 800aedc:	0800af05 	.word	0x0800af05
 800aee0:	0800af0d 	.word	0x0800af0d
 800aee4:	2300      	movs	r3, #0
 800aee6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800aeea:	e2f0      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800aeec:	2304      	movs	r3, #4
 800aeee:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800aef2:	e2ec      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800aef4:	2308      	movs	r3, #8
 800aef6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800aefa:	e2e8      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800aefc:	2310      	movs	r3, #16
 800aefe:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800af02:	e2e4      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800af04:	2320      	movs	r3, #32
 800af06:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800af0a:	e2e0      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800af0c:	2340      	movs	r3, #64	@ 0x40
 800af0e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800af12:	e2dc      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800af14:	2380      	movs	r3, #128	@ 0x80
 800af16:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800af1a:	e2d8      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800af1c:	697b      	ldr	r3, [r7, #20]
 800af1e:	681b      	ldr	r3, [r3, #0]
 800af20:	4a4f      	ldr	r2, [pc, #316]	@ (800b060 <UART_SetConfig+0x340>)
 800af22:	4293      	cmp	r3, r2
 800af24:	d130      	bne.n	800af88 <UART_SetConfig+0x268>
 800af26:	4b4c      	ldr	r3, [pc, #304]	@ (800b058 <UART_SetConfig+0x338>)
 800af28:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800af2a:	f003 0307 	and.w	r3, r3, #7
 800af2e:	2b05      	cmp	r3, #5
 800af30:	d826      	bhi.n	800af80 <UART_SetConfig+0x260>
 800af32:	a201      	add	r2, pc, #4	@ (adr r2, 800af38 <UART_SetConfig+0x218>)
 800af34:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800af38:	0800af51 	.word	0x0800af51
 800af3c:	0800af59 	.word	0x0800af59
 800af40:	0800af61 	.word	0x0800af61
 800af44:	0800af69 	.word	0x0800af69
 800af48:	0800af71 	.word	0x0800af71
 800af4c:	0800af79 	.word	0x0800af79
 800af50:	2300      	movs	r3, #0
 800af52:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800af56:	e2ba      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800af58:	2304      	movs	r3, #4
 800af5a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800af5e:	e2b6      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800af60:	2308      	movs	r3, #8
 800af62:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800af66:	e2b2      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800af68:	2310      	movs	r3, #16
 800af6a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800af6e:	e2ae      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800af70:	2320      	movs	r3, #32
 800af72:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800af76:	e2aa      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800af78:	2340      	movs	r3, #64	@ 0x40
 800af7a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800af7e:	e2a6      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800af80:	2380      	movs	r3, #128	@ 0x80
 800af82:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800af86:	e2a2      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800af88:	697b      	ldr	r3, [r7, #20]
 800af8a:	681b      	ldr	r3, [r3, #0]
 800af8c:	4a35      	ldr	r2, [pc, #212]	@ (800b064 <UART_SetConfig+0x344>)
 800af8e:	4293      	cmp	r3, r2
 800af90:	d130      	bne.n	800aff4 <UART_SetConfig+0x2d4>
 800af92:	4b31      	ldr	r3, [pc, #196]	@ (800b058 <UART_SetConfig+0x338>)
 800af94:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800af96:	f003 0307 	and.w	r3, r3, #7
 800af9a:	2b05      	cmp	r3, #5
 800af9c:	d826      	bhi.n	800afec <UART_SetConfig+0x2cc>
 800af9e:	a201      	add	r2, pc, #4	@ (adr r2, 800afa4 <UART_SetConfig+0x284>)
 800afa0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800afa4:	0800afbd 	.word	0x0800afbd
 800afa8:	0800afc5 	.word	0x0800afc5
 800afac:	0800afcd 	.word	0x0800afcd
 800afb0:	0800afd5 	.word	0x0800afd5
 800afb4:	0800afdd 	.word	0x0800afdd
 800afb8:	0800afe5 	.word	0x0800afe5
 800afbc:	2300      	movs	r3, #0
 800afbe:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800afc2:	e284      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800afc4:	2304      	movs	r3, #4
 800afc6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800afca:	e280      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800afcc:	2308      	movs	r3, #8
 800afce:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800afd2:	e27c      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800afd4:	2310      	movs	r3, #16
 800afd6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800afda:	e278      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800afdc:	2320      	movs	r3, #32
 800afde:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800afe2:	e274      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800afe4:	2340      	movs	r3, #64	@ 0x40
 800afe6:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800afea:	e270      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800afec:	2380      	movs	r3, #128	@ 0x80
 800afee:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800aff2:	e26c      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800aff4:	697b      	ldr	r3, [r7, #20]
 800aff6:	681b      	ldr	r3, [r3, #0]
 800aff8:	4a1b      	ldr	r2, [pc, #108]	@ (800b068 <UART_SetConfig+0x348>)
 800affa:	4293      	cmp	r3, r2
 800affc:	d142      	bne.n	800b084 <UART_SetConfig+0x364>
 800affe:	4b16      	ldr	r3, [pc, #88]	@ (800b058 <UART_SetConfig+0x338>)
 800b000:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800b002:	f003 0307 	and.w	r3, r3, #7
 800b006:	2b05      	cmp	r3, #5
 800b008:	d838      	bhi.n	800b07c <UART_SetConfig+0x35c>
 800b00a:	a201      	add	r2, pc, #4	@ (adr r2, 800b010 <UART_SetConfig+0x2f0>)
 800b00c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b010:	0800b029 	.word	0x0800b029
 800b014:	0800b031 	.word	0x0800b031
 800b018:	0800b039 	.word	0x0800b039
 800b01c:	0800b041 	.word	0x0800b041
 800b020:	0800b06d 	.word	0x0800b06d
 800b024:	0800b075 	.word	0x0800b075
 800b028:	2300      	movs	r3, #0
 800b02a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b02e:	e24e      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b030:	2304      	movs	r3, #4
 800b032:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b036:	e24a      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b038:	2308      	movs	r3, #8
 800b03a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b03e:	e246      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b040:	2310      	movs	r3, #16
 800b042:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b046:	e242      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b048:	cfff69f3 	.word	0xcfff69f3
 800b04c:	58000c00 	.word	0x58000c00
 800b050:	11fff4ff 	.word	0x11fff4ff
 800b054:	40011000 	.word	0x40011000
 800b058:	58024400 	.word	0x58024400
 800b05c:	40004400 	.word	0x40004400
 800b060:	40004800 	.word	0x40004800
 800b064:	40004c00 	.word	0x40004c00
 800b068:	40005000 	.word	0x40005000
 800b06c:	2320      	movs	r3, #32
 800b06e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b072:	e22c      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b074:	2340      	movs	r3, #64	@ 0x40
 800b076:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b07a:	e228      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b07c:	2380      	movs	r3, #128	@ 0x80
 800b07e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b082:	e224      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b084:	697b      	ldr	r3, [r7, #20]
 800b086:	681b      	ldr	r3, [r3, #0]
 800b088:	4ab1      	ldr	r2, [pc, #708]	@ (800b350 <UART_SetConfig+0x630>)
 800b08a:	4293      	cmp	r3, r2
 800b08c:	d176      	bne.n	800b17c <UART_SetConfig+0x45c>
 800b08e:	4bb1      	ldr	r3, [pc, #708]	@ (800b354 <UART_SetConfig+0x634>)
 800b090:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800b092:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 800b096:	2b28      	cmp	r3, #40	@ 0x28
 800b098:	d86c      	bhi.n	800b174 <UART_SetConfig+0x454>
 800b09a:	a201      	add	r2, pc, #4	@ (adr r2, 800b0a0 <UART_SetConfig+0x380>)
 800b09c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b0a0:	0800b145 	.word	0x0800b145
 800b0a4:	0800b175 	.word	0x0800b175
 800b0a8:	0800b175 	.word	0x0800b175
 800b0ac:	0800b175 	.word	0x0800b175
 800b0b0:	0800b175 	.word	0x0800b175
 800b0b4:	0800b175 	.word	0x0800b175
 800b0b8:	0800b175 	.word	0x0800b175
 800b0bc:	0800b175 	.word	0x0800b175
 800b0c0:	0800b14d 	.word	0x0800b14d
 800b0c4:	0800b175 	.word	0x0800b175
 800b0c8:	0800b175 	.word	0x0800b175
 800b0cc:	0800b175 	.word	0x0800b175
 800b0d0:	0800b175 	.word	0x0800b175
 800b0d4:	0800b175 	.word	0x0800b175
 800b0d8:	0800b175 	.word	0x0800b175
 800b0dc:	0800b175 	.word	0x0800b175
 800b0e0:	0800b155 	.word	0x0800b155
 800b0e4:	0800b175 	.word	0x0800b175
 800b0e8:	0800b175 	.word	0x0800b175
 800b0ec:	0800b175 	.word	0x0800b175
 800b0f0:	0800b175 	.word	0x0800b175
 800b0f4:	0800b175 	.word	0x0800b175
 800b0f8:	0800b175 	.word	0x0800b175
 800b0fc:	0800b175 	.word	0x0800b175
 800b100:	0800b15d 	.word	0x0800b15d
 800b104:	0800b175 	.word	0x0800b175
 800b108:	0800b175 	.word	0x0800b175
 800b10c:	0800b175 	.word	0x0800b175
 800b110:	0800b175 	.word	0x0800b175
 800b114:	0800b175 	.word	0x0800b175
 800b118:	0800b175 	.word	0x0800b175
 800b11c:	0800b175 	.word	0x0800b175
 800b120:	0800b165 	.word	0x0800b165
 800b124:	0800b175 	.word	0x0800b175
 800b128:	0800b175 	.word	0x0800b175
 800b12c:	0800b175 	.word	0x0800b175
 800b130:	0800b175 	.word	0x0800b175
 800b134:	0800b175 	.word	0x0800b175
 800b138:	0800b175 	.word	0x0800b175
 800b13c:	0800b175 	.word	0x0800b175
 800b140:	0800b16d 	.word	0x0800b16d
 800b144:	2301      	movs	r3, #1
 800b146:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b14a:	e1c0      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b14c:	2304      	movs	r3, #4
 800b14e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b152:	e1bc      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b154:	2308      	movs	r3, #8
 800b156:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b15a:	e1b8      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b15c:	2310      	movs	r3, #16
 800b15e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b162:	e1b4      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b164:	2320      	movs	r3, #32
 800b166:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b16a:	e1b0      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b16c:	2340      	movs	r3, #64	@ 0x40
 800b16e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b172:	e1ac      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b174:	2380      	movs	r3, #128	@ 0x80
 800b176:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b17a:	e1a8      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b17c:	697b      	ldr	r3, [r7, #20]
 800b17e:	681b      	ldr	r3, [r3, #0]
 800b180:	4a75      	ldr	r2, [pc, #468]	@ (800b358 <UART_SetConfig+0x638>)
 800b182:	4293      	cmp	r3, r2
 800b184:	d130      	bne.n	800b1e8 <UART_SetConfig+0x4c8>
 800b186:	4b73      	ldr	r3, [pc, #460]	@ (800b354 <UART_SetConfig+0x634>)
 800b188:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800b18a:	f003 0307 	and.w	r3, r3, #7
 800b18e:	2b05      	cmp	r3, #5
 800b190:	d826      	bhi.n	800b1e0 <UART_SetConfig+0x4c0>
 800b192:	a201      	add	r2, pc, #4	@ (adr r2, 800b198 <UART_SetConfig+0x478>)
 800b194:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b198:	0800b1b1 	.word	0x0800b1b1
 800b19c:	0800b1b9 	.word	0x0800b1b9
 800b1a0:	0800b1c1 	.word	0x0800b1c1
 800b1a4:	0800b1c9 	.word	0x0800b1c9
 800b1a8:	0800b1d1 	.word	0x0800b1d1
 800b1ac:	0800b1d9 	.word	0x0800b1d9
 800b1b0:	2300      	movs	r3, #0
 800b1b2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b1b6:	e18a      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b1b8:	2304      	movs	r3, #4
 800b1ba:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b1be:	e186      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b1c0:	2308      	movs	r3, #8
 800b1c2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b1c6:	e182      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b1c8:	2310      	movs	r3, #16
 800b1ca:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b1ce:	e17e      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b1d0:	2320      	movs	r3, #32
 800b1d2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b1d6:	e17a      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b1d8:	2340      	movs	r3, #64	@ 0x40
 800b1da:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b1de:	e176      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b1e0:	2380      	movs	r3, #128	@ 0x80
 800b1e2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b1e6:	e172      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b1e8:	697b      	ldr	r3, [r7, #20]
 800b1ea:	681b      	ldr	r3, [r3, #0]
 800b1ec:	4a5b      	ldr	r2, [pc, #364]	@ (800b35c <UART_SetConfig+0x63c>)
 800b1ee:	4293      	cmp	r3, r2
 800b1f0:	d130      	bne.n	800b254 <UART_SetConfig+0x534>
 800b1f2:	4b58      	ldr	r3, [pc, #352]	@ (800b354 <UART_SetConfig+0x634>)
 800b1f4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800b1f6:	f003 0307 	and.w	r3, r3, #7
 800b1fa:	2b05      	cmp	r3, #5
 800b1fc:	d826      	bhi.n	800b24c <UART_SetConfig+0x52c>
 800b1fe:	a201      	add	r2, pc, #4	@ (adr r2, 800b204 <UART_SetConfig+0x4e4>)
 800b200:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b204:	0800b21d 	.word	0x0800b21d
 800b208:	0800b225 	.word	0x0800b225
 800b20c:	0800b22d 	.word	0x0800b22d
 800b210:	0800b235 	.word	0x0800b235
 800b214:	0800b23d 	.word	0x0800b23d
 800b218:	0800b245 	.word	0x0800b245
 800b21c:	2300      	movs	r3, #0
 800b21e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b222:	e154      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b224:	2304      	movs	r3, #4
 800b226:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b22a:	e150      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b22c:	2308      	movs	r3, #8
 800b22e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b232:	e14c      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b234:	2310      	movs	r3, #16
 800b236:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b23a:	e148      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b23c:	2320      	movs	r3, #32
 800b23e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b242:	e144      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b244:	2340      	movs	r3, #64	@ 0x40
 800b246:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b24a:	e140      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b24c:	2380      	movs	r3, #128	@ 0x80
 800b24e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b252:	e13c      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b254:	697b      	ldr	r3, [r7, #20]
 800b256:	681b      	ldr	r3, [r3, #0]
 800b258:	4a41      	ldr	r2, [pc, #260]	@ (800b360 <UART_SetConfig+0x640>)
 800b25a:	4293      	cmp	r3, r2
 800b25c:	f040 8082 	bne.w	800b364 <UART_SetConfig+0x644>
 800b260:	4b3c      	ldr	r3, [pc, #240]	@ (800b354 <UART_SetConfig+0x634>)
 800b262:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800b264:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 800b268:	2b28      	cmp	r3, #40	@ 0x28
 800b26a:	d86d      	bhi.n	800b348 <UART_SetConfig+0x628>
 800b26c:	a201      	add	r2, pc, #4	@ (adr r2, 800b274 <UART_SetConfig+0x554>)
 800b26e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b272:	bf00      	nop
 800b274:	0800b319 	.word	0x0800b319
 800b278:	0800b349 	.word	0x0800b349
 800b27c:	0800b349 	.word	0x0800b349
 800b280:	0800b349 	.word	0x0800b349
 800b284:	0800b349 	.word	0x0800b349
 800b288:	0800b349 	.word	0x0800b349
 800b28c:	0800b349 	.word	0x0800b349
 800b290:	0800b349 	.word	0x0800b349
 800b294:	0800b321 	.word	0x0800b321
 800b298:	0800b349 	.word	0x0800b349
 800b29c:	0800b349 	.word	0x0800b349
 800b2a0:	0800b349 	.word	0x0800b349
 800b2a4:	0800b349 	.word	0x0800b349
 800b2a8:	0800b349 	.word	0x0800b349
 800b2ac:	0800b349 	.word	0x0800b349
 800b2b0:	0800b349 	.word	0x0800b349
 800b2b4:	0800b329 	.word	0x0800b329
 800b2b8:	0800b349 	.word	0x0800b349
 800b2bc:	0800b349 	.word	0x0800b349
 800b2c0:	0800b349 	.word	0x0800b349
 800b2c4:	0800b349 	.word	0x0800b349
 800b2c8:	0800b349 	.word	0x0800b349
 800b2cc:	0800b349 	.word	0x0800b349
 800b2d0:	0800b349 	.word	0x0800b349
 800b2d4:	0800b331 	.word	0x0800b331
 800b2d8:	0800b349 	.word	0x0800b349
 800b2dc:	0800b349 	.word	0x0800b349
 800b2e0:	0800b349 	.word	0x0800b349
 800b2e4:	0800b349 	.word	0x0800b349
 800b2e8:	0800b349 	.word	0x0800b349
 800b2ec:	0800b349 	.word	0x0800b349
 800b2f0:	0800b349 	.word	0x0800b349
 800b2f4:	0800b339 	.word	0x0800b339
 800b2f8:	0800b349 	.word	0x0800b349
 800b2fc:	0800b349 	.word	0x0800b349
 800b300:	0800b349 	.word	0x0800b349
 800b304:	0800b349 	.word	0x0800b349
 800b308:	0800b349 	.word	0x0800b349
 800b30c:	0800b349 	.word	0x0800b349
 800b310:	0800b349 	.word	0x0800b349
 800b314:	0800b341 	.word	0x0800b341
 800b318:	2301      	movs	r3, #1
 800b31a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b31e:	e0d6      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b320:	2304      	movs	r3, #4
 800b322:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b326:	e0d2      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b328:	2308      	movs	r3, #8
 800b32a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b32e:	e0ce      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b330:	2310      	movs	r3, #16
 800b332:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b336:	e0ca      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b338:	2320      	movs	r3, #32
 800b33a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b33e:	e0c6      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b340:	2340      	movs	r3, #64	@ 0x40
 800b342:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b346:	e0c2      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b348:	2380      	movs	r3, #128	@ 0x80
 800b34a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b34e:	e0be      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b350:	40011400 	.word	0x40011400
 800b354:	58024400 	.word	0x58024400
 800b358:	40007800 	.word	0x40007800
 800b35c:	40007c00 	.word	0x40007c00
 800b360:	40011800 	.word	0x40011800
 800b364:	697b      	ldr	r3, [r7, #20]
 800b366:	681b      	ldr	r3, [r3, #0]
 800b368:	4aad      	ldr	r2, [pc, #692]	@ (800b620 <UART_SetConfig+0x900>)
 800b36a:	4293      	cmp	r3, r2
 800b36c:	d176      	bne.n	800b45c <UART_SetConfig+0x73c>
 800b36e:	4bad      	ldr	r3, [pc, #692]	@ (800b624 <UART_SetConfig+0x904>)
 800b370:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800b372:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 800b376:	2b28      	cmp	r3, #40	@ 0x28
 800b378:	d86c      	bhi.n	800b454 <UART_SetConfig+0x734>
 800b37a:	a201      	add	r2, pc, #4	@ (adr r2, 800b380 <UART_SetConfig+0x660>)
 800b37c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b380:	0800b425 	.word	0x0800b425
 800b384:	0800b455 	.word	0x0800b455
 800b388:	0800b455 	.word	0x0800b455
 800b38c:	0800b455 	.word	0x0800b455
 800b390:	0800b455 	.word	0x0800b455
 800b394:	0800b455 	.word	0x0800b455
 800b398:	0800b455 	.word	0x0800b455
 800b39c:	0800b455 	.word	0x0800b455
 800b3a0:	0800b42d 	.word	0x0800b42d
 800b3a4:	0800b455 	.word	0x0800b455
 800b3a8:	0800b455 	.word	0x0800b455
 800b3ac:	0800b455 	.word	0x0800b455
 800b3b0:	0800b455 	.word	0x0800b455
 800b3b4:	0800b455 	.word	0x0800b455
 800b3b8:	0800b455 	.word	0x0800b455
 800b3bc:	0800b455 	.word	0x0800b455
 800b3c0:	0800b435 	.word	0x0800b435
 800b3c4:	0800b455 	.word	0x0800b455
 800b3c8:	0800b455 	.word	0x0800b455
 800b3cc:	0800b455 	.word	0x0800b455
 800b3d0:	0800b455 	.word	0x0800b455
 800b3d4:	0800b455 	.word	0x0800b455
 800b3d8:	0800b455 	.word	0x0800b455
 800b3dc:	0800b455 	.word	0x0800b455
 800b3e0:	0800b43d 	.word	0x0800b43d
 800b3e4:	0800b455 	.word	0x0800b455
 800b3e8:	0800b455 	.word	0x0800b455
 800b3ec:	0800b455 	.word	0x0800b455
 800b3f0:	0800b455 	.word	0x0800b455
 800b3f4:	0800b455 	.word	0x0800b455
 800b3f8:	0800b455 	.word	0x0800b455
 800b3fc:	0800b455 	.word	0x0800b455
 800b400:	0800b445 	.word	0x0800b445
 800b404:	0800b455 	.word	0x0800b455
 800b408:	0800b455 	.word	0x0800b455
 800b40c:	0800b455 	.word	0x0800b455
 800b410:	0800b455 	.word	0x0800b455
 800b414:	0800b455 	.word	0x0800b455
 800b418:	0800b455 	.word	0x0800b455
 800b41c:	0800b455 	.word	0x0800b455
 800b420:	0800b44d 	.word	0x0800b44d
 800b424:	2301      	movs	r3, #1
 800b426:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b42a:	e050      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b42c:	2304      	movs	r3, #4
 800b42e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b432:	e04c      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b434:	2308      	movs	r3, #8
 800b436:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b43a:	e048      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b43c:	2310      	movs	r3, #16
 800b43e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b442:	e044      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b444:	2320      	movs	r3, #32
 800b446:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b44a:	e040      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b44c:	2340      	movs	r3, #64	@ 0x40
 800b44e:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b452:	e03c      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b454:	2380      	movs	r3, #128	@ 0x80
 800b456:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b45a:	e038      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b45c:	697b      	ldr	r3, [r7, #20]
 800b45e:	681b      	ldr	r3, [r3, #0]
 800b460:	4a71      	ldr	r2, [pc, #452]	@ (800b628 <UART_SetConfig+0x908>)
 800b462:	4293      	cmp	r3, r2
 800b464:	d130      	bne.n	800b4c8 <UART_SetConfig+0x7a8>
 800b466:	4b6f      	ldr	r3, [pc, #444]	@ (800b624 <UART_SetConfig+0x904>)
 800b468:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 800b46a:	f003 0307 	and.w	r3, r3, #7
 800b46e:	2b05      	cmp	r3, #5
 800b470:	d826      	bhi.n	800b4c0 <UART_SetConfig+0x7a0>
 800b472:	a201      	add	r2, pc, #4	@ (adr r2, 800b478 <UART_SetConfig+0x758>)
 800b474:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b478:	0800b491 	.word	0x0800b491
 800b47c:	0800b499 	.word	0x0800b499
 800b480:	0800b4a1 	.word	0x0800b4a1
 800b484:	0800b4a9 	.word	0x0800b4a9
 800b488:	0800b4b1 	.word	0x0800b4b1
 800b48c:	0800b4b9 	.word	0x0800b4b9
 800b490:	2302      	movs	r3, #2
 800b492:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b496:	e01a      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b498:	2304      	movs	r3, #4
 800b49a:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b49e:	e016      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b4a0:	2308      	movs	r3, #8
 800b4a2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b4a6:	e012      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b4a8:	2310      	movs	r3, #16
 800b4aa:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b4ae:	e00e      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b4b0:	2320      	movs	r3, #32
 800b4b2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b4b6:	e00a      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b4b8:	2340      	movs	r3, #64	@ 0x40
 800b4ba:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b4be:	e006      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b4c0:	2380      	movs	r3, #128	@ 0x80
 800b4c2:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43
 800b4c6:	e002      	b.n	800b4ce <UART_SetConfig+0x7ae>
 800b4c8:	2380      	movs	r3, #128	@ 0x80
 800b4ca:	f887 3043 	strb.w	r3, [r7, #67]	@ 0x43

  /* Check LPUART instance */
  if (UART_INSTANCE_LOWPOWER(huart))
 800b4ce:	697b      	ldr	r3, [r7, #20]
 800b4d0:	681b      	ldr	r3, [r3, #0]
 800b4d2:	4a55      	ldr	r2, [pc, #340]	@ (800b628 <UART_SetConfig+0x908>)
 800b4d4:	4293      	cmp	r3, r2
 800b4d6:	f040 80f8 	bne.w	800b6ca <UART_SetConfig+0x9aa>
  {
    /* Retrieve frequency clock */
    switch (clocksource)
 800b4da:	f897 3043 	ldrb.w	r3, [r7, #67]	@ 0x43
 800b4de:	2b20      	cmp	r3, #32
 800b4e0:	dc46      	bgt.n	800b570 <UART_SetConfig+0x850>
 800b4e2:	2b02      	cmp	r3, #2
 800b4e4:	db75      	blt.n	800b5d2 <UART_SetConfig+0x8b2>
 800b4e6:	3b02      	subs	r3, #2
 800b4e8:	2b1e      	cmp	r3, #30
 800b4ea:	d872      	bhi.n	800b5d2 <UART_SetConfig+0x8b2>
 800b4ec:	a201      	add	r2, pc, #4	@ (adr r2, 800b4f4 <UART_SetConfig+0x7d4>)
 800b4ee:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b4f2:	bf00      	nop
 800b4f4:	0800b577 	.word	0x0800b577
 800b4f8:	0800b5d3 	.word	0x0800b5d3
 800b4fc:	0800b57f 	.word	0x0800b57f
 800b500:	0800b5d3 	.word	0x0800b5d3
 800b504:	0800b5d3 	.word	0x0800b5d3
 800b508:	0800b5d3 	.word	0x0800b5d3
 800b50c:	0800b58f 	.word	0x0800b58f
 800b510:	0800b5d3 	.word	0x0800b5d3
 800b514:	0800b5d3 	.word	0x0800b5d3
 800b518:	0800b5d3 	.word	0x0800b5d3
 800b51c:	0800b5d3 	.word	0x0800b5d3
 800b520:	0800b5d3 	.word	0x0800b5d3
 800b524:	0800b5d3 	.word	0x0800b5d3
 800b528:	0800b5d3 	.word	0x0800b5d3
 800b52c:	0800b59f 	.word	0x0800b59f
 800b530:	0800b5d3 	.word	0x0800b5d3
 800b534:	0800b5d3 	.word	0x0800b5d3
 800b538:	0800b5d3 	.word	0x0800b5d3
 800b53c:	0800b5d3 	.word	0x0800b5d3
 800b540:	0800b5d3 	.word	0x0800b5d3
 800b544:	0800b5d3 	.word	0x0800b5d3
 800b548:	0800b5d3 	.word	0x0800b5d3
 800b54c:	0800b5d3 	.word	0x0800b5d3
 800b550:	0800b5d3 	.word	0x0800b5d3
 800b554:	0800b5d3 	.word	0x0800b5d3
 800b558:	0800b5d3 	.word	0x0800b5d3
 800b55c:	0800b5d3 	.word	0x0800b5d3
 800b560:	0800b5d3 	.word	0x0800b5d3
 800b564:	0800b5d3 	.word	0x0800b5d3
 800b568:	0800b5d3 	.word	0x0800b5d3
 800b56c:	0800b5c5 	.word	0x0800b5c5
 800b570:	2b40      	cmp	r3, #64	@ 0x40
 800b572:	d02a      	beq.n	800b5ca <UART_SetConfig+0x8aa>
 800b574:	e02d      	b.n	800b5d2 <UART_SetConfig+0x8b2>
    {
      case UART_CLOCKSOURCE_D3PCLK1:
        pclk = HAL_RCCEx_GetD3PCLK1Freq();
 800b576:	f7fd fba7 	bl	8008cc8 <HAL_RCCEx_GetD3PCLK1Freq>
 800b57a:	63f8      	str	r0, [r7, #60]	@ 0x3c
        break;
 800b57c:	e02f      	b.n	800b5de <UART_SetConfig+0x8be>
      case UART_CLOCKSOURCE_PLL2:
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 800b57e:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800b582:	4618      	mov	r0, r3
 800b584:	f7fd fbb6 	bl	8008cf4 <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
 800b588:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800b58a:	63fb      	str	r3, [r7, #60]	@ 0x3c
        break;
 800b58c:	e027      	b.n	800b5de <UART_SetConfig+0x8be>
      case UART_CLOCKSOURCE_PLL3:
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 800b58e:	f107 0318 	add.w	r3, r7, #24
 800b592:	4618      	mov	r0, r3
 800b594:	f7fd fd02 	bl	8008f9c <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
 800b598:	69fb      	ldr	r3, [r7, #28]
 800b59a:	63fb      	str	r3, [r7, #60]	@ 0x3c
        break;
 800b59c:	e01f      	b.n	800b5de <UART_SetConfig+0x8be>
      case UART_CLOCKSOURCE_HSI:
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 800b59e:	4b21      	ldr	r3, [pc, #132]	@ (800b624 <UART_SetConfig+0x904>)
 800b5a0:	681b      	ldr	r3, [r3, #0]
 800b5a2:	f003 0320 	and.w	r3, r3, #32
 800b5a6:	2b00      	cmp	r3, #0
 800b5a8:	d009      	beq.n	800b5be <UART_SetConfig+0x89e>
        {
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
 800b5aa:	4b1e      	ldr	r3, [pc, #120]	@ (800b624 <UART_SetConfig+0x904>)
 800b5ac:	681b      	ldr	r3, [r3, #0]
 800b5ae:	08db      	lsrs	r3, r3, #3
 800b5b0:	f003 0303 	and.w	r3, r3, #3
 800b5b4:	4a1d      	ldr	r2, [pc, #116]	@ (800b62c <UART_SetConfig+0x90c>)
 800b5b6:	fa22 f303 	lsr.w	r3, r2, r3
 800b5ba:	63fb      	str	r3, [r7, #60]	@ 0x3c
        }
        else
        {
          pclk = (uint32_t) HSI_VALUE;
        }
        break;
 800b5bc:	e00f      	b.n	800b5de <UART_SetConfig+0x8be>
          pclk = (uint32_t) HSI_VALUE;
 800b5be:	4b1b      	ldr	r3, [pc, #108]	@ (800b62c <UART_SetConfig+0x90c>)
 800b5c0:	63fb      	str	r3, [r7, #60]	@ 0x3c
        break;
 800b5c2:	e00c      	b.n	800b5de <UART_SetConfig+0x8be>
      case UART_CLOCKSOURCE_CSI:
        pclk = (uint32_t) CSI_VALUE;
 800b5c4:	4b1a      	ldr	r3, [pc, #104]	@ (800b630 <UART_SetConfig+0x910>)
 800b5c6:	63fb      	str	r3, [r7, #60]	@ 0x3c
        break;
 800b5c8:	e009      	b.n	800b5de <UART_SetConfig+0x8be>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 800b5ca:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800b5ce:	63fb      	str	r3, [r7, #60]	@ 0x3c
        break;
 800b5d0:	e005      	b.n	800b5de <UART_SetConfig+0x8be>
      default:
        pclk = 0U;
 800b5d2:	2300      	movs	r3, #0
 800b5d4:	63fb      	str	r3, [r7, #60]	@ 0x3c
        ret = HAL_ERROR;
 800b5d6:	2301      	movs	r3, #1
 800b5d8:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
        break;
 800b5dc:	bf00      	nop
    }

    /* If proper clock source reported */
    if (pclk != 0U)
 800b5de:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800b5e0:	2b00      	cmp	r3, #0
 800b5e2:	f000 81ee 	beq.w	800b9c2 <UART_SetConfig+0xca2>
    {
      /* Compute clock after Prescaler */
      lpuart_ker_ck_pres = (pclk / UARTPrescTable[huart->Init.ClockPrescaler]);
 800b5e6:	697b      	ldr	r3, [r7, #20]
 800b5e8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b5ea:	4a12      	ldr	r2, [pc, #72]	@ (800b634 <UART_SetConfig+0x914>)
 800b5ec:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800b5f0:	461a      	mov	r2, r3
 800b5f2:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800b5f4:	fbb3 f3f2 	udiv	r3, r3, r2
 800b5f8:	633b      	str	r3, [r7, #48]	@ 0x30

      /* Ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
 800b5fa:	697b      	ldr	r3, [r7, #20]
 800b5fc:	685a      	ldr	r2, [r3, #4]
 800b5fe:	4613      	mov	r3, r2
 800b600:	005b      	lsls	r3, r3, #1
 800b602:	4413      	add	r3, r2
 800b604:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800b606:	429a      	cmp	r2, r3
 800b608:	d305      	bcc.n	800b616 <UART_SetConfig+0x8f6>
          (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 800b60a:	697b      	ldr	r3, [r7, #20]
 800b60c:	685b      	ldr	r3, [r3, #4]
 800b60e:	031b      	lsls	r3, r3, #12
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
 800b610:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800b612:	429a      	cmp	r2, r3
 800b614:	d910      	bls.n	800b638 <UART_SetConfig+0x918>
      {
        ret = HAL_ERROR;
 800b616:	2301      	movs	r3, #1
 800b618:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 800b61c:	e1d1      	b.n	800b9c2 <UART_SetConfig+0xca2>
 800b61e:	bf00      	nop
 800b620:	40011c00 	.word	0x40011c00
 800b624:	58024400 	.word	0x58024400
 800b628:	58000c00 	.word	0x58000c00
 800b62c:	03d09000 	.word	0x03d09000
 800b630:	003d0900 	.word	0x003d0900
 800b634:	08027510 	.word	0x08027510
      }
      else
      {
        /* Check computed UsartDiv value is in allocated range
           (it is forbidden to write values lower than 0x300 in the LPUART_BRR register) */
        usartdiv = (uint32_t)(UART_DIV_LPUART(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 800b638:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800b63a:	2200      	movs	r2, #0
 800b63c:	60bb      	str	r3, [r7, #8]
 800b63e:	60fa      	str	r2, [r7, #12]
 800b640:	697b      	ldr	r3, [r7, #20]
 800b642:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b644:	4ac0      	ldr	r2, [pc, #768]	@ (800b948 <UART_SetConfig+0xc28>)
 800b646:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800b64a:	b29b      	uxth	r3, r3
 800b64c:	2200      	movs	r2, #0
 800b64e:	603b      	str	r3, [r7, #0]
 800b650:	607a      	str	r2, [r7, #4]
 800b652:	e9d7 2300 	ldrd	r2, r3, [r7]
 800b656:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800b65a:	f7f4 fea9 	bl	80003b0 <__aeabi_uldivmod>
 800b65e:	4602      	mov	r2, r0
 800b660:	460b      	mov	r3, r1
 800b662:	4610      	mov	r0, r2
 800b664:	4619      	mov	r1, r3
 800b666:	f04f 0200 	mov.w	r2, #0
 800b66a:	f04f 0300 	mov.w	r3, #0
 800b66e:	020b      	lsls	r3, r1, #8
 800b670:	ea43 6310 	orr.w	r3, r3, r0, lsr #24
 800b674:	0202      	lsls	r2, r0, #8
 800b676:	6979      	ldr	r1, [r7, #20]
 800b678:	6849      	ldr	r1, [r1, #4]
 800b67a:	0849      	lsrs	r1, r1, #1
 800b67c:	2000      	movs	r0, #0
 800b67e:	460c      	mov	r4, r1
 800b680:	4605      	mov	r5, r0
 800b682:	eb12 0804 	adds.w	r8, r2, r4
 800b686:	eb43 0905 	adc.w	r9, r3, r5
 800b68a:	697b      	ldr	r3, [r7, #20]
 800b68c:	685b      	ldr	r3, [r3, #4]
 800b68e:	2200      	movs	r2, #0
 800b690:	469a      	mov	sl, r3
 800b692:	4693      	mov	fp, r2
 800b694:	4652      	mov	r2, sl
 800b696:	465b      	mov	r3, fp
 800b698:	4640      	mov	r0, r8
 800b69a:	4649      	mov	r1, r9
 800b69c:	f7f4 fe88 	bl	80003b0 <__aeabi_uldivmod>
 800b6a0:	4602      	mov	r2, r0
 800b6a2:	460b      	mov	r3, r1
 800b6a4:	4613      	mov	r3, r2
 800b6a6:	63bb      	str	r3, [r7, #56]	@ 0x38
        if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
 800b6a8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b6aa:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 800b6ae:	d308      	bcc.n	800b6c2 <UART_SetConfig+0x9a2>
 800b6b0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b6b2:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800b6b6:	d204      	bcs.n	800b6c2 <UART_SetConfig+0x9a2>
        {
          huart->Instance->BRR = usartdiv;
 800b6b8:	697b      	ldr	r3, [r7, #20]
 800b6ba:	681b      	ldr	r3, [r3, #0]
 800b6bc:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 800b6be:	60da      	str	r2, [r3, #12]
 800b6c0:	e17f      	b.n	800b9c2 <UART_SetConfig+0xca2>
        }
        else
        {
          ret = HAL_ERROR;
 800b6c2:	2301      	movs	r3, #1
 800b6c4:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 800b6c8:	e17b      	b.n	800b9c2 <UART_SetConfig+0xca2>
      } /* if ( (lpuart_ker_ck_pres < (3 * huart->Init.BaudRate) ) ||
                (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate) )) */
    } /* if (pclk != 0) */
  }
  /* Check UART Over Sampling to set Baud Rate Register */
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 800b6ca:	697b      	ldr	r3, [r7, #20]
 800b6cc:	69db      	ldr	r3, [r3, #28]
 800b6ce:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800b6d2:	f040 80bd 	bne.w	800b850 <UART_SetConfig+0xb30>
  {
    switch (clocksource)
 800b6d6:	f897 3043 	ldrb.w	r3, [r7, #67]	@ 0x43
 800b6da:	2b20      	cmp	r3, #32
 800b6dc:	dc48      	bgt.n	800b770 <UART_SetConfig+0xa50>
 800b6de:	2b00      	cmp	r3, #0
 800b6e0:	db7b      	blt.n	800b7da <UART_SetConfig+0xaba>
 800b6e2:	2b20      	cmp	r3, #32
 800b6e4:	d879      	bhi.n	800b7da <UART_SetConfig+0xaba>
 800b6e6:	a201      	add	r2, pc, #4	@ (adr r2, 800b6ec <UART_SetConfig+0x9cc>)
 800b6e8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b6ec:	0800b777 	.word	0x0800b777
 800b6f0:	0800b77f 	.word	0x0800b77f
 800b6f4:	0800b7db 	.word	0x0800b7db
 800b6f8:	0800b7db 	.word	0x0800b7db
 800b6fc:	0800b787 	.word	0x0800b787
 800b700:	0800b7db 	.word	0x0800b7db
 800b704:	0800b7db 	.word	0x0800b7db
 800b708:	0800b7db 	.word	0x0800b7db
 800b70c:	0800b797 	.word	0x0800b797
 800b710:	0800b7db 	.word	0x0800b7db
 800b714:	0800b7db 	.word	0x0800b7db
 800b718:	0800b7db 	.word	0x0800b7db
 800b71c:	0800b7db 	.word	0x0800b7db
 800b720:	0800b7db 	.word	0x0800b7db
 800b724:	0800b7db 	.word	0x0800b7db
 800b728:	0800b7db 	.word	0x0800b7db
 800b72c:	0800b7a7 	.word	0x0800b7a7
 800b730:	0800b7db 	.word	0x0800b7db
 800b734:	0800b7db 	.word	0x0800b7db
 800b738:	0800b7db 	.word	0x0800b7db
 800b73c:	0800b7db 	.word	0x0800b7db
 800b740:	0800b7db 	.word	0x0800b7db
 800b744:	0800b7db 	.word	0x0800b7db
 800b748:	0800b7db 	.word	0x0800b7db
 800b74c:	0800b7db 	.word	0x0800b7db
 800b750:	0800b7db 	.word	0x0800b7db
 800b754:	0800b7db 	.word	0x0800b7db
 800b758:	0800b7db 	.word	0x0800b7db
 800b75c:	0800b7db 	.word	0x0800b7db
 800b760:	0800b7db 	.word	0x0800b7db
 800b764:	0800b7db 	.word	0x0800b7db
 800b768:	0800b7db 	.word	0x0800b7db
 800b76c:	0800b7cd 	.word	0x0800b7cd
 800b770:	2b40      	cmp	r3, #64	@ 0x40
 800b772:	d02e      	beq.n	800b7d2 <UART_SetConfig+0xab2>
 800b774:	e031      	b.n	800b7da <UART_SetConfig+0xaba>
    {
      case UART_CLOCKSOURCE_D2PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 800b776:	f7fc f8db 	bl	8007930 <HAL_RCC_GetPCLK1Freq>
 800b77a:	63f8      	str	r0, [r7, #60]	@ 0x3c
        break;
 800b77c:	e033      	b.n	800b7e6 <UART_SetConfig+0xac6>
      case UART_CLOCKSOURCE_D2PCLK2:
        pclk = HAL_RCC_GetPCLK2Freq();
 800b77e:	f7fc f8ed 	bl	800795c <HAL_RCC_GetPCLK2Freq>
 800b782:	63f8      	str	r0, [r7, #60]	@ 0x3c
        break;
 800b784:	e02f      	b.n	800b7e6 <UART_SetConfig+0xac6>
      case UART_CLOCKSOURCE_PLL2:
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 800b786:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800b78a:	4618      	mov	r0, r3
 800b78c:	f7fd fab2 	bl	8008cf4 <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
 800b790:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800b792:	63fb      	str	r3, [r7, #60]	@ 0x3c
        break;
 800b794:	e027      	b.n	800b7e6 <UART_SetConfig+0xac6>
      case UART_CLOCKSOURCE_PLL3:
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 800b796:	f107 0318 	add.w	r3, r7, #24
 800b79a:	4618      	mov	r0, r3
 800b79c:	f7fd fbfe 	bl	8008f9c <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
 800b7a0:	69fb      	ldr	r3, [r7, #28]
 800b7a2:	63fb      	str	r3, [r7, #60]	@ 0x3c
        break;
 800b7a4:	e01f      	b.n	800b7e6 <UART_SetConfig+0xac6>
      case UART_CLOCKSOURCE_HSI:
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 800b7a6:	4b69      	ldr	r3, [pc, #420]	@ (800b94c <UART_SetConfig+0xc2c>)
 800b7a8:	681b      	ldr	r3, [r3, #0]
 800b7aa:	f003 0320 	and.w	r3, r3, #32
 800b7ae:	2b00      	cmp	r3, #0
 800b7b0:	d009      	beq.n	800b7c6 <UART_SetConfig+0xaa6>
        {
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
 800b7b2:	4b66      	ldr	r3, [pc, #408]	@ (800b94c <UART_SetConfig+0xc2c>)
 800b7b4:	681b      	ldr	r3, [r3, #0]
 800b7b6:	08db      	lsrs	r3, r3, #3
 800b7b8:	f003 0303 	and.w	r3, r3, #3
 800b7bc:	4a64      	ldr	r2, [pc, #400]	@ (800b950 <UART_SetConfig+0xc30>)
 800b7be:	fa22 f303 	lsr.w	r3, r2, r3
 800b7c2:	63fb      	str	r3, [r7, #60]	@ 0x3c
        }
        else
        {
          pclk = (uint32_t) HSI_VALUE;
        }
        break;
 800b7c4:	e00f      	b.n	800b7e6 <UART_SetConfig+0xac6>
          pclk = (uint32_t) HSI_VALUE;
 800b7c6:	4b62      	ldr	r3, [pc, #392]	@ (800b950 <UART_SetConfig+0xc30>)
 800b7c8:	63fb      	str	r3, [r7, #60]	@ 0x3c
        break;
 800b7ca:	e00c      	b.n	800b7e6 <UART_SetConfig+0xac6>
      case UART_CLOCKSOURCE_CSI:
        pclk = (uint32_t) CSI_VALUE;
 800b7cc:	4b61      	ldr	r3, [pc, #388]	@ (800b954 <UART_SetConfig+0xc34>)
 800b7ce:	63fb      	str	r3, [r7, #60]	@ 0x3c
        break;
 800b7d0:	e009      	b.n	800b7e6 <UART_SetConfig+0xac6>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 800b7d2:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800b7d6:	63fb      	str	r3, [r7, #60]	@ 0x3c
        break;
 800b7d8:	e005      	b.n	800b7e6 <UART_SetConfig+0xac6>
      default:
        pclk = 0U;
 800b7da:	2300      	movs	r3, #0
 800b7dc:	63fb      	str	r3, [r7, #60]	@ 0x3c
        ret = HAL_ERROR;
 800b7de:	2301      	movs	r3, #1
 800b7e0:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
        break;
 800b7e4:	bf00      	nop
    }

    /* USARTDIV must be greater than or equal to 0d16 */
    if (pclk != 0U)
 800b7e6:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800b7e8:	2b00      	cmp	r3, #0
 800b7ea:	f000 80ea 	beq.w	800b9c2 <UART_SetConfig+0xca2>
    {
      usartdiv = (uint32_t)(UART_DIV_SAMPLING8(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 800b7ee:	697b      	ldr	r3, [r7, #20]
 800b7f0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b7f2:	4a55      	ldr	r2, [pc, #340]	@ (800b948 <UART_SetConfig+0xc28>)
 800b7f4:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800b7f8:	461a      	mov	r2, r3
 800b7fa:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800b7fc:	fbb3 f3f2 	udiv	r3, r3, r2
 800b800:	005a      	lsls	r2, r3, #1
 800b802:	697b      	ldr	r3, [r7, #20]
 800b804:	685b      	ldr	r3, [r3, #4]
 800b806:	085b      	lsrs	r3, r3, #1
 800b808:	441a      	add	r2, r3
 800b80a:	697b      	ldr	r3, [r7, #20]
 800b80c:	685b      	ldr	r3, [r3, #4]
 800b80e:	fbb2 f3f3 	udiv	r3, r2, r3
 800b812:	63bb      	str	r3, [r7, #56]	@ 0x38
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 800b814:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b816:	2b0f      	cmp	r3, #15
 800b818:	d916      	bls.n	800b848 <UART_SetConfig+0xb28>
 800b81a:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b81c:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800b820:	d212      	bcs.n	800b848 <UART_SetConfig+0xb28>
      {
        brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 800b822:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b824:	b29b      	uxth	r3, r3
 800b826:	f023 030f 	bic.w	r3, r3, #15
 800b82a:	86fb      	strh	r3, [r7, #54]	@ 0x36
        brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 800b82c:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b82e:	085b      	lsrs	r3, r3, #1
 800b830:	b29b      	uxth	r3, r3
 800b832:	f003 0307 	and.w	r3, r3, #7
 800b836:	b29a      	uxth	r2, r3
 800b838:	8efb      	ldrh	r3, [r7, #54]	@ 0x36
 800b83a:	4313      	orrs	r3, r2
 800b83c:	86fb      	strh	r3, [r7, #54]	@ 0x36
        huart->Instance->BRR = brrtemp;
 800b83e:	697b      	ldr	r3, [r7, #20]
 800b840:	681b      	ldr	r3, [r3, #0]
 800b842:	8efa      	ldrh	r2, [r7, #54]	@ 0x36
 800b844:	60da      	str	r2, [r3, #12]
 800b846:	e0bc      	b.n	800b9c2 <UART_SetConfig+0xca2>
      }
      else
      {
        ret = HAL_ERROR;
 800b848:	2301      	movs	r3, #1
 800b84a:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
 800b84e:	e0b8      	b.n	800b9c2 <UART_SetConfig+0xca2>
      }
    }
  }
  else
  {
    switch (clocksource)
 800b850:	f897 3043 	ldrb.w	r3, [r7, #67]	@ 0x43
 800b854:	2b20      	cmp	r3, #32
 800b856:	dc4b      	bgt.n	800b8f0 <UART_SetConfig+0xbd0>
 800b858:	2b00      	cmp	r3, #0
 800b85a:	f2c0 8087 	blt.w	800b96c <UART_SetConfig+0xc4c>
 800b85e:	2b20      	cmp	r3, #32
 800b860:	f200 8084 	bhi.w	800b96c <UART_SetConfig+0xc4c>
 800b864:	a201      	add	r2, pc, #4	@ (adr r2, 800b86c <UART_SetConfig+0xb4c>)
 800b866:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800b86a:	bf00      	nop
 800b86c:	0800b8f7 	.word	0x0800b8f7
 800b870:	0800b8ff 	.word	0x0800b8ff
 800b874:	0800b96d 	.word	0x0800b96d
 800b878:	0800b96d 	.word	0x0800b96d
 800b87c:	0800b907 	.word	0x0800b907
 800b880:	0800b96d 	.word	0x0800b96d
 800b884:	0800b96d 	.word	0x0800b96d
 800b888:	0800b96d 	.word	0x0800b96d
 800b88c:	0800b917 	.word	0x0800b917
 800b890:	0800b96d 	.word	0x0800b96d
 800b894:	0800b96d 	.word	0x0800b96d
 800b898:	0800b96d 	.word	0x0800b96d
 800b89c:	0800b96d 	.word	0x0800b96d
 800b8a0:	0800b96d 	.word	0x0800b96d
 800b8a4:	0800b96d 	.word	0x0800b96d
 800b8a8:	0800b96d 	.word	0x0800b96d
 800b8ac:	0800b927 	.word	0x0800b927
 800b8b0:	0800b96d 	.word	0x0800b96d
 800b8b4:	0800b96d 	.word	0x0800b96d
 800b8b8:	0800b96d 	.word	0x0800b96d
 800b8bc:	0800b96d 	.word	0x0800b96d
 800b8c0:	0800b96d 	.word	0x0800b96d
 800b8c4:	0800b96d 	.word	0x0800b96d
 800b8c8:	0800b96d 	.word	0x0800b96d
 800b8cc:	0800b96d 	.word	0x0800b96d
 800b8d0:	0800b96d 	.word	0x0800b96d
 800b8d4:	0800b96d 	.word	0x0800b96d
 800b8d8:	0800b96d 	.word	0x0800b96d
 800b8dc:	0800b96d 	.word	0x0800b96d
 800b8e0:	0800b96d 	.word	0x0800b96d
 800b8e4:	0800b96d 	.word	0x0800b96d
 800b8e8:	0800b96d 	.word	0x0800b96d
 800b8ec:	0800b95f 	.word	0x0800b95f
 800b8f0:	2b40      	cmp	r3, #64	@ 0x40
 800b8f2:	d037      	beq.n	800b964 <UART_SetConfig+0xc44>
 800b8f4:	e03a      	b.n	800b96c <UART_SetConfig+0xc4c>
    {
      case UART_CLOCKSOURCE_D2PCLK1:
        pclk = HAL_RCC_GetPCLK1Freq();
 800b8f6:	f7fc f81b 	bl	8007930 <HAL_RCC_GetPCLK1Freq>
 800b8fa:	63f8      	str	r0, [r7, #60]	@ 0x3c
        break;
 800b8fc:	e03c      	b.n	800b978 <UART_SetConfig+0xc58>
      case UART_CLOCKSOURCE_D2PCLK2:
        pclk = HAL_RCC_GetPCLK2Freq();
 800b8fe:	f7fc f82d 	bl	800795c <HAL_RCC_GetPCLK2Freq>
 800b902:	63f8      	str	r0, [r7, #60]	@ 0x3c
        break;
 800b904:	e038      	b.n	800b978 <UART_SetConfig+0xc58>
      case UART_CLOCKSOURCE_PLL2:
        HAL_RCCEx_GetPLL2ClockFreq(&pll2_clocks);
 800b906:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800b90a:	4618      	mov	r0, r3
 800b90c:	f7fd f9f2 	bl	8008cf4 <HAL_RCCEx_GetPLL2ClockFreq>
        pclk = pll2_clocks.PLL2_Q_Frequency;
 800b910:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800b912:	63fb      	str	r3, [r7, #60]	@ 0x3c
        break;
 800b914:	e030      	b.n	800b978 <UART_SetConfig+0xc58>
      case UART_CLOCKSOURCE_PLL3:
        HAL_RCCEx_GetPLL3ClockFreq(&pll3_clocks);
 800b916:	f107 0318 	add.w	r3, r7, #24
 800b91a:	4618      	mov	r0, r3
 800b91c:	f7fd fb3e 	bl	8008f9c <HAL_RCCEx_GetPLL3ClockFreq>
        pclk = pll3_clocks.PLL3_Q_Frequency;
 800b920:	69fb      	ldr	r3, [r7, #28]
 800b922:	63fb      	str	r3, [r7, #60]	@ 0x3c
        break;
 800b924:	e028      	b.n	800b978 <UART_SetConfig+0xc58>
      case UART_CLOCKSOURCE_HSI:
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 800b926:	4b09      	ldr	r3, [pc, #36]	@ (800b94c <UART_SetConfig+0xc2c>)
 800b928:	681b      	ldr	r3, [r3, #0]
 800b92a:	f003 0320 	and.w	r3, r3, #32
 800b92e:	2b00      	cmp	r3, #0
 800b930:	d012      	beq.n	800b958 <UART_SetConfig+0xc38>
        {
          pclk = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3U));
 800b932:	4b06      	ldr	r3, [pc, #24]	@ (800b94c <UART_SetConfig+0xc2c>)
 800b934:	681b      	ldr	r3, [r3, #0]
 800b936:	08db      	lsrs	r3, r3, #3
 800b938:	f003 0303 	and.w	r3, r3, #3
 800b93c:	4a04      	ldr	r2, [pc, #16]	@ (800b950 <UART_SetConfig+0xc30>)
 800b93e:	fa22 f303 	lsr.w	r3, r2, r3
 800b942:	63fb      	str	r3, [r7, #60]	@ 0x3c
        }
        else
        {
          pclk = (uint32_t) HSI_VALUE;
        }
        break;
 800b944:	e018      	b.n	800b978 <UART_SetConfig+0xc58>
 800b946:	bf00      	nop
 800b948:	08027510 	.word	0x08027510
 800b94c:	58024400 	.word	0x58024400
 800b950:	03d09000 	.word	0x03d09000
 800b954:	003d0900 	.word	0x003d0900
          pclk = (uint32_t) HSI_VALUE;
 800b958:	4b24      	ldr	r3, [pc, #144]	@ (800b9ec <UART_SetConfig+0xccc>)
 800b95a:	63fb      	str	r3, [r7, #60]	@ 0x3c
        break;
 800b95c:	e00c      	b.n	800b978 <UART_SetConfig+0xc58>
      case UART_CLOCKSOURCE_CSI:
        pclk = (uint32_t) CSI_VALUE;
 800b95e:	4b24      	ldr	r3, [pc, #144]	@ (800b9f0 <UART_SetConfig+0xcd0>)
 800b960:	63fb      	str	r3, [r7, #60]	@ 0x3c
        break;
 800b962:	e009      	b.n	800b978 <UART_SetConfig+0xc58>
      case UART_CLOCKSOURCE_LSE:
        pclk = (uint32_t) LSE_VALUE;
 800b964:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 800b968:	63fb      	str	r3, [r7, #60]	@ 0x3c
        break;
 800b96a:	e005      	b.n	800b978 <UART_SetConfig+0xc58>
      default:
        pclk = 0U;
 800b96c:	2300      	movs	r3, #0
 800b96e:	63fb      	str	r3, [r7, #60]	@ 0x3c
        ret = HAL_ERROR;
 800b970:	2301      	movs	r3, #1
 800b972:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
        break;
 800b976:	bf00      	nop
    }

    if (pclk != 0U)
 800b978:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800b97a:	2b00      	cmp	r3, #0
 800b97c:	d021      	beq.n	800b9c2 <UART_SetConfig+0xca2>
    {
      /* USARTDIV must be greater than or equal to 0d16 */
      usartdiv = (uint32_t)(UART_DIV_SAMPLING16(pclk, huart->Init.BaudRate, huart->Init.ClockPrescaler));
 800b97e:	697b      	ldr	r3, [r7, #20]
 800b980:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800b982:	4a1c      	ldr	r2, [pc, #112]	@ (800b9f4 <UART_SetConfig+0xcd4>)
 800b984:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800b988:	461a      	mov	r2, r3
 800b98a:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800b98c:	fbb3 f2f2 	udiv	r2, r3, r2
 800b990:	697b      	ldr	r3, [r7, #20]
 800b992:	685b      	ldr	r3, [r3, #4]
 800b994:	085b      	lsrs	r3, r3, #1
 800b996:	441a      	add	r2, r3
 800b998:	697b      	ldr	r3, [r7, #20]
 800b99a:	685b      	ldr	r3, [r3, #4]
 800b99c:	fbb2 f3f3 	udiv	r3, r2, r3
 800b9a0:	63bb      	str	r3, [r7, #56]	@ 0x38
      if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 800b9a2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b9a4:	2b0f      	cmp	r3, #15
 800b9a6:	d909      	bls.n	800b9bc <UART_SetConfig+0xc9c>
 800b9a8:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b9aa:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 800b9ae:	d205      	bcs.n	800b9bc <UART_SetConfig+0xc9c>
      {
        huart->Instance->BRR = (uint16_t)usartdiv;
 800b9b0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800b9b2:	b29a      	uxth	r2, r3
 800b9b4:	697b      	ldr	r3, [r7, #20]
 800b9b6:	681b      	ldr	r3, [r3, #0]
 800b9b8:	60da      	str	r2, [r3, #12]
 800b9ba:	e002      	b.n	800b9c2 <UART_SetConfig+0xca2>
      }
      else
      {
        ret = HAL_ERROR;
 800b9bc:	2301      	movs	r3, #1
 800b9be:	f887 3042 	strb.w	r3, [r7, #66]	@ 0x42
      }
    }
  }

  /* Initialize the number of data to process during RX/TX ISR execution */
  huart->NbTxDataToProcess = 1;
 800b9c2:	697b      	ldr	r3, [r7, #20]
 800b9c4:	2201      	movs	r2, #1
 800b9c6:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
  huart->NbRxDataToProcess = 1;
 800b9ca:	697b      	ldr	r3, [r7, #20]
 800b9cc:	2201      	movs	r2, #1
 800b9ce:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68

  /* Clear ISR function pointers */
  huart->RxISR = NULL;
 800b9d2:	697b      	ldr	r3, [r7, #20]
 800b9d4:	2200      	movs	r2, #0
 800b9d6:	675a      	str	r2, [r3, #116]	@ 0x74
  huart->TxISR = NULL;
 800b9d8:	697b      	ldr	r3, [r7, #20]
 800b9da:	2200      	movs	r2, #0
 800b9dc:	679a      	str	r2, [r3, #120]	@ 0x78

  return ret;
 800b9de:	f897 3042 	ldrb.w	r3, [r7, #66]	@ 0x42
}
 800b9e2:	4618      	mov	r0, r3
 800b9e4:	3748      	adds	r7, #72	@ 0x48
 800b9e6:	46bd      	mov	sp, r7
 800b9e8:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800b9ec:	03d09000 	.word	0x03d09000
 800b9f0:	003d0900 	.word	0x003d0900
 800b9f4:	08027510 	.word	0x08027510

0800b9f8 <UART_AdvFeatureConfig>:
  * @brief Configure the UART peripheral advanced features.
  * @param huart UART handle.
  * @retval None
  */
void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
{
 800b9f8:	b480      	push	{r7}
 800b9fa:	b083      	sub	sp, #12
 800b9fc:	af00      	add	r7, sp, #0
 800b9fe:	6078      	str	r0, [r7, #4]
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 800ba00:	687b      	ldr	r3, [r7, #4]
 800ba02:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ba04:	f003 0308 	and.w	r3, r3, #8
 800ba08:	2b00      	cmp	r3, #0
 800ba0a:	d00a      	beq.n	800ba22 <UART_AdvFeatureConfig+0x2a>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 800ba0c:	687b      	ldr	r3, [r7, #4]
 800ba0e:	681b      	ldr	r3, [r3, #0]
 800ba10:	685b      	ldr	r3, [r3, #4]
 800ba12:	f423 4100 	bic.w	r1, r3, #32768	@ 0x8000
 800ba16:	687b      	ldr	r3, [r7, #4]
 800ba18:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 800ba1a:	687b      	ldr	r3, [r7, #4]
 800ba1c:	681b      	ldr	r3, [r3, #0]
 800ba1e:	430a      	orrs	r2, r1
 800ba20:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 800ba22:	687b      	ldr	r3, [r7, #4]
 800ba24:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ba26:	f003 0301 	and.w	r3, r3, #1
 800ba2a:	2b00      	cmp	r3, #0
 800ba2c:	d00a      	beq.n	800ba44 <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 800ba2e:	687b      	ldr	r3, [r7, #4]
 800ba30:	681b      	ldr	r3, [r3, #0]
 800ba32:	685b      	ldr	r3, [r3, #4]
 800ba34:	f423 3100 	bic.w	r1, r3, #131072	@ 0x20000
 800ba38:	687b      	ldr	r3, [r7, #4]
 800ba3a:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 800ba3c:	687b      	ldr	r3, [r7, #4]
 800ba3e:	681b      	ldr	r3, [r3, #0]
 800ba40:	430a      	orrs	r2, r1
 800ba42:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 800ba44:	687b      	ldr	r3, [r7, #4]
 800ba46:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ba48:	f003 0302 	and.w	r3, r3, #2
 800ba4c:	2b00      	cmp	r3, #0
 800ba4e:	d00a      	beq.n	800ba66 <UART_AdvFeatureConfig+0x6e>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 800ba50:	687b      	ldr	r3, [r7, #4]
 800ba52:	681b      	ldr	r3, [r3, #0]
 800ba54:	685b      	ldr	r3, [r3, #4]
 800ba56:	f423 3180 	bic.w	r1, r3, #65536	@ 0x10000
 800ba5a:	687b      	ldr	r3, [r7, #4]
 800ba5c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800ba5e:	687b      	ldr	r3, [r7, #4]
 800ba60:	681b      	ldr	r3, [r3, #0]
 800ba62:	430a      	orrs	r2, r1
 800ba64:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 800ba66:	687b      	ldr	r3, [r7, #4]
 800ba68:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ba6a:	f003 0304 	and.w	r3, r3, #4
 800ba6e:	2b00      	cmp	r3, #0
 800ba70:	d00a      	beq.n	800ba88 <UART_AdvFeatureConfig+0x90>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 800ba72:	687b      	ldr	r3, [r7, #4]
 800ba74:	681b      	ldr	r3, [r3, #0]
 800ba76:	685b      	ldr	r3, [r3, #4]
 800ba78:	f423 2180 	bic.w	r1, r3, #262144	@ 0x40000
 800ba7c:	687b      	ldr	r3, [r7, #4]
 800ba7e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 800ba80:	687b      	ldr	r3, [r7, #4]
 800ba82:	681b      	ldr	r3, [r3, #0]
 800ba84:	430a      	orrs	r2, r1
 800ba86:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 800ba88:	687b      	ldr	r3, [r7, #4]
 800ba8a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800ba8c:	f003 0310 	and.w	r3, r3, #16
 800ba90:	2b00      	cmp	r3, #0
 800ba92:	d00a      	beq.n	800baaa <UART_AdvFeatureConfig+0xb2>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 800ba94:	687b      	ldr	r3, [r7, #4]
 800ba96:	681b      	ldr	r3, [r3, #0]
 800ba98:	689b      	ldr	r3, [r3, #8]
 800ba9a:	f423 5180 	bic.w	r1, r3, #4096	@ 0x1000
 800ba9e:	687b      	ldr	r3, [r7, #4]
 800baa0:	6bda      	ldr	r2, [r3, #60]	@ 0x3c
 800baa2:	687b      	ldr	r3, [r7, #4]
 800baa4:	681b      	ldr	r3, [r3, #0]
 800baa6:	430a      	orrs	r2, r1
 800baa8:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 800baaa:	687b      	ldr	r3, [r7, #4]
 800baac:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800baae:	f003 0320 	and.w	r3, r3, #32
 800bab2:	2b00      	cmp	r3, #0
 800bab4:	d00a      	beq.n	800bacc <UART_AdvFeatureConfig+0xd4>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 800bab6:	687b      	ldr	r3, [r7, #4]
 800bab8:	681b      	ldr	r3, [r3, #0]
 800baba:	689b      	ldr	r3, [r3, #8]
 800babc:	f423 5100 	bic.w	r1, r3, #8192	@ 0x2000
 800bac0:	687b      	ldr	r3, [r7, #4]
 800bac2:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 800bac4:	687b      	ldr	r3, [r7, #4]
 800bac6:	681b      	ldr	r3, [r3, #0]
 800bac8:	430a      	orrs	r2, r1
 800baca:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 800bacc:	687b      	ldr	r3, [r7, #4]
 800bace:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800bad0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800bad4:	2b00      	cmp	r3, #0
 800bad6:	d01a      	beq.n	800bb0e <UART_AdvFeatureConfig+0x116>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 800bad8:	687b      	ldr	r3, [r7, #4]
 800bada:	681b      	ldr	r3, [r3, #0]
 800badc:	685b      	ldr	r3, [r3, #4]
 800bade:	f423 1180 	bic.w	r1, r3, #1048576	@ 0x100000
 800bae2:	687b      	ldr	r3, [r7, #4]
 800bae4:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 800bae6:	687b      	ldr	r3, [r7, #4]
 800bae8:	681b      	ldr	r3, [r3, #0]
 800baea:	430a      	orrs	r2, r1
 800baec:	605a      	str	r2, [r3, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 800baee:	687b      	ldr	r3, [r7, #4]
 800baf0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800baf2:	f5b3 1f80 	cmp.w	r3, #1048576	@ 0x100000
 800baf6:	d10a      	bne.n	800bb0e <UART_AdvFeatureConfig+0x116>
    {
      assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 800baf8:	687b      	ldr	r3, [r7, #4]
 800bafa:	681b      	ldr	r3, [r3, #0]
 800bafc:	685b      	ldr	r3, [r3, #4]
 800bafe:	f423 01c0 	bic.w	r1, r3, #6291456	@ 0x600000
 800bb02:	687b      	ldr	r3, [r7, #4]
 800bb04:	6c9a      	ldr	r2, [r3, #72]	@ 0x48
 800bb06:	687b      	ldr	r3, [r7, #4]
 800bb08:	681b      	ldr	r3, [r3, #0]
 800bb0a:	430a      	orrs	r2, r1
 800bb0c:	605a      	str	r2, [r3, #4]
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 800bb0e:	687b      	ldr	r3, [r7, #4]
 800bb10:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800bb12:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800bb16:	2b00      	cmp	r3, #0
 800bb18:	d00a      	beq.n	800bb30 <UART_AdvFeatureConfig+0x138>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 800bb1a:	687b      	ldr	r3, [r7, #4]
 800bb1c:	681b      	ldr	r3, [r3, #0]
 800bb1e:	685b      	ldr	r3, [r3, #4]
 800bb20:	f423 2100 	bic.w	r1, r3, #524288	@ 0x80000
 800bb24:	687b      	ldr	r3, [r7, #4]
 800bb26:	6cda      	ldr	r2, [r3, #76]	@ 0x4c
 800bb28:	687b      	ldr	r3, [r7, #4]
 800bb2a:	681b      	ldr	r3, [r3, #0]
 800bb2c:	430a      	orrs	r2, r1
 800bb2e:	605a      	str	r2, [r3, #4]
  }
}
 800bb30:	bf00      	nop
 800bb32:	370c      	adds	r7, #12
 800bb34:	46bd      	mov	sp, r7
 800bb36:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb3a:	4770      	bx	lr

0800bb3c <UART_CheckIdleState>:
  * @brief Check the UART Idle State.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
{
 800bb3c:	b580      	push	{r7, lr}
 800bb3e:	b098      	sub	sp, #96	@ 0x60
 800bb40:	af02      	add	r7, sp, #8
 800bb42:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;

  /* Initialize the UART ErrorCode */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 800bb44:	687b      	ldr	r3, [r7, #4]
 800bb46:	2200      	movs	r2, #0
 800bb48:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90

  /* Init tickstart for timeout management */
  tickstart = HAL_GetTick();
 800bb4c:	f7f7 fb18 	bl	8003180 <HAL_GetTick>
 800bb50:	6578      	str	r0, [r7, #84]	@ 0x54

  /* Check if the Transmitter is enabled */
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 800bb52:	687b      	ldr	r3, [r7, #4]
 800bb54:	681b      	ldr	r3, [r3, #0]
 800bb56:	681b      	ldr	r3, [r3, #0]
 800bb58:	f003 0308 	and.w	r3, r3, #8
 800bb5c:	2b08      	cmp	r3, #8
 800bb5e:	d12f      	bne.n	800bbc0 <UART_CheckIdleState+0x84>
  {
    /* Wait until TEACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 800bb60:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 800bb64:	9300      	str	r3, [sp, #0]
 800bb66:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800bb68:	2200      	movs	r2, #0
 800bb6a:	f44f 1100 	mov.w	r1, #2097152	@ 0x200000
 800bb6e:	6878      	ldr	r0, [r7, #4]
 800bb70:	f000 f88e 	bl	800bc90 <UART_WaitOnFlagUntilTimeout>
 800bb74:	4603      	mov	r3, r0
 800bb76:	2b00      	cmp	r3, #0
 800bb78:	d022      	beq.n	800bbc0 <UART_CheckIdleState+0x84>
    {
      /* Disable TXE interrupt for the interrupt process */
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE));
 800bb7a:	687b      	ldr	r3, [r7, #4]
 800bb7c:	681b      	ldr	r3, [r3, #0]
 800bb7e:	63bb      	str	r3, [r7, #56]	@ 0x38
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800bb80:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800bb82:	e853 3f00 	ldrex	r3, [r3]
 800bb86:	637b      	str	r3, [r7, #52]	@ 0x34
   return(result);
 800bb88:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800bb8a:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800bb8e:	653b      	str	r3, [r7, #80]	@ 0x50
 800bb90:	687b      	ldr	r3, [r7, #4]
 800bb92:	681b      	ldr	r3, [r3, #0]
 800bb94:	461a      	mov	r2, r3
 800bb96:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 800bb98:	647b      	str	r3, [r7, #68]	@ 0x44
 800bb9a:	643a      	str	r2, [r7, #64]	@ 0x40
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800bb9c:	6c39      	ldr	r1, [r7, #64]	@ 0x40
 800bb9e:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800bba0:	e841 2300 	strex	r3, r2, [r1]
 800bba4:	63fb      	str	r3, [r7, #60]	@ 0x3c
   return(result);
 800bba6:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800bba8:	2b00      	cmp	r3, #0
 800bbaa:	d1e6      	bne.n	800bb7a <UART_CheckIdleState+0x3e>

      huart->gState = HAL_UART_STATE_READY;
 800bbac:	687b      	ldr	r3, [r7, #4]
 800bbae:	2220      	movs	r2, #32
 800bbb0:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

      __HAL_UNLOCK(huart);
 800bbb4:	687b      	ldr	r3, [r7, #4]
 800bbb6:	2200      	movs	r2, #0
 800bbb8:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84

      /* Timeout occurred */
      return HAL_TIMEOUT;
 800bbbc:	2303      	movs	r3, #3
 800bbbe:	e063      	b.n	800bc88 <UART_CheckIdleState+0x14c>
    }
  }

  /* Check if the Receiver is enabled */
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 800bbc0:	687b      	ldr	r3, [r7, #4]
 800bbc2:	681b      	ldr	r3, [r3, #0]
 800bbc4:	681b      	ldr	r3, [r3, #0]
 800bbc6:	f003 0304 	and.w	r3, r3, #4
 800bbca:	2b04      	cmp	r3, #4
 800bbcc:	d149      	bne.n	800bc62 <UART_CheckIdleState+0x126>
  {
    /* Wait until REACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 800bbce:	f06f 437e 	mvn.w	r3, #4261412864	@ 0xfe000000
 800bbd2:	9300      	str	r3, [sp, #0]
 800bbd4:	6d7b      	ldr	r3, [r7, #84]	@ 0x54
 800bbd6:	2200      	movs	r2, #0
 800bbd8:	f44f 0180 	mov.w	r1, #4194304	@ 0x400000
 800bbdc:	6878      	ldr	r0, [r7, #4]
 800bbde:	f000 f857 	bl	800bc90 <UART_WaitOnFlagUntilTimeout>
 800bbe2:	4603      	mov	r3, r0
 800bbe4:	2b00      	cmp	r3, #0
 800bbe6:	d03c      	beq.n	800bc62 <UART_CheckIdleState+0x126>
    {
      /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error)
      interrupts for the interrupt process */
      ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 800bbe8:	687b      	ldr	r3, [r7, #4]
 800bbea:	681b      	ldr	r3, [r3, #0]
 800bbec:	627b      	str	r3, [r7, #36]	@ 0x24
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800bbee:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800bbf0:	e853 3f00 	ldrex	r3, [r3]
 800bbf4:	623b      	str	r3, [r7, #32]
   return(result);
 800bbf6:	6a3b      	ldr	r3, [r7, #32]
 800bbf8:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 800bbfc:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800bbfe:	687b      	ldr	r3, [r7, #4]
 800bc00:	681b      	ldr	r3, [r3, #0]
 800bc02:	461a      	mov	r2, r3
 800bc04:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800bc06:	633b      	str	r3, [r7, #48]	@ 0x30
 800bc08:	62fa      	str	r2, [r7, #44]	@ 0x2c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800bc0a:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800bc0c:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800bc0e:	e841 2300 	strex	r3, r2, [r1]
 800bc12:	62bb      	str	r3, [r7, #40]	@ 0x28
   return(result);
 800bc14:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800bc16:	2b00      	cmp	r3, #0
 800bc18:	d1e6      	bne.n	800bbe8 <UART_CheckIdleState+0xac>
      ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 800bc1a:	687b      	ldr	r3, [r7, #4]
 800bc1c:	681b      	ldr	r3, [r3, #0]
 800bc1e:	3308      	adds	r3, #8
 800bc20:	613b      	str	r3, [r7, #16]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800bc22:	693b      	ldr	r3, [r7, #16]
 800bc24:	e853 3f00 	ldrex	r3, [r3]
 800bc28:	60fb      	str	r3, [r7, #12]
   return(result);
 800bc2a:	68fb      	ldr	r3, [r7, #12]
 800bc2c:	f023 0301 	bic.w	r3, r3, #1
 800bc30:	64bb      	str	r3, [r7, #72]	@ 0x48
 800bc32:	687b      	ldr	r3, [r7, #4]
 800bc34:	681b      	ldr	r3, [r3, #0]
 800bc36:	3308      	adds	r3, #8
 800bc38:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 800bc3a:	61fa      	str	r2, [r7, #28]
 800bc3c:	61bb      	str	r3, [r7, #24]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800bc3e:	69b9      	ldr	r1, [r7, #24]
 800bc40:	69fa      	ldr	r2, [r7, #28]
 800bc42:	e841 2300 	strex	r3, r2, [r1]
 800bc46:	617b      	str	r3, [r7, #20]
   return(result);
 800bc48:	697b      	ldr	r3, [r7, #20]
 800bc4a:	2b00      	cmp	r3, #0
 800bc4c:	d1e5      	bne.n	800bc1a <UART_CheckIdleState+0xde>

      huart->RxState = HAL_UART_STATE_READY;
 800bc4e:	687b      	ldr	r3, [r7, #4]
 800bc50:	2220      	movs	r2, #32
 800bc52:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c

      __HAL_UNLOCK(huart);
 800bc56:	687b      	ldr	r3, [r7, #4]
 800bc58:	2200      	movs	r2, #0
 800bc5a:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84

      /* Timeout occurred */
      return HAL_TIMEOUT;
 800bc5e:	2303      	movs	r3, #3
 800bc60:	e012      	b.n	800bc88 <UART_CheckIdleState+0x14c>
    }
  }

  /* Initialize the UART State */
  huart->gState = HAL_UART_STATE_READY;
 800bc62:	687b      	ldr	r3, [r7, #4]
 800bc64:	2220      	movs	r2, #32
 800bc66:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
  huart->RxState = HAL_UART_STATE_READY;
 800bc6a:	687b      	ldr	r3, [r7, #4]
 800bc6c:	2220      	movs	r2, #32
 800bc6e:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800bc72:	687b      	ldr	r3, [r7, #4]
 800bc74:	2200      	movs	r2, #0
 800bc76:	66da      	str	r2, [r3, #108]	@ 0x6c
  huart->RxEventType = HAL_UART_RXEVENT_TC;
 800bc78:	687b      	ldr	r3, [r7, #4]
 800bc7a:	2200      	movs	r2, #0
 800bc7c:	671a      	str	r2, [r3, #112]	@ 0x70

  __HAL_UNLOCK(huart);
 800bc7e:	687b      	ldr	r3, [r7, #4]
 800bc80:	2200      	movs	r2, #0
 800bc82:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84

  return HAL_OK;
 800bc86:	2300      	movs	r3, #0
}
 800bc88:	4618      	mov	r0, r3
 800bc8a:	3758      	adds	r7, #88	@ 0x58
 800bc8c:	46bd      	mov	sp, r7
 800bc8e:	bd80      	pop	{r7, pc}

0800bc90 <UART_WaitOnFlagUntilTimeout>:
  * @param Timeout   Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
                                              uint32_t Tickstart, uint32_t Timeout)
{
 800bc90:	b580      	push	{r7, lr}
 800bc92:	b084      	sub	sp, #16
 800bc94:	af00      	add	r7, sp, #0
 800bc96:	60f8      	str	r0, [r7, #12]
 800bc98:	60b9      	str	r1, [r7, #8]
 800bc9a:	603b      	str	r3, [r7, #0]
 800bc9c:	4613      	mov	r3, r2
 800bc9e:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 800bca0:	e04f      	b.n	800bd42 <UART_WaitOnFlagUntilTimeout+0xb2>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800bca2:	69bb      	ldr	r3, [r7, #24]
 800bca4:	f1b3 3fff 	cmp.w	r3, #4294967295
 800bca8:	d04b      	beq.n	800bd42 <UART_WaitOnFlagUntilTimeout+0xb2>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800bcaa:	f7f7 fa69 	bl	8003180 <HAL_GetTick>
 800bcae:	4602      	mov	r2, r0
 800bcb0:	683b      	ldr	r3, [r7, #0]
 800bcb2:	1ad3      	subs	r3, r2, r3
 800bcb4:	69ba      	ldr	r2, [r7, #24]
 800bcb6:	429a      	cmp	r2, r3
 800bcb8:	d302      	bcc.n	800bcc0 <UART_WaitOnFlagUntilTimeout+0x30>
 800bcba:	69bb      	ldr	r3, [r7, #24]
 800bcbc:	2b00      	cmp	r3, #0
 800bcbe:	d101      	bne.n	800bcc4 <UART_WaitOnFlagUntilTimeout+0x34>
      {

        return HAL_TIMEOUT;
 800bcc0:	2303      	movs	r3, #3
 800bcc2:	e04e      	b.n	800bd62 <UART_WaitOnFlagUntilTimeout+0xd2>
      }

      if ((READ_BIT(huart->Instance->CR1, USART_CR1_RE) != 0U) && (Flag != UART_FLAG_TXE) && (Flag != UART_FLAG_TC))
 800bcc4:	68fb      	ldr	r3, [r7, #12]
 800bcc6:	681b      	ldr	r3, [r3, #0]
 800bcc8:	681b      	ldr	r3, [r3, #0]
 800bcca:	f003 0304 	and.w	r3, r3, #4
 800bcce:	2b00      	cmp	r3, #0
 800bcd0:	d037      	beq.n	800bd42 <UART_WaitOnFlagUntilTimeout+0xb2>
 800bcd2:	68bb      	ldr	r3, [r7, #8]
 800bcd4:	2b80      	cmp	r3, #128	@ 0x80
 800bcd6:	d034      	beq.n	800bd42 <UART_WaitOnFlagUntilTimeout+0xb2>
 800bcd8:	68bb      	ldr	r3, [r7, #8]
 800bcda:	2b40      	cmp	r3, #64	@ 0x40
 800bcdc:	d031      	beq.n	800bd42 <UART_WaitOnFlagUntilTimeout+0xb2>
      {
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_ORE) == SET)
 800bcde:	68fb      	ldr	r3, [r7, #12]
 800bce0:	681b      	ldr	r3, [r3, #0]
 800bce2:	69db      	ldr	r3, [r3, #28]
 800bce4:	f003 0308 	and.w	r3, r3, #8
 800bce8:	2b08      	cmp	r3, #8
 800bcea:	d110      	bne.n	800bd0e <UART_WaitOnFlagUntilTimeout+0x7e>
        {
          /* Clear Overrun Error flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 800bcec:	68fb      	ldr	r3, [r7, #12]
 800bcee:	681b      	ldr	r3, [r3, #0]
 800bcf0:	2208      	movs	r2, #8
 800bcf2:	621a      	str	r2, [r3, #32]

          /* Blocking error : transfer is aborted
          Set the UART state ready to be able to start again the process,
          Disable Rx Interrupts if ongoing */
          UART_EndRxTransfer(huart);
 800bcf4:	68f8      	ldr	r0, [r7, #12]
 800bcf6:	f000 f839 	bl	800bd6c <UART_EndRxTransfer>

          huart->ErrorCode = HAL_UART_ERROR_ORE;
 800bcfa:	68fb      	ldr	r3, [r7, #12]
 800bcfc:	2208      	movs	r2, #8
 800bcfe:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90

          /* Process Unlocked */
          __HAL_UNLOCK(huart);
 800bd02:	68fb      	ldr	r3, [r7, #12]
 800bd04:	2200      	movs	r2, #0
 800bd06:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84

          return HAL_ERROR;
 800bd0a:	2301      	movs	r3, #1
 800bd0c:	e029      	b.n	800bd62 <UART_WaitOnFlagUntilTimeout+0xd2>
        }
        if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RTOF) == SET)
 800bd0e:	68fb      	ldr	r3, [r7, #12]
 800bd10:	681b      	ldr	r3, [r3, #0]
 800bd12:	69db      	ldr	r3, [r3, #28]
 800bd14:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800bd18:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800bd1c:	d111      	bne.n	800bd42 <UART_WaitOnFlagUntilTimeout+0xb2>
        {
          /* Clear Receiver Timeout flag*/
          __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_RTOF);
 800bd1e:	68fb      	ldr	r3, [r7, #12]
 800bd20:	681b      	ldr	r3, [r3, #0]
 800bd22:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 800bd26:	621a      	str	r2, [r3, #32]

          /* Blocking error : transfer is aborted
          Set the UART state ready to be able to start again the process,
          Disable Rx Interrupts if ongoing */
          UART_EndRxTransfer(huart);
 800bd28:	68f8      	ldr	r0, [r7, #12]
 800bd2a:	f000 f81f 	bl	800bd6c <UART_EndRxTransfer>

          huart->ErrorCode = HAL_UART_ERROR_RTO;
 800bd2e:	68fb      	ldr	r3, [r7, #12]
 800bd30:	2220      	movs	r2, #32
 800bd32:	f8c3 2090 	str.w	r2, [r3, #144]	@ 0x90

          /* Process Unlocked */
          __HAL_UNLOCK(huart);
 800bd36:	68fb      	ldr	r3, [r7, #12]
 800bd38:	2200      	movs	r2, #0
 800bd3a:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84

          return HAL_TIMEOUT;
 800bd3e:	2303      	movs	r3, #3
 800bd40:	e00f      	b.n	800bd62 <UART_WaitOnFlagUntilTimeout+0xd2>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 800bd42:	68fb      	ldr	r3, [r7, #12]
 800bd44:	681b      	ldr	r3, [r3, #0]
 800bd46:	69da      	ldr	r2, [r3, #28]
 800bd48:	68bb      	ldr	r3, [r7, #8]
 800bd4a:	4013      	ands	r3, r2
 800bd4c:	68ba      	ldr	r2, [r7, #8]
 800bd4e:	429a      	cmp	r2, r3
 800bd50:	bf0c      	ite	eq
 800bd52:	2301      	moveq	r3, #1
 800bd54:	2300      	movne	r3, #0
 800bd56:	b2db      	uxtb	r3, r3
 800bd58:	461a      	mov	r2, r3
 800bd5a:	79fb      	ldrb	r3, [r7, #7]
 800bd5c:	429a      	cmp	r2, r3
 800bd5e:	d0a0      	beq.n	800bca2 <UART_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 800bd60:	2300      	movs	r3, #0
}
 800bd62:	4618      	mov	r0, r3
 800bd64:	3710      	adds	r7, #16
 800bd66:	46bd      	mov	sp, r7
 800bd68:	bd80      	pop	{r7, pc}
	...

0800bd6c <UART_EndRxTransfer>:
  * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception completion).
  * @param  huart UART handle.
  * @retval None
  */
static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
{
 800bd6c:	b480      	push	{r7}
 800bd6e:	b095      	sub	sp, #84	@ 0x54
 800bd70:	af00      	add	r7, sp, #0
 800bd72:	6078      	str	r0, [r7, #4]
  /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
  ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
 800bd74:	687b      	ldr	r3, [r7, #4]
 800bd76:	681b      	ldr	r3, [r3, #0]
 800bd78:	637b      	str	r3, [r7, #52]	@ 0x34
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800bd7a:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800bd7c:	e853 3f00 	ldrex	r3, [r3]
 800bd80:	633b      	str	r3, [r7, #48]	@ 0x30
   return(result);
 800bd82:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800bd84:	f423 7390 	bic.w	r3, r3, #288	@ 0x120
 800bd88:	64fb      	str	r3, [r7, #76]	@ 0x4c
 800bd8a:	687b      	ldr	r3, [r7, #4]
 800bd8c:	681b      	ldr	r3, [r3, #0]
 800bd8e:	461a      	mov	r2, r3
 800bd90:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800bd92:	643b      	str	r3, [r7, #64]	@ 0x40
 800bd94:	63fa      	str	r2, [r7, #60]	@ 0x3c
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800bd96:	6bf9      	ldr	r1, [r7, #60]	@ 0x3c
 800bd98:	6c3a      	ldr	r2, [r7, #64]	@ 0x40
 800bd9a:	e841 2300 	strex	r3, r2, [r1]
 800bd9e:	63bb      	str	r3, [r7, #56]	@ 0x38
   return(result);
 800bda0:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800bda2:	2b00      	cmp	r3, #0
 800bda4:	d1e6      	bne.n	800bd74 <UART_EndRxTransfer+0x8>
  ATOMIC_CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
 800bda6:	687b      	ldr	r3, [r7, #4]
 800bda8:	681b      	ldr	r3, [r3, #0]
 800bdaa:	3308      	adds	r3, #8
 800bdac:	623b      	str	r3, [r7, #32]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800bdae:	6a3b      	ldr	r3, [r7, #32]
 800bdb0:	e853 3f00 	ldrex	r3, [r3]
 800bdb4:	61fb      	str	r3, [r7, #28]
   return(result);
 800bdb6:	69fa      	ldr	r2, [r7, #28]
 800bdb8:	4b1e      	ldr	r3, [pc, #120]	@ (800be34 <UART_EndRxTransfer+0xc8>)
 800bdba:	4013      	ands	r3, r2
 800bdbc:	64bb      	str	r3, [r7, #72]	@ 0x48
 800bdbe:	687b      	ldr	r3, [r7, #4]
 800bdc0:	681b      	ldr	r3, [r3, #0]
 800bdc2:	3308      	adds	r3, #8
 800bdc4:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 800bdc6:	62fa      	str	r2, [r7, #44]	@ 0x2c
 800bdc8:	62bb      	str	r3, [r7, #40]	@ 0x28
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800bdca:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800bdcc:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800bdce:	e841 2300 	strex	r3, r2, [r1]
 800bdd2:	627b      	str	r3, [r7, #36]	@ 0x24
   return(result);
 800bdd4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800bdd6:	2b00      	cmp	r3, #0
 800bdd8:	d1e5      	bne.n	800bda6 <UART_EndRxTransfer+0x3a>

  /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
  if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 800bdda:	687b      	ldr	r3, [r7, #4]
 800bddc:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 800bdde:	2b01      	cmp	r3, #1
 800bde0:	d118      	bne.n	800be14 <UART_EndRxTransfer+0xa8>
  {
    ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 800bde2:	687b      	ldr	r3, [r7, #4]
 800bde4:	681b      	ldr	r3, [r3, #0]
 800bde6:	60fb      	str	r3, [r7, #12]
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 800bde8:	68fb      	ldr	r3, [r7, #12]
 800bdea:	e853 3f00 	ldrex	r3, [r3]
 800bdee:	60bb      	str	r3, [r7, #8]
   return(result);
 800bdf0:	68bb      	ldr	r3, [r7, #8]
 800bdf2:	f023 0310 	bic.w	r3, r3, #16
 800bdf6:	647b      	str	r3, [r7, #68]	@ 0x44
 800bdf8:	687b      	ldr	r3, [r7, #4]
 800bdfa:	681b      	ldr	r3, [r3, #0]
 800bdfc:	461a      	mov	r2, r3
 800bdfe:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800be00:	61bb      	str	r3, [r7, #24]
 800be02:	617a      	str	r2, [r7, #20]
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 800be04:	6979      	ldr	r1, [r7, #20]
 800be06:	69ba      	ldr	r2, [r7, #24]
 800be08:	e841 2300 	strex	r3, r2, [r1]
 800be0c:	613b      	str	r3, [r7, #16]
   return(result);
 800be0e:	693b      	ldr	r3, [r7, #16]
 800be10:	2b00      	cmp	r3, #0
 800be12:	d1e6      	bne.n	800bde2 <UART_EndRxTransfer+0x76>
  }

  /* At end of Rx process, restore huart->RxState to Ready */
  huart->RxState = HAL_UART_STATE_READY;
 800be14:	687b      	ldr	r3, [r7, #4]
 800be16:	2220      	movs	r2, #32
 800be18:	f8c3 208c 	str.w	r2, [r3, #140]	@ 0x8c
  huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 800be1c:	687b      	ldr	r3, [r7, #4]
 800be1e:	2200      	movs	r2, #0
 800be20:	66da      	str	r2, [r3, #108]	@ 0x6c

  /* Reset RxIsr function pointer */
  huart->RxISR = NULL;
 800be22:	687b      	ldr	r3, [r7, #4]
 800be24:	2200      	movs	r2, #0
 800be26:	675a      	str	r2, [r3, #116]	@ 0x74
}
 800be28:	bf00      	nop
 800be2a:	3754      	adds	r7, #84	@ 0x54
 800be2c:	46bd      	mov	sp, r7
 800be2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800be32:	4770      	bx	lr
 800be34:	effffffe 	.word	0xeffffffe

0800be38 <HAL_UARTEx_DisableFifoMode>:
  * @brief  Disable the FIFO mode.
  * @param huart      UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UARTEx_DisableFifoMode(UART_HandleTypeDef *huart)
{
 800be38:	b480      	push	{r7}
 800be3a:	b085      	sub	sp, #20
 800be3c:	af00      	add	r7, sp, #0
 800be3e:	6078      	str	r0, [r7, #4]

  /* Check parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));

  /* Process Locked */
  __HAL_LOCK(huart);
 800be40:	687b      	ldr	r3, [r7, #4]
 800be42:	f893 3084 	ldrb.w	r3, [r3, #132]	@ 0x84
 800be46:	2b01      	cmp	r3, #1
 800be48:	d101      	bne.n	800be4e <HAL_UARTEx_DisableFifoMode+0x16>
 800be4a:	2302      	movs	r3, #2
 800be4c:	e027      	b.n	800be9e <HAL_UARTEx_DisableFifoMode+0x66>
 800be4e:	687b      	ldr	r3, [r7, #4]
 800be50:	2201      	movs	r2, #1
 800be52:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84

  huart->gState = HAL_UART_STATE_BUSY;
 800be56:	687b      	ldr	r3, [r7, #4]
 800be58:	2224      	movs	r2, #36	@ 0x24
 800be5a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
 800be5e:	687b      	ldr	r3, [r7, #4]
 800be60:	681b      	ldr	r3, [r3, #0]
 800be62:	681b      	ldr	r3, [r3, #0]
 800be64:	60fb      	str	r3, [r7, #12]

  /* Disable UART */
  __HAL_UART_DISABLE(huart);
 800be66:	687b      	ldr	r3, [r7, #4]
 800be68:	681b      	ldr	r3, [r3, #0]
 800be6a:	681a      	ldr	r2, [r3, #0]
 800be6c:	687b      	ldr	r3, [r7, #4]
 800be6e:	681b      	ldr	r3, [r3, #0]
 800be70:	f022 0201 	bic.w	r2, r2, #1
 800be74:	601a      	str	r2, [r3, #0]

  /* Enable FIFO mode */
  CLEAR_BIT(tmpcr1, USART_CR1_FIFOEN);
 800be76:	68fb      	ldr	r3, [r7, #12]
 800be78:	f023 5300 	bic.w	r3, r3, #536870912	@ 0x20000000
 800be7c:	60fb      	str	r3, [r7, #12]
  huart->FifoMode = UART_FIFOMODE_DISABLE;
 800be7e:	687b      	ldr	r3, [r7, #4]
 800be80:	2200      	movs	r2, #0
 800be82:	665a      	str	r2, [r3, #100]	@ 0x64

  /* Restore UART configuration */
  WRITE_REG(huart->Instance->CR1, tmpcr1);
 800be84:	687b      	ldr	r3, [r7, #4]
 800be86:	681b      	ldr	r3, [r3, #0]
 800be88:	68fa      	ldr	r2, [r7, #12]
 800be8a:	601a      	str	r2, [r3, #0]

  huart->gState = HAL_UART_STATE_READY;
 800be8c:	687b      	ldr	r3, [r7, #4]
 800be8e:	2220      	movs	r2, #32
 800be90:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Process Unlocked */
  __HAL_UNLOCK(huart);
 800be94:	687b      	ldr	r3, [r7, #4]
 800be96:	2200      	movs	r2, #0
 800be98:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84

  return HAL_OK;
 800be9c:	2300      	movs	r3, #0
}
 800be9e:	4618      	mov	r0, r3
 800bea0:	3714      	adds	r7, #20
 800bea2:	46bd      	mov	sp, r7
 800bea4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bea8:	4770      	bx	lr

0800beaa <HAL_UARTEx_SetTxFifoThreshold>:
  *            @arg @ref UART_TXFIFO_THRESHOLD_7_8
  *            @arg @ref UART_TXFIFO_THRESHOLD_8_8
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UARTEx_SetTxFifoThreshold(UART_HandleTypeDef *huart, uint32_t Threshold)
{
 800beaa:	b580      	push	{r7, lr}
 800beac:	b084      	sub	sp, #16
 800beae:	af00      	add	r7, sp, #0
 800beb0:	6078      	str	r0, [r7, #4]
 800beb2:	6039      	str	r1, [r7, #0]
  /* Check parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
  assert_param(IS_UART_TXFIFO_THRESHOLD(Threshold));

  /* Process Locked */
  __HAL_LOCK(huart);
 800beb4:	687b      	ldr	r3, [r7, #4]
 800beb6:	f893 3084 	ldrb.w	r3, [r3, #132]	@ 0x84
 800beba:	2b01      	cmp	r3, #1
 800bebc:	d101      	bne.n	800bec2 <HAL_UARTEx_SetTxFifoThreshold+0x18>
 800bebe:	2302      	movs	r3, #2
 800bec0:	e02d      	b.n	800bf1e <HAL_UARTEx_SetTxFifoThreshold+0x74>
 800bec2:	687b      	ldr	r3, [r7, #4]
 800bec4:	2201      	movs	r2, #1
 800bec6:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84

  huart->gState = HAL_UART_STATE_BUSY;
 800beca:	687b      	ldr	r3, [r7, #4]
 800becc:	2224      	movs	r2, #36	@ 0x24
 800bece:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
 800bed2:	687b      	ldr	r3, [r7, #4]
 800bed4:	681b      	ldr	r3, [r3, #0]
 800bed6:	681b      	ldr	r3, [r3, #0]
 800bed8:	60fb      	str	r3, [r7, #12]

  /* Disable UART */
  __HAL_UART_DISABLE(huart);
 800beda:	687b      	ldr	r3, [r7, #4]
 800bedc:	681b      	ldr	r3, [r3, #0]
 800bede:	681a      	ldr	r2, [r3, #0]
 800bee0:	687b      	ldr	r3, [r7, #4]
 800bee2:	681b      	ldr	r3, [r3, #0]
 800bee4:	f022 0201 	bic.w	r2, r2, #1
 800bee8:	601a      	str	r2, [r3, #0]

  /* Update TX threshold configuration */
  MODIFY_REG(huart->Instance->CR3, USART_CR3_TXFTCFG, Threshold);
 800beea:	687b      	ldr	r3, [r7, #4]
 800beec:	681b      	ldr	r3, [r3, #0]
 800beee:	689b      	ldr	r3, [r3, #8]
 800bef0:	f023 4160 	bic.w	r1, r3, #3758096384	@ 0xe0000000
 800bef4:	687b      	ldr	r3, [r7, #4]
 800bef6:	681b      	ldr	r3, [r3, #0]
 800bef8:	683a      	ldr	r2, [r7, #0]
 800befa:	430a      	orrs	r2, r1
 800befc:	609a      	str	r2, [r3, #8]

  /* Determine the number of data to process during RX/TX ISR execution */
  UARTEx_SetNbDataToProcess(huart);
 800befe:	6878      	ldr	r0, [r7, #4]
 800bf00:	f000 f850 	bl	800bfa4 <UARTEx_SetNbDataToProcess>

  /* Restore UART configuration */
  WRITE_REG(huart->Instance->CR1, tmpcr1);
 800bf04:	687b      	ldr	r3, [r7, #4]
 800bf06:	681b      	ldr	r3, [r3, #0]
 800bf08:	68fa      	ldr	r2, [r7, #12]
 800bf0a:	601a      	str	r2, [r3, #0]

  huart->gState = HAL_UART_STATE_READY;
 800bf0c:	687b      	ldr	r3, [r7, #4]
 800bf0e:	2220      	movs	r2, #32
 800bf10:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Process Unlocked */
  __HAL_UNLOCK(huart);
 800bf14:	687b      	ldr	r3, [r7, #4]
 800bf16:	2200      	movs	r2, #0
 800bf18:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84

  return HAL_OK;
 800bf1c:	2300      	movs	r3, #0
}
 800bf1e:	4618      	mov	r0, r3
 800bf20:	3710      	adds	r7, #16
 800bf22:	46bd      	mov	sp, r7
 800bf24:	bd80      	pop	{r7, pc}

0800bf26 <HAL_UARTEx_SetRxFifoThreshold>:
  *            @arg @ref UART_RXFIFO_THRESHOLD_7_8
  *            @arg @ref UART_RXFIFO_THRESHOLD_8_8
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UARTEx_SetRxFifoThreshold(UART_HandleTypeDef *huart, uint32_t Threshold)
{
 800bf26:	b580      	push	{r7, lr}
 800bf28:	b084      	sub	sp, #16
 800bf2a:	af00      	add	r7, sp, #0
 800bf2c:	6078      	str	r0, [r7, #4]
 800bf2e:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_UART_FIFO_INSTANCE(huart->Instance));
  assert_param(IS_UART_RXFIFO_THRESHOLD(Threshold));

  /* Process Locked */
  __HAL_LOCK(huart);
 800bf30:	687b      	ldr	r3, [r7, #4]
 800bf32:	f893 3084 	ldrb.w	r3, [r3, #132]	@ 0x84
 800bf36:	2b01      	cmp	r3, #1
 800bf38:	d101      	bne.n	800bf3e <HAL_UARTEx_SetRxFifoThreshold+0x18>
 800bf3a:	2302      	movs	r3, #2
 800bf3c:	e02d      	b.n	800bf9a <HAL_UARTEx_SetRxFifoThreshold+0x74>
 800bf3e:	687b      	ldr	r3, [r7, #4]
 800bf40:	2201      	movs	r2, #1
 800bf42:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84

  huart->gState = HAL_UART_STATE_BUSY;
 800bf46:	687b      	ldr	r3, [r7, #4]
 800bf48:	2224      	movs	r2, #36	@ 0x24
 800bf4a:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Save actual UART configuration */
  tmpcr1 = READ_REG(huart->Instance->CR1);
 800bf4e:	687b      	ldr	r3, [r7, #4]
 800bf50:	681b      	ldr	r3, [r3, #0]
 800bf52:	681b      	ldr	r3, [r3, #0]
 800bf54:	60fb      	str	r3, [r7, #12]

  /* Disable UART */
  __HAL_UART_DISABLE(huart);
 800bf56:	687b      	ldr	r3, [r7, #4]
 800bf58:	681b      	ldr	r3, [r3, #0]
 800bf5a:	681a      	ldr	r2, [r3, #0]
 800bf5c:	687b      	ldr	r3, [r7, #4]
 800bf5e:	681b      	ldr	r3, [r3, #0]
 800bf60:	f022 0201 	bic.w	r2, r2, #1
 800bf64:	601a      	str	r2, [r3, #0]

  /* Update RX threshold configuration */
  MODIFY_REG(huart->Instance->CR3, USART_CR3_RXFTCFG, Threshold);
 800bf66:	687b      	ldr	r3, [r7, #4]
 800bf68:	681b      	ldr	r3, [r3, #0]
 800bf6a:	689b      	ldr	r3, [r3, #8]
 800bf6c:	f023 6160 	bic.w	r1, r3, #234881024	@ 0xe000000
 800bf70:	687b      	ldr	r3, [r7, #4]
 800bf72:	681b      	ldr	r3, [r3, #0]
 800bf74:	683a      	ldr	r2, [r7, #0]
 800bf76:	430a      	orrs	r2, r1
 800bf78:	609a      	str	r2, [r3, #8]

  /* Determine the number of data to process during RX/TX ISR execution */
  UARTEx_SetNbDataToProcess(huart);
 800bf7a:	6878      	ldr	r0, [r7, #4]
 800bf7c:	f000 f812 	bl	800bfa4 <UARTEx_SetNbDataToProcess>

  /* Restore UART configuration */
  WRITE_REG(huart->Instance->CR1, tmpcr1);
 800bf80:	687b      	ldr	r3, [r7, #4]
 800bf82:	681b      	ldr	r3, [r3, #0]
 800bf84:	68fa      	ldr	r2, [r7, #12]
 800bf86:	601a      	str	r2, [r3, #0]

  huart->gState = HAL_UART_STATE_READY;
 800bf88:	687b      	ldr	r3, [r7, #4]
 800bf8a:	2220      	movs	r2, #32
 800bf8c:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88

  /* Process Unlocked */
  __HAL_UNLOCK(huart);
 800bf90:	687b      	ldr	r3, [r7, #4]
 800bf92:	2200      	movs	r2, #0
 800bf94:	f883 2084 	strb.w	r2, [r3, #132]	@ 0x84

  return HAL_OK;
 800bf98:	2300      	movs	r3, #0
}
 800bf9a:	4618      	mov	r0, r3
 800bf9c:	3710      	adds	r7, #16
 800bf9e:	46bd      	mov	sp, r7
 800bfa0:	bd80      	pop	{r7, pc}
	...

0800bfa4 <UARTEx_SetNbDataToProcess>:
  *       the UART configuration registers.
  * @param huart UART handle.
  * @retval None
  */
static void UARTEx_SetNbDataToProcess(UART_HandleTypeDef *huart)
{
 800bfa4:	b480      	push	{r7}
 800bfa6:	b085      	sub	sp, #20
 800bfa8:	af00      	add	r7, sp, #0
 800bfaa:	6078      	str	r0, [r7, #4]
  uint8_t rx_fifo_threshold;
  uint8_t tx_fifo_threshold;
  static const uint8_t numerator[] = {1U, 1U, 1U, 3U, 7U, 1U, 0U, 0U};
  static const uint8_t denominator[] = {8U, 4U, 2U, 4U, 8U, 1U, 1U, 1U};

  if (huart->FifoMode == UART_FIFOMODE_DISABLE)
 800bfac:	687b      	ldr	r3, [r7, #4]
 800bfae:	6e5b      	ldr	r3, [r3, #100]	@ 0x64
 800bfb0:	2b00      	cmp	r3, #0
 800bfb2:	d108      	bne.n	800bfc6 <UARTEx_SetNbDataToProcess+0x22>
  {
    huart->NbTxDataToProcess = 1U;
 800bfb4:	687b      	ldr	r3, [r7, #4]
 800bfb6:	2201      	movs	r2, #1
 800bfb8:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
    huart->NbRxDataToProcess = 1U;
 800bfbc:	687b      	ldr	r3, [r7, #4]
 800bfbe:	2201      	movs	r2, #1
 800bfc0:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
                               (uint16_t)denominator[tx_fifo_threshold];
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
                               (uint16_t)denominator[rx_fifo_threshold];
  }
}
 800bfc4:	e031      	b.n	800c02a <UARTEx_SetNbDataToProcess+0x86>
    rx_fifo_depth = RX_FIFO_DEPTH;
 800bfc6:	2310      	movs	r3, #16
 800bfc8:	73fb      	strb	r3, [r7, #15]
    tx_fifo_depth = TX_FIFO_DEPTH;
 800bfca:	2310      	movs	r3, #16
 800bfcc:	73bb      	strb	r3, [r7, #14]
    rx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
 800bfce:	687b      	ldr	r3, [r7, #4]
 800bfd0:	681b      	ldr	r3, [r3, #0]
 800bfd2:	689b      	ldr	r3, [r3, #8]
 800bfd4:	0e5b      	lsrs	r3, r3, #25
 800bfd6:	b2db      	uxtb	r3, r3
 800bfd8:	f003 0307 	and.w	r3, r3, #7
 800bfdc:	737b      	strb	r3, [r7, #13]
    tx_fifo_threshold = (uint8_t)(READ_BIT(huart->Instance->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
 800bfde:	687b      	ldr	r3, [r7, #4]
 800bfe0:	681b      	ldr	r3, [r3, #0]
 800bfe2:	689b      	ldr	r3, [r3, #8]
 800bfe4:	0f5b      	lsrs	r3, r3, #29
 800bfe6:	b2db      	uxtb	r3, r3
 800bfe8:	f003 0307 	and.w	r3, r3, #7
 800bfec:	733b      	strb	r3, [r7, #12]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
 800bfee:	7bbb      	ldrb	r3, [r7, #14]
 800bff0:	7b3a      	ldrb	r2, [r7, #12]
 800bff2:	4911      	ldr	r1, [pc, #68]	@ (800c038 <UARTEx_SetNbDataToProcess+0x94>)
 800bff4:	5c8a      	ldrb	r2, [r1, r2]
 800bff6:	fb02 f303 	mul.w	r3, r2, r3
                               (uint16_t)denominator[tx_fifo_threshold];
 800bffa:	7b3a      	ldrb	r2, [r7, #12]
 800bffc:	490f      	ldr	r1, [pc, #60]	@ (800c03c <UARTEx_SetNbDataToProcess+0x98>)
 800bffe:	5c8a      	ldrb	r2, [r1, r2]
    huart->NbTxDataToProcess = ((uint16_t)tx_fifo_depth * numerator[tx_fifo_threshold]) /
 800c000:	fb93 f3f2 	sdiv	r3, r3, r2
 800c004:	b29a      	uxth	r2, r3
 800c006:	687b      	ldr	r3, [r7, #4]
 800c008:	f8a3 206a 	strh.w	r2, [r3, #106]	@ 0x6a
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
 800c00c:	7bfb      	ldrb	r3, [r7, #15]
 800c00e:	7b7a      	ldrb	r2, [r7, #13]
 800c010:	4909      	ldr	r1, [pc, #36]	@ (800c038 <UARTEx_SetNbDataToProcess+0x94>)
 800c012:	5c8a      	ldrb	r2, [r1, r2]
 800c014:	fb02 f303 	mul.w	r3, r2, r3
                               (uint16_t)denominator[rx_fifo_threshold];
 800c018:	7b7a      	ldrb	r2, [r7, #13]
 800c01a:	4908      	ldr	r1, [pc, #32]	@ (800c03c <UARTEx_SetNbDataToProcess+0x98>)
 800c01c:	5c8a      	ldrb	r2, [r1, r2]
    huart->NbRxDataToProcess = ((uint16_t)rx_fifo_depth * numerator[rx_fifo_threshold]) /
 800c01e:	fb93 f3f2 	sdiv	r3, r3, r2
 800c022:	b29a      	uxth	r2, r3
 800c024:	687b      	ldr	r3, [r7, #4]
 800c026:	f8a3 2068 	strh.w	r2, [r3, #104]	@ 0x68
}
 800c02a:	bf00      	nop
 800c02c:	3714      	adds	r7, #20
 800c02e:	46bd      	mov	sp, r7
 800c030:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c034:	4770      	bx	lr
 800c036:	bf00      	nop
 800c038:	08027528 	.word	0x08027528
 800c03c:	08027530 	.word	0x08027530

0800c040 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 800c040:	b480      	push	{r7}
 800c042:	b083      	sub	sp, #12
 800c044:	af00      	add	r7, sp, #0
 800c046:	6078      	str	r0, [r7, #4]
 800c048:	6039      	str	r1, [r7, #0]
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
 800c04a:	683b      	ldr	r3, [r7, #0]
 800c04c:	681b      	ldr	r3, [r3, #0]
 800c04e:	2b00      	cmp	r3, #0
 800c050:	d121      	bne.n	800c096 <FMC_SDRAM_Init+0x56>
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800c052:	687b      	ldr	r3, [r7, #4]
 800c054:	681a      	ldr	r2, [r3, #0]
 800c056:	4b27      	ldr	r3, [pc, #156]	@ (800c0f4 <FMC_SDRAM_Init+0xb4>)
 800c058:	4013      	ands	r3, r2
 800c05a:	683a      	ldr	r2, [r7, #0]
 800c05c:	6851      	ldr	r1, [r2, #4]
 800c05e:	683a      	ldr	r2, [r7, #0]
 800c060:	6892      	ldr	r2, [r2, #8]
 800c062:	4311      	orrs	r1, r2
 800c064:	683a      	ldr	r2, [r7, #0]
 800c066:	68d2      	ldr	r2, [r2, #12]
 800c068:	4311      	orrs	r1, r2
 800c06a:	683a      	ldr	r2, [r7, #0]
 800c06c:	6912      	ldr	r2, [r2, #16]
 800c06e:	4311      	orrs	r1, r2
 800c070:	683a      	ldr	r2, [r7, #0]
 800c072:	6952      	ldr	r2, [r2, #20]
 800c074:	4311      	orrs	r1, r2
 800c076:	683a      	ldr	r2, [r7, #0]
 800c078:	6992      	ldr	r2, [r2, #24]
 800c07a:	4311      	orrs	r1, r2
 800c07c:	683a      	ldr	r2, [r7, #0]
 800c07e:	69d2      	ldr	r2, [r2, #28]
 800c080:	4311      	orrs	r1, r2
 800c082:	683a      	ldr	r2, [r7, #0]
 800c084:	6a12      	ldr	r2, [r2, #32]
 800c086:	4311      	orrs	r1, r2
 800c088:	683a      	ldr	r2, [r7, #0]
 800c08a:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 800c08c:	430a      	orrs	r2, r1
 800c08e:	431a      	orrs	r2, r3
 800c090:	687b      	ldr	r3, [r7, #4]
 800c092:	601a      	str	r2, [r3, #0]
 800c094:	e026      	b.n	800c0e4 <FMC_SDRAM_Init+0xa4>
                Init->ReadBurst          |
                Init->ReadPipeDelay));
  }
  else /* FMC_Bank2_SDRAM */
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 800c096:	687b      	ldr	r3, [r7, #4]
 800c098:	681b      	ldr	r3, [r3, #0]
 800c09a:	f423 42f8 	bic.w	r2, r3, #31744	@ 0x7c00
 800c09e:	683b      	ldr	r3, [r7, #0]
 800c0a0:	69d9      	ldr	r1, [r3, #28]
 800c0a2:	683b      	ldr	r3, [r7, #0]
 800c0a4:	6a1b      	ldr	r3, [r3, #32]
 800c0a6:	4319      	orrs	r1, r3
 800c0a8:	683b      	ldr	r3, [r7, #0]
 800c0aa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800c0ac:	430b      	orrs	r3, r1
 800c0ae:	431a      	orrs	r2, r3
 800c0b0:	687b      	ldr	r3, [r7, #4]
 800c0b2:	601a      	str	r2, [r3, #0]
               FMC_SDCRx_RPIPE,
               (Init->SDClockPeriod      |
                Init->ReadBurst          |
                Init->ReadPipeDelay));

    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800c0b4:	687b      	ldr	r3, [r7, #4]
 800c0b6:	685a      	ldr	r2, [r3, #4]
 800c0b8:	4b0e      	ldr	r3, [pc, #56]	@ (800c0f4 <FMC_SDRAM_Init+0xb4>)
 800c0ba:	4013      	ands	r3, r2
 800c0bc:	683a      	ldr	r2, [r7, #0]
 800c0be:	6851      	ldr	r1, [r2, #4]
 800c0c0:	683a      	ldr	r2, [r7, #0]
 800c0c2:	6892      	ldr	r2, [r2, #8]
 800c0c4:	4311      	orrs	r1, r2
 800c0c6:	683a      	ldr	r2, [r7, #0]
 800c0c8:	68d2      	ldr	r2, [r2, #12]
 800c0ca:	4311      	orrs	r1, r2
 800c0cc:	683a      	ldr	r2, [r7, #0]
 800c0ce:	6912      	ldr	r2, [r2, #16]
 800c0d0:	4311      	orrs	r1, r2
 800c0d2:	683a      	ldr	r2, [r7, #0]
 800c0d4:	6952      	ldr	r2, [r2, #20]
 800c0d6:	4311      	orrs	r1, r2
 800c0d8:	683a      	ldr	r2, [r7, #0]
 800c0da:	6992      	ldr	r2, [r2, #24]
 800c0dc:	430a      	orrs	r2, r1
 800c0de:	431a      	orrs	r2, r3
 800c0e0:	687b      	ldr	r3, [r7, #4]
 800c0e2:	605a      	str	r2, [r3, #4]
                Init->InternalBankNumber |
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
 800c0e4:	2300      	movs	r3, #0
}
 800c0e6:	4618      	mov	r0, r3
 800c0e8:	370c      	adds	r7, #12
 800c0ea:	46bd      	mov	sp, r7
 800c0ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c0f0:	4770      	bx	lr
 800c0f2:	bf00      	nop
 800c0f4:	ffff8000 	.word	0xffff8000

0800c0f8 <FMC_SDRAM_Timing_Init>:
  * @param  Bank SDRAM bank number
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 800c0f8:	b480      	push	{r7}
 800c0fa:	b085      	sub	sp, #20
 800c0fc:	af00      	add	r7, sp, #0
 800c0fe:	60f8      	str	r0, [r7, #12]
 800c100:	60b9      	str	r1, [r7, #8]
 800c102:	607a      	str	r2, [r7, #4]
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
 800c104:	687b      	ldr	r3, [r7, #4]
 800c106:	2b00      	cmp	r3, #0
 800c108:	d128      	bne.n	800c15c <FMC_SDRAM_Timing_Init+0x64>
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800c10a:	68fb      	ldr	r3, [r7, #12]
 800c10c:	689b      	ldr	r3, [r3, #8]
 800c10e:	f003 4270 	and.w	r2, r3, #4026531840	@ 0xf0000000
 800c112:	68bb      	ldr	r3, [r7, #8]
 800c114:	681b      	ldr	r3, [r3, #0]
 800c116:	1e59      	subs	r1, r3, #1
 800c118:	68bb      	ldr	r3, [r7, #8]
 800c11a:	685b      	ldr	r3, [r3, #4]
 800c11c:	3b01      	subs	r3, #1
 800c11e:	011b      	lsls	r3, r3, #4
 800c120:	4319      	orrs	r1, r3
 800c122:	68bb      	ldr	r3, [r7, #8]
 800c124:	689b      	ldr	r3, [r3, #8]
 800c126:	3b01      	subs	r3, #1
 800c128:	021b      	lsls	r3, r3, #8
 800c12a:	4319      	orrs	r1, r3
 800c12c:	68bb      	ldr	r3, [r7, #8]
 800c12e:	68db      	ldr	r3, [r3, #12]
 800c130:	3b01      	subs	r3, #1
 800c132:	031b      	lsls	r3, r3, #12
 800c134:	4319      	orrs	r1, r3
 800c136:	68bb      	ldr	r3, [r7, #8]
 800c138:	691b      	ldr	r3, [r3, #16]
 800c13a:	3b01      	subs	r3, #1
 800c13c:	041b      	lsls	r3, r3, #16
 800c13e:	4319      	orrs	r1, r3
 800c140:	68bb      	ldr	r3, [r7, #8]
 800c142:	695b      	ldr	r3, [r3, #20]
 800c144:	3b01      	subs	r3, #1
 800c146:	051b      	lsls	r3, r3, #20
 800c148:	4319      	orrs	r1, r3
 800c14a:	68bb      	ldr	r3, [r7, #8]
 800c14c:	699b      	ldr	r3, [r3, #24]
 800c14e:	3b01      	subs	r3, #1
 800c150:	061b      	lsls	r3, r3, #24
 800c152:	430b      	orrs	r3, r1
 800c154:	431a      	orrs	r2, r3
 800c156:	68fb      	ldr	r3, [r7, #12]
 800c158:	609a      	str	r2, [r3, #8]
 800c15a:	e02d      	b.n	800c1b8 <FMC_SDRAM_Timing_Init+0xc0>
                (((Timing->RPDelay) - 1U)              << FMC_SDTRx_TRP_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }
  else /* FMC_Bank2_SDRAM */
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800c15c:	68fb      	ldr	r3, [r7, #12]
 800c15e:	689a      	ldr	r2, [r3, #8]
 800c160:	4b19      	ldr	r3, [pc, #100]	@ (800c1c8 <FMC_SDRAM_Timing_Init+0xd0>)
 800c162:	4013      	ands	r3, r2
 800c164:	68ba      	ldr	r2, [r7, #8]
 800c166:	68d2      	ldr	r2, [r2, #12]
 800c168:	3a01      	subs	r2, #1
 800c16a:	0311      	lsls	r1, r2, #12
 800c16c:	68ba      	ldr	r2, [r7, #8]
 800c16e:	6952      	ldr	r2, [r2, #20]
 800c170:	3a01      	subs	r2, #1
 800c172:	0512      	lsls	r2, r2, #20
 800c174:	430a      	orrs	r2, r1
 800c176:	431a      	orrs	r2, r3
 800c178:	68fb      	ldr	r3, [r7, #12]
 800c17a:	609a      	str	r2, [r3, #8]
               FMC_SDTRx_TRC |
               FMC_SDTRx_TRP,
               (((Timing->RowCycleDelay) - 1U)         << FMC_SDTRx_TRC_Pos)  |
               (((Timing->RPDelay) - 1U)               << FMC_SDTRx_TRP_Pos));

    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 800c17c:	68fb      	ldr	r3, [r7, #12]
 800c17e:	68db      	ldr	r3, [r3, #12]
 800c180:	f003 4270 	and.w	r2, r3, #4026531840	@ 0xf0000000
 800c184:	68bb      	ldr	r3, [r7, #8]
 800c186:	681b      	ldr	r3, [r3, #0]
 800c188:	1e59      	subs	r1, r3, #1
 800c18a:	68bb      	ldr	r3, [r7, #8]
 800c18c:	685b      	ldr	r3, [r3, #4]
 800c18e:	3b01      	subs	r3, #1
 800c190:	011b      	lsls	r3, r3, #4
 800c192:	4319      	orrs	r1, r3
 800c194:	68bb      	ldr	r3, [r7, #8]
 800c196:	689b      	ldr	r3, [r3, #8]
 800c198:	3b01      	subs	r3, #1
 800c19a:	021b      	lsls	r3, r3, #8
 800c19c:	4319      	orrs	r1, r3
 800c19e:	68bb      	ldr	r3, [r7, #8]
 800c1a0:	691b      	ldr	r3, [r3, #16]
 800c1a2:	3b01      	subs	r3, #1
 800c1a4:	041b      	lsls	r3, r3, #16
 800c1a6:	4319      	orrs	r1, r3
 800c1a8:	68bb      	ldr	r3, [r7, #8]
 800c1aa:	699b      	ldr	r3, [r3, #24]
 800c1ac:	3b01      	subs	r3, #1
 800c1ae:	061b      	lsls	r3, r3, #24
 800c1b0:	430b      	orrs	r3, r1
 800c1b2:	431a      	orrs	r2, r3
 800c1b4:	68fb      	ldr	r3, [r7, #12]
 800c1b6:	60da      	str	r2, [r3, #12]
                (((Timing->SelfRefreshTime) - 1U)      << FMC_SDTRx_TRAS_Pos) |
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTRx_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTRx_TRCD_Pos)));
  }

  return HAL_OK;
 800c1b8:	2300      	movs	r3, #0
}
 800c1ba:	4618      	mov	r0, r3
 800c1bc:	3714      	adds	r7, #20
 800c1be:	46bd      	mov	sp, r7
 800c1c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c1c4:	4770      	bx	lr
 800c1c6:	bf00      	nop
 800c1c8:	ff0f0fff 	.word	0xff0f0fff

0800c1cc <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800c1cc:	b480      	push	{r7}
 800c1ce:	b085      	sub	sp, #20
 800c1d0:	af00      	add	r7, sp, #0
 800c1d2:	60f8      	str	r0, [r7, #12]
 800c1d4:	60b9      	str	r1, [r7, #8]
 800c1d6:	607a      	str	r2, [r7, #4]
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 800c1d8:	68fb      	ldr	r3, [r7, #12]
 800c1da:	691a      	ldr	r2, [r3, #16]
 800c1dc:	4b0c      	ldr	r3, [pc, #48]	@ (800c210 <FMC_SDRAM_SendCommand+0x44>)
 800c1de:	4013      	ands	r3, r2
 800c1e0:	68ba      	ldr	r2, [r7, #8]
 800c1e2:	6811      	ldr	r1, [r2, #0]
 800c1e4:	68ba      	ldr	r2, [r7, #8]
 800c1e6:	6852      	ldr	r2, [r2, #4]
 800c1e8:	4311      	orrs	r1, r2
 800c1ea:	68ba      	ldr	r2, [r7, #8]
 800c1ec:	6892      	ldr	r2, [r2, #8]
 800c1ee:	3a01      	subs	r2, #1
 800c1f0:	0152      	lsls	r2, r2, #5
 800c1f2:	4311      	orrs	r1, r2
 800c1f4:	68ba      	ldr	r2, [r7, #8]
 800c1f6:	68d2      	ldr	r2, [r2, #12]
 800c1f8:	0252      	lsls	r2, r2, #9
 800c1fa:	430a      	orrs	r2, r1
 800c1fc:	431a      	orrs	r2, r3
 800c1fe:	68fb      	ldr	r3, [r7, #12]
 800c200:	611a      	str	r2, [r3, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Prevent unused argument(s) compilation warning */
  UNUSED(Timeout);
  return HAL_OK;
 800c202:	2300      	movs	r3, #0
}
 800c204:	4618      	mov	r0, r3
 800c206:	3714      	adds	r7, #20
 800c208:	46bd      	mov	sp, r7
 800c20a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c20e:	4770      	bx	lr
 800c210:	ffc00000 	.word	0xffc00000

0800c214 <FMC_SDRAM_ProgramRefreshRate>:
  * @param  Device Pointer to SDRAM device instance
  * @param  RefreshRate The SDRAM refresh rate value.
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_ProgramRefreshRate(FMC_SDRAM_TypeDef *Device, uint32_t RefreshRate)
{
 800c214:	b480      	push	{r7}
 800c216:	b083      	sub	sp, #12
 800c218:	af00      	add	r7, sp, #0
 800c21a:	6078      	str	r0, [r7, #4]
 800c21c:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 800c21e:	687b      	ldr	r3, [r7, #4]
 800c220:	695a      	ldr	r2, [r3, #20]
 800c222:	4b07      	ldr	r3, [pc, #28]	@ (800c240 <FMC_SDRAM_ProgramRefreshRate+0x2c>)
 800c224:	4013      	ands	r3, r2
 800c226:	683a      	ldr	r2, [r7, #0]
 800c228:	0052      	lsls	r2, r2, #1
 800c22a:	431a      	orrs	r2, r3
 800c22c:	687b      	ldr	r3, [r7, #4]
 800c22e:	615a      	str	r2, [r3, #20]

  return HAL_OK;
 800c230:	2300      	movs	r3, #0
}
 800c232:	4618      	mov	r0, r3
 800c234:	370c      	adds	r7, #12
 800c236:	46bd      	mov	sp, r7
 800c238:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c23c:	4770      	bx	lr
 800c23e:	bf00      	nop
 800c240:	ffffc001 	.word	0xffffc001

0800c244 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 800c244:	b580      	push	{r7, lr}
 800c246:	af00      	add	r7, sp, #0
    // Calling forward to touchgfx_init in C++ domain
    touchgfx_components_init();
 800c248:	f004 fc42 	bl	8010ad0 <touchgfx_components_init>
    touchgfx_init();
 800c24c:	f004 fc16 	bl	8010a7c <touchgfx_init>
}
 800c250:	bf00      	nop
 800c252:	bd80      	pop	{r7, pc}

0800c254 <MX_TouchGFX_Process>:

/**
 * TouchGFX application entry function
 */
void MX_TouchGFX_Process(void)
{
 800c254:	b580      	push	{r7, lr}
 800c256:	af00      	add	r7, sp, #0
    // Calling forward to touchgfx_taskEntry in C++ domain
    touchgfx_taskEntry();
 800c258:	f004 fc42 	bl	8010ae0 <touchgfx_taskEntry>
}
 800c25c:	bf00      	nop
 800c25e:	bd80      	pop	{r7, pc}

0800c260 <_ZN8touchgfx12FontProviderD1Ev>:
     * @return The font with a font id of fontId.
     */
    virtual Font* getFont(FontId fontId) = 0;

    /** Finalizes an instance of the FontProvider class. */
    virtual ~FontProvider()
 800c260:	b480      	push	{r7}
 800c262:	b083      	sub	sp, #12
 800c264:	af00      	add	r7, sp, #0
 800c266:	6078      	str	r0, [r7, #4]
    {
 800c268:	4a04      	ldr	r2, [pc, #16]	@ (800c27c <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 800c26a:	687b      	ldr	r3, [r7, #4]
 800c26c:	601a      	str	r2, [r3, #0]
    }
 800c26e:	687b      	ldr	r3, [r7, #4]
 800c270:	4618      	mov	r0, r3
 800c272:	370c      	adds	r7, #12
 800c274:	46bd      	mov	sp, r7
 800c276:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c27a:	4770      	bx	lr
 800c27c:	08027554 	.word	0x08027554

0800c280 <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 800c280:	b580      	push	{r7, lr}
 800c282:	b082      	sub	sp, #8
 800c284:	af00      	add	r7, sp, #0
 800c286:	6078      	str	r0, [r7, #4]
    }
 800c288:	6878      	ldr	r0, [r7, #4]
 800c28a:	f7ff ffe9 	bl	800c260 <_ZN8touchgfx12FontProviderD1Ev>
 800c28e:	2104      	movs	r1, #4
 800c290:	6878      	ldr	r0, [r7, #4]
 800c292:	f019 fa9c 	bl	80257ce <_ZdlPvj>
 800c296:	687b      	ldr	r3, [r7, #4]
 800c298:	4618      	mov	r0, r3
 800c29a:	3708      	adds	r7, #8
 800c29c:	46bd      	mov	sp, r7
 800c29e:	bd80      	pop	{r7, pc}

0800c2a0 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 800c2a0:	b580      	push	{r7, lr}
 800c2a2:	b082      	sub	sp, #8
 800c2a4:	af00      	add	r7, sp, #0
 800c2a6:	6078      	str	r0, [r7, #4]
 800c2a8:	460b      	mov	r3, r1
 800c2aa:	807b      	strh	r3, [r7, #2]
    switch (typography)
 800c2ac:	887b      	ldrh	r3, [r7, #2]
 800c2ae:	2b03      	cmp	r3, #3
 800c2b0:	d81e      	bhi.n	800c2f0 <_ZN23ApplicationFontProvider7getFontEt+0x50>
 800c2b2:	a201      	add	r2, pc, #4	@ (adr r2, 800c2b8 <_ZN23ApplicationFontProvider7getFontEt+0x18>)
 800c2b4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c2b8:	0800c2c9 	.word	0x0800c2c9
 800c2bc:	0800c2d3 	.word	0x0800c2d3
 800c2c0:	0800c2dd 	.word	0x0800c2dd
 800c2c4:	0800c2e7 	.word	0x0800c2e7
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 800c2c8:	f002 fe1a 	bl	800ef00 <_ZN17TypedTextDatabase8getFontsEv>
 800c2cc:	4603      	mov	r3, r0
 800c2ce:	681b      	ldr	r3, [r3, #0]
 800c2d0:	e00f      	b.n	800c2f2 <_ZN23ApplicationFontProvider7getFontEt+0x52>
    case Typography::LARGE:
        // verdana_40_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800c2d2:	f002 fe15 	bl	800ef00 <_ZN17TypedTextDatabase8getFontsEv>
 800c2d6:	4603      	mov	r3, r0
 800c2d8:	685b      	ldr	r3, [r3, #4]
 800c2da:	e00a      	b.n	800c2f2 <_ZN23ApplicationFontProvider7getFontEt+0x52>
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 800c2dc:	f002 fe10 	bl	800ef00 <_ZN17TypedTextDatabase8getFontsEv>
 800c2e0:	4603      	mov	r3, r0
 800c2e2:	689b      	ldr	r3, [r3, #8]
 800c2e4:	e005      	b.n	800c2f2 <_ZN23ApplicationFontProvider7getFontEt+0x52>
    case Typography::KOR:
        // malgun_30_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[3]);
 800c2e6:	f002 fe0b 	bl	800ef00 <_ZN17TypedTextDatabase8getFontsEv>
 800c2ea:	4603      	mov	r3, r0
 800c2ec:	68db      	ldr	r3, [r3, #12]
 800c2ee:	e000      	b.n	800c2f2 <_ZN23ApplicationFontProvider7getFontEt+0x52>
    default:
        return 0;
 800c2f0:	2300      	movs	r3, #0
    }
}
 800c2f2:	4618      	mov	r0, r3
 800c2f4:	3708      	adds	r7, #8
 800c2f6:	46bd      	mov	sp, r7
 800c2f8:	bd80      	pop	{r7, pc}
 800c2fa:	bf00      	nop

0800c2fc <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const touchgfx::FontId KOR = 3;     // malgun_30_4bpp
    static const uint16_t NUMBER_OF_FONTS = 4;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800c2fc:	b580      	push	{r7, lr}
 800c2fe:	b082      	sub	sp, #8
 800c300:	af00      	add	r7, sp, #0
 800c302:	6078      	str	r0, [r7, #4]
 800c304:	4a05      	ldr	r2, [pc, #20]	@ (800c31c <_ZN23ApplicationFontProviderD1Ev+0x20>)
 800c306:	687b      	ldr	r3, [r7, #4]
 800c308:	601a      	str	r2, [r3, #0]
 800c30a:	687b      	ldr	r3, [r7, #4]
 800c30c:	4618      	mov	r0, r3
 800c30e:	f7ff ffa7 	bl	800c260 <_ZN8touchgfx12FontProviderD1Ev>
 800c312:	687b      	ldr	r3, [r7, #4]
 800c314:	4618      	mov	r0, r3
 800c316:	3708      	adds	r7, #8
 800c318:	46bd      	mov	sp, r7
 800c31a:	bd80      	pop	{r7, pc}
 800c31c:	08027540 	.word	0x08027540

0800c320 <_ZN23ApplicationFontProviderD0Ev>:
 800c320:	b580      	push	{r7, lr}
 800c322:	b082      	sub	sp, #8
 800c324:	af00      	add	r7, sp, #0
 800c326:	6078      	str	r0, [r7, #4]
 800c328:	6878      	ldr	r0, [r7, #4]
 800c32a:	f7ff ffe7 	bl	800c2fc <_ZN23ApplicationFontProviderD1Ev>
 800c32e:	2104      	movs	r1, #4
 800c330:	6878      	ldr	r0, [r7, #4]
 800c332:	f019 fa4c 	bl	80257ce <_ZdlPvj>
 800c336:	687b      	ldr	r3, [r7, #4]
 800c338:	4618      	mov	r0, r3
 800c33a:	3708      	adds	r7, #8
 800c33c:	46bd      	mov	sp, r7
 800c33e:	bd80      	pop	{r7, pc}

0800c340 <_ZN8touchgfx4FontD1Ev>:
 */
class Font
{
public:
    /** Finalizes an instance of the Font class. */
    virtual ~Font()
 800c340:	b480      	push	{r7}
 800c342:	b083      	sub	sp, #12
 800c344:	af00      	add	r7, sp, #0
 800c346:	6078      	str	r0, [r7, #4]
    {
 800c348:	4a04      	ldr	r2, [pc, #16]	@ (800c35c <_ZN8touchgfx4FontD1Ev+0x1c>)
 800c34a:	687b      	ldr	r3, [r7, #4]
 800c34c:	601a      	str	r2, [r3, #0]
    }
 800c34e:	687b      	ldr	r3, [r7, #4]
 800c350:	4618      	mov	r0, r3
 800c352:	370c      	adds	r7, #12
 800c354:	46bd      	mov	sp, r7
 800c356:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c35a:	4770      	bx	lr
 800c35c:	08027d48 	.word	0x08027d48

0800c360 <_ZN8touchgfx4FontD0Ev>:
    virtual ~Font()
 800c360:	b580      	push	{r7, lr}
 800c362:	b082      	sub	sp, #8
 800c364:	af00      	add	r7, sp, #0
 800c366:	6078      	str	r0, [r7, #4]
    }
 800c368:	6878      	ldr	r0, [r7, #4]
 800c36a:	f7ff ffe9 	bl	800c340 <_ZN8touchgfx4FontD1Ev>
 800c36e:	2114      	movs	r1, #20
 800c370:	6878      	ldr	r0, [r7, #4]
 800c372:	f019 fa2c 	bl	80257ce <_ZdlPvj>
 800c376:	687b      	ldr	r3, [r7, #4]
 800c378:	4618      	mov	r0, r3
 800c37a:	3708      	adds	r7, #8
 800c37c:	46bd      	mov	sp, r7
 800c37e:	bd80      	pop	{r7, pc}

0800c380 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800c380:	b590      	push	{r4, r7, lr}
 800c382:	b087      	sub	sp, #28
 800c384:	af00      	add	r7, sp, #0
 800c386:	6078      	str	r0, [r7, #4]
 800c388:	460b      	mov	r3, r1
 800c38a:	807b      	strh	r3, [r7, #2]
    {
        if (unicode == 0)
 800c38c:	887b      	ldrh	r3, [r7, #2]
 800c38e:	2b00      	cmp	r3, #0
 800c390:	d101      	bne.n	800c396 <_ZNK8touchgfx4Font8getGlyphEt+0x16>
        {
            return 0;
 800c392:	2300      	movs	r3, #0
 800c394:	e010      	b.n	800c3b8 <_ZNK8touchgfx4Font8getGlyphEt+0x38>
        }
        const uint8_t* dummyPixelDataPointer = 0;
 800c396:	2300      	movs	r3, #0
 800c398:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 800c39a:	2300      	movs	r3, #0
 800c39c:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800c39e:	687b      	ldr	r3, [r7, #4]
 800c3a0:	681b      	ldr	r3, [r3, #0]
 800c3a2:	3308      	adds	r3, #8
 800c3a4:	681c      	ldr	r4, [r3, #0]
 800c3a6:	f107 030f 	add.w	r3, r7, #15
 800c3aa:	f107 0210 	add.w	r2, r7, #16
 800c3ae:	8879      	ldrh	r1, [r7, #2]
 800c3b0:	6878      	ldr	r0, [r7, #4]
 800c3b2:	47a0      	blx	r4
 800c3b4:	6178      	str	r0, [r7, #20]
        return glyph;
 800c3b6:	697b      	ldr	r3, [r7, #20]
    }
 800c3b8:	4618      	mov	r0, r3
 800c3ba:	371c      	adds	r7, #28
 800c3bc:	46bd      	mov	sp, r7
 800c3be:	bd90      	pop	{r4, r7, pc}

0800c3c0 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * used when no glyph is available for some character. If 0 (zero) is returned, there is
     * no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 800c3c0:	b480      	push	{r7}
 800c3c2:	b083      	sub	sp, #12
 800c3c4:	af00      	add	r7, sp, #0
 800c3c6:	6078      	str	r0, [r7, #4]
    {
        return fallbackCharacter;
 800c3c8:	687b      	ldr	r3, [r7, #4]
 800c3ca:	89db      	ldrh	r3, [r3, #14]
    }
 800c3cc:	4618      	mov	r0, r3
 800c3ce:	370c      	adds	r7, #12
 800c3d0:	46bd      	mov	sp, r7
 800c3d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c3d6:	4770      	bx	lr

0800c3d8 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     *
     * @return The ellipsis character for the typography.
     *
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 800c3d8:	b480      	push	{r7}
 800c3da:	b083      	sub	sp, #12
 800c3dc:	af00      	add	r7, sp, #0
 800c3de:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 800c3e0:	687b      	ldr	r3, [r7, #4]
 800c3e2:	8a1b      	ldrh	r3, [r3, #16]
    }
 800c3e4:	4618      	mov	r0, r3
 800c3e6:	370c      	adds	r7, #12
 800c3e8:	46bd      	mov	sp, r7
 800c3ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c3ee:	4770      	bx	lr

0800c3f0 <_ZNK8touchgfx4Font11getBaselineEv>:
     * @return The baseline position.
     *
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
 800c3f0:	b480      	push	{r7}
 800c3f2:	b083      	sub	sp, #12
 800c3f4:	af00      	add	r7, sp, #0
 800c3f6:	6078      	str	r0, [r7, #4]
    {
        return baselineHeight;
 800c3f8:	687b      	ldr	r3, [r7, #4]
 800c3fa:	88db      	ldrh	r3, [r3, #6]
    }
 800c3fc:	4618      	mov	r0, r3
 800c3fe:	370c      	adds	r7, #12
 800c400:	46bd      	mov	sp, r7
 800c402:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c406:	4770      	bx	lr

0800c408 <_ZNK8touchgfx4Font9getHeightEv>:
     * Returns the height of a font. The font may exceed the top by getPixelsAboveTop() or the
     * bottom by getPixelsBelowBottom.
     *
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
 800c408:	b480      	push	{r7}
 800c40a:	b083      	sub	sp, #12
 800c40c:	af00      	add	r7, sp, #0
 800c40e:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 800c410:	687b      	ldr	r3, [r7, #4]
 800c412:	889b      	ldrh	r3, [r3, #4]
    }
 800c414:	4618      	mov	r0, r3
 800c416:	370c      	adds	r7, #12
 800c418:	46bd      	mov	sp, r7
 800c41a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c41e:	4770      	bx	lr

0800c420 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
    /**
     * Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
 800c420:	b480      	push	{r7}
 800c422:	b083      	sub	sp, #12
 800c424:	af00      	add	r7, sp, #0
 800c426:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 800c428:	687b      	ldr	r3, [r7, #4]
 800c42a:	7a9b      	ldrb	r3, [r3, #10]
 800c42c:	f3c3 0306 	ubfx	r3, r3, #0, #7
 800c430:	b2db      	uxtb	r3, r3
    }
 800c432:	4618      	mov	r0, r3
 800c434:	370c      	adds	r7, #12
 800c436:	46bd      	mov	sp, r7
 800c438:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c43c:	4770      	bx	lr

0800c43e <_ZNK8touchgfx4Font15getByteAlignRowEv>:
    /**
     * Are the glyphs saved with each glyph row byte aligned?
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
 800c43e:	b480      	push	{r7}
 800c440:	b083      	sub	sp, #12
 800c442:	af00      	add	r7, sp, #0
 800c444:	6078      	str	r0, [r7, #4]
    {
        return bAlignRow;
 800c446:	687b      	ldr	r3, [r7, #4]
 800c448:	7a9b      	ldrb	r3, [r3, #10]
 800c44a:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 800c44e:	b2db      	uxtb	r3, r3
    }
 800c450:	4618      	mov	r0, r3
 800c452:	370c      	adds	r7, #12
 800c454:	46bd      	mov	sp, r7
 800c456:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c45a:	4770      	bx	lr

0800c45c <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
    /**
     * Returns true if this Font is vector based. Default is false.
     *
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
 800c45c:	b480      	push	{r7}
 800c45e:	b083      	sub	sp, #12
 800c460:	af00      	add	r7, sp, #0
 800c462:	6078      	str	r0, [r7, #4]
    {
        return false;
 800c464:	2300      	movs	r3, #0
    }
 800c466:	4618      	mov	r0, r3
 800c468:	370c      	adds	r7, #12
 800c46a:	46bd      	mov	sp, r7
 800c46c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c470:	4770      	bx	lr

0800c472 <_ZNK8touchgfx4Font14getScaleFactorEv>:
    /**
     * Returns the scale factor
     *
     * @return The scale factor
     */
    virtual float getScaleFactor() const
 800c472:	b480      	push	{r7}
 800c474:	b083      	sub	sp, #12
 800c476:	af00      	add	r7, sp, #0
 800c478:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800c47a:	f04f 0300 	mov.w	r3, #0
 800c47e:	ee07 3a90 	vmov	s15, r3
    }
 800c482:	eeb0 0a67 	vmov.f32	s0, s15
 800c486:	370c      	adds	r7, #12
 800c488:	46bd      	mov	sp, r7
 800c48a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c48e:	4770      	bx	lr

0800c490 <_ZN8touchgfx9ConstFontD1Ev>:
 *
 * @see Font
 *
 * @note Pure virtual class. Create an application-specific implementation of getPixelData().
 */
class ConstFont : public Font
 800c490:	b580      	push	{r7, lr}
 800c492:	b082      	sub	sp, #8
 800c494:	af00      	add	r7, sp, #0
 800c496:	6078      	str	r0, [r7, #4]
 800c498:	4a05      	ldr	r2, [pc, #20]	@ (800c4b0 <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 800c49a:	687b      	ldr	r3, [r7, #4]
 800c49c:	601a      	str	r2, [r3, #0]
 800c49e:	687b      	ldr	r3, [r7, #4]
 800c4a0:	4618      	mov	r0, r3
 800c4a2:	f7ff ff4d 	bl	800c340 <_ZN8touchgfx4FontD1Ev>
 800c4a6:	687b      	ldr	r3, [r7, #4]
 800c4a8:	4618      	mov	r0, r3
 800c4aa:	3708      	adds	r7, #8
 800c4ac:	46bd      	mov	sp, r7
 800c4ae:	bd80      	pop	{r7, pc}
 800c4b0:	080287f8 	.word	0x080287f8

0800c4b4 <_ZN8touchgfx9ConstFontD0Ev>:
 800c4b4:	b580      	push	{r7, lr}
 800c4b6:	b082      	sub	sp, #8
 800c4b8:	af00      	add	r7, sp, #0
 800c4ba:	6078      	str	r0, [r7, #4]
 800c4bc:	6878      	ldr	r0, [r7, #4]
 800c4be:	f7ff ffe7 	bl	800c490 <_ZN8touchgfx9ConstFontD1Ev>
 800c4c2:	211c      	movs	r1, #28
 800c4c4:	6878      	ldr	r0, [r7, #4]
 800c4c6:	f019 f982 	bl	80257ce <_ZdlPvj>
 800c4ca:	687b      	ldr	r3, [r7, #4]
 800c4cc:	4618      	mov	r0, r3
 800c4ce:	3708      	adds	r7, #8
 800c4d0:	46bd      	mov	sp, r7
 800c4d2:	bd80      	pop	{r7, pc}

0800c4d4 <_ZN8touchgfx13GeneratedFontD1Ev>:

#include <touchgfx/ConstFont.hpp>

namespace touchgfx
{
class GeneratedFont : public ConstFont
 800c4d4:	b580      	push	{r7, lr}
 800c4d6:	b082      	sub	sp, #8
 800c4d8:	af00      	add	r7, sp, #0
 800c4da:	6078      	str	r0, [r7, #4]
 800c4dc:	4a05      	ldr	r2, [pc, #20]	@ (800c4f4 <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 800c4de:	687b      	ldr	r3, [r7, #4]
 800c4e0:	601a      	str	r2, [r3, #0]
 800c4e2:	687b      	ldr	r3, [r7, #4]
 800c4e4:	4618      	mov	r0, r3
 800c4e6:	f7ff ffd3 	bl	800c490 <_ZN8touchgfx9ConstFontD1Ev>
 800c4ea:	687b      	ldr	r3, [r7, #4]
 800c4ec:	4618      	mov	r0, r3
 800c4ee:	3708      	adds	r7, #8
 800c4f0:	46bd      	mov	sp, r7
 800c4f2:	bd80      	pop	{r7, pc}
 800c4f4:	08027578 	.word	0x08027578

0800c4f8 <_ZN8touchgfx13GeneratedFontD0Ev>:
 800c4f8:	b580      	push	{r7, lr}
 800c4fa:	b082      	sub	sp, #8
 800c4fc:	af00      	add	r7, sp, #0
 800c4fe:	6078      	str	r0, [r7, #4]
 800c500:	6878      	ldr	r0, [r7, #4]
 800c502:	f7ff ffe7 	bl	800c4d4 <_ZN8touchgfx13GeneratedFontD1Ev>
 800c506:	212c      	movs	r1, #44	@ 0x2c
 800c508:	6878      	ldr	r0, [r7, #4]
 800c50a:	f019 f960 	bl	80257ce <_ZdlPvj>
 800c50e:	687b      	ldr	r3, [r7, #4]
 800c510:	4618      	mov	r0, r3
 800c512:	3708      	adds	r7, #8
 800c514:	46bd      	mov	sp, r7
 800c516:	bd80      	pop	{r7, pc}

0800c518 <_ZN8touchgfx9TypedTextD1Ev>:
        : typedTextId(id)
    {
    }

    /** Finalizes an instance of the TypedText class. */
    virtual ~TypedText()
 800c518:	b480      	push	{r7}
 800c51a:	b083      	sub	sp, #12
 800c51c:	af00      	add	r7, sp, #0
 800c51e:	6078      	str	r0, [r7, #4]
    {
 800c520:	4a04      	ldr	r2, [pc, #16]	@ (800c534 <_ZN8touchgfx9TypedTextD1Ev+0x1c>)
 800c522:	687b      	ldr	r3, [r7, #4]
 800c524:	601a      	str	r2, [r3, #0]
    }
 800c526:	687b      	ldr	r3, [r7, #4]
 800c528:	4618      	mov	r0, r3
 800c52a:	370c      	adds	r7, #12
 800c52c:	46bd      	mov	sp, r7
 800c52e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c532:	4770      	bx	lr
 800c534:	08027568 	.word	0x08027568

0800c538 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800c538:	b580      	push	{r7, lr}
 800c53a:	b082      	sub	sp, #8
 800c53c:	af00      	add	r7, sp, #0
 800c53e:	6078      	str	r0, [r7, #4]
    }
 800c540:	6878      	ldr	r0, [r7, #4]
 800c542:	f7ff ffe9 	bl	800c518 <_ZN8touchgfx9TypedTextD1Ev>
 800c546:	2108      	movs	r1, #8
 800c548:	6878      	ldr	r0, [r7, #4]
 800c54a:	f019 f940 	bl	80257ce <_ZdlPvj>
 800c54e:	687b      	ldr	r3, [r7, #4]
 800c550:	4618      	mov	r0, r3
 800c552:	3708      	adds	r7, #8
 800c554:	46bd      	mov	sp, r7
 800c556:	bd80      	pop	{r7, pc}

0800c558 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:

    virtual const uint8_t* getPixelData(const GlyphNode* glyph) const;

    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
 800c558:	b480      	push	{r7}
 800c55a:	b083      	sub	sp, #12
 800c55c:	af00      	add	r7, sp, #0
 800c55e:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 800c560:	687b      	ldr	r3, [r7, #4]
 800c562:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
    }
 800c564:	4618      	mov	r0, r3
 800c566:	370c      	adds	r7, #12
 800c568:	46bd      	mov	sp, r7
 800c56a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c56e:	4770      	bx	lr

0800c570 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800c570:	b480      	push	{r7}
 800c572:	b083      	sub	sp, #12
 800c574:	af00      	add	r7, sp, #0
 800c576:	6078      	str	r0, [r7, #4]
    {
        return arabicTable;
 800c578:	687b      	ldr	r3, [r7, #4]
 800c57a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
    }
 800c57c:	4618      	mov	r0, r3
 800c57e:	370c      	adds	r7, #12
 800c580:	46bd      	mov	sp, r7
 800c582:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c586:	4770      	bx	lr

0800c588 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
#include <fonts/GeneratedFont.hpp>
#include <math.h>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 800c588:	b580      	push	{r7, lr}
 800c58a:	b08e      	sub	sp, #56	@ 0x38
 800c58c:	af0a      	add	r7, sp, #40	@ 0x28
 800c58e:	60f8      	str	r0, [r7, #12]
 800c590:	60b9      	str	r1, [r7, #8]
 800c592:	4611      	mov	r1, r2
 800c594:	461a      	mov	r2, r3
 800c596:	460b      	mov	r3, r1
 800c598:	80fb      	strh	r3, [r7, #6]
 800c59a:	4613      	mov	r3, r2
 800c59c:	80bb      	strh	r3, [r7, #4]
    : ConstFont(glyphs, numGlyphs, height, baseline, pixAboveTop, pixBelowBottom, bitsPerPixel, byteAlignRow, maxLeft, maxRight, fallbackChar, ellipsisChar),
      glyphData(glyphDataInternalFlash),
      kerningData(kerningList),
      gsubTable(gsubData),
      arabicTable(formsTable)
 800c59e:	68f8      	ldr	r0, [r7, #12]
 800c5a0:	88b9      	ldrh	r1, [r7, #4]
 800c5a2:	88fa      	ldrh	r2, [r7, #6]
 800c5a4:	f8b7 3040 	ldrh.w	r3, [r7, #64]	@ 0x40
 800c5a8:	9308      	str	r3, [sp, #32]
 800c5aa:	8fbb      	ldrh	r3, [r7, #60]	@ 0x3c
 800c5ac:	9307      	str	r3, [sp, #28]
 800c5ae:	f897 3030 	ldrb.w	r3, [r7, #48]	@ 0x30
 800c5b2:	9306      	str	r3, [sp, #24]
 800c5b4:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 800c5b8:	9305      	str	r3, [sp, #20]
 800c5ba:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 800c5be:	9304      	str	r3, [sp, #16]
 800c5c0:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 800c5c4:	9303      	str	r3, [sp, #12]
 800c5c6:	f897 3020 	ldrb.w	r3, [r7, #32]
 800c5ca:	9302      	str	r3, [sp, #8]
 800c5cc:	7f3b      	ldrb	r3, [r7, #28]
 800c5ce:	9301      	str	r3, [sp, #4]
 800c5d0:	8b3b      	ldrh	r3, [r7, #24]
 800c5d2:	9300      	str	r3, [sp, #0]
 800c5d4:	460b      	mov	r3, r1
 800c5d6:	68b9      	ldr	r1, [r7, #8]
 800c5d8:	f009 fa74 	bl	8015ac4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 800c5dc:	4a09      	ldr	r2, [pc, #36]	@ (800c604 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x7c>)
 800c5de:	68fb      	ldr	r3, [r7, #12]
 800c5e0:	601a      	str	r2, [r3, #0]
      glyphData(glyphDataInternalFlash),
 800c5e2:	68fb      	ldr	r3, [r7, #12]
 800c5e4:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 800c5e6:	61da      	str	r2, [r3, #28]
      kerningData(kerningList),
 800c5e8:	68fb      	ldr	r3, [r7, #12]
 800c5ea:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 800c5ec:	621a      	str	r2, [r3, #32]
      gsubTable(gsubData),
 800c5ee:	68fb      	ldr	r3, [r7, #12]
 800c5f0:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800c5f2:	625a      	str	r2, [r3, #36]	@ 0x24
      arabicTable(formsTable)
 800c5f4:	68fb      	ldr	r3, [r7, #12]
 800c5f6:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 800c5f8:	629a      	str	r2, [r3, #40]	@ 0x28
{
}
 800c5fa:	68fb      	ldr	r3, [r7, #12]
 800c5fc:	4618      	mov	r0, r3
 800c5fe:	3710      	adds	r7, #16
 800c600:	46bd      	mov	sp, r7
 800c602:	bd80      	pop	{r7, pc}
 800c604:	08027578 	.word	0x08027578

0800c608 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 800c608:	b480      	push	{r7}
 800c60a:	b085      	sub	sp, #20
 800c60c:	af00      	add	r7, sp, #0
 800c60e:	6078      	str	r0, [r7, #4]
 800c610:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 800c612:	687b      	ldr	r3, [r7, #4]
 800c614:	69db      	ldr	r3, [r3, #28]
 800c616:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800c618:	683b      	ldr	r3, [r7, #0]
 800c61a:	889b      	ldrh	r3, [r3, #4]
 800c61c:	0adb      	lsrs	r3, r3, #11
 800c61e:	b29b      	uxth	r3, r3
 800c620:	009b      	lsls	r3, r3, #2
 800c622:	68fa      	ldr	r2, [r7, #12]
 800c624:	4413      	add	r3, r2
 800c626:	681a      	ldr	r2, [r3, #0]
 800c628:	683b      	ldr	r3, [r7, #0]
 800c62a:	681b      	ldr	r3, [r3, #0]
 800c62c:	4413      	add	r3, r2
}
 800c62e:	4618      	mov	r0, r3
 800c630:	3714      	adds	r7, #20
 800c632:	46bd      	mov	sp, r7
 800c634:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c638:	4770      	bx	lr

0800c63a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800c63a:	b480      	push	{r7}
 800c63c:	b089      	sub	sp, #36	@ 0x24
 800c63e:	af00      	add	r7, sp, #0
 800c640:	60f8      	str	r0, [r7, #12]
 800c642:	460b      	mov	r3, r1
 800c644:	607a      	str	r2, [r7, #4]
 800c646:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 800c648:	687b      	ldr	r3, [r7, #4]
 800c64a:	2b00      	cmp	r3, #0
 800c64c:	d003      	beq.n	800c656 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800c64e:	687b      	ldr	r3, [r7, #4]
 800c650:	7b1b      	ldrb	r3, [r3, #12]
 800c652:	2b00      	cmp	r3, #0
 800c654:	d101      	bne.n	800c65a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 800c656:	2300      	movs	r3, #0
 800c658:	e031      	b.n	800c6be <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800c65a:	68fb      	ldr	r3, [r7, #12]
 800c65c:	6a1a      	ldr	r2, [r3, #32]
 800c65e:	687b      	ldr	r3, [r7, #4]
 800c660:	617b      	str	r3, [r7, #20]
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800c662:	697b      	ldr	r3, [r7, #20]
 800c664:	7b5b      	ldrb	r3, [r3, #13]
 800c666:	021b      	lsls	r3, r3, #8
 800c668:	b21b      	sxth	r3, r3
 800c66a:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 800c66e:	b219      	sxth	r1, r3
 800c670:	697b      	ldr	r3, [r7, #20]
 800c672:	7adb      	ldrb	r3, [r3, #11]
 800c674:	b21b      	sxth	r3, r3
 800c676:	430b      	orrs	r3, r1
 800c678:	b21b      	sxth	r3, r3
 800c67a:	b29b      	uxth	r3, r3
 800c67c:	009b      	lsls	r3, r3, #2
 800c67e:	4413      	add	r3, r2
 800c680:	61fb      	str	r3, [r7, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800c682:	687b      	ldr	r3, [r7, #4]
 800c684:	7b1b      	ldrb	r3, [r3, #12]
 800c686:	837b      	strh	r3, [r7, #26]
 800c688:	e013      	b.n	800c6b2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x78>
    {
        if (prevChar == kerndata->unicodePrevChar)
 800c68a:	69fb      	ldr	r3, [r7, #28]
 800c68c:	881b      	ldrh	r3, [r3, #0]
 800c68e:	897a      	ldrh	r2, [r7, #10]
 800c690:	429a      	cmp	r2, r3
 800c692:	d103      	bne.n	800c69c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x62>
        {
            return kerndata->distance;
 800c694:	69fb      	ldr	r3, [r7, #28]
 800c696:	f993 3002 	ldrsb.w	r3, [r3, #2]
 800c69a:	e010      	b.n	800c6be <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
        }
        if (prevChar < kerndata->unicodePrevChar)
 800c69c:	69fb      	ldr	r3, [r7, #28]
 800c69e:	881b      	ldrh	r3, [r3, #0]
 800c6a0:	897a      	ldrh	r2, [r7, #10]
 800c6a2:	429a      	cmp	r2, r3
 800c6a4:	d309      	bcc.n	800c6ba <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x80>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800c6a6:	8b7b      	ldrh	r3, [r7, #26]
 800c6a8:	3b01      	subs	r3, #1
 800c6aa:	837b      	strh	r3, [r7, #26]
 800c6ac:	69fb      	ldr	r3, [r7, #28]
 800c6ae:	3304      	adds	r3, #4
 800c6b0:	61fb      	str	r3, [r7, #28]
 800c6b2:	8b7b      	ldrh	r3, [r7, #26]
 800c6b4:	2b00      	cmp	r3, #0
 800c6b6:	d1e8      	bne.n	800c68a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x50>
 800c6b8:	e000      	b.n	800c6bc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
        {
            break;
 800c6ba:	bf00      	nop
        }
    }
    return 0;
 800c6bc:	2300      	movs	r3, #0
}
 800c6be:	4618      	mov	r0, r3
 800c6c0:	3724      	adds	r7, #36	@ 0x24
 800c6c2:	46bd      	mov	sp, r7
 800c6c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c6c8:	4770      	bx	lr
	...

0800c6cc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_malgun_30_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_malgun_30_4bpp();

touchgfx::GeneratedFont& getFont_malgun_30_4bpp()
{
    static touchgfx::GeneratedFont malgun_30_4bpp(glyphs_malgun_30_4bpp, 3, 33, 30, 0, 0, 4, 1, 0, 0, unicodes_malgun_30_4bpp, kerning_malgun_30_4bpp, 63, 0, 0, 0);
 800c6cc:	b580      	push	{r7, lr}
 800c6ce:	af00      	add	r7, sp, #0
 800c6d0:	4801      	ldr	r0, [pc, #4]	@ (800c6d8 <__tcf_0+0xc>)
 800c6d2:	f7ff feff 	bl	800c4d4 <_ZN8touchgfx13GeneratedFontD1Ev>
 800c6d6:	bd80      	pop	{r7, pc}
 800c6d8:	24000708 	.word	0x24000708

0800c6dc <_Z22getFont_malgun_30_4bppv>:
{
 800c6dc:	b580      	push	{r7, lr}
 800c6de:	b08e      	sub	sp, #56	@ 0x38
 800c6e0:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont malgun_30_4bpp(glyphs_malgun_30_4bpp, 3, 33, 30, 0, 0, 4, 1, 0, 0, unicodes_malgun_30_4bpp, kerning_malgun_30_4bpp, 63, 0, 0, 0);
 800c6e2:	4b21      	ldr	r3, [pc, #132]	@ (800c768 <_Z22getFont_malgun_30_4bppv+0x8c>)
 800c6e4:	681b      	ldr	r3, [r3, #0]
 800c6e6:	f3bf 8f5b 	dmb	ish
 800c6ea:	f003 0301 	and.w	r3, r3, #1
 800c6ee:	2b00      	cmp	r3, #0
 800c6f0:	bf0c      	ite	eq
 800c6f2:	2301      	moveq	r3, #1
 800c6f4:	2300      	movne	r3, #0
 800c6f6:	b2db      	uxtb	r3, r3
 800c6f8:	2b00      	cmp	r3, #0
 800c6fa:	d030      	beq.n	800c75e <_Z22getFont_malgun_30_4bppv+0x82>
 800c6fc:	481a      	ldr	r0, [pc, #104]	@ (800c768 <_Z22getFont_malgun_30_4bppv+0x8c>)
 800c6fe:	f019 f868 	bl	80257d2 <__cxa_guard_acquire>
 800c702:	4603      	mov	r3, r0
 800c704:	2b00      	cmp	r3, #0
 800c706:	bf14      	ite	ne
 800c708:	2301      	movne	r3, #1
 800c70a:	2300      	moveq	r3, #0
 800c70c:	b2db      	uxtb	r3, r3
 800c70e:	2b00      	cmp	r3, #0
 800c710:	d025      	beq.n	800c75e <_Z22getFont_malgun_30_4bppv+0x82>
 800c712:	2300      	movs	r3, #0
 800c714:	930c      	str	r3, [sp, #48]	@ 0x30
 800c716:	2300      	movs	r3, #0
 800c718:	930b      	str	r3, [sp, #44]	@ 0x2c
 800c71a:	2300      	movs	r3, #0
 800c71c:	930a      	str	r3, [sp, #40]	@ 0x28
 800c71e:	233f      	movs	r3, #63	@ 0x3f
 800c720:	9309      	str	r3, [sp, #36]	@ 0x24
 800c722:	4b12      	ldr	r3, [pc, #72]	@ (800c76c <_Z22getFont_malgun_30_4bppv+0x90>)
 800c724:	9308      	str	r3, [sp, #32]
 800c726:	4b12      	ldr	r3, [pc, #72]	@ (800c770 <_Z22getFont_malgun_30_4bppv+0x94>)
 800c728:	9307      	str	r3, [sp, #28]
 800c72a:	2300      	movs	r3, #0
 800c72c:	9306      	str	r3, [sp, #24]
 800c72e:	2300      	movs	r3, #0
 800c730:	9305      	str	r3, [sp, #20]
 800c732:	2301      	movs	r3, #1
 800c734:	9304      	str	r3, [sp, #16]
 800c736:	2304      	movs	r3, #4
 800c738:	9303      	str	r3, [sp, #12]
 800c73a:	2300      	movs	r3, #0
 800c73c:	9302      	str	r3, [sp, #8]
 800c73e:	2300      	movs	r3, #0
 800c740:	9301      	str	r3, [sp, #4]
 800c742:	231e      	movs	r3, #30
 800c744:	9300      	str	r3, [sp, #0]
 800c746:	2321      	movs	r3, #33	@ 0x21
 800c748:	2203      	movs	r2, #3
 800c74a:	490a      	ldr	r1, [pc, #40]	@ (800c774 <_Z22getFont_malgun_30_4bppv+0x98>)
 800c74c:	480a      	ldr	r0, [pc, #40]	@ (800c778 <_Z22getFont_malgun_30_4bppv+0x9c>)
 800c74e:	f7ff ff1b 	bl	800c588 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800c752:	480a      	ldr	r0, [pc, #40]	@ (800c77c <_Z22getFont_malgun_30_4bppv+0xa0>)
 800c754:	f019 f888 	bl	8025868 <atexit>
 800c758:	4803      	ldr	r0, [pc, #12]	@ (800c768 <_Z22getFont_malgun_30_4bppv+0x8c>)
 800c75a:	f019 f846 	bl	80257ea <__cxa_guard_release>
    return malgun_30_4bpp;
 800c75e:	4b06      	ldr	r3, [pc, #24]	@ (800c778 <_Z22getFont_malgun_30_4bppv+0x9c>)
}
 800c760:	4618      	mov	r0, r3
 800c762:	46bd      	mov	sp, r7
 800c764:	bd80      	pop	{r7, pc}
 800c766:	bf00      	nop
 800c768:	24000734 	.word	0x24000734
 800c76c:	08028c30 	.word	0x08028c30
 800c770:	08028c40 	.word	0x08028c40
 800c774:	90bfeef8 	.word	0x90bfeef8
 800c778:	24000708 	.word	0x24000708
 800c77c:	0800c6cd 	.word	0x0800c6cd

0800c780 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800c780:	b580      	push	{r7, lr}
 800c782:	af00      	add	r7, sp, #0
 800c784:	4801      	ldr	r0, [pc, #4]	@ (800c78c <__tcf_0+0xc>)
 800c786:	f7ff fea5 	bl	800c4d4 <_ZN8touchgfx13GeneratedFontD1Ev>
 800c78a:	bd80      	pop	{r7, pc}
 800c78c:	24000738 	.word	0x24000738

0800c790 <_Z23getFont_verdana_10_4bppv>:
{
 800c790:	b580      	push	{r7, lr}
 800c792:	b08e      	sub	sp, #56	@ 0x38
 800c794:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800c796:	4b21      	ldr	r3, [pc, #132]	@ (800c81c <_Z23getFont_verdana_10_4bppv+0x8c>)
 800c798:	681b      	ldr	r3, [r3, #0]
 800c79a:	f3bf 8f5b 	dmb	ish
 800c79e:	f003 0301 	and.w	r3, r3, #1
 800c7a2:	2b00      	cmp	r3, #0
 800c7a4:	bf0c      	ite	eq
 800c7a6:	2301      	moveq	r3, #1
 800c7a8:	2300      	movne	r3, #0
 800c7aa:	b2db      	uxtb	r3, r3
 800c7ac:	2b00      	cmp	r3, #0
 800c7ae:	d030      	beq.n	800c812 <_Z23getFont_verdana_10_4bppv+0x82>
 800c7b0:	481a      	ldr	r0, [pc, #104]	@ (800c81c <_Z23getFont_verdana_10_4bppv+0x8c>)
 800c7b2:	f019 f80e 	bl	80257d2 <__cxa_guard_acquire>
 800c7b6:	4603      	mov	r3, r0
 800c7b8:	2b00      	cmp	r3, #0
 800c7ba:	bf14      	ite	ne
 800c7bc:	2301      	movne	r3, #1
 800c7be:	2300      	moveq	r3, #0
 800c7c0:	b2db      	uxtb	r3, r3
 800c7c2:	2b00      	cmp	r3, #0
 800c7c4:	d025      	beq.n	800c812 <_Z23getFont_verdana_10_4bppv+0x82>
 800c7c6:	2300      	movs	r3, #0
 800c7c8:	930c      	str	r3, [sp, #48]	@ 0x30
 800c7ca:	2300      	movs	r3, #0
 800c7cc:	930b      	str	r3, [sp, #44]	@ 0x2c
 800c7ce:	2300      	movs	r3, #0
 800c7d0:	930a      	str	r3, [sp, #40]	@ 0x28
 800c7d2:	233f      	movs	r3, #63	@ 0x3f
 800c7d4:	9309      	str	r3, [sp, #36]	@ 0x24
 800c7d6:	4b12      	ldr	r3, [pc, #72]	@ (800c820 <_Z23getFont_verdana_10_4bppv+0x90>)
 800c7d8:	9308      	str	r3, [sp, #32]
 800c7da:	4b12      	ldr	r3, [pc, #72]	@ (800c824 <_Z23getFont_verdana_10_4bppv+0x94>)
 800c7dc:	9307      	str	r3, [sp, #28]
 800c7de:	2300      	movs	r3, #0
 800c7e0:	9306      	str	r3, [sp, #24]
 800c7e2:	2300      	movs	r3, #0
 800c7e4:	9305      	str	r3, [sp, #20]
 800c7e6:	2301      	movs	r3, #1
 800c7e8:	9304      	str	r3, [sp, #16]
 800c7ea:	2304      	movs	r3, #4
 800c7ec:	9303      	str	r3, [sp, #12]
 800c7ee:	2300      	movs	r3, #0
 800c7f0:	9302      	str	r3, [sp, #8]
 800c7f2:	2300      	movs	r3, #0
 800c7f4:	9301      	str	r3, [sp, #4]
 800c7f6:	230a      	movs	r3, #10
 800c7f8:	9300      	str	r3, [sp, #0]
 800c7fa:	230a      	movs	r3, #10
 800c7fc:	2201      	movs	r2, #1
 800c7fe:	490a      	ldr	r1, [pc, #40]	@ (800c828 <_Z23getFont_verdana_10_4bppv+0x98>)
 800c800:	480a      	ldr	r0, [pc, #40]	@ (800c82c <_Z23getFont_verdana_10_4bppv+0x9c>)
 800c802:	f7ff fec1 	bl	800c588 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800c806:	480a      	ldr	r0, [pc, #40]	@ (800c830 <_Z23getFont_verdana_10_4bppv+0xa0>)
 800c808:	f019 f82e 	bl	8025868 <atexit>
 800c80c:	4803      	ldr	r0, [pc, #12]	@ (800c81c <_Z23getFont_verdana_10_4bppv+0x8c>)
 800c80e:	f018 ffec 	bl	80257ea <__cxa_guard_release>
    return verdana_10_4bpp;
 800c812:	4b06      	ldr	r3, [pc, #24]	@ (800c82c <_Z23getFont_verdana_10_4bppv+0x9c>)
}
 800c814:	4618      	mov	r0, r3
 800c816:	46bd      	mov	sp, r7
 800c818:	bd80      	pop	{r7, pc}
 800c81a:	bf00      	nop
 800c81c:	24000764 	.word	0x24000764
 800c820:	08028c34 	.word	0x08028c34
 800c824:	08028ca8 	.word	0x08028ca8
 800c828:	90bfef24 	.word	0x90bfef24
 800c82c:	24000738 	.word	0x24000738
 800c830:	0800c781 	.word	0x0800c781

0800c834 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800c834:	b580      	push	{r7, lr}
 800c836:	af00      	add	r7, sp, #0
 800c838:	4801      	ldr	r0, [pc, #4]	@ (800c840 <__tcf_0+0xc>)
 800c83a:	f7ff fe4b 	bl	800c4d4 <_ZN8touchgfx13GeneratedFontD1Ev>
 800c83e:	bd80      	pop	{r7, pc}
 800c840:	24000768 	.word	0x24000768

0800c844 <_Z23getFont_verdana_20_4bppv>:
{
 800c844:	b580      	push	{r7, lr}
 800c846:	b08e      	sub	sp, #56	@ 0x38
 800c848:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 20, 0, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 800c84a:	4b21      	ldr	r3, [pc, #132]	@ (800c8d0 <_Z23getFont_verdana_20_4bppv+0x8c>)
 800c84c:	681b      	ldr	r3, [r3, #0]
 800c84e:	f3bf 8f5b 	dmb	ish
 800c852:	f003 0301 	and.w	r3, r3, #1
 800c856:	2b00      	cmp	r3, #0
 800c858:	bf0c      	ite	eq
 800c85a:	2301      	moveq	r3, #1
 800c85c:	2300      	movne	r3, #0
 800c85e:	b2db      	uxtb	r3, r3
 800c860:	2b00      	cmp	r3, #0
 800c862:	d030      	beq.n	800c8c6 <_Z23getFont_verdana_20_4bppv+0x82>
 800c864:	481a      	ldr	r0, [pc, #104]	@ (800c8d0 <_Z23getFont_verdana_20_4bppv+0x8c>)
 800c866:	f018 ffb4 	bl	80257d2 <__cxa_guard_acquire>
 800c86a:	4603      	mov	r3, r0
 800c86c:	2b00      	cmp	r3, #0
 800c86e:	bf14      	ite	ne
 800c870:	2301      	movne	r3, #1
 800c872:	2300      	moveq	r3, #0
 800c874:	b2db      	uxtb	r3, r3
 800c876:	2b00      	cmp	r3, #0
 800c878:	d025      	beq.n	800c8c6 <_Z23getFont_verdana_20_4bppv+0x82>
 800c87a:	2300      	movs	r3, #0
 800c87c:	930c      	str	r3, [sp, #48]	@ 0x30
 800c87e:	2300      	movs	r3, #0
 800c880:	930b      	str	r3, [sp, #44]	@ 0x2c
 800c882:	2300      	movs	r3, #0
 800c884:	930a      	str	r3, [sp, #40]	@ 0x28
 800c886:	233f      	movs	r3, #63	@ 0x3f
 800c888:	9309      	str	r3, [sp, #36]	@ 0x24
 800c88a:	4b12      	ldr	r3, [pc, #72]	@ (800c8d4 <_Z23getFont_verdana_20_4bppv+0x90>)
 800c88c:	9308      	str	r3, [sp, #32]
 800c88e:	4b12      	ldr	r3, [pc, #72]	@ (800c8d8 <_Z23getFont_verdana_20_4bppv+0x94>)
 800c890:	9307      	str	r3, [sp, #28]
 800c892:	2300      	movs	r3, #0
 800c894:	9306      	str	r3, [sp, #24]
 800c896:	2300      	movs	r3, #0
 800c898:	9305      	str	r3, [sp, #20]
 800c89a:	2301      	movs	r3, #1
 800c89c:	9304      	str	r3, [sp, #16]
 800c89e:	2304      	movs	r3, #4
 800c8a0:	9303      	str	r3, [sp, #12]
 800c8a2:	2300      	movs	r3, #0
 800c8a4:	9302      	str	r3, [sp, #8]
 800c8a6:	2300      	movs	r3, #0
 800c8a8:	9301      	str	r3, [sp, #4]
 800c8aa:	2314      	movs	r3, #20
 800c8ac:	9300      	str	r3, [sp, #0]
 800c8ae:	2314      	movs	r3, #20
 800c8b0:	2201      	movs	r2, #1
 800c8b2:	490a      	ldr	r1, [pc, #40]	@ (800c8dc <_Z23getFont_verdana_20_4bppv+0x98>)
 800c8b4:	480a      	ldr	r0, [pc, #40]	@ (800c8e0 <_Z23getFont_verdana_20_4bppv+0x9c>)
 800c8b6:	f7ff fe67 	bl	800c588 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800c8ba:	480a      	ldr	r0, [pc, #40]	@ (800c8e4 <_Z23getFont_verdana_20_4bppv+0xa0>)
 800c8bc:	f018 ffd4 	bl	8025868 <atexit>
 800c8c0:	4803      	ldr	r0, [pc, #12]	@ (800c8d0 <_Z23getFont_verdana_20_4bppv+0x8c>)
 800c8c2:	f018 ff92 	bl	80257ea <__cxa_guard_release>
    return verdana_20_4bpp;
 800c8c6:	4b06      	ldr	r3, [pc, #24]	@ (800c8e0 <_Z23getFont_verdana_20_4bppv+0x9c>)
}
 800c8c8:	4618      	mov	r0, r3
 800c8ca:	46bd      	mov	sp, r7
 800c8cc:	bd80      	pop	{r7, pc}
 800c8ce:	bf00      	nop
 800c8d0:	24000794 	.word	0x24000794
 800c8d4:	08028c38 	.word	0x08028c38
 800c8d8:	08028cac 	.word	0x08028cac
 800c8dc:	90bfef34 	.word	0x90bfef34
 800c8e0:	24000768 	.word	0x24000768
 800c8e4:	0800c835 	.word	0x0800c835

0800c8e8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800c8e8:	b580      	push	{r7, lr}
 800c8ea:	af00      	add	r7, sp, #0
 800c8ec:	4801      	ldr	r0, [pc, #4]	@ (800c8f4 <__tcf_0+0xc>)
 800c8ee:	f7ff fdf1 	bl	800c4d4 <_ZN8touchgfx13GeneratedFontD1Ev>
 800c8f2:	bd80      	pop	{r7, pc}
 800c8f4:	24000798 	.word	0x24000798

0800c8f8 <_Z23getFont_verdana_40_4bppv>:
{
 800c8f8:	b580      	push	{r7, lr}
 800c8fa:	b08e      	sub	sp, #56	@ 0x38
 800c8fc:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800c8fe:	4b21      	ldr	r3, [pc, #132]	@ (800c984 <_Z23getFont_verdana_40_4bppv+0x8c>)
 800c900:	681b      	ldr	r3, [r3, #0]
 800c902:	f3bf 8f5b 	dmb	ish
 800c906:	f003 0301 	and.w	r3, r3, #1
 800c90a:	2b00      	cmp	r3, #0
 800c90c:	bf0c      	ite	eq
 800c90e:	2301      	moveq	r3, #1
 800c910:	2300      	movne	r3, #0
 800c912:	b2db      	uxtb	r3, r3
 800c914:	2b00      	cmp	r3, #0
 800c916:	d030      	beq.n	800c97a <_Z23getFont_verdana_40_4bppv+0x82>
 800c918:	481a      	ldr	r0, [pc, #104]	@ (800c984 <_Z23getFont_verdana_40_4bppv+0x8c>)
 800c91a:	f018 ff5a 	bl	80257d2 <__cxa_guard_acquire>
 800c91e:	4603      	mov	r3, r0
 800c920:	2b00      	cmp	r3, #0
 800c922:	bf14      	ite	ne
 800c924:	2301      	movne	r3, #1
 800c926:	2300      	moveq	r3, #0
 800c928:	b2db      	uxtb	r3, r3
 800c92a:	2b00      	cmp	r3, #0
 800c92c:	d025      	beq.n	800c97a <_Z23getFont_verdana_40_4bppv+0x82>
 800c92e:	2300      	movs	r3, #0
 800c930:	930c      	str	r3, [sp, #48]	@ 0x30
 800c932:	2300      	movs	r3, #0
 800c934:	930b      	str	r3, [sp, #44]	@ 0x2c
 800c936:	2300      	movs	r3, #0
 800c938:	930a      	str	r3, [sp, #40]	@ 0x28
 800c93a:	233f      	movs	r3, #63	@ 0x3f
 800c93c:	9309      	str	r3, [sp, #36]	@ 0x24
 800c93e:	4b12      	ldr	r3, [pc, #72]	@ (800c988 <_Z23getFont_verdana_40_4bppv+0x90>)
 800c940:	9308      	str	r3, [sp, #32]
 800c942:	4b12      	ldr	r3, [pc, #72]	@ (800c98c <_Z23getFont_verdana_40_4bppv+0x94>)
 800c944:	9307      	str	r3, [sp, #28]
 800c946:	2300      	movs	r3, #0
 800c948:	9306      	str	r3, [sp, #24]
 800c94a:	2300      	movs	r3, #0
 800c94c:	9305      	str	r3, [sp, #20]
 800c94e:	2301      	movs	r3, #1
 800c950:	9304      	str	r3, [sp, #16]
 800c952:	2304      	movs	r3, #4
 800c954:	9303      	str	r3, [sp, #12]
 800c956:	2300      	movs	r3, #0
 800c958:	9302      	str	r3, [sp, #8]
 800c95a:	2300      	movs	r3, #0
 800c95c:	9301      	str	r3, [sp, #4]
 800c95e:	2328      	movs	r3, #40	@ 0x28
 800c960:	9300      	str	r3, [sp, #0]
 800c962:	2328      	movs	r3, #40	@ 0x28
 800c964:	2201      	movs	r2, #1
 800c966:	490a      	ldr	r1, [pc, #40]	@ (800c990 <_Z23getFont_verdana_40_4bppv+0x98>)
 800c968:	480a      	ldr	r0, [pc, #40]	@ (800c994 <_Z23getFont_verdana_40_4bppv+0x9c>)
 800c96a:	f7ff fe0d 	bl	800c588 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800c96e:	480a      	ldr	r0, [pc, #40]	@ (800c998 <_Z23getFont_verdana_40_4bppv+0xa0>)
 800c970:	f018 ff7a 	bl	8025868 <atexit>
 800c974:	4803      	ldr	r0, [pc, #12]	@ (800c984 <_Z23getFont_verdana_40_4bppv+0x8c>)
 800c976:	f018 ff38 	bl	80257ea <__cxa_guard_release>
    return verdana_40_4bpp;
 800c97a:	4b06      	ldr	r3, [pc, #24]	@ (800c994 <_Z23getFont_verdana_40_4bppv+0x9c>)
}
 800c97c:	4618      	mov	r0, r3
 800c97e:	46bd      	mov	sp, r7
 800c980:	bd80      	pop	{r7, pc}
 800c982:	bf00      	nop
 800c984:	240007c4 	.word	0x240007c4
 800c988:	08028c3c 	.word	0x08028c3c
 800c98c:	08028cb0 	.word	0x08028cb0
 800c990:	90bfef44 	.word	0x90bfef44
 800c994:	24000798 	.word	0x24000798
 800c998:	0800c8e9 	.word	0x0800c8e9

0800c99c <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 800c99c:	b480      	push	{r7}
 800c99e:	b083      	sub	sp, #12
 800c9a0:	af00      	add	r7, sp, #0
 800c9a2:	6078      	str	r0, [r7, #4]
 800c9a4:	6039      	str	r1, [r7, #0]
 800c9a6:	683b      	ldr	r3, [r7, #0]
 800c9a8:	4618      	mov	r0, r3
 800c9aa:	370c      	adds	r7, #12
 800c9ac:	46bd      	mov	sp, r7
 800c9ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c9b2:	4770      	bx	lr

0800c9b4 <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     * This handler is invoked when a mouse click or display touch event has been detected
     * by the system.
     *
     * @param  event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800c9b4:	b480      	push	{r7}
 800c9b6:	b083      	sub	sp, #12
 800c9b8:	af00      	add	r7, sp, #0
 800c9ba:	6078      	str	r0, [r7, #4]
 800c9bc:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800c9be:	bf00      	nop
 800c9c0:	370c      	adds	r7, #12
 800c9c2:	46bd      	mov	sp, r7
 800c9c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c9c8:	4770      	bx	lr

0800c9ca <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
    /**
     * This handler is invoked when a drag event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800c9ca:	b480      	push	{r7}
 800c9cc:	b083      	sub	sp, #12
 800c9ce:	af00      	add	r7, sp, #0
 800c9d0:	6078      	str	r0, [r7, #4]
 800c9d2:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800c9d4:	bf00      	nop
 800c9d6:	370c      	adds	r7, #12
 800c9d8:	46bd      	mov	sp, r7
 800c9da:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c9de:	4770      	bx	lr

0800c9e0 <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
    /**
     * This handler is invoked when a gesture event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 800c9e0:	b480      	push	{r7}
 800c9e2:	b083      	sub	sp, #12
 800c9e4:	af00      	add	r7, sp, #0
 800c9e6:	6078      	str	r0, [r7, #4]
 800c9e8:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800c9ea:	bf00      	nop
 800c9ec:	370c      	adds	r7, #12
 800c9ee:	46bd      	mov	sp, r7
 800c9f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c9f4:	4770      	bx	lr

0800c9f6 <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
    /**
     * This handler is invoked when a key (or button) event has been detected by the system.
     *
     * @param  c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 800c9f6:	b480      	push	{r7}
 800c9f8:	b083      	sub	sp, #12
 800c9fa:	af00      	add	r7, sp, #0
 800c9fc:	6078      	str	r0, [r7, #4]
 800c9fe:	460b      	mov	r3, r1
 800ca00:	70fb      	strb	r3, [r7, #3]
    {
        (void)c; // Unused variable
    }
 800ca02:	bf00      	nop
 800ca04:	370c      	adds	r7, #12
 800ca06:	46bd      	mov	sp, r7
 800ca08:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ca0c:	4770      	bx	lr

0800ca0e <_ZN8touchgfx15UIEventListener15handleTickEventEv>:

    /**
     * This handler is invoked when a system tick event has been generated. The system tick
     * period is configured in the HAL.
     */
    virtual void handleTickEvent()
 800ca0e:	b480      	push	{r7}
 800ca10:	b083      	sub	sp, #12
 800ca12:	af00      	add	r7, sp, #0
 800ca14:	6078      	str	r0, [r7, #4]
    {
    }
 800ca16:	bf00      	nop
 800ca18:	370c      	adds	r7, #12
 800ca1a:	46bd      	mov	sp, r7
 800ca1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ca20:	4770      	bx	lr

0800ca22 <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:

    /** This handler is invoked when a change screen event is pending. */
    virtual void handlePendingScreenTransition()
 800ca22:	b480      	push	{r7}
 800ca24:	b083      	sub	sp, #12
 800ca26:	af00      	add	r7, sp, #0
 800ca28:	6078      	str	r0, [r7, #4]
    {
    }
 800ca2a:	bf00      	nop
 800ca2c:	370c      	adds	r7, #12
 800ca2e:	46bd      	mov	sp, r7
 800ca30:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ca34:	4770      	bx	lr
	...

0800ca38 <_ZN8touchgfx15UIEventListenerD1Ev>:

    /** Finalizes an instance of the UIEventListener class. */
    virtual ~UIEventListener()
 800ca38:	b480      	push	{r7}
 800ca3a:	b083      	sub	sp, #12
 800ca3c:	af00      	add	r7, sp, #0
 800ca3e:	6078      	str	r0, [r7, #4]
    {
 800ca40:	4a04      	ldr	r2, [pc, #16]	@ (800ca54 <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 800ca42:	687b      	ldr	r3, [r7, #4]
 800ca44:	601a      	str	r2, [r3, #0]
    }
 800ca46:	687b      	ldr	r3, [r7, #4]
 800ca48:	4618      	mov	r0, r3
 800ca4a:	370c      	adds	r7, #12
 800ca4c:	46bd      	mov	sp, r7
 800ca4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ca52:	4770      	bx	lr
 800ca54:	08027700 	.word	0x08027700

0800ca58 <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 800ca58:	b580      	push	{r7, lr}
 800ca5a:	b082      	sub	sp, #8
 800ca5c:	af00      	add	r7, sp, #0
 800ca5e:	6078      	str	r0, [r7, #4]
    }
 800ca60:	6878      	ldr	r0, [r7, #4]
 800ca62:	f7ff ffe9 	bl	800ca38 <_ZN8touchgfx15UIEventListenerD1Ev>
 800ca66:	2104      	movs	r1, #4
 800ca68:	6878      	ldr	r0, [r7, #4]
 800ca6a:	f018 feb0 	bl	80257ce <_ZdlPvj>
 800ca6e:	687b      	ldr	r3, [r7, #4]
 800ca70:	4618      	mov	r0, r3
 800ca72:	3708      	adds	r7, #8
 800ca74:	46bd      	mov	sp, r7
 800ca76:	bd80      	pop	{r7, pc}

0800ca78 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     * @note The application will not make a complete restart - if
     *       your Model contains data, this will not be reset, unless
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
 800ca78:	b480      	push	{r7}
 800ca7a:	b083      	sub	sp, #12
 800ca7c:	af00      	add	r7, sp, #0
 800ca7e:	6078      	str	r0, [r7, #4]
    {
    }
 800ca80:	bf00      	nop
 800ca82:	370c      	adds	r7, #12
 800ca84:	46bd      	mov	sp, r7
 800ca86:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ca8a:	4770      	bx	lr

0800ca8c <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * means to switch screen from places that does not have access to a pointer to the new
     * screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 800ca8c:	b480      	push	{r7}
 800ca8e:	b083      	sub	sp, #12
 800ca90:	af00      	add	r7, sp, #0
 800ca92:	6078      	str	r0, [r7, #4]
 800ca94:	460b      	mov	r3, r1
 800ca96:	70fb      	strb	r3, [r7, #3]
    {
        (void)screenId; // Unused variable
    }
 800ca98:	bf00      	nop
 800ca9a:	370c      	adds	r7, #12
 800ca9c:	46bd      	mov	sp, r7
 800ca9e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800caa2:	4770      	bx	lr

0800caa4 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
    /**
     * An application specific function for requesting redraw of given Rect.
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
 800caa4:	b480      	push	{r7}
 800caa6:	b083      	sub	sp, #12
 800caa8:	af00      	add	r7, sp, #0
 800caaa:	6078      	str	r0, [r7, #4]
 800caac:	6039      	str	r1, [r7, #0]
    {
        redraw = rect;
 800caae:	687b      	ldr	r3, [r7, #4]
 800cab0:	683a      	ldr	r2, [r7, #0]
 800cab2:	f503 7398 	add.w	r3, r3, #304	@ 0x130
 800cab6:	6810      	ldr	r0, [r2, #0]
 800cab8:	6851      	ldr	r1, [r2, #4]
 800caba:	c303      	stmia	r3!, {r0, r1}
    }
 800cabc:	bf00      	nop
 800cabe:	370c      	adds	r7, #12
 800cac0:	46bd      	mov	sp, r7
 800cac2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cac6:	4770      	bx	lr

0800cac8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
        timerWidgets.add(w);
    }

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
 800cac8:	b580      	push	{r7, lr}
 800caca:	b082      	sub	sp, #8
 800cacc:	af00      	add	r7, sp, #0
 800cace:	6078      	str	r0, [r7, #4]
    {
        timerWidgets.clear();
 800cad0:	687b      	ldr	r3, [r7, #4]
 800cad2:	3304      	adds	r3, #4
 800cad4:	4618      	mov	r0, r3
 800cad6:	f007 fec3 	bl	8014860 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    }
 800cada:	bf00      	nop
 800cadc:	3708      	adds	r7, #8
 800cade:	46bd      	mov	sp, r7
 800cae0:	bd80      	pop	{r7, pc}
	...

0800cae4 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
template <>
class GenericCallback<void>
{
public:
    /** Finalizes an instance of the GenericCallback<void> class. */
    virtual ~GenericCallback()
 800cae4:	b480      	push	{r7}
 800cae6:	b083      	sub	sp, #12
 800cae8:	af00      	add	r7, sp, #0
 800caea:	6078      	str	r0, [r7, #4]
    {
 800caec:	4a04      	ldr	r2, [pc, #16]	@ (800cb00 <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 800caee:	687b      	ldr	r3, [r7, #4]
 800caf0:	601a      	str	r2, [r3, #0]
    }
 800caf2:	687b      	ldr	r3, [r7, #4]
 800caf4:	4618      	mov	r0, r3
 800caf6:	370c      	adds	r7, #12
 800caf8:	46bd      	mov	sp, r7
 800cafa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cafe:	4770      	bx	lr
 800cb00:	080276e8 	.word	0x080276e8

0800cb04 <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 800cb04:	b580      	push	{r7, lr}
 800cb06:	b082      	sub	sp, #8
 800cb08:	af00      	add	r7, sp, #0
 800cb0a:	6078      	str	r0, [r7, #4]
    }
 800cb0c:	6878      	ldr	r0, [r7, #4]
 800cb0e:	f7ff ffe9 	bl	800cae4 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800cb12:	2104      	movs	r1, #4
 800cb14:	6878      	ldr	r0, [r7, #4]
 800cb16:	f018 fe5a 	bl	80257ce <_ZdlPvj>
 800cb1a:	687b      	ldr	r3, [r7, #4]
 800cb1c:	4618      	mov	r0, r3
 800cb1e:	3708      	adds	r7, #8
 800cb20:	46bd      	mov	sp, r7
 800cb22:	bd80      	pop	{r7, pc}

0800cb24 <_ZN8touchgfx3HAL11getInstanceEv>:
    /**
     * Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 800cb24:	b480      	push	{r7}
 800cb26:	af00      	add	r7, sp, #0
    {
        return instance;
 800cb28:	4b03      	ldr	r3, [pc, #12]	@ (800cb38 <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 800cb2a:	681b      	ldr	r3, [r3, #0]
    }
 800cb2c:	4618      	mov	r0, r3
 800cb2e:	46bd      	mov	sp, r7
 800cb30:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb34:	4770      	bx	lr
 800cb36:	bf00      	nop
 800cb38:	24001a30 	.word	0x24001a30

0800cb3c <_ZN8touchgfx3HAL3lcdEv>:
    /**
     * Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 800cb3c:	b480      	push	{r7}
 800cb3e:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800cb40:	4b0b      	ldr	r3, [pc, #44]	@ (800cb70 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800cb42:	681b      	ldr	r3, [r3, #0]
 800cb44:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 800cb48:	2b00      	cmp	r3, #0
 800cb4a:	d008      	beq.n	800cb5e <_ZN8touchgfx3HAL3lcdEv+0x22>
 800cb4c:	4b08      	ldr	r3, [pc, #32]	@ (800cb70 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800cb4e:	681b      	ldr	r3, [r3, #0]
 800cb50:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800cb52:	2b00      	cmp	r3, #0
 800cb54:	d003      	beq.n	800cb5e <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 800cb56:	4b06      	ldr	r3, [pc, #24]	@ (800cb70 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800cb58:	681b      	ldr	r3, [r3, #0]
 800cb5a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800cb5c:	e002      	b.n	800cb64 <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        return instance->lcdRef;
 800cb5e:	4b04      	ldr	r3, [pc, #16]	@ (800cb70 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 800cb60:	681b      	ldr	r3, [r3, #0]
 800cb62:	689b      	ldr	r3, [r3, #8]
    }
 800cb64:	4618      	mov	r0, r3
 800cb66:	46bd      	mov	sp, r7
 800cb68:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb6c:	4770      	bx	lr
 800cb6e:	bf00      	nop
 800cb70:	24001a30 	.word	0x24001a30

0800cb74 <_ZN8touchgfx10TransitionC1Ev>:
 */
class Transition
{
public:
    /** Initializes a new instance of the Transition class. */
    Transition()
 800cb74:	b480      	push	{r7}
 800cb76:	b083      	sub	sp, #12
 800cb78:	af00      	add	r7, sp, #0
 800cb7a:	6078      	str	r0, [r7, #4]
        : screenContainer(0), done(false)
 800cb7c:	4a07      	ldr	r2, [pc, #28]	@ (800cb9c <_ZN8touchgfx10TransitionC1Ev+0x28>)
 800cb7e:	687b      	ldr	r3, [r7, #4]
 800cb80:	601a      	str	r2, [r3, #0]
 800cb82:	687b      	ldr	r3, [r7, #4]
 800cb84:	2200      	movs	r2, #0
 800cb86:	605a      	str	r2, [r3, #4]
 800cb88:	687b      	ldr	r3, [r7, #4]
 800cb8a:	2200      	movs	r2, #0
 800cb8c:	721a      	strb	r2, [r3, #8]
    {
    }
 800cb8e:	687b      	ldr	r3, [r7, #4]
 800cb90:	4618      	mov	r0, r3
 800cb92:	370c      	adds	r7, #12
 800cb94:	46bd      	mov	sp, r7
 800cb96:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb9a:	4770      	bx	lr
 800cb9c:	080276c4 	.word	0x080276c4

0800cba0 <_ZN8touchgfx10TransitionD1Ev>:

    /** Finalizes an instance of the Transition class. */
    virtual ~Transition()
 800cba0:	b480      	push	{r7}
 800cba2:	b083      	sub	sp, #12
 800cba4:	af00      	add	r7, sp, #0
 800cba6:	6078      	str	r0, [r7, #4]
    {
 800cba8:	4a04      	ldr	r2, [pc, #16]	@ (800cbbc <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 800cbaa:	687b      	ldr	r3, [r7, #4]
 800cbac:	601a      	str	r2, [r3, #0]
    }
 800cbae:	687b      	ldr	r3, [r7, #4]
 800cbb0:	4618      	mov	r0, r3
 800cbb2:	370c      	adds	r7, #12
 800cbb4:	46bd      	mov	sp, r7
 800cbb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cbba:	4770      	bx	lr
 800cbbc:	080276c4 	.word	0x080276c4

0800cbc0 <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 800cbc0:	b580      	push	{r7, lr}
 800cbc2:	b082      	sub	sp, #8
 800cbc4:	af00      	add	r7, sp, #0
 800cbc6:	6078      	str	r0, [r7, #4]
    }
 800cbc8:	6878      	ldr	r0, [r7, #4]
 800cbca:	f7ff ffe9 	bl	800cba0 <_ZN8touchgfx10TransitionD1Ev>
 800cbce:	210c      	movs	r1, #12
 800cbd0:	6878      	ldr	r0, [r7, #4]
 800cbd2:	f018 fdfc 	bl	80257ce <_ZdlPvj>
 800cbd6:	687b      	ldr	r3, [r7, #4]
 800cbd8:	4618      	mov	r0, r3
 800cbda:	3708      	adds	r7, #8
 800cbdc:	46bd      	mov	sp, r7
 800cbde:	bd80      	pop	{r7, pc}

0800cbe0 <_ZN8touchgfx10Transition15handleTickEventEv>:

    /** Called for every tick when transitioning. */
    virtual void handleTickEvent()
 800cbe0:	b480      	push	{r7}
 800cbe2:	b083      	sub	sp, #12
 800cbe4:	af00      	add	r7, sp, #0
 800cbe6:	6078      	str	r0, [r7, #4]
    {
    }
 800cbe8:	bf00      	nop
 800cbea:	370c      	adds	r7, #12
 800cbec:	46bd      	mov	sp, r7
 800cbee:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cbf2:	4770      	bx	lr

0800cbf4 <_ZN8touchgfx10Transition8tearDownEv>:

    /**
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
 800cbf4:	b480      	push	{r7}
 800cbf6:	b083      	sub	sp, #12
 800cbf8:	af00      	add	r7, sp, #0
 800cbfa:	6078      	str	r0, [r7, #4]
    {
    }
 800cbfc:	bf00      	nop
 800cbfe:	370c      	adds	r7, #12
 800cc00:	46bd      	mov	sp, r7
 800cc02:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc06:	4770      	bx	lr

0800cc08 <_ZN8touchgfx10Transition4initEv>:

    /**
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
 800cc08:	b480      	push	{r7}
 800cc0a:	b083      	sub	sp, #12
 800cc0c:	af00      	add	r7, sp, #0
 800cc0e:	6078      	str	r0, [r7, #4]
    {
    }
 800cc10:	bf00      	nop
 800cc12:	370c      	adds	r7, #12
 800cc14:	46bd      	mov	sp, r7
 800cc16:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc1a:	4770      	bx	lr

0800cc1c <_ZN8touchgfx10Transition10invalidateEv>:
    /**
     * Invalidates the screen when starting the Transition. Default is
     * to invalidate the whole screen. Subclasses can do partial
     * invalidation.
     */
    virtual void invalidate()
 800cc1c:	b580      	push	{r7, lr}
 800cc1e:	b082      	sub	sp, #8
 800cc20:	af00      	add	r7, sp, #0
 800cc22:	6078      	str	r0, [r7, #4]
    {
        Application::getInstance()->invalidate();
 800cc24:	f007 fdde 	bl	80147e4 <_ZN8touchgfx11Application11getInstanceEv>
 800cc28:	4603      	mov	r3, r0
 800cc2a:	681a      	ldr	r2, [r3, #0]
 800cc2c:	323c      	adds	r2, #60	@ 0x3c
 800cc2e:	6812      	ldr	r2, [r2, #0]
 800cc30:	4618      	mov	r0, r3
 800cc32:	4790      	blx	r2
    }
 800cc34:	bf00      	nop
 800cc36:	3708      	adds	r7, #8
 800cc38:	46bd      	mov	sp, r7
 800cc3a:	bd80      	pop	{r7, pc}

0800cc3c <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     * Sets the Screen Container. Is used by Screen to enable the transition to access the
     * Container.
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 800cc3c:	b480      	push	{r7}
 800cc3e:	b083      	sub	sp, #12
 800cc40:	af00      	add	r7, sp, #0
 800cc42:	6078      	str	r0, [r7, #4]
 800cc44:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 800cc46:	687b      	ldr	r3, [r7, #4]
 800cc48:	683a      	ldr	r2, [r7, #0]
 800cc4a:	605a      	str	r2, [r3, #4]
    }
 800cc4c:	bf00      	nop
 800cc4e:	370c      	adds	r7, #12
 800cc50:	46bd      	mov	sp, r7
 800cc52:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cc56:	4770      	bx	lr

0800cc58 <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 800cc58:	b580      	push	{r7, lr}
 800cc5a:	b082      	sub	sp, #8
 800cc5c:	af00      	add	r7, sp, #0
 800cc5e:	6078      	str	r0, [r7, #4]
 800cc60:	4a05      	ldr	r2, [pc, #20]	@ (800cc78 <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 800cc62:	687b      	ldr	r3, [r7, #4]
 800cc64:	601a      	str	r2, [r3, #0]
 800cc66:	687b      	ldr	r3, [r7, #4]
 800cc68:	4618      	mov	r0, r3
 800cc6a:	f7ff fee5 	bl	800ca38 <_ZN8touchgfx15UIEventListenerD1Ev>
 800cc6e:	687b      	ldr	r3, [r7, #4]
 800cc70:	4618      	mov	r0, r3
 800cc72:	3708      	adds	r7, #8
 800cc74:	46bd      	mov	sp, r7
 800cc76:	bd80      	pop	{r7, pc}
 800cc78:	0802873c 	.word	0x0802873c

0800cc7c <_ZN8touchgfx11ApplicationD0Ev>:
 800cc7c:	b580      	push	{r7, lr}
 800cc7e:	b082      	sub	sp, #8
 800cc80:	af00      	add	r7, sp, #0
 800cc82:	6078      	str	r0, [r7, #4]
 800cc84:	6878      	ldr	r0, [r7, #4]
 800cc86:	f7ff ffe7 	bl	800cc58 <_ZN8touchgfx11ApplicationD1Ev>
 800cc8a:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 800cc8e:	6878      	ldr	r0, [r7, #4]
 800cc90:	f018 fd9d 	bl	80257ce <_ZdlPvj>
 800cc94:	687b      	ldr	r3, [r7, #4]
 800cc96:	4618      	mov	r0, r3
 800cc98:	3708      	adds	r7, #8
 800cc9a:	46bd      	mov	sp, r7
 800cc9c:	bd80      	pop	{r7, pc}
	...

0800cca0 <_ZN8touchgfx14MVPApplicationC1Ev>:
 */
class MVPApplication : public Application
{
public:
    /** Initializes a new instance of the MVPApplication class. */
    MVPApplication()
 800cca0:	b580      	push	{r7, lr}
 800cca2:	b082      	sub	sp, #8
 800cca4:	af00      	add	r7, sp, #0
 800cca6:	6078      	str	r0, [r7, #4]
        : currentPresenter(0),
          pendingScreenTransitionCallback(0)
 800cca8:	687b      	ldr	r3, [r7, #4]
 800ccaa:	4618      	mov	r0, r3
 800ccac:	f007 feaa 	bl	8014a04 <_ZN8touchgfx11ApplicationC1Ev>
 800ccb0:	4a09      	ldr	r2, [pc, #36]	@ (800ccd8 <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 800ccb2:	687b      	ldr	r3, [r7, #4]
 800ccb4:	601a      	str	r2, [r3, #0]
        : currentPresenter(0),
 800ccb6:	687b      	ldr	r3, [r7, #4]
 800ccb8:	2200      	movs	r2, #0
 800ccba:	f8c3 213c 	str.w	r2, [r3, #316]	@ 0x13c
          pendingScreenTransitionCallback(0)
 800ccbe:	687b      	ldr	r3, [r7, #4]
 800ccc0:	2200      	movs	r2, #0
 800ccc2:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
    {
        instance = this;
 800ccc6:	687b      	ldr	r3, [r7, #4]
 800ccc8:	4a04      	ldr	r2, [pc, #16]	@ (800ccdc <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 800ccca:	6013      	str	r3, [r2, #0]
    }
 800cccc:	687b      	ldr	r3, [r7, #4]
 800ccce:	4618      	mov	r0, r3
 800ccd0:	3708      	adds	r7, #8
 800ccd2:	46bd      	mov	sp, r7
 800ccd4:	bd80      	pop	{r7, pc}
 800ccd6:	bf00      	nop
 800ccd8:	08027670 	.word	0x08027670
 800ccdc:	24001a7c 	.word	0x24001a7c

0800cce0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800cce0:	b580      	push	{r7, lr}
 800cce2:	b082      	sub	sp, #8
 800cce4:	af00      	add	r7, sp, #0
 800cce6:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 800cce8:	6878      	ldr	r0, [r7, #4]
 800ccea:	f000 f804 	bl	800ccf6 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 800ccee:	bf00      	nop
 800ccf0:	3708      	adds	r7, #8
 800ccf2:	46bd      	mov	sp, r7
 800ccf4:	bd80      	pop	{r7, pc}

0800ccf6 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:

    /**
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 800ccf6:	b580      	push	{r7, lr}
 800ccf8:	b082      	sub	sp, #8
 800ccfa:	af00      	add	r7, sp, #0
 800ccfc:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800ccfe:	687b      	ldr	r3, [r7, #4]
 800cd00:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 800cd04:	2b00      	cmp	r3, #0
 800cd06:	d00f      	beq.n	800cd28 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800cd08:	687b      	ldr	r3, [r7, #4]
 800cd0a:	f8d3 2140 	ldr.w	r2, [r3, #320]	@ 0x140
 800cd0e:	687b      	ldr	r3, [r7, #4]
 800cd10:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 800cd14:	681b      	ldr	r3, [r3, #0]
 800cd16:	330c      	adds	r3, #12
 800cd18:	681b      	ldr	r3, [r3, #0]
 800cd1a:	4610      	mov	r0, r2
 800cd1c:	4798      	blx	r3
 800cd1e:	4603      	mov	r3, r0
 800cd20:	2b00      	cmp	r3, #0
 800cd22:	d001      	beq.n	800cd28 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800cd24:	2301      	movs	r3, #1
 800cd26:	e000      	b.n	800cd2a <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 800cd28:	2300      	movs	r3, #0
 800cd2a:	2b00      	cmp	r3, #0
 800cd2c:	d00e      	beq.n	800cd4c <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 800cd2e:	687b      	ldr	r3, [r7, #4]
 800cd30:	f8d3 2140 	ldr.w	r2, [r3, #320]	@ 0x140
 800cd34:	687b      	ldr	r3, [r7, #4]
 800cd36:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 800cd3a:	681b      	ldr	r3, [r3, #0]
 800cd3c:	3308      	adds	r3, #8
 800cd3e:	681b      	ldr	r3, [r3, #0]
 800cd40:	4610      	mov	r0, r2
 800cd42:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 800cd44:	687b      	ldr	r3, [r7, #4]
 800cd46:	2200      	movs	r2, #0
 800cd48:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
        }
    }
 800cd4c:	bf00      	nop
 800cd4e:	3708      	adds	r7, #8
 800cd50:	46bd      	mov	sp, r7
 800cd52:	bd80      	pop	{r7, pc}

0800cd54 <_ZN5Model4bindEP13ModelListener>:
class Model
{
public:
    Model();

    void bind(ModelListener* listener)
 800cd54:	b480      	push	{r7}
 800cd56:	b083      	sub	sp, #12
 800cd58:	af00      	add	r7, sp, #0
 800cd5a:	6078      	str	r0, [r7, #4]
 800cd5c:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 800cd5e:	687b      	ldr	r3, [r7, #4]
 800cd60:	683a      	ldr	r2, [r7, #0]
 800cd62:	601a      	str	r2, [r3, #0]
    }
 800cd64:	bf00      	nop
 800cd66:	370c      	adds	r7, #12
 800cd68:	46bd      	mov	sp, r7
 800cd6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cd6e:	4770      	bx	lr

0800cd70 <_ZN8touchgfx14MVPApplicationD1Ev>:
class MVPApplication : public Application
 800cd70:	b580      	push	{r7, lr}
 800cd72:	b082      	sub	sp, #8
 800cd74:	af00      	add	r7, sp, #0
 800cd76:	6078      	str	r0, [r7, #4]
 800cd78:	4a05      	ldr	r2, [pc, #20]	@ (800cd90 <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 800cd7a:	687b      	ldr	r3, [r7, #4]
 800cd7c:	601a      	str	r2, [r3, #0]
 800cd7e:	687b      	ldr	r3, [r7, #4]
 800cd80:	4618      	mov	r0, r3
 800cd82:	f7ff ff69 	bl	800cc58 <_ZN8touchgfx11ApplicationD1Ev>
 800cd86:	687b      	ldr	r3, [r7, #4]
 800cd88:	4618      	mov	r0, r3
 800cd8a:	3708      	adds	r7, #8
 800cd8c:	46bd      	mov	sp, r7
 800cd8e:	bd80      	pop	{r7, pc}
 800cd90:	08027670 	.word	0x08027670

0800cd94 <_ZN8touchgfx14MVPApplicationD0Ev>:
 800cd94:	b580      	push	{r7, lr}
 800cd96:	b082      	sub	sp, #8
 800cd98:	af00      	add	r7, sp, #0
 800cd9a:	6078      	str	r0, [r7, #4]
 800cd9c:	6878      	ldr	r0, [r7, #4]
 800cd9e:	f7ff ffe7 	bl	800cd70 <_ZN8touchgfx14MVPApplicationD1Ev>
 800cda2:	f44f 71a2 	mov.w	r1, #324	@ 0x144
 800cda6:	6878      	ldr	r0, [r7, #4]
 800cda8:	f018 fd11 	bl	80257ce <_ZdlPvj>
 800cdac:	687b      	ldr	r3, [r7, #4]
 800cdae:	4618      	mov	r0, r3
 800cdb0:	3708      	adds	r7, #8
 800cdb2:	46bd      	mov	sp, r7
 800cdb4:	bd80      	pop	{r7, pc}
	...

0800cdb8 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800cdb8:	b580      	push	{r7, lr}
 800cdba:	b082      	sub	sp, #8
 800cdbc:	af00      	add	r7, sp, #0
 800cdbe:	6078      	str	r0, [r7, #4]
 800cdc0:	4a08      	ldr	r2, [pc, #32]	@ (800cde4 <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 800cdc2:	687b      	ldr	r3, [r7, #4]
 800cdc4:	601a      	str	r2, [r3, #0]
 800cdc6:	687b      	ldr	r3, [r7, #4]
 800cdc8:	f503 73a2 	add.w	r3, r3, #324	@ 0x144
 800cdcc:	4618      	mov	r0, r3
 800cdce:	f000 fad3 	bl	800d378 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800cdd2:	687b      	ldr	r3, [r7, #4]
 800cdd4:	4618      	mov	r0, r3
 800cdd6:	f7ff ffcb 	bl	800cd70 <_ZN8touchgfx14MVPApplicationD1Ev>
 800cdda:	687b      	ldr	r3, [r7, #4]
 800cddc:	4618      	mov	r0, r3
 800cdde:	3708      	adds	r7, #8
 800cde0:	46bd      	mov	sp, r7
 800cde2:	bd80      	pop	{r7, pc}
 800cde4:	08027604 	.word	0x08027604

0800cde8 <_ZN23FrontendApplicationBaseD0Ev>:
 800cde8:	b580      	push	{r7, lr}
 800cdea:	b082      	sub	sp, #8
 800cdec:	af00      	add	r7, sp, #0
 800cdee:	6078      	str	r0, [r7, #4]
 800cdf0:	6878      	ldr	r0, [r7, #4]
 800cdf2:	f7ff ffe1 	bl	800cdb8 <_ZN23FrontendApplicationBaseD1Ev>
 800cdf6:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 800cdfa:	6878      	ldr	r0, [r7, #4]
 800cdfc:	f018 fce7 	bl	80257ce <_ZdlPvj>
 800ce00:	687b      	ldr	r3, [r7, #4]
 800ce02:	4618      	mov	r0, r3
 800ce04:	3708      	adds	r7, #8
 800ce06:	46bd      	mov	sp, r7
 800ce08:	bd80      	pop	{r7, pc}

0800ce0a <_ZN23FrontendApplicationBase19changeToStartScreenEv>:

    virtual void changeToStartScreen()
 800ce0a:	b580      	push	{r7, lr}
 800ce0c:	b082      	sub	sp, #8
 800ce0e:	af00      	add	r7, sp, #0
 800ce10:	6078      	str	r0, [r7, #4]
    {
        gotoscreenScreenNoTransition();
 800ce12:	6878      	ldr	r0, [r7, #4]
 800ce14:	f000 f888 	bl	800cf28 <_ZN23FrontendApplicationBase28gotoscreenScreenNoTransitionEv>
    }
 800ce18:	bf00      	nop
 800ce1a:	3708      	adds	r7, #8
 800ce1c:	46bd      	mov	sp, r7
 800ce1e:	bd80      	pop	{r7, pc}

0800ce20 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
 */
class NoTransition : public Transition
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
 800ce20:	b480      	push	{r7}
 800ce22:	b083      	sub	sp, #12
 800ce24:	af00      	add	r7, sp, #0
 800ce26:	6078      	str	r0, [r7, #4]
    {
        done = true;
 800ce28:	687b      	ldr	r3, [r7, #4]
 800ce2a:	2201      	movs	r2, #1
 800ce2c:	721a      	strb	r2, [r3, #8]
    }
 800ce2e:	bf00      	nop
 800ce30:	370c      	adds	r7, #12
 800ce32:	46bd      	mov	sp, r7
 800ce34:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce38:	4770      	bx	lr

0800ce3a <_ZN13ModelListener4bindEP5Model>:
public:
    ModelListener() : model(0) {}
    
    virtual ~ModelListener() {}

    void bind(Model* m)
 800ce3a:	b480      	push	{r7}
 800ce3c:	b083      	sub	sp, #12
 800ce3e:	af00      	add	r7, sp, #0
 800ce40:	6078      	str	r0, [r7, #4]
 800ce42:	6039      	str	r1, [r7, #0]
    {
        model = m;
 800ce44:	687b      	ldr	r3, [r7, #4]
 800ce46:	683a      	ldr	r2, [r7, #0]
 800ce48:	605a      	str	r2, [r3, #4]
    }
 800ce4a:	bf00      	nop
 800ce4c:	370c      	adds	r7, #12
 800ce4e:	46bd      	mov	sp, r7
 800ce50:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce54:	4770      	bx	lr
	...

0800ce58 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen_screen/screenView.hpp>
#include <gui/screen_screen/screenPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 800ce58:	b580      	push	{r7, lr}
 800ce5a:	b084      	sub	sp, #16
 800ce5c:	af00      	add	r7, sp, #0
 800ce5e:	60f8      	str	r0, [r7, #12]
 800ce60:	60b9      	str	r1, [r7, #8]
 800ce62:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 800ce64:	68fb      	ldr	r3, [r7, #12]
 800ce66:	4618      	mov	r0, r3
 800ce68:	f7ff ff1a 	bl	800cca0 <_ZN8touchgfx14MVPApplicationC1Ev>
 800ce6c:	4a19      	ldr	r2, [pc, #100]	@ (800ced4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7c>)
 800ce6e:	68fb      	ldr	r3, [r7, #12]
 800ce70:	601a      	str	r2, [r3, #0]
      transitionCallback(),
 800ce72:	68fb      	ldr	r3, [r7, #12]
 800ce74:	f503 73a2 	add.w	r3, r3, #324	@ 0x144
 800ce78:	4618      	mov	r0, r3
 800ce7a:	f000 f8ab 	bl	800cfd4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
      frontendHeap(heap),
 800ce7e:	68fb      	ldr	r3, [r7, #12]
 800ce80:	687a      	ldr	r2, [r7, #4]
 800ce82:	f8c3 2154 	str.w	r2, [r3, #340]	@ 0x154
      model(m)
 800ce86:	68fb      	ldr	r3, [r7, #12]
 800ce88:	68ba      	ldr	r2, [r7, #8]
 800ce8a:	f8c3 2158 	str.w	r2, [r3, #344]	@ 0x158
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800ce8e:	f7ff fe49 	bl	800cb24 <_ZN8touchgfx3HAL11getInstanceEv>
 800ce92:	4603      	mov	r3, r0
 800ce94:	681a      	ldr	r2, [r3, #0]
 800ce96:	3208      	adds	r2, #8
 800ce98:	6812      	ldr	r2, [r2, #0]
 800ce9a:	2100      	movs	r1, #0
 800ce9c:	4618      	mov	r0, r3
 800ce9e:	4790      	blx	r2
    touchgfx::Texts::setLanguage(GB);
 800cea0:	2000      	movs	r0, #0
 800cea2:	f001 ffb5 	bl	800ee10 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800cea6:	f7ff fe49 	bl	800cb3c <_ZN8touchgfx3HAL3lcdEv>
 800ceaa:	4603      	mov	r3, r0
 800ceac:	4618      	mov	r0, r3
 800ceae:	f011 f8ee 	bl	801e08e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 800ceb2:	f7ff fe43 	bl	800cb3c <_ZN8touchgfx3HAL3lcdEv>
 800ceb6:	4603      	mov	r3, r0
 800ceb8:	4618      	mov	r0, r3
 800ceba:	f011 f963 	bl	801e184 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
 800cebe:	f7ff fe3d 	bl	800cb3c <_ZN8touchgfx3HAL3lcdEv>
 800cec2:	4603      	mov	r3, r0
 800cec4:	4618      	mov	r0, r3
 800cec6:	f011 f969 	bl	801e19c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
 800ceca:	68fb      	ldr	r3, [r7, #12]
 800cecc:	4618      	mov	r0, r3
 800cece:	3710      	adds	r7, #16
 800ced0:	46bd      	mov	sp, r7
 800ced2:	bd80      	pop	{r7, pc}
 800ced4:	08027604 	.word	0x08027604

0800ced8 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 800ced8:	b480      	push	{r7}
 800ceda:	b083      	sub	sp, #12
 800cedc:	af00      	add	r7, sp, #0
 800cede:	6078      	str	r0, [r7, #4]
 800cee0:	6039      	str	r1, [r7, #0]
 800cee2:	687b      	ldr	r3, [r7, #4]
 800cee4:	4618      	mov	r0, r3
 800cee6:	370c      	adds	r7, #12
 800cee8:	46bd      	mov	sp, r7
 800ceea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ceee:	4770      	bx	lr

0800cef0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800cef0:	b580      	push	{r7, lr}
 800cef2:	b082      	sub	sp, #8
 800cef4:	af00      	add	r7, sp, #0
 800cef6:	6078      	str	r0, [r7, #4]
 800cef8:	6039      	str	r1, [r7, #0]
 800cefa:	687b      	ldr	r3, [r7, #4]
 800cefc:	683a      	ldr	r2, [r7, #0]
 800cefe:	4611      	mov	r1, r2
 800cf00:	4618      	mov	r0, r3
 800cf02:	f7ff ffe9 	bl	800ced8 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 800cf06:	683b      	ldr	r3, [r7, #0]
 800cf08:	685a      	ldr	r2, [r3, #4]
 800cf0a:	687b      	ldr	r3, [r7, #4]
 800cf0c:	605a      	str	r2, [r3, #4]
 800cf0e:	687b      	ldr	r3, [r7, #4]
 800cf10:	683a      	ldr	r2, [r7, #0]
 800cf12:	3308      	adds	r3, #8
 800cf14:	3208      	adds	r2, #8
 800cf16:	e892 0003 	ldmia.w	r2, {r0, r1}
 800cf1a:	e883 0003 	stmia.w	r3, {r0, r1}
 800cf1e:	687b      	ldr	r3, [r7, #4]
 800cf20:	4618      	mov	r0, r3
 800cf22:	3708      	adds	r7, #8
 800cf24:	46bd      	mov	sp, r7
 800cf26:	bd80      	pop	{r7, pc}

0800cf28 <_ZN23FrontendApplicationBase28gotoscreenScreenNoTransitionEv>:
 */

// screen

void FrontendApplicationBase::gotoscreenScreenNoTransition()
{
 800cf28:	b590      	push	{r4, r7, lr}
 800cf2a:	b089      	sub	sp, #36	@ 0x24
 800cf2c:	af00      	add	r7, sp, #0
 800cf2e:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoscreenScreenNoTransitionImpl);
 800cf30:	687b      	ldr	r3, [r7, #4]
 800cf32:	f503 74a2 	add.w	r4, r3, #324	@ 0x144
 800cf36:	4b10      	ldr	r3, [pc, #64]	@ (800cf78 <_ZN23FrontendApplicationBase28gotoscreenScreenNoTransitionEv+0x50>)
 800cf38:	61bb      	str	r3, [r7, #24]
 800cf3a:	2300      	movs	r3, #0
 800cf3c:	61fb      	str	r3, [r7, #28]
 800cf3e:	f107 0008 	add.w	r0, r7, #8
 800cf42:	f107 0318 	add.w	r3, r7, #24
 800cf46:	cb0c      	ldmia	r3, {r2, r3}
 800cf48:	6879      	ldr	r1, [r7, #4]
 800cf4a:	f000 f85f 	bl	800d00c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 800cf4e:	f107 0308 	add.w	r3, r7, #8
 800cf52:	4619      	mov	r1, r3
 800cf54:	4620      	mov	r0, r4
 800cf56:	f7ff ffcb 	bl	800cef0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 800cf5a:	f107 0308 	add.w	r3, r7, #8
 800cf5e:	4618      	mov	r0, r3
 800cf60:	f000 fa0a 	bl	800d378 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 800cf64:	687b      	ldr	r3, [r7, #4]
 800cf66:	f503 72a2 	add.w	r2, r3, #324	@ 0x144
 800cf6a:	687b      	ldr	r3, [r7, #4]
 800cf6c:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
}
 800cf70:	bf00      	nop
 800cf72:	3724      	adds	r7, #36	@ 0x24
 800cf74:	46bd      	mov	sp, r7
 800cf76:	bd90      	pop	{r4, r7, pc}
 800cf78:	0800cf7d 	.word	0x0800cf7d

0800cf7c <_ZN23FrontendApplicationBase32gotoscreenScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoscreenScreenNoTransitionImpl()
{
 800cf7c:	b580      	push	{r7, lr}
 800cf7e:	b084      	sub	sp, #16
 800cf80:	af02      	add	r7, sp, #8
 800cf82:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<screenView, screenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800cf84:	687b      	ldr	r3, [r7, #4]
 800cf86:	f503 719e 	add.w	r1, r3, #316	@ 0x13c
 800cf8a:	687b      	ldr	r3, [r7, #4]
 800cf8c:	f8d3 3154 	ldr.w	r3, [r3, #340]	@ 0x154
 800cf90:	461a      	mov	r2, r3
 800cf92:	687b      	ldr	r3, [r7, #4]
 800cf94:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 800cf98:	9300      	str	r3, [sp, #0]
 800cf9a:	4b04      	ldr	r3, [pc, #16]	@ (800cfac <_ZN23FrontendApplicationBase32gotoscreenScreenNoTransitionImplEv+0x30>)
 800cf9c:	4804      	ldr	r0, [pc, #16]	@ (800cfb0 <_ZN23FrontendApplicationBase32gotoscreenScreenNoTransitionImplEv+0x34>)
 800cf9e:	f000 f867 	bl	800d070 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800cfa2:	bf00      	nop
 800cfa4:	3708      	adds	r7, #8
 800cfa6:	46bd      	mov	sp, r7
 800cfa8:	bd80      	pop	{r7, pc}
 800cfaa:	bf00      	nop
 800cfac:	24001a70 	.word	0x24001a70
 800cfb0:	24001a6c 	.word	0x24001a6c

0800cfb4 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 800cfb4:	b480      	push	{r7}
 800cfb6:	b083      	sub	sp, #12
 800cfb8:	af00      	add	r7, sp, #0
 800cfba:	6078      	str	r0, [r7, #4]
 800cfbc:	4a04      	ldr	r2, [pc, #16]	@ (800cfd0 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 800cfbe:	687b      	ldr	r3, [r7, #4]
 800cfc0:	601a      	str	r2, [r3, #0]
 800cfc2:	687b      	ldr	r3, [r7, #4]
 800cfc4:	4618      	mov	r0, r3
 800cfc6:	370c      	adds	r7, #12
 800cfc8:	46bd      	mov	sp, r7
 800cfca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cfce:	4770      	bx	lr
 800cfd0:	080276e8 	.word	0x080276e8

0800cfd4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
{
    /** Initializes a new instance of the Callback class. */
    Callback()
 800cfd4:	b580      	push	{r7, lr}
 800cfd6:	b082      	sub	sp, #8
 800cfd8:	af00      	add	r7, sp, #0
 800cfda:	6078      	str	r0, [r7, #4]
        : pobject(0), pmemfun(0)
 800cfdc:	687b      	ldr	r3, [r7, #4]
 800cfde:	4618      	mov	r0, r3
 800cfe0:	f7ff ffe8 	bl	800cfb4 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 800cfe4:	4a08      	ldr	r2, [pc, #32]	@ (800d008 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 800cfe6:	687b      	ldr	r3, [r7, #4]
 800cfe8:	601a      	str	r2, [r3, #0]
 800cfea:	687b      	ldr	r3, [r7, #4]
 800cfec:	2200      	movs	r2, #0
 800cfee:	605a      	str	r2, [r3, #4]
 800cff0:	687b      	ldr	r3, [r7, #4]
 800cff2:	2200      	movs	r2, #0
 800cff4:	609a      	str	r2, [r3, #8]
 800cff6:	687b      	ldr	r3, [r7, #4]
 800cff8:	2200      	movs	r2, #0
 800cffa:	60da      	str	r2, [r3, #12]
    {
    }
 800cffc:	687b      	ldr	r3, [r7, #4]
 800cffe:	4618      	mov	r0, r3
 800d000:	3708      	adds	r7, #8
 800d002:	46bd      	mov	sp, r7
 800d004:	bd80      	pop	{r7, pc}
 800d006:	bf00      	nop
 800d008:	08027658 	.word	0x08027658

0800d00c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pObject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function takes zero
     *                       arguments.
     */
    Callback(dest_type* pObject, void (dest_type::*pmemfun_0)())
 800d00c:	b580      	push	{r7, lr}
 800d00e:	b084      	sub	sp, #16
 800d010:	af00      	add	r7, sp, #0
 800d012:	60f8      	str	r0, [r7, #12]
 800d014:	60b9      	str	r1, [r7, #8]
 800d016:	4639      	mov	r1, r7
 800d018:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_0)
 800d01c:	68fb      	ldr	r3, [r7, #12]
 800d01e:	4618      	mov	r0, r3
 800d020:	f7ff ffc8 	bl	800cfb4 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 800d024:	4a08      	ldr	r2, [pc, #32]	@ (800d048 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 800d026:	68fb      	ldr	r3, [r7, #12]
 800d028:	601a      	str	r2, [r3, #0]
 800d02a:	68fb      	ldr	r3, [r7, #12]
 800d02c:	68ba      	ldr	r2, [r7, #8]
 800d02e:	605a      	str	r2, [r3, #4]
 800d030:	68fb      	ldr	r3, [r7, #12]
 800d032:	3308      	adds	r3, #8
 800d034:	463a      	mov	r2, r7
 800d036:	e892 0003 	ldmia.w	r2, {r0, r1}
 800d03a:	e883 0003 	stmia.w	r3, {r0, r1}
    {
    }
 800d03e:	68fb      	ldr	r3, [r7, #12]
 800d040:	4618      	mov	r0, r3
 800d042:	3710      	adds	r7, #16
 800d044:	46bd      	mov	sp, r7
 800d046:	bd80      	pop	{r7, pc}
 800d048:	08027658 	.word	0x08027658

0800d04c <_ZN8touchgfx12NoTransitionC1Ev>:
class NoTransition : public Transition
 800d04c:	b580      	push	{r7, lr}
 800d04e:	b082      	sub	sp, #8
 800d050:	af00      	add	r7, sp, #0
 800d052:	6078      	str	r0, [r7, #4]
 800d054:	687b      	ldr	r3, [r7, #4]
 800d056:	4618      	mov	r0, r3
 800d058:	f7ff fd8c 	bl	800cb74 <_ZN8touchgfx10TransitionC1Ev>
 800d05c:	4a03      	ldr	r2, [pc, #12]	@ (800d06c <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 800d05e:	687b      	ldr	r3, [r7, #4]
 800d060:	601a      	str	r2, [r3, #0]
 800d062:	687b      	ldr	r3, [r7, #4]
 800d064:	4618      	mov	r0, r3
 800d066:	3708      	adds	r7, #8
 800d068:	46bd      	mov	sp, r7
 800d06a:	bd80      	pop	{r7, pc}
 800d06c:	080275e0 	.word	0x080275e0

0800d070 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800d070:	b590      	push	{r4, r7, lr}
 800d072:	b08f      	sub	sp, #60	@ 0x3c
 800d074:	af00      	add	r7, sp, #0
 800d076:	60f8      	str	r0, [r7, #12]
 800d078:	60b9      	str	r1, [r7, #8]
 800d07a:	607a      	str	r2, [r7, #4]
 800d07c:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800d07e:	687b      	ldr	r3, [r7, #4]
 800d080:	689a      	ldr	r2, [r3, #8]
 800d082:	687b      	ldr	r3, [r7, #4]
 800d084:	689b      	ldr	r3, [r3, #8]
 800d086:	681b      	ldr	r3, [r3, #0]
 800d088:	3320      	adds	r3, #32
 800d08a:	681b      	ldr	r3, [r3, #0]
 800d08c:	4610      	mov	r0, r2
 800d08e:	4798      	blx	r3
 800d090:	4603      	mov	r3, r0
 800d092:	f5b3 7fe8 	cmp.w	r3, #464	@ 0x1d0
 800d096:	d205      	bcs.n	800d0a4 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 800d098:	4b7d      	ldr	r3, [pc, #500]	@ (800d290 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800d09a:	4a7e      	ldr	r2, [pc, #504]	@ (800d294 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800d09c:	21a3      	movs	r1, #163	@ 0xa3
 800d09e:	487e      	ldr	r0, [pc, #504]	@ (800d298 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800d0a0:	f018 fbc4 	bl	802582c <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800d0a4:	687b      	ldr	r3, [r7, #4]
 800d0a6:	685a      	ldr	r2, [r3, #4]
 800d0a8:	687b      	ldr	r3, [r7, #4]
 800d0aa:	685b      	ldr	r3, [r3, #4]
 800d0ac:	681b      	ldr	r3, [r3, #0]
 800d0ae:	3320      	adds	r3, #32
 800d0b0:	681b      	ldr	r3, [r3, #0]
 800d0b2:	4610      	mov	r0, r2
 800d0b4:	4798      	blx	r3
 800d0b6:	4603      	mov	r3, r0
 800d0b8:	2b0f      	cmp	r3, #15
 800d0ba:	d805      	bhi.n	800d0c8 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 800d0bc:	4b77      	ldr	r3, [pc, #476]	@ (800d29c <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800d0be:	4a75      	ldr	r2, [pc, #468]	@ (800d294 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800d0c0:	21a4      	movs	r1, #164	@ 0xa4
 800d0c2:	4875      	ldr	r0, [pc, #468]	@ (800d298 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800d0c4:	f018 fbb2 	bl	802582c <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800d0c8:	687b      	ldr	r3, [r7, #4]
 800d0ca:	68da      	ldr	r2, [r3, #12]
 800d0cc:	687b      	ldr	r3, [r7, #4]
 800d0ce:	68db      	ldr	r3, [r3, #12]
 800d0d0:	681b      	ldr	r3, [r3, #0]
 800d0d2:	3320      	adds	r3, #32
 800d0d4:	681b      	ldr	r3, [r3, #0]
 800d0d6:	4610      	mov	r0, r2
 800d0d8:	4798      	blx	r3
 800d0da:	4603      	mov	r3, r0
 800d0dc:	2b0b      	cmp	r3, #11
 800d0de:	d805      	bhi.n	800d0ec <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 800d0e0:	4b6f      	ldr	r3, [pc, #444]	@ (800d2a0 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 800d0e2:	4a6c      	ldr	r2, [pc, #432]	@ (800d294 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800d0e4:	21a5      	movs	r1, #165	@ 0xa5
 800d0e6:	486c      	ldr	r0, [pc, #432]	@ (800d298 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800d0e8:	f018 fba0 	bl	802582c <__assert_func>
 800d0ec:	68fb      	ldr	r3, [r7, #12]
 800d0ee:	62bb      	str	r3, [r7, #40]	@ 0x28
 800d0f0:	68bb      	ldr	r3, [r7, #8]
 800d0f2:	627b      	str	r3, [r7, #36]	@ 0x24
 800d0f4:	683b      	ldr	r3, [r7, #0]
 800d0f6:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 800d0f8:	f007 fb74 	bl	80147e4 <_ZN8touchgfx11Application11getInstanceEv>
 800d0fc:	4603      	mov	r3, r0
 800d0fe:	4618      	mov	r0, r3
 800d100:	f7ff fce2 	bl	800cac8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800d104:	6a3b      	ldr	r3, [r7, #32]
 800d106:	681b      	ldr	r3, [r3, #0]
 800d108:	2b00      	cmp	r3, #0
 800d10a:	d008      	beq.n	800d11e <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 800d10c:	6a3b      	ldr	r3, [r7, #32]
 800d10e:	681a      	ldr	r2, [r3, #0]
 800d110:	6a3b      	ldr	r3, [r7, #32]
 800d112:	681b      	ldr	r3, [r3, #0]
 800d114:	681b      	ldr	r3, [r3, #0]
 800d116:	330c      	adds	r3, #12
 800d118:	681b      	ldr	r3, [r3, #0]
 800d11a:	4610      	mov	r0, r2
 800d11c:	4798      	blx	r3
    if (*currentTrans)
 800d11e:	6a3b      	ldr	r3, [r7, #32]
 800d120:	681b      	ldr	r3, [r3, #0]
 800d122:	2b00      	cmp	r3, #0
 800d124:	d007      	beq.n	800d136 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 800d126:	6a3b      	ldr	r3, [r7, #32]
 800d128:	681a      	ldr	r2, [r3, #0]
 800d12a:	6a3b      	ldr	r3, [r7, #32]
 800d12c:	681b      	ldr	r3, [r3, #0]
 800d12e:	681b      	ldr	r3, [r3, #0]
 800d130:	681b      	ldr	r3, [r3, #0]
 800d132:	4610      	mov	r0, r2
 800d134:	4798      	blx	r3
    if (*currentScreen)
 800d136:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d138:	681b      	ldr	r3, [r3, #0]
 800d13a:	2b00      	cmp	r3, #0
 800d13c:	d008      	beq.n	800d150 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 800d13e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d140:	681a      	ldr	r2, [r3, #0]
 800d142:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d144:	681b      	ldr	r3, [r3, #0]
 800d146:	681b      	ldr	r3, [r3, #0]
 800d148:	3314      	adds	r3, #20
 800d14a:	681b      	ldr	r3, [r3, #0]
 800d14c:	4610      	mov	r0, r2
 800d14e:	4798      	blx	r3
    if (*currentPresenter)
 800d150:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d152:	681b      	ldr	r3, [r3, #0]
 800d154:	2b00      	cmp	r3, #0
 800d156:	d008      	beq.n	800d16a <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 800d158:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d15a:	681a      	ldr	r2, [r3, #0]
 800d15c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d15e:	681b      	ldr	r3, [r3, #0]
 800d160:	681b      	ldr	r3, [r3, #0]
 800d162:	3304      	adds	r3, #4
 800d164:	681b      	ldr	r3, [r3, #0]
 800d166:	4610      	mov	r0, r2
 800d168:	4798      	blx	r3
    if (*currentScreen)
 800d16a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d16c:	681b      	ldr	r3, [r3, #0]
 800d16e:	2b00      	cmp	r3, #0
 800d170:	d007      	beq.n	800d182 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 800d172:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d174:	681a      	ldr	r2, [r3, #0]
 800d176:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800d178:	681b      	ldr	r3, [r3, #0]
 800d17a:	681b      	ldr	r3, [r3, #0]
 800d17c:	681b      	ldr	r3, [r3, #0]
 800d17e:	4610      	mov	r0, r2
 800d180:	4798      	blx	r3
    if (*currentPresenter)
 800d182:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d184:	681b      	ldr	r3, [r3, #0]
 800d186:	2b00      	cmp	r3, #0
 800d188:	d008      	beq.n	800d19c <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 800d18a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d18c:	681a      	ldr	r2, [r3, #0]
 800d18e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d190:	681b      	ldr	r3, [r3, #0]
 800d192:	681b      	ldr	r3, [r3, #0]
 800d194:	3308      	adds	r3, #8
 800d196:	681b      	ldr	r3, [r3, #0]
 800d198:	4610      	mov	r0, r2
 800d19a:	4798      	blx	r3
}
 800d19c:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800d19e:	687b      	ldr	r3, [r7, #4]
 800d1a0:	68db      	ldr	r3, [r3, #12]
 800d1a2:	2100      	movs	r1, #0
 800d1a4:	4618      	mov	r0, r3
 800d1a6:	f000 f87d 	bl	800d2a4 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800d1aa:	4603      	mov	r3, r0
 800d1ac:	4619      	mov	r1, r3
 800d1ae:	200c      	movs	r0, #12
 800d1b0:	f7ff fbf4 	bl	800c99c <_ZnwjPv>
 800d1b4:	4604      	mov	r4, r0
 800d1b6:	4620      	mov	r0, r4
 800d1b8:	f7ff ff48 	bl	800d04c <_ZN8touchgfx12NoTransitionC1Ev>
 800d1bc:	637c      	str	r4, [r7, #52]	@ 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800d1be:	687b      	ldr	r3, [r7, #4]
 800d1c0:	689b      	ldr	r3, [r3, #8]
 800d1c2:	2100      	movs	r1, #0
 800d1c4:	4618      	mov	r0, r3
 800d1c6:	f000 f880 	bl	800d2ca <_ZN8touchgfx17AbstractPartition2atI10screenViewEERT_t>
 800d1ca:	4603      	mov	r3, r0
 800d1cc:	4619      	mov	r1, r3
 800d1ce:	f44f 70e8 	mov.w	r0, #464	@ 0x1d0
 800d1d2:	f7ff fbe3 	bl	800c99c <_ZnwjPv>
 800d1d6:	4604      	mov	r4, r0
 800d1d8:	4620      	mov	r0, r4
 800d1da:	f002 f851 	bl	800f280 <_ZN10screenViewC1Ev>
 800d1de:	633c      	str	r4, [r7, #48]	@ 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800d1e0:	687b      	ldr	r3, [r7, #4]
 800d1e2:	685b      	ldr	r3, [r3, #4]
 800d1e4:	2100      	movs	r1, #0
 800d1e6:	4618      	mov	r0, r3
 800d1e8:	f000 f882 	bl	800d2f0 <_ZN8touchgfx17AbstractPartition2atI15screenPresenterEERT_t>
 800d1ec:	4603      	mov	r3, r0
 800d1ee:	4619      	mov	r1, r3
 800d1f0:	2010      	movs	r0, #16
 800d1f2:	f7ff fbd3 	bl	800c99c <_ZnwjPv>
 800d1f6:	4604      	mov	r4, r0
 800d1f8:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 800d1fa:	4620      	mov	r0, r4
 800d1fc:	f001 ffca 	bl	800f194 <_ZN15screenPresenterC1ER10screenView>
 800d200:	62fc      	str	r4, [r7, #44]	@ 0x2c
    *currentTrans = newTransition;
 800d202:	683b      	ldr	r3, [r7, #0]
 800d204:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 800d206:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 800d208:	68bb      	ldr	r3, [r7, #8]
 800d20a:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800d20c:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800d20e:	68fb      	ldr	r3, [r7, #12]
 800d210:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800d212:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800d214:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800d216:	2b00      	cmp	r3, #0
 800d218:	d002      	beq.n	800d220 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>
 800d21a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800d21c:	3304      	adds	r3, #4
 800d21e:	e000      	b.n	800d222 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 800d220:	2300      	movs	r3, #0
 800d222:	4619      	mov	r1, r3
 800d224:	6cb8      	ldr	r0, [r7, #72]	@ 0x48
 800d226:	f7ff fd95 	bl	800cd54 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 800d22a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800d22c:	3304      	adds	r3, #4
 800d22e:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 800d230:	4618      	mov	r0, r3
 800d232:	f7ff fe02 	bl	800ce3a <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800d236:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d238:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 800d23a:	4618      	mov	r0, r3
 800d23c:	f000 f86b 	bl	800d316 <_ZN8touchgfx4ViewI15screenPresenterE4bindERS1_>
 800d240:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800d242:	61fb      	str	r3, [r7, #28]
 800d244:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800d246:	61bb      	str	r3, [r7, #24]
 800d248:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800d24a:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 800d24c:	69fb      	ldr	r3, [r7, #28]
 800d24e:	681b      	ldr	r3, [r3, #0]
 800d250:	330c      	adds	r3, #12
 800d252:	681b      	ldr	r3, [r3, #0]
 800d254:	69f8      	ldr	r0, [r7, #28]
 800d256:	4798      	blx	r3
    newPresenter->activate();
 800d258:	69bb      	ldr	r3, [r7, #24]
 800d25a:	681b      	ldr	r3, [r3, #0]
 800d25c:	681b      	ldr	r3, [r3, #0]
 800d25e:	69b8      	ldr	r0, [r7, #24]
 800d260:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800d262:	6979      	ldr	r1, [r7, #20]
 800d264:	69f8      	ldr	r0, [r7, #28]
 800d266:	f008 ffcb 	bl	8016200 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800d26a:	697b      	ldr	r3, [r7, #20]
 800d26c:	681b      	ldr	r3, [r3, #0]
 800d26e:	3310      	adds	r3, #16
 800d270:	681b      	ldr	r3, [r3, #0]
 800d272:	6978      	ldr	r0, [r7, #20]
 800d274:	4798      	blx	r3
    newTransition->invalidate();
 800d276:	697b      	ldr	r3, [r7, #20]
 800d278:	681b      	ldr	r3, [r3, #0]
 800d27a:	3314      	adds	r3, #20
 800d27c:	681b      	ldr	r3, [r3, #0]
 800d27e:	6978      	ldr	r0, [r7, #20]
 800d280:	4798      	blx	r3
}
 800d282:	bf00      	nop

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
 800d284:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
}
 800d286:	4618      	mov	r0, r3
 800d288:	373c      	adds	r7, #60	@ 0x3c
 800d28a:	46bd      	mov	sp, r7
 800d28c:	bd90      	pop	{r4, r7, pc}
 800d28e:	bf00      	nop
 800d290:	08026b30 	.word	0x08026b30
 800d294:	08026bc0 	.word	0x08026bc0
 800d298:	08026c90 	.word	0x08026c90
 800d29c:	08026cd4 	.word	0x08026cd4
 800d2a0:	08026d78 	.word	0x08026d78

0800d2a4 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param  index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
 800d2a4:	b580      	push	{r7, lr}
 800d2a6:	b082      	sub	sp, #8
 800d2a8:	af00      	add	r7, sp, #0
 800d2aa:	6078      	str	r0, [r7, #4]
 800d2ac:	460b      	mov	r3, r1
 800d2ae:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 800d2b0:	687b      	ldr	r3, [r7, #4]
 800d2b2:	681b      	ldr	r3, [r3, #0]
 800d2b4:	3324      	adds	r3, #36	@ 0x24
 800d2b6:	681b      	ldr	r3, [r3, #0]
 800d2b8:	887a      	ldrh	r2, [r7, #2]
 800d2ba:	4611      	mov	r1, r2
 800d2bc:	6878      	ldr	r0, [r7, #4]
 800d2be:	4798      	blx	r3
 800d2c0:	4603      	mov	r3, r0
    }
 800d2c2:	4618      	mov	r0, r3
 800d2c4:	3708      	adds	r7, #8
 800d2c6:	46bd      	mov	sp, r7
 800d2c8:	bd80      	pop	{r7, pc}

0800d2ca <_ZN8touchgfx17AbstractPartition2atI10screenViewEERT_t>:
    T& at(const uint16_t index)
 800d2ca:	b580      	push	{r7, lr}
 800d2cc:	b082      	sub	sp, #8
 800d2ce:	af00      	add	r7, sp, #0
 800d2d0:	6078      	str	r0, [r7, #4]
 800d2d2:	460b      	mov	r3, r1
 800d2d4:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800d2d6:	687b      	ldr	r3, [r7, #4]
 800d2d8:	681b      	ldr	r3, [r3, #0]
 800d2da:	3324      	adds	r3, #36	@ 0x24
 800d2dc:	681b      	ldr	r3, [r3, #0]
 800d2de:	887a      	ldrh	r2, [r7, #2]
 800d2e0:	4611      	mov	r1, r2
 800d2e2:	6878      	ldr	r0, [r7, #4]
 800d2e4:	4798      	blx	r3
 800d2e6:	4603      	mov	r3, r0
    }
 800d2e8:	4618      	mov	r0, r3
 800d2ea:	3708      	adds	r7, #8
 800d2ec:	46bd      	mov	sp, r7
 800d2ee:	bd80      	pop	{r7, pc}

0800d2f0 <_ZN8touchgfx17AbstractPartition2atI15screenPresenterEERT_t>:
    T& at(const uint16_t index)
 800d2f0:	b580      	push	{r7, lr}
 800d2f2:	b082      	sub	sp, #8
 800d2f4:	af00      	add	r7, sp, #0
 800d2f6:	6078      	str	r0, [r7, #4]
 800d2f8:	460b      	mov	r3, r1
 800d2fa:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800d2fc:	687b      	ldr	r3, [r7, #4]
 800d2fe:	681b      	ldr	r3, [r3, #0]
 800d300:	3324      	adds	r3, #36	@ 0x24
 800d302:	681b      	ldr	r3, [r3, #0]
 800d304:	887a      	ldrh	r2, [r7, #2]
 800d306:	4611      	mov	r1, r2
 800d308:	6878      	ldr	r0, [r7, #4]
 800d30a:	4798      	blx	r3
 800d30c:	4603      	mov	r3, r0
    }
 800d30e:	4618      	mov	r0, r3
 800d310:	3708      	adds	r7, #8
 800d312:	46bd      	mov	sp, r7
 800d314:	bd80      	pop	{r7, pc}

0800d316 <_ZN8touchgfx4ViewI15screenPresenterE4bindERS1_>:
     * Binds an instance of a specific Presenter type (subclass) to the View instance. This function
     * is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
 800d316:	b480      	push	{r7}
 800d318:	b083      	sub	sp, #12
 800d31a:	af00      	add	r7, sp, #0
 800d31c:	6078      	str	r0, [r7, #4]
 800d31e:	6039      	str	r1, [r7, #0]
    {
        presenter = &newPresenter;
 800d320:	687b      	ldr	r3, [r7, #4]
 800d322:	683a      	ldr	r2, [r7, #0]
 800d324:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 800d326:	bf00      	nop
 800d328:	370c      	adds	r7, #12
 800d32a:	46bd      	mov	sp, r7
 800d32c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d330:	4770      	bx	lr
	...

0800d334 <_ZN8touchgfx12NoTransitionD1Ev>:
 800d334:	b580      	push	{r7, lr}
 800d336:	b082      	sub	sp, #8
 800d338:	af00      	add	r7, sp, #0
 800d33a:	6078      	str	r0, [r7, #4]
 800d33c:	4a05      	ldr	r2, [pc, #20]	@ (800d354 <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 800d33e:	687b      	ldr	r3, [r7, #4]
 800d340:	601a      	str	r2, [r3, #0]
 800d342:	687b      	ldr	r3, [r7, #4]
 800d344:	4618      	mov	r0, r3
 800d346:	f7ff fc2b 	bl	800cba0 <_ZN8touchgfx10TransitionD1Ev>
 800d34a:	687b      	ldr	r3, [r7, #4]
 800d34c:	4618      	mov	r0, r3
 800d34e:	3708      	adds	r7, #8
 800d350:	46bd      	mov	sp, r7
 800d352:	bd80      	pop	{r7, pc}
 800d354:	080275e0 	.word	0x080275e0

0800d358 <_ZN8touchgfx12NoTransitionD0Ev>:
 800d358:	b580      	push	{r7, lr}
 800d35a:	b082      	sub	sp, #8
 800d35c:	af00      	add	r7, sp, #0
 800d35e:	6078      	str	r0, [r7, #4]
 800d360:	6878      	ldr	r0, [r7, #4]
 800d362:	f7ff ffe7 	bl	800d334 <_ZN8touchgfx12NoTransitionD1Ev>
 800d366:	210c      	movs	r1, #12
 800d368:	6878      	ldr	r0, [r7, #4]
 800d36a:	f018 fa30 	bl	80257ce <_ZdlPvj>
 800d36e:	687b      	ldr	r3, [r7, #4]
 800d370:	4618      	mov	r0, r3
 800d372:	3708      	adds	r7, #8
 800d374:	46bd      	mov	sp, r7
 800d376:	bd80      	pop	{r7, pc}

0800d378 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800d378:	b580      	push	{r7, lr}
 800d37a:	b082      	sub	sp, #8
 800d37c:	af00      	add	r7, sp, #0
 800d37e:	6078      	str	r0, [r7, #4]
 800d380:	4a05      	ldr	r2, [pc, #20]	@ (800d398 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 800d382:	687b      	ldr	r3, [r7, #4]
 800d384:	601a      	str	r2, [r3, #0]
 800d386:	687b      	ldr	r3, [r7, #4]
 800d388:	4618      	mov	r0, r3
 800d38a:	f7ff fbab 	bl	800cae4 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800d38e:	687b      	ldr	r3, [r7, #4]
 800d390:	4618      	mov	r0, r3
 800d392:	3708      	adds	r7, #8
 800d394:	46bd      	mov	sp, r7
 800d396:	bd80      	pop	{r7, pc}
 800d398:	08027658 	.word	0x08027658

0800d39c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 800d39c:	b580      	push	{r7, lr}
 800d39e:	b082      	sub	sp, #8
 800d3a0:	af00      	add	r7, sp, #0
 800d3a2:	6078      	str	r0, [r7, #4]
 800d3a4:	6878      	ldr	r0, [r7, #4]
 800d3a6:	f7ff ffe7 	bl	800d378 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 800d3aa:	2110      	movs	r1, #16
 800d3ac:	6878      	ldr	r0, [r7, #4]
 800d3ae:	f018 fa0e 	bl	80257ce <_ZdlPvj>
 800d3b2:	687b      	ldr	r3, [r7, #4]
 800d3b4:	4618      	mov	r0, r3
 800d3b6:	3708      	adds	r7, #8
 800d3b8:	46bd      	mov	sp, r7
 800d3ba:	bd80      	pop	{r7, pc}

0800d3bc <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 800d3bc:	b580      	push	{r7, lr}
 800d3be:	b082      	sub	sp, #8
 800d3c0:	af00      	add	r7, sp, #0
 800d3c2:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun)();
 800d3c4:	687b      	ldr	r3, [r7, #4]
 800d3c6:	685b      	ldr	r3, [r3, #4]
 800d3c8:	687a      	ldr	r2, [r7, #4]
 800d3ca:	68d2      	ldr	r2, [r2, #12]
 800d3cc:	1052      	asrs	r2, r2, #1
 800d3ce:	1899      	adds	r1, r3, r2
 800d3d0:	687b      	ldr	r3, [r7, #4]
 800d3d2:	68db      	ldr	r3, [r3, #12]
 800d3d4:	f003 0301 	and.w	r3, r3, #1
 800d3d8:	2b00      	cmp	r3, #0
 800d3da:	d102      	bne.n	800d3e2 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 800d3dc:	687b      	ldr	r3, [r7, #4]
 800d3de:	689b      	ldr	r3, [r3, #8]
 800d3e0:	e00a      	b.n	800d3f8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 800d3e2:	687b      	ldr	r3, [r7, #4]
 800d3e4:	685b      	ldr	r3, [r3, #4]
 800d3e6:	687a      	ldr	r2, [r7, #4]
 800d3e8:	68d2      	ldr	r2, [r2, #12]
 800d3ea:	1052      	asrs	r2, r2, #1
 800d3ec:	4413      	add	r3, r2
 800d3ee:	681b      	ldr	r3, [r3, #0]
 800d3f0:	687a      	ldr	r2, [r7, #4]
 800d3f2:	6892      	ldr	r2, [r2, #8]
 800d3f4:	4413      	add	r3, r2
 800d3f6:	681b      	ldr	r3, [r3, #0]
 800d3f8:	4608      	mov	r0, r1
 800d3fa:	4798      	blx	r3
    }
 800d3fc:	bf00      	nop
 800d3fe:	3708      	adds	r7, #8
 800d400:	46bd      	mov	sp, r7
 800d402:	bd80      	pop	{r7, pc}

0800d404 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 800d404:	b480      	push	{r7}
 800d406:	b083      	sub	sp, #12
 800d408:	af00      	add	r7, sp, #0
 800d40a:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun != 0);
 800d40c:	687b      	ldr	r3, [r7, #4]
 800d40e:	685b      	ldr	r3, [r3, #4]
 800d410:	2b00      	cmp	r3, #0
 800d412:	d010      	beq.n	800d436 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800d414:	687b      	ldr	r3, [r7, #4]
 800d416:	689b      	ldr	r3, [r3, #8]
 800d418:	2b00      	cmp	r3, #0
 800d41a:	d107      	bne.n	800d42c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800d41c:	687b      	ldr	r3, [r7, #4]
 800d41e:	68db      	ldr	r3, [r3, #12]
 800d420:	f003 0301 	and.w	r3, r3, #1
 800d424:	2b00      	cmp	r3, #0
 800d426:	d101      	bne.n	800d42c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 800d428:	2301      	movs	r3, #1
 800d42a:	e000      	b.n	800d42e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 800d42c:	2300      	movs	r3, #0
 800d42e:	2b01      	cmp	r3, #1
 800d430:	d001      	beq.n	800d436 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800d432:	2301      	movs	r3, #1
 800d434:	e000      	b.n	800d438 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 800d436:	2300      	movs	r3, #0
    }
 800d438:	4618      	mov	r0, r3
 800d43a:	370c      	adds	r7, #12
 800d43c:	46bd      	mov	sp, r7
 800d43e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d442:	4770      	bx	lr

0800d444 <_ZN8touchgfx9colortypeC1Ev>:
 * extract a 24/32-bit color from this type, use the getColor32 function.
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
 800d444:	b480      	push	{r7}
 800d446:	b083      	sub	sp, #12
 800d448:	af00      	add	r7, sp, #0
 800d44a:	6078      	str	r0, [r7, #4]
        : color(0)
 800d44c:	687b      	ldr	r3, [r7, #4]
 800d44e:	2200      	movs	r2, #0
 800d450:	601a      	str	r2, [r3, #0]
    {
    }
 800d452:	687b      	ldr	r3, [r7, #4]
 800d454:	4618      	mov	r0, r3
 800d456:	370c      	adds	r7, #12
 800d458:	46bd      	mov	sp, r7
 800d45a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d45e:	4770      	bx	lr

0800d460 <_ZN8touchgfx9colortypeC1Em>:
     *
     * @param  col The color.
     *
     * @see Color::getColorFromRGB
     */
    colortype(uint32_t col)
 800d460:	b480      	push	{r7}
 800d462:	b083      	sub	sp, #12
 800d464:	af00      	add	r7, sp, #0
 800d466:	6078      	str	r0, [r7, #4]
 800d468:	6039      	str	r1, [r7, #0]
        : color(col)
 800d46a:	687b      	ldr	r3, [r7, #4]
 800d46c:	683a      	ldr	r2, [r7, #0]
 800d46e:	601a      	str	r2, [r3, #0]
    {
    }
 800d470:	687b      	ldr	r3, [r7, #4]
 800d472:	4618      	mov	r0, r3
 800d474:	370c      	adds	r7, #12
 800d476:	46bd      	mov	sp, r7
 800d478:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d47c:	4770      	bx	lr

0800d47e <_ZN8touchgfx4RectC1Ev>:
/** Class representing a Rectangle with a few convenient methods. */
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
 800d47e:	b480      	push	{r7}
 800d480:	b083      	sub	sp, #12
 800d482:	af00      	add	r7, sp, #0
 800d484:	6078      	str	r0, [r7, #4]
        : x(0), y(0), width(0), height(0)
 800d486:	687b      	ldr	r3, [r7, #4]
 800d488:	2200      	movs	r2, #0
 800d48a:	801a      	strh	r2, [r3, #0]
 800d48c:	687b      	ldr	r3, [r7, #4]
 800d48e:	2200      	movs	r2, #0
 800d490:	805a      	strh	r2, [r3, #2]
 800d492:	687b      	ldr	r3, [r7, #4]
 800d494:	2200      	movs	r2, #0
 800d496:	809a      	strh	r2, [r3, #4]
 800d498:	687b      	ldr	r3, [r7, #4]
 800d49a:	2200      	movs	r2, #0
 800d49c:	80da      	strh	r2, [r3, #6]
    {
    }
 800d49e:	687b      	ldr	r3, [r7, #4]
 800d4a0:	4618      	mov	r0, r3
 800d4a2:	370c      	adds	r7, #12
 800d4a4:	46bd      	mov	sp, r7
 800d4a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d4aa:	4770      	bx	lr

0800d4ac <_ZN8touchgfx6BitmapC1Et>:
     * Creates and binds a Bitmap instance to the corresponding entry in the BitmapData
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
 800d4ac:	b480      	push	{r7}
 800d4ae:	b083      	sub	sp, #12
 800d4b0:	af00      	add	r7, sp, #0
 800d4b2:	6078      	str	r0, [r7, #4]
 800d4b4:	460b      	mov	r3, r1
 800d4b6:	807b      	strh	r3, [r7, #2]
        : bitmapId(id)
 800d4b8:	687b      	ldr	r3, [r7, #4]
 800d4ba:	887a      	ldrh	r2, [r7, #2]
 800d4bc:	801a      	strh	r2, [r3, #0]
    {
    }
 800d4be:	687b      	ldr	r3, [r7, #4]
 800d4c0:	4618      	mov	r0, r3
 800d4c2:	370c      	adds	r7, #12
 800d4c4:	46bd      	mov	sp, r7
 800d4c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d4ca:	4770      	bx	lr

0800d4cc <_ZNK8touchgfx10ClickEvent7getTypeEv>:
    /**
     * Gets the click type of this event.
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
 800d4cc:	b480      	push	{r7}
 800d4ce:	b083      	sub	sp, #12
 800d4d0:	af00      	add	r7, sp, #0
 800d4d2:	6078      	str	r0, [r7, #4]
    {
        return clickEventType;
 800d4d4:	687b      	ldr	r3, [r7, #4]
 800d4d6:	791b      	ldrb	r3, [r3, #4]
    }
 800d4d8:	4618      	mov	r0, r3
 800d4da:	370c      	adds	r7, #12
 800d4dc:	46bd      	mov	sp, r7
 800d4de:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d4e2:	4770      	bx	lr

0800d4e4 <_ZN8touchgfx8DrawableC1Ev>:
 */
class Drawable
{
public:
    /** Initializes a new instance of the Drawable class. */
    Drawable()
 800d4e4:	b580      	push	{r7, lr}
 800d4e6:	b082      	sub	sp, #8
 800d4e8:	af00      	add	r7, sp, #0
 800d4ea:	6078      	str	r0, [r7, #4]
          nextSibling(0),
          nextDrawChainElement(0),
          cachedAbsX(0),
          cachedAbsY(0),
          touchable(false),
          visible(true)
 800d4ec:	4a14      	ldr	r2, [pc, #80]	@ (800d540 <_ZN8touchgfx8DrawableC1Ev+0x5c>)
 800d4ee:	687b      	ldr	r3, [r7, #4]
 800d4f0:	601a      	str	r2, [r3, #0]
        : rect(),
 800d4f2:	687b      	ldr	r3, [r7, #4]
 800d4f4:	3304      	adds	r3, #4
 800d4f6:	4618      	mov	r0, r3
 800d4f8:	f7ff ffc1 	bl	800d47e <_ZN8touchgfx4RectC1Ev>
          cachedVisibleRect(),
 800d4fc:	687b      	ldr	r3, [r7, #4]
 800d4fe:	330c      	adds	r3, #12
 800d500:	4618      	mov	r0, r3
 800d502:	f7ff ffbc 	bl	800d47e <_ZN8touchgfx4RectC1Ev>
          parent(0),
 800d506:	687b      	ldr	r3, [r7, #4]
 800d508:	2200      	movs	r2, #0
 800d50a:	615a      	str	r2, [r3, #20]
          nextSibling(0),
 800d50c:	687b      	ldr	r3, [r7, #4]
 800d50e:	2200      	movs	r2, #0
 800d510:	619a      	str	r2, [r3, #24]
          nextDrawChainElement(0),
 800d512:	687b      	ldr	r3, [r7, #4]
 800d514:	2200      	movs	r2, #0
 800d516:	61da      	str	r2, [r3, #28]
          cachedAbsX(0),
 800d518:	687b      	ldr	r3, [r7, #4]
 800d51a:	2200      	movs	r2, #0
 800d51c:	841a      	strh	r2, [r3, #32]
          cachedAbsY(0),
 800d51e:	687b      	ldr	r3, [r7, #4]
 800d520:	2200      	movs	r2, #0
 800d522:	845a      	strh	r2, [r3, #34]	@ 0x22
          touchable(false),
 800d524:	687b      	ldr	r3, [r7, #4]
 800d526:	2200      	movs	r2, #0
 800d528:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
          visible(true)
 800d52c:	687b      	ldr	r3, [r7, #4]
 800d52e:	2201      	movs	r2, #1
 800d530:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
    {
    }
 800d534:	687b      	ldr	r3, [r7, #4]
 800d536:	4618      	mov	r0, r3
 800d538:	3708      	adds	r7, #8
 800d53a:	46bd      	mov	sp, r7
 800d53c:	bd80      	pop	{r7, pc}
 800d53e:	bf00      	nop
 800d540:	08028790 	.word	0x08028790

0800d544 <_ZN8touchgfx8DrawableD1Ev>:

    /** Finalizes an instance of the Drawable class. */
    virtual ~Drawable()
 800d544:	b480      	push	{r7}
 800d546:	b083      	sub	sp, #12
 800d548:	af00      	add	r7, sp, #0
 800d54a:	6078      	str	r0, [r7, #4]
    {
 800d54c:	4a04      	ldr	r2, [pc, #16]	@ (800d560 <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 800d54e:	687b      	ldr	r3, [r7, #4]
 800d550:	601a      	str	r2, [r3, #0]
    }
 800d552:	687b      	ldr	r3, [r7, #4]
 800d554:	4618      	mov	r0, r3
 800d556:	370c      	adds	r7, #12
 800d558:	46bd      	mov	sp, r7
 800d55a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d55e:	4770      	bx	lr
 800d560:	08028790 	.word	0x08028790

0800d564 <_ZN8touchgfx8DrawableD0Ev>:
    virtual ~Drawable()
 800d564:	b580      	push	{r7, lr}
 800d566:	b082      	sub	sp, #8
 800d568:	af00      	add	r7, sp, #0
 800d56a:	6078      	str	r0, [r7, #4]
    }
 800d56c:	6878      	ldr	r0, [r7, #4]
 800d56e:	f7ff ffe9 	bl	800d544 <_ZN8touchgfx8DrawableD1Ev>
 800d572:	2128      	movs	r1, #40	@ 0x28
 800d574:	6878      	ldr	r0, [r7, #4]
 800d576:	f018 f92a 	bl	80257ce <_ZdlPvj>
 800d57a:	687b      	ldr	r3, [r7, #4]
 800d57c:	4618      	mov	r0, r3
 800d57e:	3708      	adds	r7, #8
 800d580:	46bd      	mov	sp, r7
 800d582:	bd80      	pop	{r7, pc}

0800d584 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * Tell the framework that the contents of the Drawable needs to be redrawn. If the Drawable is
     * invisible, nothing happens. Subclasses of Drawable are encouraged to implement this function
     * and invalidate as little as possible, i.e. the smallest rectangle covering the visual element(s)
     * drawn by the widget.
     */
    virtual void invalidateContent() const
 800d584:	b580      	push	{r7, lr}
 800d586:	b082      	sub	sp, #8
 800d588:	af00      	add	r7, sp, #0
 800d58a:	6078      	str	r0, [r7, #4]
    {
        // Consider checking if *this is in the draw chain
        if (visible)
 800d58c:	687b      	ldr	r3, [r7, #4]
 800d58e:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 800d592:	2b00      	cmp	r3, #0
 800d594:	d005      	beq.n	800d5a2 <_ZNK8touchgfx8Drawable17invalidateContentEv+0x1e>
        {
            invalidate();
 800d596:	687b      	ldr	r3, [r7, #4]
 800d598:	681b      	ldr	r3, [r3, #0]
 800d59a:	3314      	adds	r3, #20
 800d59c:	681b      	ldr	r3, [r3, #0]
 800d59e:	6878      	ldr	r0, [r7, #4]
 800d5a0:	4798      	blx	r3
        }
    }
 800d5a2:	bf00      	nop
 800d5a4:	3708      	adds	r7, #8
 800d5a6:	46bd      	mov	sp, r7
 800d5a8:	bd80      	pop	{r7, pc}

0800d5aa <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * Function for obtaining the first child of this drawable if any.
     *
     * @return A pointer on the first child drawable if any.
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
 800d5aa:	b480      	push	{r7}
 800d5ac:	b083      	sub	sp, #12
 800d5ae:	af00      	add	r7, sp, #0
 800d5b0:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800d5b2:	2300      	movs	r3, #0
    }
 800d5b4:	4618      	mov	r0, r3
 800d5b6:	370c      	adds	r7, #12
 800d5b8:	46bd      	mov	sp, r7
 800d5ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d5be:	4770      	bx	lr

0800d5c0 <_ZN8touchgfx8Drawable11setPositionEssss>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     *
     * @see setXY,setWidthHeight,setPosition(const Drawable&)
     */
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800d5c0:	b580      	push	{r7, lr}
 800d5c2:	b084      	sub	sp, #16
 800d5c4:	af00      	add	r7, sp, #0
 800d5c6:	60f8      	str	r0, [r7, #12]
 800d5c8:	4608      	mov	r0, r1
 800d5ca:	4611      	mov	r1, r2
 800d5cc:	461a      	mov	r2, r3
 800d5ce:	4603      	mov	r3, r0
 800d5d0:	817b      	strh	r3, [r7, #10]
 800d5d2:	460b      	mov	r3, r1
 800d5d4:	813b      	strh	r3, [r7, #8]
 800d5d6:	4613      	mov	r3, r2
 800d5d8:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 800d5da:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800d5de:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800d5e2:	4619      	mov	r1, r3
 800d5e4:	68f8      	ldr	r0, [r7, #12]
 800d5e6:	f000 f82a 	bl	800d63e <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 800d5ea:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 800d5ee:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800d5f2:	4619      	mov	r1, r3
 800d5f4:	68f8      	ldr	r0, [r7, #12]
 800d5f6:	f000 f87e 	bl	800d6f6 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 800d5fa:	bf00      	nop
 800d5fc:	3710      	adds	r7, #16
 800d5fe:	46bd      	mov	sp, r7
 800d600:	bd80      	pop	{r7, pc}

0800d602 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @param  x The new x value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
 800d602:	b480      	push	{r7}
 800d604:	b083      	sub	sp, #12
 800d606:	af00      	add	r7, sp, #0
 800d608:	6078      	str	r0, [r7, #4]
 800d60a:	460b      	mov	r3, r1
 800d60c:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 800d60e:	687b      	ldr	r3, [r7, #4]
 800d610:	887a      	ldrh	r2, [r7, #2]
 800d612:	809a      	strh	r2, [r3, #4]
    }
 800d614:	bf00      	nop
 800d616:	370c      	adds	r7, #12
 800d618:	46bd      	mov	sp, r7
 800d61a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d61e:	4770      	bx	lr

0800d620 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @param  y The new y value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
 800d620:	b480      	push	{r7}
 800d622:	b083      	sub	sp, #12
 800d624:	af00      	add	r7, sp, #0
 800d626:	6078      	str	r0, [r7, #4]
 800d628:	460b      	mov	r3, r1
 800d62a:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 800d62c:	687b      	ldr	r3, [r7, #4]
 800d62e:	887a      	ldrh	r2, [r7, #2]
 800d630:	80da      	strh	r2, [r3, #6]
    }
 800d632:	bf00      	nop
 800d634:	370c      	adds	r7, #12
 800d636:	46bd      	mov	sp, r7
 800d638:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d63c:	4770      	bx	lr

0800d63e <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setXY(int16_t x, int16_t y)
 800d63e:	b580      	push	{r7, lr}
 800d640:	b082      	sub	sp, #8
 800d642:	af00      	add	r7, sp, #0
 800d644:	6078      	str	r0, [r7, #4]
 800d646:	460b      	mov	r3, r1
 800d648:	807b      	strh	r3, [r7, #2]
 800d64a:	4613      	mov	r3, r2
 800d64c:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 800d64e:	687b      	ldr	r3, [r7, #4]
 800d650:	681b      	ldr	r3, [r3, #0]
 800d652:	3330      	adds	r3, #48	@ 0x30
 800d654:	681b      	ldr	r3, [r3, #0]
 800d656:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800d65a:	4611      	mov	r1, r2
 800d65c:	6878      	ldr	r0, [r7, #4]
 800d65e:	4798      	blx	r3
        setY(y);
 800d660:	687b      	ldr	r3, [r7, #4]
 800d662:	681b      	ldr	r3, [r3, #0]
 800d664:	3334      	adds	r3, #52	@ 0x34
 800d666:	681b      	ldr	r3, [r3, #0]
 800d668:	f9b7 2000 	ldrsh.w	r2, [r7]
 800d66c:	4611      	mov	r1, r2
 800d66e:	6878      	ldr	r0, [r7, #4]
 800d670:	4798      	blx	r3
    }
 800d672:	bf00      	nop
 800d674:	3708      	adds	r7, #8
 800d676:	46bd      	mov	sp, r7
 800d678:	bd80      	pop	{r7, pc}

0800d67a <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @param  width The new width.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
 800d67a:	b480      	push	{r7}
 800d67c:	b083      	sub	sp, #12
 800d67e:	af00      	add	r7, sp, #0
 800d680:	6078      	str	r0, [r7, #4]
 800d682:	460b      	mov	r3, r1
 800d684:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 800d686:	687b      	ldr	r3, [r7, #4]
 800d688:	887a      	ldrh	r2, [r7, #2]
 800d68a:	811a      	strh	r2, [r3, #8]
    }
 800d68c:	bf00      	nop
 800d68e:	370c      	adds	r7, #12
 800d690:	46bd      	mov	sp, r7
 800d692:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d696:	4770      	bx	lr

0800d698 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @param  height The new height.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
 800d698:	b480      	push	{r7}
 800d69a:	b083      	sub	sp, #12
 800d69c:	af00      	add	r7, sp, #0
 800d69e:	6078      	str	r0, [r7, #4]
 800d6a0:	460b      	mov	r3, r1
 800d6a2:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 800d6a4:	687b      	ldr	r3, [r7, #4]
 800d6a6:	887a      	ldrh	r2, [r7, #2]
 800d6a8:	815a      	strh	r2, [r3, #10]
    }
 800d6aa:	bf00      	nop
 800d6ac:	370c      	adds	r7, #12
 800d6ae:	46bd      	mov	sp, r7
 800d6b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d6b4:	4770      	bx	lr

0800d6b6 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
    /**
     * This function can be called on parent nodes to signal that the size or position of
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
 800d6b6:	b480      	push	{r7}
 800d6b8:	b083      	sub	sp, #12
 800d6ba:	af00      	add	r7, sp, #0
 800d6bc:	6078      	str	r0, [r7, #4]
    {
    }
 800d6be:	bf00      	nop
 800d6c0:	370c      	adds	r7, #12
 800d6c2:	46bd      	mov	sp, r7
 800d6c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d6c8:	4770      	bx	lr

0800d6ca <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800d6ca:	b480      	push	{r7}
 800d6cc:	b083      	sub	sp, #12
 800d6ce:	af00      	add	r7, sp, #0
 800d6d0:	6078      	str	r0, [r7, #4]
 800d6d2:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800d6d4:	bf00      	nop
 800d6d6:	370c      	adds	r7, #12
 800d6d8:	46bd      	mov	sp, r7
 800d6da:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d6de:	4770      	bx	lr

0800d6e0 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 800d6e0:	b480      	push	{r7}
 800d6e2:	b083      	sub	sp, #12
 800d6e4:	af00      	add	r7, sp, #0
 800d6e6:	6078      	str	r0, [r7, #4]
 800d6e8:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800d6ea:	bf00      	nop
 800d6ec:	370c      	adds	r7, #12
 800d6ee:	46bd      	mov	sp, r7
 800d6f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d6f4:	4770      	bx	lr

0800d6f6 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
     * coordinates).
     *
     * @param  width  The width.
     * @param  height The height.
     */
    void setWidthHeight(int16_t width, int16_t height)
 800d6f6:	b580      	push	{r7, lr}
 800d6f8:	b082      	sub	sp, #8
 800d6fa:	af00      	add	r7, sp, #0
 800d6fc:	6078      	str	r0, [r7, #4]
 800d6fe:	460b      	mov	r3, r1
 800d700:	807b      	strh	r3, [r7, #2]
 800d702:	4613      	mov	r3, r2
 800d704:	803b      	strh	r3, [r7, #0]
    {
        setWidth(width);
 800d706:	687b      	ldr	r3, [r7, #4]
 800d708:	681b      	ldr	r3, [r3, #0]
 800d70a:	3338      	adds	r3, #56	@ 0x38
 800d70c:	681b      	ldr	r3, [r3, #0]
 800d70e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 800d712:	4611      	mov	r1, r2
 800d714:	6878      	ldr	r0, [r7, #4]
 800d716:	4798      	blx	r3
        setHeight(height);
 800d718:	687b      	ldr	r3, [r7, #4]
 800d71a:	681b      	ldr	r3, [r3, #0]
 800d71c:	333c      	adds	r3, #60	@ 0x3c
 800d71e:	681b      	ldr	r3, [r3, #0]
 800d720:	f9b7 2000 	ldrsh.w	r2, [r7]
 800d724:	4611      	mov	r1, r2
 800d726:	6878      	ldr	r0, [r7, #4]
 800d728:	4798      	blx	r3
    }
 800d72a:	bf00      	nop
 800d72c:	3708      	adds	r7, #8
 800d72e:	46bd      	mov	sp, r7
 800d730:	bd80      	pop	{r7, pc}

0800d732 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * ignores the event. The event is only received if the drawable is touchable and
     * visible.
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800d732:	b480      	push	{r7}
 800d734:	b083      	sub	sp, #12
 800d736:	af00      	add	r7, sp, #0
 800d738:	6078      	str	r0, [r7, #4]
 800d73a:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800d73c:	bf00      	nop
 800d73e:	370c      	adds	r7, #12
 800d740:	46bd      	mov	sp, r7
 800d742:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d746:	4770      	bx	lr

0800d748 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     * Called periodically by the framework if the Drawable instance has subscribed to timer
     * ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
 800d748:	b480      	push	{r7}
 800d74a:	b083      	sub	sp, #12
 800d74c:	af00      	add	r7, sp, #0
 800d74e:	6078      	str	r0, [r7, #4]
    {
    }
 800d750:	bf00      	nop
 800d752:	370c      	adds	r7, #12
 800d754:	46bd      	mov	sp, r7
 800d756:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d75a:	4770      	bx	lr

0800d75c <_ZN8touchgfx8Drawable12setTouchableEb>:
    /**
     * Controls whether this Drawable receives touch events or not.
     *
     * @param  touch If true it will receive touch events, if false it will not.
     */
    void setTouchable(bool touch)
 800d75c:	b480      	push	{r7}
 800d75e:	b083      	sub	sp, #12
 800d760:	af00      	add	r7, sp, #0
 800d762:	6078      	str	r0, [r7, #4]
 800d764:	460b      	mov	r3, r1
 800d766:	70fb      	strb	r3, [r7, #3]
    {
        touchable = touch;
 800d768:	687b      	ldr	r3, [r7, #4]
 800d76a:	78fa      	ldrb	r2, [r7, #3]
 800d76c:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
    }
 800d770:	bf00      	nop
 800d772:	370c      	adds	r7, #12
 800d774:	46bd      	mov	sp, r7
 800d776:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d77a:	4770      	bx	lr

0800d77c <_ZNK8touchgfx8Drawable9isVisibleEv>:
     *
     * @return true if the Drawable is visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 800d77c:	b480      	push	{r7}
 800d77e:	b083      	sub	sp, #12
 800d780:	af00      	add	r7, sp, #0
 800d782:	6078      	str	r0, [r7, #4]
    {
        return visible;
 800d784:	687b      	ldr	r3, [r7, #4]
 800d786:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
    }
 800d78a:	4618      	mov	r0, r3
 800d78c:	370c      	adds	r7, #12
 800d78e:	46bd      	mov	sp, r7
 800d790:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d794:	4770      	bx	lr

0800d796 <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 800d796:	b480      	push	{r7}
 800d798:	b083      	sub	sp, #12
 800d79a:	af00      	add	r7, sp, #0
 800d79c:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 800d79e:	687b      	ldr	r3, [r7, #4]
 800d7a0:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
    }
 800d7a4:	4618      	mov	r0, r3
 800d7a6:	370c      	adds	r7, #12
 800d7a8:	46bd      	mov	sp, r7
 800d7aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d7ae:	4770      	bx	lr

0800d7b0 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800d7b0:	b580      	push	{r7, lr}
 800d7b2:	b082      	sub	sp, #8
 800d7b4:	af00      	add	r7, sp, #0
 800d7b6:	6078      	str	r0, [r7, #4]
 800d7b8:	460b      	mov	r3, r1
 800d7ba:	807b      	strh	r3, [r7, #2]
 800d7bc:	4613      	mov	r3, r2
 800d7be:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 800d7c0:	687b      	ldr	r3, [r7, #4]
 800d7c2:	681b      	ldr	r3, [r3, #0]
 800d7c4:	3354      	adds	r3, #84	@ 0x54
 800d7c6:	681b      	ldr	r3, [r3, #0]
 800d7c8:	8879      	ldrh	r1, [r7, #2]
 800d7ca:	687a      	ldr	r2, [r7, #4]
 800d7cc:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 800d7d0:	b292      	uxth	r2, r2
 800d7d2:	1a8a      	subs	r2, r1, r2
 800d7d4:	b292      	uxth	r2, r2
 800d7d6:	b210      	sxth	r0, r2
 800d7d8:	8839      	ldrh	r1, [r7, #0]
 800d7da:	687a      	ldr	r2, [r7, #4]
 800d7dc:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 800d7e0:	b292      	uxth	r2, r2
 800d7e2:	1a8a      	subs	r2, r1, r2
 800d7e4:	b292      	uxth	r2, r2
 800d7e6:	b212      	sxth	r2, r2
 800d7e8:	4601      	mov	r1, r0
 800d7ea:	6878      	ldr	r0, [r7, #4]
 800d7ec:	4798      	blx	r3
    }
 800d7ee:	bf00      	nop
 800d7f0:	3708      	adds	r7, #8
 800d7f2:	46bd      	mov	sp, r7
 800d7f4:	bd80      	pop	{r7, pc}

0800d7f6 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     * Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 800d7f6:	b480      	push	{r7}
 800d7f8:	b083      	sub	sp, #12
 800d7fa:	af00      	add	r7, sp, #0
 800d7fc:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800d7fe:	687b      	ldr	r3, [r7, #4]
 800d800:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800d804:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800d806:	687b      	ldr	r3, [r7, #4]
 800d808:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800d80c:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 800d80e:	687b      	ldr	r3, [r7, #4]
 800d810:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800d814:	845a      	strh	r2, [r3, #34]	@ 0x22
    }
 800d816:	bf00      	nop
 800d818:	370c      	adds	r7, #12
 800d81a:	46bd      	mov	sp, r7
 800d81c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d820:	4770      	bx	lr

0800d822 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @param          invalidatedArea     Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     *
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 800d822:	b580      	push	{r7, lr}
 800d824:	b084      	sub	sp, #16
 800d826:	af00      	add	r7, sp, #0
 800d828:	60f8      	str	r0, [r7, #12]
 800d82a:	60b9      	str	r1, [r7, #8]
 800d82c:	607a      	str	r2, [r7, #4]
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
 800d82e:	68f8      	ldr	r0, [r7, #12]
 800d830:	f7ff ffe1 	bl	800d7f6 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 800d834:	687b      	ldr	r3, [r7, #4]
 800d836:	681a      	ldr	r2, [r3, #0]
 800d838:	68fb      	ldr	r3, [r7, #12]
 800d83a:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 800d83c:	687b      	ldr	r3, [r7, #4]
 800d83e:	68fa      	ldr	r2, [r7, #12]
 800d840:	601a      	str	r2, [r3, #0]
    }
 800d842:	bf00      	nop
 800d844:	3710      	adds	r7, #16
 800d846:	46bd      	mov	sp, r7
 800d848:	bd80      	pop	{r7, pc}

0800d84a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     * Since a Widget is only one Drawable, Widget::getLastChild simply yields itself as
     * result, but only if the Widget isVisible and isTouchable.
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
 800d84a:	b580      	push	{r7, lr}
 800d84c:	b084      	sub	sp, #16
 800d84e:	af00      	add	r7, sp, #0
 800d850:	60f8      	str	r0, [r7, #12]
 800d852:	607b      	str	r3, [r7, #4]
 800d854:	460b      	mov	r3, r1
 800d856:	817b      	strh	r3, [r7, #10]
 800d858:	4613      	mov	r3, r2
 800d85a:	813b      	strh	r3, [r7, #8]
    {
        if (isVisible() && isTouchable())
 800d85c:	68fb      	ldr	r3, [r7, #12]
 800d85e:	4618      	mov	r0, r3
 800d860:	f7ff ff8c 	bl	800d77c <_ZNK8touchgfx8Drawable9isVisibleEv>
 800d864:	4603      	mov	r3, r0
 800d866:	2b00      	cmp	r3, #0
 800d868:	d008      	beq.n	800d87c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800d86a:	68fb      	ldr	r3, [r7, #12]
 800d86c:	4618      	mov	r0, r3
 800d86e:	f7ff ff92 	bl	800d796 <_ZNK8touchgfx8Drawable11isTouchableEv>
 800d872:	4603      	mov	r3, r0
 800d874:	2b00      	cmp	r3, #0
 800d876:	d001      	beq.n	800d87c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 800d878:	2301      	movs	r3, #1
 800d87a:	e000      	b.n	800d87e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 800d87c:	2300      	movs	r3, #0
 800d87e:	2b00      	cmp	r3, #0
 800d880:	d002      	beq.n	800d888 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 800d882:	68fa      	ldr	r2, [r7, #12]
 800d884:	687b      	ldr	r3, [r7, #4]
 800d886:	601a      	str	r2, [r3, #0]
        }
    }
 800d888:	bf00      	nop
 800d88a:	3710      	adds	r7, #16
 800d88c:	46bd      	mov	sp, r7
 800d88e:	bd80      	pop	{r7, pc}

0800d890 <_ZN8touchgfx9ContainerC1Ev>:
 * @see Drawable
 */
class Container : public Drawable
{
public:
    Container()
 800d890:	b580      	push	{r7, lr}
 800d892:	b082      	sub	sp, #8
 800d894:	af00      	add	r7, sp, #0
 800d896:	6078      	str	r0, [r7, #4]
        : Drawable(),
          firstChild(0)
 800d898:	687b      	ldr	r3, [r7, #4]
 800d89a:	4618      	mov	r0, r3
 800d89c:	f7ff fe22 	bl	800d4e4 <_ZN8touchgfx8DrawableC1Ev>
 800d8a0:	4a05      	ldr	r2, [pc, #20]	@ (800d8b8 <_ZN8touchgfx9ContainerC1Ev+0x28>)
 800d8a2:	687b      	ldr	r3, [r7, #4]
 800d8a4:	601a      	str	r2, [r3, #0]
 800d8a6:	687b      	ldr	r3, [r7, #4]
 800d8a8:	2200      	movs	r2, #0
 800d8aa:	629a      	str	r2, [r3, #40]	@ 0x28
    {
    }
 800d8ac:	687b      	ldr	r3, [r7, #4]
 800d8ae:	4618      	mov	r0, r3
 800d8b0:	3708      	adds	r7, #8
 800d8b2:	46bd      	mov	sp, r7
 800d8b4:	bd80      	pop	{r7, pc}
 800d8b6:	bf00      	nop
 800d8b8:	080281ec 	.word	0x080281ec

0800d8bc <_ZN8touchgfx9Container13getFirstChildEv>:
     * @return Pointer to the first drawable added to this container. If nothing has been
     *         added return zero.
     *
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
 800d8bc:	b480      	push	{r7}
 800d8be:	b083      	sub	sp, #12
 800d8c0:	af00      	add	r7, sp, #0
 800d8c2:	6078      	str	r0, [r7, #4]
    {
        return firstChild;
 800d8c4:	687b      	ldr	r3, [r7, #4]
 800d8c6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
    }
 800d8c8:	4618      	mov	r0, r3
 800d8ca:	370c      	adds	r7, #12
 800d8cc:	46bd      	mov	sp, r7
 800d8ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d8d2:	4770      	bx	lr

0800d8d4 <_ZN8touchgfx6ScreenD1Ev>:
public:
    /** Initializes a new instance of the Screen class. */
    Screen();

    /** Finalizes an instance of the Screen class. */
    virtual ~Screen()
 800d8d4:	b580      	push	{r7, lr}
 800d8d6:	b082      	sub	sp, #8
 800d8d8:	af00      	add	r7, sp, #0
 800d8da:	6078      	str	r0, [r7, #4]
    {
 800d8dc:	4a06      	ldr	r2, [pc, #24]	@ (800d8f8 <_ZN8touchgfx6ScreenD1Ev+0x24>)
 800d8de:	687b      	ldr	r3, [r7, #4]
 800d8e0:	601a      	str	r2, [r3, #0]
    }
 800d8e2:	687b      	ldr	r3, [r7, #4]
 800d8e4:	3304      	adds	r3, #4
 800d8e6:	4618      	mov	r0, r3
 800d8e8:	f000 fa24 	bl	800dd34 <_ZN8touchgfx9ContainerD1Ev>
 800d8ec:	687b      	ldr	r3, [r7, #4]
 800d8ee:	4618      	mov	r0, r3
 800d8f0:	3708      	adds	r7, #8
 800d8f2:	46bd      	mov	sp, r7
 800d8f4:	bd80      	pop	{r7, pc}
 800d8f6:	bf00      	nop
 800d8f8:	0802889c 	.word	0x0802889c

0800d8fc <_ZN8touchgfx6ScreenD0Ev>:
    virtual ~Screen()
 800d8fc:	b580      	push	{r7, lr}
 800d8fe:	b082      	sub	sp, #8
 800d900:	af00      	add	r7, sp, #0
 800d902:	6078      	str	r0, [r7, #4]
    }
 800d904:	6878      	ldr	r0, [r7, #4]
 800d906:	f7ff ffe5 	bl	800d8d4 <_ZN8touchgfx6ScreenD1Ev>
 800d90a:	213c      	movs	r1, #60	@ 0x3c
 800d90c:	6878      	ldr	r0, [r7, #4]
 800d90e:	f017 ff5e 	bl	80257ce <_ZdlPvj>
 800d912:	687b      	ldr	r3, [r7, #4]
 800d914:	4618      	mov	r0, r3
 800d916:	3708      	adds	r7, #8
 800d918:	46bd      	mov	sp, r7
 800d91a:	bd80      	pop	{r7, pc}

0800d91c <_ZN8touchgfx6Screen11setupScreenEv>:
     * version does nothing, but place any screen specific initialization code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
 800d91c:	b480      	push	{r7}
 800d91e:	b083      	sub	sp, #12
 800d920:	af00      	add	r7, sp, #0
 800d922:	6078      	str	r0, [r7, #4]
    {
    }
 800d924:	bf00      	nop
 800d926:	370c      	adds	r7, #12
 800d928:	46bd      	mov	sp, r7
 800d92a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d92e:	4770      	bx	lr

0800d930 <_ZN8touchgfx6Screen15afterTransitionEv>:
     * version does nothing, but override to do screen specific initialization code that has
     * to be done after the transition to the screen.
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
 800d930:	b480      	push	{r7}
 800d932:	b083      	sub	sp, #12
 800d934:	af00      	add	r7, sp, #0
 800d936:	6078      	str	r0, [r7, #4]
    {
    }
 800d938:	bf00      	nop
 800d93a:	370c      	adds	r7, #12
 800d93c:	46bd      	mov	sp, r7
 800d93e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d942:	4770      	bx	lr

0800d944 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     * Base version does nothing, but place any screen specific cleanup code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
 800d944:	b480      	push	{r7}
 800d946:	b083      	sub	sp, #12
 800d948:	af00      	add	r7, sp, #0
 800d94a:	6078      	str	r0, [r7, #4]
    {
    }
 800d94c:	bf00      	nop
 800d94e:	370c      	adds	r7, #12
 800d950:	46bd      	mov	sp, r7
 800d952:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d956:	4770      	bx	lr

0800d958 <_ZN8touchgfx6Screen15handleTickEventEv>:

    /**
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 800d958:	b480      	push	{r7}
 800d95a:	b083      	sub	sp, #12
 800d95c:	af00      	add	r7, sp, #0
 800d95e:	6078      	str	r0, [r7, #4]
    {
    }
 800d960:	bf00      	nop
 800d962:	370c      	adds	r7, #12
 800d964:	46bd      	mov	sp, r7
 800d966:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d96a:	4770      	bx	lr

0800d96c <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * Called by the Application on the reception of a "key", the meaning of which is
     * platform/application specific. Default implementation does nothing.
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 800d96c:	b480      	push	{r7}
 800d96e:	b083      	sub	sp, #12
 800d970:	af00      	add	r7, sp, #0
 800d972:	6078      	str	r0, [r7, #4]
 800d974:	460b      	mov	r3, r1
 800d976:	70fb      	strb	r3, [r7, #3]
    {
        (void)key; // Unused variable
    }
 800d978:	bf00      	nop
 800d97a:	370c      	adds	r7, #12
 800d97c:	46bd      	mov	sp, r7
 800d97e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d982:	4770      	bx	lr

0800d984 <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @param [in] d The Drawable to add.
     *
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
 800d984:	b580      	push	{r7, lr}
 800d986:	b082      	sub	sp, #8
 800d988:	af00      	add	r7, sp, #0
 800d98a:	6078      	str	r0, [r7, #4]
 800d98c:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 800d98e:	687b      	ldr	r3, [r7, #4]
 800d990:	3304      	adds	r3, #4
 800d992:	6839      	ldr	r1, [r7, #0]
 800d994:	4618      	mov	r0, r3
 800d996:	f003 fd1f 	bl	80113d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800d99a:	bf00      	nop
 800d99c:	3708      	adds	r7, #8
 800d99e:	46bd      	mov	sp, r7
 800d9a0:	bd80      	pop	{r7, pc}
	...

0800d9a4 <_ZN8touchgfx6WidgetC1Ev>:
class Widget : public Drawable
 800d9a4:	b580      	push	{r7, lr}
 800d9a6:	b082      	sub	sp, #8
 800d9a8:	af00      	add	r7, sp, #0
 800d9aa:	6078      	str	r0, [r7, #4]
 800d9ac:	687b      	ldr	r3, [r7, #4]
 800d9ae:	4618      	mov	r0, r3
 800d9b0:	f7ff fd98 	bl	800d4e4 <_ZN8touchgfx8DrawableC1Ev>
 800d9b4:	4a03      	ldr	r2, [pc, #12]	@ (800d9c4 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 800d9b6:	687b      	ldr	r3, [r7, #4]
 800d9b8:	601a      	str	r2, [r3, #0]
 800d9ba:	687b      	ldr	r3, [r7, #4]
 800d9bc:	4618      	mov	r0, r3
 800d9be:	3708      	adds	r7, #8
 800d9c0:	46bd      	mov	sp, r7
 800d9c2:	bd80      	pop	{r7, pc}
 800d9c4:	08027998 	.word	0x08027998

0800d9c8 <_ZN8touchgfx6WidgetD1Ev>:
 800d9c8:	b580      	push	{r7, lr}
 800d9ca:	b082      	sub	sp, #8
 800d9cc:	af00      	add	r7, sp, #0
 800d9ce:	6078      	str	r0, [r7, #4]
 800d9d0:	4a05      	ldr	r2, [pc, #20]	@ (800d9e8 <_ZN8touchgfx6WidgetD1Ev+0x20>)
 800d9d2:	687b      	ldr	r3, [r7, #4]
 800d9d4:	601a      	str	r2, [r3, #0]
 800d9d6:	687b      	ldr	r3, [r7, #4]
 800d9d8:	4618      	mov	r0, r3
 800d9da:	f7ff fdb3 	bl	800d544 <_ZN8touchgfx8DrawableD1Ev>
 800d9de:	687b      	ldr	r3, [r7, #4]
 800d9e0:	4618      	mov	r0, r3
 800d9e2:	3708      	adds	r7, #8
 800d9e4:	46bd      	mov	sp, r7
 800d9e6:	bd80      	pop	{r7, pc}
 800d9e8:	08027998 	.word	0x08027998

0800d9ec <_ZN8touchgfx6WidgetD0Ev>:
 800d9ec:	b580      	push	{r7, lr}
 800d9ee:	b082      	sub	sp, #8
 800d9f0:	af00      	add	r7, sp, #0
 800d9f2:	6078      	str	r0, [r7, #4]
 800d9f4:	6878      	ldr	r0, [r7, #4]
 800d9f6:	f7ff ffe7 	bl	800d9c8 <_ZN8touchgfx6WidgetD1Ev>
 800d9fa:	2128      	movs	r1, #40	@ 0x28
 800d9fc:	6878      	ldr	r0, [r7, #4]
 800d9fe:	f017 fee6 	bl	80257ce <_ZdlPvj>
 800da02:	687b      	ldr	r3, [r7, #4]
 800da04:	4618      	mov	r0, r3
 800da06:	3708      	adds	r7, #8
 800da08:	46bd      	mov	sp, r7
 800da0a:	bd80      	pop	{r7, pc}

0800da0c <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 800da0c:	b580      	push	{r7, lr}
 800da0e:	b082      	sub	sp, #8
 800da10:	af00      	add	r7, sp, #0
 800da12:	6078      	str	r0, [r7, #4]
        : Widget(), alpha(255), color(0)
 800da14:	687b      	ldr	r3, [r7, #4]
 800da16:	4618      	mov	r0, r3
 800da18:	2326      	movs	r3, #38	@ 0x26
 800da1a:	461a      	mov	r2, r3
 800da1c:	2100      	movs	r1, #0
 800da1e:	f018 fa11 	bl	8025e44 <memset>
 800da22:	687b      	ldr	r3, [r7, #4]
 800da24:	4618      	mov	r0, r3
 800da26:	f7ff ffbd 	bl	800d9a4 <_ZN8touchgfx6WidgetC1Ev>
 800da2a:	4a09      	ldr	r2, [pc, #36]	@ (800da50 <_ZN8touchgfx3BoxC1Ev+0x44>)
 800da2c:	687b      	ldr	r3, [r7, #4]
 800da2e:	601a      	str	r2, [r3, #0]
 800da30:	687b      	ldr	r3, [r7, #4]
 800da32:	22ff      	movs	r2, #255	@ 0xff
 800da34:	f883 2026 	strb.w	r2, [r3, #38]	@ 0x26
 800da38:	687b      	ldr	r3, [r7, #4]
 800da3a:	3328      	adds	r3, #40	@ 0x28
 800da3c:	2100      	movs	r1, #0
 800da3e:	4618      	mov	r0, r3
 800da40:	f7ff fd0e 	bl	800d460 <_ZN8touchgfx9colortypeC1Em>
    {
    }
 800da44:	687b      	ldr	r3, [r7, #4]
 800da46:	4618      	mov	r0, r3
 800da48:	3708      	adds	r7, #8
 800da4a:	46bd      	mov	sp, r7
 800da4c:	bd80      	pop	{r7, pc}
 800da4e:	bf00      	nop
 800da50:	080284c0 	.word	0x080284c0

0800da54 <_ZN8touchgfx3Box8setColorENS_9colortypeE>:
     *
     * @param  newColor The color of the box.
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
 800da54:	b480      	push	{r7}
 800da56:	b083      	sub	sp, #12
 800da58:	af00      	add	r7, sp, #0
 800da5a:	6078      	str	r0, [r7, #4]
 800da5c:	6039      	str	r1, [r7, #0]
    {
        color = newColor;
 800da5e:	687b      	ldr	r3, [r7, #4]
 800da60:	683a      	ldr	r2, [r7, #0]
 800da62:	629a      	str	r2, [r3, #40]	@ 0x28
    }
 800da64:	bf00      	nop
 800da66:	370c      	adds	r7, #12
 800da68:	46bd      	mov	sp, r7
 800da6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da6e:	4770      	bx	lr

0800da70 <_ZN8touchgfx3Box8setAlphaEh>:
    }

    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
 800da70:	b480      	push	{r7}
 800da72:	b083      	sub	sp, #12
 800da74:	af00      	add	r7, sp, #0
 800da76:	6078      	str	r0, [r7, #4]
 800da78:	460b      	mov	r3, r1
 800da7a:	70fb      	strb	r3, [r7, #3]
    {
        alpha = newAlpha;
 800da7c:	687b      	ldr	r3, [r7, #4]
 800da7e:	78fa      	ldrb	r2, [r7, #3]
 800da80:	f883 2026 	strb.w	r2, [r3, #38]	@ 0x26
    }
 800da84:	bf00      	nop
 800da86:	370c      	adds	r7, #12
 800da88:	46bd      	mov	sp, r7
 800da8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da8e:	4770      	bx	lr

0800da90 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
     *
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
 800da90:	b580      	push	{r7, lr}
 800da92:	b082      	sub	sp, #8
 800da94:	af00      	add	r7, sp, #0
 800da96:	6078      	str	r0, [r7, #4]
 800da98:	6039      	str	r1, [r7, #0]
        : Widget(), bitmap(bmp), alpha(255)
 800da9a:	687b      	ldr	r3, [r7, #4]
 800da9c:	4618      	mov	r0, r3
 800da9e:	2326      	movs	r3, #38	@ 0x26
 800daa0:	461a      	mov	r2, r3
 800daa2:	2100      	movs	r1, #0
 800daa4:	f018 f9ce 	bl	8025e44 <memset>
 800daa8:	687b      	ldr	r3, [r7, #4]
 800daaa:	4618      	mov	r0, r3
 800daac:	f7ff ff7a 	bl	800d9a4 <_ZN8touchgfx6WidgetC1Ev>
 800dab0:	4a09      	ldr	r2, [pc, #36]	@ (800dad8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x48>)
 800dab2:	687b      	ldr	r3, [r7, #4]
 800dab4:	601a      	str	r2, [r3, #0]
 800dab6:	687b      	ldr	r3, [r7, #4]
 800dab8:	683a      	ldr	r2, [r7, #0]
 800daba:	8812      	ldrh	r2, [r2, #0]
 800dabc:	84da      	strh	r2, [r3, #38]	@ 0x26
 800dabe:	687b      	ldr	r3, [r7, #4]
 800dac0:	22ff      	movs	r2, #255	@ 0xff
 800dac2:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
    {
        Image::setBitmap(bmp);
 800dac6:	6839      	ldr	r1, [r7, #0]
 800dac8:	6878      	ldr	r0, [r7, #4]
 800daca:	f005 f88a 	bl	8012be2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 800dace:	687b      	ldr	r3, [r7, #4]
 800dad0:	4618      	mov	r0, r3
 800dad2:	3708      	adds	r7, #8
 800dad4:	46bd      	mov	sp, r7
 800dad6:	bd80      	pop	{r7, pc}
 800dad8:	08028604 	.word	0x08028604

0800dadc <_ZN8touchgfx9TypedTextC1Et>:
    TypedText(const TypedTextId id = TYPED_TEXT_INVALID)
 800dadc:	b480      	push	{r7}
 800dade:	b083      	sub	sp, #12
 800dae0:	af00      	add	r7, sp, #0
 800dae2:	6078      	str	r0, [r7, #4]
 800dae4:	460b      	mov	r3, r1
 800dae6:	807b      	strh	r3, [r7, #2]
        : typedTextId(id)
 800dae8:	4a06      	ldr	r2, [pc, #24]	@ (800db04 <_ZN8touchgfx9TypedTextC1Et+0x28>)
 800daea:	687b      	ldr	r3, [r7, #4]
 800daec:	601a      	str	r2, [r3, #0]
 800daee:	687b      	ldr	r3, [r7, #4]
 800daf0:	887a      	ldrh	r2, [r7, #2]
 800daf2:	809a      	strh	r2, [r3, #4]
    }
 800daf4:	687b      	ldr	r3, [r7, #4]
 800daf6:	4618      	mov	r0, r3
 800daf8:	370c      	adds	r7, #12
 800dafa:	46bd      	mov	sp, r7
 800dafc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db00:	4770      	bx	lr
 800db02:	bf00      	nop
 800db04:	08027568 	.word	0x08027568

0800db08 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>:
     * @param  callback The callback to be executed. The callback will be executed with a
     *                  reference to the AbstractButton.
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
 800db08:	b480      	push	{r7}
 800db0a:	b083      	sub	sp, #12
 800db0c:	af00      	add	r7, sp, #0
 800db0e:	6078      	str	r0, [r7, #4]
 800db10:	6039      	str	r1, [r7, #0]
    {
        action = &callback;
 800db12:	687b      	ldr	r3, [r7, #4]
 800db14:	683a      	ldr	r2, [r7, #0]
 800db16:	629a      	str	r2, [r3, #40]	@ 0x28
    }
 800db18:	bf00      	nop
 800db1a:	370c      	adds	r7, #12
 800db1c:	46bd      	mov	sp, r7
 800db1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db22:	4770      	bx	lr

0800db24 <_ZN8touchgfx14AbstractButtonD1Ev>:
class AbstractButton : public Widget
 800db24:	b580      	push	{r7, lr}
 800db26:	b082      	sub	sp, #8
 800db28:	af00      	add	r7, sp, #0
 800db2a:	6078      	str	r0, [r7, #4]
 800db2c:	4a05      	ldr	r2, [pc, #20]	@ (800db44 <_ZN8touchgfx14AbstractButtonD1Ev+0x20>)
 800db2e:	687b      	ldr	r3, [r7, #4]
 800db30:	601a      	str	r2, [r3, #0]
 800db32:	687b      	ldr	r3, [r7, #4]
 800db34:	4618      	mov	r0, r3
 800db36:	f7ff ff47 	bl	800d9c8 <_ZN8touchgfx6WidgetD1Ev>
 800db3a:	687b      	ldr	r3, [r7, #4]
 800db3c:	4618      	mov	r0, r3
 800db3e:	3708      	adds	r7, #8
 800db40:	46bd      	mov	sp, r7
 800db42:	bd80      	pop	{r7, pc}
 800db44:	080283d4 	.word	0x080283d4

0800db48 <_ZN8touchgfx14AbstractButtonD0Ev>:
 800db48:	b580      	push	{r7, lr}
 800db4a:	b082      	sub	sp, #8
 800db4c:	af00      	add	r7, sp, #0
 800db4e:	6078      	str	r0, [r7, #4]
 800db50:	6878      	ldr	r0, [r7, #4]
 800db52:	f7ff ffe7 	bl	800db24 <_ZN8touchgfx14AbstractButtonD1Ev>
 800db56:	2130      	movs	r1, #48	@ 0x30
 800db58:	6878      	ldr	r0, [r7, #4]
 800db5a:	f017 fe38 	bl	80257ce <_ZdlPvj>
 800db5e:	687b      	ldr	r3, [r7, #4]
 800db60:	4618      	mov	r0, r3
 800db62:	3708      	adds	r7, #8
 800db64:	46bd      	mov	sp, r7
 800db66:	bd80      	pop	{r7, pc}

0800db68 <_ZN8touchgfx9TypedTextaSERKS0_>:
class TypedText
 800db68:	b480      	push	{r7}
 800db6a:	b083      	sub	sp, #12
 800db6c:	af00      	add	r7, sp, #0
 800db6e:	6078      	str	r0, [r7, #4]
 800db70:	6039      	str	r1, [r7, #0]
 800db72:	683b      	ldr	r3, [r7, #0]
 800db74:	889a      	ldrh	r2, [r3, #4]
 800db76:	687b      	ldr	r3, [r7, #4]
 800db78:	809a      	strh	r2, [r3, #4]
 800db7a:	687b      	ldr	r3, [r7, #4]
 800db7c:	4618      	mov	r0, r3
 800db7e:	370c      	adds	r7, #12
 800db80:	46bd      	mov	sp, r7
 800db82:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db86:	4770      	bx	lr

0800db88 <_ZN8touchgfx15ButtonWithLabel12setLabelTextENS_9TypedTextE>:
     *
     * @param  t The text to display.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void setLabelText(TypedText t)
 800db88:	b580      	push	{r7, lr}
 800db8a:	b082      	sub	sp, #8
 800db8c:	af00      	add	r7, sp, #0
 800db8e:	6078      	str	r0, [r7, #4]
 800db90:	6039      	str	r1, [r7, #0]
    {
        typedText = t;
 800db92:	687b      	ldr	r3, [r7, #4]
 800db94:	3334      	adds	r3, #52	@ 0x34
 800db96:	6839      	ldr	r1, [r7, #0]
 800db98:	4618      	mov	r0, r3
 800db9a:	f7ff ffe5 	bl	800db68 <_ZN8touchgfx9TypedTextaSERKS0_>
        updateTextPosition();
 800db9e:	6878      	ldr	r0, [r7, #4]
 800dba0:	f000 f820 	bl	800dbe4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    }
 800dba4:	bf00      	nop
 800dba6:	3708      	adds	r7, #8
 800dba8:	46bd      	mov	sp, r7
 800dbaa:	bd80      	pop	{r7, pc}

0800dbac <_ZN8touchgfx15ButtonWithLabel13setLabelColorENS_9colortypeE>:
     *
     * @note If the button is currently in the normal, released state, the button should be forced
     *       to redraw itself. This is done by calling invalidate() on the ButtonWithLabel.
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void setLabelColor(colortype col)
 800dbac:	b480      	push	{r7}
 800dbae:	b083      	sub	sp, #12
 800dbb0:	af00      	add	r7, sp, #0
 800dbb2:	6078      	str	r0, [r7, #4]
 800dbb4:	6039      	str	r1, [r7, #0]
    {
        color = col;
 800dbb6:	687b      	ldr	r3, [r7, #4]
 800dbb8:	683a      	ldr	r2, [r7, #0]
 800dbba:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 800dbbc:	bf00      	nop
 800dbbe:	370c      	adds	r7, #12
 800dbc0:	46bd      	mov	sp, r7
 800dbc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dbc6:	4770      	bx	lr

0800dbc8 <_ZN8touchgfx15ButtonWithLabel20setLabelColorPressedENS_9colortypeE>:
     *
     * @note If the button is currently in the pressed state, the button should be forced to
     *       redraw itself. This is done by calling invalidate() on the ButtonWithLabel.
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void setLabelColorPressed(colortype col)
 800dbc8:	b480      	push	{r7}
 800dbca:	b083      	sub	sp, #12
 800dbcc:	af00      	add	r7, sp, #0
 800dbce:	6078      	str	r0, [r7, #4]
 800dbd0:	6039      	str	r1, [r7, #0]
    {
        colorPressed = col;
 800dbd2:	687b      	ldr	r3, [r7, #4]
 800dbd4:	683a      	ldr	r2, [r7, #0]
 800dbd6:	641a      	str	r2, [r3, #64]	@ 0x40
    }
 800dbd8:	bf00      	nop
 800dbda:	370c      	adds	r7, #12
 800dbdc:	46bd      	mov	sp, r7
 800dbde:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dbe2:	4770      	bx	lr

0800dbe4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 800dbe4:	b590      	push	{r4, r7, lr}
 800dbe6:	b08b      	sub	sp, #44	@ 0x2c
 800dbe8:	af00      	add	r7, sp, #0
 800dbea:	6078      	str	r0, [r7, #4]
    {
        if (typedText.hasValidId())
 800dbec:	687b      	ldr	r3, [r7, #4]
 800dbee:	3334      	adds	r3, #52	@ 0x34
 800dbf0:	61fb      	str	r3, [r7, #28]
     *
     * @return Is the id valid.
     */
    FORCE_INLINE_FUNCTION bool hasValidId() const
    {
        return typedTextId < numberOfTypedTexts;
 800dbf2:	69fb      	ldr	r3, [r7, #28]
 800dbf4:	889a      	ldrh	r2, [r3, #4]
 800dbf6:	4b46      	ldr	r3, [pc, #280]	@ (800dd10 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x12c>)
 800dbf8:	881b      	ldrh	r3, [r3, #0]
 800dbfa:	429a      	cmp	r2, r3
 800dbfc:	bf34      	ite	cc
 800dbfe:	2301      	movcc	r3, #1
 800dc00:	2300      	movcs	r3, #0
 800dc02:	b2db      	uxtb	r3, r3
 800dc04:	2b00      	cmp	r3, #0
 800dc06:	d07a      	beq.n	800dcfe <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x11a>
        {
            const Font* f = typedText.getFont();
 800dc08:	687b      	ldr	r3, [r7, #4]
 800dc0a:	3334      	adds	r3, #52	@ 0x34
 800dc0c:	613b      	str	r3, [r7, #16]
     *
     * @return The font.
     */
    FORCE_INLINE_FUNCTION const Font* getFont() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800dc0e:	4b41      	ldr	r3, [pc, #260]	@ (800dd14 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x130>)
 800dc10:	681b      	ldr	r3, [r3, #0]
 800dc12:	2b00      	cmp	r3, #0
 800dc14:	d105      	bne.n	800dc22 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x3e>
 800dc16:	4b40      	ldr	r3, [pc, #256]	@ (800dd18 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x134>)
 800dc18:	4a40      	ldr	r2, [pc, #256]	@ (800dd1c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x138>)
 800dc1a:	216c      	movs	r1, #108	@ 0x6c
 800dc1c:	4840      	ldr	r0, [pc, #256]	@ (800dd20 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x13c>)
 800dc1e:	f017 fe05 	bl	802582c <__assert_func>
 800dc22:	693b      	ldr	r3, [r7, #16]
 800dc24:	60fb      	str	r3, [r7, #12]
        return typedTextId < numberOfTypedTexts;
 800dc26:	68fb      	ldr	r3, [r7, #12]
 800dc28:	889a      	ldrh	r2, [r3, #4]
 800dc2a:	4b39      	ldr	r3, [pc, #228]	@ (800dd10 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x12c>)
 800dc2c:	881b      	ldrh	r3, [r3, #0]
 800dc2e:	429a      	cmp	r2, r3
 800dc30:	bf34      	ite	cc
 800dc32:	2301      	movcc	r3, #1
 800dc34:	2300      	movcs	r3, #0
 800dc36:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800dc38:	2b00      	cmp	r3, #0
 800dc3a:	d105      	bne.n	800dc48 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x64>
 800dc3c:	4b39      	ldr	r3, [pc, #228]	@ (800dd24 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x140>)
 800dc3e:	4a37      	ldr	r2, [pc, #220]	@ (800dd1c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x138>)
 800dc40:	216d      	movs	r1, #109	@ 0x6d
 800dc42:	4837      	ldr	r0, [pc, #220]	@ (800dd20 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x13c>)
 800dc44:	f017 fdf2 	bl	802582c <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 800dc48:	4b37      	ldr	r3, [pc, #220]	@ (800dd28 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x144>)
 800dc4a:	681a      	ldr	r2, [r3, #0]
 800dc4c:	4b31      	ldr	r3, [pc, #196]	@ (800dd14 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x130>)
 800dc4e:	6819      	ldr	r1, [r3, #0]
 800dc50:	693b      	ldr	r3, [r7, #16]
 800dc52:	889b      	ldrh	r3, [r3, #4]
 800dc54:	005b      	lsls	r3, r3, #1
 800dc56:	440b      	add	r3, r1
 800dc58:	781b      	ldrb	r3, [r3, #0]
 800dc5a:	009b      	lsls	r3, r3, #2
 800dc5c:	4413      	add	r3, r2
 800dc5e:	681b      	ldr	r3, [r3, #0]
 800dc60:	627b      	str	r3, [r7, #36]	@ 0x24
            const Unicode::UnicodeChar* s = typedText.getText();
 800dc62:	687b      	ldr	r3, [r7, #4]
 800dc64:	3334      	adds	r3, #52	@ 0x34
 800dc66:	61bb      	str	r3, [r7, #24]
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800dc68:	4b2a      	ldr	r3, [pc, #168]	@ (800dd14 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x130>)
 800dc6a:	681b      	ldr	r3, [r3, #0]
 800dc6c:	2b00      	cmp	r3, #0
 800dc6e:	d105      	bne.n	800dc7c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x98>
 800dc70:	4b29      	ldr	r3, [pc, #164]	@ (800dd18 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x134>)
 800dc72:	4a2e      	ldr	r2, [pc, #184]	@ (800dd2c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x148>)
 800dc74:	2160      	movs	r1, #96	@ 0x60
 800dc76:	482a      	ldr	r0, [pc, #168]	@ (800dd20 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x13c>)
 800dc78:	f017 fdd8 	bl	802582c <__assert_func>
 800dc7c:	69bb      	ldr	r3, [r7, #24]
 800dc7e:	617b      	str	r3, [r7, #20]
        return typedTextId < numberOfTypedTexts;
 800dc80:	697b      	ldr	r3, [r7, #20]
 800dc82:	889a      	ldrh	r2, [r3, #4]
 800dc84:	4b22      	ldr	r3, [pc, #136]	@ (800dd10 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x12c>)
 800dc86:	881b      	ldrh	r3, [r3, #0]
 800dc88:	429a      	cmp	r2, r3
 800dc8a:	bf34      	ite	cc
 800dc8c:	2301      	movcc	r3, #1
 800dc8e:	2300      	movcs	r3, #0
 800dc90:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800dc92:	2b00      	cmp	r3, #0
 800dc94:	d105      	bne.n	800dca2 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0xbe>
 800dc96:	4b23      	ldr	r3, [pc, #140]	@ (800dd24 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x140>)
 800dc98:	4a24      	ldr	r2, [pc, #144]	@ (800dd2c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x148>)
 800dc9a:	2161      	movs	r1, #97	@ 0x61
 800dc9c:	4820      	ldr	r0, [pc, #128]	@ (800dd20 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x13c>)
 800dc9e:	f017 fdc5 	bl	802582c <__assert_func>
        return texts->getText(typedTextId);
 800dca2:	4b23      	ldr	r3, [pc, #140]	@ (800dd30 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x14c>)
 800dca4:	681a      	ldr	r2, [r3, #0]
 800dca6:	69bb      	ldr	r3, [r7, #24]
 800dca8:	889b      	ldrh	r3, [r3, #4]
 800dcaa:	4619      	mov	r1, r3
 800dcac:	4610      	mov	r0, r2
 800dcae:	f001 f905 	bl	800eebc <_ZNK8touchgfx5Texts7getTextEt>
 800dcb2:	4603      	mov	r3, r0
 800dcb4:	bf00      	nop
 800dcb6:	623b      	str	r3, [r7, #32]
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 800dcb8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800dcba:	681b      	ldr	r3, [r3, #0]
 800dcbc:	3338      	adds	r3, #56	@ 0x38
 800dcbe:	681b      	ldr	r3, [r3, #0]
 800dcc0:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 800dcc2:	4798      	blx	r3
 800dcc4:	4603      	mov	r3, r0
 800dcc6:	461c      	mov	r4, r3
 800dcc8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800dcca:	681b      	ldr	r3, [r3, #0]
 800dccc:	3348      	adds	r3, #72	@ 0x48
 800dcce:	681b      	ldr	r3, [r3, #0]
 800dcd0:	6a39      	ldr	r1, [r7, #32]
 800dcd2:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 800dcd4:	4798      	blx	r3
 800dcd6:	4603      	mov	r3, r0
 800dcd8:	fb14 f303 	smulbb	r3, r4, r3
 800dcdc:	b29c      	uxth	r4, r3
 800dcde:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800dce0:	681b      	ldr	r3, [r3, #0]
 800dce2:	3324      	adds	r3, #36	@ 0x24
 800dce4:	681b      	ldr	r3, [r3, #0]
 800dce6:	6a39      	ldr	r1, [r7, #32]
 800dce8:	6a78      	ldr	r0, [r7, #36]	@ 0x24
 800dcea:	4798      	blx	r3
 800dcec:	4603      	mov	r3, r0
 800dcee:	b29b      	uxth	r3, r3
 800dcf0:	4423      	add	r3, r4
 800dcf2:	b29b      	uxth	r3, r3
 800dcf4:	b21a      	sxth	r2, r3
 800dcf6:	687b      	ldr	r3, [r7, #4]
 800dcf8:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 800dcfc:	e003      	b.n	800dd06 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x122>
            textHeightIncludingSpacing = 0;
 800dcfe:	687b      	ldr	r3, [r7, #4]
 800dd00:	2200      	movs	r2, #0
 800dd02:	f8a3 2046 	strh.w	r2, [r3, #70]	@ 0x46
    }
 800dd06:	bf00      	nop
 800dd08:	372c      	adds	r7, #44	@ 0x2c
 800dd0a:	46bd      	mov	sp, r7
 800dd0c:	bd90      	pop	{r4, r7, pc}
 800dd0e:	bf00      	nop
 800dd10:	24001a84 	.word	0x24001a84
 800dd14:	24001a80 	.word	0x24001a80
 800dd18:	08026e1c 	.word	0x08026e1c
 800dd1c:	08026e60 	.word	0x08026e60
 800dd20:	08026e9c 	.word	0x08026e9c
 800dd24:	08026ee0 	.word	0x08026ee0
 800dd28:	24001a88 	.word	0x24001a88
 800dd2c:	08026f20 	.word	0x08026f20
 800dd30:	24001a8c 	.word	0x24001a8c

0800dd34 <_ZN8touchgfx9ContainerD1Ev>:
class Container : public Drawable
 800dd34:	b580      	push	{r7, lr}
 800dd36:	b082      	sub	sp, #8
 800dd38:	af00      	add	r7, sp, #0
 800dd3a:	6078      	str	r0, [r7, #4]
 800dd3c:	4a05      	ldr	r2, [pc, #20]	@ (800dd54 <_ZN8touchgfx9ContainerD1Ev+0x20>)
 800dd3e:	687b      	ldr	r3, [r7, #4]
 800dd40:	601a      	str	r2, [r3, #0]
 800dd42:	687b      	ldr	r3, [r7, #4]
 800dd44:	4618      	mov	r0, r3
 800dd46:	f7ff fbfd 	bl	800d544 <_ZN8touchgfx8DrawableD1Ev>
 800dd4a:	687b      	ldr	r3, [r7, #4]
 800dd4c:	4618      	mov	r0, r3
 800dd4e:	3708      	adds	r7, #8
 800dd50:	46bd      	mov	sp, r7
 800dd52:	bd80      	pop	{r7, pc}
 800dd54:	080281ec 	.word	0x080281ec

0800dd58 <_ZN8touchgfx9ContainerD0Ev>:
 800dd58:	b580      	push	{r7, lr}
 800dd5a:	b082      	sub	sp, #8
 800dd5c:	af00      	add	r7, sp, #0
 800dd5e:	6078      	str	r0, [r7, #4]
 800dd60:	6878      	ldr	r0, [r7, #4]
 800dd62:	f7ff ffe7 	bl	800dd34 <_ZN8touchgfx9ContainerD1Ev>
 800dd66:	212c      	movs	r1, #44	@ 0x2c
 800dd68:	6878      	ldr	r0, [r7, #4]
 800dd6a:	f017 fd30 	bl	80257ce <_ZdlPvj>
 800dd6e:	687b      	ldr	r3, [r7, #4]
 800dd70:	4618      	mov	r0, r3
 800dd72:	3708      	adds	r7, #8
 800dd74:	46bd      	mov	sp, r7
 800dd76:	bd80      	pop	{r7, pc}

0800dd78 <_ZN8touchgfx23AbstractButtonContainerC1Ev>:
 * @see ClickButtonTrigger, RepeatButtonTrigger, ToggleButtonTrigger, TouchButtonTrigger
 */
class AbstractButtonContainer : public Container
{
public:
    AbstractButtonContainer()
 800dd78:	b580      	push	{r7, lr}
 800dd7a:	b082      	sub	sp, #8
 800dd7c:	af00      	add	r7, sp, #0
 800dd7e:	6078      	str	r0, [r7, #4]
        : pressed(false), alpha(255), action(0)
 800dd80:	687b      	ldr	r3, [r7, #4]
 800dd82:	4618      	mov	r0, r3
 800dd84:	f7ff fd84 	bl	800d890 <_ZN8touchgfx9ContainerC1Ev>
 800dd88:	4a0b      	ldr	r2, [pc, #44]	@ (800ddb8 <_ZN8touchgfx23AbstractButtonContainerC1Ev+0x40>)
 800dd8a:	687b      	ldr	r3, [r7, #4]
 800dd8c:	601a      	str	r2, [r3, #0]
 800dd8e:	687b      	ldr	r3, [r7, #4]
 800dd90:	2200      	movs	r2, #0
 800dd92:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
 800dd96:	687b      	ldr	r3, [r7, #4]
 800dd98:	22ff      	movs	r2, #255	@ 0xff
 800dd9a:	f883 202d 	strb.w	r2, [r3, #45]	@ 0x2d
 800dd9e:	687b      	ldr	r3, [r7, #4]
 800dda0:	2200      	movs	r2, #0
 800dda2:	631a      	str	r2, [r3, #48]	@ 0x30
    {
        setTouchable(true);
 800dda4:	687b      	ldr	r3, [r7, #4]
 800dda6:	2101      	movs	r1, #1
 800dda8:	4618      	mov	r0, r3
 800ddaa:	f7ff fcd7 	bl	800d75c <_ZN8touchgfx8Drawable12setTouchableEb>
    }
 800ddae:	687b      	ldr	r3, [r7, #4]
 800ddb0:	4618      	mov	r0, r3
 800ddb2:	3708      	adds	r7, #8
 800ddb4:	46bd      	mov	sp, r7
 800ddb6:	bd80      	pop	{r7, pc}
 800ddb8:	080278e4 	.word	0x080278e4

0800ddbc <_ZN8touchgfx23AbstractButtonContainer10setPressedEb>:
     *
     * @param  isPressed True if is pressed, false if not.
     *
     * @see getPressed, handlePressedUpdated
     */
    void setPressed(bool isPressed)
 800ddbc:	b580      	push	{r7, lr}
 800ddbe:	b082      	sub	sp, #8
 800ddc0:	af00      	add	r7, sp, #0
 800ddc2:	6078      	str	r0, [r7, #4]
 800ddc4:	460b      	mov	r3, r1
 800ddc6:	70fb      	strb	r3, [r7, #3]
    {
        pressed = isPressed;
 800ddc8:	687b      	ldr	r3, [r7, #4]
 800ddca:	78fa      	ldrb	r2, [r7, #3]
 800ddcc:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
        handlePressedUpdated();
 800ddd0:	687b      	ldr	r3, [r7, #4]
 800ddd2:	681b      	ldr	r3, [r3, #0]
 800ddd4:	338c      	adds	r3, #140	@ 0x8c
 800ddd6:	681b      	ldr	r3, [r3, #0]
 800ddd8:	6878      	ldr	r0, [r7, #4]
 800ddda:	4798      	blx	r3
    }
 800dddc:	bf00      	nop
 800ddde:	3708      	adds	r7, #8
 800dde0:	46bd      	mov	sp, r7
 800dde2:	bd80      	pop	{r7, pc}

0800dde4 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>:
     *
     * @return True if it succeeds, false if it fails.
     *
     * @see setPressed
     */
    bool getPressed() const
 800dde4:	b480      	push	{r7}
 800dde6:	b083      	sub	sp, #12
 800dde8:	af00      	add	r7, sp, #0
 800ddea:	6078      	str	r0, [r7, #4]
    {
        return pressed;
 800ddec:	687b      	ldr	r3, [r7, #4]
 800ddee:	f893 302c 	ldrb.w	r3, [r3, #44]	@ 0x2c
    }
 800ddf2:	4618      	mov	r0, r3
 800ddf4:	370c      	adds	r7, #12
 800ddf6:	46bd      	mov	sp, r7
 800ddf8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ddfc:	4770      	bx	lr

0800ddfe <_ZNK8touchgfx23AbstractButtonContainer8getAlphaEv>:
        alpha = newAlpha;
        handleAlphaUpdated();
    }

    /** @copydoc Image::getAlpha() */
    uint8_t getAlpha() const
 800ddfe:	b480      	push	{r7}
 800de00:	b083      	sub	sp, #12
 800de02:	af00      	add	r7, sp, #0
 800de04:	6078      	str	r0, [r7, #4]
    {
        return alpha;
 800de06:	687b      	ldr	r3, [r7, #4]
 800de08:	f893 302d 	ldrb.w	r3, [r3, #45]	@ 0x2d
    }
 800de0c:	4618      	mov	r0, r3
 800de0e:	370c      	adds	r7, #12
 800de10:	46bd      	mov	sp, r7
 800de12:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de16:	4770      	bx	lr

0800de18 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 800de18:	b580      	push	{r7, lr}
 800de1a:	b082      	sub	sp, #8
 800de1c:	af00      	add	r7, sp, #0
 800de1e:	6078      	str	r0, [r7, #4]
    {
        if (action && action->isValid())
 800de20:	687b      	ldr	r3, [r7, #4]
 800de22:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800de24:	2b00      	cmp	r3, #0
 800de26:	d00d      	beq.n	800de44 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2c>
 800de28:	687b      	ldr	r3, [r7, #4]
 800de2a:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800de2c:	687b      	ldr	r3, [r7, #4]
 800de2e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800de30:	681b      	ldr	r3, [r3, #0]
 800de32:	330c      	adds	r3, #12
 800de34:	681b      	ldr	r3, [r3, #0]
 800de36:	4610      	mov	r0, r2
 800de38:	4798      	blx	r3
 800de3a:	4603      	mov	r3, r0
 800de3c:	2b00      	cmp	r3, #0
 800de3e:	d001      	beq.n	800de44 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2c>
 800de40:	2301      	movs	r3, #1
 800de42:	e000      	b.n	800de46 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2e>
 800de44:	2300      	movs	r3, #0
 800de46:	2b00      	cmp	r3, #0
 800de48:	d009      	beq.n	800de5e <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x46>
        {
            action->execute(*this);
 800de4a:	687b      	ldr	r3, [r7, #4]
 800de4c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800de4e:	687b      	ldr	r3, [r7, #4]
 800de50:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800de52:	681b      	ldr	r3, [r3, #0]
 800de54:	3308      	adds	r3, #8
 800de56:	681b      	ldr	r3, [r3, #0]
 800de58:	6879      	ldr	r1, [r7, #4]
 800de5a:	4610      	mov	r0, r2
 800de5c:	4798      	blx	r3
        }
    }
 800de5e:	bf00      	nop
 800de60:	3708      	adds	r7, #8
 800de62:	46bd      	mov	sp, r7
 800de64:	bd80      	pop	{r7, pc}

0800de66 <_ZN8touchgfx23AbstractButtonContainer20handlePressedUpdatedEv>:
    uint8_t alpha; ///< The current alpha value. 255 denotes solid, 0 denotes completely invisible.

    GenericCallback<const AbstractButtonContainer&>* action; ///< The action to be executed

    /** Handles what should happen when the pressed state is updated. */
    virtual void handlePressedUpdated()
 800de66:	b480      	push	{r7}
 800de68:	b083      	sub	sp, #12
 800de6a:	af00      	add	r7, sp, #0
 800de6c:	6078      	str	r0, [r7, #4]
    {
    }
 800de6e:	bf00      	nop
 800de70:	370c      	adds	r7, #12
 800de72:	46bd      	mov	sp, r7
 800de74:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de78:	4770      	bx	lr

0800de7a <_ZN8touchgfx23AbstractButtonContainer18handleAlphaUpdatedEv>:

    /** Handles what should happen when the alpha is updated. */
    virtual void handleAlphaUpdated()
 800de7a:	b480      	push	{r7}
 800de7c:	b083      	sub	sp, #12
 800de7e:	af00      	add	r7, sp, #0
 800de80:	6078      	str	r0, [r7, #4]
    {
    }
 800de82:	bf00      	nop
 800de84:	370c      	adds	r7, #12
 800de86:	46bd      	mov	sp, r7
 800de88:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de8c:	4770      	bx	lr
	...

0800de90 <_ZN8touchgfx5ImageD1Ev>:
class Image : public Widget
 800de90:	b580      	push	{r7, lr}
 800de92:	b082      	sub	sp, #8
 800de94:	af00      	add	r7, sp, #0
 800de96:	6078      	str	r0, [r7, #4]
 800de98:	4a05      	ldr	r2, [pc, #20]	@ (800deb0 <_ZN8touchgfx5ImageD1Ev+0x20>)
 800de9a:	687b      	ldr	r3, [r7, #4]
 800de9c:	601a      	str	r2, [r3, #0]
 800de9e:	687b      	ldr	r3, [r7, #4]
 800dea0:	4618      	mov	r0, r3
 800dea2:	f7ff fd91 	bl	800d9c8 <_ZN8touchgfx6WidgetD1Ev>
 800dea6:	687b      	ldr	r3, [r7, #4]
 800dea8:	4618      	mov	r0, r3
 800deaa:	3708      	adds	r7, #8
 800deac:	46bd      	mov	sp, r7
 800deae:	bd80      	pop	{r7, pc}
 800deb0:	08028604 	.word	0x08028604

0800deb4 <_ZN8touchgfx5ImageD0Ev>:
 800deb4:	b580      	push	{r7, lr}
 800deb6:	b082      	sub	sp, #8
 800deb8:	af00      	add	r7, sp, #0
 800deba:	6078      	str	r0, [r7, #4]
 800debc:	6878      	ldr	r0, [r7, #4]
 800debe:	f7ff ffe7 	bl	800de90 <_ZN8touchgfx5ImageD1Ev>
 800dec2:	212c      	movs	r1, #44	@ 0x2c
 800dec4:	6878      	ldr	r0, [r7, #4]
 800dec6:	f017 fc82 	bl	80257ce <_ZdlPvj>
 800deca:	687b      	ldr	r3, [r7, #4]
 800decc:	4618      	mov	r0, r3
 800dece:	3708      	adds	r7, #8
 800ded0:	46bd      	mov	sp, r7
 800ded2:	bd80      	pop	{r7, pc}

0800ded4 <_ZN8touchgfx13AnimatedImageC1ERKh>:
     *                        Higher value results in a slower animation.
     *
     * @note The bitmaps to display must be configured through set setBitmaps function before this
     *       widget displays anything.
     */
    AnimatedImage(const uint8_t& updateInterval = 1)
 800ded4:	b590      	push	{r4, r7, lr}
 800ded6:	b085      	sub	sp, #20
 800ded8:	af00      	add	r7, sp, #0
 800deda:	6078      	str	r0, [r7, #4]
 800dedc:	6039      	str	r1, [r7, #0]
          endId(BITMAP_INVALID),
          updateTicksInterval(updateInterval),
          ticksSinceUpdate(0),
          reverse(false),
          loopAnimation(false),
          running(false)
 800dede:	687c      	ldr	r4, [r7, #4]
 800dee0:	f107 030c 	add.w	r3, r7, #12
 800dee4:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800dee8:	4618      	mov	r0, r3
 800deea:	f7ff fadf 	bl	800d4ac <_ZN8touchgfx6BitmapC1Et>
 800deee:	f107 030c 	add.w	r3, r7, #12
 800def2:	4619      	mov	r1, r3
 800def4:	4620      	mov	r0, r4
 800def6:	f7ff fdcb 	bl	800da90 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800defa:	4a14      	ldr	r2, [pc, #80]	@ (800df4c <_ZN8touchgfx13AnimatedImageC1ERKh+0x78>)
 800defc:	687b      	ldr	r3, [r7, #4]
 800defe:	601a      	str	r2, [r3, #0]
        : animationDoneAction(0),
 800df00:	687b      	ldr	r3, [r7, #4]
 800df02:	2200      	movs	r2, #0
 800df04:	62da      	str	r2, [r3, #44]	@ 0x2c
          startId(BITMAP_INVALID),
 800df06:	687b      	ldr	r3, [r7, #4]
 800df08:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800df0c:	861a      	strh	r2, [r3, #48]	@ 0x30
          endId(BITMAP_INVALID),
 800df0e:	687b      	ldr	r3, [r7, #4]
 800df10:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800df14:	865a      	strh	r2, [r3, #50]	@ 0x32
          updateTicksInterval(updateInterval),
 800df16:	683b      	ldr	r3, [r7, #0]
 800df18:	781a      	ldrb	r2, [r3, #0]
 800df1a:	687b      	ldr	r3, [r7, #4]
 800df1c:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
          ticksSinceUpdate(0),
 800df20:	687b      	ldr	r3, [r7, #4]
 800df22:	2200      	movs	r2, #0
 800df24:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
          reverse(false),
 800df28:	687b      	ldr	r3, [r7, #4]
 800df2a:	2200      	movs	r2, #0
 800df2c:	f883 2036 	strb.w	r2, [r3, #54]	@ 0x36
          loopAnimation(false),
 800df30:	687b      	ldr	r3, [r7, #4]
 800df32:	2200      	movs	r2, #0
 800df34:	f883 2037 	strb.w	r2, [r3, #55]	@ 0x37
          running(false)
 800df38:	687b      	ldr	r3, [r7, #4]
 800df3a:	2200      	movs	r2, #0
 800df3c:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
    {
    }
 800df40:	687b      	ldr	r3, [r7, #4]
 800df42:	4618      	mov	r0, r3
 800df44:	3714      	adds	r7, #20
 800df46:	46bd      	mov	sp, r7
 800df48:	bd90      	pop	{r4, r7, pc}
 800df4a:	bf00      	nop
 800df4c:	08028444 	.word	0x08028444

0800df50 <_ZN8touchgfx3BoxD1Ev>:
class Box : public Widget
 800df50:	b580      	push	{r7, lr}
 800df52:	b082      	sub	sp, #8
 800df54:	af00      	add	r7, sp, #0
 800df56:	6078      	str	r0, [r7, #4]
 800df58:	4a05      	ldr	r2, [pc, #20]	@ (800df70 <_ZN8touchgfx3BoxD1Ev+0x20>)
 800df5a:	687b      	ldr	r3, [r7, #4]
 800df5c:	601a      	str	r2, [r3, #0]
 800df5e:	687b      	ldr	r3, [r7, #4]
 800df60:	4618      	mov	r0, r3
 800df62:	f7ff fd31 	bl	800d9c8 <_ZN8touchgfx6WidgetD1Ev>
 800df66:	687b      	ldr	r3, [r7, #4]
 800df68:	4618      	mov	r0, r3
 800df6a:	3708      	adds	r7, #8
 800df6c:	46bd      	mov	sp, r7
 800df6e:	bd80      	pop	{r7, pc}
 800df70:	080284c0 	.word	0x080284c0

0800df74 <_ZN8touchgfx3BoxD0Ev>:
 800df74:	b580      	push	{r7, lr}
 800df76:	b082      	sub	sp, #8
 800df78:	af00      	add	r7, sp, #0
 800df7a:	6078      	str	r0, [r7, #4]
 800df7c:	6878      	ldr	r0, [r7, #4]
 800df7e:	f7ff ffe7 	bl	800df50 <_ZN8touchgfx3BoxD1Ev>
 800df82:	212c      	movs	r1, #44	@ 0x2c
 800df84:	6878      	ldr	r0, [r7, #4]
 800df86:	f017 fc22 	bl	80257ce <_ZdlPvj>
 800df8a:	687b      	ldr	r3, [r7, #4]
 800df8c:	4618      	mov	r0, r3
 800df8e:	3708      	adds	r7, #8
 800df90:	46bd      	mov	sp, r7
 800df92:	bd80      	pop	{r7, pc}

0800df94 <_ZN8touchgfx13BoxWithBorderC1Ev>:
 * BoxWithBorder will function just like a Box.
 */
class BoxWithBorder : public Box
{
public:
    BoxWithBorder()
 800df94:	b580      	push	{r7, lr}
 800df96:	b082      	sub	sp, #8
 800df98:	af00      	add	r7, sp, #0
 800df9a:	6078      	str	r0, [r7, #4]
        : Box(), borderColor(0), borderSize(0)
 800df9c:	687b      	ldr	r3, [r7, #4]
 800df9e:	4618      	mov	r0, r3
 800dfa0:	f7ff fd34 	bl	800da0c <_ZN8touchgfx3BoxC1Ev>
 800dfa4:	4a08      	ldr	r2, [pc, #32]	@ (800dfc8 <_ZN8touchgfx13BoxWithBorderC1Ev+0x34>)
 800dfa6:	687b      	ldr	r3, [r7, #4]
 800dfa8:	601a      	str	r2, [r3, #0]
 800dfaa:	687b      	ldr	r3, [r7, #4]
 800dfac:	332c      	adds	r3, #44	@ 0x2c
 800dfae:	2100      	movs	r1, #0
 800dfb0:	4618      	mov	r0, r3
 800dfb2:	f7ff fa55 	bl	800d460 <_ZN8touchgfx9colortypeC1Em>
 800dfb6:	687b      	ldr	r3, [r7, #4]
 800dfb8:	2200      	movs	r2, #0
 800dfba:	861a      	strh	r2, [r3, #48]	@ 0x30
    {
    }
 800dfbc:	687b      	ldr	r3, [r7, #4]
 800dfbe:	4618      	mov	r0, r3
 800dfc0:	3708      	adds	r7, #8
 800dfc2:	46bd      	mov	sp, r7
 800dfc4:	bd80      	pop	{r7, pc}
 800dfc6:	bf00      	nop
 800dfc8:	0802859c 	.word	0x0802859c

0800dfcc <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>:
     *
     * @param  colorBorder The color of the border.
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
 800dfcc:	b480      	push	{r7}
 800dfce:	b083      	sub	sp, #12
 800dfd0:	af00      	add	r7, sp, #0
 800dfd2:	6078      	str	r0, [r7, #4]
 800dfd4:	6039      	str	r1, [r7, #0]
    {
        borderColor = colorBorder;
 800dfd6:	687b      	ldr	r3, [r7, #4]
 800dfd8:	683a      	ldr	r2, [r7, #0]
 800dfda:	62da      	str	r2, [r3, #44]	@ 0x2c
    }
 800dfdc:	bf00      	nop
 800dfde:	370c      	adds	r7, #12
 800dfe0:	46bd      	mov	sp, r7
 800dfe2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dfe6:	4770      	bx	lr

0800dfe8 <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>:
     *
     * @param  size The width of the border.
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
 800dfe8:	b480      	push	{r7}
 800dfea:	b083      	sub	sp, #12
 800dfec:	af00      	add	r7, sp, #0
 800dfee:	6078      	str	r0, [r7, #4]
 800dff0:	460b      	mov	r3, r1
 800dff2:	807b      	strh	r3, [r7, #2]
    {
        borderSize = size;
 800dff4:	687b      	ldr	r3, [r7, #4]
 800dff6:	887a      	ldrh	r2, [r7, #2]
 800dff8:	861a      	strh	r2, [r3, #48]	@ 0x30
    }
 800dffa:	bf00      	nop
 800dffc:	370c      	adds	r7, #12
 800dffe:	46bd      	mov	sp, r7
 800e000:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e004:	4770      	bx	lr

0800e006 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800e006:	b580      	push	{r7, lr}
 800e008:	b084      	sub	sp, #16
 800e00a:	af00      	add	r7, sp, #0
 800e00c:	6078      	str	r0, [r7, #4]
 800e00e:	6039      	str	r1, [r7, #0]
    {
        bool wasPressed = getPressed();
 800e010:	687b      	ldr	r3, [r7, #4]
 800e012:	4618      	mov	r0, r3
 800e014:	f7ff fee6 	bl	800dde4 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>
 800e018:	4603      	mov	r3, r0
 800e01a:	73fb      	strb	r3, [r7, #15]
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 800e01c:	6838      	ldr	r0, [r7, #0]
 800e01e:	f7ff fa55 	bl	800d4cc <_ZNK8touchgfx10ClickEvent7getTypeEv>
 800e022:	4603      	mov	r3, r0
 800e024:	2b00      	cmp	r3, #0
 800e026:	bf0c      	ite	eq
 800e028:	2301      	moveq	r3, #1
 800e02a:	2300      	movne	r3, #0
 800e02c:	73bb      	strb	r3, [r7, #14]
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 800e02e:	7bbb      	ldrb	r3, [r7, #14]
 800e030:	2b00      	cmp	r3, #0
 800e032:	d005      	beq.n	800e040 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3a>
 800e034:	7bfb      	ldrb	r3, [r7, #15]
 800e036:	f083 0301 	eor.w	r3, r3, #1
 800e03a:	b2db      	uxtb	r3, r3
 800e03c:	2b00      	cmp	r3, #0
 800e03e:	d108      	bne.n	800e052 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x4c>
 800e040:	7bbb      	ldrb	r3, [r7, #14]
 800e042:	f083 0301 	eor.w	r3, r3, #1
 800e046:	b2db      	uxtb	r3, r3
 800e048:	2b00      	cmp	r3, #0
 800e04a:	d00f      	beq.n	800e06c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x66>
 800e04c:	7bfb      	ldrb	r3, [r7, #15]
 800e04e:	2b00      	cmp	r3, #0
 800e050:	d00c      	beq.n	800e06c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x66>
        {
            setPressed(newPressedValue);
 800e052:	687b      	ldr	r3, [r7, #4]
 800e054:	7bba      	ldrb	r2, [r7, #14]
 800e056:	4611      	mov	r1, r2
 800e058:	4618      	mov	r0, r3
 800e05a:	f7ff feaf 	bl	800ddbc <_ZN8touchgfx23AbstractButtonContainer10setPressedEb>
            invalidate();
 800e05e:	687a      	ldr	r2, [r7, #4]
 800e060:	687b      	ldr	r3, [r7, #4]
 800e062:	681b      	ldr	r3, [r3, #0]
 800e064:	3314      	adds	r3, #20
 800e066:	681b      	ldr	r3, [r3, #0]
 800e068:	4610      	mov	r0, r2
 800e06a:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 800e06c:	7bfb      	ldrb	r3, [r7, #15]
 800e06e:	2b00      	cmp	r3, #0
 800e070:	d007      	beq.n	800e082 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7c>
 800e072:	6838      	ldr	r0, [r7, #0]
 800e074:	f7ff fa2a 	bl	800d4cc <_ZNK8touchgfx10ClickEvent7getTypeEv>
 800e078:	4603      	mov	r3, r0
 800e07a:	2b01      	cmp	r3, #1
 800e07c:	d101      	bne.n	800e082 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7c>
 800e07e:	2301      	movs	r3, #1
 800e080:	e000      	b.n	800e084 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7e>
 800e082:	2300      	movs	r3, #0
 800e084:	2b00      	cmp	r3, #0
 800e086:	d006      	beq.n	800e096 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x90>
        {
            executeAction();
 800e088:	687a      	ldr	r2, [r7, #4]
 800e08a:	687b      	ldr	r3, [r7, #4]
 800e08c:	681b      	ldr	r3, [r3, #0]
 800e08e:	3388      	adds	r3, #136	@ 0x88
 800e090:	681b      	ldr	r3, [r3, #0]
 800e092:	4610      	mov	r0, r2
 800e094:	4798      	blx	r3
        }
    }
 800e096:	bf00      	nop
 800e098:	3710      	adds	r7, #16
 800e09a:	46bd      	mov	sp, r7
 800e09c:	bd80      	pop	{r7, pc}
	...

0800e0a0 <_ZN8touchgfx23AbstractButtonContainerD1Ev>:
class AbstractButtonContainer : public Container
 800e0a0:	b580      	push	{r7, lr}
 800e0a2:	b082      	sub	sp, #8
 800e0a4:	af00      	add	r7, sp, #0
 800e0a6:	6078      	str	r0, [r7, #4]
 800e0a8:	4a05      	ldr	r2, [pc, #20]	@ (800e0c0 <_ZN8touchgfx23AbstractButtonContainerD1Ev+0x20>)
 800e0aa:	687b      	ldr	r3, [r7, #4]
 800e0ac:	601a      	str	r2, [r3, #0]
 800e0ae:	687b      	ldr	r3, [r7, #4]
 800e0b0:	4618      	mov	r0, r3
 800e0b2:	f7ff fe3f 	bl	800dd34 <_ZN8touchgfx9ContainerD1Ev>
 800e0b6:	687b      	ldr	r3, [r7, #4]
 800e0b8:	4618      	mov	r0, r3
 800e0ba:	3708      	adds	r7, #8
 800e0bc:	46bd      	mov	sp, r7
 800e0be:	bd80      	pop	{r7, pc}
 800e0c0:	080278e4 	.word	0x080278e4

0800e0c4 <_ZN8touchgfx23AbstractButtonContainerD0Ev>:
 800e0c4:	b580      	push	{r7, lr}
 800e0c6:	b082      	sub	sp, #8
 800e0c8:	af00      	add	r7, sp, #0
 800e0ca:	6078      	str	r0, [r7, #4]
 800e0cc:	6878      	ldr	r0, [r7, #4]
 800e0ce:	f7ff ffe7 	bl	800e0a0 <_ZN8touchgfx23AbstractButtonContainerD1Ev>
 800e0d2:	2134      	movs	r1, #52	@ 0x34
 800e0d4:	6878      	ldr	r0, [r7, #4]
 800e0d6:	f017 fb7a 	bl	80257ce <_ZdlPvj>
 800e0da:	687b      	ldr	r3, [r7, #4]
 800e0dc:	4618      	mov	r0, r3
 800e0de:	3708      	adds	r7, #8
 800e0e0:	46bd      	mov	sp, r7
 800e0e2:	bd80      	pop	{r7, pc}

0800e0e4 <_ZN14screenViewBase6changeEv>:
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void change()
 800e0e4:	b480      	push	{r7}
 800e0e6:	b083      	sub	sp, #12
 800e0e8:	af00      	add	r7, sp, #0
 800e0ea:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in screen
    }
 800e0ec:	bf00      	nop
 800e0ee:	370c      	adds	r7, #12
 800e0f0:	46bd      	mov	sp, r7
 800e0f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e0f6:	4770      	bx	lr

0800e0f8 <_ZN8touchgfx4ViewI15screenPresenterED1Ev>:
class View : public Screen
 800e0f8:	b580      	push	{r7, lr}
 800e0fa:	b082      	sub	sp, #8
 800e0fc:	af00      	add	r7, sp, #0
 800e0fe:	6078      	str	r0, [r7, #4]
 800e100:	4a05      	ldr	r2, [pc, #20]	@ (800e118 <_ZN8touchgfx4ViewI15screenPresenterED1Ev+0x20>)
 800e102:	687b      	ldr	r3, [r7, #4]
 800e104:	601a      	str	r2, [r3, #0]
 800e106:	687b      	ldr	r3, [r7, #4]
 800e108:	4618      	mov	r0, r3
 800e10a:	f7ff fbe3 	bl	800d8d4 <_ZN8touchgfx6ScreenD1Ev>
 800e10e:	687b      	ldr	r3, [r7, #4]
 800e110:	4618      	mov	r0, r3
 800e112:	3708      	adds	r7, #8
 800e114:	46bd      	mov	sp, r7
 800e116:	bd80      	pop	{r7, pc}
 800e118:	08027814 	.word	0x08027814

0800e11c <_ZN8touchgfx4ViewI15screenPresenterED0Ev>:
 800e11c:	b580      	push	{r7, lr}
 800e11e:	b082      	sub	sp, #8
 800e120:	af00      	add	r7, sp, #0
 800e122:	6078      	str	r0, [r7, #4]
 800e124:	6878      	ldr	r0, [r7, #4]
 800e126:	f7ff ffe7 	bl	800e0f8 <_ZN8touchgfx4ViewI15screenPresenterED1Ev>
 800e12a:	2140      	movs	r1, #64	@ 0x40
 800e12c:	6878      	ldr	r0, [r7, #4]
 800e12e:	f017 fb4e 	bl	80257ce <_ZdlPvj>
 800e132:	687b      	ldr	r3, [r7, #4]
 800e134:	4618      	mov	r0, r3
 800e136:	3708      	adds	r7, #8
 800e138:	46bd      	mov	sp, r7
 800e13a:	bd80      	pop	{r7, pc}

0800e13c <_ZN14screenViewBaseC1Ev>:
#include <gui_generated/screen_screen/screenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

screenViewBase::screenViewBase() :
 800e13c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e140:	b09c      	sub	sp, #112	@ 0x70
 800e142:	af02      	add	r7, sp, #8
 800e144:	6078      	str	r0, [r7, #4]
    buttonCallback(this, &screenViewBase::buttonCallbackHandler)
 800e146:	687b      	ldr	r3, [r7, #4]
 800e148:	4618      	mov	r0, r3
 800e14a:	f000 fa81 	bl	800e650 <_ZN8touchgfx4ViewI15screenPresenterEC1Ev>
 800e14e:	4ae6      	ldr	r2, [pc, #920]	@ (800e4e8 <_ZN14screenViewBaseC1Ev+0x3ac>)
 800e150:	687b      	ldr	r3, [r7, #4]
 800e152:	601a      	str	r2, [r3, #0]
 800e154:	687b      	ldr	r3, [r7, #4]
 800e156:	3340      	adds	r3, #64	@ 0x40
 800e158:	4618      	mov	r0, r3
 800e15a:	f7ff fc57 	bl	800da0c <_ZN8touchgfx3BoxC1Ev>
 800e15e:	687b      	ldr	r3, [r7, #4]
 800e160:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800e164:	f107 030c 	add.w	r3, r7, #12
 800e168:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800e16c:	4618      	mov	r0, r3
 800e16e:	f7ff f99d 	bl	800d4ac <_ZN8touchgfx6BitmapC1Et>
 800e172:	f107 030c 	add.w	r3, r7, #12
 800e176:	4619      	mov	r1, r3
 800e178:	4620      	mov	r0, r4
 800e17a:	f7ff fc89 	bl	800da90 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800e17e:	687b      	ldr	r3, [r7, #4]
 800e180:	3398      	adds	r3, #152	@ 0x98
 800e182:	4618      	mov	r0, r3
 800e184:	f004 fe56 	bl	8012e34 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 800e188:	687b      	ldr	r3, [r7, #4]
 800e18a:	f103 04e0 	add.w	r4, r3, #224	@ 0xe0
 800e18e:	f107 0310 	add.w	r3, r7, #16
 800e192:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800e196:	4618      	mov	r0, r3
 800e198:	f7ff f988 	bl	800d4ac <_ZN8touchgfx6BitmapC1Et>
 800e19c:	f107 0310 	add.w	r3, r7, #16
 800e1a0:	4619      	mov	r1, r3
 800e1a2:	4620      	mov	r0, r4
 800e1a4:	f7ff fc74 	bl	800da90 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800e1a8:	687b      	ldr	r3, [r7, #4]
 800e1aa:	f503 7386 	add.w	r3, r3, #268	@ 0x10c
 800e1ae:	4618      	mov	r0, r3
 800e1b0:	f000 faba 	bl	800e728 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800e1b4:	687b      	ldr	r3, [r7, #4]
 800e1b6:	f503 73c2 	add.w	r3, r3, #388	@ 0x184
    AnimatedImage(const uint8_t& updateInterval = 1)
 800e1ba:	2201      	movs	r2, #1
 800e1bc:	74fa      	strb	r2, [r7, #19]
 800e1be:	f107 0213 	add.w	r2, r7, #19
 800e1c2:	4611      	mov	r1, r2
 800e1c4:	4618      	mov	r0, r3
 800e1c6:	f7ff fe85 	bl	800ded4 <_ZN8touchgfx13AnimatedImageC1ERKh>
 800e1ca:	687b      	ldr	r3, [r7, #4]
 800e1cc:	f503 70e0 	add.w	r0, r3, #448	@ 0x1c0
 800e1d0:	4bc6      	ldr	r3, [pc, #792]	@ (800e4ec <_ZN14screenViewBaseC1Ev+0x3b0>)
 800e1d2:	617b      	str	r3, [r7, #20]
 800e1d4:	2300      	movs	r3, #0
 800e1d6:	61bb      	str	r3, [r7, #24]
 800e1d8:	f107 0314 	add.w	r3, r7, #20
 800e1dc:	cb0c      	ldmia	r3, {r2, r3}
 800e1de:	6879      	ldr	r1, [r7, #4]
 800e1e0:	f000 faf2 	bl	800e7c8 <_ZN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 480, 480);
 800e1e4:	687b      	ldr	r3, [r7, #4]
 800e1e6:	f103 0040 	add.w	r0, r3, #64	@ 0x40
 800e1ea:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 800e1ee:	9300      	str	r3, [sp, #0]
 800e1f0:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 800e1f4:	2200      	movs	r2, #0
 800e1f6:	2100      	movs	r1, #0
 800e1f8:	f7ff f9e2 	bl	800d5c0 <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800e1fc:	687b      	ldr	r3, [r7, #4]
 800e1fe:	f103 0440 	add.w	r4, r3, #64	@ 0x40
 800e202:	2300      	movs	r3, #0
 800e204:	f887 3055 	strb.w	r3, [r7, #85]	@ 0x55
 800e208:	2300      	movs	r3, #0
 800e20a:	f887 3054 	strb.w	r3, [r7, #84]	@ 0x54
 800e20e:	2300      	movs	r3, #0
 800e210:	f887 3053 	strb.w	r3, [r7, #83]	@ 0x53
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static colortype getColorFromRGB(uint8_t red, uint8_t green, uint8_t blue)
    {
        return 0xFF000000 | (red << 16) | (green << 8) | (blue);
 800e214:	f897 3055 	ldrb.w	r3, [r7, #85]	@ 0x55
 800e218:	041a      	lsls	r2, r3, #16
 800e21a:	f897 3054 	ldrb.w	r3, [r7, #84]	@ 0x54
 800e21e:	021b      	lsls	r3, r3, #8
 800e220:	431a      	orrs	r2, r3
 800e222:	f897 3053 	ldrb.w	r3, [r7, #83]	@ 0x53
 800e226:	4313      	orrs	r3, r2
 800e228:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800e22c:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 800e230:	4611      	mov	r1, r2
 800e232:	4618      	mov	r0, r3
 800e234:	f7ff f914 	bl	800d460 <_ZN8touchgfx9colortypeC1Em>
 800e238:	6cfb      	ldr	r3, [r7, #76]	@ 0x4c
 800e23a:	4619      	mov	r1, r3
 800e23c:	4620      	mov	r0, r4
 800e23e:	f7ff fc09 	bl	800da54 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800e242:	687a      	ldr	r2, [r7, #4]
 800e244:	687b      	ldr	r3, [r7, #4]
 800e246:	3340      	adds	r3, #64	@ 0x40
 800e248:	4619      	mov	r1, r3
 800e24a:	4610      	mov	r0, r2
 800e24c:	f7ff fb9a 	bl	800d984 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    background.setXY(0, 0);
 800e250:	687b      	ldr	r3, [r7, #4]
 800e252:	336c      	adds	r3, #108	@ 0x6c
 800e254:	2200      	movs	r2, #0
 800e256:	2100      	movs	r1, #0
 800e258:	4618      	mov	r0, r3
 800e25a:	f7ff f9f0 	bl	800d63e <_ZN8touchgfx8Drawable5setXYEss>
    background.setBitmap(touchgfx::Bitmap(BITMAP_GLASS_THEME_IMAGES_BACKGROUNDS_480X480_GRADIENT_SPRING_ID));
 800e25e:	687b      	ldr	r3, [r7, #4]
 800e260:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800e264:	f107 031c 	add.w	r3, r7, #28
 800e268:	2101      	movs	r1, #1
 800e26a:	4618      	mov	r0, r3
 800e26c:	f7ff f91e 	bl	800d4ac <_ZN8touchgfx6BitmapC1Et>
 800e270:	f107 031c 	add.w	r3, r7, #28
 800e274:	4619      	mov	r1, r3
 800e276:	4620      	mov	r0, r4
 800e278:	f004 fcb3 	bl	8012be2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    add(background);
 800e27c:	687a      	ldr	r2, [r7, #4]
 800e27e:	687b      	ldr	r3, [r7, #4]
 800e280:	336c      	adds	r3, #108	@ 0x6c
 800e282:	4619      	mov	r1, r3
 800e284:	4610      	mov	r0, r2
 800e286:	f7ff fb7d 	bl	800d984 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    btn.setXY(22, 367);
 800e28a:	687b      	ldr	r3, [r7, #4]
 800e28c:	3398      	adds	r3, #152	@ 0x98
 800e28e:	f240 126f 	movw	r2, #367	@ 0x16f
 800e292:	2116      	movs	r1, #22
 800e294:	4618      	mov	r0, r3
 800e296:	f7ff f9d2 	bl	800d63e <_ZN8touchgfx8Drawable5setXYEss>
    btn.setBitmaps(touchgfx::Bitmap(BITMAP_GLASS_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_ACTION_ID), touchgfx::Bitmap(BITMAP_GLASS_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
 800e29a:	687b      	ldr	r3, [r7, #4]
 800e29c:	f103 0498 	add.w	r4, r3, #152	@ 0x98
 800e2a0:	f107 0320 	add.w	r3, r7, #32
 800e2a4:	2102      	movs	r1, #2
 800e2a6:	4618      	mov	r0, r3
 800e2a8:	f7ff f900 	bl	800d4ac <_ZN8touchgfx6BitmapC1Et>
 800e2ac:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800e2b0:	2103      	movs	r1, #3
 800e2b2:	4618      	mov	r0, r3
 800e2b4:	f7ff f8fa 	bl	800d4ac <_ZN8touchgfx6BitmapC1Et>
 800e2b8:	f107 0224 	add.w	r2, r7, #36	@ 0x24
 800e2bc:	f107 0320 	add.w	r3, r7, #32
 800e2c0:	4619      	mov	r1, r3
 800e2c2:	4620      	mov	r0, r4
 800e2c4:	f004 fb4c 	bl	8012960 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    btn.setLabelText(touchgfx::TypedText(T___SINGLEUSE_Z16S));
 800e2c8:	687b      	ldr	r3, [r7, #4]
 800e2ca:	f103 0498 	add.w	r4, r3, #152	@ 0x98
 800e2ce:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800e2d2:	2100      	movs	r1, #0
 800e2d4:	4618      	mov	r0, r3
 800e2d6:	f7ff fc01 	bl	800dadc <_ZN8touchgfx9TypedTextC1Et>
 800e2da:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800e2de:	4619      	mov	r1, r3
 800e2e0:	4620      	mov	r0, r4
 800e2e2:	f7ff fc51 	bl	800db88 <_ZN8touchgfx15ButtonWithLabel12setLabelTextENS_9TypedTextE>
 800e2e6:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800e2ea:	4618      	mov	r0, r3
 800e2ec:	f7fe f914 	bl	800c518 <_ZN8touchgfx9TypedTextD1Ev>
    btn.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800e2f0:	687b      	ldr	r3, [r7, #4]
 800e2f2:	f103 0498 	add.w	r4, r3, #152	@ 0x98
 800e2f6:	23ff      	movs	r3, #255	@ 0xff
 800e2f8:	f887 3058 	strb.w	r3, [r7, #88]	@ 0x58
 800e2fc:	23ff      	movs	r3, #255	@ 0xff
 800e2fe:	f887 3057 	strb.w	r3, [r7, #87]	@ 0x57
 800e302:	23ff      	movs	r3, #255	@ 0xff
 800e304:	f887 3056 	strb.w	r3, [r7, #86]	@ 0x56
 800e308:	f897 3058 	ldrb.w	r3, [r7, #88]	@ 0x58
 800e30c:	041a      	lsls	r2, r3, #16
 800e30e:	f897 3057 	ldrb.w	r3, [r7, #87]	@ 0x57
 800e312:	021b      	lsls	r3, r3, #8
 800e314:	431a      	orrs	r2, r3
 800e316:	f897 3056 	ldrb.w	r3, [r7, #86]	@ 0x56
 800e31a:	4313      	orrs	r3, r2
 800e31c:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800e320:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 800e324:	4611      	mov	r1, r2
 800e326:	4618      	mov	r0, r3
 800e328:	f7ff f89a 	bl	800d460 <_ZN8touchgfx9colortypeC1Em>
 800e32c:	6cbb      	ldr	r3, [r7, #72]	@ 0x48
 800e32e:	4619      	mov	r1, r3
 800e330:	4620      	mov	r0, r4
 800e332:	f7ff fc3b 	bl	800dbac <_ZN8touchgfx15ButtonWithLabel13setLabelColorENS_9colortypeE>
    btn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800e336:	687b      	ldr	r3, [r7, #4]
 800e338:	f103 0498 	add.w	r4, r3, #152	@ 0x98
 800e33c:	23ff      	movs	r3, #255	@ 0xff
 800e33e:	f887 305b 	strb.w	r3, [r7, #91]	@ 0x5b
 800e342:	23ff      	movs	r3, #255	@ 0xff
 800e344:	f887 305a 	strb.w	r3, [r7, #90]	@ 0x5a
 800e348:	23ff      	movs	r3, #255	@ 0xff
 800e34a:	f887 3059 	strb.w	r3, [r7, #89]	@ 0x59
 800e34e:	f897 305b 	ldrb.w	r3, [r7, #91]	@ 0x5b
 800e352:	041a      	lsls	r2, r3, #16
 800e354:	f897 305a 	ldrb.w	r3, [r7, #90]	@ 0x5a
 800e358:	021b      	lsls	r3, r3, #8
 800e35a:	431a      	orrs	r2, r3
 800e35c:	f897 3059 	ldrb.w	r3, [r7, #89]	@ 0x59
 800e360:	4313      	orrs	r3, r2
 800e362:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800e366:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800e36a:	4611      	mov	r1, r2
 800e36c:	4618      	mov	r0, r3
 800e36e:	f7ff f877 	bl	800d460 <_ZN8touchgfx9colortypeC1Em>
 800e372:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800e374:	4619      	mov	r1, r3
 800e376:	4620      	mov	r0, r4
 800e378:	f7ff fc26 	bl	800dbc8 <_ZN8touchgfx15ButtonWithLabel20setLabelColorPressedENS_9colortypeE>
    btn.setAction(buttonCallback);
 800e37c:	687b      	ldr	r3, [r7, #4]
 800e37e:	f103 0298 	add.w	r2, r3, #152	@ 0x98
 800e382:	687b      	ldr	r3, [r7, #4]
 800e384:	f503 73e0 	add.w	r3, r3, #448	@ 0x1c0
 800e388:	4619      	mov	r1, r3
 800e38a:	4610      	mov	r0, r2
 800e38c:	f7ff fbbc 	bl	800db08 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(btn);
 800e390:	687a      	ldr	r2, [r7, #4]
 800e392:	687b      	ldr	r3, [r7, #4]
 800e394:	3398      	adds	r3, #152	@ 0x98
 800e396:	4619      	mov	r1, r3
 800e398:	4610      	mov	r0, r2
 800e39a:	f7ff faf3 	bl	800d984 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    img.setXY(146, 56);
 800e39e:	687b      	ldr	r3, [r7, #4]
 800e3a0:	33e0      	adds	r3, #224	@ 0xe0
 800e3a2:	2238      	movs	r2, #56	@ 0x38
 800e3a4:	2192      	movs	r1, #146	@ 0x92
 800e3a6:	4618      	mov	r0, r3
 800e3a8:	f7ff f949 	bl	800d63e <_ZN8touchgfx8Drawable5setXYEss>
    img.setBitmap(touchgfx::Bitmap(BITMAP_FRIENDSHIP_ID));
 800e3ac:	687b      	ldr	r3, [r7, #4]
 800e3ae:	f103 04e0 	add.w	r4, r3, #224	@ 0xe0
 800e3b2:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 800e3b6:	2100      	movs	r1, #0
 800e3b8:	4618      	mov	r0, r3
 800e3ba:	f7ff f877 	bl	800d4ac <_ZN8touchgfx6BitmapC1Et>
 800e3be:	f107 0330 	add.w	r3, r7, #48	@ 0x30
 800e3c2:	4619      	mov	r1, r3
 800e3c4:	4620      	mov	r0, r4
 800e3c6:	f004 fc0c 	bl	8012be2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    add(img);
 800e3ca:	687a      	ldr	r2, [r7, #4]
 800e3cc:	687b      	ldr	r3, [r7, #4]
 800e3ce:	33e0      	adds	r3, #224	@ 0xe0
 800e3d0:	4619      	mov	r1, r3
 800e3d2:	4610      	mov	r0, r2
 800e3d4:	f7ff fad6 	bl	800d984 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    flexButton1.setBoxWithBorderPosition(0, 0, 50, 50);
 800e3d8:	687b      	ldr	r3, [r7, #4]
 800e3da:	f503 7086 	add.w	r0, r3, #268	@ 0x10c
 800e3de:	2332      	movs	r3, #50	@ 0x32
 800e3e0:	9300      	str	r3, [sp, #0]
 800e3e2:	2332      	movs	r3, #50	@ 0x32
 800e3e4:	2200      	movs	r2, #0
 800e3e6:	2100      	movs	r1, #0
 800e3e8:	f000 fa0e 	bl	800e808 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    flexButton1.setBorderSize(5);
 800e3ec:	687b      	ldr	r3, [r7, #4]
 800e3ee:	f503 7386 	add.w	r3, r3, #268	@ 0x10c
 800e3f2:	2105      	movs	r1, #5
 800e3f4:	4618      	mov	r0, r3
 800e3f6:	f000 fa27 	bl	800e848 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800e3fa:	687b      	ldr	r3, [r7, #4]
 800e3fc:	f503 7486 	add.w	r4, r3, #268	@ 0x10c
 800e400:	23ff      	movs	r3, #255	@ 0xff
 800e402:	f887 305e 	strb.w	r3, [r7, #94]	@ 0x5e
 800e406:	23ff      	movs	r3, #255	@ 0xff
 800e408:	f887 305d 	strb.w	r3, [r7, #93]	@ 0x5d
 800e40c:	23ff      	movs	r3, #255	@ 0xff
 800e40e:	f887 305c 	strb.w	r3, [r7, #92]	@ 0x5c
 800e412:	f897 305e 	ldrb.w	r3, [r7, #94]	@ 0x5e
 800e416:	041a      	lsls	r2, r3, #16
 800e418:	f897 305d 	ldrb.w	r3, [r7, #93]	@ 0x5d
 800e41c:	021b      	lsls	r3, r3, #8
 800e41e:	431a      	orrs	r2, r3
 800e420:	f897 305c 	ldrb.w	r3, [r7, #92]	@ 0x5c
 800e424:	4313      	orrs	r3, r2
 800e426:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800e42a:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 800e42e:	4611      	mov	r1, r2
 800e430:	4618      	mov	r0, r3
 800e432:	f7ff f815 	bl	800d460 <_ZN8touchgfx9colortypeC1Em>
 800e436:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800e438:	461d      	mov	r5, r3
 800e43a:	2300      	movs	r3, #0
 800e43c:	f887 3061 	strb.w	r3, [r7, #97]	@ 0x61
 800e440:	2399      	movs	r3, #153	@ 0x99
 800e442:	f887 3060 	strb.w	r3, [r7, #96]	@ 0x60
 800e446:	23cc      	movs	r3, #204	@ 0xcc
 800e448:	f887 305f 	strb.w	r3, [r7, #95]	@ 0x5f
 800e44c:	f897 3061 	ldrb.w	r3, [r7, #97]	@ 0x61
 800e450:	041a      	lsls	r2, r3, #16
 800e452:	f897 3060 	ldrb.w	r3, [r7, #96]	@ 0x60
 800e456:	021b      	lsls	r3, r3, #8
 800e458:	431a      	orrs	r2, r3
 800e45a:	f897 305f 	ldrb.w	r3, [r7, #95]	@ 0x5f
 800e45e:	4313      	orrs	r3, r2
 800e460:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800e464:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800e468:	4611      	mov	r1, r2
 800e46a:	4618      	mov	r0, r3
 800e46c:	f7fe fff8 	bl	800d460 <_ZN8touchgfx9colortypeC1Em>
 800e470:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 800e472:	461e      	mov	r6, r3
 800e474:	2300      	movs	r3, #0
 800e476:	f887 3064 	strb.w	r3, [r7, #100]	@ 0x64
 800e47a:	2333      	movs	r3, #51	@ 0x33
 800e47c:	f887 3063 	strb.w	r3, [r7, #99]	@ 0x63
 800e480:	2366      	movs	r3, #102	@ 0x66
 800e482:	f887 3062 	strb.w	r3, [r7, #98]	@ 0x62
 800e486:	f897 3064 	ldrb.w	r3, [r7, #100]	@ 0x64
 800e48a:	041a      	lsls	r2, r3, #16
 800e48c:	f897 3063 	ldrb.w	r3, [r7, #99]	@ 0x63
 800e490:	021b      	lsls	r3, r3, #8
 800e492:	431a      	orrs	r2, r3
 800e494:	f897 3062 	ldrb.w	r3, [r7, #98]	@ 0x62
 800e498:	4313      	orrs	r3, r2
 800e49a:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800e49e:	f107 0338 	add.w	r3, r7, #56	@ 0x38
 800e4a2:	4611      	mov	r1, r2
 800e4a4:	4618      	mov	r0, r3
 800e4a6:	f7fe ffdb 	bl	800d460 <_ZN8touchgfx9colortypeC1Em>
 800e4aa:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 800e4ac:	4698      	mov	r8, r3
 800e4ae:	2333      	movs	r3, #51	@ 0x33
 800e4b0:	f887 3067 	strb.w	r3, [r7, #103]	@ 0x67
 800e4b4:	2366      	movs	r3, #102	@ 0x66
 800e4b6:	f887 3066 	strb.w	r3, [r7, #102]	@ 0x66
 800e4ba:	2399      	movs	r3, #153	@ 0x99
 800e4bc:	f887 3065 	strb.w	r3, [r7, #101]	@ 0x65
 800e4c0:	f897 3067 	ldrb.w	r3, [r7, #103]	@ 0x67
 800e4c4:	041a      	lsls	r2, r3, #16
 800e4c6:	f897 3066 	ldrb.w	r3, [r7, #102]	@ 0x66
 800e4ca:	021b      	lsls	r3, r3, #8
 800e4cc:	431a      	orrs	r2, r3
 800e4ce:	f897 3065 	ldrb.w	r3, [r7, #101]	@ 0x65
 800e4d2:	4313      	orrs	r3, r2
 800e4d4:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800e4d8:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800e4dc:	4611      	mov	r1, r2
 800e4de:	4618      	mov	r0, r3
 800e4e0:	f7fe ffbe 	bl	800d460 <_ZN8touchgfx9colortypeC1Em>
 800e4e4:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800e4e6:	e003      	b.n	800e4f0 <_ZN14screenViewBaseC1Ev+0x3b4>
 800e4e8:	08027728 	.word	0x08027728
 800e4ec:	0800e627 	.word	0x0800e627
 800e4f0:	9300      	str	r3, [sp, #0]
 800e4f2:	4643      	mov	r3, r8
 800e4f4:	4632      	mov	r2, r6
 800e4f6:	4629      	mov	r1, r5
 800e4f8:	4620      	mov	r0, r4
 800e4fa:	f000 f9b7 	bl	800e86c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton1.setPosition(364, 389, 50, 50);
 800e4fe:	687b      	ldr	r3, [r7, #4]
 800e500:	f503 7086 	add.w	r0, r3, #268	@ 0x10c
 800e504:	2332      	movs	r3, #50	@ 0x32
 800e506:	9300      	str	r3, [sp, #0]
 800e508:	2332      	movs	r3, #50	@ 0x32
 800e50a:	f240 1285 	movw	r2, #389	@ 0x185
 800e50e:	f44f 71b6 	mov.w	r1, #364	@ 0x16c
 800e512:	f7ff f855 	bl	800d5c0 <_ZN8touchgfx8Drawable11setPositionEssss>
    add(flexButton1);
 800e516:	687a      	ldr	r2, [r7, #4]
 800e518:	687b      	ldr	r3, [r7, #4]
 800e51a:	f503 7386 	add.w	r3, r3, #268	@ 0x10c
 800e51e:	4619      	mov	r1, r3
 800e520:	4610      	mov	r0, r2
 800e522:	f7ff fa2f 	bl	800d984 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    animatedImage1.setXY(38, 38);
 800e526:	687b      	ldr	r3, [r7, #4]
 800e528:	f503 73c2 	add.w	r3, r3, #388	@ 0x184
 800e52c:	2226      	movs	r2, #38	@ 0x26
 800e52e:	2126      	movs	r1, #38	@ 0x26
 800e530:	4618      	mov	r0, r3
 800e532:	f7ff f884 	bl	800d63e <_ZN8touchgfx8Drawable5setXYEss>
    animatedImage1.setBitmaps(BITMAP_WOOJEONG_000_ID, BITMAP_WOOJEONG_034_ID);
 800e536:	687b      	ldr	r3, [r7, #4]
 800e538:	f503 73c2 	add.w	r3, r3, #388	@ 0x184
 800e53c:	2229      	movs	r2, #41	@ 0x29
 800e53e:	2107      	movs	r1, #7
 800e540:	4618      	mov	r0, r3
 800e542:	f004 f9bd 	bl	80128c0 <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>
    animatedImage1.setUpdateTicksInterval(6);
 800e546:	687b      	ldr	r3, [r7, #4]
 800e548:	f503 73c2 	add.w	r3, r3, #388	@ 0x184
 800e54c:	2106      	movs	r1, #6
 800e54e:	4618      	mov	r0, r3
 800e550:	f004 f9c9 	bl	80128e6 <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>
    animatedImage1.startAnimation(false, true, true);
 800e554:	687b      	ldr	r3, [r7, #4]
 800e556:	f503 70c2 	add.w	r0, r3, #388	@ 0x184
 800e55a:	2301      	movs	r3, #1
 800e55c:	2201      	movs	r2, #1
 800e55e:	2100      	movs	r1, #0
 800e560:	f004 f90d 	bl	801277e <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>
    add(animatedImage1);
 800e564:	687a      	ldr	r2, [r7, #4]
 800e566:	687b      	ldr	r3, [r7, #4]
 800e568:	f503 73c2 	add.w	r3, r3, #388	@ 0x184
 800e56c:	4619      	mov	r1, r3
 800e56e:	4610      	mov	r0, r2
 800e570:	f7ff fa08 	bl	800d984 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800e574:	687b      	ldr	r3, [r7, #4]
 800e576:	4618      	mov	r0, r3
 800e578:	3768      	adds	r7, #104	@ 0x68
 800e57a:	46bd      	mov	sp, r7
 800e57c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e580 <_ZN14screenViewBaseD1Ev>:

screenViewBase::~screenViewBase()
 800e580:	b580      	push	{r7, lr}
 800e582:	b082      	sub	sp, #8
 800e584:	af00      	add	r7, sp, #0
 800e586:	6078      	str	r0, [r7, #4]
 800e588:	4a18      	ldr	r2, [pc, #96]	@ (800e5ec <_ZN14screenViewBaseD1Ev+0x6c>)
 800e58a:	687b      	ldr	r3, [r7, #4]
 800e58c:	601a      	str	r2, [r3, #0]
{

}
 800e58e:	687b      	ldr	r3, [r7, #4]
 800e590:	f503 73e0 	add.w	r3, r3, #448	@ 0x1c0
 800e594:	4618      	mov	r0, r3
 800e596:	f000 f9d9 	bl	800e94c <_ZN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800e59a:	687b      	ldr	r3, [r7, #4]
 800e59c:	f503 73c2 	add.w	r3, r3, #388	@ 0x184
 800e5a0:	4618      	mov	r0, r3
 800e5a2:	f000 fa67 	bl	800ea74 <_ZN8touchgfx13AnimatedImageD1Ev>
 800e5a6:	687b      	ldr	r3, [r7, #4]
 800e5a8:	f503 7386 	add.w	r3, r3, #268	@ 0x10c
 800e5ac:	4618      	mov	r0, r3
 800e5ae:	f000 f9ef 	bl	800e990 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800e5b2:	687b      	ldr	r3, [r7, #4]
 800e5b4:	33e0      	adds	r3, #224	@ 0xe0
 800e5b6:	4618      	mov	r0, r3
 800e5b8:	f7ff fc6a 	bl	800de90 <_ZN8touchgfx5ImageD1Ev>
 800e5bc:	687b      	ldr	r3, [r7, #4]
 800e5be:	3398      	adds	r3, #152	@ 0x98
 800e5c0:	4618      	mov	r0, r3
 800e5c2:	f000 fa2f 	bl	800ea24 <_ZN8touchgfx15ButtonWithLabelD1Ev>
 800e5c6:	687b      	ldr	r3, [r7, #4]
 800e5c8:	336c      	adds	r3, #108	@ 0x6c
 800e5ca:	4618      	mov	r0, r3
 800e5cc:	f7ff fc60 	bl	800de90 <_ZN8touchgfx5ImageD1Ev>
 800e5d0:	687b      	ldr	r3, [r7, #4]
 800e5d2:	3340      	adds	r3, #64	@ 0x40
 800e5d4:	4618      	mov	r0, r3
 800e5d6:	f7ff fcbb 	bl	800df50 <_ZN8touchgfx3BoxD1Ev>
 800e5da:	687b      	ldr	r3, [r7, #4]
 800e5dc:	4618      	mov	r0, r3
 800e5de:	f7ff fd8b 	bl	800e0f8 <_ZN8touchgfx4ViewI15screenPresenterED1Ev>
 800e5e2:	687b      	ldr	r3, [r7, #4]
 800e5e4:	4618      	mov	r0, r3
 800e5e6:	3708      	adds	r7, #8
 800e5e8:	46bd      	mov	sp, r7
 800e5ea:	bd80      	pop	{r7, pc}
 800e5ec:	08027728 	.word	0x08027728

0800e5f0 <_ZN14screenViewBaseD0Ev>:
screenViewBase::~screenViewBase()
 800e5f0:	b580      	push	{r7, lr}
 800e5f2:	b082      	sub	sp, #8
 800e5f4:	af00      	add	r7, sp, #0
 800e5f6:	6078      	str	r0, [r7, #4]
}
 800e5f8:	6878      	ldr	r0, [r7, #4]
 800e5fa:	f7ff ffc1 	bl	800e580 <_ZN14screenViewBaseD1Ev>
 800e5fe:	f44f 71e8 	mov.w	r1, #464	@ 0x1d0
 800e602:	6878      	ldr	r0, [r7, #4]
 800e604:	f017 f8e3 	bl	80257ce <_ZdlPvj>
 800e608:	687b      	ldr	r3, [r7, #4]
 800e60a:	4618      	mov	r0, r3
 800e60c:	3708      	adds	r7, #8
 800e60e:	46bd      	mov	sp, r7
 800e610:	bd80      	pop	{r7, pc}

0800e612 <_ZN14screenViewBase11setupScreenEv>:

void screenViewBase::setupScreen()
{
 800e612:	b480      	push	{r7}
 800e614:	b083      	sub	sp, #12
 800e616:	af00      	add	r7, sp, #0
 800e618:	6078      	str	r0, [r7, #4]

}
 800e61a:	bf00      	nop
 800e61c:	370c      	adds	r7, #12
 800e61e:	46bd      	mov	sp, r7
 800e620:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e624:	4770      	bx	lr

0800e626 <_ZN14screenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void screenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800e626:	b580      	push	{r7, lr}
 800e628:	b082      	sub	sp, #8
 800e62a:	af00      	add	r7, sp, #0
 800e62c:	6078      	str	r0, [r7, #4]
 800e62e:	6039      	str	r1, [r7, #0]
    if (&src == &btn)
 800e630:	687b      	ldr	r3, [r7, #4]
 800e632:	3398      	adds	r3, #152	@ 0x98
 800e634:	683a      	ldr	r2, [r7, #0]
 800e636:	429a      	cmp	r2, r3
 800e638:	d105      	bne.n	800e646 <_ZN14screenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x20>
    {
        //Interaction1
        //When btn clicked call virtual function
        //Call change
        change();
 800e63a:	687b      	ldr	r3, [r7, #4]
 800e63c:	681b      	ldr	r3, [r3, #0]
 800e63e:	332c      	adds	r3, #44	@ 0x2c
 800e640:	681b      	ldr	r3, [r3, #0]
 800e642:	6878      	ldr	r0, [r7, #4]
 800e644:	4798      	blx	r3
    }
}
 800e646:	bf00      	nop
 800e648:	3708      	adds	r7, #8
 800e64a:	46bd      	mov	sp, r7
 800e64c:	bd80      	pop	{r7, pc}
	...

0800e650 <_ZN8touchgfx4ViewI15screenPresenterEC1Ev>:
    View()
 800e650:	b580      	push	{r7, lr}
 800e652:	b082      	sub	sp, #8
 800e654:	af00      	add	r7, sp, #0
 800e656:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800e658:	687b      	ldr	r3, [r7, #4]
 800e65a:	4618      	mov	r0, r3
 800e65c:	f007 fc24 	bl	8015ea8 <_ZN8touchgfx6ScreenC1Ev>
 800e660:	4a05      	ldr	r2, [pc, #20]	@ (800e678 <_ZN8touchgfx4ViewI15screenPresenterEC1Ev+0x28>)
 800e662:	687b      	ldr	r3, [r7, #4]
 800e664:	601a      	str	r2, [r3, #0]
 800e666:	687b      	ldr	r3, [r7, #4]
 800e668:	2200      	movs	r2, #0
 800e66a:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 800e66c:	687b      	ldr	r3, [r7, #4]
 800e66e:	4618      	mov	r0, r3
 800e670:	3708      	adds	r7, #8
 800e672:	46bd      	mov	sp, r7
 800e674:	bd80      	pop	{r7, pc}
 800e676:	bf00      	nop
 800e678:	08027814 	.word	0x08027814

0800e67c <_ZN8touchgfx18ClickButtonTriggerC1Ev>:
class ClickButtonTrigger : public AbstractButtonContainer
 800e67c:	b580      	push	{r7, lr}
 800e67e:	b082      	sub	sp, #8
 800e680:	af00      	add	r7, sp, #0
 800e682:	6078      	str	r0, [r7, #4]
 800e684:	687b      	ldr	r3, [r7, #4]
 800e686:	4618      	mov	r0, r3
 800e688:	f7ff fb76 	bl	800dd78 <_ZN8touchgfx23AbstractButtonContainerC1Ev>
 800e68c:	4a03      	ldr	r2, [pc, #12]	@ (800e69c <_ZN8touchgfx18ClickButtonTriggerC1Ev+0x20>)
 800e68e:	687b      	ldr	r3, [r7, #4]
 800e690:	601a      	str	r2, [r3, #0]
 800e692:	687b      	ldr	r3, [r7, #4]
 800e694:	4618      	mov	r0, r3
 800e696:	3708      	adds	r7, #8
 800e698:	46bd      	mov	sp, r7
 800e69a:	bd80      	pop	{r7, pc}
 800e69c:	08027848 	.word	0x08027848

0800e6a0 <_ZN8touchgfx18ClickButtonTriggerD1Ev>:
 800e6a0:	b580      	push	{r7, lr}
 800e6a2:	b082      	sub	sp, #8
 800e6a4:	af00      	add	r7, sp, #0
 800e6a6:	6078      	str	r0, [r7, #4]
 800e6a8:	4a05      	ldr	r2, [pc, #20]	@ (800e6c0 <_ZN8touchgfx18ClickButtonTriggerD1Ev+0x20>)
 800e6aa:	687b      	ldr	r3, [r7, #4]
 800e6ac:	601a      	str	r2, [r3, #0]
 800e6ae:	687b      	ldr	r3, [r7, #4]
 800e6b0:	4618      	mov	r0, r3
 800e6b2:	f7ff fcf5 	bl	800e0a0 <_ZN8touchgfx23AbstractButtonContainerD1Ev>
 800e6b6:	687b      	ldr	r3, [r7, #4]
 800e6b8:	4618      	mov	r0, r3
 800e6ba:	3708      	adds	r7, #8
 800e6bc:	46bd      	mov	sp, r7
 800e6be:	bd80      	pop	{r7, pc}
 800e6c0:	08027848 	.word	0x08027848

0800e6c4 <_ZN8touchgfx18ClickButtonTriggerD0Ev>:
 800e6c4:	b580      	push	{r7, lr}
 800e6c6:	b082      	sub	sp, #8
 800e6c8:	af00      	add	r7, sp, #0
 800e6ca:	6078      	str	r0, [r7, #4]
 800e6cc:	6878      	ldr	r0, [r7, #4]
 800e6ce:	f7ff ffe7 	bl	800e6a0 <_ZN8touchgfx18ClickButtonTriggerD1Ev>
 800e6d2:	2134      	movs	r1, #52	@ 0x34
 800e6d4:	6878      	ldr	r0, [r7, #4]
 800e6d6:	f017 f87a 	bl	80257ce <_ZdlPvj>
 800e6da:	687b      	ldr	r3, [r7, #4]
 800e6dc:	4618      	mov	r0, r3
 800e6de:	3708      	adds	r7, #8
 800e6e0:	46bd      	mov	sp, r7
 800e6e2:	bd80      	pop	{r7, pc}

0800e6e4 <_ZN8touchgfx13BoxWithBorderD1Ev>:
class BoxWithBorder : public Box
 800e6e4:	b580      	push	{r7, lr}
 800e6e6:	b082      	sub	sp, #8
 800e6e8:	af00      	add	r7, sp, #0
 800e6ea:	6078      	str	r0, [r7, #4]
 800e6ec:	4a05      	ldr	r2, [pc, #20]	@ (800e704 <_ZN8touchgfx13BoxWithBorderD1Ev+0x20>)
 800e6ee:	687b      	ldr	r3, [r7, #4]
 800e6f0:	601a      	str	r2, [r3, #0]
 800e6f2:	687b      	ldr	r3, [r7, #4]
 800e6f4:	4618      	mov	r0, r3
 800e6f6:	f7ff fc2b 	bl	800df50 <_ZN8touchgfx3BoxD1Ev>
 800e6fa:	687b      	ldr	r3, [r7, #4]
 800e6fc:	4618      	mov	r0, r3
 800e6fe:	3708      	adds	r7, #8
 800e700:	46bd      	mov	sp, r7
 800e702:	bd80      	pop	{r7, pc}
 800e704:	0802859c 	.word	0x0802859c

0800e708 <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800e708:	b580      	push	{r7, lr}
 800e70a:	b082      	sub	sp, #8
 800e70c:	af00      	add	r7, sp, #0
 800e70e:	6078      	str	r0, [r7, #4]
 800e710:	6878      	ldr	r0, [r7, #4]
 800e712:	f7ff ffe7 	bl	800e6e4 <_ZN8touchgfx13BoxWithBorderD1Ev>
 800e716:	2134      	movs	r1, #52	@ 0x34
 800e718:	6878      	ldr	r0, [r7, #4]
 800e71a:	f017 f858 	bl	80257ce <_ZdlPvj>
 800e71e:	687b      	ldr	r3, [r7, #4]
 800e720:	4618      	mov	r0, r3
 800e722:	3708      	adds	r7, #8
 800e724:	46bd      	mov	sp, r7
 800e726:	bd80      	pop	{r7, pc}

0800e728 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>:
 */
template <class T>
class BoxWithBorderButtonStyle : public T
{
public:
    BoxWithBorderButtonStyle()
 800e728:	b580      	push	{r7, lr}
 800e72a:	b082      	sub	sp, #8
 800e72c:	af00      	add	r7, sp, #0
 800e72e:	6078      	str	r0, [r7, #4]
        : T(), up(), down()
 800e730:	687b      	ldr	r3, [r7, #4]
 800e732:	4618      	mov	r0, r3
 800e734:	2334      	movs	r3, #52	@ 0x34
 800e736:	461a      	mov	r2, r3
 800e738:	2100      	movs	r1, #0
 800e73a:	f017 fb83 	bl	8025e44 <memset>
 800e73e:	687b      	ldr	r3, [r7, #4]
 800e740:	4618      	mov	r0, r3
 800e742:	f7ff ff9b 	bl	800e67c <_ZN8touchgfx18ClickButtonTriggerC1Ev>
 800e746:	4a17      	ldr	r2, [pc, #92]	@ (800e7a4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x7c>)
 800e748:	687b      	ldr	r3, [r7, #4]
 800e74a:	601a      	str	r2, [r3, #0]
 800e74c:	687b      	ldr	r3, [r7, #4]
 800e74e:	3334      	adds	r3, #52	@ 0x34
 800e750:	4618      	mov	r0, r3
 800e752:	f7ff fc1f 	bl	800df94 <_ZN8touchgfx13BoxWithBorderC1Ev>
 800e756:	687b      	ldr	r3, [r7, #4]
 800e758:	3368      	adds	r3, #104	@ 0x68
 800e75a:	4618      	mov	r0, r3
 800e75c:	f7fe fe72 	bl	800d444 <_ZN8touchgfx9colortypeC1Ev>
 800e760:	687b      	ldr	r3, [r7, #4]
 800e762:	336c      	adds	r3, #108	@ 0x6c
 800e764:	4618      	mov	r0, r3
 800e766:	f7fe fe6d 	bl	800d444 <_ZN8touchgfx9colortypeC1Ev>
 800e76a:	687b      	ldr	r3, [r7, #4]
 800e76c:	3370      	adds	r3, #112	@ 0x70
 800e76e:	4618      	mov	r0, r3
 800e770:	f7fe fe68 	bl	800d444 <_ZN8touchgfx9colortypeC1Ev>
 800e774:	687b      	ldr	r3, [r7, #4]
 800e776:	3374      	adds	r3, #116	@ 0x74
 800e778:	4618      	mov	r0, r3
 800e77a:	f7fe fe63 	bl	800d444 <_ZN8touchgfx9colortypeC1Ev>
    {
        borderBox.setXY(0, 0);
 800e77e:	687b      	ldr	r3, [r7, #4]
 800e780:	3334      	adds	r3, #52	@ 0x34
 800e782:	2200      	movs	r2, #0
 800e784:	2100      	movs	r1, #0
 800e786:	4618      	mov	r0, r3
 800e788:	f7fe ff59 	bl	800d63e <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 800e78c:	687a      	ldr	r2, [r7, #4]
 800e78e:	687b      	ldr	r3, [r7, #4]
 800e790:	3334      	adds	r3, #52	@ 0x34
 800e792:	4619      	mov	r1, r3
 800e794:	4610      	mov	r0, r2
 800e796:	f002 fe1f 	bl	80113d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800e79a:	687b      	ldr	r3, [r7, #4]
 800e79c:	4618      	mov	r0, r3
 800e79e:	3708      	adds	r7, #8
 800e7a0:	46bd      	mov	sp, r7
 800e7a2:	bd80      	pop	{r7, pc}
 800e7a4:	08027778 	.word	0x08027778

0800e7a8 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>:
class GenericCallback<T1, void, void>
 800e7a8:	b480      	push	{r7}
 800e7aa:	b083      	sub	sp, #12
 800e7ac:	af00      	add	r7, sp, #0
 800e7ae:	6078      	str	r0, [r7, #4]
 800e7b0:	4a04      	ldr	r2, [pc, #16]	@ (800e7c4 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev+0x1c>)
 800e7b2:	687b      	ldr	r3, [r7, #4]
 800e7b4:	601a      	str	r2, [r3, #0]
 800e7b6:	687b      	ldr	r3, [r7, #4]
 800e7b8:	4618      	mov	r0, r3
 800e7ba:	370c      	adds	r7, #12
 800e7bc:	46bd      	mov	sp, r7
 800e7be:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e7c2:	4770      	bx	lr
 800e7c4:	08027980 	.word	0x08027980

0800e7c8 <_ZN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800e7c8:	b580      	push	{r7, lr}
 800e7ca:	b084      	sub	sp, #16
 800e7cc:	af00      	add	r7, sp, #0
 800e7ce:	60f8      	str	r0, [r7, #12]
 800e7d0:	60b9      	str	r1, [r7, #8]
 800e7d2:	4639      	mov	r1, r7
 800e7d4:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800e7d8:	68fb      	ldr	r3, [r7, #12]
 800e7da:	4618      	mov	r0, r3
 800e7dc:	f7ff ffe4 	bl	800e7a8 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800e7e0:	4a08      	ldr	r2, [pc, #32]	@ (800e804 <_ZN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800e7e2:	68fb      	ldr	r3, [r7, #12]
 800e7e4:	601a      	str	r2, [r3, #0]
 800e7e6:	68fb      	ldr	r3, [r7, #12]
 800e7e8:	68ba      	ldr	r2, [r7, #8]
 800e7ea:	605a      	str	r2, [r3, #4]
 800e7ec:	68fb      	ldr	r3, [r7, #12]
 800e7ee:	3308      	adds	r3, #8
 800e7f0:	463a      	mov	r2, r7
 800e7f2:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e7f6:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800e7fa:	68fb      	ldr	r3, [r7, #12]
 800e7fc:	4618      	mov	r0, r3
 800e7fe:	3710      	adds	r7, #16
 800e800:	46bd      	mov	sp, r7
 800e802:	bd80      	pop	{r7, pc}
 800e804:	08027760 	.word	0x08027760

0800e808 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>:
     * @param  width  The width of this BoxWithBorderButtonStyle.
     * @param  height The height of this BoxWithBorderButtonStyle.
     *
     * @note Changing this does not automatically yield a redraw.
     */
    void setBoxWithBorderPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800e808:	b590      	push	{r4, r7, lr}
 800e80a:	b087      	sub	sp, #28
 800e80c:	af02      	add	r7, sp, #8
 800e80e:	60f8      	str	r0, [r7, #12]
 800e810:	4608      	mov	r0, r1
 800e812:	4611      	mov	r1, r2
 800e814:	461a      	mov	r2, r3
 800e816:	4603      	mov	r3, r0
 800e818:	817b      	strh	r3, [r7, #10]
 800e81a:	460b      	mov	r3, r1
 800e81c:	813b      	strh	r3, [r7, #8]
 800e81e:	4613      	mov	r3, r2
 800e820:	80fb      	strh	r3, [r7, #6]
    {
        borderBox.setPosition(x, y, width, height);
 800e822:	68fb      	ldr	r3, [r7, #12]
 800e824:	f103 0034 	add.w	r0, r3, #52	@ 0x34
 800e828:	f9b7 4006 	ldrsh.w	r4, [r7, #6]
 800e82c:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800e830:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800e834:	f9b7 3020 	ldrsh.w	r3, [r7, #32]
 800e838:	9300      	str	r3, [sp, #0]
 800e83a:	4623      	mov	r3, r4
 800e83c:	f7fe fec0 	bl	800d5c0 <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800e840:	bf00      	nop
 800e842:	3714      	adds	r7, #20
 800e844:	46bd      	mov	sp, r7
 800e846:	bd90      	pop	{r4, r7, pc}

0800e848 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>:
    /**
     * Sets border size.
     *
     * @param  size The size.
     */
    void setBorderSize(uint8_t size)
 800e848:	b580      	push	{r7, lr}
 800e84a:	b082      	sub	sp, #8
 800e84c:	af00      	add	r7, sp, #0
 800e84e:	6078      	str	r0, [r7, #4]
 800e850:	460b      	mov	r3, r1
 800e852:	70fb      	strb	r3, [r7, #3]
    {
        borderBox.setBorderSize(size);
 800e854:	687b      	ldr	r3, [r7, #4]
 800e856:	3334      	adds	r3, #52	@ 0x34
 800e858:	78fa      	ldrb	r2, [r7, #3]
 800e85a:	b292      	uxth	r2, r2
 800e85c:	4611      	mov	r1, r2
 800e85e:	4618      	mov	r0, r3
 800e860:	f7ff fbc2 	bl	800dfe8 <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>
    }
 800e864:	bf00      	nop
 800e866:	3708      	adds	r7, #8
 800e868:	46bd      	mov	sp, r7
 800e86a:	bd80      	pop	{r7, pc}

0800e86c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 800e86c:	b580      	push	{r7, lr}
 800e86e:	b084      	sub	sp, #16
 800e870:	af00      	add	r7, sp, #0
 800e872:	60f8      	str	r0, [r7, #12]
 800e874:	60b9      	str	r1, [r7, #8]
 800e876:	607a      	str	r2, [r7, #4]
 800e878:	603b      	str	r3, [r7, #0]
        up = colorReleased;
 800e87a:	68fb      	ldr	r3, [r7, #12]
 800e87c:	68ba      	ldr	r2, [r7, #8]
 800e87e:	669a      	str	r2, [r3, #104]	@ 0x68
        down = colorPressed;
 800e880:	68fb      	ldr	r3, [r7, #12]
 800e882:	687a      	ldr	r2, [r7, #4]
 800e884:	66da      	str	r2, [r3, #108]	@ 0x6c
        borderUp = borderColorReleased;
 800e886:	68fb      	ldr	r3, [r7, #12]
 800e888:	683a      	ldr	r2, [r7, #0]
 800e88a:	671a      	str	r2, [r3, #112]	@ 0x70
        borderDown = borderColorPressed;
 800e88c:	68fb      	ldr	r3, [r7, #12]
 800e88e:	69ba      	ldr	r2, [r7, #24]
 800e890:	675a      	str	r2, [r3, #116]	@ 0x74
        handlePressedUpdated();
 800e892:	68fb      	ldr	r3, [r7, #12]
 800e894:	681b      	ldr	r3, [r3, #0]
 800e896:	338c      	adds	r3, #140	@ 0x8c
 800e898:	681b      	ldr	r3, [r3, #0]
 800e89a:	68f8      	ldr	r0, [r7, #12]
 800e89c:	4798      	blx	r3
    }
 800e89e:	bf00      	nop
 800e8a0:	3710      	adds	r7, #16
 800e8a2:	46bd      	mov	sp, r7
 800e8a4:	bd80      	pop	{r7, pc}
	...

0800e8a8 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>:
    virtual ~GenericCallback()
 800e8a8:	b480      	push	{r7}
 800e8aa:	b083      	sub	sp, #12
 800e8ac:	af00      	add	r7, sp, #0
 800e8ae:	6078      	str	r0, [r7, #4]
    }
 800e8b0:	4a04      	ldr	r2, [pc, #16]	@ (800e8c4 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev+0x1c>)
 800e8b2:	687b      	ldr	r3, [r7, #4]
 800e8b4:	601a      	str	r2, [r3, #0]
 800e8b6:	687b      	ldr	r3, [r7, #4]
 800e8b8:	4618      	mov	r0, r3
 800e8ba:	370c      	adds	r7, #12
 800e8bc:	46bd      	mov	sp, r7
 800e8be:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e8c2:	4770      	bx	lr
 800e8c4:	08027980 	.word	0x08027980

0800e8c8 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED0Ev>:
    virtual ~GenericCallback()
 800e8c8:	b580      	push	{r7, lr}
 800e8ca:	b082      	sub	sp, #8
 800e8cc:	af00      	add	r7, sp, #0
 800e8ce:	6078      	str	r0, [r7, #4]
    }
 800e8d0:	6878      	ldr	r0, [r7, #4]
 800e8d2:	f7ff ffe9 	bl	800e8a8 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800e8d6:	2104      	movs	r1, #4
 800e8d8:	6878      	ldr	r0, [r7, #4]
 800e8da:	f016 ff78 	bl	80257ce <_ZdlPvj>
 800e8de:	687b      	ldr	r3, [r7, #4]
 800e8e0:	4618      	mov	r0, r3
 800e8e2:	3708      	adds	r7, #8
 800e8e4:	46bd      	mov	sp, r7
 800e8e6:	bd80      	pop	{r7, pc}

0800e8e8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
    colortype down;          ///< The down
    colortype borderUp;      ///< The border up
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
 800e8e8:	b590      	push	{r4, r7, lr}
 800e8ea:	b083      	sub	sp, #12
 800e8ec:	af00      	add	r7, sp, #0
 800e8ee:	6078      	str	r0, [r7, #4]
    {
        borderBox.setColor(T::getPressed() ? down : up);
 800e8f0:	687b      	ldr	r3, [r7, #4]
 800e8f2:	f103 0434 	add.w	r4, r3, #52	@ 0x34
 800e8f6:	687b      	ldr	r3, [r7, #4]
 800e8f8:	4618      	mov	r0, r3
 800e8fa:	f7ff fa73 	bl	800dde4 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>
 800e8fe:	4603      	mov	r3, r0
 800e900:	2b00      	cmp	r3, #0
 800e902:	d002      	beq.n	800e90a <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x22>
 800e904:	687b      	ldr	r3, [r7, #4]
 800e906:	336c      	adds	r3, #108	@ 0x6c
 800e908:	e001      	b.n	800e90e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x26>
 800e90a:	687b      	ldr	r3, [r7, #4]
 800e90c:	3368      	adds	r3, #104	@ 0x68
 800e90e:	6819      	ldr	r1, [r3, #0]
 800e910:	4620      	mov	r0, r4
 800e912:	f7ff f89f 	bl	800da54 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 800e916:	687b      	ldr	r3, [r7, #4]
 800e918:	f103 0434 	add.w	r4, r3, #52	@ 0x34
 800e91c:	687b      	ldr	r3, [r7, #4]
 800e91e:	4618      	mov	r0, r3
 800e920:	f7ff fa60 	bl	800dde4 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>
 800e924:	4603      	mov	r3, r0
 800e926:	2b00      	cmp	r3, #0
 800e928:	d002      	beq.n	800e930 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x48>
 800e92a:	687b      	ldr	r3, [r7, #4]
 800e92c:	3374      	adds	r3, #116	@ 0x74
 800e92e:	e001      	b.n	800e934 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x4c>
 800e930:	687b      	ldr	r3, [r7, #4]
 800e932:	3370      	adds	r3, #112	@ 0x70
 800e934:	6819      	ldr	r1, [r3, #0]
 800e936:	4620      	mov	r0, r4
 800e938:	f7ff fb48 	bl	800dfcc <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>
        T::handlePressedUpdated();
 800e93c:	687b      	ldr	r3, [r7, #4]
 800e93e:	4618      	mov	r0, r3
 800e940:	f7ff fa91 	bl	800de66 <_ZN8touchgfx23AbstractButtonContainer20handlePressedUpdatedEv>
    }
 800e944:	bf00      	nop
 800e946:	370c      	adds	r7, #12
 800e948:	46bd      	mov	sp, r7
 800e94a:	bd90      	pop	{r4, r7, pc}

0800e94c <_ZN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800e94c:	b580      	push	{r7, lr}
 800e94e:	b082      	sub	sp, #8
 800e950:	af00      	add	r7, sp, #0
 800e952:	6078      	str	r0, [r7, #4]
 800e954:	4a05      	ldr	r2, [pc, #20]	@ (800e96c <_ZN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800e956:	687b      	ldr	r3, [r7, #4]
 800e958:	601a      	str	r2, [r3, #0]
 800e95a:	687b      	ldr	r3, [r7, #4]
 800e95c:	4618      	mov	r0, r3
 800e95e:	f7ff ffa3 	bl	800e8a8 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800e962:	687b      	ldr	r3, [r7, #4]
 800e964:	4618      	mov	r0, r3
 800e966:	3708      	adds	r7, #8
 800e968:	46bd      	mov	sp, r7
 800e96a:	bd80      	pop	{r7, pc}
 800e96c:	08027760 	.word	0x08027760

0800e970 <_ZN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800e970:	b580      	push	{r7, lr}
 800e972:	b082      	sub	sp, #8
 800e974:	af00      	add	r7, sp, #0
 800e976:	6078      	str	r0, [r7, #4]
 800e978:	6878      	ldr	r0, [r7, #4]
 800e97a:	f7ff ffe7 	bl	800e94c <_ZN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800e97e:	2110      	movs	r1, #16
 800e980:	6878      	ldr	r0, [r7, #4]
 800e982:	f016 ff24 	bl	80257ce <_ZdlPvj>
 800e986:	687b      	ldr	r3, [r7, #4]
 800e988:	4618      	mov	r0, r3
 800e98a:	3708      	adds	r7, #8
 800e98c:	46bd      	mov	sp, r7
 800e98e:	bd80      	pop	{r7, pc}

0800e990 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
class BoxWithBorderButtonStyle : public T
 800e990:	b580      	push	{r7, lr}
 800e992:	b082      	sub	sp, #8
 800e994:	af00      	add	r7, sp, #0
 800e996:	6078      	str	r0, [r7, #4]
 800e998:	4a08      	ldr	r2, [pc, #32]	@ (800e9bc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev+0x2c>)
 800e99a:	687b      	ldr	r3, [r7, #4]
 800e99c:	601a      	str	r2, [r3, #0]
 800e99e:	687b      	ldr	r3, [r7, #4]
 800e9a0:	3334      	adds	r3, #52	@ 0x34
 800e9a2:	4618      	mov	r0, r3
 800e9a4:	f7ff fe9e 	bl	800e6e4 <_ZN8touchgfx13BoxWithBorderD1Ev>
 800e9a8:	687b      	ldr	r3, [r7, #4]
 800e9aa:	4618      	mov	r0, r3
 800e9ac:	f7ff fe78 	bl	800e6a0 <_ZN8touchgfx18ClickButtonTriggerD1Ev>
 800e9b0:	687b      	ldr	r3, [r7, #4]
 800e9b2:	4618      	mov	r0, r3
 800e9b4:	3708      	adds	r7, #8
 800e9b6:	46bd      	mov	sp, r7
 800e9b8:	bd80      	pop	{r7, pc}
 800e9ba:	bf00      	nop
 800e9bc:	08027778 	.word	0x08027778

0800e9c0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
 800e9c0:	b580      	push	{r7, lr}
 800e9c2:	b082      	sub	sp, #8
 800e9c4:	af00      	add	r7, sp, #0
 800e9c6:	6078      	str	r0, [r7, #4]
 800e9c8:	6878      	ldr	r0, [r7, #4]
 800e9ca:	f7ff ffe1 	bl	800e990 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800e9ce:	2178      	movs	r1, #120	@ 0x78
 800e9d0:	6878      	ldr	r0, [r7, #4]
 800e9d2:	f016 fefc 	bl	80257ce <_ZdlPvj>
 800e9d6:	687b      	ldr	r3, [r7, #4]
 800e9d8:	4618      	mov	r0, r3
 800e9da:	3708      	adds	r7, #8
 800e9dc:	46bd      	mov	sp, r7
 800e9de:	bd80      	pop	{r7, pc}

0800e9e0 <_ZN8touchgfx6ButtonD1Ev>:
{
/**
 * A button with two images. One image showing the unpressed button and one image showing the
 * pressed state.
 */
class Button : public AbstractButton
 800e9e0:	b580      	push	{r7, lr}
 800e9e2:	b082      	sub	sp, #8
 800e9e4:	af00      	add	r7, sp, #0
 800e9e6:	6078      	str	r0, [r7, #4]
 800e9e8:	4a05      	ldr	r2, [pc, #20]	@ (800ea00 <_ZN8touchgfx6ButtonD1Ev+0x20>)
 800e9ea:	687b      	ldr	r3, [r7, #4]
 800e9ec:	601a      	str	r2, [r3, #0]
 800e9ee:	687b      	ldr	r3, [r7, #4]
 800e9f0:	4618      	mov	r0, r3
 800e9f2:	f7ff f897 	bl	800db24 <_ZN8touchgfx14AbstractButtonD1Ev>
 800e9f6:	687b      	ldr	r3, [r7, #4]
 800e9f8:	4618      	mov	r0, r3
 800e9fa:	3708      	adds	r7, #8
 800e9fc:	46bd      	mov	sp, r7
 800e9fe:	bd80      	pop	{r7, pc}
 800ea00:	08028528 	.word	0x08028528

0800ea04 <_ZN8touchgfx6ButtonD0Ev>:
 800ea04:	b580      	push	{r7, lr}
 800ea06:	b082      	sub	sp, #8
 800ea08:	af00      	add	r7, sp, #0
 800ea0a:	6078      	str	r0, [r7, #4]
 800ea0c:	6878      	ldr	r0, [r7, #4]
 800ea0e:	f7ff ffe7 	bl	800e9e0 <_ZN8touchgfx6ButtonD1Ev>
 800ea12:	2134      	movs	r1, #52	@ 0x34
 800ea14:	6878      	ldr	r0, [r7, #4]
 800ea16:	f016 feda 	bl	80257ce <_ZdlPvj>
 800ea1a:	687b      	ldr	r3, [r7, #4]
 800ea1c:	4618      	mov	r0, r3
 800ea1e:	3708      	adds	r7, #8
 800ea20:	46bd      	mov	sp, r7
 800ea22:	bd80      	pop	{r7, pc}

0800ea24 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
class ButtonWithLabel : public Button
 800ea24:	b580      	push	{r7, lr}
 800ea26:	b082      	sub	sp, #8
 800ea28:	af00      	add	r7, sp, #0
 800ea2a:	6078      	str	r0, [r7, #4]
 800ea2c:	4a08      	ldr	r2, [pc, #32]	@ (800ea50 <_ZN8touchgfx15ButtonWithLabelD1Ev+0x2c>)
 800ea2e:	687b      	ldr	r3, [r7, #4]
 800ea30:	601a      	str	r2, [r3, #0]
 800ea32:	687b      	ldr	r3, [r7, #4]
 800ea34:	3334      	adds	r3, #52	@ 0x34
 800ea36:	4618      	mov	r0, r3
 800ea38:	f7fd fd6e 	bl	800c518 <_ZN8touchgfx9TypedTextD1Ev>
 800ea3c:	687b      	ldr	r3, [r7, #4]
 800ea3e:	4618      	mov	r0, r3
 800ea40:	f7ff ffce 	bl	800e9e0 <_ZN8touchgfx6ButtonD1Ev>
 800ea44:	687b      	ldr	r3, [r7, #4]
 800ea46:	4618      	mov	r0, r3
 800ea48:	3708      	adds	r7, #8
 800ea4a:	46bd      	mov	sp, r7
 800ea4c:	bd80      	pop	{r7, pc}
 800ea4e:	bf00      	nop
 800ea50:	08028670 	.word	0x08028670

0800ea54 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800ea54:	b580      	push	{r7, lr}
 800ea56:	b082      	sub	sp, #8
 800ea58:	af00      	add	r7, sp, #0
 800ea5a:	6078      	str	r0, [r7, #4]
 800ea5c:	6878      	ldr	r0, [r7, #4]
 800ea5e:	f7ff ffe1 	bl	800ea24 <_ZN8touchgfx15ButtonWithLabelD1Ev>
 800ea62:	2148      	movs	r1, #72	@ 0x48
 800ea64:	6878      	ldr	r0, [r7, #4]
 800ea66:	f016 feb2 	bl	80257ce <_ZdlPvj>
 800ea6a:	687b      	ldr	r3, [r7, #4]
 800ea6c:	4618      	mov	r0, r3
 800ea6e:	3708      	adds	r7, #8
 800ea70:	46bd      	mov	sp, r7
 800ea72:	bd80      	pop	{r7, pc}

0800ea74 <_ZN8touchgfx13AnimatedImageD1Ev>:
class AnimatedImage : public Image
 800ea74:	b580      	push	{r7, lr}
 800ea76:	b082      	sub	sp, #8
 800ea78:	af00      	add	r7, sp, #0
 800ea7a:	6078      	str	r0, [r7, #4]
 800ea7c:	4a05      	ldr	r2, [pc, #20]	@ (800ea94 <_ZN8touchgfx13AnimatedImageD1Ev+0x20>)
 800ea7e:	687b      	ldr	r3, [r7, #4]
 800ea80:	601a      	str	r2, [r3, #0]
 800ea82:	687b      	ldr	r3, [r7, #4]
 800ea84:	4618      	mov	r0, r3
 800ea86:	f7ff fa03 	bl	800de90 <_ZN8touchgfx5ImageD1Ev>
 800ea8a:	687b      	ldr	r3, [r7, #4]
 800ea8c:	4618      	mov	r0, r3
 800ea8e:	3708      	adds	r7, #8
 800ea90:	46bd      	mov	sp, r7
 800ea92:	bd80      	pop	{r7, pc}
 800ea94:	08028444 	.word	0x08028444

0800ea98 <_ZN8touchgfx13AnimatedImageD0Ev>:
 800ea98:	b580      	push	{r7, lr}
 800ea9a:	b082      	sub	sp, #8
 800ea9c:	af00      	add	r7, sp, #0
 800ea9e:	6078      	str	r0, [r7, #4]
 800eaa0:	6878      	ldr	r0, [r7, #4]
 800eaa2:	f7ff ffe7 	bl	800ea74 <_ZN8touchgfx13AnimatedImageD1Ev>
 800eaa6:	213c      	movs	r1, #60	@ 0x3c
 800eaa8:	6878      	ldr	r0, [r7, #4]
 800eaaa:	f016 fe90 	bl	80257ce <_ZdlPvj>
 800eaae:	687b      	ldr	r3, [r7, #4]
 800eab0:	4618      	mov	r0, r3
 800eab2:	3708      	adds	r7, #8
 800eab4:	46bd      	mov	sp, r7
 800eab6:	bd80      	pop	{r7, pc}

0800eab8 <_ZN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800eab8:	b580      	push	{r7, lr}
 800eaba:	b082      	sub	sp, #8
 800eabc:	af00      	add	r7, sp, #0
 800eabe:	6078      	str	r0, [r7, #4]
 800eac0:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800eac2:	687b      	ldr	r3, [r7, #4]
 800eac4:	685b      	ldr	r3, [r3, #4]
 800eac6:	687a      	ldr	r2, [r7, #4]
 800eac8:	68d2      	ldr	r2, [r2, #12]
 800eaca:	1052      	asrs	r2, r2, #1
 800eacc:	1898      	adds	r0, r3, r2
 800eace:	687b      	ldr	r3, [r7, #4]
 800ead0:	68db      	ldr	r3, [r3, #12]
 800ead2:	f003 0301 	and.w	r3, r3, #1
 800ead6:	2b00      	cmp	r3, #0
 800ead8:	d102      	bne.n	800eae0 <_ZN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800eada:	687b      	ldr	r3, [r7, #4]
 800eadc:	689b      	ldr	r3, [r3, #8]
 800eade:	e00a      	b.n	800eaf6 <_ZN8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800eae0:	687b      	ldr	r3, [r7, #4]
 800eae2:	685b      	ldr	r3, [r3, #4]
 800eae4:	687a      	ldr	r2, [r7, #4]
 800eae6:	68d2      	ldr	r2, [r2, #12]
 800eae8:	1052      	asrs	r2, r2, #1
 800eaea:	4413      	add	r3, r2
 800eaec:	681b      	ldr	r3, [r3, #0]
 800eaee:	687a      	ldr	r2, [r7, #4]
 800eaf0:	6892      	ldr	r2, [r2, #8]
 800eaf2:	4413      	add	r3, r2
 800eaf4:	681b      	ldr	r3, [r3, #0]
 800eaf6:	6839      	ldr	r1, [r7, #0]
 800eaf8:	4798      	blx	r3
    }
 800eafa:	bf00      	nop
 800eafc:	3708      	adds	r7, #8
 800eafe:	46bd      	mov	sp, r7
 800eb00:	bd80      	pop	{r7, pc}

0800eb02 <_ZNK8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800eb02:	b480      	push	{r7}
 800eb04:	b083      	sub	sp, #12
 800eb06:	af00      	add	r7, sp, #0
 800eb08:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800eb0a:	687b      	ldr	r3, [r7, #4]
 800eb0c:	685b      	ldr	r3, [r3, #4]
 800eb0e:	2b00      	cmp	r3, #0
 800eb10:	d010      	beq.n	800eb34 <_ZNK8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800eb12:	687b      	ldr	r3, [r7, #4]
 800eb14:	689b      	ldr	r3, [r3, #8]
 800eb16:	2b00      	cmp	r3, #0
 800eb18:	d107      	bne.n	800eb2a <_ZNK8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800eb1a:	687b      	ldr	r3, [r7, #4]
 800eb1c:	68db      	ldr	r3, [r3, #12]
 800eb1e:	f003 0301 	and.w	r3, r3, #1
 800eb22:	2b00      	cmp	r3, #0
 800eb24:	d101      	bne.n	800eb2a <_ZNK8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800eb26:	2301      	movs	r3, #1
 800eb28:	e000      	b.n	800eb2c <_ZNK8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800eb2a:	2300      	movs	r3, #0
 800eb2c:	2b01      	cmp	r3, #1
 800eb2e:	d001      	beq.n	800eb34 <_ZNK8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800eb30:	2301      	movs	r3, #1
 800eb32:	e000      	b.n	800eb36 <_ZNK8touchgfx8CallbackI14screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800eb34:	2300      	movs	r3, #0
    }
 800eb36:	4618      	mov	r0, r3
 800eb38:	370c      	adds	r7, #12
 800eb3a:	46bd      	mov	sp, r7
 800eb3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eb40:	4770      	bx	lr

0800eb42 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
 800eb42:	b590      	push	{r4, r7, lr}
 800eb44:	b083      	sub	sp, #12
 800eb46:	af00      	add	r7, sp, #0
 800eb48:	6078      	str	r0, [r7, #4]
    {
        borderBox.setAlpha(T::getAlpha());
 800eb4a:	687b      	ldr	r3, [r7, #4]
 800eb4c:	f103 0434 	add.w	r4, r3, #52	@ 0x34
 800eb50:	687b      	ldr	r3, [r7, #4]
 800eb52:	4618      	mov	r0, r3
 800eb54:	f7ff f953 	bl	800ddfe <_ZNK8touchgfx23AbstractButtonContainer8getAlphaEv>
 800eb58:	4603      	mov	r3, r0
 800eb5a:	4619      	mov	r1, r3
 800eb5c:	4620      	mov	r0, r4
 800eb5e:	f7fe ff87 	bl	800da70 <_ZN8touchgfx3Box8setAlphaEh>
        T::handleAlphaUpdated();
 800eb62:	687b      	ldr	r3, [r7, #4]
 800eb64:	4618      	mov	r0, r3
 800eb66:	f7ff f988 	bl	800de7a <_ZN8touchgfx23AbstractButtonContainer18handleAlphaUpdatedEv>
    }
 800eb6a:	bf00      	nop
 800eb6c:	370c      	adds	r7, #12
 800eb6e:	46bd      	mov	sp, r7
 800eb70:	bd90      	pop	{r4, r7, pc}
	...

0800eb74 <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 800eb74:	b480      	push	{r7}
 800eb76:	af00      	add	r7, sp, #0
    return bitmap_database;
 800eb78:	4b02      	ldr	r3, [pc, #8]	@ (800eb84 <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 800eb7a:	4618      	mov	r0, r3
 800eb7c:	46bd      	mov	sp, r7
 800eb7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eb82:	4770      	bx	lr
 800eb84:	080279f8 	.word	0x080279f8

0800eb88 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 800eb88:	b480      	push	{r7}
 800eb8a:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 800eb8c:	232a      	movs	r3, #42	@ 0x2a
}
 800eb8e:	4618      	mov	r0, r3
 800eb90:	46bd      	mov	sp, r7
 800eb92:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eb96:	4770      	bx	lr

0800eb98 <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
 800eb98:	b480      	push	{r7}
 800eb9a:	b085      	sub	sp, #20
 800eb9c:	af00      	add	r7, sp, #0
 800eb9e:	60f8      	str	r0, [r7, #12]
 800eba0:	460b      	mov	r3, r1
 800eba2:	607a      	str	r2, [r7, #4]
 800eba4:	817b      	strh	r3, [r7, #10]
        return 0;
 800eba6:	2300      	movs	r3, #0
    }
 800eba8:	4618      	mov	r0, r3
 800ebaa:	3714      	adds	r7, #20
 800ebac:	46bd      	mov	sp, r7
 800ebae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ebb2:	4770      	bx	lr

0800ebb4 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    virtual const uint16_t* getGSUBTable() const
 800ebb4:	b480      	push	{r7}
 800ebb6:	b083      	sub	sp, #12
 800ebb8:	af00      	add	r7, sp, #0
 800ebba:	6078      	str	r0, [r7, #4]
        return 0;
 800ebbc:	2300      	movs	r3, #0
    }
 800ebbe:	4618      	mov	r0, r3
 800ebc0:	370c      	adds	r7, #12
 800ebc2:	46bd      	mov	sp, r7
 800ebc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ebc8:	4770      	bx	lr

0800ebca <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800ebca:	b480      	push	{r7}
 800ebcc:	b083      	sub	sp, #12
 800ebce:	af00      	add	r7, sp, #0
 800ebd0:	6078      	str	r0, [r7, #4]
        return 0;
 800ebd2:	2300      	movs	r3, #0
    }
 800ebd4:	4618      	mov	r0, r3
 800ebd6:	370c      	adds	r7, #12
 800ebd8:	46bd      	mov	sp, r7
 800ebda:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ebde:	4770      	bx	lr

0800ebe0 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
     *
     * @param  data A reference to the TypedTextData storage array.
     * @param  f    The fonts associated with the array.
     * @param  n    The number of typed texts in the array.
     */
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 800ebe0:	b480      	push	{r7}
 800ebe2:	b085      	sub	sp, #20
 800ebe4:	af00      	add	r7, sp, #0
 800ebe6:	60f8      	str	r0, [r7, #12]
 800ebe8:	60b9      	str	r1, [r7, #8]
 800ebea:	4613      	mov	r3, r2
 800ebec:	80fb      	strh	r3, [r7, #6]
    {
        typedTexts = data;
 800ebee:	4a07      	ldr	r2, [pc, #28]	@ (800ec0c <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 800ebf0:	68fb      	ldr	r3, [r7, #12]
 800ebf2:	6013      	str	r3, [r2, #0]
        fonts = f;
 800ebf4:	4a06      	ldr	r2, [pc, #24]	@ (800ec10 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 800ebf6:	68bb      	ldr	r3, [r7, #8]
 800ebf8:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 800ebfa:	4a06      	ldr	r2, [pc, #24]	@ (800ec14 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 800ebfc:	88fb      	ldrh	r3, [r7, #6]
 800ebfe:	8013      	strh	r3, [r2, #0]
    }
 800ec00:	bf00      	nop
 800ec02:	3714      	adds	r7, #20
 800ec04:	46bd      	mov	sp, r7
 800ec06:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ec0a:	4770      	bx	lr
 800ec0c:	24001a80 	.word	0x24001a80
 800ec10:	24001a88 	.word	0x24001a88
 800ec14:	24001a84 	.word	0x24001a84

0800ec18 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800ec18:	b40e      	push	{r1, r2, r3}
 800ec1a:	b580      	push	{r7, lr}
 800ec1c:	b085      	sub	sp, #20
 800ec1e:	af00      	add	r7, sp, #0
 800ec20:	6078      	str	r0, [r7, #4]
    va_list pArg;
    va_start(pArg, text);
 800ec22:	f107 0320 	add.w	r3, r7, #32
 800ec26:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800ec28:	68bb      	ldr	r3, [r7, #8]
 800ec2a:	69fa      	ldr	r2, [r7, #28]
 800ec2c:	2100      	movs	r1, #0
 800ec2e:	6878      	ldr	r0, [r7, #4]
 800ec30:	f006 fd70 	bl	8015714 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800ec34:	4603      	mov	r3, r0
 800ec36:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800ec38:	89fb      	ldrh	r3, [r7, #14]
}
 800ec3a:	4618      	mov	r0, r3
 800ec3c:	3714      	adds	r7, #20
 800ec3e:	46bd      	mov	sp, r7
 800ec40:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800ec44:	b003      	add	sp, #12
 800ec46:	4770      	bx	lr

0800ec48 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800ec48:	b40c      	push	{r2, r3}
 800ec4a:	b580      	push	{r7, lr}
 800ec4c:	b084      	sub	sp, #16
 800ec4e:	af00      	add	r7, sp, #0
 800ec50:	6078      	str	r0, [r7, #4]
 800ec52:	460b      	mov	r3, r1
 800ec54:	70fb      	strb	r3, [r7, #3]
    va_list pArg;
    va_start(pArg, text);
 800ec56:	f107 031c 	add.w	r3, r7, #28
 800ec5a:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800ec5c:	78f9      	ldrb	r1, [r7, #3]
 800ec5e:	68bb      	ldr	r3, [r7, #8]
 800ec60:	69ba      	ldr	r2, [r7, #24]
 800ec62:	6878      	ldr	r0, [r7, #4]
 800ec64:	f006 fd56 	bl	8015714 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800ec68:	4603      	mov	r3, r0
 800ec6a:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800ec6c:	89fb      	ldrh	r3, [r7, #14]
}
 800ec6e:	4618      	mov	r0, r3
 800ec70:	3710      	adds	r7, #16
 800ec72:	46bd      	mov	sp, r7
 800ec74:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800ec78:	b002      	add	sp, #8
 800ec7a:	4770      	bx	lr

0800ec7c <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
 800ec7c:	b580      	push	{r7, lr}
 800ec7e:	b08a      	sub	sp, #40	@ 0x28
 800ec80:	af00      	add	r7, sp, #0
 800ec82:	6078      	str	r0, [r7, #4]
 800ec84:	460b      	mov	r3, r1
 800ec86:	70fb      	strb	r3, [r7, #3]
    if (fontGsubTable && nextCharacters.peekChar())
 800ec88:	687b      	ldr	r3, [r7, #4]
 800ec8a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800ec8c:	2b00      	cmp	r3, #0
 800ec8e:	d016      	beq.n	800ecbe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800ec90:	687b      	ldr	r3, [r7, #4]
 800ec92:	3322      	adds	r3, #34	@ 0x22
 800ec94:	627b      	str	r3, [r7, #36]	@ 0x24
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800ec96:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ec98:	8adb      	ldrh	r3, [r3, #22]
 800ec9a:	2b00      	cmp	r3, #0
 800ec9c:	d105      	bne.n	800ecaa <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2e>
 800ec9e:	4b43      	ldr	r3, [pc, #268]	@ (800edac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800eca0:	4a43      	ldr	r2, [pc, #268]	@ (800edb0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800eca2:	21c5      	movs	r1, #197	@ 0xc5
 800eca4:	4843      	ldr	r0, [pc, #268]	@ (800edb4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800eca6:	f016 fdc1 	bl	802582c <__assert_func>
            return buffer[pos];
 800ecaa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ecac:	8a9b      	ldrh	r3, [r3, #20]
 800ecae:	461a      	mov	r2, r3
 800ecb0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800ecb2:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 800ecb6:	2b00      	cmp	r3, #0
 800ecb8:	d001      	beq.n	800ecbe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800ecba:	2301      	movs	r3, #1
 800ecbc:	e000      	b.n	800ecc0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x44>
 800ecbe:	2300      	movs	r3, #0
 800ecc0:	2b00      	cmp	r3, #0
 800ecc2:	d06a      	beq.n	800ed9a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
    {
        substituteGlyphs();
 800ecc4:	6878      	ldr	r0, [r7, #4]
 800ecc6:	f007 ffb3 	bl	8016c30 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800ecca:	687b      	ldr	r3, [r7, #4]
 800eccc:	3322      	adds	r3, #34	@ 0x22
 800ecce:	623b      	str	r3, [r7, #32]
 800ecd0:	2301      	movs	r3, #1
 800ecd2:	83fb      	strh	r3, [r7, #30]
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800ecd4:	6a3b      	ldr	r3, [r7, #32]
 800ecd6:	8adb      	ldrh	r3, [r3, #22]
 800ecd8:	8bfa      	ldrh	r2, [r7, #30]
 800ecda:	429a      	cmp	r2, r3
 800ecdc:	d305      	bcc.n	800ecea <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6e>
 800ecde:	4b36      	ldr	r3, [pc, #216]	@ (800edb8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x13c>)
 800ece0:	4a36      	ldr	r2, [pc, #216]	@ (800edbc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x140>)
 800ece2:	21cb      	movs	r1, #203	@ 0xcb
 800ece4:	4833      	ldr	r0, [pc, #204]	@ (800edb4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800ece6:	f016 fda1 	bl	802582c <__assert_func>
            const uint16_t index = pos + offset;
 800ecea:	6a3b      	ldr	r3, [r7, #32]
 800ecec:	8a9a      	ldrh	r2, [r3, #20]
 800ecee:	8bfb      	ldrh	r3, [r7, #30]
 800ecf0:	4413      	add	r3, r2
 800ecf2:	83bb      	strh	r3, [r7, #28]
            return buffer[index < size ? index : index - size];
 800ecf4:	8bbb      	ldrh	r3, [r7, #28]
 800ecf6:	2b09      	cmp	r3, #9
 800ecf8:	d801      	bhi.n	800ecfe <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x82>
 800ecfa:	8bbb      	ldrh	r3, [r7, #28]
 800ecfc:	e001      	b.n	800ed02 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x86>
 800ecfe:	8bbb      	ldrh	r3, [r7, #28]
 800ed00:	3b0a      	subs	r3, #10
 800ed02:	6a3a      	ldr	r2, [r7, #32]
 800ed04:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800ed08:	f640 123f 	movw	r2, #2367	@ 0x93f
 800ed0c:	4293      	cmp	r3, r2
 800ed0e:	bf0c      	ite	eq
 800ed10:	2301      	moveq	r3, #1
 800ed12:	2300      	movne	r3, #0
 800ed14:	b2db      	uxtb	r3, r3
 800ed16:	2b00      	cmp	r3, #0
 800ed18:	d03f      	beq.n	800ed9a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
 800ed1a:	687b      	ldr	r3, [r7, #4]
 800ed1c:	3322      	adds	r3, #34	@ 0x22
 800ed1e:	687a      	ldr	r2, [r7, #4]
 800ed20:	3222      	adds	r2, #34	@ 0x22
 800ed22:	60ba      	str	r2, [r7, #8]
            assert(used > 0);
 800ed24:	68ba      	ldr	r2, [r7, #8]
 800ed26:	8ad2      	ldrh	r2, [r2, #22]
 800ed28:	2a00      	cmp	r2, #0
 800ed2a:	d105      	bne.n	800ed38 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xbc>
 800ed2c:	4b1f      	ldr	r3, [pc, #124]	@ (800edac <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800ed2e:	4a20      	ldr	r2, [pc, #128]	@ (800edb0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800ed30:	21c5      	movs	r1, #197	@ 0xc5
 800ed32:	4820      	ldr	r0, [pc, #128]	@ (800edb4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800ed34:	f016 fd7a 	bl	802582c <__assert_func>
            return buffer[pos];
 800ed38:	68ba      	ldr	r2, [r7, #8]
 800ed3a:	8a92      	ldrh	r2, [r2, #20]
 800ed3c:	4611      	mov	r1, r2
 800ed3e:	68ba      	ldr	r2, [r7, #8]
 800ed40:	f832 2011 	ldrh.w	r2, [r2, r1, lsl #1]
 800ed44:	613b      	str	r3, [r7, #16]
 800ed46:	4613      	mov	r3, r2
 800ed48:	81fb      	strh	r3, [r7, #14]
            buffer[pos] = newChar;
        }

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
 800ed4a:	693b      	ldr	r3, [r7, #16]
 800ed4c:	8adb      	ldrh	r3, [r3, #22]
 800ed4e:	2b01      	cmp	r3, #1
 800ed50:	d806      	bhi.n	800ed60 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xe4>
 800ed52:	4b1b      	ldr	r3, [pc, #108]	@ (800edc0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x144>)
 800ed54:	4a1b      	ldr	r2, [pc, #108]	@ (800edc4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x148>)
 800ed56:	f44f 718e 	mov.w	r1, #284	@ 0x11c
 800ed5a:	4816      	ldr	r0, [pc, #88]	@ (800edb4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800ed5c:	f016 fd66 	bl	802582c <__assert_func>
            const uint16_t index = pos + 1;
 800ed60:	693b      	ldr	r3, [r7, #16]
 800ed62:	8a9b      	ldrh	r3, [r3, #20]
 800ed64:	3301      	adds	r3, #1
 800ed66:	81bb      	strh	r3, [r7, #12]
            buffer[index < size ? index : 0] = newChar;
 800ed68:	89bb      	ldrh	r3, [r7, #12]
 800ed6a:	2b09      	cmp	r3, #9
 800ed6c:	d801      	bhi.n	800ed72 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf6>
 800ed6e:	89bb      	ldrh	r3, [r7, #12]
 800ed70:	e000      	b.n	800ed74 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf8>
 800ed72:	2300      	movs	r3, #0
 800ed74:	693a      	ldr	r2, [r7, #16]
 800ed76:	89f9      	ldrh	r1, [r7, #14]
 800ed78:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
        }
 800ed7c:	bf00      	nop
            nextCharacters.replaceAt0(0x093F);
 800ed7e:	687b      	ldr	r3, [r7, #4]
 800ed80:	3322      	adds	r3, #34	@ 0x22
 800ed82:	61bb      	str	r3, [r7, #24]
 800ed84:	f640 133f 	movw	r3, #2367	@ 0x93f
 800ed88:	82fb      	strh	r3, [r7, #22]
            buffer[pos] = newChar;
 800ed8a:	69bb      	ldr	r3, [r7, #24]
 800ed8c:	8a9b      	ldrh	r3, [r3, #20]
 800ed8e:	4619      	mov	r1, r3
 800ed90:	69bb      	ldr	r3, [r7, #24]
 800ed92:	8afa      	ldrh	r2, [r7, #22]
 800ed94:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
        }
 800ed98:	bf00      	nop
        }
    }
    return getNextChar();
 800ed9a:	6878      	ldr	r0, [r7, #4]
 800ed9c:	f007 fe4a 	bl	8016a34 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800eda0:	4603      	mov	r3, r0
}
 800eda2:	4618      	mov	r0, r3
 800eda4:	3728      	adds	r7, #40	@ 0x28
 800eda6:	46bd      	mov	sp, r7
 800eda8:	bd80      	pop	{r7, pc}
 800edaa:	bf00      	nop
 800edac:	08026f6c 	.word	0x08026f6c
 800edb0:	08026f78 	.word	0x08026f78
 800edb4:	08027024 	.word	0x08027024
 800edb8:	0802706c 	.word	0x0802706c
 800edbc:	0802707c 	.word	0x0802707c
 800edc0:	08027150 	.word	0x08027150
 800edc4:	0802715c 	.word	0x0802715c

0800edc8 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 800edc8:	b580      	push	{r7, lr}
 800edca:	b082      	sub	sp, #8
 800edcc:	af00      	add	r7, sp, #0
 800edce:	6078      	str	r0, [r7, #4]
    fillInputBuffer();
 800edd0:	6878      	ldr	r0, [r7, #4]
 800edd2:	f007 fdf8 	bl	80169c6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
}
 800edd6:	bf00      	nop
 800edd8:	3708      	adds	r7, #8
 800edda:	46bd      	mov	sp, r7
 800eddc:	bd80      	pop	{r7, pc}

0800edde <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800edde:	b580      	push	{r7, lr}
 800ede0:	b088      	sub	sp, #32
 800ede2:	af02      	add	r7, sp, #8
 800ede4:	60f8      	str	r0, [r7, #12]
 800ede6:	1d38      	adds	r0, r7, #4
 800ede8:	e880 0006 	stmia.w	r0, {r1, r2}
 800edec:	603b      	str	r3, [r7, #0]
    va_list pArg;
    va_start(pArg, format);
 800edee:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800edf2:	617b      	str	r3, [r7, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800edf4:	1d39      	adds	r1, r7, #4
 800edf6:	697b      	ldr	r3, [r7, #20]
 800edf8:	9301      	str	r3, [sp, #4]
 800edfa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800edfc:	9300      	str	r3, [sp, #0]
 800edfe:	6a3b      	ldr	r3, [r7, #32]
 800ee00:	683a      	ldr	r2, [r7, #0]
 800ee02:	68f8      	ldr	r0, [r7, #12]
 800ee04:	f005 f896 	bl	8013f34 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800ee08:	bf00      	nop
 800ee0a:	3718      	adds	r7, #24
 800ee0c:	46bd      	mov	sp, r7
 800ee0e:	bd80      	pop	{r7, pc}

0800ee10 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800ee10:	b590      	push	{r4, r7, lr}
 800ee12:	b085      	sub	sp, #20
 800ee14:	af00      	add	r7, sp, #0
 800ee16:	4603      	mov	r3, r0
 800ee18:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 800ee1a:	2300      	movs	r3, #0
 800ee1c:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 800ee1e:	88fb      	ldrh	r3, [r7, #6]
 800ee20:	2b00      	cmp	r3, #0
 800ee22:	d127      	bne.n	800ee74 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 800ee24:	88fb      	ldrh	r3, [r7, #6]
 800ee26:	4a1e      	ldr	r2, [pc, #120]	@ (800eea0 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800ee28:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800ee2c:	2b00      	cmp	r3, #0
 800ee2e:	d016      	beq.n	800ee5e <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 800ee30:	88fb      	ldrh	r3, [r7, #6]
 800ee32:	4a1b      	ldr	r2, [pc, #108]	@ (800eea0 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800ee34:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800ee38:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800ee3a:	68bb      	ldr	r3, [r7, #8]
 800ee3c:	681b      	ldr	r3, [r3, #0]
 800ee3e:	68ba      	ldr	r2, [r7, #8]
 800ee40:	4413      	add	r3, r2
 800ee42:	4a18      	ldr	r2, [pc, #96]	@ (800eea4 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800ee44:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800ee46:	68bb      	ldr	r3, [r7, #8]
 800ee48:	685b      	ldr	r3, [r3, #4]
 800ee4a:	68ba      	ldr	r2, [r7, #8]
 800ee4c:	4413      	add	r3, r2
 800ee4e:	4a16      	ldr	r2, [pc, #88]	@ (800eea8 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800ee50:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800ee52:	68bb      	ldr	r3, [r7, #8]
 800ee54:	689b      	ldr	r3, [r3, #8]
 800ee56:	68ba      	ldr	r2, [r7, #8]
 800ee58:	4413      	add	r3, r2
 800ee5a:	60fb      	str	r3, [r7, #12]
 800ee5c:	e00a      	b.n	800ee74 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            // Compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 800ee5e:	4b11      	ldr	r3, [pc, #68]	@ (800eea4 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800ee60:	4a12      	ldr	r2, [pc, #72]	@ (800eeac <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 800ee62:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800ee64:	4a12      	ldr	r2, [pc, #72]	@ (800eeb0 <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 800ee66:	4b10      	ldr	r3, [pc, #64]	@ (800eea8 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800ee68:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800ee6a:	88fb      	ldrh	r3, [r7, #6]
 800ee6c:	4a11      	ldr	r2, [pc, #68]	@ (800eeb4 <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 800ee6e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800ee72:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 800ee74:	68fb      	ldr	r3, [r7, #12]
 800ee76:	2b00      	cmp	r3, #0
 800ee78:	d00d      	beq.n	800ee96 <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 800ee7a:	4a0f      	ldr	r2, [pc, #60]	@ (800eeb8 <_ZN8touchgfx5Texts11setLanguageEt+0xa8>)
 800ee7c:	88fb      	ldrh	r3, [r7, #6]
 800ee7e:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800ee80:	f000 f83e 	bl	800ef00 <_ZN17TypedTextDatabase8getFontsEv>
 800ee84:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800ee86:	f000 f833 	bl	800eef0 <_ZN17TypedTextDatabase15getInstanceSizeEv>
 800ee8a:	4603      	mov	r3, r0
 800ee8c:	461a      	mov	r2, r3
 800ee8e:	4621      	mov	r1, r4
 800ee90:	68f8      	ldr	r0, [r7, #12]
 800ee92:	f7ff fea5 	bl	800ebe0 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 800ee96:	bf00      	nop
 800ee98:	3714      	adds	r7, #20
 800ee9a:	46bd      	mov	sp, r7
 800ee9c:	bd90      	pop	{r4, r7, pc}
 800ee9e:	bf00      	nop
 800eea0:	240007c8 	.word	0x240007c8
 800eea4:	240007d0 	.word	0x240007d0
 800eea8:	240007d4 	.word	0x240007d4
 800eeac:	08028cb8 	.word	0x08028cb8
 800eeb0:	08028cb4 	.word	0x08028cb4
 800eeb4:	08028cc4 	.word	0x08028cc4
 800eeb8:	240007cc 	.word	0x240007cc

0800eebc <_ZNK8touchgfx5Texts7getTextEt>:
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
 800eebc:	b480      	push	{r7}
 800eebe:	b083      	sub	sp, #12
 800eec0:	af00      	add	r7, sp, #0
 800eec2:	6078      	str	r0, [r7, #4]
 800eec4:	460b      	mov	r3, r1
 800eec6:	807b      	strh	r3, [r7, #2]
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800eec8:	4b07      	ldr	r3, [pc, #28]	@ (800eee8 <_ZNK8touchgfx5Texts7getTextEt+0x2c>)
 800eeca:	681a      	ldr	r2, [r3, #0]
 800eecc:	4b07      	ldr	r3, [pc, #28]	@ (800eeec <_ZNK8touchgfx5Texts7getTextEt+0x30>)
 800eece:	6819      	ldr	r1, [r3, #0]
 800eed0:	887b      	ldrh	r3, [r7, #2]
 800eed2:	009b      	lsls	r3, r3, #2
 800eed4:	440b      	add	r3, r1
 800eed6:	681b      	ldr	r3, [r3, #0]
 800eed8:	005b      	lsls	r3, r3, #1
 800eeda:	4413      	add	r3, r2
}
 800eedc:	4618      	mov	r0, r3
 800eede:	370c      	adds	r7, #12
 800eee0:	46bd      	mov	sp, r7
 800eee2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eee6:	4770      	bx	lr
 800eee8:	240007d0 	.word	0x240007d0
 800eeec:	240007d4 	.word	0x240007d4

0800eef0 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 800eef0:	b480      	push	{r7}
 800eef2:	af00      	add	r7, sp, #0
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
 800eef4:	2301      	movs	r3, #1
}
 800eef6:	4618      	mov	r0, r3
 800eef8:	46bd      	mov	sp, r7
 800eefa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eefe:	4770      	bx	lr

0800ef00 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 800ef00:	b480      	push	{r7}
 800ef02:	af00      	add	r7, sp, #0
    return touchgfx_fonts;
 800ef04:	4b02      	ldr	r3, [pc, #8]	@ (800ef10 <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 800ef06:	4618      	mov	r0, r3
 800ef08:	46bd      	mov	sp, r7
 800ef0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ef0e:	4770      	bx	lr
 800ef10:	240007d8 	.word	0x240007d8

0800ef14 <_Z41__static_initialization_and_destruction_0ii>:
    case 3:
        touchgfx_fonts[3] = &(getFont_malgun_30_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800ef14:	b580      	push	{r7, lr}
 800ef16:	b082      	sub	sp, #8
 800ef18:	af00      	add	r7, sp, #0
 800ef1a:	6078      	str	r0, [r7, #4]
 800ef1c:	6039      	str	r1, [r7, #0]
 800ef1e:	687b      	ldr	r3, [r7, #4]
 800ef20:	2b01      	cmp	r3, #1
 800ef22:	d118      	bne.n	800ef56 <_Z41__static_initialization_and_destruction_0ii+0x42>
 800ef24:	683b      	ldr	r3, [r7, #0]
 800ef26:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800ef2a:	4293      	cmp	r3, r2
 800ef2c:	d113      	bne.n	800ef56 <_Z41__static_initialization_and_destruction_0ii+0x42>
    &(getFont_verdana_20_4bpp()),
 800ef2e:	f7fd fc89 	bl	800c844 <_Z23getFont_verdana_20_4bppv>
 800ef32:	4603      	mov	r3, r0
};
 800ef34:	4a0a      	ldr	r2, [pc, #40]	@ (800ef60 <_Z41__static_initialization_and_destruction_0ii+0x4c>)
 800ef36:	6013      	str	r3, [r2, #0]
    &(getFont_verdana_40_4bpp()),
 800ef38:	f7fd fcde 	bl	800c8f8 <_Z23getFont_verdana_40_4bppv>
 800ef3c:	4603      	mov	r3, r0
};
 800ef3e:	4a08      	ldr	r2, [pc, #32]	@ (800ef60 <_Z41__static_initialization_and_destruction_0ii+0x4c>)
 800ef40:	6053      	str	r3, [r2, #4]
    &(getFont_verdana_10_4bpp()),
 800ef42:	f7fd fc25 	bl	800c790 <_Z23getFont_verdana_10_4bppv>
 800ef46:	4603      	mov	r3, r0
};
 800ef48:	4a05      	ldr	r2, [pc, #20]	@ (800ef60 <_Z41__static_initialization_and_destruction_0ii+0x4c>)
 800ef4a:	6093      	str	r3, [r2, #8]
    &(getFont_malgun_30_4bpp())
 800ef4c:	f7fd fbc6 	bl	800c6dc <_Z22getFont_malgun_30_4bppv>
 800ef50:	4603      	mov	r3, r0
};
 800ef52:	4a03      	ldr	r2, [pc, #12]	@ (800ef60 <_Z41__static_initialization_and_destruction_0ii+0x4c>)
 800ef54:	60d3      	str	r3, [r2, #12]
} // namespace TypedTextDatabase
 800ef56:	bf00      	nop
 800ef58:	3708      	adds	r7, #8
 800ef5a:	46bd      	mov	sp, r7
 800ef5c:	bd80      	pop	{r7, pc}
 800ef5e:	bf00      	nop
 800ef60:	240007d8 	.word	0x240007d8

0800ef64 <_GLOBAL__sub_I_touchgfx_fonts>:
 800ef64:	b580      	push	{r7, lr}
 800ef66:	af00      	add	r7, sp, #0
 800ef68:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800ef6c:	2001      	movs	r0, #1
 800ef6e:	f7ff ffd1 	bl	800ef14 <_Z41__static_initialization_and_destruction_0ii>
 800ef72:	bd80      	pop	{r7, pc}

0800ef74 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800ef74:	b580      	push	{r7, lr}
 800ef76:	b082      	sub	sp, #8
 800ef78:	af00      	add	r7, sp, #0
 800ef7a:	6078      	str	r0, [r7, #4]
 800ef7c:	4a05      	ldr	r2, [pc, #20]	@ (800ef94 <_ZN19FrontendApplicationD1Ev+0x20>)
 800ef7e:	687b      	ldr	r3, [r7, #4]
 800ef80:	601a      	str	r2, [r3, #0]
 800ef82:	687b      	ldr	r3, [r7, #4]
 800ef84:	4618      	mov	r0, r3
 800ef86:	f7fd ff17 	bl	800cdb8 <_ZN23FrontendApplicationBaseD1Ev>
 800ef8a:	687b      	ldr	r3, [r7, #4]
 800ef8c:	4618      	mov	r0, r3
 800ef8e:	3708      	adds	r7, #8
 800ef90:	46bd      	mov	sp, r7
 800ef92:	bd80      	pop	{r7, pc}
 800ef94:	08027dac 	.word	0x08027dac

0800ef98 <_ZN19FrontendApplicationD0Ev>:
 800ef98:	b580      	push	{r7, lr}
 800ef9a:	b082      	sub	sp, #8
 800ef9c:	af00      	add	r7, sp, #0
 800ef9e:	6078      	str	r0, [r7, #4]
 800efa0:	6878      	ldr	r0, [r7, #4]
 800efa2:	f7ff ffe7 	bl	800ef74 <_ZN19FrontendApplicationD1Ev>
 800efa6:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 800efaa:	6878      	ldr	r0, [r7, #4]
 800efac:	f016 fc0f 	bl	80257ce <_ZdlPvj>
 800efb0:	687b      	ldr	r3, [r7, #4]
 800efb2:	4618      	mov	r0, r3
 800efb4:	3708      	adds	r7, #8
 800efb6:	46bd      	mov	sp, r7
 800efb8:	bd80      	pop	{r7, pc}

0800efba <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800efba:	b580      	push	{r7, lr}
 800efbc:	b082      	sub	sp, #8
 800efbe:	af00      	add	r7, sp, #0
 800efc0:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 800efc2:	687b      	ldr	r3, [r7, #4]
 800efc4:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 800efc8:	4618      	mov	r0, r3
 800efca:	f000 f82d 	bl	800f028 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800efce:	687b      	ldr	r3, [r7, #4]
 800efd0:	4618      	mov	r0, r3
 800efd2:	f005 fca3 	bl	801491c <_ZN8touchgfx11Application15handleTickEventEv>
    }
 800efd6:	bf00      	nop
 800efd8:	3708      	adds	r7, #8
 800efda:	46bd      	mov	sp, r7
 800efdc:	bd80      	pop	{r7, pc}
	...

0800efe0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800efe0:	b580      	push	{r7, lr}
 800efe2:	b084      	sub	sp, #16
 800efe4:	af00      	add	r7, sp, #0
 800efe6:	60f8      	str	r0, [r7, #12]
 800efe8:	60b9      	str	r1, [r7, #8]
 800efea:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 800efec:	68fb      	ldr	r3, [r7, #12]
 800efee:	687a      	ldr	r2, [r7, #4]
 800eff0:	68b9      	ldr	r1, [r7, #8]
 800eff2:	4618      	mov	r0, r3
 800eff4:	f7fd ff30 	bl	800ce58 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800eff8:	4a03      	ldr	r2, [pc, #12]	@ (800f008 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 800effa:	68fb      	ldr	r3, [r7, #12]
 800effc:	601a      	str	r2, [r3, #0]
{

}
 800effe:	68fb      	ldr	r3, [r7, #12]
 800f000:	4618      	mov	r0, r3
 800f002:	3710      	adds	r7, #16
 800f004:	46bd      	mov	sp, r7
 800f006:	bd80      	pop	{r7, pc}
 800f008:	08027dac 	.word	0x08027dac

0800f00c <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 800f00c:	b480      	push	{r7}
 800f00e:	b083      	sub	sp, #12
 800f010:	af00      	add	r7, sp, #0
 800f012:	6078      	str	r0, [r7, #4]
 800f014:	687b      	ldr	r3, [r7, #4]
 800f016:	2200      	movs	r2, #0
 800f018:	601a      	str	r2, [r3, #0]
{

}
 800f01a:	687b      	ldr	r3, [r7, #4]
 800f01c:	4618      	mov	r0, r3
 800f01e:	370c      	adds	r7, #12
 800f020:	46bd      	mov	sp, r7
 800f022:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f026:	4770      	bx	lr

0800f028 <_ZN5Model4tickEv>:

void Model::tick()
{
 800f028:	b480      	push	{r7}
 800f02a:	b083      	sub	sp, #12
 800f02c:	af00      	add	r7, sp, #0
 800f02e:	6078      	str	r0, [r7, #4]

}
 800f030:	bf00      	nop
 800f032:	370c      	adds	r7, #12
 800f034:	46bd      	mov	sp, r7
 800f036:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f03a:	4770      	bx	lr

0800f03c <_ZN8touchgfx9Presenter8activateEv>:
     * Place initialization code for the Presenter here.
     *
     * The activate function is called automatically when a screen transition causes this
     * Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 800f03c:	b480      	push	{r7}
 800f03e:	b083      	sub	sp, #12
 800f040:	af00      	add	r7, sp, #0
 800f042:	6078      	str	r0, [r7, #4]
    {
    }
 800f044:	bf00      	nop
 800f046:	370c      	adds	r7, #12
 800f048:	46bd      	mov	sp, r7
 800f04a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f04e:	4770      	bx	lr

0800f050 <_ZN8touchgfx9Presenter10deactivateEv>:
     * Place cleanup code for the Presenter here.
     *
     * The deactivate function is called automatically when a screen transition causes this
     * Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 800f050:	b480      	push	{r7}
 800f052:	b083      	sub	sp, #12
 800f054:	af00      	add	r7, sp, #0
 800f056:	6078      	str	r0, [r7, #4]
    {
    }
 800f058:	bf00      	nop
 800f05a:	370c      	adds	r7, #12
 800f05c:	46bd      	mov	sp, r7
 800f05e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f062:	4770      	bx	lr

0800f064 <_ZN8touchgfx9PresenterD1Ev>:

    /** Finalizes an instance of the Presenter class. */
    virtual ~Presenter()
 800f064:	b480      	push	{r7}
 800f066:	b083      	sub	sp, #12
 800f068:	af00      	add	r7, sp, #0
 800f06a:	6078      	str	r0, [r7, #4]
    {
 800f06c:	4a04      	ldr	r2, [pc, #16]	@ (800f080 <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 800f06e:	687b      	ldr	r3, [r7, #4]
 800f070:	601a      	str	r2, [r3, #0]
    }
 800f072:	687b      	ldr	r3, [r7, #4]
 800f074:	4618      	mov	r0, r3
 800f076:	370c      	adds	r7, #12
 800f078:	46bd      	mov	sp, r7
 800f07a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f07e:	4770      	bx	lr
 800f080:	08027e38 	.word	0x08027e38

0800f084 <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 800f084:	b580      	push	{r7, lr}
 800f086:	b082      	sub	sp, #8
 800f088:	af00      	add	r7, sp, #0
 800f08a:	6078      	str	r0, [r7, #4]
    }
 800f08c:	6878      	ldr	r0, [r7, #4]
 800f08e:	f7ff ffe9 	bl	800f064 <_ZN8touchgfx9PresenterD1Ev>
 800f092:	2104      	movs	r1, #4
 800f094:	6878      	ldr	r0, [r7, #4]
 800f096:	f016 fb9a 	bl	80257ce <_ZdlPvj>
 800f09a:	687b      	ldr	r3, [r7, #4]
 800f09c:	4618      	mov	r0, r3
 800f09e:	3708      	adds	r7, #8
 800f0a0:	46bd      	mov	sp, r7
 800f0a2:	bd80      	pop	{r7, pc}

0800f0a4 <_ZN8touchgfx9PresenterC1Ev>:

protected:
    /** Initializes a new instance of the Presenter class. */
    Presenter()
 800f0a4:	b480      	push	{r7}
 800f0a6:	b083      	sub	sp, #12
 800f0a8:	af00      	add	r7, sp, #0
 800f0aa:	6078      	str	r0, [r7, #4]
    {
 800f0ac:	4a04      	ldr	r2, [pc, #16]	@ (800f0c0 <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 800f0ae:	687b      	ldr	r3, [r7, #4]
 800f0b0:	601a      	str	r2, [r3, #0]
    }
 800f0b2:	687b      	ldr	r3, [r7, #4]
 800f0b4:	4618      	mov	r0, r3
 800f0b6:	370c      	adds	r7, #12
 800f0b8:	46bd      	mov	sp, r7
 800f0ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f0be:	4770      	bx	lr
 800f0c0:	08027e38 	.word	0x08027e38

0800f0c4 <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 800f0c4:	b480      	push	{r7}
 800f0c6:	b083      	sub	sp, #12
 800f0c8:	af00      	add	r7, sp, #0
 800f0ca:	6078      	str	r0, [r7, #4]
 800f0cc:	4a06      	ldr	r2, [pc, #24]	@ (800f0e8 <_ZN13ModelListenerC1Ev+0x24>)
 800f0ce:	687b      	ldr	r3, [r7, #4]
 800f0d0:	601a      	str	r2, [r3, #0]
 800f0d2:	687b      	ldr	r3, [r7, #4]
 800f0d4:	2200      	movs	r2, #0
 800f0d6:	605a      	str	r2, [r3, #4]
 800f0d8:	687b      	ldr	r3, [r7, #4]
 800f0da:	4618      	mov	r0, r3
 800f0dc:	370c      	adds	r7, #12
 800f0de:	46bd      	mov	sp, r7
 800f0e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f0e4:	4770      	bx	lr
 800f0e6:	bf00      	nop
 800f0e8:	08027e28 	.word	0x08027e28

0800f0ec <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 800f0ec:	b480      	push	{r7}
 800f0ee:	b083      	sub	sp, #12
 800f0f0:	af00      	add	r7, sp, #0
 800f0f2:	6078      	str	r0, [r7, #4]
 800f0f4:	4a04      	ldr	r2, [pc, #16]	@ (800f108 <_ZN13ModelListenerD1Ev+0x1c>)
 800f0f6:	687b      	ldr	r3, [r7, #4]
 800f0f8:	601a      	str	r2, [r3, #0]
 800f0fa:	687b      	ldr	r3, [r7, #4]
 800f0fc:	4618      	mov	r0, r3
 800f0fe:	370c      	adds	r7, #12
 800f100:	46bd      	mov	sp, r7
 800f102:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f106:	4770      	bx	lr
 800f108:	08027e28 	.word	0x08027e28

0800f10c <_ZN13ModelListenerD0Ev>:
 800f10c:	b580      	push	{r7, lr}
 800f10e:	b082      	sub	sp, #8
 800f110:	af00      	add	r7, sp, #0
 800f112:	6078      	str	r0, [r7, #4]
 800f114:	6878      	ldr	r0, [r7, #4]
 800f116:	f7ff ffe9 	bl	800f0ec <_ZN13ModelListenerD1Ev>
 800f11a:	2108      	movs	r1, #8
 800f11c:	6878      	ldr	r0, [r7, #4]
 800f11e:	f016 fb56 	bl	80257ce <_ZdlPvj>
 800f122:	687b      	ldr	r3, [r7, #4]
 800f124:	4618      	mov	r0, r3
 800f126:	3708      	adds	r7, #8
 800f128:	46bd      	mov	sp, r7
 800f12a:	bd80      	pop	{r7, pc}

0800f12c <_ZN15screenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screenPresenter() {}
 800f12c:	b580      	push	{r7, lr}
 800f12e:	b082      	sub	sp, #8
 800f130:	af00      	add	r7, sp, #0
 800f132:	6078      	str	r0, [r7, #4]
 800f134:	4a09      	ldr	r2, [pc, #36]	@ (800f15c <_ZN15screenPresenterD1Ev+0x30>)
 800f136:	687b      	ldr	r3, [r7, #4]
 800f138:	601a      	str	r2, [r3, #0]
 800f13a:	4a09      	ldr	r2, [pc, #36]	@ (800f160 <_ZN15screenPresenterD1Ev+0x34>)
 800f13c:	687b      	ldr	r3, [r7, #4]
 800f13e:	605a      	str	r2, [r3, #4]
 800f140:	687b      	ldr	r3, [r7, #4]
 800f142:	3304      	adds	r3, #4
 800f144:	4618      	mov	r0, r3
 800f146:	f7ff ffd1 	bl	800f0ec <_ZN13ModelListenerD1Ev>
 800f14a:	687b      	ldr	r3, [r7, #4]
 800f14c:	4618      	mov	r0, r3
 800f14e:	f7ff ff89 	bl	800f064 <_ZN8touchgfx9PresenterD1Ev>
 800f152:	687b      	ldr	r3, [r7, #4]
 800f154:	4618      	mov	r0, r3
 800f156:	3708      	adds	r7, #8
 800f158:	46bd      	mov	sp, r7
 800f15a:	bd80      	pop	{r7, pc}
 800f15c:	08027e00 	.word	0x08027e00
 800f160:	08027e18 	.word	0x08027e18

0800f164 <_ZThn4_N15screenPresenterD1Ev>:
 800f164:	f1a0 0004 	sub.w	r0, r0, #4
 800f168:	e7e0      	b.n	800f12c <_ZN15screenPresenterD1Ev>
 800f16a:	bf00      	nop

0800f16c <_ZN15screenPresenterD0Ev>:
 800f16c:	b580      	push	{r7, lr}
 800f16e:	b082      	sub	sp, #8
 800f170:	af00      	add	r7, sp, #0
 800f172:	6078      	str	r0, [r7, #4]
 800f174:	6878      	ldr	r0, [r7, #4]
 800f176:	f7ff ffd9 	bl	800f12c <_ZN15screenPresenterD1Ev>
 800f17a:	2110      	movs	r1, #16
 800f17c:	6878      	ldr	r0, [r7, #4]
 800f17e:	f016 fb26 	bl	80257ce <_ZdlPvj>
 800f182:	687b      	ldr	r3, [r7, #4]
 800f184:	4618      	mov	r0, r3
 800f186:	3708      	adds	r7, #8
 800f188:	46bd      	mov	sp, r7
 800f18a:	bd80      	pop	{r7, pc}

0800f18c <_ZThn4_N15screenPresenterD0Ev>:
 800f18c:	f1a0 0004 	sub.w	r0, r0, #4
 800f190:	e7ec      	b.n	800f16c <_ZN15screenPresenterD0Ev>
	...

0800f194 <_ZN15screenPresenterC1ER10screenView>:
#include <gui/screen_screen/screenView.hpp>
#include <gui/screen_screen/screenPresenter.hpp>

screenPresenter::screenPresenter(screenView& v)
 800f194:	b580      	push	{r7, lr}
 800f196:	b082      	sub	sp, #8
 800f198:	af00      	add	r7, sp, #0
 800f19a:	6078      	str	r0, [r7, #4]
 800f19c:	6039      	str	r1, [r7, #0]
    : view(v)
 800f19e:	687b      	ldr	r3, [r7, #4]
 800f1a0:	4618      	mov	r0, r3
 800f1a2:	f7ff ff7f 	bl	800f0a4 <_ZN8touchgfx9PresenterC1Ev>
 800f1a6:	687b      	ldr	r3, [r7, #4]
 800f1a8:	3304      	adds	r3, #4
 800f1aa:	4618      	mov	r0, r3
 800f1ac:	f7ff ff8a 	bl	800f0c4 <_ZN13ModelListenerC1Ev>
 800f1b0:	4a06      	ldr	r2, [pc, #24]	@ (800f1cc <_ZN15screenPresenterC1ER10screenView+0x38>)
 800f1b2:	687b      	ldr	r3, [r7, #4]
 800f1b4:	601a      	str	r2, [r3, #0]
 800f1b6:	4a06      	ldr	r2, [pc, #24]	@ (800f1d0 <_ZN15screenPresenterC1ER10screenView+0x3c>)
 800f1b8:	687b      	ldr	r3, [r7, #4]
 800f1ba:	605a      	str	r2, [r3, #4]
 800f1bc:	687b      	ldr	r3, [r7, #4]
 800f1be:	683a      	ldr	r2, [r7, #0]
 800f1c0:	60da      	str	r2, [r3, #12]
{

}
 800f1c2:	687b      	ldr	r3, [r7, #4]
 800f1c4:	4618      	mov	r0, r3
 800f1c6:	3708      	adds	r7, #8
 800f1c8:	46bd      	mov	sp, r7
 800f1ca:	bd80      	pop	{r7, pc}
 800f1cc:	08027e00 	.word	0x08027e00
 800f1d0:	08027e18 	.word	0x08027e18

0800f1d4 <_ZN15screenPresenter8activateEv>:

void screenPresenter::activate()
{
 800f1d4:	b480      	push	{r7}
 800f1d6:	b083      	sub	sp, #12
 800f1d8:	af00      	add	r7, sp, #0
 800f1da:	6078      	str	r0, [r7, #4]

}
 800f1dc:	bf00      	nop
 800f1de:	370c      	adds	r7, #12
 800f1e0:	46bd      	mov	sp, r7
 800f1e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f1e6:	4770      	bx	lr

0800f1e8 <_ZN15screenPresenter10deactivateEv>:

void screenPresenter::deactivate()
{
 800f1e8:	b480      	push	{r7}
 800f1ea:	b083      	sub	sp, #12
 800f1ec:	af00      	add	r7, sp, #0
 800f1ee:	6078      	str	r0, [r7, #4]

}
 800f1f0:	bf00      	nop
 800f1f2:	370c      	adds	r7, #12
 800f1f4:	46bd      	mov	sp, r7
 800f1f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f1fa:	4770      	bx	lr

0800f1fc <_ZN8touchgfx8Drawable10setVisibleEb>:
    void setVisible(bool vis)
 800f1fc:	b480      	push	{r7}
 800f1fe:	b083      	sub	sp, #12
 800f200:	af00      	add	r7, sp, #0
 800f202:	6078      	str	r0, [r7, #4]
 800f204:	460b      	mov	r3, r1
 800f206:	70fb      	strb	r3, [r7, #3]
        visible = vis;
 800f208:	687b      	ldr	r3, [r7, #4]
 800f20a:	78fa      	ldrb	r2, [r7, #3]
 800f20c:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
    }
 800f210:	bf00      	nop
 800f212:	370c      	adds	r7, #12
 800f214:	46bd      	mov	sp, r7
 800f216:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f21a:	4770      	bx	lr

0800f21c <_ZNK8touchgfx13AnimatedImage22isAnimatedImageRunningEv>:
    /**
     * Gets the running state of the AnimatedImage.
     *
     * @return true if the animation is currently running, false otherwise.
     */
    bool isAnimatedImageRunning() const
 800f21c:	b480      	push	{r7}
 800f21e:	b083      	sub	sp, #12
 800f220:	af00      	add	r7, sp, #0
 800f222:	6078      	str	r0, [r7, #4]
    {
        return running;
 800f224:	687b      	ldr	r3, [r7, #4]
 800f226:	f893 3038 	ldrb.w	r3, [r3, #56]	@ 0x38
    }
 800f22a:	4618      	mov	r0, r3
 800f22c:	370c      	adds	r7, #12
 800f22e:	46bd      	mov	sp, r7
 800f230:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f234:	4770      	bx	lr
	...

0800f238 <_ZN10screenViewD1Ev>:

class screenView : public screenViewBase
{
public:
    screenView();
    virtual ~screenView() {}
 800f238:	b580      	push	{r7, lr}
 800f23a:	b082      	sub	sp, #8
 800f23c:	af00      	add	r7, sp, #0
 800f23e:	6078      	str	r0, [r7, #4]
 800f240:	4a05      	ldr	r2, [pc, #20]	@ (800f258 <_ZN10screenViewD1Ev+0x20>)
 800f242:	687b      	ldr	r3, [r7, #4]
 800f244:	601a      	str	r2, [r3, #0]
 800f246:	687b      	ldr	r3, [r7, #4]
 800f248:	4618      	mov	r0, r3
 800f24a:	f7ff f999 	bl	800e580 <_ZN14screenViewBaseD1Ev>
 800f24e:	687b      	ldr	r3, [r7, #4]
 800f250:	4618      	mov	r0, r3
 800f252:	3708      	adds	r7, #8
 800f254:	46bd      	mov	sp, r7
 800f256:	bd80      	pop	{r7, pc}
 800f258:	08027e58 	.word	0x08027e58

0800f25c <_ZN10screenViewD0Ev>:
 800f25c:	b580      	push	{r7, lr}
 800f25e:	b082      	sub	sp, #8
 800f260:	af00      	add	r7, sp, #0
 800f262:	6078      	str	r0, [r7, #4]
 800f264:	6878      	ldr	r0, [r7, #4]
 800f266:	f7ff ffe7 	bl	800f238 <_ZN10screenViewD1Ev>
 800f26a:	f44f 71e8 	mov.w	r1, #464	@ 0x1d0
 800f26e:	6878      	ldr	r0, [r7, #4]
 800f270:	f016 faad 	bl	80257ce <_ZdlPvj>
 800f274:	687b      	ldr	r3, [r7, #4]
 800f276:	4618      	mov	r0, r3
 800f278:	3708      	adds	r7, #8
 800f27a:	46bd      	mov	sp, r7
 800f27c:	bd80      	pop	{r7, pc}
	...

0800f280 <_ZN10screenViewC1Ev>:
#include <gui/screen_screen/screenView.hpp>

screenView::screenView()
 800f280:	b580      	push	{r7, lr}
 800f282:	b082      	sub	sp, #8
 800f284:	af00      	add	r7, sp, #0
 800f286:	6078      	str	r0, [r7, #4]
 800f288:	687b      	ldr	r3, [r7, #4]
 800f28a:	4618      	mov	r0, r3
 800f28c:	f7fe ff56 	bl	800e13c <_ZN14screenViewBaseC1Ev>
 800f290:	4a03      	ldr	r2, [pc, #12]	@ (800f2a0 <_ZN10screenViewC1Ev+0x20>)
 800f292:	687b      	ldr	r3, [r7, #4]
 800f294:	601a      	str	r2, [r3, #0]
{

}
 800f296:	687b      	ldr	r3, [r7, #4]
 800f298:	4618      	mov	r0, r3
 800f29a:	3708      	adds	r7, #8
 800f29c:	46bd      	mov	sp, r7
 800f29e:	bd80      	pop	{r7, pc}
 800f2a0:	08027e58 	.word	0x08027e58

0800f2a4 <_ZN10screenView11setupScreenEv>:

void screenView::setupScreen()
{
 800f2a4:	b580      	push	{r7, lr}
 800f2a6:	b082      	sub	sp, #8
 800f2a8:	af00      	add	r7, sp, #0
 800f2aa:	6078      	str	r0, [r7, #4]
    screenViewBase::setupScreen();
 800f2ac:	687b      	ldr	r3, [r7, #4]
 800f2ae:	4618      	mov	r0, r3
 800f2b0:	f7ff f9af 	bl	800e612 <_ZN14screenViewBase11setupScreenEv>
}
 800f2b4:	bf00      	nop
 800f2b6:	3708      	adds	r7, #8
 800f2b8:	46bd      	mov	sp, r7
 800f2ba:	bd80      	pop	{r7, pc}

0800f2bc <_ZN10screenView14tearDownScreenEv>:

void screenView::tearDownScreen()
{
 800f2bc:	b580      	push	{r7, lr}
 800f2be:	b082      	sub	sp, #8
 800f2c0:	af00      	add	r7, sp, #0
 800f2c2:	6078      	str	r0, [r7, #4]
    screenViewBase::tearDownScreen();
 800f2c4:	687b      	ldr	r3, [r7, #4]
 800f2c6:	4618      	mov	r0, r3
 800f2c8:	f7fe fb3c 	bl	800d944 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 800f2cc:	bf00      	nop
 800f2ce:	3708      	adds	r7, #8
 800f2d0:	46bd      	mov	sp, r7
 800f2d2:	bd80      	pop	{r7, pc}

0800f2d4 <_ZN10screenView6changeEv>:

void screenView::change(void)
{
 800f2d4:	b590      	push	{r4, r7, lr}
 800f2d6:	b085      	sub	sp, #20
 800f2d8:	af00      	add	r7, sp, #0
 800f2da:	6078      	str	r0, [r7, #4]
    BITMAP_HOT_ID,
    BITMAP_MAXRESDEFAULT_ID,
    BITMAP_OMG_ID
  };

  if (cnt < 3)
 800f2dc:	4b1e      	ldr	r3, [pc, #120]	@ (800f358 <_ZN10screenView6changeEv+0x84>)
 800f2de:	781b      	ldrb	r3, [r3, #0]
 800f2e0:	2b02      	cmp	r3, #2
 800f2e2:	d806      	bhi.n	800f2f2 <_ZN10screenView6changeEv+0x1e>
  {
    cnt++;
 800f2e4:	4b1c      	ldr	r3, [pc, #112]	@ (800f358 <_ZN10screenView6changeEv+0x84>)
 800f2e6:	781b      	ldrb	r3, [r3, #0]
 800f2e8:	3301      	adds	r3, #1
 800f2ea:	b2da      	uxtb	r2, r3
 800f2ec:	4b1a      	ldr	r3, [pc, #104]	@ (800f358 <_ZN10screenView6changeEv+0x84>)
 800f2ee:	701a      	strb	r2, [r3, #0]
 800f2f0:	e002      	b.n	800f2f8 <_ZN10screenView6changeEv+0x24>
  }
  else
  {
    cnt = 0;
 800f2f2:	4b19      	ldr	r3, [pc, #100]	@ (800f358 <_ZN10screenView6changeEv+0x84>)
 800f2f4:	2200      	movs	r2, #0
 800f2f6:	701a      	strb	r2, [r3, #0]
  }

  img.setVisible(false);
 800f2f8:	687b      	ldr	r3, [r7, #4]
 800f2fa:	33e0      	adds	r3, #224	@ 0xe0
 800f2fc:	2100      	movs	r1, #0
 800f2fe:	4618      	mov	r0, r3
 800f300:	f7ff ff7c 	bl	800f1fc <_ZN8touchgfx8Drawable10setVisibleEb>
  img.invalidate();
 800f304:	687b      	ldr	r3, [r7, #4]
 800f306:	33e0      	adds	r3, #224	@ 0xe0
 800f308:	4618      	mov	r0, r3
 800f30a:	f006 fb2e 	bl	801596a <_ZNK8touchgfx8Drawable10invalidateEv>

  img.setBitmap(bitmap_id[cnt]);
 800f30e:	687b      	ldr	r3, [r7, #4]
 800f310:	f103 04e0 	add.w	r4, r3, #224	@ 0xe0
 800f314:	4b10      	ldr	r3, [pc, #64]	@ (800f358 <_ZN10screenView6changeEv+0x84>)
 800f316:	781b      	ldrb	r3, [r3, #0]
 800f318:	461a      	mov	r2, r3
 800f31a:	4b10      	ldr	r3, [pc, #64]	@ (800f35c <_ZN10screenView6changeEv+0x88>)
 800f31c:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 800f320:	f107 030c 	add.w	r3, r7, #12
 800f324:	4611      	mov	r1, r2
 800f326:	4618      	mov	r0, r3
 800f328:	f7fe f8c0 	bl	800d4ac <_ZN8touchgfx6BitmapC1Et>
 800f32c:	f107 030c 	add.w	r3, r7, #12
 800f330:	4619      	mov	r1, r3
 800f332:	4620      	mov	r0, r4
 800f334:	f003 fc55 	bl	8012be2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
  img.setVisible(true);
 800f338:	687b      	ldr	r3, [r7, #4]
 800f33a:	33e0      	adds	r3, #224	@ 0xe0
 800f33c:	2101      	movs	r1, #1
 800f33e:	4618      	mov	r0, r3
 800f340:	f7ff ff5c 	bl	800f1fc <_ZN8touchgfx8Drawable10setVisibleEb>
  img.invalidate();
 800f344:	687b      	ldr	r3, [r7, #4]
 800f346:	33e0      	adds	r3, #224	@ 0xe0
 800f348:	4618      	mov	r0, r3
 800f34a:	f006 fb0e 	bl	801596a <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800f34e:	bf00      	nop
 800f350:	3714      	adds	r7, #20
 800f352:	46bd      	mov	sp, r7
 800f354:	bd90      	pop	{r4, r7, pc}
 800f356:	bf00      	nop
 800f358:	240007e8 	.word	0x240007e8
 800f35c:	08027e48 	.word	0x08027e48

0800f360 <_ZN10screenView15handleTickEventEv>:

void screenView::handleTickEvent(void)
{
 800f360:	b580      	push	{r7, lr}
 800f362:	b082      	sub	sp, #8
 800f364:	af00      	add	r7, sp, #0
 800f366:	6078      	str	r0, [r7, #4]
  if (!animatedImage1.isAnimatedImageRunning() && animatedImage1.isVisible())
 800f368:	687b      	ldr	r3, [r7, #4]
 800f36a:	f503 73c2 	add.w	r3, r3, #388	@ 0x184
 800f36e:	4618      	mov	r0, r3
 800f370:	f7ff ff54 	bl	800f21c <_ZNK8touchgfx13AnimatedImage22isAnimatedImageRunningEv>
 800f374:	4603      	mov	r3, r0
 800f376:	f083 0301 	eor.w	r3, r3, #1
 800f37a:	b2db      	uxtb	r3, r3
 800f37c:	2b00      	cmp	r3, #0
 800f37e:	d00a      	beq.n	800f396 <_ZN10screenView15handleTickEventEv+0x36>
 800f380:	687b      	ldr	r3, [r7, #4]
 800f382:	f503 73c2 	add.w	r3, r3, #388	@ 0x184
 800f386:	4618      	mov	r0, r3
 800f388:	f7fe f9f8 	bl	800d77c <_ZNK8touchgfx8Drawable9isVisibleEv>
 800f38c:	4603      	mov	r3, r0
 800f38e:	2b00      	cmp	r3, #0
 800f390:	d001      	beq.n	800f396 <_ZN10screenView15handleTickEventEv+0x36>
 800f392:	2301      	movs	r3, #1
 800f394:	e000      	b.n	800f398 <_ZN10screenView15handleTickEventEv+0x38>
 800f396:	2300      	movs	r3, #0
 800f398:	2b00      	cmp	r3, #0
 800f39a:	d00c      	beq.n	800f3b6 <_ZN10screenView15handleTickEventEv+0x56>
  {
    animatedImage1.setVisible(false);
 800f39c:	687b      	ldr	r3, [r7, #4]
 800f39e:	f503 73c2 	add.w	r3, r3, #388	@ 0x184
 800f3a2:	2100      	movs	r1, #0
 800f3a4:	4618      	mov	r0, r3
 800f3a6:	f7ff ff29 	bl	800f1fc <_ZN8touchgfx8Drawable10setVisibleEb>
    animatedImage1.invalidate();
 800f3aa:	687b      	ldr	r3, [r7, #4]
 800f3ac:	f503 73c2 	add.w	r3, r3, #388	@ 0x184
 800f3b0:	4618      	mov	r0, r3
 800f3b2:	f006 fada 	bl	801596a <_ZNK8touchgfx8Drawable10invalidateEv>
  }
}
 800f3b6:	bf00      	nop
 800f3b8:	3708      	adds	r7, #8
 800f3ba:	46bd      	mov	sp, r7
 800f3bc:	bd80      	pop	{r7, pc}
	...

0800f3c0 <_ZN8touchgfx15TouchControllerD1Ev>:
/** Basic Touch Controller interface. */
class TouchController
{
public:
    /** Finalizes an instance of the TouchController class. */
    virtual ~TouchController()
 800f3c0:	b480      	push	{r7}
 800f3c2:	b083      	sub	sp, #12
 800f3c4:	af00      	add	r7, sp, #0
 800f3c6:	6078      	str	r0, [r7, #4]
    {
 800f3c8:	4a04      	ldr	r2, [pc, #16]	@ (800f3dc <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 800f3ca:	687b      	ldr	r3, [r7, #4]
 800f3cc:	601a      	str	r2, [r3, #0]
    }
 800f3ce:	687b      	ldr	r3, [r7, #4]
 800f3d0:	4618      	mov	r0, r3
 800f3d2:	370c      	adds	r7, #12
 800f3d4:	46bd      	mov	sp, r7
 800f3d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f3da:	4770      	bx	lr
 800f3dc:	08027ea8 	.word	0x08027ea8

0800f3e0 <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 800f3e0:	b580      	push	{r7, lr}
 800f3e2:	b082      	sub	sp, #8
 800f3e4:	af00      	add	r7, sp, #0
 800f3e6:	6078      	str	r0, [r7, #4]
    }
 800f3e8:	6878      	ldr	r0, [r7, #4]
 800f3ea:	f7ff ffe9 	bl	800f3c0 <_ZN8touchgfx15TouchControllerD1Ev>
 800f3ee:	2104      	movs	r1, #4
 800f3f0:	6878      	ldr	r0, [r7, #4]
 800f3f2:	f016 f9ec 	bl	80257ce <_ZdlPvj>
 800f3f6:	687b      	ldr	r3, [r7, #4]
 800f3f8:	4618      	mov	r0, r3
 800f3fa:	3708      	adds	r7, #8
 800f3fc:	46bd      	mov	sp, r7
 800f3fe:	bd80      	pop	{r7, pc}

0800f400 <_ZN20STM32TouchController4initEv>:
#include <STM32TouchController.hpp>
#include "gt911.h"


void STM32TouchController::init()
{
 800f400:	b480      	push	{r7}
 800f402:	b083      	sub	sp, #12
 800f404:	af00      	add	r7, sp, #0
 800f406:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */
}
 800f408:	bf00      	nop
 800f40a:	370c      	adds	r7, #12
 800f40c:	46bd      	mov	sp, r7
 800f40e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f412:	4770      	bx	lr

0800f414 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 800f414:	b580      	push	{r7, lr}
 800f416:	b090      	sub	sp, #64	@ 0x40
 800f418:	af00      	add	r7, sp, #0
 800f41a:	60f8      	str	r0, [r7, #12]
 800f41c:	60b9      	str	r1, [r7, #8]
 800f41e:	607a      	str	r2, [r7, #4]
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    gt911_info_t info;

    if (gt911GetInfo(&info) == true)
 800f420:	f107 0314 	add.w	r3, r7, #20
 800f424:	4618      	mov	r0, r3
 800f426:	f7f2 fe3d 	bl	80020a4 <gt911GetInfo>
 800f42a:	4603      	mov	r3, r0
 800f42c:	2b01      	cmp	r3, #1
 800f42e:	bf0c      	ite	eq
 800f430:	2301      	moveq	r3, #1
 800f432:	2300      	movne	r3, #0
 800f434:	b2db      	uxtb	r3, r3
 800f436:	2b00      	cmp	r3, #0
 800f438:	d00c      	beq.n	800f454 <_ZN20STM32TouchController11sampleTouchERlS0_+0x40>
    {
      if (info.count > 0)
 800f43a:	7d3b      	ldrb	r3, [r7, #20]
 800f43c:	2b00      	cmp	r3, #0
 800f43e:	d009      	beq.n	800f454 <_ZN20STM32TouchController11sampleTouchERlS0_+0x40>
      {
        x = info.point[0].x;
 800f440:	8b3b      	ldrh	r3, [r7, #24]
 800f442:	461a      	mov	r2, r3
 800f444:	68bb      	ldr	r3, [r7, #8]
 800f446:	601a      	str	r2, [r3, #0]
        y = info.point[0].y;
 800f448:	8b7b      	ldrh	r3, [r7, #26]
 800f44a:	461a      	mov	r2, r3
 800f44c:	687b      	ldr	r3, [r7, #4]
 800f44e:	601a      	str	r2, [r3, #0]
        return true;
 800f450:	2301      	movs	r3, #1
 800f452:	e000      	b.n	800f456 <_ZN20STM32TouchController11sampleTouchERlS0_+0x42>
      }
    }
    return false;
 800f454:	2300      	movs	r3, #0
}
 800f456:	4618      	mov	r0, r3
 800f458:	3740      	adds	r7, #64	@ 0x40
 800f45a:	46bd      	mov	sp, r7
 800f45c:	bd80      	pop	{r7, pc}
	...

0800f460 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 800f460:	b580      	push	{r7, lr}
 800f462:	b082      	sub	sp, #8
 800f464:	af00      	add	r7, sp, #0
 800f466:	6078      	str	r0, [r7, #4]
 800f468:	4a05      	ldr	r2, [pc, #20]	@ (800f480 <_ZN20STM32TouchControllerD1Ev+0x20>)
 800f46a:	687b      	ldr	r3, [r7, #4]
 800f46c:	601a      	str	r2, [r3, #0]
 800f46e:	687b      	ldr	r3, [r7, #4]
 800f470:	4618      	mov	r0, r3
 800f472:	f7ff ffa5 	bl	800f3c0 <_ZN8touchgfx15TouchControllerD1Ev>
 800f476:	687b      	ldr	r3, [r7, #4]
 800f478:	4618      	mov	r0, r3
 800f47a:	3708      	adds	r7, #8
 800f47c:	46bd      	mov	sp, r7
 800f47e:	bd80      	pop	{r7, pc}
 800f480:	08027e90 	.word	0x08027e90

0800f484 <_ZN20STM32TouchControllerD0Ev>:
 800f484:	b580      	push	{r7, lr}
 800f486:	b082      	sub	sp, #8
 800f488:	af00      	add	r7, sp, #0
 800f48a:	6078      	str	r0, [r7, #4]
 800f48c:	6878      	ldr	r0, [r7, #4]
 800f48e:	f7ff ffe7 	bl	800f460 <_ZN20STM32TouchControllerD1Ev>
 800f492:	2104      	movs	r1, #4
 800f494:	6878      	ldr	r0, [r7, #4]
 800f496:	f016 f99a 	bl	80257ce <_ZdlPvj>
 800f49a:	687b      	ldr	r3, [r7, #4]
 800f49c:	4618      	mov	r0, r3
 800f49e:	3708      	adds	r7, #8
 800f4a0:	46bd      	mov	sp, r7
 800f4a2:	bd80      	pop	{r7, pc}

0800f4a4 <_ZN8touchgfx4GPIO4initEv>:

/*
 * Perform configuration of IO pins.
 */
void GPIO::init()
{
 800f4a4:	b480      	push	{r7}
 800f4a6:	af00      	add	r7, sp, #0

}
 800f4a8:	bf00      	nop
 800f4aa:	46bd      	mov	sp, r7
 800f4ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f4b0:	4770      	bx	lr
	...

0800f4b4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 800f4b4:	b480      	push	{r7}
 800f4b6:	b083      	sub	sp, #12
 800f4b8:	af00      	add	r7, sp, #0
 800f4ba:	4603      	mov	r3, r0
 800f4bc:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800f4be:	79fb      	ldrb	r3, [r7, #7]
 800f4c0:	2b03      	cmp	r3, #3
 800f4c2:	d80c      	bhi.n	800f4de <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
 800f4c4:	a201      	add	r2, pc, #4	@ (adr r2, 800f4cc <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>)
 800f4c6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800f4ca:	bf00      	nop
 800f4cc:	0800f4dd 	.word	0x0800f4dd
 800f4d0:	0800f4dd 	.word	0x0800f4dd
 800f4d4:	0800f4dd 	.word	0x0800f4dd
 800f4d8:	0800f4dd 	.word	0x0800f4dd
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_SET);
#endif
        break;
 800f4dc:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
#endif
        break;
    }
}
 800f4de:	bf00      	nop
 800f4e0:	370c      	adds	r7, #12
 800f4e2:	46bd      	mov	sp, r7
 800f4e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f4e8:	4770      	bx	lr
 800f4ea:	bf00      	nop

0800f4ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 800f4ec:	b480      	push	{r7}
 800f4ee:	b083      	sub	sp, #12
 800f4f0:	af00      	add	r7, sp, #0
 800f4f2:	4603      	mov	r3, r0
 800f4f4:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800f4f6:	79fb      	ldrb	r3, [r7, #7]
 800f4f8:	2b03      	cmp	r3, #3
 800f4fa:	d80c      	bhi.n	800f516 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
 800f4fc:	a201      	add	r2, pc, #4	@ (adr r2, 800f504 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>)
 800f4fe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800f502:	bf00      	nop
 800f504:	0800f515 	.word	0x0800f515
 800f508:	0800f515 	.word	0x0800f515
 800f50c:	0800f515 	.word	0x0800f515
 800f510:	0800f515 	.word	0x0800f515
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
#endif
        break;
 800f514:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
#endif
        break;
    }
}
 800f516:	bf00      	nop
 800f518:	370c      	adds	r7, #12
 800f51a:	46bd      	mov	sp, r7
 800f51c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f520:	4770      	bx	lr
 800f522:	bf00      	nop

0800f524 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 800f524:	b480      	push	{r7}
 800f526:	b083      	sub	sp, #12
 800f528:	af00      	add	r7, sp, #0
 800f52a:	4603      	mov	r3, r0
 800f52c:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800f52e:	79fb      	ldrb	r3, [r7, #7]
 800f530:	2b03      	cmp	r3, #3
 800f532:	d80c      	bhi.n	800f54e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2a>
 800f534:	a201      	add	r2, pc, #4	@ (adr r2, 800f53c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 800f536:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800f53a:	bf00      	nop
 800f53c:	0800f54d 	.word	0x0800f54d
 800f540:	0800f54d 	.word	0x0800f54d
 800f544:	0800f54d 	.word	0x0800f54d
 800f548:	0800f54d 	.word	0x0800f54d
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
#endif
        break;
 800f54c:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
}
 800f54e:	bf00      	nop
 800f550:	370c      	adds	r7, #12
 800f552:	46bd      	mov	sp, r7
 800f554:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f558:	4770      	bx	lr
 800f55a:	bf00      	nop

0800f55c <_ZN8touchgfx3HALD1Ev>:
    virtual ~HAL()
 800f55c:	b480      	push	{r7}
 800f55e:	b083      	sub	sp, #12
 800f560:	af00      	add	r7, sp, #0
 800f562:	6078      	str	r0, [r7, #4]
    {
 800f564:	4a04      	ldr	r2, [pc, #16]	@ (800f578 <_ZN8touchgfx3HALD1Ev+0x1c>)
 800f566:	687b      	ldr	r3, [r7, #4]
 800f568:	601a      	str	r2, [r3, #0]
    }
 800f56a:	687b      	ldr	r3, [r7, #4]
 800f56c:	4618      	mov	r0, r3
 800f56e:	370c      	adds	r7, #12
 800f570:	46bd      	mov	sp, r7
 800f572:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f576:	4770      	bx	lr
 800f578:	08028288 	.word	0x08028288

0800f57c <_ZN8touchgfx3HALD0Ev>:
    virtual ~HAL()
 800f57c:	b580      	push	{r7, lr}
 800f57e:	b082      	sub	sp, #8
 800f580:	af00      	add	r7, sp, #0
 800f582:	6078      	str	r0, [r7, #4]
    }
 800f584:	6878      	ldr	r0, [r7, #4]
 800f586:	f7ff ffe9 	bl	800f55c <_ZN8touchgfx3HALD1Ev>
 800f58a:	217c      	movs	r1, #124	@ 0x7c
 800f58c:	6878      	ldr	r0, [r7, #4]
 800f58e:	f016 f91e 	bl	80257ce <_ZdlPvj>
 800f592:	687b      	ldr	r3, [r7, #4]
 800f594:	4618      	mov	r0, r3
 800f596:	3708      	adds	r7, #8
 800f598:	46bd      	mov	sp, r7
 800f59a:	bd80      	pop	{r7, pc}

0800f59c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
    virtual void setDisplayOrientation(DisplayOrientation orientation)
 800f59c:	b480      	push	{r7}
 800f59e:	b083      	sub	sp, #12
 800f5a0:	af00      	add	r7, sp, #0
 800f5a2:	6078      	str	r0, [r7, #4]
 800f5a4:	460b      	mov	r3, r1
 800f5a6:	70fb      	strb	r3, [r7, #3]
        requestedOrientation = orientation;
 800f5a8:	687b      	ldr	r3, [r7, #4]
 800f5aa:	78fa      	ldrb	r2, [r7, #3]
 800f5ac:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
        displayOrientationChangeRequested = true;
 800f5b0:	687b      	ldr	r3, [r7, #4]
 800f5b2:	2201      	movs	r2, #1
 800f5b4:	f883 2079 	strb.w	r2, [r3, #121]	@ 0x79
    }
 800f5b8:	bf00      	nop
 800f5ba:	370c      	adds	r7, #12
 800f5bc:	46bd      	mov	sp, r7
 800f5be:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f5c2:	4770      	bx	lr

0800f5c4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 800f5c4:	b580      	push	{r7, lr}
 800f5c6:	b082      	sub	sp, #8
 800f5c8:	af00      	add	r7, sp, #0
 800f5ca:	6078      	str	r0, [r7, #4]
 800f5cc:	460b      	mov	r3, r1
 800f5ce:	807b      	strh	r3, [r7, #2]
 800f5d0:	4613      	mov	r3, r2
 800f5d2:	803b      	strh	r3, [r7, #0]
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800f5d4:	4b0c      	ldr	r3, [pc, #48]	@ (800f608 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x44>)
 800f5d6:	881b      	ldrh	r3, [r3, #0]
 800f5d8:	887a      	ldrh	r2, [r7, #2]
 800f5da:	429a      	cmp	r2, r3
 800f5dc:	d304      	bcc.n	800f5e8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x24>
 800f5de:	4b0b      	ldr	r3, [pc, #44]	@ (800f60c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x48>)
 800f5e0:	881b      	ldrh	r3, [r3, #0]
 800f5e2:	883a      	ldrh	r2, [r7, #0]
 800f5e4:	429a      	cmp	r2, r3
 800f5e6:	d205      	bcs.n	800f5f4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>
 800f5e8:	4b09      	ldr	r3, [pc, #36]	@ (800f610 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x4c>)
 800f5ea:	4a0a      	ldr	r2, [pc, #40]	@ (800f614 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x50>)
 800f5ec:	219e      	movs	r1, #158	@ 0x9e
 800f5ee:	480a      	ldr	r0, [pc, #40]	@ (800f618 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x54>)
 800f5f0:	f016 f91c 	bl	802582c <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800f5f4:	4a09      	ldr	r2, [pc, #36]	@ (800f61c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x58>)
 800f5f6:	887b      	ldrh	r3, [r7, #2]
 800f5f8:	8013      	strh	r3, [r2, #0]
        FRAME_BUFFER_HEIGHT = height;
 800f5fa:	4a09      	ldr	r2, [pc, #36]	@ (800f620 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x5c>)
 800f5fc:	883b      	ldrh	r3, [r7, #0]
 800f5fe:	8013      	strh	r3, [r2, #0]
    }
 800f600:	bf00      	nop
 800f602:	3708      	adds	r7, #8
 800f604:	46bd      	mov	sp, r7
 800f606:	bd80      	pop	{r7, pc}
 800f608:	24001a24 	.word	0x24001a24
 800f60c:	24001a26 	.word	0x24001a26
 800f610:	08027210 	.word	0x08027210
 800f614:	08027274 	.word	0x08027274
 800f618:	080272b8 	.word	0x080272b8
 800f61c:	24001a2a 	.word	0x24001a2a
 800f620:	24001a2c 	.word	0x24001a2c

0800f624 <_ZN8touchgfx3HAL11getBlitCapsEv>:
     *
     * @return a bitmask of the supported blitcaps.
     *
     * @see enableDMAAcceleration
     */
    virtual BlitOperations getBlitCaps()
 800f624:	b580      	push	{r7, lr}
 800f626:	b082      	sub	sp, #8
 800f628:	af00      	add	r7, sp, #0
 800f62a:	6078      	str	r0, [r7, #4]
    {
        if (useDMAAcceleration)
 800f62c:	687b      	ldr	r3, [r7, #4]
 800f62e:	f893 307a 	ldrb.w	r3, [r3, #122]	@ 0x7a
 800f632:	2b00      	cmp	r3, #0
 800f634:	d009      	beq.n	800f64a <_ZN8touchgfx3HAL11getBlitCapsEv+0x26>
        {
            return dma.getBlitCaps();
 800f636:	687b      	ldr	r3, [r7, #4]
 800f638:	685a      	ldr	r2, [r3, #4]
 800f63a:	687b      	ldr	r3, [r7, #4]
 800f63c:	685b      	ldr	r3, [r3, #4]
 800f63e:	681b      	ldr	r3, [r3, #0]
 800f640:	681b      	ldr	r3, [r3, #0]
 800f642:	4610      	mov	r0, r2
 800f644:	4798      	blx	r3
 800f646:	4603      	mov	r3, r0
 800f648:	e000      	b.n	800f64c <_ZN8touchgfx3HAL11getBlitCapsEv+0x28>
        }
        return static_cast<BlitOperations>(0);
 800f64a:	2300      	movs	r3, #0
    }
 800f64c:	4618      	mov	r0, r3
 800f64e:	3708      	adds	r7, #8
 800f650:	46bd      	mov	sp, r7
 800f652:	bd80      	pop	{r7, pc}

0800f654 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    /**
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     *
     * Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     */
    virtual void backPorchExited()
 800f654:	b580      	push	{r7, lr}
 800f656:	b082      	sub	sp, #8
 800f658:	af00      	add	r7, sp, #0
 800f65a:	6078      	str	r0, [r7, #4]
    {
        swapFrameBuffers();
 800f65c:	6878      	ldr	r0, [r7, #4]
 800f65e:	f002 feeb 	bl	8012438 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 800f662:	687b      	ldr	r3, [r7, #4]
 800f664:	681b      	ldr	r3, [r3, #0]
 800f666:	33ac      	adds	r3, #172	@ 0xac
 800f668:	681b      	ldr	r3, [r3, #0]
 800f66a:	6878      	ldr	r0, [r7, #4]
 800f66c:	4798      	blx	r3
    }
 800f66e:	bf00      	nop
 800f670:	3708      	adds	r7, #8
 800f672:	46bd      	mov	sp, r7
 800f674:	bd80      	pop	{r7, pc}

0800f676 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @param [out] key Output parameter that will be set to the key value if a keypress was
     *                  detected.
     *
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
 800f676:	b480      	push	{r7}
 800f678:	b083      	sub	sp, #12
 800f67a:	af00      	add	r7, sp, #0
 800f67c:	6078      	str	r0, [r7, #4]
 800f67e:	6039      	str	r1, [r7, #0]
    {
        (void)key; // Unused variable
        return false;
 800f680:	2300      	movs	r3, #0
    }
 800f682:	4618      	mov	r0, r3
 800f684:	370c      	adds	r7, #12
 800f686:	46bd      	mov	sp, r7
 800f688:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f68c:	4770      	bx	lr
	...

0800f690 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     *
     * @see setAnimationStorage
     */
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 800f690:	b580      	push	{r7, lr}
 800f692:	b084      	sub	sp, #16
 800f694:	af00      	add	r7, sp, #0
 800f696:	60f8      	str	r0, [r7, #12]
 800f698:	60b9      	str	r1, [r7, #8]
 800f69a:	607a      	str	r2, [r7, #4]
 800f69c:	603b      	str	r3, [r7, #0]
    {
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800f69e:	68bb      	ldr	r3, [r7, #8]
 800f6a0:	2b00      	cmp	r3, #0
 800f6a2:	d106      	bne.n	800f6b2 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 800f6a4:	4b0f      	ldr	r3, [pc, #60]	@ (800f6e4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
 800f6a6:	4a10      	ldr	r2, [pc, #64]	@ (800f6e8 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x58>)
 800f6a8:	f240 21d2 	movw	r1, #722	@ 0x2d2
 800f6ac:	480f      	ldr	r0, [pc, #60]	@ (800f6ec <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 800f6ae:	f016 f8bd 	bl	802582c <__assert_func>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
 800f6b2:	68fb      	ldr	r3, [r7, #12]
 800f6b4:	68ba      	ldr	r2, [r7, #8]
 800f6b6:	63da      	str	r2, [r3, #60]	@ 0x3c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800f6b8:	68fb      	ldr	r3, [r7, #12]
 800f6ba:	687a      	ldr	r2, [r7, #4]
 800f6bc:	641a      	str	r2, [r3, #64]	@ 0x40
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800f6be:	687b      	ldr	r3, [r7, #4]
 800f6c0:	2b00      	cmp	r3, #0
 800f6c2:	bf14      	ite	ne
 800f6c4:	2301      	movne	r3, #1
 800f6c6:	2300      	moveq	r3, #0
 800f6c8:	b2da      	uxtb	r2, r3
 800f6ca:	4b09      	ldr	r3, [pc, #36]	@ (800f6f0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 800f6cc:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 800f6ce:	68fb      	ldr	r3, [r7, #12]
 800f6d0:	681b      	ldr	r3, [r3, #0]
 800f6d2:	338c      	adds	r3, #140	@ 0x8c
 800f6d4:	681b      	ldr	r3, [r3, #0]
 800f6d6:	6839      	ldr	r1, [r7, #0]
 800f6d8:	68f8      	ldr	r0, [r7, #12]
 800f6da:	4798      	blx	r3
    }
 800f6dc:	bf00      	nop
 800f6de:	3710      	adds	r7, #16
 800f6e0:	46bd      	mov	sp, r7
 800f6e2:	bd80      	pop	{r7, pc}
 800f6e4:	080272fc 	.word	0x080272fc
 800f6e8:	08027334 	.word	0x08027334
 800f6ec:	080272b8 	.word	0x080272b8
 800f6f0:	24001a2e 	.word	0x24001a2e

0800f6f4 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage
     *                              is disabled.
     *
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
 800f6f4:	b480      	push	{r7}
 800f6f6:	b083      	sub	sp, #12
 800f6f8:	af00      	add	r7, sp, #0
 800f6fa:	6078      	str	r0, [r7, #4]
 800f6fc:	6039      	str	r1, [r7, #0]
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800f6fe:	687b      	ldr	r3, [r7, #4]
 800f700:	683a      	ldr	r2, [r7, #0]
 800f702:	645a      	str	r2, [r3, #68]	@ 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800f704:	683b      	ldr	r3, [r7, #0]
 800f706:	2b00      	cmp	r3, #0
 800f708:	bf14      	ite	ne
 800f70a:	2301      	movne	r3, #1
 800f70c:	2300      	moveq	r3, #0
 800f70e:	b2da      	uxtb	r2, r3
 800f710:	4b03      	ldr	r3, [pc, #12]	@ (800f720 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x2c>)
 800f712:	701a      	strb	r2, [r3, #0]
    }
 800f714:	bf00      	nop
 800f716:	370c      	adds	r7, #12
 800f718:	46bd      	mov	sp, r7
 800f71a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f71e:	4770      	bx	lr
 800f720:	24001a2f 	.word	0x24001a2f

0800f724 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * Gets the flash data reader. This method must be implemented in
     * subclasses that uses a FlashDataReader object.
     *
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
 800f724:	b480      	push	{r7}
 800f726:	b083      	sub	sp, #12
 800f728:	af00      	add	r7, sp, #0
 800f72a:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800f72c:	2300      	movs	r3, #0
    }
 800f72e:	4618      	mov	r0, r3
 800f730:	370c      	adds	r7, #12
 800f732:	46bd      	mov	sp, r7
 800f734:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f738:	4770      	bx	lr

0800f73a <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @param  ms Number of milliseconds to wait.
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
 800f73a:	b580      	push	{r7, lr}
 800f73c:	b082      	sub	sp, #8
 800f73e:	af00      	add	r7, sp, #0
 800f740:	6078      	str	r0, [r7, #4]
 800f742:	460b      	mov	r3, r1
 800f744:	807b      	strh	r3, [r7, #2]
    {
        if (taskDelayFunc)
 800f746:	687b      	ldr	r3, [r7, #4]
 800f748:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800f74a:	2b00      	cmp	r3, #0
 800f74c:	d004      	beq.n	800f758 <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
        {
            taskDelayFunc(ms);
 800f74e:	687b      	ldr	r3, [r7, #4]
 800f750:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800f752:	887a      	ldrh	r2, [r7, #2]
 800f754:	4610      	mov	r0, r2
 800f756:	4798      	blx	r3
        }
    }
 800f758:	bf00      	nop
 800f75a:	3708      	adds	r7, #8
 800f75c:	46bd      	mov	sp, r7
 800f75e:	bd80      	pop	{r7, pc}

0800f760 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     * getTFTCurrentLine function is never called and can be disregarded.
     *
     * @return In this default implementation, 0xFFFF is returned to signify "not
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
 800f760:	b480      	push	{r7}
 800f762:	b083      	sub	sp, #12
 800f764:	af00      	add	r7, sp, #0
 800f766:	6078      	str	r0, [r7, #4]
    {
        return 0xFFFFu;
 800f768:	f64f 73ff 	movw	r3, #65535	@ 0xffff
    }
 800f76c:	4618      	mov	r0, r3
 800f76e:	370c      	adds	r7, #12
 800f770:	46bd      	mov	sp, r7
 800f772:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f776:	4770      	bx	lr

0800f778 <_ZN8touchgfx3HAL10getDMATypeEv>:
     * Function for obtaining the DMA type of the concrete DMA implementation. As default,
     * will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
 800f778:	b580      	push	{r7, lr}
 800f77a:	b082      	sub	sp, #8
 800f77c:	af00      	add	r7, sp, #0
 800f77e:	6078      	str	r0, [r7, #4]
    {
        return dma.getDMAType();
 800f780:	687b      	ldr	r3, [r7, #4]
 800f782:	685a      	ldr	r2, [r3, #4]
 800f784:	687b      	ldr	r3, [r7, #4]
 800f786:	685b      	ldr	r3, [r3, #4]
 800f788:	681b      	ldr	r3, [r3, #0]
 800f78a:	3318      	adds	r3, #24
 800f78c:	681b      	ldr	r3, [r3, #0]
 800f78e:	4610      	mov	r0, r2
 800f790:	4798      	blx	r3
 800f792:	4603      	mov	r3, r0
    }
 800f794:	4618      	mov	r0, r3
 800f796:	3708      	adds	r7, #8
 800f798:	46bd      	mov	sp, r7
 800f79a:	bd80      	pop	{r7, pc}

0800f79c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:

    /** Called by the touch driver to indicate that no touch is currently detected. */
    virtual void noTouch();

    /** Perform the actual display orientation change. */
    virtual void performDisplayOrientationChange()
 800f79c:	b480      	push	{r7}
 800f79e:	b085      	sub	sp, #20
 800f7a0:	af00      	add	r7, sp, #0
 800f7a2:	6078      	str	r0, [r7, #4]
    {
        if (requestedOrientation != nativeDisplayOrientation)
 800f7a4:	687b      	ldr	r3, [r7, #4]
 800f7a6:	f893 2078 	ldrb.w	r2, [r3, #120]	@ 0x78
 800f7aa:	687b      	ldr	r3, [r7, #4]
 800f7ac:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 800f7b0:	429a      	cmp	r2, r3
 800f7b2:	d011      	beq.n	800f7d8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>
        {
            if (DISPLAY_ROTATION == rotate0)
 800f7b4:	4b14      	ldr	r3, [pc, #80]	@ (800f808 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800f7b6:	781b      	ldrb	r3, [r3, #0]
 800f7b8:	2b00      	cmp	r3, #0
 800f7ba:	d11e      	bne.n	800f7fa <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            {
                const uint16_t tmp = DISPLAY_HEIGHT;
 800f7bc:	4b13      	ldr	r3, [pc, #76]	@ (800f80c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800f7be:	881b      	ldrh	r3, [r3, #0]
 800f7c0:	81bb      	strh	r3, [r7, #12]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800f7c2:	4b13      	ldr	r3, [pc, #76]	@ (800f810 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800f7c4:	881a      	ldrh	r2, [r3, #0]
 800f7c6:	4b11      	ldr	r3, [pc, #68]	@ (800f80c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800f7c8:	801a      	strh	r2, [r3, #0]
                DISPLAY_WIDTH = tmp;
 800f7ca:	4a11      	ldr	r2, [pc, #68]	@ (800f810 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800f7cc:	89bb      	ldrh	r3, [r7, #12]
 800f7ce:	8013      	strh	r3, [r2, #0]
                DISPLAY_ROTATION = rotate90;
 800f7d0:	4b0d      	ldr	r3, [pc, #52]	@ (800f808 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800f7d2:	2201      	movs	r2, #1
 800f7d4:	701a      	strb	r2, [r3, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_WIDTH = tmp;
            DISPLAY_ROTATION = rotate0;
        }
    }
 800f7d6:	e010      	b.n	800f7fa <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
        else if (DISPLAY_ROTATION != rotate0)
 800f7d8:	4b0b      	ldr	r3, [pc, #44]	@ (800f808 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800f7da:	781b      	ldrb	r3, [r3, #0]
 800f7dc:	2b00      	cmp	r3, #0
 800f7de:	d00c      	beq.n	800f7fa <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
            const uint16_t tmp = DISPLAY_HEIGHT;
 800f7e0:	4b0a      	ldr	r3, [pc, #40]	@ (800f80c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800f7e2:	881b      	ldrh	r3, [r3, #0]
 800f7e4:	81fb      	strh	r3, [r7, #14]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800f7e6:	4b0a      	ldr	r3, [pc, #40]	@ (800f810 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800f7e8:	881a      	ldrh	r2, [r3, #0]
 800f7ea:	4b08      	ldr	r3, [pc, #32]	@ (800f80c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800f7ec:	801a      	strh	r2, [r3, #0]
            DISPLAY_WIDTH = tmp;
 800f7ee:	4a08      	ldr	r2, [pc, #32]	@ (800f810 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800f7f0:	89fb      	ldrh	r3, [r7, #14]
 800f7f2:	8013      	strh	r3, [r2, #0]
            DISPLAY_ROTATION = rotate0;
 800f7f4:	4b04      	ldr	r3, [pc, #16]	@ (800f808 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800f7f6:	2200      	movs	r2, #0
 800f7f8:	701a      	strb	r2, [r3, #0]
    }
 800f7fa:	bf00      	nop
 800f7fc:	3714      	adds	r7, #20
 800f7fe:	46bd      	mov	sp, r7
 800f800:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f804:	4770      	bx	lr
 800f806:	bf00      	nop
 800f808:	24001a28 	.word	0x24001a28
 800f80c:	24001a26 	.word	0x24001a26
 800f810:	24001a24 	.word	0x24001a24

0800f814 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800f814:	b580      	push	{r7, lr}
 800f816:	b082      	sub	sp, #8
 800f818:	af00      	add	r7, sp, #0
 800f81a:	6078      	str	r0, [r7, #4]
    {
        HAL::flushFrameBuffer();
 800f81c:	687b      	ldr	r3, [r7, #4]
 800f81e:	4618      	mov	r0, r3
 800f820:	f002 f868 	bl	80118f4 <_ZN8touchgfx3HAL16flushFrameBufferEv>
    }
 800f824:	bf00      	nop
 800f826:	3708      	adds	r7, #8
 800f828:	46bd      	mov	sp, r7
 800f82a:	bd80      	pop	{r7, pc}

0800f82c <_ZN20TouchGFXGeneratedHALD1Ev>:
class TouchGFXGeneratedHAL : public touchgfx::HAL
 800f82c:	b580      	push	{r7, lr}
 800f82e:	b082      	sub	sp, #8
 800f830:	af00      	add	r7, sp, #0
 800f832:	6078      	str	r0, [r7, #4]
 800f834:	4a05      	ldr	r2, [pc, #20]	@ (800f84c <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 800f836:	687b      	ldr	r3, [r7, #4]
 800f838:	601a      	str	r2, [r3, #0]
 800f83a:	687b      	ldr	r3, [r7, #4]
 800f83c:	4618      	mov	r0, r3
 800f83e:	f7ff fe8d 	bl	800f55c <_ZN8touchgfx3HALD1Ev>
 800f842:	687b      	ldr	r3, [r7, #4]
 800f844:	4618      	mov	r0, r3
 800f846:	3708      	adds	r7, #8
 800f848:	46bd      	mov	sp, r7
 800f84a:	bd80      	pop	{r7, pc}
 800f84c:	080280e0 	.word	0x080280e0

0800f850 <_ZN20TouchGFXGeneratedHALD0Ev>:
 800f850:	b580      	push	{r7, lr}
 800f852:	b082      	sub	sp, #8
 800f854:	af00      	add	r7, sp, #0
 800f856:	6078      	str	r0, [r7, #4]
 800f858:	6878      	ldr	r0, [r7, #4]
 800f85a:	f7ff ffe7 	bl	800f82c <_ZN20TouchGFXGeneratedHALD1Ev>
 800f85e:	217c      	movs	r1, #124	@ 0x7c
 800f860:	6878      	ldr	r0, [r7, #4]
 800f862:	f015 ffb4 	bl	80257ce <_ZdlPvj>
 800f866:	687b      	ldr	r3, [r7, #4]
 800f868:	4618      	mov	r0, r3
 800f86a:	3708      	adds	r7, #8
 800f86c:	46bd      	mov	sp, r7
 800f86e:	bd80      	pop	{r7, pc}

0800f870 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 800f870:	b580      	push	{r7, lr}
 800f872:	b082      	sub	sp, #8
 800f874:	af00      	add	r7, sp, #0
 800f876:	6078      	str	r0, [r7, #4]
    {
        TouchGFXGeneratedHAL::flushFrameBuffer();
 800f878:	687b      	ldr	r3, [r7, #4]
 800f87a:	4618      	mov	r0, r3
 800f87c:	f7ff ffca 	bl	800f814 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
    }
 800f880:	bf00      	nop
 800f882:	3708      	adds	r7, #8
 800f884:	46bd      	mov	sp, r7
 800f886:	bd80      	pop	{r7, pc}

0800f888 <_ZN11TouchGFXHAL10initializeEv>:
/* USER CODE BEGIN TouchGFXHAL.cpp */

using namespace touchgfx;

void TouchGFXHAL::initialize()
{
 800f888:	b580      	push	{r7, lr}
 800f88a:	b082      	sub	sp, #8
 800f88c:	af00      	add	r7, sp, #0
 800f88e:	6078      	str	r0, [r7, #4]
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800f890:	687b      	ldr	r3, [r7, #4]
 800f892:	4618      	mov	r0, r3
 800f894:	f001 fb90 	bl	8010fb8 <_ZN20TouchGFXGeneratedHAL10initializeEv>
    TouchGFXGeneratedHAL::setAnimationStorage((void *)(0xC0000000 + 480*480*2*2));
 800f898:	687b      	ldr	r3, [r7, #4]
 800f89a:	4904      	ldr	r1, [pc, #16]	@ (800f8ac <_ZN11TouchGFXHAL10initializeEv+0x24>)
 800f89c:	4618      	mov	r0, r3
 800f89e:	f7ff ff29 	bl	800f6f4 <_ZN8touchgfx3HAL19setAnimationStorageEPv>
}
 800f8a2:	bf00      	nop
 800f8a4:	3708      	adds	r7, #8
 800f8a6:	46bd      	mov	sp, r7
 800f8a8:	bd80      	pop	{r7, pc}
 800f8aa:	bf00      	nop
 800f8ac:	c00e1000 	.word	0xc00e1000

0800f8b0 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 * Gets the frame buffer address used by the TFT controller.
 *
 * @return The address of the frame buffer currently being displayed on the TFT.
 */
uint16_t* TouchGFXHAL::getTFTFrameBuffer() const
{
 800f8b0:	b580      	push	{r7, lr}
 800f8b2:	b082      	sub	sp, #8
 800f8b4:	af00      	add	r7, sp, #0
 800f8b6:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 800f8b8:	687b      	ldr	r3, [r7, #4]
 800f8ba:	4618      	mov	r0, r3
 800f8bc:	f001 fc22 	bl	8011104 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 800f8c0:	4603      	mov	r3, r0
}
 800f8c2:	4618      	mov	r0, r3
 800f8c4:	3708      	adds	r7, #8
 800f8c6:	46bd      	mov	sp, r7
 800f8c8:	bd80      	pop	{r7, pc}

0800f8ca <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 * Sets the frame buffer address used by the TFT controller.
 *
 * @param [in] address New frame buffer address.
 */
void TouchGFXHAL::setTFTFrameBuffer(uint16_t* address)
{
 800f8ca:	b580      	push	{r7, lr}
 800f8cc:	b082      	sub	sp, #8
 800f8ce:	af00      	add	r7, sp, #0
 800f8d0:	6078      	str	r0, [r7, #4]
 800f8d2:	6039      	str	r1, [r7, #0]
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 800f8d4:	687b      	ldr	r3, [r7, #4]
 800f8d6:	6839      	ldr	r1, [r7, #0]
 800f8d8:	4618      	mov	r0, r3
 800f8da:	f001 fc21 	bl	8011120 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
}
 800f8de:	bf00      	nop
 800f8e0:	3708      	adds	r7, #8
 800f8e2:	46bd      	mov	sp, r7
 800f8e4:	bd80      	pop	{r7, pc}

0800f8e6 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 800f8e6:	b580      	push	{r7, lr}
 800f8e8:	b082      	sub	sp, #8
 800f8ea:	af00      	add	r7, sp, #0
 800f8ec:	6078      	str	r0, [r7, #4]
 800f8ee:	6039      	str	r1, [r7, #0]
    // be called to notify the touchgfx framework that flush has been performed.
    // To calculate he start adress of rect,
    // use advanceFrameBufferToRect(uint8_t* fbPtr, const touchgfx::Rect& rect)
    // defined in TouchGFXGeneratedHAL.cpp

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 800f8f0:	687b      	ldr	r3, [r7, #4]
 800f8f2:	6839      	ldr	r1, [r7, #0]
 800f8f4:	4618      	mov	r0, r3
 800f8f6:	f001 fc29 	bl	801114c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
}
 800f8fa:	bf00      	nop
 800f8fc:	3708      	adds	r7, #8
 800f8fe:	46bd      	mov	sp, r7
 800f900:	bd80      	pop	{r7, pc}

0800f902 <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 800f902:	b580      	push	{r7, lr}
 800f904:	b084      	sub	sp, #16
 800f906:	af00      	add	r7, sp, #0
 800f908:	60f8      	str	r0, [r7, #12]
 800f90a:	60b9      	str	r1, [r7, #8]
 800f90c:	607a      	str	r2, [r7, #4]
 800f90e:	603b      	str	r3, [r7, #0]
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 800f910:	68f8      	ldr	r0, [r7, #12]
 800f912:	683b      	ldr	r3, [r7, #0]
 800f914:	687a      	ldr	r2, [r7, #4]
 800f916:	68b9      	ldr	r1, [r7, #8]
 800f918:	f001 fc26 	bl	8011168 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>
 800f91c:	4603      	mov	r3, r0
}
 800f91e:	4618      	mov	r0, r3
 800f920:	3710      	adds	r7, #16
 800f922:	46bd      	mov	sp, r7
 800f924:	bd80      	pop	{r7, pc}

0800f926 <_ZN11TouchGFXHAL19configureInterruptsEv>:
/**
 * Configures the interrupts relevant for TouchGFX. This primarily entails setting
 * the interrupt priorities for the DMA and LCD interrupts.
 */
void TouchGFXHAL::configureInterrupts()
{
 800f926:	b580      	push	{r7, lr}
 800f928:	b082      	sub	sp, #8
 800f92a:	af00      	add	r7, sp, #0
 800f92c:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800f92e:	687b      	ldr	r3, [r7, #4]
 800f930:	4618      	mov	r0, r3
 800f932:	f001 fb71 	bl	8011018 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
}
 800f936:	bf00      	nop
 800f938:	3708      	adds	r7, #8
 800f93a:	46bd      	mov	sp, r7
 800f93c:	bd80      	pop	{r7, pc}

0800f93e <_ZN11TouchGFXHAL16enableInterruptsEv>:

/**
 * Used for enabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::enableInterrupts()
{
 800f93e:	b580      	push	{r7, lr}
 800f940:	b082      	sub	sp, #8
 800f942:	af00      	add	r7, sp, #0
 800f944:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 800f946:	687b      	ldr	r3, [r7, #4]
 800f948:	4618      	mov	r0, r3
 800f94a:	f001 fb75 	bl	8011038 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
 800f94e:	bf00      	nop
 800f950:	3708      	adds	r7, #8
 800f952:	46bd      	mov	sp, r7
 800f954:	bd80      	pop	{r7, pc}

0800f956 <_ZN11TouchGFXHAL17disableInterruptsEv>:

/**
 * Used for disabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::disableInterrupts()
{
 800f956:	b580      	push	{r7, lr}
 800f958:	b082      	sub	sp, #8
 800f95a:	af00      	add	r7, sp, #0
 800f95c:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800f95e:	687b      	ldr	r3, [r7, #4]
 800f960:	4618      	mov	r0, r3
 800f962:	f001 fb77 	bl	8011054 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
}
 800f966:	bf00      	nop
 800f968:	3708      	adds	r7, #8
 800f96a:	46bd      	mov	sp, r7
 800f96c:	bd80      	pop	{r7, pc}

0800f96e <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
/**
 * Configure the LCD controller to fire interrupts at VSYNC. Called automatically
 * once TouchGFX initialization has completed.
 */
void TouchGFXHAL::enableLCDControllerInterrupt()
{
 800f96e:	b580      	push	{r7, lr}
 800f970:	b082      	sub	sp, #8
 800f972:	af00      	add	r7, sp, #0
 800f974:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800f976:	687b      	ldr	r3, [r7, #4]
 800f978:	4618      	mov	r0, r3
 800f97a:	f001 fb79 	bl	8011070 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
}
 800f97e:	bf00      	nop
 800f980:	3708      	adds	r7, #8
 800f982:	46bd      	mov	sp, r7
 800f984:	bd80      	pop	{r7, pc}

0800f986 <_ZN11TouchGFXHAL10beginFrameEv>:

bool TouchGFXHAL::beginFrame()
{
 800f986:	b580      	push	{r7, lr}
 800f988:	b082      	sub	sp, #8
 800f98a:	af00      	add	r7, sp, #0
 800f98c:	6078      	str	r0, [r7, #4]
    return TouchGFXGeneratedHAL::beginFrame();
 800f98e:	687b      	ldr	r3, [r7, #4]
 800f990:	4618      	mov	r0, r3
 800f992:	f001 fb9b 	bl	80110cc <_ZN20TouchGFXGeneratedHAL10beginFrameEv>
 800f996:	4603      	mov	r3, r0
}
 800f998:	4618      	mov	r0, r3
 800f99a:	3708      	adds	r7, #8
 800f99c:	46bd      	mov	sp, r7
 800f99e:	bd80      	pop	{r7, pc}

0800f9a0 <_ZN11TouchGFXHAL8endFrameEv>:

void TouchGFXHAL::endFrame()
{
 800f9a0:	b580      	push	{r7, lr}
 800f9a2:	b082      	sub	sp, #8
 800f9a4:	af00      	add	r7, sp, #0
 800f9a6:	6078      	str	r0, [r7, #4]
    TouchGFXGeneratedHAL::endFrame();
 800f9a8:	687b      	ldr	r3, [r7, #4]
 800f9aa:	4618      	mov	r0, r3
 800f9ac:	f001 fb9b 	bl	80110e6 <_ZN20TouchGFXGeneratedHAL8endFrameEv>
}
 800f9b0:	bf00      	nop
 800f9b2:	3708      	adds	r7, #8
 800f9b4:	46bd      	mov	sp, r7
 800f9b6:	bd80      	pop	{r7, pc}

0800f9b8 <_ZN11TouchGFXHALD1Ev>:
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800f9b8:	b580      	push	{r7, lr}
 800f9ba:	b082      	sub	sp, #8
 800f9bc:	af00      	add	r7, sp, #0
 800f9be:	6078      	str	r0, [r7, #4]
 800f9c0:	4a05      	ldr	r2, [pc, #20]	@ (800f9d8 <_ZN11TouchGFXHALD1Ev+0x20>)
 800f9c2:	687b      	ldr	r3, [r7, #4]
 800f9c4:	601a      	str	r2, [r3, #0]
 800f9c6:	687b      	ldr	r3, [r7, #4]
 800f9c8:	4618      	mov	r0, r3
 800f9ca:	f7ff ff2f 	bl	800f82c <_ZN20TouchGFXGeneratedHALD1Ev>
 800f9ce:	687b      	ldr	r3, [r7, #4]
 800f9d0:	4618      	mov	r0, r3
 800f9d2:	3708      	adds	r7, #8
 800f9d4:	46bd      	mov	sp, r7
 800f9d6:	bd80      	pop	{r7, pc}
 800f9d8:	08027ec0 	.word	0x08027ec0

0800f9dc <_ZN11TouchGFXHALD0Ev>:
 800f9dc:	b580      	push	{r7, lr}
 800f9de:	b082      	sub	sp, #8
 800f9e0:	af00      	add	r7, sp, #0
 800f9e2:	6078      	str	r0, [r7, #4]
 800f9e4:	6878      	ldr	r0, [r7, #4]
 800f9e6:	f7ff ffe7 	bl	800f9b8 <_ZN11TouchGFXHALD1Ev>
 800f9ea:	217c      	movs	r1, #124	@ 0x7c
 800f9ec:	6878      	ldr	r0, [r7, #4]
 800f9ee:	f015 feee 	bl	80257ce <_ZdlPvj>
 800f9f2:	687b      	ldr	r3, [r7, #4]
 800f9f4:	4618      	mov	r0, r3
 800f9f6:	3708      	adds	r7, #8
 800f9f8:	46bd      	mov	sp, r7
 800f9fa:	bd80      	pop	{r7, pc}

0800f9fc <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 800f9fc:	b480      	push	{r7}
 800f9fe:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800fa00:	4b05      	ldr	r3, [pc, #20]	@ (800fa18 <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 800fa02:	2200      	movs	r2, #0
 800fa04:	601a      	str	r2, [r3, #0]
    vsync_sem = 0;
 800fa06:	4b05      	ldr	r3, [pc, #20]	@ (800fa1c <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 800fa08:	2200      	movs	r2, #0
 800fa0a:	601a      	str	r2, [r3, #0]
}
 800fa0c:	bf00      	nop
 800fa0e:	46bd      	mov	sp, r7
 800fa10:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fa14:	4770      	bx	lr
 800fa16:	bf00      	nop
 800fa18:	240007ec 	.word	0x240007ec
 800fa1c:	240007f0 	.word	0x240007f0

0800fa20 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 800fa20:	b480      	push	{r7}
 800fa22:	af00      	add	r7, sp, #0
    while (fb_sem);
 800fa24:	bf00      	nop
 800fa26:	4b08      	ldr	r3, [pc, #32]	@ (800fa48 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800fa28:	681b      	ldr	r3, [r3, #0]
 800fa2a:	2b00      	cmp	r3, #0
 800fa2c:	bf14      	ite	ne
 800fa2e:	2301      	movne	r3, #1
 800fa30:	2300      	moveq	r3, #0
 800fa32:	b2db      	uxtb	r3, r3
 800fa34:	2b00      	cmp	r3, #0
 800fa36:	d1f6      	bne.n	800fa26 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x6>
    fb_sem = 1;
 800fa38:	4b03      	ldr	r3, [pc, #12]	@ (800fa48 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800fa3a:	2201      	movs	r2, #1
 800fa3c:	601a      	str	r2, [r3, #0]
}
 800fa3e:	bf00      	nop
 800fa40:	46bd      	mov	sp, r7
 800fa42:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fa46:	4770      	bx	lr
 800fa48:	240007ec 	.word	0x240007ec

0800fa4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 800fa4c:	b480      	push	{r7}
 800fa4e:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800fa50:	4b03      	ldr	r3, [pc, #12]	@ (800fa60 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 800fa52:	2200      	movs	r2, #0
 800fa54:	601a      	str	r2, [r3, #0]
}
 800fa56:	bf00      	nop
 800fa58:	46bd      	mov	sp, r7
 800fa5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fa5e:	4770      	bx	lr
 800fa60:	240007ec 	.word	0x240007ec

0800fa64 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 800fa64:	b480      	push	{r7}
 800fa66:	af00      	add	r7, sp, #0
    fb_sem = 1;
 800fa68:	4b03      	ldr	r3, [pc, #12]	@ (800fa78 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 800fa6a:	2201      	movs	r2, #1
 800fa6c:	601a      	str	r2, [r3, #0]
}
 800fa6e:	bf00      	nop
 800fa70:	46bd      	mov	sp, r7
 800fa72:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fa76:	4770      	bx	lr
 800fa78:	240007ec 	.word	0x240007ec

0800fa7c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 800fa7c:	b480      	push	{r7}
 800fa7e:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800fa80:	4b03      	ldr	r3, [pc, #12]	@ (800fa90 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 800fa82:	2200      	movs	r2, #0
 800fa84:	601a      	str	r2, [r3, #0]
}
 800fa86:	bf00      	nop
 800fa88:	46bd      	mov	sp, r7
 800fa8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fa8e:	4770      	bx	lr
 800fa90:	240007ec 	.word	0x240007ec

0800fa94 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 800fa94:	b480      	push	{r7}
 800fa96:	af00      	add	r7, sp, #0
    vsync_sem = 1;
 800fa98:	4b03      	ldr	r3, [pc, #12]	@ (800faa8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800fa9a:	2201      	movs	r2, #1
 800fa9c:	601a      	str	r2, [r3, #0]
}
 800fa9e:	bf00      	nop
 800faa0:	46bd      	mov	sp, r7
 800faa2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800faa6:	4770      	bx	lr
 800faa8:	240007f0 	.word	0x240007f0

0800faac <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>:
/*
  * Signal that the rendering of the frame has completed. Used by
  * some systems to avoid using any previous vsync.
  */
void OSWrappers::signalRenderingDone()
{
 800faac:	b480      	push	{r7}
 800faae:	af00      	add	r7, sp, #0
    vsync_sem = 0;
 800fab0:	4b03      	ldr	r3, [pc, #12]	@ (800fac0 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv+0x14>)
 800fab2:	2200      	movs	r2, #0
 800fab4:	601a      	str	r2, [r3, #0]
}
 800fab6:	bf00      	nop
 800fab8:	46bd      	mov	sp, r7
 800faba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fabe:	4770      	bx	lr
 800fac0:	240007f0 	.word	0x240007f0

0800fac4 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>:
 * @note signalRenderingDone is typically used together with this function.
 *
 * @return True if VSync occurred.
 */
bool OSWrappers::isVSyncAvailable()
{
 800fac4:	b480      	push	{r7}
 800fac6:	af00      	add	r7, sp, #0
    return vsync_sem;
 800fac8:	4b05      	ldr	r3, [pc, #20]	@ (800fae0 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv+0x1c>)
 800faca:	681b      	ldr	r3, [r3, #0]
 800facc:	2b00      	cmp	r3, #0
 800face:	bf14      	ite	ne
 800fad0:	2301      	movne	r3, #1
 800fad2:	2300      	moveq	r3, #0
 800fad4:	b2db      	uxtb	r3, r3
}
 800fad6:	4618      	mov	r0, r3
 800fad8:	46bd      	mov	sp, r7
 800fada:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fade:	4770      	bx	lr
 800fae0:	240007f0 	.word	0x240007f0

0800fae4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 800fae4:	b580      	push	{r7, lr}
 800fae6:	af00      	add	r7, sp, #0
    if (vsync_sem)
 800fae8:	4b0a      	ldr	r3, [pc, #40]	@ (800fb14 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800faea:	681b      	ldr	r3, [r3, #0]
 800faec:	2b00      	cmp	r3, #0
 800faee:	bf14      	ite	ne
 800faf0:	2301      	movne	r3, #1
 800faf2:	2300      	moveq	r3, #0
 800faf4:	b2db      	uxtb	r3, r3
 800faf6:	2b00      	cmp	r3, #0
 800faf8:	d00a      	beq.n	800fb10 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
    {
        vsync_sem = 0;
 800fafa:	4b06      	ldr	r3, [pc, #24]	@ (800fb14 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800fafc:	2200      	movs	r2, #0
 800fafe:	601a      	str	r2, [r3, #0]
        HAL::getInstance()->backPorchExited();
 800fb00:	f7fd f810 	bl	800cb24 <_ZN8touchgfx3HAL11getInstanceEv>
 800fb04:	4603      	mov	r3, r0
 800fb06:	681a      	ldr	r2, [r3, #0]
 800fb08:	3270      	adds	r2, #112	@ 0x70
 800fb0a:	6812      	ldr	r2, [r2, #0]
 800fb0c:	4618      	mov	r0, r3
 800fb0e:	4790      	blx	r2
    }
}
 800fb10:	bf00      	nop
 800fb12:	bd80      	pop	{r7, pc}
 800fb14:	240007f0 	.word	0x240007f0

0800fb18 <__NVIC_DisableIRQ>:
{
 800fb18:	b480      	push	{r7}
 800fb1a:	b083      	sub	sp, #12
 800fb1c:	af00      	add	r7, sp, #0
 800fb1e:	4603      	mov	r3, r0
 800fb20:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 800fb22:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800fb26:	2b00      	cmp	r3, #0
 800fb28:	db12      	blt.n	800fb50 <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800fb2a:	88fb      	ldrh	r3, [r7, #6]
 800fb2c:	f003 021f 	and.w	r2, r3, #31
 800fb30:	490a      	ldr	r1, [pc, #40]	@ (800fb5c <__NVIC_DisableIRQ+0x44>)
 800fb32:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 800fb36:	095b      	lsrs	r3, r3, #5
 800fb38:	2001      	movs	r0, #1
 800fb3a:	fa00 f202 	lsl.w	r2, r0, r2
 800fb3e:	3320      	adds	r3, #32
 800fb40:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 800fb44:	f3bf 8f4f 	dsb	sy
}
 800fb48:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800fb4a:	f3bf 8f6f 	isb	sy
}
 800fb4e:	bf00      	nop
}
 800fb50:	bf00      	nop
 800fb52:	370c      	adds	r7, #12
 800fb54:	46bd      	mov	sp, r7
 800fb56:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb5a:	4770      	bx	lr
 800fb5c:	e000e100 	.word	0xe000e100

0800fb60 <_ZNK8touchgfx9colortypecvmEv>:
    operator uint32_t() const
 800fb60:	b480      	push	{r7}
 800fb62:	b083      	sub	sp, #12
 800fb64:	af00      	add	r7, sp, #0
 800fb66:	6078      	str	r0, [r7, #4]
        return color;
 800fb68:	687b      	ldr	r3, [r7, #4]
 800fb6a:	681b      	ldr	r3, [r3, #0]
    }
 800fb6c:	4618      	mov	r0, r3
 800fb6e:	370c      	adds	r7, #12
 800fb70:	46bd      	mov	sp, r7
 800fb72:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb76:	4770      	bx	lr

0800fb78 <_ZN8touchgfx9DMA_QueueD1Ev>:
     * @param  op The blitop to add.
     */
    virtual void pushCopyOf(const BlitOp& op) = 0;

    /** Finalizes an instance of the DMA_Queue class. */
    virtual ~DMA_Queue()
 800fb78:	b480      	push	{r7}
 800fb7a:	b083      	sub	sp, #12
 800fb7c:	af00      	add	r7, sp, #0
 800fb7e:	6078      	str	r0, [r7, #4]
    {
 800fb80:	4a04      	ldr	r2, [pc, #16]	@ (800fb94 <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 800fb82:	687b      	ldr	r3, [r7, #4]
 800fb84:	601a      	str	r2, [r3, #0]
    }
 800fb86:	687b      	ldr	r3, [r7, #4]
 800fb88:	4618      	mov	r0, r3
 800fb8a:	370c      	adds	r7, #12
 800fb8c:	46bd      	mov	sp, r7
 800fb8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb92:	4770      	bx	lr
 800fb94:	08027fe8 	.word	0x08027fe8

0800fb98 <_ZN8touchgfx9DMA_QueueD0Ev>:
    virtual ~DMA_Queue()
 800fb98:	b580      	push	{r7, lr}
 800fb9a:	b082      	sub	sp, #8
 800fb9c:	af00      	add	r7, sp, #0
 800fb9e:	6078      	str	r0, [r7, #4]
    }
 800fba0:	6878      	ldr	r0, [r7, #4]
 800fba2:	f7ff ffe9 	bl	800fb78 <_ZN8touchgfx9DMA_QueueD1Ev>
 800fba6:	2104      	movs	r1, #4
 800fba8:	6878      	ldr	r0, [r7, #4]
 800fbaa:	f015 fe10 	bl	80257ce <_ZdlPvj>
 800fbae:	687b      	ldr	r3, [r7, #4]
 800fbb0:	4618      	mov	r0, r3
 800fbb2:	3708      	adds	r7, #8
 800fbb4:	46bd      	mov	sp, r7
 800fbb6:	bd80      	pop	{r7, pc}

0800fbb8 <_ZN8touchgfx13DMA_Interface5flushEv>:
     * @param  op The operation to add.
     */
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
 800fbb8:	b580      	push	{r7, lr}
 800fbba:	b082      	sub	sp, #8
 800fbbc:	af00      	add	r7, sp, #0
 800fbbe:	6078      	str	r0, [r7, #4]
    {
        waitForFrameBufferSemaphore();
 800fbc0:	687b      	ldr	r3, [r7, #4]
 800fbc2:	681b      	ldr	r3, [r3, #0]
 800fbc4:	3344      	adds	r3, #68	@ 0x44
 800fbc6:	681b      	ldr	r3, [r3, #0]
 800fbc8:	6878      	ldr	r0, [r7, #4]
 800fbca:	4798      	blx	r3
    }
 800fbcc:	bf00      	nop
 800fbce:	3708      	adds	r7, #8
 800fbd0:	46bd      	mov	sp, r7
 800fbd2:	bd80      	pop	{r7, pc}

0800fbd4 <_ZN8touchgfx13DMA_InterfaceD1Ev>:
    {
        return DMA_TYPE_GENERIC;
    }

    /** Finalizes an instance of the DMA_Interface class. */
    virtual ~DMA_Interface()
 800fbd4:	b480      	push	{r7}
 800fbd6:	b083      	sub	sp, #12
 800fbd8:	af00      	add	r7, sp, #0
 800fbda:	6078      	str	r0, [r7, #4]
    {
 800fbdc:	4a04      	ldr	r2, [pc, #16]	@ (800fbf0 <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 800fbde:	687b      	ldr	r3, [r7, #4]
 800fbe0:	601a      	str	r2, [r3, #0]
    }
 800fbe2:	687b      	ldr	r3, [r7, #4]
 800fbe4:	4618      	mov	r0, r3
 800fbe6:	370c      	adds	r7, #12
 800fbe8:	46bd      	mov	sp, r7
 800fbea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fbee:	4770      	bx	lr
 800fbf0:	08028360 	.word	0x08028360

0800fbf4 <_ZN8touchgfx13DMA_InterfaceD0Ev>:
    virtual ~DMA_Interface()
 800fbf4:	b580      	push	{r7, lr}
 800fbf6:	b082      	sub	sp, #8
 800fbf8:	af00      	add	r7, sp, #0
 800fbfa:	6078      	str	r0, [r7, #4]
    }
 800fbfc:	6878      	ldr	r0, [r7, #4]
 800fbfe:	f7ff ffe9 	bl	800fbd4 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800fc02:	210c      	movs	r1, #12
 800fc04:	6878      	ldr	r0, [r7, #4]
 800fc06:	f015 fde2 	bl	80257ce <_ZdlPvj>
 800fc0a:	687b      	ldr	r3, [r7, #4]
 800fc0c:	4618      	mov	r0, r3
 800fc0e:	3708      	adds	r7, #8
 800fc10:	46bd      	mov	sp, r7
 800fc12:	bd80      	pop	{r7, pc}

0800fc14 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
    /**
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
 800fc14:	b480      	push	{r7}
 800fc16:	b083      	sub	sp, #12
 800fc18:	af00      	add	r7, sp, #0
 800fc1a:	6078      	str	r0, [r7, #4]
 800fc1c:	6039      	str	r1, [r7, #0]
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800fc1e:	4a09      	ldr	r2, [pc, #36]	@ (800fc44 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 800fc20:	687b      	ldr	r3, [r7, #4]
 800fc22:	601a      	str	r2, [r3, #0]
 800fc24:	687b      	ldr	r3, [r7, #4]
 800fc26:	683a      	ldr	r2, [r7, #0]
 800fc28:	605a      	str	r2, [r3, #4]
 800fc2a:	687b      	ldr	r3, [r7, #4]
 800fc2c:	2200      	movs	r2, #0
 800fc2e:	721a      	strb	r2, [r3, #8]
 800fc30:	687b      	ldr	r3, [r7, #4]
 800fc32:	2200      	movs	r2, #0
 800fc34:	725a      	strb	r2, [r3, #9]
    {
    }
 800fc36:	687b      	ldr	r3, [r7, #4]
 800fc38:	4618      	mov	r0, r3
 800fc3a:	370c      	adds	r7, #12
 800fc3c:	46bd      	mov	sp, r7
 800fc3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fc42:	4770      	bx	lr
 800fc44:	08028360 	.word	0x08028360

0800fc48 <_ZN8STM32DMA10getDMATypeEv>:
     *        Function for obtaining the DMA type of the concrete DMA_Interface implementation.
     *        As default, will return DMA_TYPE_CHROMART type value.
     *
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
 800fc48:	b480      	push	{r7}
 800fc4a:	b083      	sub	sp, #12
 800fc4c:	af00      	add	r7, sp, #0
 800fc4e:	6078      	str	r0, [r7, #4]
    {
        return touchgfx::DMA_TYPE_CHROMART;
 800fc50:	2301      	movs	r3, #1
    }
 800fc52:	4618      	mov	r0, r3
 800fc54:	370c      	adds	r7, #12
 800fc56:	46bd      	mov	sp, r7
 800fc58:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fc5c:	4770      	bx	lr

0800fc5e <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     * @brief Raises a DMA interrupt signal.
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
 800fc5e:	b580      	push	{r7, lr}
 800fc60:	b082      	sub	sp, #8
 800fc62:	af00      	add	r7, sp, #0
 800fc64:	6078      	str	r0, [r7, #4]
    {
        executeCompleted();
 800fc66:	687a      	ldr	r2, [r7, #4]
 800fc68:	687b      	ldr	r3, [r7, #4]
 800fc6a:	681b      	ldr	r3, [r3, #0]
 800fc6c:	3328      	adds	r3, #40	@ 0x28
 800fc6e:	681b      	ldr	r3, [r3, #0]
 800fc70:	4610      	mov	r0, r2
 800fc72:	4798      	blx	r3
    }
 800fc74:	bf00      	nop
 800fc76:	3708      	adds	r7, #8
 800fc78:	46bd      	mov	sp, r7
 800fc7a:	bd80      	pop	{r7, pc}

0800fc7c <_ZN8touchgfx3HAL18signalDMAInterruptEv>:
    void signalDMAInterrupt()
 800fc7c:	b580      	push	{r7, lr}
 800fc7e:	b082      	sub	sp, #8
 800fc80:	af00      	add	r7, sp, #0
 800fc82:	6078      	str	r0, [r7, #4]
        dma.signalDMAInterrupt();
 800fc84:	687b      	ldr	r3, [r7, #4]
 800fc86:	685a      	ldr	r2, [r3, #4]
 800fc88:	687b      	ldr	r3, [r7, #4]
 800fc8a:	685b      	ldr	r3, [r3, #4]
 800fc8c:	681b      	ldr	r3, [r3, #0]
 800fc8e:	3314      	adds	r3, #20
 800fc90:	681b      	ldr	r3, [r3, #0]
 800fc92:	4610      	mov	r0, r2
 800fc94:	4798      	blx	r3
    }
 800fc96:	bf00      	nop
 800fc98:	3708      	adds	r7, #8
 800fc9a:	46bd      	mov	sp, r7
 800fc9c:	bd80      	pop	{r7, pc}
	...

0800fca0 <DMA2D_IRQHandler>:
    const uint16_t size;
    const uint32_t* const data;
} clutData_t;

extern "C" void DMA2D_IRQHandler()
{
 800fca0:	b580      	push	{r7, lr}
 800fca2:	af00      	add	r7, sp, #0
    /* Transfer Complete Interrupt management ************************************/
    if ((READ_REG(DMA2D->ISR) & DMA2D_FLAG_TC) != RESET)
 800fca4:	4b13      	ldr	r3, [pc, #76]	@ (800fcf4 <DMA2D_IRQHandler+0x54>)
 800fca6:	685b      	ldr	r3, [r3, #4]
 800fca8:	f003 0302 	and.w	r3, r3, #2
 800fcac:	2b00      	cmp	r3, #0
 800fcae:	bf14      	ite	ne
 800fcb0:	2301      	movne	r3, #1
 800fcb2:	2300      	moveq	r3, #0
 800fcb4:	b2db      	uxtb	r3, r3
 800fcb6:	2b00      	cmp	r3, #0
 800fcb8:	d019      	beq.n	800fcee <DMA2D_IRQHandler+0x4e>
    {
        /* Verify Transfer Complete Interrupt */
        if ((READ_REG(DMA2D->CR) & DMA2D_IT_TC) != RESET)
 800fcba:	4b0e      	ldr	r3, [pc, #56]	@ (800fcf4 <DMA2D_IRQHandler+0x54>)
 800fcbc:	681b      	ldr	r3, [r3, #0]
 800fcbe:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800fcc2:	2b00      	cmp	r3, #0
 800fcc4:	bf14      	ite	ne
 800fcc6:	2301      	movne	r3, #1
 800fcc8:	2300      	moveq	r3, #0
 800fcca:	b2db      	uxtb	r3, r3
 800fccc:	2b00      	cmp	r3, #0
 800fcce:	d00e      	beq.n	800fcee <DMA2D_IRQHandler+0x4e>
        {
            /* Disable the transfer complete interrupt */
            DMA2D->CR &= ~(DMA2D_IT_TC);
 800fcd0:	4b08      	ldr	r3, [pc, #32]	@ (800fcf4 <DMA2D_IRQHandler+0x54>)
 800fcd2:	681b      	ldr	r3, [r3, #0]
 800fcd4:	4a07      	ldr	r2, [pc, #28]	@ (800fcf4 <DMA2D_IRQHandler+0x54>)
 800fcd6:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 800fcda:	6013      	str	r3, [r2, #0]

            /* Clear the transfer complete flag */
            DMA2D->IFCR = (DMA2D_FLAG_TC);
 800fcdc:	4b05      	ldr	r3, [pc, #20]	@ (800fcf4 <DMA2D_IRQHandler+0x54>)
 800fcde:	2202      	movs	r2, #2
 800fce0:	609a      	str	r2, [r3, #8]

            /* Signal DMA queue of execution complete */
            touchgfx::HAL::getInstance()->signalDMAInterrupt();
 800fce2:	f7fc ff1f 	bl	800cb24 <_ZN8touchgfx3HAL11getInstanceEv>
 800fce6:	4603      	mov	r3, r0
 800fce8:	4618      	mov	r0, r3
 800fcea:	f7ff ffc7 	bl	800fc7c <_ZN8touchgfx3HAL18signalDMAInterruptEv>
        }
    }
}
 800fcee:	bf00      	nop
 800fcf0:	bd80      	pop	{r7, pc}
 800fcf2:	bf00      	nop
 800fcf4:	52001000 	.word	0x52001000

0800fcf8 <_ZN8touchgfx6BlitOpC1Ev>:

/**
 * BlitOp instances carry the required information for performing operations on the LCD
 * (framebuffer) using DMA.
 */
struct BlitOp
 800fcf8:	b580      	push	{r7, lr}
 800fcfa:	b082      	sub	sp, #8
 800fcfc:	af00      	add	r7, sp, #0
 800fcfe:	6078      	str	r0, [r7, #4]
 800fd00:	687b      	ldr	r3, [r7, #4]
 800fd02:	330c      	adds	r3, #12
 800fd04:	4618      	mov	r0, r3
 800fd06:	f7fd fb9d 	bl	800d444 <_ZN8touchgfx9colortypeC1Ev>
 800fd0a:	687b      	ldr	r3, [r7, #4]
 800fd0c:	4618      	mov	r0, r3
 800fd0e:	3708      	adds	r7, #8
 800fd10:	46bd      	mov	sp, r7
 800fd12:	bd80      	pop	{r7, pc}

0800fd14 <_ZN8STM32DMAC1Ev>:

STM32DMA::STM32DMA()
 800fd14:	b5b0      	push	{r4, r5, r7, lr}
 800fd16:	b082      	sub	sp, #8
 800fd18:	af00      	add	r7, sp, #0
 800fd1a:	6078      	str	r0, [r7, #4]
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 800fd1c:	687a      	ldr	r2, [r7, #4]
 800fd1e:	687b      	ldr	r3, [r7, #4]
 800fd20:	330c      	adds	r3, #12
 800fd22:	4619      	mov	r1, r3
 800fd24:	4610      	mov	r0, r2
 800fd26:	f7ff ff75 	bl	800fc14 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 800fd2a:	4a0e      	ldr	r2, [pc, #56]	@ (800fd64 <_ZN8STM32DMAC1Ev+0x50>)
 800fd2c:	687b      	ldr	r3, [r7, #4]
 800fd2e:	601a      	str	r2, [r3, #0]
 800fd30:	687b      	ldr	r3, [r7, #4]
 800fd32:	f103 000c 	add.w	r0, r3, #12
 800fd36:	687b      	ldr	r3, [r7, #4]
 800fd38:	3320      	adds	r3, #32
 800fd3a:	2260      	movs	r2, #96	@ 0x60
 800fd3c:	4619      	mov	r1, r3
 800fd3e:	f002 fcb5 	bl	80126ac <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800fd42:	687b      	ldr	r3, [r7, #4]
 800fd44:	3320      	adds	r3, #32
 800fd46:	245f      	movs	r4, #95	@ 0x5f
 800fd48:	461d      	mov	r5, r3
 800fd4a:	e004      	b.n	800fd56 <_ZN8STM32DMAC1Ev+0x42>
 800fd4c:	4628      	mov	r0, r5
 800fd4e:	f7ff ffd3 	bl	800fcf8 <_ZN8touchgfx6BlitOpC1Ev>
 800fd52:	3c01      	subs	r4, #1
 800fd54:	3524      	adds	r5, #36	@ 0x24
 800fd56:	2c00      	cmp	r4, #0
 800fd58:	daf8      	bge.n	800fd4c <_ZN8STM32DMAC1Ev+0x38>
{
}
 800fd5a:	687b      	ldr	r3, [r7, #4]
 800fd5c:	4618      	mov	r0, r3
 800fd5e:	3708      	adds	r7, #8
 800fd60:	46bd      	mov	sp, r7
 800fd62:	bdb0      	pop	{r4, r5, r7, pc}
 800fd64:	08027f98 	.word	0x08027f98

0800fd68 <_ZN8STM32DMAD1Ev>:

STM32DMA::~STM32DMA()
 800fd68:	b580      	push	{r7, lr}
 800fd6a:	b082      	sub	sp, #8
 800fd6c:	af00      	add	r7, sp, #0
 800fd6e:	6078      	str	r0, [r7, #4]
 800fd70:	4a09      	ldr	r2, [pc, #36]	@ (800fd98 <_ZN8STM32DMAD1Ev+0x30>)
 800fd72:	687b      	ldr	r3, [r7, #4]
 800fd74:	601a      	str	r2, [r3, #0]
{
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
 800fd76:	205a      	movs	r0, #90	@ 0x5a
 800fd78:	f7ff fece 	bl	800fb18 <__NVIC_DisableIRQ>
}
 800fd7c:	687b      	ldr	r3, [r7, #4]
 800fd7e:	330c      	adds	r3, #12
 800fd80:	4618      	mov	r0, r3
 800fd82:	f000 fb9d 	bl	80104c0 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800fd86:	687b      	ldr	r3, [r7, #4]
 800fd88:	4618      	mov	r0, r3
 800fd8a:	f7ff ff23 	bl	800fbd4 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800fd8e:	687b      	ldr	r3, [r7, #4]
 800fd90:	4618      	mov	r0, r3
 800fd92:	3708      	adds	r7, #8
 800fd94:	46bd      	mov	sp, r7
 800fd96:	bd80      	pop	{r7, pc}
 800fd98:	08027f98 	.word	0x08027f98

0800fd9c <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 800fd9c:	b580      	push	{r7, lr}
 800fd9e:	b082      	sub	sp, #8
 800fda0:	af00      	add	r7, sp, #0
 800fda2:	6078      	str	r0, [r7, #4]
}
 800fda4:	6878      	ldr	r0, [r7, #4]
 800fda6:	f7ff ffdf 	bl	800fd68 <_ZN8STM32DMAD1Ev>
 800fdaa:	f44f 615a 	mov.w	r1, #3488	@ 0xda0
 800fdae:	6878      	ldr	r0, [r7, #4]
 800fdb0:	f015 fd0d 	bl	80257ce <_ZdlPvj>
 800fdb4:	687b      	ldr	r3, [r7, #4]
 800fdb6:	4618      	mov	r0, r3
 800fdb8:	3708      	adds	r7, #8
 800fdba:	46bd      	mov	sp, r7
 800fdbc:	bd80      	pop	{r7, pc}
	...

0800fdc0 <_ZN8STM32DMA10initializeEv>:

void STM32DMA::initialize()
{
 800fdc0:	b580      	push	{r7, lr}
 800fdc2:	b084      	sub	sp, #16
 800fdc4:	af00      	add	r7, sp, #0
 800fdc6:	6078      	str	r0, [r7, #4]
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 800fdc8:	4b13      	ldr	r3, [pc, #76]	@ (800fe18 <_ZN8STM32DMA10initializeEv+0x58>)
 800fdca:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 800fdce:	4a12      	ldr	r2, [pc, #72]	@ (800fe18 <_ZN8STM32DMA10initializeEv+0x58>)
 800fdd0:	f043 0310 	orr.w	r3, r3, #16
 800fdd4:	f8c2 30d4 	str.w	r3, [r2, #212]	@ 0xd4
 800fdd8:	4b0f      	ldr	r3, [pc, #60]	@ (800fe18 <_ZN8STM32DMA10initializeEv+0x58>)
 800fdda:	f8d3 30d4 	ldr.w	r3, [r3, #212]	@ 0xd4
 800fdde:	f003 0310 	and.w	r3, r3, #16
 800fde2:	60fb      	str	r3, [r7, #12]
 800fde4:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_DMA2D_FORCE_RESET();
 800fde6:	4b0c      	ldr	r3, [pc, #48]	@ (800fe18 <_ZN8STM32DMA10initializeEv+0x58>)
 800fde8:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800fdea:	4a0b      	ldr	r2, [pc, #44]	@ (800fe18 <_ZN8STM32DMA10initializeEv+0x58>)
 800fdec:	f043 0310 	orr.w	r3, r3, #16
 800fdf0:	67d3      	str	r3, [r2, #124]	@ 0x7c
    __HAL_RCC_DMA2D_RELEASE_RESET();
 800fdf2:	4b09      	ldr	r3, [pc, #36]	@ (800fe18 <_ZN8STM32DMA10initializeEv+0x58>)
 800fdf4:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 800fdf6:	4a08      	ldr	r2, [pc, #32]	@ (800fe18 <_ZN8STM32DMA10initializeEv+0x58>)
 800fdf8:	f023 0310 	bic.w	r3, r3, #16
 800fdfc:	67d3      	str	r3, [r2, #124]	@ 0x7c

    /* Enable DMA2D global Interrupt */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 800fdfe:	2200      	movs	r2, #0
 800fe00:	2105      	movs	r1, #5
 800fe02:	205a      	movs	r0, #90	@ 0x5a
 800fe04:	f7f3 fac7 	bl	8003396 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 800fe08:	205a      	movs	r0, #90	@ 0x5a
 800fe0a:	f7f3 fade 	bl	80033ca <HAL_NVIC_EnableIRQ>
}
 800fe0e:	bf00      	nop
 800fe10:	3710      	adds	r7, #16
 800fe12:	46bd      	mov	sp, r7
 800fe14:	bd80      	pop	{r7, pc}
 800fe16:	bf00      	nop
 800fe18:	58024400 	.word	0x58024400

0800fe1c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:

inline uint32_t STM32DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
{
 800fe1c:	b580      	push	{r7, lr}
 800fe1e:	b084      	sub	sp, #16
 800fe20:	af00      	add	r7, sp, #0
 800fe22:	6078      	str	r0, [r7, #4]
 800fe24:	460b      	mov	r3, r1
 800fe26:	70fb      	strb	r3, [r7, #3]
    // Default color mode set to ARGB8888
    uint32_t dma2dColorMode = DMA2D_INPUT_ARGB8888;
 800fe28:	2300      	movs	r3, #0
 800fe2a:	60fb      	str	r3, [r7, #12]

    switch (format)
 800fe2c:	78fb      	ldrb	r3, [r7, #3]
 800fe2e:	2b0b      	cmp	r3, #11
 800fe30:	d826      	bhi.n	800fe80 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x64>
 800fe32:	a201      	add	r2, pc, #4	@ (adr r2, 800fe38 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1c>)
 800fe34:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800fe38:	0800fe75 	.word	0x0800fe75
 800fe3c:	0800fe6f 	.word	0x0800fe6f
 800fe40:	0800fe69 	.word	0x0800fe69
 800fe44:	0800fe81 	.word	0x0800fe81
 800fe48:	0800fe81 	.word	0x0800fe81
 800fe4c:	0800fe81 	.word	0x0800fe81
 800fe50:	0800fe81 	.word	0x0800fe81
 800fe54:	0800fe7b 	.word	0x0800fe7b
 800fe58:	0800fe7b 	.word	0x0800fe7b
 800fe5c:	0800fe7b 	.word	0x0800fe7b
 800fe60:	0800fe7b 	.word	0x0800fe7b
 800fe64:	0800fe7b 	.word	0x0800fe7b
    {
    case Bitmap::ARGB8888: /* DMA2D input mode set to 32bit ARGB */
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 800fe68:	2300      	movs	r3, #0
 800fe6a:	60fb      	str	r3, [r7, #12]
        break;
 800fe6c:	e00e      	b.n	800fe8c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>
    case Bitmap::RGB888: /* DMA2D input mode set to 24bit RGB */
        dma2dColorMode = DMA2D_INPUT_RGB888;
 800fe6e:	2301      	movs	r3, #1
 800fe70:	60fb      	str	r3, [r7, #12]
        break;
 800fe72:	e00b      	b.n	800fe8c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>
    case Bitmap::RGB565: /* DMA2D input mode set to 16bit RGB */
        dma2dColorMode = DMA2D_INPUT_RGB565;
 800fe74:	2302      	movs	r3, #2
 800fe76:	60fb      	str	r3, [r7, #12]
        break;
 800fe78:	e008      	b.n	800fe8c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>
    case Bitmap::ARGB2222: /* Fall through */
    case Bitmap::ABGR2222: /* Fall through */
    case Bitmap::RGBA2222: /* Fall through */
    case Bitmap::BGRA2222: /* Fall through */
    case Bitmap::L8:       /* DMA2D input mode set to 8bit Color Look up table*/
        dma2dColorMode = DMA2D_INPUT_L8;
 800fe7a:	2305      	movs	r3, #5
 800fe7c:	60fb      	str	r3, [r7, #12]
        break;
 800fe7e:	e005      	b.n	800fe8c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>
    case Bitmap::BW:     /* Fall through */
    case Bitmap::BW_RLE: /* Fall through */
    case Bitmap::GRAY4:  /* Fall through */
    case Bitmap::GRAY2:  /* Fall through */
    default:             /* Unsupported input format for DMA2D */
        assert(0 && "Unsupported Format!");
 800fe80:	4b05      	ldr	r3, [pc, #20]	@ (800fe98 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x7c>)
 800fe82:	4a06      	ldr	r2, [pc, #24]	@ (800fe9c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x80>)
 800fe84:	216b      	movs	r1, #107	@ 0x6b
 800fe86:	4806      	ldr	r0, [pc, #24]	@ (800fea0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x84>)
 800fe88:	f015 fcd0 	bl	802582c <__assert_func>
        break;
    }

    return dma2dColorMode;
 800fe8c:	68fb      	ldr	r3, [r7, #12]
}
 800fe8e:	4618      	mov	r0, r3
 800fe90:	3710      	adds	r7, #16
 800fe92:	46bd      	mov	sp, r7
 800fe94:	bd80      	pop	{r7, pc}
 800fe96:	bf00      	nop
 800fe98:	08027384 	.word	0x08027384
 800fe9c:	080273a0 	.word	0x080273a0
 800fea0:	080273ec 	.word	0x080273ec

0800fea4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:

inline uint32_t STM32DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
{
 800fea4:	b580      	push	{r7, lr}
 800fea6:	b084      	sub	sp, #16
 800fea8:	af00      	add	r7, sp, #0
 800feaa:	6078      	str	r0, [r7, #4]
 800feac:	460b      	mov	r3, r1
 800feae:	70fb      	strb	r3, [r7, #3]
    // Default color mode set to ARGB8888
    uint32_t dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 800feb0:	2300      	movs	r3, #0
 800feb2:	60fb      	str	r3, [r7, #12]

    switch (format)
 800feb4:	78fb      	ldrb	r3, [r7, #3]
 800feb6:	2b0a      	cmp	r3, #10
 800feb8:	d821      	bhi.n	800fefe <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x5a>
 800feba:	a201      	add	r2, pc, #4	@ (adr r2, 800fec0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1c>)
 800febc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800fec0:	0800fef9 	.word	0x0800fef9
 800fec4:	0800fef3 	.word	0x0800fef3
 800fec8:	0800feed 	.word	0x0800feed
 800fecc:	0800feff 	.word	0x0800feff
 800fed0:	0800feff 	.word	0x0800feff
 800fed4:	0800feff 	.word	0x0800feff
 800fed8:	0800feff 	.word	0x0800feff
 800fedc:	0800fef3 	.word	0x0800fef3
 800fee0:	0800fef3 	.word	0x0800fef3
 800fee4:	0800fef3 	.word	0x0800fef3
 800fee8:	0800fef3 	.word	0x0800fef3
    {
    case Bitmap::ARGB8888: /* DMA2D output mode set to 32bit ARGB */
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 800feec:	2300      	movs	r3, #0
 800feee:	60fb      	str	r3, [r7, #12]
        break;
 800fef0:	e00b      	b.n	800ff0a <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x66>
    case Bitmap::RGB888:   /* Fall through */
    case Bitmap::ARGB2222: /* Fall through */
    case Bitmap::ABGR2222: /* Fall through */
    case Bitmap::RGBA2222: /* Fall through */
    case Bitmap::BGRA2222: /* DMA2D output mode set to 24bit RGB */
        dma2dColorMode = DMA2D_OUTPUT_RGB888;
 800fef2:	2301      	movs	r3, #1
 800fef4:	60fb      	str	r3, [r7, #12]
        break;
 800fef6:	e008      	b.n	800ff0a <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x66>
    case Bitmap::RGB565: /* DMA2D output mode set to 16bit RGB */
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 800fef8:	2302      	movs	r3, #2
 800fefa:	60fb      	str	r3, [r7, #12]
        break;
 800fefc:	e005      	b.n	800ff0a <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x66>
    case Bitmap::BW:     /* Fall through */
    case Bitmap::BW_RLE: /* Fall through */
    case Bitmap::GRAY4:  /* Fall through */
    case Bitmap::GRAY2:  /* Fall through */
    default:             /* Unsupported output format for DMA2D */
        assert(0 && "Unsupported Format!");
 800fefe:	4b05      	ldr	r3, [pc, #20]	@ (800ff14 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x70>)
 800ff00:	4a05      	ldr	r2, [pc, #20]	@ (800ff18 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x74>)
 800ff02:	218c      	movs	r1, #140	@ 0x8c
 800ff04:	4805      	ldr	r0, [pc, #20]	@ (800ff1c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x78>)
 800ff06:	f015 fc91 	bl	802582c <__assert_func>
        break;
    }

    return dma2dColorMode;
 800ff0a:	68fb      	ldr	r3, [r7, #12]
}
 800ff0c:	4618      	mov	r0, r3
 800ff0e:	3710      	adds	r7, #16
 800ff10:	46bd      	mov	sp, r7
 800ff12:	bd80      	pop	{r7, pc}
 800ff14:	08027384 	.word	0x08027384
 800ff18:	08027418 	.word	0x08027418
 800ff1c:	080273ec 	.word	0x080273ec

0800ff20 <_ZN8STM32DMA11getBlitCapsEv>:

BlitOperations STM32DMA::getBlitCaps()
{
 800ff20:	b480      	push	{r7}
 800ff22:	b083      	sub	sp, #12
 800ff24:	af00      	add	r7, sp, #0
 800ff26:	6078      	str	r0, [r7, #4]
                                       | BLIT_OP_COPY_L8
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
 800ff28:	f240 33ef 	movw	r3, #1007	@ 0x3ef
}
 800ff2c:	4618      	mov	r0, r3
 800ff2e:	370c      	adds	r7, #12
 800ff30:	46bd      	mov	sp, r7
 800ff32:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ff36:	4770      	bx	lr

0800ff38 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 800ff38:	b590      	push	{r4, r7, lr}
 800ff3a:	b089      	sub	sp, #36	@ 0x24
 800ff3c:	af00      	add	r7, sp, #0
 800ff3e:	6078      	str	r0, [r7, #4]
 800ff40:	6039      	str	r1, [r7, #0]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 800ff42:	683b      	ldr	r3, [r7, #0]
 800ff44:	7f5b      	ldrb	r3, [r3, #29]
 800ff46:	4619      	mov	r1, r3
 800ff48:	6878      	ldr	r0, [r7, #4]
 800ff4a:	f7ff ff67 	bl	800fe1c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
 800ff4e:	61b8      	str	r0, [r7, #24]
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800ff50:	683b      	ldr	r3, [r7, #0]
 800ff52:	7f9b      	ldrb	r3, [r3, #30]
 800ff54:	4619      	mov	r1, r3
 800ff56:	6878      	ldr	r0, [r7, #4]
 800ff58:	f7ff ff60 	bl	800fe1c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
 800ff5c:	6178      	str	r0, [r7, #20]
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800ff5e:	683b      	ldr	r3, [r7, #0]
 800ff60:	7f9b      	ldrb	r3, [r3, #30]
 800ff62:	4619      	mov	r1, r3
 800ff64:	6878      	ldr	r0, [r7, #4]
 800ff66:	f7ff ff9d 	bl	800fea4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>
 800ff6a:	6138      	str	r0, [r7, #16]

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800ff6c:	683b      	ldr	r3, [r7, #0]
 800ff6e:	8b5b      	ldrh	r3, [r3, #26]
 800ff70:	461a      	mov	r2, r3
 800ff72:	683b      	ldr	r3, [r7, #0]
 800ff74:	8a9b      	ldrh	r3, [r3, #20]
 800ff76:	1ad2      	subs	r2, r2, r3
 800ff78:	4b93      	ldr	r3, [pc, #588]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800ff7a:	641a      	str	r2, [r3, #64]	@ 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 800ff7c:	683b      	ldr	r3, [r7, #0]
 800ff7e:	8b5b      	ldrh	r3, [r3, #26]
 800ff80:	461a      	mov	r2, r3
 800ff82:	683b      	ldr	r3, [r7, #0]
 800ff84:	8a9b      	ldrh	r3, [r3, #20]
 800ff86:	1ad2      	subs	r2, r2, r3
 800ff88:	4b8f      	ldr	r3, [pc, #572]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800ff8a:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 800ff8c:	683b      	ldr	r3, [r7, #0]
 800ff8e:	8b1b      	ldrh	r3, [r3, #24]
 800ff90:	461a      	mov	r2, r3
 800ff92:	683b      	ldr	r3, [r7, #0]
 800ff94:	8a9b      	ldrh	r3, [r3, #20]
 800ff96:	1ad2      	subs	r2, r2, r3
 800ff98:	4b8b      	ldr	r3, [pc, #556]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800ff9a:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800ff9c:	4a8a      	ldr	r2, [pc, #552]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800ff9e:	693b      	ldr	r3, [r7, #16]
 800ffa0:	6353      	str	r3, [r2, #52]	@ 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800ffa2:	683b      	ldr	r3, [r7, #0]
 800ffa4:	8adb      	ldrh	r3, [r3, #22]
 800ffa6:	461a      	mov	r2, r3
 800ffa8:	683b      	ldr	r3, [r7, #0]
 800ffaa:	8a9b      	ldrh	r3, [r3, #20]
 800ffac:	041b      	lsls	r3, r3, #16
 800ffae:	431a      	orrs	r2, r3
 800ffb0:	4b85      	ldr	r3, [pc, #532]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800ffb2:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800ffb4:	683b      	ldr	r3, [r7, #0]
 800ffb6:	691a      	ldr	r2, [r3, #16]
 800ffb8:	4b83      	ldr	r3, [pc, #524]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800ffba:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 800ffbc:	683b      	ldr	r3, [r7, #0]
 800ffbe:	685a      	ldr	r2, [r3, #4]
 800ffc0:	4b81      	ldr	r3, [pc, #516]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 800ffc2:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 800ffc4:	683b      	ldr	r3, [r7, #0]
 800ffc6:	681b      	ldr	r3, [r3, #0]
 800ffc8:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800ffcc:	d035      	beq.n	801003a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x102>
 800ffce:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 800ffd2:	f200 80dd 	bhi.w	8010190 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x258>
 800ffd6:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800ffda:	d014      	beq.n	8010006 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xce>
 800ffdc:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 800ffe0:	f200 80d6 	bhi.w	8010190 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x258>
 800ffe4:	2b80      	cmp	r3, #128	@ 0x80
 800ffe6:	d056      	beq.n	8010096 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15e>
 800ffe8:	2b80      	cmp	r3, #128	@ 0x80
 800ffea:	f200 80d1 	bhi.w	8010190 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x258>
 800ffee:	2b40      	cmp	r3, #64	@ 0x40
 800fff0:	f000 80ba 	beq.w	8010168 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x230>
 800fff4:	2b40      	cmp	r3, #64	@ 0x40
 800fff6:	f200 80cb 	bhi.w	8010190 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x258>
 800fffa:	2b04      	cmp	r3, #4
 800fffc:	d037      	beq.n	801006e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x136>
 800fffe:	2b20      	cmp	r3, #32
 8010000:	f000 80b2 	beq.w	8010168 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x230>
 8010004:	e0c4      	b.n	8010190 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x258>
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8010006:	683b      	ldr	r3, [r7, #0]
 8010008:	7f1b      	ldrb	r3, [r3, #28]
 801000a:	061a      	lsls	r2, r3, #24
 801000c:	496e      	ldr	r1, [pc, #440]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 801000e:	4b6f      	ldr	r3, [pc, #444]	@ (80101cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x294>)
 8010010:	4313      	orrs	r3, r2
 8010012:	61cb      	str	r3, [r1, #28]

        /* set DMA2D foreground color */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8010014:	683b      	ldr	r3, [r7, #0]
 8010016:	330c      	adds	r3, #12
 8010018:	4c6b      	ldr	r4, [pc, #428]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 801001a:	4618      	mov	r0, r3
 801001c:	f7ff fda0 	bl	800fb60 <_ZNK8touchgfx9colortypecvmEv>
 8010020:	4603      	mov	r3, r0
 8010022:	6223      	str	r3, [r4, #32]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8010024:	4a68      	ldr	r2, [pc, #416]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 8010026:	697b      	ldr	r3, [r7, #20]
 8010028:	6253      	str	r3, [r2, #36]	@ 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 801002a:	683b      	ldr	r3, [r7, #0]
 801002c:	691a      	ldr	r2, [r3, #16]
 801002e:	4b66      	ldr	r3, [pc, #408]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 8010030:	615a      	str	r2, [r3, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8010032:	4b65      	ldr	r3, [pc, #404]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 8010034:	4a66      	ldr	r2, [pc, #408]	@ (80101d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 8010036:	601a      	str	r2, [r3, #0]
        break;
 8010038:	e0c2      	b.n	80101c0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x288>
    case BLIT_OP_COPY_A8:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 801003a:	683b      	ldr	r3, [r7, #0]
 801003c:	7f1b      	ldrb	r3, [r3, #28]
 801003e:	061a      	lsls	r2, r3, #24
 8010040:	4961      	ldr	r1, [pc, #388]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 8010042:	4b64      	ldr	r3, [pc, #400]	@ (80101d4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 8010044:	4313      	orrs	r3, r2
 8010046:	61cb      	str	r3, [r1, #28]

        /* set DMA2D foreground color */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8010048:	683b      	ldr	r3, [r7, #0]
 801004a:	330c      	adds	r3, #12
 801004c:	4c5e      	ldr	r4, [pc, #376]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 801004e:	4618      	mov	r0, r3
 8010050:	f7ff fd86 	bl	800fb60 <_ZNK8touchgfx9colortypecvmEv>
 8010054:	4603      	mov	r3, r0
 8010056:	6223      	str	r3, [r4, #32]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8010058:	4a5b      	ldr	r2, [pc, #364]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 801005a:	697b      	ldr	r3, [r7, #20]
 801005c:	6253      	str	r3, [r2, #36]	@ 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 801005e:	683b      	ldr	r3, [r7, #0]
 8010060:	691a      	ldr	r2, [r3, #16]
 8010062:	4b59      	ldr	r3, [pc, #356]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 8010064:	615a      	str	r2, [r3, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8010066:	4b58      	ldr	r3, [pc, #352]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 8010068:	4a59      	ldr	r2, [pc, #356]	@ (80101d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 801006a:	601a      	str	r2, [r3, #0]
        break;
 801006c:	e0a8      	b.n	80101c0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x288>
    case BLIT_OP_COPY_WITH_ALPHA:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 801006e:	683b      	ldr	r3, [r7, #0]
 8010070:	7f1b      	ldrb	r3, [r3, #28]
 8010072:	061a      	lsls	r2, r3, #24
 8010074:	69bb      	ldr	r3, [r7, #24]
 8010076:	4313      	orrs	r3, r2
 8010078:	4a53      	ldr	r2, [pc, #332]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 801007a:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 801007e:	61d3      	str	r3, [r2, #28]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8010080:	4a51      	ldr	r2, [pc, #324]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 8010082:	697b      	ldr	r3, [r7, #20]
 8010084:	6253      	str	r3, [r2, #36]	@ 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8010086:	683b      	ldr	r3, [r7, #0]
 8010088:	691a      	ldr	r2, [r3, #16]
 801008a:	4b4f      	ldr	r3, [pc, #316]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 801008c:	615a      	str	r2, [r3, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 801008e:	4b4e      	ldr	r3, [pc, #312]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 8010090:	4a4f      	ldr	r2, [pc, #316]	@ (80101d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 8010092:	601a      	str	r2, [r3, #0]
        break;
 8010094:	e094      	b.n	80101c0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x288>
    case BLIT_OP_COPY_L8:
        {
            bool blend = true;
 8010096:	2301      	movs	r3, #1
 8010098:	77fb      	strb	r3, [r7, #31]
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 801009a:	683b      	ldr	r3, [r7, #0]
 801009c:	689b      	ldr	r3, [r3, #8]
 801009e:	60fb      	str	r3, [r7, #12]

            /* Write foreground CLUT memory address */
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 80100a0:	68fb      	ldr	r3, [r7, #12]
 80100a2:	1d1a      	adds	r2, r3, #4
 80100a4:	4b48      	ldr	r3, [pc, #288]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 80100a6:	62da      	str	r2, [r3, #44]	@ 0x2c

            /* Set DMA2D color mode and alpha mode */
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80100a8:	683b      	ldr	r3, [r7, #0]
 80100aa:	7f1b      	ldrb	r3, [r3, #28]
 80100ac:	061a      	lsls	r2, r3, #24
 80100ae:	69bb      	ldr	r3, [r7, #24]
 80100b0:	4313      	orrs	r3, r2
 80100b2:	4a45      	ldr	r2, [pc, #276]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 80100b4:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80100b8:	61d3      	str	r3, [r2, #28]

            /* Write DMA2D BGPFCCR register */
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80100ba:	4a43      	ldr	r2, [pc, #268]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 80100bc:	697b      	ldr	r3, [r7, #20]
 80100be:	6253      	str	r3, [r2, #36]	@ 0x24

            /* Configure DMA2D Stream source2 address */
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80100c0:	683b      	ldr	r3, [r7, #0]
 80100c2:	691a      	ldr	r2, [r3, #16]
 80100c4:	4b40      	ldr	r3, [pc, #256]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 80100c6:	615a      	str	r2, [r3, #20]

            /* Configure CLUT */
            switch ((Bitmap::ClutFormat)palette->format)
 80100c8:	68fb      	ldr	r3, [r7, #12]
 80100ca:	881b      	ldrh	r3, [r3, #0]
 80100cc:	b2db      	uxtb	r3, r3
 80100ce:	2b00      	cmp	r3, #0
 80100d0:	d002      	beq.n	80100d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1a0>
 80100d2:	2b01      	cmp	r3, #1
 80100d4:	d00d      	beq.n	80100f2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1ba>
 80100d6:	e020      	b.n	801011a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1e2>
            {
            case Bitmap::CLUT_FORMAT_L8_ARGB8888:
                /* Write foreground CLUT size and CLUT color mode */
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 80100d8:	4b3b      	ldr	r3, [pc, #236]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 80100da:	69da      	ldr	r2, [r3, #28]
 80100dc:	4b3e      	ldr	r3, [pc, #248]	@ (80101d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a0>)
 80100de:	4013      	ands	r3, r2
 80100e0:	68fa      	ldr	r2, [r7, #12]
 80100e2:	8852      	ldrh	r2, [r2, #2]
 80100e4:	3a01      	subs	r2, #1
 80100e6:	0212      	lsls	r2, r2, #8
 80100e8:	4611      	mov	r1, r2
 80100ea:	4a37      	ldr	r2, [pc, #220]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 80100ec:	430b      	orrs	r3, r1
 80100ee:	61d3      	str	r3, [r2, #28]
                break;
 80100f0:	e01a      	b.n	8010128 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1f0>
            case Bitmap::CLUT_FORMAT_L8_RGB888:
                if (blitOp.alpha == 255)
 80100f2:	683b      	ldr	r3, [r7, #0]
 80100f4:	7f1b      	ldrb	r3, [r3, #28]
 80100f6:	2bff      	cmp	r3, #255	@ 0xff
 80100f8:	d101      	bne.n	80100fe <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c6>
                {
                    blend = false;
 80100fa:	2300      	movs	r3, #0
 80100fc:	77fb      	strb	r3, [r7, #31]
                }
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 80100fe:	4b32      	ldr	r3, [pc, #200]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 8010100:	69da      	ldr	r2, [r3, #28]
 8010102:	4b35      	ldr	r3, [pc, #212]	@ (80101d8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a0>)
 8010104:	4013      	ands	r3, r2
 8010106:	68fa      	ldr	r2, [r7, #12]
 8010108:	8852      	ldrh	r2, [r2, #2]
 801010a:	3a01      	subs	r2, #1
 801010c:	0212      	lsls	r2, r2, #8
 801010e:	4313      	orrs	r3, r2
 8010110:	4a2d      	ldr	r2, [pc, #180]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 8010112:	f043 0310 	orr.w	r3, r3, #16
 8010116:	61d3      	str	r3, [r2, #28]
                break;
 8010118:	e006      	b.n	8010128 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1f0>

            case Bitmap::CLUT_FORMAT_L8_RGB565:
            default:
                assert(0 && "Unsupported format");
 801011a:	4b30      	ldr	r3, [pc, #192]	@ (80101dc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a4>)
 801011c:	4a30      	ldr	r2, [pc, #192]	@ (80101e0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a8>)
 801011e:	f44f 718b 	mov.w	r1, #278	@ 0x116
 8010122:	4830      	ldr	r0, [pc, #192]	@ (80101e4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2ac>)
 8010124:	f015 fb82 	bl	802582c <__assert_func>
                break;
            }

            /* Enable the CLUT loading for the foreground */
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8010128:	4b27      	ldr	r3, [pc, #156]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 801012a:	69db      	ldr	r3, [r3, #28]
 801012c:	4a26      	ldr	r2, [pc, #152]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 801012e:	f043 0320 	orr.w	r3, r3, #32
 8010132:	61d3      	str	r3, [r2, #28]

            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8010134:	bf00      	nop
 8010136:	4b24      	ldr	r3, [pc, #144]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 8010138:	69db      	ldr	r3, [r3, #28]
 801013a:	f003 0320 	and.w	r3, r3, #32
 801013e:	2b00      	cmp	r3, #0
 8010140:	bf14      	ite	ne
 8010142:	2301      	movne	r3, #1
 8010144:	2300      	moveq	r3, #0
 8010146:	b2db      	uxtb	r3, r3
 8010148:	2b00      	cmp	r3, #0
 801014a:	d1f4      	bne.n	8010136 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1fe>
            {
            }
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 801014c:	4b1e      	ldr	r3, [pc, #120]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 801014e:	2210      	movs	r2, #16
 8010150:	609a      	str	r2, [r3, #8]

            /* Set DMA2D mode */
            if (blend)
 8010152:	7ffb      	ldrb	r3, [r7, #31]
 8010154:	2b00      	cmp	r3, #0
 8010156:	d003      	beq.n	8010160 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x228>
            {
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8010158:	4b1b      	ldr	r3, [pc, #108]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 801015a:	4a1d      	ldr	r2, [pc, #116]	@ (80101d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 801015c:	601a      	str	r2, [r3, #0]
            else
            {
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
            }
        }
        break;
 801015e:	e02f      	b.n	80101c0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x288>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8010160:	4b19      	ldr	r3, [pc, #100]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 8010162:	4a21      	ldr	r2, [pc, #132]	@ (80101e8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2b0>)
 8010164:	601a      	str	r2, [r3, #0]
        break;
 8010166:	e02b      	b.n	80101c0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x288>
    case BLIT_OP_COPY_ARGB8888:
    case BLIT_OP_COPY_ARGB8888_WITH_ALPHA:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8010168:	683b      	ldr	r3, [r7, #0]
 801016a:	7f1b      	ldrb	r3, [r3, #28]
 801016c:	061a      	lsls	r2, r3, #24
 801016e:	69bb      	ldr	r3, [r7, #24]
 8010170:	4313      	orrs	r3, r2
 8010172:	4a15      	ldr	r2, [pc, #84]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 8010174:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8010178:	61d3      	str	r3, [r2, #28]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 801017a:	4a13      	ldr	r2, [pc, #76]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 801017c:	697b      	ldr	r3, [r7, #20]
 801017e:	6253      	str	r3, [r2, #36]	@ 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8010180:	683b      	ldr	r3, [r7, #0]
 8010182:	691a      	ldr	r2, [r3, #16]
 8010184:	4b10      	ldr	r3, [pc, #64]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 8010186:	615a      	str	r2, [r3, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 8010188:	4b0f      	ldr	r3, [pc, #60]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 801018a:	4a11      	ldr	r2, [pc, #68]	@ (80101d0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x298>)
 801018c:	601a      	str	r2, [r3, #0]
        break;
 801018e:	e017      	b.n	80101c0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x288>
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8010190:	683b      	ldr	r3, [r7, #0]
 8010192:	7f1b      	ldrb	r3, [r3, #28]
 8010194:	061a      	lsls	r2, r3, #24
 8010196:	69bb      	ldr	r3, [r7, #24]
 8010198:	4313      	orrs	r3, r2
 801019a:	4a0b      	ldr	r2, [pc, #44]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 801019c:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80101a0:	61d3      	str	r3, [r2, #28]

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 80101a2:	683b      	ldr	r3, [r7, #0]
 80101a4:	7f5a      	ldrb	r2, [r3, #29]
 80101a6:	683b      	ldr	r3, [r7, #0]
 80101a8:	7f9b      	ldrb	r3, [r3, #30]
 80101aa:	429a      	cmp	r2, r3
 80101ac:	d003      	beq.n	80101b6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x27e>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 80101ae:	4b06      	ldr	r3, [pc, #24]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 80101b0:	4a0d      	ldr	r2, [pc, #52]	@ (80101e8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2b0>)
 80101b2:	601a      	str	r2, [r3, #0]
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
        }
        break;
 80101b4:	e003      	b.n	80101be <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x286>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START | DMA2D_IT_CE | DMA2D_IT_TE);
 80101b6:	4b04      	ldr	r3, [pc, #16]	@ (80101c8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x290>)
 80101b8:	f242 3201 	movw	r2, #8961	@ 0x2301
 80101bc:	601a      	str	r2, [r3, #0]
        break;
 80101be:	bf00      	nop
    }
}
 80101c0:	bf00      	nop
 80101c2:	3724      	adds	r7, #36	@ 0x24
 80101c4:	46bd      	mov	sp, r7
 80101c6:	bd90      	pop	{r4, r7, pc}
 80101c8:	52001000 	.word	0x52001000
 80101cc:	0002000a 	.word	0x0002000a
 80101d0:	00022301 	.word	0x00022301
 80101d4:	00020009 	.word	0x00020009
 80101d8:	ffff00ef 	.word	0xffff00ef
 80101dc:	08027464 	.word	0x08027464
 80101e0:	08027480 	.word	0x08027480
 80101e4:	080273ec 	.word	0x080273ec
 80101e8:	00012301 	.word	0x00012301

080101ec <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 80101ec:	b590      	push	{r4, r7, lr}
 80101ee:	b085      	sub	sp, #20
 80101f0:	af00      	add	r7, sp, #0
 80101f2:	6078      	str	r0, [r7, #4]
 80101f4:	6039      	str	r1, [r7, #0]
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80101f6:	683b      	ldr	r3, [r7, #0]
 80101f8:	7f9b      	ldrb	r3, [r3, #30]
 80101fa:	4619      	mov	r1, r3
 80101fc:	6878      	ldr	r0, [r7, #4]
 80101fe:	f7ff fe51 	bl	800fea4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>
 8010202:	60f8      	str	r0, [r7, #12]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8010204:	4a3a      	ldr	r2, [pc, #232]	@ (80102f0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 8010206:	68fb      	ldr	r3, [r7, #12]
 8010208:	6353      	str	r3, [r2, #52]	@ 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 801020a:	683b      	ldr	r3, [r7, #0]
 801020c:	8adb      	ldrh	r3, [r3, #22]
 801020e:	461a      	mov	r2, r3
 8010210:	683b      	ldr	r3, [r7, #0]
 8010212:	8a9b      	ldrh	r3, [r3, #20]
 8010214:	041b      	lsls	r3, r3, #16
 8010216:	431a      	orrs	r2, r3
 8010218:	4b35      	ldr	r3, [pc, #212]	@ (80102f0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 801021a:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 801021c:	683b      	ldr	r3, [r7, #0]
 801021e:	691a      	ldr	r2, [r3, #16]
 8010220:	4b33      	ldr	r3, [pc, #204]	@ (80102f0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 8010222:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8010224:	683b      	ldr	r3, [r7, #0]
 8010226:	8b5b      	ldrh	r3, [r3, #26]
 8010228:	461a      	mov	r2, r3
 801022a:	683b      	ldr	r3, [r7, #0]
 801022c:	8a9b      	ldrh	r3, [r3, #20]
 801022e:	1ad2      	subs	r2, r2, r3
 8010230:	4b2f      	ldr	r3, [pc, #188]	@ (80102f0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 8010232:	641a      	str	r2, [r3, #64]	@ 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8010234:	683b      	ldr	r3, [r7, #0]
 8010236:	681b      	ldr	r3, [r3, #0]
 8010238:	2b08      	cmp	r3, #8
 801023a:	d12d      	bne.n	8010298 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xac>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 801023c:	683b      	ldr	r3, [r7, #0]
 801023e:	8b5b      	ldrh	r3, [r3, #26]
 8010240:	461a      	mov	r2, r3
 8010242:	683b      	ldr	r3, [r7, #0]
 8010244:	8a9b      	ldrh	r3, [r3, #20]
 8010246:	1ad2      	subs	r2, r2, r3
 8010248:	4b29      	ldr	r3, [pc, #164]	@ (80102f0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 801024a:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 801024c:	683b      	ldr	r3, [r7, #0]
 801024e:	8b5b      	ldrh	r3, [r3, #26]
 8010250:	461a      	mov	r2, r3
 8010252:	683b      	ldr	r3, [r7, #0]
 8010254:	8a9b      	ldrh	r3, [r3, #20]
 8010256:	1ad2      	subs	r2, r2, r3
 8010258:	4b25      	ldr	r3, [pc, #148]	@ (80102f0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 801025a:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 801025c:	4a24      	ldr	r2, [pc, #144]	@ (80102f0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 801025e:	68fb      	ldr	r3, [r7, #12]
 8010260:	6253      	str	r3, [r2, #36]	@ 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8010262:	683b      	ldr	r3, [r7, #0]
 8010264:	7f1b      	ldrb	r3, [r3, #28]
 8010266:	061a      	lsls	r2, r3, #24
 8010268:	4921      	ldr	r1, [pc, #132]	@ (80102f0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 801026a:	4b22      	ldr	r3, [pc, #136]	@ (80102f4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x108>)
 801026c:	4313      	orrs	r3, r2
 801026e:	61cb      	str	r3, [r1, #28]

        /* DMA2D FGCOLR register configuration */
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8010270:	683b      	ldr	r3, [r7, #0]
 8010272:	330c      	adds	r3, #12
 8010274:	4c1e      	ldr	r4, [pc, #120]	@ (80102f0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 8010276:	4618      	mov	r0, r3
 8010278:	f7ff fc72 	bl	800fb60 <_ZNK8touchgfx9colortypecvmEv>
 801027c:	4603      	mov	r3, r0
 801027e:	6223      	str	r3, [r4, #32]

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8010280:	683b      	ldr	r3, [r7, #0]
 8010282:	691a      	ldr	r2, [r3, #16]
 8010284:	4b1a      	ldr	r3, [pc, #104]	@ (80102f0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 8010286:	615a      	str	r2, [r3, #20]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8010288:	683b      	ldr	r3, [r7, #0]
 801028a:	691a      	ldr	r2, [r3, #16]
 801028c:	4b18      	ldr	r3, [pc, #96]	@ (80102f0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 801028e:	60da      	str	r2, [r3, #12]

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND | DMA2D_IT_CE | DMA2D_IT_TE));
 8010290:	4b17      	ldr	r3, [pc, #92]	@ (80102f0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 8010292:	4a19      	ldr	r2, [pc, #100]	@ (80102f8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10c>)
 8010294:	601a      	str	r2, [r3, #0]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
    }
}
 8010296:	e027      	b.n	80102e8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0xfc>
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8010298:	4a15      	ldr	r2, [pc, #84]	@ (80102f0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 801029a:	68fb      	ldr	r3, [r7, #12]
 801029c:	61d3      	str	r3, [r2, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 801029e:	4b14      	ldr	r3, [pc, #80]	@ (80102f0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 80102a0:	2200      	movs	r2, #0
 80102a2:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 80102a4:	683b      	ldr	r3, [r7, #0]
 80102a6:	330c      	adds	r3, #12
 80102a8:	4618      	mov	r0, r3
 80102aa:	f7ff fc59 	bl	800fb60 <_ZNK8touchgfx9colortypecvmEv>
 80102ae:	4603      	mov	r3, r0
 80102b0:	0a1b      	lsrs	r3, r3, #8
 80102b2:	f403 4478 	and.w	r4, r3, #63488	@ 0xf800
 80102b6:	683b      	ldr	r3, [r7, #0]
 80102b8:	330c      	adds	r3, #12
 80102ba:	4618      	mov	r0, r3
 80102bc:	f7ff fc50 	bl	800fb60 <_ZNK8touchgfx9colortypecvmEv>
 80102c0:	4603      	mov	r3, r0
 80102c2:	095b      	lsrs	r3, r3, #5
 80102c4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80102c8:	431c      	orrs	r4, r3
 80102ca:	683b      	ldr	r3, [r7, #0]
 80102cc:	330c      	adds	r3, #12
 80102ce:	4618      	mov	r0, r3
 80102d0:	f7ff fc46 	bl	800fb60 <_ZNK8touchgfx9colortypecvmEv>
 80102d4:	4603      	mov	r3, r0
 80102d6:	08db      	lsrs	r3, r3, #3
 80102d8:	f003 031f 	and.w	r3, r3, #31
 80102dc:	4a04      	ldr	r2, [pc, #16]	@ (80102f0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 80102de:	4323      	orrs	r3, r4
 80102e0:	6393      	str	r3, [r2, #56]	@ 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M | DMA2D_IT_CE | DMA2D_IT_TE));
 80102e2:	4b03      	ldr	r3, [pc, #12]	@ (80102f0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x104>)
 80102e4:	4a05      	ldr	r2, [pc, #20]	@ (80102fc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x110>)
 80102e6:	601a      	str	r2, [r3, #0]
}
 80102e8:	bf00      	nop
 80102ea:	3714      	adds	r7, #20
 80102ec:	46bd      	mov	sp, r7
 80102ee:	bd90      	pop	{r4, r7, pc}
 80102f0:	52001000 	.word	0x52001000
 80102f4:	00010009 	.word	0x00010009
 80102f8:	00022301 	.word	0x00022301
 80102fc:	00032301 	.word	0x00032301

08010300 <_ZN8touchgfx5paint8tearDownEv>:
 * @fn void tearDown();
 *
 * @brief Waits until previous DMA drawing operation has finished
 */
void tearDown()
{
 8010300:	b480      	push	{r7}
 8010302:	af00      	add	r7, sp, #0
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8010304:	bf00      	nop
 8010306:	4b09      	ldr	r3, [pc, #36]	@ (801032c <_ZN8touchgfx5paint8tearDownEv+0x2c>)
 8010308:	681b      	ldr	r3, [r3, #0]
 801030a:	f003 0301 	and.w	r3, r3, #1
 801030e:	2b00      	cmp	r3, #0
 8010310:	bf14      	ite	ne
 8010312:	2301      	movne	r3, #1
 8010314:	2300      	moveq	r3, #0
 8010316:	b2db      	uxtb	r3, r3
 8010318:	2b00      	cmp	r3, #0
 801031a:	d1f4      	bne.n	8010306 <_ZN8touchgfx5paint8tearDownEv+0x6>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 801031c:	4b03      	ldr	r3, [pc, #12]	@ (801032c <_ZN8touchgfx5paint8tearDownEv+0x2c>)
 801031e:	2223      	movs	r2, #35	@ 0x23
 8010320:	609a      	str	r2, [r3, #8]
}
 8010322:	bf00      	nop
 8010324:	46bd      	mov	sp, r7
 8010326:	f85d 7b04 	ldr.w	r7, [sp], #4
 801032a:	4770      	bx	lr
 801032c:	52001000 	.word	0x52001000

08010330 <_ZN8touchgfx5paint9flushLineEPmi>:
/** Flushes a line of pixels in the data cache if used.
 *
 * @brief Flushes decoded RGB pixels when rendering compressed images
 */
void flushLine(uint32_t* addr, int sizebytes)
{
 8010330:	b480      	push	{r7}
 8010332:	b087      	sub	sp, #28
 8010334:	af00      	add	r7, sp, #0
 8010336:	6078      	str	r0, [r7, #4]
 8010338:	6039      	str	r1, [r7, #0]
    // This funciton is used when decompressing RGB images to flush
    // the currently decoded pixels in the cache to allow the DMA2D
    // to blend the pixels correcly.
    if (SCB->CCR & SCB_CCR_DC_Msk)
 801033a:	4b1b      	ldr	r3, [pc, #108]	@ (80103a8 <_ZN8touchgfx5paint9flushLineEPmi+0x78>)
 801033c:	695b      	ldr	r3, [r3, #20]
 801033e:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8010342:	2b00      	cmp	r3, #0
 8010344:	bf14      	ite	ne
 8010346:	2301      	movne	r3, #1
 8010348:	2300      	moveq	r3, #0
 801034a:	b2db      	uxtb	r3, r3
 801034c:	2b00      	cmp	r3, #0
 801034e:	d025      	beq.n	801039c <_ZN8touchgfx5paint9flushLineEPmi+0x6c>
 8010350:	687b      	ldr	r3, [r7, #4]
 8010352:	617b      	str	r3, [r7, #20]
 8010354:	683b      	ldr	r3, [r7, #0]
 8010356:	613b      	str	r3, [r7, #16]
    if ( dsize > 0 ) { 
 8010358:	693b      	ldr	r3, [r7, #16]
 801035a:	2b00      	cmp	r3, #0
 801035c:	dd1d      	ble.n	801039a <_ZN8touchgfx5paint9flushLineEPmi+0x6a>
       int32_t op_size = dsize + (((uint32_t)addr) & (__SCB_DCACHE_LINE_SIZE - 1U));
 801035e:	697b      	ldr	r3, [r7, #20]
 8010360:	f003 021f 	and.w	r2, r3, #31
 8010364:	693b      	ldr	r3, [r7, #16]
 8010366:	4413      	add	r3, r2
 8010368:	60fb      	str	r3, [r7, #12]
      uint32_t op_addr = (uint32_t)addr /* & ~(__SCB_DCACHE_LINE_SIZE - 1U) */;
 801036a:	697b      	ldr	r3, [r7, #20]
 801036c:	60bb      	str	r3, [r7, #8]
  __ASM volatile ("dsb 0xF":::"memory");
 801036e:	f3bf 8f4f 	dsb	sy
}
 8010372:	bf00      	nop
        SCB->DCCMVAC = op_addr;             /* register accepts only 32byte aligned values, only bits 31..5 are valid */
 8010374:	4a0c      	ldr	r2, [pc, #48]	@ (80103a8 <_ZN8touchgfx5paint9flushLineEPmi+0x78>)
 8010376:	68bb      	ldr	r3, [r7, #8]
 8010378:	f8c2 3268 	str.w	r3, [r2, #616]	@ 0x268
        op_addr += __SCB_DCACHE_LINE_SIZE;
 801037c:	68bb      	ldr	r3, [r7, #8]
 801037e:	3320      	adds	r3, #32
 8010380:	60bb      	str	r3, [r7, #8]
        op_size -= __SCB_DCACHE_LINE_SIZE;
 8010382:	68fb      	ldr	r3, [r7, #12]
 8010384:	3b20      	subs	r3, #32
 8010386:	60fb      	str	r3, [r7, #12]
      } while ( op_size > 0 );
 8010388:	68fb      	ldr	r3, [r7, #12]
 801038a:	2b00      	cmp	r3, #0
 801038c:	dcf2      	bgt.n	8010374 <_ZN8touchgfx5paint9flushLineEPmi+0x44>
  __ASM volatile ("dsb 0xF":::"memory");
 801038e:	f3bf 8f4f 	dsb	sy
}
 8010392:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8010394:	f3bf 8f6f 	isb	sy
}
 8010398:	bf00      	nop
}
 801039a:	bf00      	nop
    {
        SCB_CleanDCache_by_Addr(addr, sizebytes);
    }
}
 801039c:	bf00      	nop
 801039e:	371c      	adds	r7, #28
 80103a0:	46bd      	mov	sp, r7
 80103a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80103a6:	4770      	bx	lr
 80103a8:	e000ed00 	.word	0xe000ed00

080103ac <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
 80103ac:	b480      	push	{r7}
 80103ae:	b085      	sub	sp, #20
 80103b0:	af00      	add	r7, sp, #0
 80103b2:	60f8      	str	r0, [r7, #12]
 80103b4:	60b9      	str	r1, [r7, #8]
 80103b6:	607a      	str	r2, [r7, #4]
 80103b8:	70fb      	strb	r3, [r7, #3]
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 80103ba:	bf00      	nop
 80103bc:	4b1f      	ldr	r3, [pc, #124]	@ (801043c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 80103be:	681b      	ldr	r3, [r3, #0]
 80103c0:	f003 0301 	and.w	r3, r3, #1
 80103c4:	2b00      	cmp	r3, #0
 80103c6:	bf14      	ite	ne
 80103c8:	2301      	movne	r3, #1
 80103ca:	2300      	moveq	r3, #0
 80103cc:	b2db      	uxtb	r3, r3
 80103ce:	2b00      	cmp	r3, #0
 80103d0:	d1f4      	bne.n	80103bc <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x10>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 80103d2:	4b1a      	ldr	r3, [pc, #104]	@ (801043c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 80103d4:	2223      	movs	r2, #35	@ 0x23
 80103d6:	609a      	str	r2, [r3, #8]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 80103d8:	4b18      	ldr	r3, [pc, #96]	@ (801043c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 80103da:	2202      	movs	r2, #2
 80103dc:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80103de:	687b      	ldr	r3, [r7, #4]
 80103e0:	041b      	lsls	r3, r3, #16
 80103e2:	4a16      	ldr	r2, [pc, #88]	@ (801043c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 80103e4:	f043 0301 	orr.w	r3, r3, #1
 80103e8:	6453      	str	r3, [r2, #68]	@ 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 80103ea:	4a14      	ldr	r2, [pc, #80]	@ (801043c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 80103ec:	68fb      	ldr	r3, [r7, #12]
 80103ee:	63d3      	str	r3, [r2, #60]	@ 0x3c

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 80103f0:	4a12      	ldr	r2, [pc, #72]	@ (801043c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 80103f2:	68bb      	ldr	r3, [r7, #8]
 80103f4:	60d3      	str	r3, [r2, #12]

    if (alpha < 0xFF)
 80103f6:	78fb      	ldrb	r3, [r7, #3]
 80103f8:	2bff      	cmp	r3, #255	@ 0xff
 80103fa:	d00f      	beq.n	801041c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x70>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 80103fc:	78fb      	ldrb	r3, [r7, #3]
 80103fe:	061b      	lsls	r3, r3, #24
 8010400:	4a0e      	ldr	r2, [pc, #56]	@ (801043c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 8010402:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
 8010406:	61d3      	str	r3, [r2, #28]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8010408:	4b0c      	ldr	r3, [pc, #48]	@ (801043c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 801040a:	2202      	movs	r2, #2
 801040c:	625a      	str	r2, [r3, #36]	@ 0x24

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 801040e:	4a0b      	ldr	r2, [pc, #44]	@ (801043c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 8010410:	68fb      	ldr	r3, [r7, #12]
 8010412:	6153      	str	r3, [r2, #20]

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8010414:	4b09      	ldr	r3, [pc, #36]	@ (801043c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 8010416:	4a0a      	ldr	r2, [pc, #40]	@ (8010440 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x94>)
 8010418:	601a      	str	r2, [r3, #0]
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
    }
}
 801041a:	e008      	b.n	801042e <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x82>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 801041c:	78fb      	ldrb	r3, [r7, #3]
 801041e:	061b      	lsls	r3, r3, #24
 8010420:	4a06      	ldr	r2, [pc, #24]	@ (801043c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 8010422:	f043 1302 	orr.w	r3, r3, #131074	@ 0x20002
 8010426:	61d3      	str	r3, [r2, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 8010428:	4b04      	ldr	r3, [pc, #16]	@ (801043c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x90>)
 801042a:	2201      	movs	r2, #1
 801042c:	601a      	str	r2, [r3, #0]
}
 801042e:	bf00      	nop
 8010430:	3714      	adds	r7, #20
 8010432:	46bd      	mov	sp, r7
 8010434:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010438:	4770      	bx	lr
 801043a:	bf00      	nop
 801043c:	52001000 	.word	0x52001000
 8010440:	00020001 	.word	0x00020001

08010444 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 8010444:	b480      	push	{r7}
 8010446:	b085      	sub	sp, #20
 8010448:	af00      	add	r7, sp, #0
 801044a:	60f8      	str	r0, [r7, #12]
 801044c:	60b9      	str	r1, [r7, #8]
 801044e:	607a      	str	r2, [r7, #4]
 8010450:	70fb      	strb	r3, [r7, #3]
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8010452:	bf00      	nop
 8010454:	4b18      	ldr	r3, [pc, #96]	@ (80104b8 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 8010456:	681b      	ldr	r3, [r3, #0]
 8010458:	f003 0301 	and.w	r3, r3, #1
 801045c:	2b00      	cmp	r3, #0
 801045e:	bf14      	ite	ne
 8010460:	2301      	movne	r3, #1
 8010462:	2300      	moveq	r3, #0
 8010464:	b2db      	uxtb	r3, r3
 8010466:	2b00      	cmp	r3, #0
 8010468:	d1f4      	bne.n	8010454 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x10>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 801046a:	4b13      	ldr	r3, [pc, #76]	@ (80104b8 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 801046c:	2223      	movs	r2, #35	@ 0x23
 801046e:	609a      	str	r2, [r3, #8]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8010470:	4b11      	ldr	r3, [pc, #68]	@ (80104b8 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 8010472:	2202      	movs	r2, #2
 8010474:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8010476:	687b      	ldr	r3, [r7, #4]
 8010478:	041b      	lsls	r3, r3, #16
 801047a:	4a0f      	ldr	r2, [pc, #60]	@ (80104b8 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 801047c:	f043 0301 	orr.w	r3, r3, #1
 8010480:	6453      	str	r3, [r2, #68]	@ 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8010482:	4a0d      	ldr	r2, [pc, #52]	@ (80104b8 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 8010484:	68fb      	ldr	r3, [r7, #12]
 8010486:	63d3      	str	r3, [r2, #60]	@ 0x3c

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 8010488:	4a0b      	ldr	r2, [pc, #44]	@ (80104b8 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 801048a:	68bb      	ldr	r3, [r7, #8]
 801048c:	60d3      	str	r3, [r2, #12]

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << DMA2D_FGPFCCR_ALPHA_Pos));
 801048e:	78fb      	ldrb	r3, [r7, #3]
 8010490:	061b      	lsls	r3, r3, #24
 8010492:	4a09      	ldr	r2, [pc, #36]	@ (80104b8 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 8010494:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8010498:	61d3      	str	r3, [r2, #28]

    /* Write DMA2D BGPFCCR register */
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 801049a:	4b07      	ldr	r3, [pc, #28]	@ (80104b8 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 801049c:	2202      	movs	r2, #2
 801049e:	625a      	str	r2, [r3, #36]	@ 0x24

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 80104a0:	4a05      	ldr	r2, [pc, #20]	@ (80104b8 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 80104a2:	68fb      	ldr	r3, [r7, #12]
 80104a4:	6153      	str	r3, [r2, #20]

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 80104a6:	4b04      	ldr	r3, [pc, #16]	@ (80104b8 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x74>)
 80104a8:	4a04      	ldr	r2, [pc, #16]	@ (80104bc <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x78>)
 80104aa:	601a      	str	r2, [r3, #0]
}
 80104ac:	bf00      	nop
 80104ae:	3714      	adds	r7, #20
 80104b0:	46bd      	mov	sp, r7
 80104b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80104b6:	4770      	bx	lr
 80104b8:	52001000 	.word	0x52001000
 80104bc:	00020001 	.word	0x00020001

080104c0 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
class LockFreeDMA_Queue : public DMA_Queue
 80104c0:	b580      	push	{r7, lr}
 80104c2:	b082      	sub	sp, #8
 80104c4:	af00      	add	r7, sp, #0
 80104c6:	6078      	str	r0, [r7, #4]
 80104c8:	4a05      	ldr	r2, [pc, #20]	@ (80104e0 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 80104ca:	687b      	ldr	r3, [r7, #4]
 80104cc:	601a      	str	r2, [r3, #0]
 80104ce:	687b      	ldr	r3, [r7, #4]
 80104d0:	4618      	mov	r0, r3
 80104d2:	f7ff fb51 	bl	800fb78 <_ZN8touchgfx9DMA_QueueD1Ev>
 80104d6:	687b      	ldr	r3, [r7, #4]
 80104d8:	4618      	mov	r0, r3
 80104da:	3708      	adds	r7, #8
 80104dc:	46bd      	mov	sp, r7
 80104de:	bd80      	pop	{r7, pc}
 80104e0:	080283b0 	.word	0x080283b0

080104e4 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 80104e4:	b580      	push	{r7, lr}
 80104e6:	b082      	sub	sp, #8
 80104e8:	af00      	add	r7, sp, #0
 80104ea:	6078      	str	r0, [r7, #4]
 80104ec:	6878      	ldr	r0, [r7, #4]
 80104ee:	f7ff ffe7 	bl	80104c0 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 80104f2:	2114      	movs	r1, #20
 80104f4:	6878      	ldr	r0, [r7, #4]
 80104f6:	f015 f96a 	bl	80257ce <_ZdlPvj>
 80104fa:	687b      	ldr	r3, [r7, #4]
 80104fc:	4618      	mov	r0, r3
 80104fe:	3708      	adds	r7, #8
 8010500:	46bd      	mov	sp, r7
 8010502:	bd80      	pop	{r7, pc}

08010504 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
     * Registers an array of texts. This function is called automatically from
     * touchgfx_generic_init(). Should not be called under normal circumstances.
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
 8010504:	b480      	push	{r7}
 8010506:	b083      	sub	sp, #12
 8010508:	af00      	add	r7, sp, #0
 801050a:	6078      	str	r0, [r7, #4]
    {
        texts = t;
 801050c:	4a04      	ldr	r2, [pc, #16]	@ (8010520 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 801050e:	687b      	ldr	r3, [r7, #4]
 8010510:	6013      	str	r3, [r2, #0]
    }
 8010512:	bf00      	nop
 8010514:	370c      	adds	r7, #12
 8010516:	46bd      	mov	sp, r7
 8010518:	f85d 7b04 	ldr.w	r7, [sp], #4
 801051c:	4770      	bx	lr
 801051e:	bf00      	nop
 8010520:	24001a8c 	.word	0x24001a8c

08010524 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 8010524:	b480      	push	{r7}
 8010526:	b085      	sub	sp, #20
 8010528:	af00      	add	r7, sp, #0
 801052a:	60f8      	str	r0, [r7, #12]
 801052c:	60b9      	str	r1, [r7, #8]
 801052e:	607a      	str	r2, [r7, #4]
 8010530:	603b      	str	r3, [r7, #0]
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8010532:	4a0b      	ldr	r2, [pc, #44]	@ (8010560 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 8010534:	68fb      	ldr	r3, [r7, #12]
 8010536:	601a      	str	r2, [r3, #0]
        : presenterStorage(pres),
 8010538:	68fb      	ldr	r3, [r7, #12]
 801053a:	68ba      	ldr	r2, [r7, #8]
 801053c:	605a      	str	r2, [r3, #4]
          screenStorage(scr),
 801053e:	68fb      	ldr	r3, [r7, #12]
 8010540:	687a      	ldr	r2, [r7, #4]
 8010542:	609a      	str	r2, [r3, #8]
          transitionStorage(tra),
 8010544:	68fb      	ldr	r3, [r7, #12]
 8010546:	683a      	ldr	r2, [r7, #0]
 8010548:	60da      	str	r2, [r3, #12]
          frontendApplication(app)
 801054a:	68fb      	ldr	r3, [r7, #12]
 801054c:	69ba      	ldr	r2, [r7, #24]
 801054e:	611a      	str	r2, [r3, #16]
    {
    }
 8010550:	68fb      	ldr	r3, [r7, #12]
 8010552:	4618      	mov	r0, r3
 8010554:	3714      	adds	r7, #20
 8010556:	46bd      	mov	sp, r7
 8010558:	f85d 7b04 	ldr.w	r7, [sp], #4
 801055c:	4770      	bx	lr
 801055e:	bf00      	nop
 8010560:	080280d0 	.word	0x080280d0

08010564 <_ZN8touchgfx7MVPHeapD1Ev>:

    /** Finalizes an instance of the MVPHeap class. */
    virtual ~MVPHeap()
 8010564:	b480      	push	{r7}
 8010566:	b083      	sub	sp, #12
 8010568:	af00      	add	r7, sp, #0
 801056a:	6078      	str	r0, [r7, #4]
    {
 801056c:	4a04      	ldr	r2, [pc, #16]	@ (8010580 <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 801056e:	687b      	ldr	r3, [r7, #4]
 8010570:	601a      	str	r2, [r3, #0]
    }
 8010572:	687b      	ldr	r3, [r7, #4]
 8010574:	4618      	mov	r0, r3
 8010576:	370c      	adds	r7, #12
 8010578:	46bd      	mov	sp, r7
 801057a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801057e:	4770      	bx	lr
 8010580:	080280d0 	.word	0x080280d0

08010584 <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 8010584:	b580      	push	{r7, lr}
 8010586:	b082      	sub	sp, #8
 8010588:	af00      	add	r7, sp, #0
 801058a:	6078      	str	r0, [r7, #4]
    }
 801058c:	6878      	ldr	r0, [r7, #4]
 801058e:	f7ff ffe9 	bl	8010564 <_ZN8touchgfx7MVPHeapD1Ev>
 8010592:	2114      	movs	r1, #20
 8010594:	6878      	ldr	r0, [r7, #4]
 8010596:	f015 f91a 	bl	80257ce <_ZdlPvj>
 801059a:	687b      	ldr	r3, [r7, #4]
 801059c:	4618      	mov	r0, r3
 801059e:	3708      	adds	r7, #8
 80105a0:	46bd      	mov	sp, r7
 80105a2:	bd80      	pop	{r7, pc}

080105a4 <_ZN8touchgfx3LCDD1Ev>:
        : textureMapperClass(0), vectorFontRenderer(0)
    {
    }

    /** Finalizes an instance of the LCD class. */
    virtual ~LCD()
 80105a4:	b480      	push	{r7}
 80105a6:	b083      	sub	sp, #12
 80105a8:	af00      	add	r7, sp, #0
 80105aa:	6078      	str	r0, [r7, #4]
    {
 80105ac:	4a04      	ldr	r2, [pc, #16]	@ (80105c0 <_ZN8touchgfx3LCDD1Ev+0x1c>)
 80105ae:	687b      	ldr	r3, [r7, #4]
 80105b0:	601a      	str	r2, [r3, #0]
    }
 80105b2:	687b      	ldr	r3, [r7, #4]
 80105b4:	4618      	mov	r0, r3
 80105b6:	370c      	adds	r7, #12
 80105b8:	46bd      	mov	sp, r7
 80105ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80105be:	4770      	bx	lr
 80105c0:	080286e4 	.word	0x080286e4

080105c4 <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 80105c4:	b580      	push	{r7, lr}
 80105c6:	b082      	sub	sp, #8
 80105c8:	af00      	add	r7, sp, #0
 80105ca:	6078      	str	r0, [r7, #4]
    }
 80105cc:	6878      	ldr	r0, [r7, #4]
 80105ce:	f7ff ffe9 	bl	80105a4 <_ZN8touchgfx3LCDD1Ev>
 80105d2:	210c      	movs	r1, #12
 80105d4:	6878      	ldr	r0, [r7, #4]
 80105d6:	f015 f8fa 	bl	80257ce <_ZdlPvj>
 80105da:	687b      	ldr	r3, [r7, #4]
 80105dc:	4618      	mov	r0, r3
 80105de:	3708      	adds	r7, #8
 80105e0:	46bd      	mov	sp, r7
 80105e2:	bd80      	pop	{r7, pc}

080105e4 <_ZN8touchgfx8Gestures9DragStateC1Ev>:
    static const uint8_t MIN_VELOCITY_AT_RELEASE_BEFORE_SWIPE = 3;

    /** Defines the state of a drag. */
    struct DragState
    {
        DragState()
 80105e4:	b480      	push	{r7}
 80105e6:	b083      	sub	sp, #12
 80105e8:	af00      	add	r7, sp, #0
 80105ea:	6078      	str	r0, [r7, #4]
            : startX(0),
 80105ec:	687b      	ldr	r3, [r7, #4]
 80105ee:	2200      	movs	r2, #0
 80105f0:	801a      	strh	r2, [r3, #0]
              startY(0),
 80105f2:	687b      	ldr	r3, [r7, #4]
 80105f4:	2200      	movs	r2, #0
 80105f6:	805a      	strh	r2, [r3, #2]
              downX(0),
 80105f8:	687b      	ldr	r3, [r7, #4]
 80105fa:	2200      	movs	r2, #0
 80105fc:	809a      	strh	r2, [r3, #4]
              downY(0),
 80105fe:	687b      	ldr	r3, [r7, #4]
 8010600:	2200      	movs	r2, #0
 8010602:	80da      	strh	r2, [r3, #6]
              tickCount(0),
 8010604:	687b      	ldr	r3, [r7, #4]
 8010606:	2200      	movs	r2, #0
 8010608:	811a      	strh	r2, [r3, #8]
              velocityX(0),
 801060a:	687b      	ldr	r3, [r7, #4]
 801060c:	2200      	movs	r2, #0
 801060e:	815a      	strh	r2, [r3, #10]
              velocityY(0),
 8010610:	687b      	ldr	r3, [r7, #4]
 8010612:	2200      	movs	r2, #0
 8010614:	819a      	strh	r2, [r3, #12]
              inProgress(false)
 8010616:	687b      	ldr	r3, [r7, #4]
 8010618:	2200      	movs	r2, #0
 801061a:	739a      	strb	r2, [r3, #14]
        {
        }
 801061c:	687b      	ldr	r3, [r7, #4]
 801061e:	4618      	mov	r0, r3
 8010620:	370c      	adds	r7, #12
 8010622:	46bd      	mov	sp, r7
 8010624:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010628:	4770      	bx	lr

0801062a <_ZN8touchgfx8GesturesC1Ev>:
        bool inProgress;    ///< Whether a drag is in progress or not
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
 801062a:	b580      	push	{r7, lr}
 801062c:	b082      	sub	sp, #8
 801062e:	af00      	add	r7, sp, #0
 8010630:	6078      	str	r0, [r7, #4]
        : drag(), listener(0), dragThresholdValue(0)
 8010632:	687b      	ldr	r3, [r7, #4]
 8010634:	4618      	mov	r0, r3
 8010636:	f7ff ffd5 	bl	80105e4 <_ZN8touchgfx8Gestures9DragStateC1Ev>
 801063a:	687b      	ldr	r3, [r7, #4]
 801063c:	2200      	movs	r2, #0
 801063e:	611a      	str	r2, [r3, #16]
 8010640:	687b      	ldr	r3, [r7, #4]
 8010642:	2200      	movs	r2, #0
 8010644:	829a      	strh	r2, [r3, #20]
    {
    }
 8010646:	687b      	ldr	r3, [r7, #4]
 8010648:	4618      	mov	r0, r3
 801064a:	3708      	adds	r7, #8
 801064c:	46bd      	mov	sp, r7
 801064e:	bd80      	pop	{r7, pc}

08010650 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height)
 8010650:	b580      	push	{r7, lr}
 8010652:	b084      	sub	sp, #16
 8010654:	af00      	add	r7, sp, #0
 8010656:	60f8      	str	r0, [r7, #12]
 8010658:	60b9      	str	r1, [r7, #8]
 801065a:	607a      	str	r2, [r7, #4]
 801065c:	603b      	str	r3, [r7, #0]
          lastRenderMethod(HARDWARE)
 801065e:	4a55      	ldr	r2, [pc, #340]	@ (80107b4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x164>)
 8010660:	68fb      	ldr	r3, [r7, #12]
 8010662:	601a      	str	r2, [r3, #0]
        : dma(dmaInterface),
 8010664:	68fb      	ldr	r3, [r7, #12]
 8010666:	68ba      	ldr	r2, [r7, #8]
 8010668:	605a      	str	r2, [r3, #4]
          lcdRef(display),
 801066a:	68fb      	ldr	r3, [r7, #12]
 801066c:	687a      	ldr	r2, [r7, #4]
 801066e:	609a      	str	r2, [r3, #8]
          touchController(touchCtrl),
 8010670:	68fb      	ldr	r3, [r7, #12]
 8010672:	683a      	ldr	r2, [r7, #0]
 8010674:	60da      	str	r2, [r3, #12]
          mcuInstrumentation(0),
 8010676:	68fb      	ldr	r3, [r7, #12]
 8010678:	2200      	movs	r2, #0
 801067a:	611a      	str	r2, [r3, #16]
          buttonController(0),
 801067c:	68fb      	ldr	r3, [r7, #12]
 801067e:	2200      	movs	r2, #0
 8010680:	615a      	str	r2, [r3, #20]
          frameBufferAllocator(0),
 8010682:	68fb      	ldr	r3, [r7, #12]
 8010684:	2200      	movs	r2, #0
 8010686:	619a      	str	r2, [r3, #24]
          gestures(),
 8010688:	68fb      	ldr	r3, [r7, #12]
 801068a:	331c      	adds	r3, #28
 801068c:	4618      	mov	r0, r3
 801068e:	f7ff ffcc 	bl	801062a <_ZN8touchgfx8GesturesC1Ev>
          nativeDisplayOrientation(ORIENTATION_LANDSCAPE),
 8010692:	68fb      	ldr	r3, [r7, #12]
 8010694:	2200      	movs	r2, #0
 8010696:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
          taskDelayFunc(0),
 801069a:	68fb      	ldr	r3, [r7, #12]
 801069c:	2200      	movs	r2, #0
 801069e:	639a      	str	r2, [r3, #56]	@ 0x38
          frameBuffer0(0),
 80106a0:	68fb      	ldr	r3, [r7, #12]
 80106a2:	2200      	movs	r2, #0
 80106a4:	63da      	str	r2, [r3, #60]	@ 0x3c
          frameBuffer1(0),
 80106a6:	68fb      	ldr	r3, [r7, #12]
 80106a8:	2200      	movs	r2, #0
 80106aa:	641a      	str	r2, [r3, #64]	@ 0x40
          frameBuffer2(0),
 80106ac:	68fb      	ldr	r3, [r7, #12]
 80106ae:	2200      	movs	r2, #0
 80106b0:	645a      	str	r2, [r3, #68]	@ 0x44
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 80106b2:	68fb      	ldr	r3, [r7, #12]
 80106b4:	2200      	movs	r2, #0
 80106b6:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
          fingerSize(1),
 80106ba:	68fb      	ldr	r3, [r7, #12]
 80106bc:	2201      	movs	r2, #1
 80106be:	f883 2049 	strb.w	r2, [r3, #73]	@ 0x49
          lockDMAToPorch(false),
 80106c2:	68fb      	ldr	r3, [r7, #12]
 80106c4:	2200      	movs	r2, #0
 80106c6:	f883 204a 	strb.w	r2, [r3, #74]	@ 0x4a
          frameBufferUpdatedThisFrame(false),
 80106ca:	68fb      	ldr	r3, [r7, #12]
 80106cc:	2200      	movs	r2, #0
 80106ce:	f883 204b 	strb.w	r2, [r3, #75]	@ 0x4b
          auxiliaryLCD(0),
 80106d2:	68fb      	ldr	r3, [r7, #12]
 80106d4:	2200      	movs	r2, #0
 80106d6:	64da      	str	r2, [r3, #76]	@ 0x4c
          partialFrameBufferRect(),
 80106d8:	68fb      	ldr	r3, [r7, #12]
 80106da:	3350      	adds	r3, #80	@ 0x50
 80106dc:	4618      	mov	r0, r3
 80106de:	f7fc fece 	bl	800d47e <_ZN8touchgfx4RectC1Ev>
          useAuxiliaryLCD(false),
 80106e2:	68fb      	ldr	r3, [r7, #12]
 80106e4:	2200      	movs	r2, #0
 80106e6:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          listener(0),
 80106ea:	68fb      	ldr	r3, [r7, #12]
 80106ec:	2200      	movs	r2, #0
 80106ee:	65da      	str	r2, [r3, #92]	@ 0x5c
          lastX(0),
 80106f0:	68fb      	ldr	r3, [r7, #12]
 80106f2:	2200      	movs	r2, #0
 80106f4:	661a      	str	r2, [r3, #96]	@ 0x60
          lastY(0),
 80106f6:	68fb      	ldr	r3, [r7, #12]
 80106f8:	2200      	movs	r2, #0
 80106fa:	665a      	str	r2, [r3, #100]	@ 0x64
          touchSampleRate(1),
 80106fc:	68fb      	ldr	r3, [r7, #12]
 80106fe:	2201      	movs	r2, #1
 8010700:	f883 2068 	strb.w	r2, [r3, #104]	@ 0x68
          mcuLoadPct(0),
 8010704:	68fb      	ldr	r3, [r7, #12]
 8010706:	2200      	movs	r2, #0
 8010708:	f883 2069 	strb.w	r2, [r3, #105]	@ 0x69
          vSyncCnt(0),
 801070c:	68fb      	ldr	r3, [r7, #12]
 801070e:	2200      	movs	r2, #0
 8010710:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
          vSyncForFrame(1),
 8010714:	68fb      	ldr	r3, [r7, #12]
 8010716:	2201      	movs	r2, #1
 8010718:	f883 206b 	strb.w	r2, [r3, #107]	@ 0x6b
          vSyncCompensationEnabled(false),
 801071c:	68fb      	ldr	r3, [r7, #12]
 801071e:	2200      	movs	r2, #0
 8010720:	f883 206c 	strb.w	r2, [r3, #108]	@ 0x6c
          clientDirty(false),
 8010724:	68fb      	ldr	r3, [r7, #12]
 8010726:	2200      	movs	r2, #0
 8010728:	f883 206d 	strb.w	r2, [r3, #109]	@ 0x6d
          swapRequested(false),
 801072c:	68fb      	ldr	r3, [r7, #12]
 801072e:	2200      	movs	r2, #0
 8010730:	f883 206e 	strb.w	r2, [r3, #110]	@ 0x6e
          lastTouched(false),
 8010734:	68fb      	ldr	r3, [r7, #12]
 8010736:	2200      	movs	r2, #0
 8010738:	f883 206f 	strb.w	r2, [r3, #111]	@ 0x6f
          updateMCULoad(0),
 801073c:	68fb      	ldr	r3, [r7, #12]
 801073e:	2200      	movs	r2, #0
 8010740:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          cc_begin(0),
 8010744:	68fb      	ldr	r3, [r7, #12]
 8010746:	2200      	movs	r2, #0
 8010748:	675a      	str	r2, [r3, #116]	@ 0x74
          requestedOrientation(ORIENTATION_LANDSCAPE),
 801074a:	68fb      	ldr	r3, [r7, #12]
 801074c:	2200      	movs	r2, #0
 801074e:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
          displayOrientationChangeRequested(false),
 8010752:	68fb      	ldr	r3, [r7, #12]
 8010754:	2200      	movs	r2, #0
 8010756:	f883 2079 	strb.w	r2, [r3, #121]	@ 0x79
          useDMAAcceleration(true),
 801075a:	68fb      	ldr	r3, [r7, #12]
 801075c:	2201      	movs	r2, #1
 801075e:	f883 207a 	strb.w	r2, [r3, #122]	@ 0x7a
          lastRenderMethod(HARDWARE)
 8010762:	68fb      	ldr	r3, [r7, #12]
 8010764:	2201      	movs	r2, #1
 8010766:	f883 207b 	strb.w	r2, [r3, #123]	@ 0x7b
        instance = this;
 801076a:	4a13      	ldr	r2, [pc, #76]	@ (80107b8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x168>)
 801076c:	68fb      	ldr	r3, [r7, #12]
 801076e:	6013      	str	r3, [r2, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8010770:	4a12      	ldr	r2, [pc, #72]	@ (80107bc <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 8010772:	8b3b      	ldrh	r3, [r7, #24]
 8010774:	8013      	strh	r3, [r2, #0]
 8010776:	4b11      	ldr	r3, [pc, #68]	@ (80107bc <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 8010778:	881a      	ldrh	r2, [r3, #0]
 801077a:	4b11      	ldr	r3, [pc, #68]	@ (80107c0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x170>)
 801077c:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 801077e:	4a11      	ldr	r2, [pc, #68]	@ (80107c4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 8010780:	8bbb      	ldrh	r3, [r7, #28]
 8010782:	8013      	strh	r3, [r2, #0]
 8010784:	4b0f      	ldr	r3, [pc, #60]	@ (80107c4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 8010786:	881a      	ldrh	r2, [r3, #0]
 8010788:	4b0f      	ldr	r3, [pc, #60]	@ (80107c8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x178>)
 801078a:	801a      	strh	r2, [r3, #0]
        DISPLAY_ROTATION = rotate0;
 801078c:	4b0f      	ldr	r3, [pc, #60]	@ (80107cc <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x17c>)
 801078e:	2200      	movs	r2, #0
 8010790:	701a      	strb	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8010792:	8b3a      	ldrh	r2, [r7, #24]
 8010794:	8bbb      	ldrh	r3, [r7, #28]
 8010796:	429a      	cmp	r2, r3
 8010798:	bf34      	ite	cc
 801079a:	2301      	movcc	r3, #1
 801079c:	2300      	movcs	r3, #0
 801079e:	b2db      	uxtb	r3, r3
 80107a0:	461a      	mov	r2, r3
 80107a2:	68fb      	ldr	r3, [r7, #12]
 80107a4:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
    }
 80107a8:	68fb      	ldr	r3, [r7, #12]
 80107aa:	4618      	mov	r0, r3
 80107ac:	3710      	adds	r7, #16
 80107ae:	46bd      	mov	sp, r7
 80107b0:	bd80      	pop	{r7, pc}
 80107b2:	bf00      	nop
 80107b4:	08028288 	.word	0x08028288
 80107b8:	24001a30 	.word	0x24001a30
 80107bc:	24001a24 	.word	0x24001a24
 80107c0:	24001a2a 	.word	0x24001a2a
 80107c4:	24001a26 	.word	0x24001a26
 80107c8:	24001a2c 	.word	0x24001a2c
 80107cc:	24001a28 	.word	0x24001a28

080107d0 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 80107d0:	b580      	push	{r7, lr}
 80107d2:	b082      	sub	sp, #8
 80107d4:	af00      	add	r7, sp, #0
 80107d6:	6078      	str	r0, [r7, #4]
 80107d8:	6039      	str	r1, [r7, #0]
    {
        app.gotoscreenScreenNoTransition();
 80107da:	683b      	ldr	r3, [r7, #0]
 80107dc:	4618      	mov	r0, r3
 80107de:	f7fc fba3 	bl	800cf28 <_ZN23FrontendApplicationBase28gotoscreenScreenNoTransitionEv>
    }
 80107e2:	bf00      	nop
 80107e4:	3708      	adds	r7, #8
 80107e6:	46bd      	mov	sp, r7
 80107e8:	bd80      	pop	{r7, pc}
	...

080107ec <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 80107ec:	b580      	push	{r7, lr}
 80107ee:	b086      	sub	sp, #24
 80107f0:	af02      	add	r7, sp, #8
 80107f2:	60f8      	str	r0, [r7, #12]
 80107f4:	60b9      	str	r1, [r7, #8]
 80107f6:	607a      	str	r2, [r7, #4]
 80107f8:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 80107fa:	68f8      	ldr	r0, [r7, #12]
 80107fc:	69bb      	ldr	r3, [r7, #24]
 80107fe:	9300      	str	r3, [sp, #0]
 8010800:	683b      	ldr	r3, [r7, #0]
 8010802:	687a      	ldr	r2, [r7, #4]
 8010804:	68b9      	ldr	r1, [r7, #8]
 8010806:	f7ff fe8d 	bl	8010524 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 801080a:	4a04      	ldr	r2, [pc, #16]	@ (801081c <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 801080c:	68fb      	ldr	r3, [r7, #12]
 801080e:	601a      	str	r2, [r3, #0]
    {

    }
 8010810:	68fb      	ldr	r3, [r7, #12]
 8010812:	4618      	mov	r0, r3
 8010814:	3710      	adds	r7, #16
 8010816:	46bd      	mov	sp, r7
 8010818:	bd80      	pop	{r7, pc}
 801081a:	bf00      	nop
 801081c:	080280bc 	.word	0x080280bc

08010820 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8010820:	b580      	push	{r7, lr}
 8010822:	af00      	add	r7, sp, #0
 8010824:	4801      	ldr	r0, [pc, #4]	@ (801082c <__tcf_0+0xc>)
 8010826:	f000 f969 	bl	8010afc <_ZN12FrontendHeapD1Ev>
 801082a:	bd80      	pop	{r7, pc}
 801082c:	240007f4 	.word	0x240007f4

08010830 <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 8010830:	b580      	push	{r7, lr}
 8010832:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 8010834:	4b11      	ldr	r3, [pc, #68]	@ (801087c <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 8010836:	681b      	ldr	r3, [r3, #0]
 8010838:	f3bf 8f5b 	dmb	ish
 801083c:	f003 0301 	and.w	r3, r3, #1
 8010840:	2b00      	cmp	r3, #0
 8010842:	bf0c      	ite	eq
 8010844:	2301      	moveq	r3, #1
 8010846:	2300      	movne	r3, #0
 8010848:	b2db      	uxtb	r3, r3
 801084a:	2b00      	cmp	r3, #0
 801084c:	d013      	beq.n	8010876 <_ZN12FrontendHeap11getInstanceEv+0x46>
 801084e:	480b      	ldr	r0, [pc, #44]	@ (801087c <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 8010850:	f014 ffbf 	bl	80257d2 <__cxa_guard_acquire>
 8010854:	4603      	mov	r3, r0
 8010856:	2b00      	cmp	r3, #0
 8010858:	bf14      	ite	ne
 801085a:	2301      	movne	r3, #1
 801085c:	2300      	moveq	r3, #0
 801085e:	b2db      	uxtb	r3, r3
 8010860:	2b00      	cmp	r3, #0
 8010862:	d008      	beq.n	8010876 <_ZN12FrontendHeap11getInstanceEv+0x46>
 8010864:	4806      	ldr	r0, [pc, #24]	@ (8010880 <_ZN12FrontendHeap11getInstanceEv+0x50>)
 8010866:	f000 f867 	bl	8010938 <_ZN12FrontendHeapC1Ev>
 801086a:	4806      	ldr	r0, [pc, #24]	@ (8010884 <_ZN12FrontendHeap11getInstanceEv+0x54>)
 801086c:	f014 fffc 	bl	8025868 <atexit>
 8010870:	4802      	ldr	r0, [pc, #8]	@ (801087c <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 8010872:	f014 ffba 	bl	80257ea <__cxa_guard_release>
        return instance;
 8010876:	4b02      	ldr	r3, [pc, #8]	@ (8010880 <_ZN12FrontendHeap11getInstanceEv+0x50>)
    }
 8010878:	4618      	mov	r0, r3
 801087a:	bd80      	pop	{r7, pc}
 801087c:	24000b6c 	.word	0x24000b6c
 8010880:	240007f4 	.word	0x240007f4
 8010884:	08010821 	.word	0x08010821

08010888 <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 8010888:	b580      	push	{r7, lr}
 801088a:	b082      	sub	sp, #8
 801088c:	af00      	add	r7, sp, #0
 801088e:	6078      	str	r0, [r7, #4]
 8010890:	4a05      	ldr	r2, [pc, #20]	@ (80108a8 <_ZN16FrontendHeapBaseD1Ev+0x20>)
 8010892:	687b      	ldr	r3, [r7, #4]
 8010894:	601a      	str	r2, [r3, #0]
 8010896:	687b      	ldr	r3, [r7, #4]
 8010898:	4618      	mov	r0, r3
 801089a:	f7ff fe63 	bl	8010564 <_ZN8touchgfx7MVPHeapD1Ev>
 801089e:	687b      	ldr	r3, [r7, #4]
 80108a0:	4618      	mov	r0, r3
 80108a2:	3708      	adds	r7, #8
 80108a4:	46bd      	mov	sp, r7
 80108a6:	bd80      	pop	{r7, pc}
 80108a8:	080280bc 	.word	0x080280bc

080108ac <_ZN16FrontendHeapBaseD0Ev>:
 80108ac:	b580      	push	{r7, lr}
 80108ae:	b082      	sub	sp, #8
 80108b0:	af00      	add	r7, sp, #0
 80108b2:	6078      	str	r0, [r7, #4]
 80108b4:	6878      	ldr	r0, [r7, #4]
 80108b6:	f7ff ffe7 	bl	8010888 <_ZN16FrontendHeapBaseD1Ev>
 80108ba:	2114      	movs	r1, #20
 80108bc:	6878      	ldr	r0, [r7, #4]
 80108be:	f014 ff86 	bl	80257ce <_ZdlPvj>
 80108c2:	687b      	ldr	r3, [r7, #4]
 80108c4:	4618      	mov	r0, r3
 80108c6:	3708      	adds	r7, #8
 80108c8:	46bd      	mov	sp, r7
 80108ca:	bd80      	pop	{r7, pc}

080108cc <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 * @tparam NUMBER_OF_ELEMENTS Type of the number of elements.
 *
 * @see AbstractPartition
 */
template <typename ListOfTypes, uint16_t NUMBER_OF_ELEMENTS>
class Partition : public AbstractPartition
 80108cc:	b580      	push	{r7, lr}
 80108ce:	b082      	sub	sp, #8
 80108d0:	af00      	add	r7, sp, #0
 80108d2:	6078      	str	r0, [r7, #4]
 80108d4:	687b      	ldr	r3, [r7, #4]
 80108d6:	4618      	mov	r0, r3
 80108d8:	f000 fd6c 	bl	80113b4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80108dc:	4a03      	ldr	r2, [pc, #12]	@ (80108ec <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 80108de:	687b      	ldr	r3, [r7, #4]
 80108e0:	601a      	str	r2, [r3, #0]
 80108e2:	687b      	ldr	r3, [r7, #4]
 80108e4:	4618      	mov	r0, r3
 80108e6:	3708      	adds	r7, #8
 80108e8:	46bd      	mov	sp, r7
 80108ea:	bd80      	pop	{r7, pc}
 80108ec:	08028088 	.word	0x08028088

080108f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 80108f0:	b580      	push	{r7, lr}
 80108f2:	b082      	sub	sp, #8
 80108f4:	af00      	add	r7, sp, #0
 80108f6:	6078      	str	r0, [r7, #4]
 80108f8:	687b      	ldr	r3, [r7, #4]
 80108fa:	4618      	mov	r0, r3
 80108fc:	f000 fd5a 	bl	80113b4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8010900:	4a03      	ldr	r2, [pc, #12]	@ (8010910 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 8010902:	687b      	ldr	r3, [r7, #4]
 8010904:	601a      	str	r2, [r3, #0]
 8010906:	687b      	ldr	r3, [r7, #4]
 8010908:	4618      	mov	r0, r3
 801090a:	3708      	adds	r7, #8
 801090c:	46bd      	mov	sp, r7
 801090e:	bd80      	pop	{r7, pc}
 8010910:	08028054 	.word	0x08028054

08010914 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 8010914:	b580      	push	{r7, lr}
 8010916:	b082      	sub	sp, #8
 8010918:	af00      	add	r7, sp, #0
 801091a:	6078      	str	r0, [r7, #4]
 801091c:	687b      	ldr	r3, [r7, #4]
 801091e:	4618      	mov	r0, r3
 8010920:	f000 fd48 	bl	80113b4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8010924:	4a03      	ldr	r2, [pc, #12]	@ (8010934 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 8010926:	687b      	ldr	r3, [r7, #4]
 8010928:	601a      	str	r2, [r3, #0]
 801092a:	687b      	ldr	r3, [r7, #4]
 801092c:	4618      	mov	r0, r3
 801092e:	3708      	adds	r7, #8
 8010930:	46bd      	mov	sp, r7
 8010932:	bd80      	pop	{r7, pc}
 8010934:	08028020 	.word	0x08028020

08010938 <_ZN12FrontendHeapC1Ev>:
    touchgfx::Partition< CombinedTransitionTypes, 1 > transitions;
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 8010938:	b590      	push	{r4, r7, lr}
 801093a:	b085      	sub	sp, #20
 801093c:	af02      	add	r7, sp, #8
 801093e:	6078      	str	r0, [r7, #4]
                     app(model, *this)
 8010940:	6878      	ldr	r0, [r7, #4]
 8010942:	687b      	ldr	r3, [r7, #4]
 8010944:	f103 0114 	add.w	r1, r3, #20
 8010948:	687b      	ldr	r3, [r7, #4]
 801094a:	f103 022c 	add.w	r2, r3, #44	@ 0x2c
 801094e:	687b      	ldr	r3, [r7, #4]
 8010950:	f503 7401 	add.w	r4, r3, #516	@ 0x204
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 8010954:	687b      	ldr	r3, [r7, #4]
 8010956:	f503 7307 	add.w	r3, r3, #540	@ 0x21c
                     app(model, *this)
 801095a:	9300      	str	r3, [sp, #0]
 801095c:	4623      	mov	r3, r4
 801095e:	f7ff ff45 	bl	80107ec <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 8010962:	4a18      	ldr	r2, [pc, #96]	@ (80109c4 <_ZN12FrontendHeapC1Ev+0x8c>)
 8010964:	687b      	ldr	r3, [r7, #4]
 8010966:	601a      	str	r2, [r3, #0]
 8010968:	687b      	ldr	r3, [r7, #4]
 801096a:	3314      	adds	r3, #20
 801096c:	4618      	mov	r0, r3
 801096e:	f7ff ffad 	bl	80108cc <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 8010972:	687b      	ldr	r3, [r7, #4]
 8010974:	332c      	adds	r3, #44	@ 0x2c
 8010976:	4618      	mov	r0, r3
 8010978:	f7ff ffba 	bl	80108f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 801097c:	687b      	ldr	r3, [r7, #4]
 801097e:	f503 7301 	add.w	r3, r3, #516	@ 0x204
 8010982:	4618      	mov	r0, r3
 8010984:	f7ff ffc6 	bl	8010914 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>
 8010988:	687b      	ldr	r3, [r7, #4]
 801098a:	f503 7306 	add.w	r3, r3, #536	@ 0x218
 801098e:	4618      	mov	r0, r3
 8010990:	f7fe fb3c 	bl	800f00c <_ZN5ModelC1Ev>
 8010994:	687b      	ldr	r3, [r7, #4]
 8010996:	f503 7007 	add.w	r0, r3, #540	@ 0x21c
 801099a:	687b      	ldr	r3, [r7, #4]
 801099c:	f503 7306 	add.w	r3, r3, #536	@ 0x218
 80109a0:	687a      	ldr	r2, [r7, #4]
 80109a2:	4619      	mov	r1, r3
 80109a4:	f7fe fb1c 	bl	800efe0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
    {
        gotoStartScreen(app);
 80109a8:	687a      	ldr	r2, [r7, #4]
 80109aa:	687b      	ldr	r3, [r7, #4]
 80109ac:	f503 7307 	add.w	r3, r3, #540	@ 0x21c
 80109b0:	4619      	mov	r1, r3
 80109b2:	4610      	mov	r0, r2
 80109b4:	f7ff ff0c 	bl	80107d0 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 80109b8:	687b      	ldr	r3, [r7, #4]
 80109ba:	4618      	mov	r0, r3
 80109bc:	370c      	adds	r7, #12
 80109be:	46bd      	mov	sp, r7
 80109c0:	bd90      	pop	{r4, r7, pc}
 80109c2:	bf00      	nop
 80109c4:	0802800c 	.word	0x0802800c

080109c8 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) :
 80109c8:	b580      	push	{r7, lr}
 80109ca:	b086      	sub	sp, #24
 80109cc:	af02      	add	r7, sp, #8
 80109ce:	60f8      	str	r0, [r7, #12]
 80109d0:	60b9      	str	r1, [r7, #8]
 80109d2:	607a      	str	r2, [r7, #4]
 80109d4:	603b      	str	r3, [r7, #0]
        touchgfx::HAL(dma, display, tc, width, height)
 80109d6:	68f8      	ldr	r0, [r7, #12]
 80109d8:	8bbb      	ldrh	r3, [r7, #28]
 80109da:	9301      	str	r3, [sp, #4]
 80109dc:	8b3b      	ldrh	r3, [r7, #24]
 80109de:	9300      	str	r3, [sp, #0]
 80109e0:	683b      	ldr	r3, [r7, #0]
 80109e2:	687a      	ldr	r2, [r7, #4]
 80109e4:	68b9      	ldr	r1, [r7, #8]
 80109e6:	f7ff fe33 	bl	8010650 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 80109ea:	4a04      	ldr	r2, [pc, #16]	@ (80109fc <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 80109ec:	68fb      	ldr	r3, [r7, #12]
 80109ee:	601a      	str	r2, [r3, #0]
    }
 80109f0:	68fb      	ldr	r3, [r7, #12]
 80109f2:	4618      	mov	r0, r3
 80109f4:	3710      	adds	r7, #16
 80109f6:	46bd      	mov	sp, r7
 80109f8:	bd80      	pop	{r7, pc}
 80109fa:	bf00      	nop
 80109fc:	080280e0 	.word	0x080280e0

08010a00 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8010a00:	b580      	push	{r7, lr}
 8010a02:	b086      	sub	sp, #24
 8010a04:	af02      	add	r7, sp, #8
 8010a06:	60f8      	str	r0, [r7, #12]
 8010a08:	60b9      	str	r1, [r7, #8]
 8010a0a:	607a      	str	r2, [r7, #4]
 8010a0c:	603b      	str	r3, [r7, #0]
 8010a0e:	68f8      	ldr	r0, [r7, #12]
 8010a10:	8bbb      	ldrh	r3, [r7, #28]
 8010a12:	9301      	str	r3, [sp, #4]
 8010a14:	8b3b      	ldrh	r3, [r7, #24]
 8010a16:	9300      	str	r3, [sp, #0]
 8010a18:	683b      	ldr	r3, [r7, #0]
 8010a1a:	687a      	ldr	r2, [r7, #4]
 8010a1c:	68b9      	ldr	r1, [r7, #8]
 8010a1e:	f7ff ffd3 	bl	80109c8 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 8010a22:	4a04      	ldr	r2, [pc, #16]	@ (8010a34 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 8010a24:	68fb      	ldr	r3, [r7, #12]
 8010a26:	601a      	str	r2, [r3, #0]
    }
 8010a28:	68fb      	ldr	r3, [r7, #12]
 8010a2a:	4618      	mov	r0, r3
 8010a2c:	3710      	adds	r7, #16
 8010a2e:	46bd      	mov	sp, r7
 8010a30:	bd80      	pop	{r7, pc}
 8010a32:	bf00      	nop
 8010a34:	08027ec0 	.word	0x08027ec0

08010a38 <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 8010a38:	b480      	push	{r7}
 8010a3a:	b083      	sub	sp, #12
 8010a3c:	af00      	add	r7, sp, #0
 8010a3e:	6078      	str	r0, [r7, #4]
 8010a40:	4a04      	ldr	r2, [pc, #16]	@ (8010a54 <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 8010a42:	687b      	ldr	r3, [r7, #4]
 8010a44:	601a      	str	r2, [r3, #0]
 8010a46:	687b      	ldr	r3, [r7, #4]
 8010a48:	4618      	mov	r0, r3
 8010a4a:	370c      	adds	r7, #12
 8010a4c:	46bd      	mov	sp, r7
 8010a4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010a52:	4770      	bx	lr
 8010a54:	08027ea8 	.word	0x08027ea8

08010a58 <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 8010a58:	b580      	push	{r7, lr}
 8010a5a:	b082      	sub	sp, #8
 8010a5c:	af00      	add	r7, sp, #0
 8010a5e:	6078      	str	r0, [r7, #4]
 8010a60:	687b      	ldr	r3, [r7, #4]
 8010a62:	4618      	mov	r0, r3
 8010a64:	f7ff ffe8 	bl	8010a38 <_ZN8touchgfx15TouchControllerC1Ev>
 8010a68:	4a03      	ldr	r2, [pc, #12]	@ (8010a78 <_ZN20STM32TouchControllerC1Ev+0x20>)
 8010a6a:	687b      	ldr	r3, [r7, #4]
 8010a6c:	601a      	str	r2, [r3, #0]
 8010a6e:	687b      	ldr	r3, [r7, #4]
 8010a70:	4618      	mov	r0, r3
 8010a72:	3708      	adds	r7, #8
 8010a74:	46bd      	mov	sp, r7
 8010a76:	bd80      	pop	{r7, pc}
 8010a78:	08027e90 	.word	0x08027e90

08010a7c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 480, 480);

void touchgfx_init()
{
 8010a7c:	b590      	push	{r4, r7, lr}
 8010a7e:	b085      	sub	sp, #20
 8010a80:	af02      	add	r7, sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8010a82:	f7fe f877 	bl	800eb74 <_ZN14BitmapDatabase11getInstanceEv>
 8010a86:	4604      	mov	r4, r0
 8010a88:	f7fe f87e 	bl	800eb88 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8010a8c:	4603      	mov	r3, r0
 8010a8e:	4619      	mov	r1, r3
 8010a90:	2300      	movs	r3, #0
 8010a92:	9300      	str	r3, [sp, #0]
 8010a94:	2300      	movs	r3, #0
 8010a96:	2200      	movs	r2, #0
 8010a98:	4620      	mov	r0, r4
 8010a9a:	f006 fb9d 	bl	80171d8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
    TypedText::registerTexts(&texts);
 8010a9e:	4809      	ldr	r0, [pc, #36]	@ (8010ac4 <touchgfx_init+0x48>)
 8010aa0:	f7ff fd30 	bl	8010504 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
    Texts::setLanguage(0);
 8010aa4:	2000      	movs	r0, #0
 8010aa6:	f7fe f9b3 	bl	800ee10 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8010aaa:	4807      	ldr	r0, [pc, #28]	@ (8010ac8 <touchgfx_init+0x4c>)
 8010aac:	f006 fafc 	bl	80170a8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

    FrontendHeap& heap = FrontendHeap::getInstance();
 8010ab0:	f7ff febe 	bl	8010830 <_ZN12FrontendHeap11getInstanceEv>
 8010ab4:	6078      	str	r0, [r7, #4]
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8010ab6:	4805      	ldr	r0, [pc, #20]	@ (8010acc <touchgfx_init+0x50>)
 8010ab8:	f7fe fee6 	bl	800f888 <_ZN11TouchGFXHAL10initializeEv>
}
 8010abc:	bf00      	nop
 8010abe:	370c      	adds	r7, #12
 8010ac0:	46bd      	mov	sp, r7
 8010ac2:	bd90      	pop	{r4, r7, pc}
 8010ac4:	240019a0 	.word	0x240019a0
 8010ac8:	24000018 	.word	0x24000018
 8010acc:	240019a4 	.word	0x240019a4

08010ad0 <touchgfx_components_init>:

void touchgfx_components_init()
{
 8010ad0:	b480      	push	{r7}
 8010ad2:	af00      	add	r7, sp, #0
}
 8010ad4:	bf00      	nop
 8010ad6:	46bd      	mov	sp, r7
 8010ad8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010adc:	4770      	bx	lr
	...

08010ae0 <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
 8010ae0:	b580      	push	{r7, lr}
 8010ae2:	af00      	add	r7, sp, #0
    /*
     * Main event loop will check for VSYNC signal, and then process next frame.
     *
     * Note This function returns immediately if there is no VSYNC signal.
     */
    if (OSWrappers::isVSyncAvailable())
 8010ae4:	f7fe ffee 	bl	800fac4 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>
 8010ae8:	4603      	mov	r3, r0
 8010aea:	2b00      	cmp	r3, #0
 8010aec:	d002      	beq.n	8010af4 <touchgfx_taskEntry+0x14>
    {
        hal.backPorchExited();
 8010aee:	4802      	ldr	r0, [pc, #8]	@ (8010af8 <touchgfx_taskEntry+0x18>)
 8010af0:	f7fe fdb0 	bl	800f654 <_ZN8touchgfx3HAL15backPorchExitedEv>
    }
}
 8010af4:	bf00      	nop
 8010af6:	bd80      	pop	{r7, pc}
 8010af8:	240019a4 	.word	0x240019a4

08010afc <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 8010afc:	b580      	push	{r7, lr}
 8010afe:	b082      	sub	sp, #8
 8010b00:	af00      	add	r7, sp, #0
 8010b02:	6078      	str	r0, [r7, #4]
 8010b04:	4a10      	ldr	r2, [pc, #64]	@ (8010b48 <_ZN12FrontendHeapD1Ev+0x4c>)
 8010b06:	687b      	ldr	r3, [r7, #4]
 8010b08:	601a      	str	r2, [r3, #0]
 8010b0a:	687b      	ldr	r3, [r7, #4]
 8010b0c:	f503 7307 	add.w	r3, r3, #540	@ 0x21c
 8010b10:	4618      	mov	r0, r3
 8010b12:	f7fe fa2f 	bl	800ef74 <_ZN19FrontendApplicationD1Ev>
 8010b16:	687b      	ldr	r3, [r7, #4]
 8010b18:	f503 7301 	add.w	r3, r3, #516	@ 0x204
 8010b1c:	4618      	mov	r0, r3
 8010b1e:	f000 f827 	bl	8010b70 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8010b22:	687b      	ldr	r3, [r7, #4]
 8010b24:	332c      	adds	r3, #44	@ 0x2c
 8010b26:	4618      	mov	r0, r3
 8010b28:	f000 f844 	bl	8010bb4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8010b2c:	687b      	ldr	r3, [r7, #4]
 8010b2e:	3314      	adds	r3, #20
 8010b30:	4618      	mov	r0, r3
 8010b32:	f000 f863 	bl	8010bfc <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8010b36:	687b      	ldr	r3, [r7, #4]
 8010b38:	4618      	mov	r0, r3
 8010b3a:	f7ff fea5 	bl	8010888 <_ZN16FrontendHeapBaseD1Ev>
 8010b3e:	687b      	ldr	r3, [r7, #4]
 8010b40:	4618      	mov	r0, r3
 8010b42:	3708      	adds	r7, #8
 8010b44:	46bd      	mov	sp, r7
 8010b46:	bd80      	pop	{r7, pc}
 8010b48:	0802800c 	.word	0x0802800c

08010b4c <_ZN12FrontendHeapD0Ev>:
 8010b4c:	b580      	push	{r7, lr}
 8010b4e:	b082      	sub	sp, #8
 8010b50:	af00      	add	r7, sp, #0
 8010b52:	6078      	str	r0, [r7, #4]
 8010b54:	6878      	ldr	r0, [r7, #4]
 8010b56:	f7ff ffd1 	bl	8010afc <_ZN12FrontendHeapD1Ev>
 8010b5a:	f44f 715e 	mov.w	r1, #888	@ 0x378
 8010b5e:	6878      	ldr	r0, [r7, #4]
 8010b60:	f014 fe35 	bl	80257ce <_ZdlPvj>
 8010b64:	687b      	ldr	r3, [r7, #4]
 8010b66:	4618      	mov	r0, r3
 8010b68:	3708      	adds	r7, #8
 8010b6a:	46bd      	mov	sp, r7
 8010b6c:	bd80      	pop	{r7, pc}
	...

08010b70 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8010b70:	b580      	push	{r7, lr}
 8010b72:	b082      	sub	sp, #8
 8010b74:	af00      	add	r7, sp, #0
 8010b76:	6078      	str	r0, [r7, #4]
 8010b78:	4a05      	ldr	r2, [pc, #20]	@ (8010b90 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 8010b7a:	687b      	ldr	r3, [r7, #4]
 8010b7c:	601a      	str	r2, [r3, #0]
 8010b7e:	687b      	ldr	r3, [r7, #4]
 8010b80:	4618      	mov	r0, r3
 8010b82:	f000 fc16 	bl	80113b2 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8010b86:	687b      	ldr	r3, [r7, #4]
 8010b88:	4618      	mov	r0, r3
 8010b8a:	3708      	adds	r7, #8
 8010b8c:	46bd      	mov	sp, r7
 8010b8e:	bd80      	pop	{r7, pc}
 8010b90:	08028020 	.word	0x08028020

08010b94 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8010b94:	b580      	push	{r7, lr}
 8010b96:	b082      	sub	sp, #8
 8010b98:	af00      	add	r7, sp, #0
 8010b9a:	6078      	str	r0, [r7, #4]
 8010b9c:	6878      	ldr	r0, [r7, #4]
 8010b9e:	f7ff ffe7 	bl	8010b70 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8010ba2:	2114      	movs	r1, #20
 8010ba4:	6878      	ldr	r0, [r7, #4]
 8010ba6:	f014 fe12 	bl	80257ce <_ZdlPvj>
 8010baa:	687b      	ldr	r3, [r7, #4]
 8010bac:	4618      	mov	r0, r3
 8010bae:	3708      	adds	r7, #8
 8010bb0:	46bd      	mov	sp, r7
 8010bb2:	bd80      	pop	{r7, pc}

08010bb4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8010bb4:	b580      	push	{r7, lr}
 8010bb6:	b082      	sub	sp, #8
 8010bb8:	af00      	add	r7, sp, #0
 8010bba:	6078      	str	r0, [r7, #4]
 8010bbc:	4a05      	ldr	r2, [pc, #20]	@ (8010bd4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 8010bbe:	687b      	ldr	r3, [r7, #4]
 8010bc0:	601a      	str	r2, [r3, #0]
 8010bc2:	687b      	ldr	r3, [r7, #4]
 8010bc4:	4618      	mov	r0, r3
 8010bc6:	f000 fbf4 	bl	80113b2 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8010bca:	687b      	ldr	r3, [r7, #4]
 8010bcc:	4618      	mov	r0, r3
 8010bce:	3708      	adds	r7, #8
 8010bd0:	46bd      	mov	sp, r7
 8010bd2:	bd80      	pop	{r7, pc}
 8010bd4:	08028054 	.word	0x08028054

08010bd8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8010bd8:	b580      	push	{r7, lr}
 8010bda:	b082      	sub	sp, #8
 8010bdc:	af00      	add	r7, sp, #0
 8010bde:	6078      	str	r0, [r7, #4]
 8010be0:	6878      	ldr	r0, [r7, #4]
 8010be2:	f7ff ffe7 	bl	8010bb4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8010be6:	f44f 71ec 	mov.w	r1, #472	@ 0x1d8
 8010bea:	6878      	ldr	r0, [r7, #4]
 8010bec:	f014 fdef 	bl	80257ce <_ZdlPvj>
 8010bf0:	687b      	ldr	r3, [r7, #4]
 8010bf2:	4618      	mov	r0, r3
 8010bf4:	3708      	adds	r7, #8
 8010bf6:	46bd      	mov	sp, r7
 8010bf8:	bd80      	pop	{r7, pc}
	...

08010bfc <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8010bfc:	b580      	push	{r7, lr}
 8010bfe:	b082      	sub	sp, #8
 8010c00:	af00      	add	r7, sp, #0
 8010c02:	6078      	str	r0, [r7, #4]
 8010c04:	4a05      	ldr	r2, [pc, #20]	@ (8010c1c <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 8010c06:	687b      	ldr	r3, [r7, #4]
 8010c08:	601a      	str	r2, [r3, #0]
 8010c0a:	687b      	ldr	r3, [r7, #4]
 8010c0c:	4618      	mov	r0, r3
 8010c0e:	f000 fbd0 	bl	80113b2 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8010c12:	687b      	ldr	r3, [r7, #4]
 8010c14:	4618      	mov	r0, r3
 8010c16:	3708      	adds	r7, #8
 8010c18:	46bd      	mov	sp, r7
 8010c1a:	bd80      	pop	{r7, pc}
 8010c1c:	08028088 	.word	0x08028088

08010c20 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8010c20:	b580      	push	{r7, lr}
 8010c22:	b082      	sub	sp, #8
 8010c24:	af00      	add	r7, sp, #0
 8010c26:	6078      	str	r0, [r7, #4]
 8010c28:	6878      	ldr	r0, [r7, #4]
 8010c2a:	f7ff ffe7 	bl	8010bfc <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8010c2e:	2118      	movs	r1, #24
 8010c30:	6878      	ldr	r0, [r7, #4]
 8010c32:	f014 fdcc 	bl	80257ce <_ZdlPvj>
 8010c36:	687b      	ldr	r3, [r7, #4]
 8010c38:	4618      	mov	r0, r3
 8010c3a:	3708      	adds	r7, #8
 8010c3c:	46bd      	mov	sp, r7
 8010c3e:	bd80      	pop	{r7, pc}

08010c40 <_ZN8touchgfx8LCD16bppD1Ev>:
 *
 * @see LCD
 *
 * @note All coordinates are expected to be in absolute coordinates!
 */
class LCD16bpp : public LCD
 8010c40:	b580      	push	{r7, lr}
 8010c42:	b082      	sub	sp, #8
 8010c44:	af00      	add	r7, sp, #0
 8010c46:	6078      	str	r0, [r7, #4]
 8010c48:	4a05      	ldr	r2, [pc, #20]	@ (8010c60 <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 8010c4a:	687b      	ldr	r3, [r7, #4]
 8010c4c:	601a      	str	r2, [r3, #0]
 8010c4e:	687b      	ldr	r3, [r7, #4]
 8010c50:	4618      	mov	r0, r3
 8010c52:	f7ff fca7 	bl	80105a4 <_ZN8touchgfx3LCDD1Ev>
 8010c56:	687b      	ldr	r3, [r7, #4]
 8010c58:	4618      	mov	r0, r3
 8010c5a:	3708      	adds	r7, #8
 8010c5c:	46bd      	mov	sp, r7
 8010c5e:	bd80      	pop	{r7, pc}
 8010c60:	08028b6c 	.word	0x08028b6c

08010c64 <_ZN8touchgfx8LCD16bppD0Ev>:
 8010c64:	b580      	push	{r7, lr}
 8010c66:	b082      	sub	sp, #8
 8010c68:	af00      	add	r7, sp, #0
 8010c6a:	6078      	str	r0, [r7, #4]
 8010c6c:	6878      	ldr	r0, [r7, #4]
 8010c6e:	f7ff ffe7 	bl	8010c40 <_ZN8touchgfx8LCD16bppD1Ev>
 8010c72:	218c      	movs	r1, #140	@ 0x8c
 8010c74:	6878      	ldr	r0, [r7, #4]
 8010c76:	f014 fdaa 	bl	80257ce <_ZdlPvj>
 8010c7a:	687b      	ldr	r3, [r7, #4]
 8010c7c:	4618      	mov	r0, r3
 8010c7e:	3708      	adds	r7, #8
 8010c80:	46bd      	mov	sp, r7
 8010c82:	bd80      	pop	{r7, pc}

08010c84 <_Z41__static_initialization_and_destruction_0ii>:
 8010c84:	b580      	push	{r7, lr}
 8010c86:	b084      	sub	sp, #16
 8010c88:	af02      	add	r7, sp, #8
 8010c8a:	6078      	str	r0, [r7, #4]
 8010c8c:	6039      	str	r1, [r7, #0]
 8010c8e:	687b      	ldr	r3, [r7, #4]
 8010c90:	2b01      	cmp	r3, #1
 8010c92:	d119      	bne.n	8010cc8 <_Z41__static_initialization_and_destruction_0ii+0x44>
 8010c94:	683b      	ldr	r3, [r7, #0]
 8010c96:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8010c9a:	4293      	cmp	r3, r2
 8010c9c:	d114      	bne.n	8010cc8 <_Z41__static_initialization_and_destruction_0ii+0x44>
static STM32TouchController tc;
 8010c9e:	4818      	ldr	r0, [pc, #96]	@ (8010d00 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 8010ca0:	f7ff feda 	bl	8010a58 <_ZN20STM32TouchControllerC1Ev>
static STM32DMA dma;
 8010ca4:	4817      	ldr	r0, [pc, #92]	@ (8010d04 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 8010ca6:	f7ff f835 	bl	800fd14 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8010caa:	4817      	ldr	r0, [pc, #92]	@ (8010d08 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 8010cac:	f00b fb9c 	bl	801c3e8 <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 480, 480);
 8010cb0:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 8010cb4:	9301      	str	r3, [sp, #4]
 8010cb6:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 8010cba:	9300      	str	r3, [sp, #0]
 8010cbc:	4b10      	ldr	r3, [pc, #64]	@ (8010d00 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 8010cbe:	4a12      	ldr	r2, [pc, #72]	@ (8010d08 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 8010cc0:	4910      	ldr	r1, [pc, #64]	@ (8010d04 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 8010cc2:	4812      	ldr	r0, [pc, #72]	@ (8010d0c <_Z41__static_initialization_and_destruction_0ii+0x88>)
 8010cc4:	f7ff fe9c 	bl	8010a00 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 8010cc8:	687b      	ldr	r3, [r7, #4]
 8010cca:	2b00      	cmp	r3, #0
 8010ccc:	d113      	bne.n	8010cf6 <_Z41__static_initialization_and_destruction_0ii+0x72>
 8010cce:	683b      	ldr	r3, [r7, #0]
 8010cd0:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8010cd4:	4293      	cmp	r3, r2
 8010cd6:	d10e      	bne.n	8010cf6 <_Z41__static_initialization_and_destruction_0ii+0x72>
 8010cd8:	480c      	ldr	r0, [pc, #48]	@ (8010d0c <_Z41__static_initialization_and_destruction_0ii+0x88>)
 8010cda:	f7fe fe6d 	bl	800f9b8 <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 8010cde:	480c      	ldr	r0, [pc, #48]	@ (8010d10 <_Z41__static_initialization_and_destruction_0ii+0x8c>)
 8010ce0:	f7fb fb0c 	bl	800c2fc <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 8010ce4:	4808      	ldr	r0, [pc, #32]	@ (8010d08 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 8010ce6:	f7ff ffab 	bl	8010c40 <_ZN8touchgfx8LCD16bppD1Ev>
static STM32DMA dma;
 8010cea:	4806      	ldr	r0, [pc, #24]	@ (8010d04 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 8010cec:	f7ff f83c 	bl	800fd68 <_ZN8STM32DMAD1Ev>
static STM32TouchController tc;
 8010cf0:	4803      	ldr	r0, [pc, #12]	@ (8010d00 <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 8010cf2:	f7fe fbb5 	bl	800f460 <_ZN20STM32TouchControllerD1Ev>
}
 8010cf6:	bf00      	nop
 8010cf8:	3708      	adds	r7, #8
 8010cfa:	46bd      	mov	sp, r7
 8010cfc:	bd80      	pop	{r7, pc}
 8010cfe:	bf00      	nop
 8010d00:	24000b70 	.word	0x24000b70
 8010d04:	24000b74 	.word	0x24000b74
 8010d08:	24001914 	.word	0x24001914
 8010d0c:	240019a4 	.word	0x240019a4
 8010d10:	24000018 	.word	0x24000018

08010d14 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    {
        INTS_PR_ELEMENT = (sizeof(typename meta::select_type_maxsize<SupportedTypesList>::type) + sizeof(int) - 1) / sizeof(int),
        SIZE_OF_ELEMENT = INTS_PR_ELEMENT * sizeof(int)
    };

    virtual uint16_t capacity() const
 8010d14:	b480      	push	{r7}
 8010d16:	b083      	sub	sp, #12
 8010d18:	af00      	add	r7, sp, #0
 8010d1a:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 8010d1c:	2301      	movs	r3, #1
    }
 8010d1e:	4618      	mov	r0, r3
 8010d20:	370c      	adds	r7, #12
 8010d22:	46bd      	mov	sp, r7
 8010d24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010d28:	4770      	bx	lr

08010d2a <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
 8010d2a:	b480      	push	{r7}
 8010d2c:	b083      	sub	sp, #12
 8010d2e:	af00      	add	r7, sp, #0
 8010d30:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 8010d32:	230c      	movs	r3, #12
    }
 8010d34:	4618      	mov	r0, r3
 8010d36:	370c      	adds	r7, #12
 8010d38:	46bd      	mov	sp, r7
 8010d3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010d3e:	4770      	bx	lr

08010d40 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
 8010d40:	b480      	push	{r7}
 8010d42:	b083      	sub	sp, #12
 8010d44:	af00      	add	r7, sp, #0
 8010d46:	6078      	str	r0, [r7, #4]
 8010d48:	460b      	mov	r3, r1
 8010d4a:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 8010d4c:	887a      	ldrh	r2, [r7, #2]
 8010d4e:	4613      	mov	r3, r2
 8010d50:	005b      	lsls	r3, r3, #1
 8010d52:	4413      	add	r3, r2
 8010d54:	009b      	lsls	r3, r3, #2
 8010d56:	3308      	adds	r3, #8
 8010d58:	687a      	ldr	r2, [r7, #4]
 8010d5a:	4413      	add	r3, r2
    }
 8010d5c:	4618      	mov	r0, r3
 8010d5e:	370c      	adds	r7, #12
 8010d60:	46bd      	mov	sp, r7
 8010d62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010d66:	4770      	bx	lr

08010d68 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
 8010d68:	b480      	push	{r7}
 8010d6a:	b083      	sub	sp, #12
 8010d6c:	af00      	add	r7, sp, #0
 8010d6e:	6078      	str	r0, [r7, #4]
 8010d70:	460b      	mov	r3, r1
 8010d72:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 8010d74:	887a      	ldrh	r2, [r7, #2]
 8010d76:	4613      	mov	r3, r2
 8010d78:	005b      	lsls	r3, r3, #1
 8010d7a:	4413      	add	r3, r2
 8010d7c:	009b      	lsls	r3, r3, #2
 8010d7e:	3308      	adds	r3, #8
 8010d80:	687a      	ldr	r2, [r7, #4]
 8010d82:	4413      	add	r3, r2
    }
 8010d84:	4618      	mov	r0, r3
 8010d86:	370c      	adds	r7, #12
 8010d88:	46bd      	mov	sp, r7
 8010d8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010d8e:	4770      	bx	lr

08010d90 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 8010d90:	b480      	push	{r7}
 8010d92:	b083      	sub	sp, #12
 8010d94:	af00      	add	r7, sp, #0
 8010d96:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 8010d98:	2301      	movs	r3, #1
    }
 8010d9a:	4618      	mov	r0, r3
 8010d9c:	370c      	adds	r7, #12
 8010d9e:	46bd      	mov	sp, r7
 8010da0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010da4:	4770      	bx	lr

08010da6 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 8010da6:	b480      	push	{r7}
 8010da8:	b083      	sub	sp, #12
 8010daa:	af00      	add	r7, sp, #0
 8010dac:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 8010dae:	f44f 73e8 	mov.w	r3, #464	@ 0x1d0
    }
 8010db2:	4618      	mov	r0, r3
 8010db4:	370c      	adds	r7, #12
 8010db6:	46bd      	mov	sp, r7
 8010db8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010dbc:	4770      	bx	lr

08010dbe <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 8010dbe:	b480      	push	{r7}
 8010dc0:	b083      	sub	sp, #12
 8010dc2:	af00      	add	r7, sp, #0
 8010dc4:	6078      	str	r0, [r7, #4]
 8010dc6:	460b      	mov	r3, r1
 8010dc8:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8010dca:	887b      	ldrh	r3, [r7, #2]
 8010dcc:	f44f 72e8 	mov.w	r2, #464	@ 0x1d0
 8010dd0:	fb02 f303 	mul.w	r3, r2, r3
 8010dd4:	3308      	adds	r3, #8
 8010dd6:	687a      	ldr	r2, [r7, #4]
 8010dd8:	4413      	add	r3, r2
    }
 8010dda:	4618      	mov	r0, r3
 8010ddc:	370c      	adds	r7, #12
 8010dde:	46bd      	mov	sp, r7
 8010de0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010de4:	4770      	bx	lr

08010de6 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 8010de6:	b480      	push	{r7}
 8010de8:	b083      	sub	sp, #12
 8010dea:	af00      	add	r7, sp, #0
 8010dec:	6078      	str	r0, [r7, #4]
 8010dee:	460b      	mov	r3, r1
 8010df0:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8010df2:	887b      	ldrh	r3, [r7, #2]
 8010df4:	f44f 72e8 	mov.w	r2, #464	@ 0x1d0
 8010df8:	fb02 f303 	mul.w	r3, r2, r3
 8010dfc:	3308      	adds	r3, #8
 8010dfe:	687a      	ldr	r2, [r7, #4]
 8010e00:	4413      	add	r3, r2
    }
 8010e02:	4618      	mov	r0, r3
 8010e04:	370c      	adds	r7, #12
 8010e06:	46bd      	mov	sp, r7
 8010e08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010e0c:	4770      	bx	lr

08010e0e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 8010e0e:	b480      	push	{r7}
 8010e10:	b083      	sub	sp, #12
 8010e12:	af00      	add	r7, sp, #0
 8010e14:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 8010e16:	2301      	movs	r3, #1
    }
 8010e18:	4618      	mov	r0, r3
 8010e1a:	370c      	adds	r7, #12
 8010e1c:	46bd      	mov	sp, r7
 8010e1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010e22:	4770      	bx	lr

08010e24 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 8010e24:	b480      	push	{r7}
 8010e26:	b083      	sub	sp, #12
 8010e28:	af00      	add	r7, sp, #0
 8010e2a:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 8010e2c:	2310      	movs	r3, #16
    }
 8010e2e:	4618      	mov	r0, r3
 8010e30:	370c      	adds	r7, #12
 8010e32:	46bd      	mov	sp, r7
 8010e34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010e38:	4770      	bx	lr

08010e3a <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 8010e3a:	b480      	push	{r7}
 8010e3c:	b083      	sub	sp, #12
 8010e3e:	af00      	add	r7, sp, #0
 8010e40:	6078      	str	r0, [r7, #4]
 8010e42:	460b      	mov	r3, r1
 8010e44:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8010e46:	887b      	ldrh	r3, [r7, #2]
 8010e48:	011b      	lsls	r3, r3, #4
 8010e4a:	3308      	adds	r3, #8
 8010e4c:	687a      	ldr	r2, [r7, #4]
 8010e4e:	4413      	add	r3, r2
    }
 8010e50:	4618      	mov	r0, r3
 8010e52:	370c      	adds	r7, #12
 8010e54:	46bd      	mov	sp, r7
 8010e56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010e5a:	4770      	bx	lr

08010e5c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 8010e5c:	b480      	push	{r7}
 8010e5e:	b083      	sub	sp, #12
 8010e60:	af00      	add	r7, sp, #0
 8010e62:	6078      	str	r0, [r7, #4]
 8010e64:	460b      	mov	r3, r1
 8010e66:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8010e68:	887b      	ldrh	r3, [r7, #2]
 8010e6a:	011b      	lsls	r3, r3, #4
 8010e6c:	3308      	adds	r3, #8
 8010e6e:	687a      	ldr	r2, [r7, #4]
 8010e70:	4413      	add	r3, r2
    }
 8010e72:	4618      	mov	r0, r3
 8010e74:	370c      	adds	r7, #12
 8010e76:	46bd      	mov	sp, r7
 8010e78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010e7c:	4770      	bx	lr

08010e7e <_GLOBAL__sub_I_touchgfx_init>:
 8010e7e:	b580      	push	{r7, lr}
 8010e80:	af00      	add	r7, sp, #0
 8010e82:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8010e86:	2001      	movs	r0, #1
 8010e88:	f7ff fefc 	bl	8010c84 <_Z41__static_initialization_and_destruction_0ii>
 8010e8c:	bd80      	pop	{r7, pc}

08010e8e <_GLOBAL__sub_D_touchgfx_init>:
 8010e8e:	b580      	push	{r7, lr}
 8010e90:	af00      	add	r7, sp, #0
 8010e92:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8010e96:	2000      	movs	r0, #0
 8010e98:	f7ff fef4 	bl	8010c84 <_Z41__static_initialization_and_destruction_0ii>
 8010e9c:	bd80      	pop	{r7, pc}

08010e9e <_ZN8touchgfx3HAL17frontPorchEnteredEv>:
    void frontPorchEntered()
 8010e9e:	b580      	push	{r7, lr}
 8010ea0:	b082      	sub	sp, #8
 8010ea2:	af00      	add	r7, sp, #0
 8010ea4:	6078      	str	r0, [r7, #4]
        allowDMATransfers();
 8010ea6:	687b      	ldr	r3, [r7, #4]
 8010ea8:	681b      	ldr	r3, [r3, #0]
 8010eaa:	3320      	adds	r3, #32
 8010eac:	681b      	ldr	r3, [r3, #0]
 8010eae:	6878      	ldr	r0, [r7, #4]
 8010eb0:	4798      	blx	r3
    }
 8010eb2:	bf00      	nop
 8010eb4:	3708      	adds	r7, #8
 8010eb6:	46bd      	mov	sp, r7
 8010eb8:	bd80      	pop	{r7, pc}

08010eba <_ZN8touchgfx3HAL5vSyncEv>:
    void vSync()
 8010eba:	b480      	push	{r7}
 8010ebc:	b083      	sub	sp, #12
 8010ebe:	af00      	add	r7, sp, #0
 8010ec0:	6078      	str	r0, [r7, #4]
        vSyncCnt++;
 8010ec2:	687b      	ldr	r3, [r7, #4]
 8010ec4:	f893 306a 	ldrb.w	r3, [r3, #106]	@ 0x6a
 8010ec8:	3301      	adds	r3, #1
 8010eca:	b2da      	uxtb	r2, r3
 8010ecc:	687b      	ldr	r3, [r7, #4]
 8010ece:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
    }
 8010ed2:	bf00      	nop
 8010ed4:	370c      	adds	r7, #12
 8010ed6:	46bd      	mov	sp, r7
 8010ed8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010edc:	4770      	bx	lr
	...

08010ee0 <__NVIC_EnableIRQ>:
{
 8010ee0:	b480      	push	{r7}
 8010ee2:	b083      	sub	sp, #12
 8010ee4:	af00      	add	r7, sp, #0
 8010ee6:	4603      	mov	r3, r0
 8010ee8:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 8010eea:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8010eee:	2b00      	cmp	r3, #0
 8010ef0:	db0b      	blt.n	8010f0a <__NVIC_EnableIRQ+0x2a>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8010ef2:	88fb      	ldrh	r3, [r7, #6]
 8010ef4:	f003 021f 	and.w	r2, r3, #31
 8010ef8:	4907      	ldr	r1, [pc, #28]	@ (8010f18 <__NVIC_EnableIRQ+0x38>)
 8010efa:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8010efe:	095b      	lsrs	r3, r3, #5
 8010f00:	2001      	movs	r0, #1
 8010f02:	fa00 f202 	lsl.w	r2, r0, r2
 8010f06:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8010f0a:	bf00      	nop
 8010f0c:	370c      	adds	r7, #12
 8010f0e:	46bd      	mov	sp, r7
 8010f10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010f14:	4770      	bx	lr
 8010f16:	bf00      	nop
 8010f18:	e000e100 	.word	0xe000e100

08010f1c <__NVIC_DisableIRQ>:
{
 8010f1c:	b480      	push	{r7}
 8010f1e:	b083      	sub	sp, #12
 8010f20:	af00      	add	r7, sp, #0
 8010f22:	4603      	mov	r3, r0
 8010f24:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 8010f26:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8010f2a:	2b00      	cmp	r3, #0
 8010f2c:	db12      	blt.n	8010f54 <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8010f2e:	88fb      	ldrh	r3, [r7, #6]
 8010f30:	f003 021f 	and.w	r2, r3, #31
 8010f34:	490a      	ldr	r1, [pc, #40]	@ (8010f60 <__NVIC_DisableIRQ+0x44>)
 8010f36:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8010f3a:	095b      	lsrs	r3, r3, #5
 8010f3c:	2001      	movs	r0, #1
 8010f3e:	fa00 f202 	lsl.w	r2, r0, r2
 8010f42:	3320      	adds	r3, #32
 8010f44:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8010f48:	f3bf 8f4f 	dsb	sy
}
 8010f4c:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8010f4e:	f3bf 8f6f 	isb	sy
}
 8010f52:	bf00      	nop
}
 8010f54:	bf00      	nop
 8010f56:	370c      	adds	r7, #12
 8010f58:	46bd      	mov	sp, r7
 8010f5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010f5e:	4770      	bx	lr
 8010f60:	e000e100 	.word	0xe000e100

08010f64 <__NVIC_SetPriority>:
{
 8010f64:	b480      	push	{r7}
 8010f66:	b083      	sub	sp, #12
 8010f68:	af00      	add	r7, sp, #0
 8010f6a:	4603      	mov	r3, r0
 8010f6c:	6039      	str	r1, [r7, #0]
 8010f6e:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 8010f70:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8010f74:	2b00      	cmp	r3, #0
 8010f76:	db0a      	blt.n	8010f8e <__NVIC_SetPriority+0x2a>
    NVIC->IP[((uint32_t)IRQn)]                = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8010f78:	683b      	ldr	r3, [r7, #0]
 8010f7a:	b2da      	uxtb	r2, r3
 8010f7c:	490c      	ldr	r1, [pc, #48]	@ (8010fb0 <__NVIC_SetPriority+0x4c>)
 8010f7e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8010f82:	0112      	lsls	r2, r2, #4
 8010f84:	b2d2      	uxtb	r2, r2
 8010f86:	440b      	add	r3, r1
 8010f88:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
}
 8010f8c:	e00a      	b.n	8010fa4 <__NVIC_SetPriority+0x40>
    SCB->SHPR[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8010f8e:	683b      	ldr	r3, [r7, #0]
 8010f90:	b2da      	uxtb	r2, r3
 8010f92:	4908      	ldr	r1, [pc, #32]	@ (8010fb4 <__NVIC_SetPriority+0x50>)
 8010f94:	88fb      	ldrh	r3, [r7, #6]
 8010f96:	f003 030f 	and.w	r3, r3, #15
 8010f9a:	3b04      	subs	r3, #4
 8010f9c:	0112      	lsls	r2, r2, #4
 8010f9e:	b2d2      	uxtb	r2, r2
 8010fa0:	440b      	add	r3, r1
 8010fa2:	761a      	strb	r2, [r3, #24]
}
 8010fa4:	bf00      	nop
 8010fa6:	370c      	adds	r7, #12
 8010fa8:	46bd      	mov	sp, r7
 8010faa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010fae:	4770      	bx	lr
 8010fb0:	e000e100 	.word	0xe000e100
 8010fb4:	e000ed00 	.word	0xe000ed00

08010fb8 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
static uint16_t lcd_int_active_line;
static uint16_t lcd_int_porch_line;
}

void TouchGFXGeneratedHAL::initialize()
{
 8010fb8:	b5b0      	push	{r4, r5, r7, lr}
 8010fba:	b082      	sub	sp, #8
 8010fbc:	af00      	add	r7, sp, #0
 8010fbe:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 8010fc0:	687b      	ldr	r3, [r7, #4]
 8010fc2:	4618      	mov	r0, r3
 8010fc4:	f000 fceb 	bl	801199e <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8010fc8:	687d      	ldr	r5, [r7, #4]
 8010fca:	687b      	ldr	r3, [r7, #4]
 8010fcc:	681b      	ldr	r3, [r3, #0]
 8010fce:	3364      	adds	r3, #100	@ 0x64
 8010fd0:	681c      	ldr	r4, [r3, #0]
 8010fd2:	f003 fc07 	bl	80147e4 <_ZN8touchgfx11Application11getInstanceEv>
 8010fd6:	4603      	mov	r3, r0
 8010fd8:	4619      	mov	r1, r3
 8010fda:	4628      	mov	r0, r5
 8010fdc:	47a0      	blx	r4
    enableLCDControllerInterrupt();
 8010fde:	687b      	ldr	r3, [r7, #4]
 8010fe0:	681b      	ldr	r3, [r3, #0]
 8010fe2:	3380      	adds	r3, #128	@ 0x80
 8010fe4:	681b      	ldr	r3, [r3, #0]
 8010fe6:	6878      	ldr	r0, [r7, #4]
 8010fe8:	4798      	blx	r3
    enableInterrupts();
 8010fea:	687b      	ldr	r3, [r7, #4]
 8010fec:	681b      	ldr	r3, [r3, #0]
 8010fee:	3378      	adds	r3, #120	@ 0x78
 8010ff0:	681b      	ldr	r3, [r3, #0]
 8010ff2:	6878      	ldr	r0, [r7, #4]
 8010ff4:	4798      	blx	r3
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0xC0070800, (void*)0);
 8010ff6:	6878      	ldr	r0, [r7, #4]
 8010ff8:	687b      	ldr	r3, [r7, #4]
 8010ffa:	681b      	ldr	r3, [r3, #0]
 8010ffc:	3388      	adds	r3, #136	@ 0x88
 8010ffe:	681c      	ldr	r4, [r3, #0]
 8011000:	2300      	movs	r3, #0
 8011002:	4a04      	ldr	r2, [pc, #16]	@ (8011014 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>)
 8011004:	f04f 4140 	mov.w	r1, #3221225472	@ 0xc0000000
 8011008:	47a0      	blx	r4
}
 801100a:	bf00      	nop
 801100c:	3708      	adds	r7, #8
 801100e:	46bd      	mov	sp, r7
 8011010:	bdb0      	pop	{r4, r5, r7, pc}
 8011012:	bf00      	nop
 8011014:	c0070800 	.word	0xc0070800

08011018 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 8011018:	b580      	push	{r7, lr}
 801101a:	b082      	sub	sp, #8
 801101c:	af00      	add	r7, sp, #0
 801101e:	6078      	str	r0, [r7, #4]
    NVIC_SetPriority(DMA2D_IRQn, 9);
 8011020:	2109      	movs	r1, #9
 8011022:	205a      	movs	r0, #90	@ 0x5a
 8011024:	f7ff ff9e 	bl	8010f64 <__NVIC_SetPriority>
    NVIC_SetPriority(LTDC_IRQn, 9);
 8011028:	2109      	movs	r1, #9
 801102a:	2058      	movs	r0, #88	@ 0x58
 801102c:	f7ff ff9a 	bl	8010f64 <__NVIC_SetPriority>
}
 8011030:	bf00      	nop
 8011032:	3708      	adds	r7, #8
 8011034:	46bd      	mov	sp, r7
 8011036:	bd80      	pop	{r7, pc}

08011038 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 8011038:	b580      	push	{r7, lr}
 801103a:	b082      	sub	sp, #8
 801103c:	af00      	add	r7, sp, #0
 801103e:	6078      	str	r0, [r7, #4]
    NVIC_EnableIRQ(DMA2D_IRQn);
 8011040:	205a      	movs	r0, #90	@ 0x5a
 8011042:	f7ff ff4d 	bl	8010ee0 <__NVIC_EnableIRQ>
    NVIC_EnableIRQ(LTDC_IRQn);
 8011046:	2058      	movs	r0, #88	@ 0x58
 8011048:	f7ff ff4a 	bl	8010ee0 <__NVIC_EnableIRQ>
}
 801104c:	bf00      	nop
 801104e:	3708      	adds	r7, #8
 8011050:	46bd      	mov	sp, r7
 8011052:	bd80      	pop	{r7, pc}

08011054 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 8011054:	b580      	push	{r7, lr}
 8011056:	b082      	sub	sp, #8
 8011058:	af00      	add	r7, sp, #0
 801105a:	6078      	str	r0, [r7, #4]
    NVIC_DisableIRQ(DMA2D_IRQn);
 801105c:	205a      	movs	r0, #90	@ 0x5a
 801105e:	f7ff ff5d 	bl	8010f1c <__NVIC_DisableIRQ>
    NVIC_DisableIRQ(LTDC_IRQn);
 8011062:	2058      	movs	r0, #88	@ 0x58
 8011064:	f7ff ff5a 	bl	8010f1c <__NVIC_DisableIRQ>
}
 8011068:	bf00      	nop
 801106a:	3708      	adds	r7, #8
 801106c:	46bd      	mov	sp, r7
 801106e:	bd80      	pop	{r7, pc}

08011070 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 8011070:	b480      	push	{r7}
 8011072:	b083      	sub	sp, #12
 8011074:	af00      	add	r7, sp, #0
 8011076:	6078      	str	r0, [r7, #4]
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8011078:	4b11      	ldr	r3, [pc, #68]	@ (80110c0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 801107a:	68db      	ldr	r3, [r3, #12]
 801107c:	b29b      	uxth	r3, r3
 801107e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8011082:	b29b      	uxth	r3, r3
 8011084:	3b01      	subs	r3, #1
 8011086:	b29a      	uxth	r2, r3
 8011088:	4b0e      	ldr	r3, [pc, #56]	@ (80110c4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x54>)
 801108a:	801a      	strh	r2, [r3, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 801108c:	4b0c      	ldr	r3, [pc, #48]	@ (80110c0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 801108e:	691b      	ldr	r3, [r3, #16]
 8011090:	b29b      	uxth	r3, r3
 8011092:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8011096:	b29b      	uxth	r3, r3
 8011098:	3b01      	subs	r3, #1
 801109a:	b29a      	uxth	r2, r3
 801109c:	4b0a      	ldr	r3, [pc, #40]	@ (80110c8 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x58>)
 801109e:	801a      	strh	r2, [r3, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 80110a0:	4b08      	ldr	r3, [pc, #32]	@ (80110c4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x54>)
 80110a2:	881a      	ldrh	r2, [r3, #0]
 80110a4:	4b06      	ldr	r3, [pc, #24]	@ (80110c0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 80110a6:	641a      	str	r2, [r3, #64]	@ 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 80110a8:	4b05      	ldr	r3, [pc, #20]	@ (80110c0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 80110aa:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 80110ac:	4a04      	ldr	r2, [pc, #16]	@ (80110c0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 80110ae:	f043 0301 	orr.w	r3, r3, #1
 80110b2:	6353      	str	r3, [r2, #52]	@ 0x34
}
 80110b4:	bf00      	nop
 80110b6:	370c      	adds	r7, #12
 80110b8:	46bd      	mov	sp, r7
 80110ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80110be:	4770      	bx	lr
 80110c0:	50001000 	.word	0x50001000
 80110c4:	24001a20 	.word	0x24001a20
 80110c8:	24001a22 	.word	0x24001a22

080110cc <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:

bool TouchGFXGeneratedHAL::beginFrame()
{
 80110cc:	b580      	push	{r7, lr}
 80110ce:	b082      	sub	sp, #8
 80110d0:	af00      	add	r7, sp, #0
 80110d2:	6078      	str	r0, [r7, #4]
    return HAL::beginFrame();
 80110d4:	687b      	ldr	r3, [r7, #4]
 80110d6:	4618      	mov	r0, r3
 80110d8:	f000 fc48 	bl	801196c <_ZN8touchgfx3HAL10beginFrameEv>
 80110dc:	4603      	mov	r3, r0
}
 80110de:	4618      	mov	r0, r3
 80110e0:	3708      	adds	r7, #8
 80110e2:	46bd      	mov	sp, r7
 80110e4:	bd80      	pop	{r7, pc}

080110e6 <_ZN20TouchGFXGeneratedHAL8endFrameEv>:

void TouchGFXGeneratedHAL::endFrame()
{
 80110e6:	b580      	push	{r7, lr}
 80110e8:	b082      	sub	sp, #8
 80110ea:	af00      	add	r7, sp, #0
 80110ec:	6078      	str	r0, [r7, #4]
    HAL::endFrame();
 80110ee:	687b      	ldr	r3, [r7, #4]
 80110f0:	4618      	mov	r0, r3
 80110f2:	f000 fc47 	bl	8011984 <_ZN8touchgfx3HAL8endFrameEv>
    touchgfx::OSWrappers::signalRenderingDone();
 80110f6:	f7fe fcd9 	bl	800faac <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>
}
 80110fa:	bf00      	nop
 80110fc:	3708      	adds	r7, #8
 80110fe:	46bd      	mov	sp, r7
 8011100:	bd80      	pop	{r7, pc}
	...

08011104 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 8011104:	b480      	push	{r7}
 8011106:	b083      	sub	sp, #12
 8011108:	af00      	add	r7, sp, #0
 801110a:	6078      	str	r0, [r7, #4]
    return (uint16_t*)LTDC_Layer1->CFBAR;
 801110c:	4b03      	ldr	r3, [pc, #12]	@ (801111c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x18>)
 801110e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
}
 8011110:	4618      	mov	r0, r3
 8011112:	370c      	adds	r7, #12
 8011114:	46bd      	mov	sp, r7
 8011116:	f85d 7b04 	ldr.w	r7, [sp], #4
 801111a:	4770      	bx	lr
 801111c:	50001084 	.word	0x50001084

08011120 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 8011120:	b480      	push	{r7}
 8011122:	b083      	sub	sp, #12
 8011124:	af00      	add	r7, sp, #0
 8011126:	6078      	str	r0, [r7, #4]
 8011128:	6039      	str	r1, [r7, #0]
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 801112a:	4a06      	ldr	r2, [pc, #24]	@ (8011144 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0x24>)
 801112c:	683b      	ldr	r3, [r7, #0]
 801112e:	6293      	str	r3, [r2, #40]	@ 0x28

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8011130:	4b05      	ldr	r3, [pc, #20]	@ (8011148 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0x28>)
 8011132:	2201      	movs	r2, #1
 8011134:	625a      	str	r2, [r3, #36]	@ 0x24
}
 8011136:	bf00      	nop
 8011138:	370c      	adds	r7, #12
 801113a:	46bd      	mov	sp, r7
 801113c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8011140:	4770      	bx	lr
 8011142:	bf00      	nop
 8011144:	50001084 	.word	0x50001084
 8011148:	50001000 	.word	0x50001000

0801114c <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 801114c:	b580      	push	{r7, lr}
 801114e:	b082      	sub	sp, #8
 8011150:	af00      	add	r7, sp, #0
 8011152:	6078      	str	r0, [r7, #4]
 8011154:	6039      	str	r1, [r7, #0]
    HAL::flushFrameBuffer(rect);
 8011156:	687b      	ldr	r3, [r7, #4]
 8011158:	6839      	ldr	r1, [r7, #0]
 801115a:	4618      	mov	r0, r3
 801115c:	f000 fbd0 	bl	8011900 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
}
 8011160:	bf00      	nop
 8011162:	3708      	adds	r7, #8
 8011164:	46bd      	mov	sp, r7
 8011166:	bd80      	pop	{r7, pc}

08011168 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 8011168:	b580      	push	{r7, lr}
 801116a:	b084      	sub	sp, #16
 801116c:	af00      	add	r7, sp, #0
 801116e:	60f8      	str	r0, [r7, #12]
 8011170:	60b9      	str	r1, [r7, #8]
 8011172:	607a      	str	r2, [r7, #4]
 8011174:	603b      	str	r3, [r7, #0]
    return HAL::blockCopy(dest, src, numBytes);
 8011176:	68f8      	ldr	r0, [r7, #12]
 8011178:	683b      	ldr	r3, [r7, #0]
 801117a:	687a      	ldr	r2, [r7, #4]
 801117c:	68b9      	ldr	r1, [r7, #8]
 801117e:	f000 fd30 	bl	8011be2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
 8011182:	4603      	mov	r3, r0
}
 8011184:	4618      	mov	r0, r3
 8011186:	3710      	adds	r7, #16
 8011188:	46bd      	mov	sp, r7
 801118a:	bd80      	pop	{r7, pc}

0801118c <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv>:

void TouchGFXGeneratedHAL::InvalidateCache()
{
 801118c:	b480      	push	{r7}
 801118e:	b087      	sub	sp, #28
 8011190:	af00      	add	r7, sp, #0
 8011192:	6078      	str	r0, [r7, #4]
    // Because DMA2D access main memory directly, the DCache must be invalidated
    // becuase it could hold a wrong image of the framebuffer. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable
    // "CPU Cache" in the "System Core" settings for "Cortex M7" in CubeMX
    // in order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
 8011194:	4b25      	ldr	r3, [pc, #148]	@ (801122c <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0xa0>)
 8011196:	695b      	ldr	r3, [r3, #20]
 8011198:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 801119c:	2b00      	cmp	r3, #0
 801119e:	bf14      	ite	ne
 80111a0:	2301      	movne	r3, #1
 80111a2:	2300      	moveq	r3, #0
 80111a4:	b2db      	uxtb	r3, r3
 80111a6:	2b00      	cmp	r3, #0
 80111a8:	d03a      	beq.n	8011220 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x94>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 80111aa:	4b20      	ldr	r3, [pc, #128]	@ (801122c <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0xa0>)
 80111ac:	2200      	movs	r2, #0
 80111ae:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 80111b2:	f3bf 8f4f 	dsb	sy
}
 80111b6:	bf00      	nop
    ccsidr = SCB->CCSIDR;
 80111b8:	4b1c      	ldr	r3, [pc, #112]	@ (801122c <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0xa0>)
 80111ba:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80111be:	617b      	str	r3, [r7, #20]
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 80111c0:	697b      	ldr	r3, [r7, #20]
 80111c2:	0b5b      	lsrs	r3, r3, #13
 80111c4:	f3c3 030e 	ubfx	r3, r3, #0, #15
 80111c8:	613b      	str	r3, [r7, #16]
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 80111ca:	697b      	ldr	r3, [r7, #20]
 80111cc:	08db      	lsrs	r3, r3, #3
 80111ce:	f3c3 0309 	ubfx	r3, r3, #0, #10
 80111d2:	60fb      	str	r3, [r7, #12]
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80111d4:	693b      	ldr	r3, [r7, #16]
 80111d6:	015a      	lsls	r2, r3, #5
 80111d8:	f643 73e0 	movw	r3, #16352	@ 0x3fe0
 80111dc:	4013      	ands	r3, r2
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
 80111de:	68fa      	ldr	r2, [r7, #12]
 80111e0:	0792      	lsls	r2, r2, #30
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 80111e2:	4912      	ldr	r1, [pc, #72]	@ (801122c <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0xa0>)
 80111e4:	4313      	orrs	r3, r2
 80111e6:	f8c1 3274 	str.w	r3, [r1, #628]	@ 0x274
      } while (ways-- != 0U);
 80111ea:	68fb      	ldr	r3, [r7, #12]
 80111ec:	1e5a      	subs	r2, r3, #1
 80111ee:	60fa      	str	r2, [r7, #12]
 80111f0:	2b00      	cmp	r3, #0
 80111f2:	bf14      	ite	ne
 80111f4:	2301      	movne	r3, #1
 80111f6:	2300      	moveq	r3, #0
 80111f8:	b2db      	uxtb	r3, r3
 80111fa:	2b00      	cmp	r3, #0
 80111fc:	d1ea      	bne.n	80111d4 <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x48>
    } while(sets-- != 0U);
 80111fe:	693b      	ldr	r3, [r7, #16]
 8011200:	1e5a      	subs	r2, r3, #1
 8011202:	613a      	str	r2, [r7, #16]
 8011204:	2b00      	cmp	r3, #0
 8011206:	bf14      	ite	ne
 8011208:	2301      	movne	r3, #1
 801120a:	2300      	moveq	r3, #0
 801120c:	b2db      	uxtb	r3, r3
 801120e:	2b00      	cmp	r3, #0
 8011210:	d1db      	bne.n	80111ca <_ZN20TouchGFXGeneratedHAL15InvalidateCacheEv+0x3e>
  __ASM volatile ("dsb 0xF":::"memory");
 8011212:	f3bf 8f4f 	dsb	sy
}
 8011216:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8011218:	f3bf 8f6f 	isb	sy
}
 801121c:	bf00      	nop
}
 801121e:	bf00      	nop
    {
        SCB_CleanInvalidateDCache();
    }
}
 8011220:	bf00      	nop
 8011222:	371c      	adds	r7, #28
 8011224:	46bd      	mov	sp, r7
 8011226:	f85d 7b04 	ldr.w	r7, [sp], #4
 801122a:	4770      	bx	lr
 801122c:	e000ed00 	.word	0xe000ed00

08011230 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv>:

void TouchGFXGeneratedHAL::FlushCache()
{
 8011230:	b480      	push	{r7}
 8011232:	b087      	sub	sp, #28
 8011234:	af00      	add	r7, sp, #0
 8011236:	6078      	str	r0, [r7, #4]
    // If the framebuffer is placed in Write-Back cached memory (e.g. SRAM) then
    // the DCache must be flushed prior to DMA2D accessing it. That's done
    // using the function SCB_CleanInvalidateDCache(). Remember to enable
    // "CPU Cache" in the "System Core" settings for "Cortex M7" in CubeMX in
    // order for this function call to work.
    if (SCB->CCR & SCB_CCR_DC_Msk)
 8011238:	4b25      	ldr	r3, [pc, #148]	@ (80112d0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0xa0>)
 801123a:	695b      	ldr	r3, [r3, #20]
 801123c:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8011240:	2b00      	cmp	r3, #0
 8011242:	bf14      	ite	ne
 8011244:	2301      	movne	r3, #1
 8011246:	2300      	moveq	r3, #0
 8011248:	b2db      	uxtb	r3, r3
 801124a:	2b00      	cmp	r3, #0
 801124c:	d03a      	beq.n	80112c4 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x94>
    SCB->CSSELR = 0U;                       /* select Level 1 data cache */
 801124e:	4b20      	ldr	r3, [pc, #128]	@ (80112d0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0xa0>)
 8011250:	2200      	movs	r2, #0
 8011252:	f8c3 2084 	str.w	r2, [r3, #132]	@ 0x84
  __ASM volatile ("dsb 0xF":::"memory");
 8011256:	f3bf 8f4f 	dsb	sy
}
 801125a:	bf00      	nop
    ccsidr = SCB->CCSIDR;
 801125c:	4b1c      	ldr	r3, [pc, #112]	@ (80112d0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0xa0>)
 801125e:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8011262:	617b      	str	r3, [r7, #20]
    sets = (uint32_t)(CCSIDR_SETS(ccsidr));
 8011264:	697b      	ldr	r3, [r7, #20]
 8011266:	0b5b      	lsrs	r3, r3, #13
 8011268:	f3c3 030e 	ubfx	r3, r3, #0, #15
 801126c:	613b      	str	r3, [r7, #16]
      ways = (uint32_t)(CCSIDR_WAYS(ccsidr));
 801126e:	697b      	ldr	r3, [r7, #20]
 8011270:	08db      	lsrs	r3, r3, #3
 8011272:	f3c3 0309 	ubfx	r3, r3, #0, #10
 8011276:	60fb      	str	r3, [r7, #12]
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8011278:	693b      	ldr	r3, [r7, #16]
 801127a:	015a      	lsls	r2, r3, #5
 801127c:	f643 73e0 	movw	r3, #16352	@ 0x3fe0
 8011280:	4013      	ands	r3, r2
                       ((ways << SCB_DCCISW_WAY_Pos) & SCB_DCCISW_WAY_Msk)  );
 8011282:	68fa      	ldr	r2, [r7, #12]
 8011284:	0792      	lsls	r2, r2, #30
        SCB->DCCISW = (((sets << SCB_DCCISW_SET_Pos) & SCB_DCCISW_SET_Msk) |
 8011286:	4912      	ldr	r1, [pc, #72]	@ (80112d0 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0xa0>)
 8011288:	4313      	orrs	r3, r2
 801128a:	f8c1 3274 	str.w	r3, [r1, #628]	@ 0x274
      } while (ways-- != 0U);
 801128e:	68fb      	ldr	r3, [r7, #12]
 8011290:	1e5a      	subs	r2, r3, #1
 8011292:	60fa      	str	r2, [r7, #12]
 8011294:	2b00      	cmp	r3, #0
 8011296:	bf14      	ite	ne
 8011298:	2301      	movne	r3, #1
 801129a:	2300      	moveq	r3, #0
 801129c:	b2db      	uxtb	r3, r3
 801129e:	2b00      	cmp	r3, #0
 80112a0:	d1ea      	bne.n	8011278 <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x48>
    } while(sets-- != 0U);
 80112a2:	693b      	ldr	r3, [r7, #16]
 80112a4:	1e5a      	subs	r2, r3, #1
 80112a6:	613a      	str	r2, [r7, #16]
 80112a8:	2b00      	cmp	r3, #0
 80112aa:	bf14      	ite	ne
 80112ac:	2301      	movne	r3, #1
 80112ae:	2300      	moveq	r3, #0
 80112b0:	b2db      	uxtb	r3, r3
 80112b2:	2b00      	cmp	r3, #0
 80112b4:	d1db      	bne.n	801126e <_ZN20TouchGFXGeneratedHAL10FlushCacheEv+0x3e>
  __ASM volatile ("dsb 0xF":::"memory");
 80112b6:	f3bf 8f4f 	dsb	sy
}
 80112ba:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 80112bc:	f3bf 8f6f 	isb	sy
}
 80112c0:	bf00      	nop
}
 80112c2:	bf00      	nop
    {
        SCB_CleanInvalidateDCache();
    }
}
 80112c4:	bf00      	nop
 80112c6:	371c      	adds	r7, #28
 80112c8:	46bd      	mov	sp, r7
 80112ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80112ce:	4770      	bx	lr
 80112d0:	e000ed00 	.word	0xe000ed00

080112d4 <HAL_LTDC_LineEventCallback>:

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 80112d4:	b580      	push	{r7, lr}
 80112d6:	b082      	sub	sp, #8
 80112d8:	af00      	add	r7, sp, #0
 80112da:	6078      	str	r0, [r7, #4]
        if (!HAL::getInstance())
 80112dc:	f7fb fc22 	bl	800cb24 <_ZN8touchgfx3HAL11getInstanceEv>
 80112e0:	4603      	mov	r3, r0
 80112e2:	2b00      	cmp	r3, #0
 80112e4:	bf0c      	ite	eq
 80112e6:	2301      	moveq	r3, #1
 80112e8:	2300      	movne	r3, #0
 80112ea:	b2db      	uxtb	r3, r3
 80112ec:	2b00      	cmp	r3, #0
 80112ee:	d132      	bne.n	8011356 <HAL_LTDC_LineEventCallback+0x82>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 80112f0:	4b1b      	ldr	r3, [pc, #108]	@ (8011360 <HAL_LTDC_LineEventCallback+0x8c>)
 80112f2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80112f4:	4a1b      	ldr	r2, [pc, #108]	@ (8011364 <HAL_LTDC_LineEventCallback+0x90>)
 80112f6:	8812      	ldrh	r2, [r2, #0]
 80112f8:	4293      	cmp	r3, r2
 80112fa:	bf0c      	ite	eq
 80112fc:	2301      	moveq	r3, #1
 80112fe:	2300      	movne	r3, #0
 8011300:	b2db      	uxtb	r3, r3
 8011302:	2b00      	cmp	r3, #0
 8011304:	d017      	beq.n	8011336 <HAL_LTDC_LineEventCallback+0x62>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8011306:	4b18      	ldr	r3, [pc, #96]	@ (8011368 <HAL_LTDC_LineEventCallback+0x94>)
 8011308:	881b      	ldrh	r3, [r3, #0]
 801130a:	4619      	mov	r1, r3
 801130c:	6878      	ldr	r0, [r7, #4]
 801130e:	f7f3 fe2d 	bl	8004f6c <HAL_LTDC_ProgramLineEvent>
            HAL::getInstance()->vSync();
 8011312:	f7fb fc07 	bl	800cb24 <_ZN8touchgfx3HAL11getInstanceEv>
 8011316:	4603      	mov	r3, r0
 8011318:	4618      	mov	r0, r3
 801131a:	f7ff fdce 	bl	8010eba <_ZN8touchgfx3HAL5vSyncEv>
            OSWrappers::signalVSync();
 801131e:	f7fe fbb9 	bl	800fa94 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8011322:	f7fb fbff 	bl	800cb24 <_ZN8touchgfx3HAL11getInstanceEv>
 8011326:	4603      	mov	r3, r0
 8011328:	4618      	mov	r0, r3
 801132a:	f001 f885 	bl	8012438 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 801132e:	2000      	movs	r0, #0
 8011330:	f7fe f8c0 	bl	800f4b4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8011334:	e010      	b.n	8011358 <HAL_LTDC_LineEventCallback+0x84>
        }
        else
        {
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8011336:	4b0b      	ldr	r3, [pc, #44]	@ (8011364 <HAL_LTDC_LineEventCallback+0x90>)
 8011338:	881b      	ldrh	r3, [r3, #0]
 801133a:	4619      	mov	r1, r3
 801133c:	6878      	ldr	r0, [r7, #4]
 801133e:	f7f3 fe15 	bl	8004f6c <HAL_LTDC_ProgramLineEvent>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
 8011342:	f7fb fbef 	bl	800cb24 <_ZN8touchgfx3HAL11getInstanceEv>
 8011346:	4603      	mov	r3, r0
 8011348:	4618      	mov	r0, r3
 801134a:	f7ff fda8 	bl	8010e9e <_ZN8touchgfx3HAL17frontPorchEnteredEv>
            GPIO::clear(GPIO::VSYNC_FREQ);
 801134e:	2000      	movs	r0, #0
 8011350:	f7fe f8cc 	bl	800f4ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8011354:	e000      	b.n	8011358 <HAL_LTDC_LineEventCallback+0x84>
            return;
 8011356:	bf00      	nop
        }
    }
 8011358:	3708      	adds	r7, #8
 801135a:	46bd      	mov	sp, r7
 801135c:	bd80      	pop	{r7, pc}
 801135e:	bf00      	nop
 8011360:	50001000 	.word	0x50001000
 8011364:	24001a20 	.word	0x24001a20
 8011368:	24001a22 	.word	0x24001a22

0801136c <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 801136c:	8880      	ldrh	r0, [r0, #4]
 801136e:	4770      	bx	lr

08011370 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8011370:	b570      	push	{r4, r5, r6, lr}
 8011372:	6803      	ldr	r3, [r0, #0]
 8011374:	460c      	mov	r4, r1
 8011376:	2100      	movs	r1, #0
 8011378:	4605      	mov	r5, r0
 801137a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801137c:	4798      	blx	r3
 801137e:	4606      	mov	r6, r0
 8011380:	682b      	ldr	r3, [r5, #0]
 8011382:	4628      	mov	r0, r5
 8011384:	1ba4      	subs	r4, r4, r6
 8011386:	6a1b      	ldr	r3, [r3, #32]
 8011388:	b2a4      	uxth	r4, r4
 801138a:	4798      	blx	r3
 801138c:	fbb4 f0f0 	udiv	r0, r4, r0
 8011390:	bd70      	pop	{r4, r5, r6, pc}

08011392 <_ZN8touchgfx17AbstractPartition5clearEv>:
 8011392:	2300      	movs	r3, #0
 8011394:	8083      	strh	r3, [r0, #4]
 8011396:	4770      	bx	lr

08011398 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8011398:	b510      	push	{r4, lr}
 801139a:	6803      	ldr	r3, [r0, #0]
 801139c:	4604      	mov	r4, r0
 801139e:	8881      	ldrh	r1, [r0, #4]
 80113a0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80113a2:	4798      	blx	r3
 80113a4:	88a3      	ldrh	r3, [r4, #4]
 80113a6:	3301      	adds	r3, #1
 80113a8:	80a3      	strh	r3, [r4, #4]
 80113aa:	bd10      	pop	{r4, pc}

080113ac <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 80113ac:	6803      	ldr	r3, [r0, #0]
 80113ae:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80113b0:	4718      	bx	r3

080113b2 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 80113b2:	4770      	bx	lr

080113b4 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 80113b4:	4a02      	ldr	r2, [pc, #8]	@ (80113c0 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 80113b6:	6002      	str	r2, [r0, #0]
 80113b8:	2200      	movs	r2, #0
 80113ba:	8082      	strh	r2, [r0, #4]
 80113bc:	4770      	bx	lr
 80113be:	bf00      	nop
 80113c0:	080281b8 	.word	0x080281b8

080113c4 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 80113c4:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80113c6:	2000      	movs	r0, #0
 80113c8:	b12b      	cbz	r3, 80113d6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80113ca:	b920      	cbnz	r0, 80113d6 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80113cc:	1a5a      	subs	r2, r3, r1
 80113ce:	699b      	ldr	r3, [r3, #24]
 80113d0:	4250      	negs	r0, r2
 80113d2:	4150      	adcs	r0, r2
 80113d4:	e7f8      	b.n	80113c8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 80113d6:	4770      	bx	lr

080113d8 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 80113d8:	2300      	movs	r3, #0
 80113da:	6148      	str	r0, [r1, #20]
 80113dc:	618b      	str	r3, [r1, #24]
 80113de:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80113e0:	b913      	cbnz	r3, 80113e8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 80113e2:	6281      	str	r1, [r0, #40]	@ 0x28
 80113e4:	4770      	bx	lr
 80113e6:	4613      	mov	r3, r2
 80113e8:	699a      	ldr	r2, [r3, #24]
 80113ea:	2a00      	cmp	r2, #0
 80113ec:	d1fb      	bne.n	80113e6 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 80113ee:	6199      	str	r1, [r3, #24]
 80113f0:	4770      	bx	lr

080113f2 <_ZN8touchgfx9Container9removeAllEv>:
 80113f2:	2200      	movs	r2, #0
 80113f4:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80113f6:	b123      	cbz	r3, 8011402 <_ZN8touchgfx9Container9removeAllEv+0x10>
 80113f8:	6999      	ldr	r1, [r3, #24]
 80113fa:	6281      	str	r1, [r0, #40]	@ 0x28
 80113fc:	e9c3 2205 	strd	r2, r2, [r3, #20]
 8011400:	e7f8      	b.n	80113f4 <_ZN8touchgfx9Container9removeAllEv+0x2>
 8011402:	4770      	bx	lr

08011404 <_ZN8touchgfx9Container6unlinkEv>:
 8011404:	2300      	movs	r3, #0
 8011406:	6283      	str	r3, [r0, #40]	@ 0x28
 8011408:	4770      	bx	lr

0801140a <_ZNK8touchgfx9Container12getSolidRectEv>:
 801140a:	2200      	movs	r2, #0
 801140c:	8002      	strh	r2, [r0, #0]
 801140e:	8042      	strh	r2, [r0, #2]
 8011410:	8082      	strh	r2, [r0, #4]
 8011412:	80c2      	strh	r2, [r0, #6]
 8011414:	4770      	bx	lr

08011416 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8011416:	b570      	push	{r4, r5, r6, lr}
 8011418:	460d      	mov	r5, r1
 801141a:	4616      	mov	r6, r2
 801141c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 801141e:	b13c      	cbz	r4, 8011430 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8011420:	6823      	ldr	r3, [r4, #0]
 8011422:	4620      	mov	r0, r4
 8011424:	4632      	mov	r2, r6
 8011426:	4629      	mov	r1, r5
 8011428:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 801142a:	4798      	blx	r3
 801142c:	69a4      	ldr	r4, [r4, #24]
 801142e:	e7f6      	b.n	801141e <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8011430:	bd70      	pop	{r4, r5, r6, pc}

08011432 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8011432:	b538      	push	{r3, r4, r5, lr}
 8011434:	460d      	mov	r5, r1
 8011436:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8011438:	b134      	cbz	r4, 8011448 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 801143a:	682b      	ldr	r3, [r5, #0]
 801143c:	4621      	mov	r1, r4
 801143e:	4628      	mov	r0, r5
 8011440:	689b      	ldr	r3, [r3, #8]
 8011442:	4798      	blx	r3
 8011444:	69a4      	ldr	r4, [r4, #24]
 8011446:	e7f7      	b.n	8011438 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8011448:	bd38      	pop	{r3, r4, r5, pc}

0801144a <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 801144a:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 801144c:	b19b      	cbz	r3, 8011476 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 801144e:	428b      	cmp	r3, r1
 8011450:	d109      	bne.n	8011466 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8011452:	699a      	ldr	r2, [r3, #24]
 8011454:	2100      	movs	r1, #0
 8011456:	6159      	str	r1, [r3, #20]
 8011458:	6282      	str	r2, [r0, #40]	@ 0x28
 801145a:	b902      	cbnz	r2, 801145e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 801145c:	4770      	bx	lr
 801145e:	6199      	str	r1, [r3, #24]
 8011460:	4770      	bx	lr
 8011462:	4613      	mov	r3, r2
 8011464:	b13a      	cbz	r2, 8011476 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8011466:	699a      	ldr	r2, [r3, #24]
 8011468:	428a      	cmp	r2, r1
 801146a:	d1fa      	bne.n	8011462 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 801146c:	698a      	ldr	r2, [r1, #24]
 801146e:	619a      	str	r2, [r3, #24]
 8011470:	2300      	movs	r3, #0
 8011472:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8011476:	4770      	bx	lr

08011478 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8011478:	b410      	push	{r4}
 801147a:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 801147c:	4604      	mov	r4, r0
 801147e:	b92b      	cbnz	r3, 801148c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8011480:	6803      	ldr	r3, [r0, #0]
 8011482:	4611      	mov	r1, r2
 8011484:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011488:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 801148a:	4718      	bx	r3
 801148c:	b941      	cbnz	r1, 80114a0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 801148e:	6193      	str	r3, [r2, #24]
 8011490:	6282      	str	r2, [r0, #40]	@ 0x28
 8011492:	6154      	str	r4, [r2, #20]
 8011494:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011498:	4770      	bx	lr
 801149a:	4603      	mov	r3, r0
 801149c:	2800      	cmp	r0, #0
 801149e:	d0f9      	beq.n	8011494 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 80114a0:	4299      	cmp	r1, r3
 80114a2:	6998      	ldr	r0, [r3, #24]
 80114a4:	d1f9      	bne.n	801149a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 80114a6:	6190      	str	r0, [r2, #24]
 80114a8:	618a      	str	r2, [r1, #24]
 80114aa:	e7f2      	b.n	8011492 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

080114ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 80114ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80114b0:	461f      	mov	r7, r3
 80114b2:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 80114b6:	460d      	mov	r5, r1
 80114b8:	4616      	mov	r6, r2
 80114ba:	b103      	cbz	r3, 80114be <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 80114bc:	6038      	str	r0, [r7, #0]
 80114be:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 80114c0:	b314      	cbz	r4, 8011508 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 80114c2:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 80114c6:	b1eb      	cbz	r3, 8011504 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80114c8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80114cc:	428d      	cmp	r5, r1
 80114ce:	db19      	blt.n	8011504 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80114d0:	b289      	uxth	r1, r1
 80114d2:	8923      	ldrh	r3, [r4, #8]
 80114d4:	440b      	add	r3, r1
 80114d6:	b21b      	sxth	r3, r3
 80114d8:	429d      	cmp	r5, r3
 80114da:	da13      	bge.n	8011504 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80114dc:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80114e0:	4296      	cmp	r6, r2
 80114e2:	db0f      	blt.n	8011504 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80114e4:	b292      	uxth	r2, r2
 80114e6:	8963      	ldrh	r3, [r4, #10]
 80114e8:	4413      	add	r3, r2
 80114ea:	b21b      	sxth	r3, r3
 80114ec:	429e      	cmp	r6, r3
 80114ee:	da09      	bge.n	8011504 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80114f0:	6823      	ldr	r3, [r4, #0]
 80114f2:	1ab2      	subs	r2, r6, r2
 80114f4:	1a69      	subs	r1, r5, r1
 80114f6:	4620      	mov	r0, r4
 80114f8:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 80114fc:	b212      	sxth	r2, r2
 80114fe:	463b      	mov	r3, r7
 8011500:	b209      	sxth	r1, r1
 8011502:	47c0      	blx	r8
 8011504:	69a4      	ldr	r4, [r4, #24]
 8011506:	e7db      	b.n	80114c0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8011508:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801150c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 801150c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011510:	4c6d      	ldr	r4, [pc, #436]	@ (80116c8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1bc>)
 8011512:	b0a1      	sub	sp, #132	@ 0x84
 8011514:	4606      	mov	r6, r0
 8011516:	6824      	ldr	r4, [r4, #0]
 8011518:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 801151a:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 801151e:	2400      	movs	r4, #0
 8011520:	9303      	str	r3, [sp, #12]
 8011522:	802c      	strh	r4, [r5, #0]
 8011524:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 8011526:	802c      	strh	r4, [r5, #0]
 8011528:	601c      	str	r4, [r3, #0]
 801152a:	e9cd 1201 	strd	r1, r2, [sp, #4]
 801152e:	f7ff ffbd 	bl	80114ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8011532:	f1b9 0f03 	cmp.w	r9, #3
 8011536:	f340 80c1 	ble.w	80116bc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b0>
 801153a:	4631      	mov	r1, r6
 801153c:	a80c      	add	r0, sp, #48	@ 0x30
 801153e:	f004 faaf 	bl	8015aa0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011542:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 8011546:	9306      	str	r3, [sp, #24]
 8011548:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801154c:	9307      	str	r3, [sp, #28]
 801154e:	9b03      	ldr	r3, [sp, #12]
 8011550:	f8d3 a000 	ldr.w	sl, [r3]
 8011554:	f1ba 0f00 	cmp.w	sl, #0
 8011558:	f000 80b3 	beq.w	80116c2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b6>
 801155c:	4651      	mov	r1, sl
 801155e:	a810      	add	r0, sp, #64	@ 0x40
 8011560:	f004 fa9e 	bl	8015aa0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011564:	2002      	movs	r0, #2
 8011566:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 801156a:	9b01      	ldr	r3, [sp, #4]
 801156c:	9a06      	ldr	r2, [sp, #24]
 801156e:	fb91 f1f0 	sdiv	r1, r1, r0
 8011572:	189d      	adds	r5, r3, r2
 8011574:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 8011578:	9a07      	ldr	r2, [sp, #28]
 801157a:	4419      	add	r1, r3
 801157c:	9b02      	ldr	r3, [sp, #8]
 801157e:	4413      	add	r3, r2
 8011580:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 8011584:	1a6d      	subs	r5, r5, r1
 8011586:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 801158a:	fb92 f2f0 	sdiv	r2, r2, r0
 801158e:	440a      	add	r2, r1
 8011590:	1a9b      	subs	r3, r3, r2
 8011592:	435b      	muls	r3, r3
 8011594:	fb05 3505 	mla	r5, r5, r5, r3
 8011598:	4f4c      	ldr	r7, [pc, #304]	@ (80116cc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 801159a:	ac10      	add	r4, sp, #64	@ 0x40
 801159c:	f1b9 0f0c 	cmp.w	r9, #12
 80115a0:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80115a2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80115a4:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80115a6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80115a8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80115aa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80115ac:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 80115b0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80115b4:	f04f 0303 	mov.w	r3, #3
 80115b8:	bfd8      	it	le
 80115ba:	f109 32ff 	addle.w	r2, r9, #4294967295
 80115be:	f04f 0400 	mov.w	r4, #0
 80115c2:	f8cd 9000 	str.w	r9, [sp]
 80115c6:	bfcc      	ite	gt
 80115c8:	4698      	movgt	r8, r3
 80115ca:	fb92 f8f3 	sdivle	r8, r2, r3
 80115ce:	1c63      	adds	r3, r4, #1
 80115d0:	aa10      	add	r2, sp, #64	@ 0x40
 80115d2:	f004 0401 	and.w	r4, r4, #1
 80115d6:	f04f 0b00 	mov.w	fp, #0
 80115da:	9308      	str	r3, [sp, #32]
 80115dc:	9b00      	ldr	r3, [sp, #0]
 80115de:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 80115e2:	fb93 f3f8 	sdiv	r3, r3, r8
 80115e6:	3404      	adds	r4, #4
 80115e8:	b29b      	uxth	r3, r3
 80115ea:	9304      	str	r3, [sp, #16]
 80115ec:	9a04      	ldr	r2, [sp, #16]
 80115ee:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80115f2:	fb13 f302 	smulbb	r3, r3, r2
 80115f6:	9a01      	ldr	r2, [sp, #4]
 80115f8:	b29b      	uxth	r3, r3
 80115fa:	1899      	adds	r1, r3, r2
 80115fc:	9305      	str	r3, [sp, #20]
 80115fe:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8011602:	b209      	sxth	r1, r1
 8011604:	4299      	cmp	r1, r3
 8011606:	db4d      	blt.n	80116a4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8011608:	8932      	ldrh	r2, [r6, #8]
 801160a:	4413      	add	r3, r2
 801160c:	b21b      	sxth	r3, r3
 801160e:	4299      	cmp	r1, r3
 8011610:	da48      	bge.n	80116a4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8011612:	9b04      	ldr	r3, [sp, #16]
 8011614:	6827      	ldr	r7, [r4, #0]
 8011616:	fb17 f703 	smulbb	r7, r7, r3
 801161a:	9b02      	ldr	r3, [sp, #8]
 801161c:	b2bf      	uxth	r7, r7
 801161e:	18fa      	adds	r2, r7, r3
 8011620:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8011624:	b212      	sxth	r2, r2
 8011626:	429a      	cmp	r2, r3
 8011628:	db3c      	blt.n	80116a4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801162a:	8970      	ldrh	r0, [r6, #10]
 801162c:	4403      	add	r3, r0
 801162e:	b21b      	sxth	r3, r3
 8011630:	429a      	cmp	r2, r3
 8011632:	da37      	bge.n	80116a4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8011634:	2300      	movs	r3, #0
 8011636:	4630      	mov	r0, r6
 8011638:	930b      	str	r3, [sp, #44]	@ 0x2c
 801163a:	ab0b      	add	r3, sp, #44	@ 0x2c
 801163c:	f7ff ff36 	bl	80114ac <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8011640:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8011642:	b37a      	cbz	r2, 80116a4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8011644:	4552      	cmp	r2, sl
 8011646:	d02d      	beq.n	80116a4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8011648:	4611      	mov	r1, r2
 801164a:	a80e      	add	r0, sp, #56	@ 0x38
 801164c:	9209      	str	r2, [sp, #36]	@ 0x24
 801164e:	f004 fa27 	bl	8015aa0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8011652:	f04f 0e02 	mov.w	lr, #2
 8011656:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 801165a:	9a06      	ldr	r2, [sp, #24]
 801165c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 8011660:	9b01      	ldr	r3, [sp, #4]
 8011662:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 8011666:	4413      	add	r3, r2
 8011668:	9a07      	ldr	r2, [sp, #28]
 801166a:	fb91 f1fe 	sdiv	r1, r1, lr
 801166e:	fb9c fcfe 	sdiv	ip, ip, lr
 8011672:	4401      	add	r1, r0
 8011674:	1a58      	subs	r0, r3, r1
 8011676:	9b02      	ldr	r3, [sp, #8]
 8011678:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 801167c:	4413      	add	r3, r2
 801167e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8011680:	448c      	add	ip, r1
 8011682:	eba3 030c 	sub.w	r3, r3, ip
 8011686:	435b      	muls	r3, r3
 8011688:	fb00 3300 	mla	r3, r0, r0, r3
 801168c:	42ab      	cmp	r3, r5
 801168e:	d208      	bcs.n	80116a2 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8011690:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8011692:	461d      	mov	r5, r3
 8011694:	9803      	ldr	r0, [sp, #12]
 8011696:	6001      	str	r1, [r0, #0]
 8011698:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801169a:	9805      	ldr	r0, [sp, #20]
 801169c:	8008      	strh	r0, [r1, #0]
 801169e:	992b      	ldr	r1, [sp, #172]	@ 0xac
 80116a0:	800f      	strh	r7, [r1, #0]
 80116a2:	4692      	mov	sl, r2
 80116a4:	f10b 0b01 	add.w	fp, fp, #1
 80116a8:	3408      	adds	r4, #8
 80116aa:	f1bb 0f04 	cmp.w	fp, #4
 80116ae:	d19d      	bne.n	80115ec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 80116b0:	9b00      	ldr	r3, [sp, #0]
 80116b2:	9c08      	ldr	r4, [sp, #32]
 80116b4:	444b      	add	r3, r9
 80116b6:	4544      	cmp	r4, r8
 80116b8:	9300      	str	r3, [sp, #0]
 80116ba:	d188      	bne.n	80115ce <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 80116bc:	b021      	add	sp, #132	@ 0x84
 80116be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80116c2:	f04f 35ff 	mov.w	r5, #4294967295
 80116c6:	e767      	b.n	8011598 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 80116c8:	24001a30 	.word	0x24001a30
 80116cc:	080274c0 	.word	0x080274c0

080116d0 <_ZN8touchgfx4RectaNERKS0_>:
 80116d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80116d4:	f9b1 7000 	ldrsh.w	r7, [r1]
 80116d8:	888c      	ldrh	r4, [r1, #4]
 80116da:	f9b0 9000 	ldrsh.w	r9, [r0]
 80116de:	443c      	add	r4, r7
 80116e0:	b2a4      	uxth	r4, r4
 80116e2:	fa0f f884 	sxth.w	r8, r4
 80116e6:	45c1      	cmp	r9, r8
 80116e8:	da2f      	bge.n	801174a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80116ea:	8882      	ldrh	r2, [r0, #4]
 80116ec:	444a      	add	r2, r9
 80116ee:	b292      	uxth	r2, r2
 80116f0:	fa0f fe82 	sxth.w	lr, r2
 80116f4:	4577      	cmp	r7, lr
 80116f6:	da28      	bge.n	801174a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80116f8:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 80116fc:	88cb      	ldrh	r3, [r1, #6]
 80116fe:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8011702:	442b      	add	r3, r5
 8011704:	b21b      	sxth	r3, r3
 8011706:	429e      	cmp	r6, r3
 8011708:	da1f      	bge.n	801174a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 801170a:	88c3      	ldrh	r3, [r0, #6]
 801170c:	4433      	add	r3, r6
 801170e:	b29b      	uxth	r3, r3
 8011710:	fa0f fc83 	sxth.w	ip, r3
 8011714:	4565      	cmp	r5, ip
 8011716:	da18      	bge.n	801174a <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8011718:	454f      	cmp	r7, r9
 801171a:	bfb8      	it	lt
 801171c:	464f      	movlt	r7, r9
 801171e:	42b5      	cmp	r5, r6
 8011720:	bfb8      	it	lt
 8011722:	4635      	movlt	r5, r6
 8011724:	45f0      	cmp	r8, lr
 8011726:	bfd8      	it	le
 8011728:	4622      	movle	r2, r4
 801172a:	1bd2      	subs	r2, r2, r7
 801172c:	8082      	strh	r2, [r0, #4]
 801172e:	884a      	ldrh	r2, [r1, #2]
 8011730:	88c9      	ldrh	r1, [r1, #6]
 8011732:	8007      	strh	r7, [r0, #0]
 8011734:	440a      	add	r2, r1
 8011736:	8045      	strh	r5, [r0, #2]
 8011738:	b292      	uxth	r2, r2
 801173a:	b211      	sxth	r1, r2
 801173c:	458c      	cmp	ip, r1
 801173e:	bfa8      	it	ge
 8011740:	4613      	movge	r3, r2
 8011742:	1b5b      	subs	r3, r3, r5
 8011744:	80c3      	strh	r3, [r0, #6]
 8011746:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801174a:	2300      	movs	r3, #0
 801174c:	8003      	strh	r3, [r0, #0]
 801174e:	8043      	strh	r3, [r0, #2]
 8011750:	8083      	strh	r3, [r0, #4]
 8011752:	80c3      	strh	r3, [r0, #6]
 8011754:	e7f7      	b.n	8011746 <_ZN8touchgfx4RectaNERKS0_+0x76>

08011756 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8011756:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801175a:	2b00      	cmp	r3, #0
 801175c:	dd06      	ble.n	801176c <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 801175e:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8011762:	2800      	cmp	r0, #0
 8011764:	bfcc      	ite	gt
 8011766:	2000      	movgt	r0, #0
 8011768:	2001      	movle	r0, #1
 801176a:	4770      	bx	lr
 801176c:	2001      	movs	r0, #1
 801176e:	4770      	bx	lr

08011770 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8011770:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011774:	2300      	movs	r3, #0
 8011776:	4604      	mov	r4, r0
 8011778:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 801177a:	8003      	strh	r3, [r0, #0]
 801177c:	8043      	strh	r3, [r0, #2]
 801177e:	8083      	strh	r3, [r0, #4]
 8011780:	80c3      	strh	r3, [r0, #6]
 8011782:	2d00      	cmp	r5, #0
 8011784:	d040      	beq.n	8011808 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8011786:	1d28      	adds	r0, r5, #4
 8011788:	f7ff ffe5 	bl	8011756 <_ZNK8touchgfx4Rect7isEmptyEv>
 801178c:	b988      	cbnz	r0, 80117b2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 801178e:	4620      	mov	r0, r4
 8011790:	f7ff ffe1 	bl	8011756 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011794:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8011798:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 801179c:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 80117a0:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 80117a4:	b138      	cbz	r0, 80117b6 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 80117a6:	8022      	strh	r2, [r4, #0]
 80117a8:	8063      	strh	r3, [r4, #2]
 80117aa:	f8a4 e004 	strh.w	lr, [r4, #4]
 80117ae:	f8a4 c006 	strh.w	ip, [r4, #6]
 80117b2:	69ad      	ldr	r5, [r5, #24]
 80117b4:	e7e5      	b.n	8011782 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 80117b6:	f9b4 0000 	ldrsh.w	r0, [r4]
 80117ba:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80117be:	4290      	cmp	r0, r2
 80117c0:	4607      	mov	r7, r0
 80117c2:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 80117c6:	460e      	mov	r6, r1
 80117c8:	bfa8      	it	ge
 80117ca:	4617      	movge	r7, r2
 80117cc:	4299      	cmp	r1, r3
 80117ce:	4472      	add	r2, lr
 80117d0:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 80117d4:	bfa8      	it	ge
 80117d6:	461e      	movge	r6, r3
 80117d8:	4440      	add	r0, r8
 80117da:	4471      	add	r1, lr
 80117dc:	4463      	add	r3, ip
 80117de:	b200      	sxth	r0, r0
 80117e0:	8027      	strh	r7, [r4, #0]
 80117e2:	b212      	sxth	r2, r2
 80117e4:	8066      	strh	r6, [r4, #2]
 80117e6:	b209      	sxth	r1, r1
 80117e8:	b21b      	sxth	r3, r3
 80117ea:	4290      	cmp	r0, r2
 80117ec:	bfac      	ite	ge
 80117ee:	ebc7 0200 	rsbge	r2, r7, r0
 80117f2:	ebc7 0202 	rsblt	r2, r7, r2
 80117f6:	4299      	cmp	r1, r3
 80117f8:	bfac      	ite	ge
 80117fa:	ebc6 0301 	rsbge	r3, r6, r1
 80117fe:	ebc6 0303 	rsblt	r3, r6, r3
 8011802:	80a2      	strh	r2, [r4, #4]
 8011804:	80e3      	strh	r3, [r4, #6]
 8011806:	e7d4      	b.n	80117b2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8011808:	4620      	mov	r0, r4
 801180a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801180e <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 801180e:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8011812:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 8011816:	b383      	cbz	r3, 801187a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8011818:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 801181a:	b374      	cbz	r4, 801187a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 801181c:	f9b1 5000 	ldrsh.w	r5, [r1]
 8011820:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8011824:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8011828:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 801182c:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8011830:	b303      	cbz	r3, 8011874 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8011832:	4668      	mov	r0, sp
 8011834:	1d21      	adds	r1, r4, #4
 8011836:	f8ad 5000 	strh.w	r5, [sp]
 801183a:	f8ad 6002 	strh.w	r6, [sp, #2]
 801183e:	f8ad 7004 	strh.w	r7, [sp, #4]
 8011842:	f8ad 8006 	strh.w	r8, [sp, #6]
 8011846:	f7ff ff43 	bl	80116d0 <_ZN8touchgfx4RectaNERKS0_>
 801184a:	4668      	mov	r0, sp
 801184c:	f7ff ff83 	bl	8011756 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011850:	b980      	cbnz	r0, 8011874 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8011852:	f8bd 3000 	ldrh.w	r3, [sp]
 8011856:	4669      	mov	r1, sp
 8011858:	88a2      	ldrh	r2, [r4, #4]
 801185a:	4620      	mov	r0, r4
 801185c:	1a9b      	subs	r3, r3, r2
 801185e:	88e2      	ldrh	r2, [r4, #6]
 8011860:	f8ad 3000 	strh.w	r3, [sp]
 8011864:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8011868:	1a9b      	subs	r3, r3, r2
 801186a:	f8ad 3002 	strh.w	r3, [sp, #2]
 801186e:	6823      	ldr	r3, [r4, #0]
 8011870:	689b      	ldr	r3, [r3, #8]
 8011872:	4798      	blx	r3
 8011874:	69a4      	ldr	r4, [r4, #24]
 8011876:	2c00      	cmp	r4, #0
 8011878:	d1d8      	bne.n	801182c <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 801187a:	b002      	add	sp, #8
 801187c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011880 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8011880:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8011882:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 8011886:	460d      	mov	r5, r1
 8011888:	4616      	mov	r6, r2
 801188a:	b323      	cbz	r3, 80118d6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 801188c:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 801188e:	b314      	cbz	r4, 80118d6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8011890:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8011894:	b1eb      	cbz	r3, 80118d2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8011896:	6828      	ldr	r0, [r5, #0]
 8011898:	466b      	mov	r3, sp
 801189a:	6869      	ldr	r1, [r5, #4]
 801189c:	c303      	stmia	r3!, {r0, r1}
 801189e:	4668      	mov	r0, sp
 80118a0:	1d21      	adds	r1, r4, #4
 80118a2:	f7ff ff15 	bl	80116d0 <_ZN8touchgfx4RectaNERKS0_>
 80118a6:	4668      	mov	r0, sp
 80118a8:	f7ff ff55 	bl	8011756 <_ZNK8touchgfx4Rect7isEmptyEv>
 80118ac:	b988      	cbnz	r0, 80118d2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80118ae:	f8bd 3000 	ldrh.w	r3, [sp]
 80118b2:	4669      	mov	r1, sp
 80118b4:	88a2      	ldrh	r2, [r4, #4]
 80118b6:	4620      	mov	r0, r4
 80118b8:	1a9b      	subs	r3, r3, r2
 80118ba:	88e2      	ldrh	r2, [r4, #6]
 80118bc:	f8ad 3000 	strh.w	r3, [sp]
 80118c0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80118c4:	1a9b      	subs	r3, r3, r2
 80118c6:	4632      	mov	r2, r6
 80118c8:	f8ad 3002 	strh.w	r3, [sp, #2]
 80118cc:	6823      	ldr	r3, [r4, #0]
 80118ce:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 80118d0:	4798      	blx	r3
 80118d2:	69a4      	ldr	r4, [r4, #24]
 80118d4:	e7db      	b.n	801188e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 80118d6:	b002      	add	sp, #8
 80118d8:	bd70      	pop	{r4, r5, r6, pc}

080118da <_ZN8touchgfx3HAL15InvalidateCacheEv>:
 80118da:	4770      	bx	lr

080118dc <_ZN8touchgfx3HAL10FlushCacheEv>:
 80118dc:	4770      	bx	lr

080118de <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 80118de:	6803      	ldr	r3, [r0, #0]
 80118e0:	b513      	push	{r0, r1, r4, lr}
 80118e2:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
 80118e6:	2300      	movs	r3, #0
 80118e8:	e9cd 3300 	strd	r3, r3, [sp]
 80118ec:	466b      	mov	r3, sp
 80118ee:	47a0      	blx	r4
 80118f0:	b002      	add	sp, #8
 80118f2:	bd10      	pop	{r4, pc}

080118f4 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 80118f4:	2301      	movs	r3, #1
 80118f6:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 80118fa:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 80118fe:	4770      	bx	lr

08011900 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8011900:	2301      	movs	r3, #1
 8011902:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 8011906:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 801190a:	4770      	bx	lr

0801190c <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 801190c:	6843      	ldr	r3, [r0, #4]
 801190e:	2201      	movs	r2, #1
 8011910:	725a      	strb	r2, [r3, #9]
 8011912:	6840      	ldr	r0, [r0, #4]
 8011914:	6803      	ldr	r3, [r0, #0]
 8011916:	691b      	ldr	r3, [r3, #16]
 8011918:	4718      	bx	r3

0801191a <_ZN8touchgfx3HAL8flushDMAEv>:
 801191a:	6840      	ldr	r0, [r0, #4]
 801191c:	6803      	ldr	r3, [r0, #0]
 801191e:	689b      	ldr	r3, [r3, #8]
 8011920:	4718      	bx	r3

08011922 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8011922:	b530      	push	{r4, r5, lr}
 8011924:	b08b      	sub	sp, #44	@ 0x2c
 8011926:	6804      	ldr	r4, [r0, #0]
 8011928:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 801192c:	9509      	str	r5, [sp, #36]	@ 0x24
 801192e:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 8011932:	9508      	str	r5, [sp, #32]
 8011934:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 8011938:	9507      	str	r5, [sp, #28]
 801193a:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 801193e:	9506      	str	r5, [sp, #24]
 8011940:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 8011944:	9505      	str	r5, [sp, #20]
 8011946:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 801194a:	9504      	str	r5, [sp, #16]
 801194c:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 8011950:	9503      	str	r5, [sp, #12]
 8011952:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 8011956:	9502      	str	r5, [sp, #8]
 8011958:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 801195c:	e9cd 3500 	strd	r3, r5, [sp]
 8011960:	4613      	mov	r3, r2
 8011962:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
 8011964:	2200      	movs	r2, #0
 8011966:	47a0      	blx	r4
 8011968:	b00b      	add	sp, #44	@ 0x2c
 801196a:	bd30      	pop	{r4, r5, pc}

0801196c <_ZN8touchgfx3HAL10beginFrameEv>:
 801196c:	4b04      	ldr	r3, [pc, #16]	@ (8011980 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 801196e:	781b      	ldrb	r3, [r3, #0]
 8011970:	b123      	cbz	r3, 801197c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8011972:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 8011976:	f080 0001 	eor.w	r0, r0, #1
 801197a:	4770      	bx	lr
 801197c:	2001      	movs	r0, #1
 801197e:	4770      	bx	lr
 8011980:	24001a2e 	.word	0x24001a2e

08011984 <_ZN8touchgfx3HAL8endFrameEv>:
 8011984:	b510      	push	{r4, lr}
 8011986:	4604      	mov	r4, r0
 8011988:	6840      	ldr	r0, [r0, #4]
 801198a:	6803      	ldr	r3, [r0, #0]
 801198c:	689b      	ldr	r3, [r3, #8]
 801198e:	4798      	blx	r3
 8011990:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 8011994:	b113      	cbz	r3, 801199c <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8011996:	2301      	movs	r3, #1
 8011998:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 801199c:	bd10      	pop	{r4, pc}

0801199e <_ZN8touchgfx3HAL10initializeEv>:
 801199e:	b510      	push	{r4, lr}
 80119a0:	4604      	mov	r4, r0
 80119a2:	f7fe f82b 	bl	800f9fc <_ZN8touchgfx10OSWrappers10initializeEv>
 80119a6:	f7fd fd7d 	bl	800f4a4 <_ZN8touchgfx4GPIO4initEv>
 80119aa:	6860      	ldr	r0, [r4, #4]
 80119ac:	6803      	ldr	r3, [r0, #0]
 80119ae:	68db      	ldr	r3, [r3, #12]
 80119b0:	4798      	blx	r3
 80119b2:	68e0      	ldr	r0, [r4, #12]
 80119b4:	6803      	ldr	r3, [r0, #0]
 80119b6:	689b      	ldr	r3, [r3, #8]
 80119b8:	4798      	blx	r3
 80119ba:	6823      	ldr	r3, [r4, #0]
 80119bc:	4620      	mov	r0, r4
 80119be:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80119c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80119c4:	4718      	bx	r3

080119c6 <_ZN8touchgfx3HAL9taskEntryEv>:
 80119c6:	b508      	push	{r3, lr}
 80119c8:	6803      	ldr	r3, [r0, #0]
 80119ca:	4604      	mov	r4, r0
 80119cc:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80119d0:	4798      	blx	r3
 80119d2:	6823      	ldr	r3, [r4, #0]
 80119d4:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 80119d6:	4620      	mov	r0, r4
 80119d8:	4798      	blx	r3
 80119da:	f7fe f883 	bl	800fae4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 80119de:	6823      	ldr	r3, [r4, #0]
 80119e0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80119e2:	e7f8      	b.n	80119d6 <_ZN8touchgfx3HAL9taskEntryEv+0x10>

080119e4 <_ZN8touchgfx3HAL4tickEv>:
 80119e4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80119e6:	6803      	ldr	r3, [r0, #0]
 80119e8:	4604      	mov	r4, r0
 80119ea:	4d5b      	ldr	r5, [pc, #364]	@ (8011b58 <_ZN8touchgfx3HAL4tickEv+0x174>)
 80119ec:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 80119f0:	4798      	blx	r3
 80119f2:	2800      	cmp	r0, #0
 80119f4:	f000 8095 	beq.w	8011b22 <_ZN8touchgfx3HAL4tickEv+0x13e>
 80119f8:	2001      	movs	r0, #1
 80119fa:	2600      	movs	r6, #0
 80119fc:	f7fd fd5a 	bl	800f4b4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8011a00:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 8011a04:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 8011a08:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 8011a0c:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 8011a10:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 8011a14:	b133      	cbz	r3, 8011a24 <_ZN8touchgfx3HAL4tickEv+0x40>
 8011a16:	6823      	ldr	r3, [r4, #0]
 8011a18:	4620      	mov	r0, r4
 8011a1a:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 8011a1e:	4798      	blx	r3
 8011a20:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 8011a24:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 8011a28:	2601      	movs	r6, #1
 8011a2a:	6862      	ldr	r2, [r4, #4]
 8011a2c:	f083 0301 	eor.w	r3, r3, #1
 8011a30:	702e      	strb	r6, [r5, #0]
 8011a32:	7253      	strb	r3, [r2, #9]
 8011a34:	f002 fed6 	bl	80147e4 <_ZN8touchgfx11Application11getInstanceEv>
 8011a38:	6803      	ldr	r3, [r0, #0]
 8011a3a:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8011a3c:	4798      	blx	r3
 8011a3e:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 8011a42:	b90b      	cbnz	r3, 8011a48 <_ZN8touchgfx3HAL4tickEv+0x64>
 8011a44:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 8011a48:	f002 fecc 	bl	80147e4 <_ZN8touchgfx11Application11getInstanceEv>
 8011a4c:	6803      	ldr	r3, [r0, #0]
 8011a4e:	695b      	ldr	r3, [r3, #20]
 8011a50:	4798      	blx	r3
 8011a52:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8011a54:	6803      	ldr	r3, [r0, #0]
 8011a56:	691b      	ldr	r3, [r3, #16]
 8011a58:	4798      	blx	r3
 8011a5a:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 8011a5e:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 8011a62:	3b01      	subs	r3, #1
 8011a64:	b2db      	uxtb	r3, r3
 8011a66:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 8011a6a:	b10a      	cbz	r2, 8011a70 <_ZN8touchgfx3HAL4tickEv+0x8c>
 8011a6c:	2b00      	cmp	r3, #0
 8011a6e:	d1eb      	bne.n	8011a48 <_ZN8touchgfx3HAL4tickEv+0x64>
 8011a70:	4a3a      	ldr	r2, [pc, #232]	@ (8011b5c <_ZN8touchgfx3HAL4tickEv+0x178>)
 8011a72:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 8011a76:	7813      	ldrb	r3, [r2, #0]
 8011a78:	3301      	adds	r3, #1
 8011a7a:	b25b      	sxtb	r3, r3
 8011a7c:	4299      	cmp	r1, r3
 8011a7e:	7013      	strb	r3, [r2, #0]
 8011a80:	dc10      	bgt.n	8011aa4 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8011a82:	2300      	movs	r3, #0
 8011a84:	68e0      	ldr	r0, [r4, #12]
 8011a86:	a902      	add	r1, sp, #8
 8011a88:	7013      	strb	r3, [r2, #0]
 8011a8a:	aa03      	add	r2, sp, #12
 8011a8c:	6803      	ldr	r3, [r0, #0]
 8011a8e:	68db      	ldr	r3, [r3, #12]
 8011a90:	4798      	blx	r3
 8011a92:	6823      	ldr	r3, [r4, #0]
 8011a94:	2800      	cmp	r0, #0
 8011a96:	d050      	beq.n	8011b3a <_ZN8touchgfx3HAL4tickEv+0x156>
 8011a98:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 8011a9c:	4620      	mov	r0, r4
 8011a9e:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8011aa2:	4798      	blx	r3
 8011aa4:	2300      	movs	r3, #0
 8011aa6:	6960      	ldr	r0, [r4, #20]
 8011aa8:	f88d 3007 	strb.w	r3, [sp, #7]
 8011aac:	b158      	cbz	r0, 8011ac6 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8011aae:	6803      	ldr	r3, [r0, #0]
 8011ab0:	f10d 0107 	add.w	r1, sp, #7
 8011ab4:	68db      	ldr	r3, [r3, #12]
 8011ab6:	4798      	blx	r3
 8011ab8:	b128      	cbz	r0, 8011ac6 <_ZN8touchgfx3HAL4tickEv+0xe2>
 8011aba:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8011abc:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8011ac0:	6803      	ldr	r3, [r0, #0]
 8011ac2:	68db      	ldr	r3, [r3, #12]
 8011ac4:	4798      	blx	r3
 8011ac6:	f104 001c 	add.w	r0, r4, #28
 8011aca:	f013 fdcb 	bl	8025664 <_ZN8touchgfx8Gestures4tickEv>
 8011ace:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 8011ad2:	b30b      	cbz	r3, 8011b18 <_ZN8touchgfx3HAL4tickEv+0x134>
 8011ad4:	6920      	ldr	r0, [r4, #16]
 8011ad6:	6803      	ldr	r3, [r0, #0]
 8011ad8:	691b      	ldr	r3, [r3, #16]
 8011ada:	4798      	blx	r3
 8011adc:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8011ade:	4606      	mov	r6, r0
 8011ae0:	b903      	cbnz	r3, 8011ae4 <_ZN8touchgfx3HAL4tickEv+0x100>
 8011ae2:	6760      	str	r0, [r4, #116]	@ 0x74
 8011ae4:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8011ae6:	4a1e      	ldr	r2, [pc, #120]	@ (8011b60 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8011ae8:	1af3      	subs	r3, r6, r3
 8011aea:	4293      	cmp	r3, r2
 8011aec:	d914      	bls.n	8011b18 <_ZN8touchgfx3HAL4tickEv+0x134>
 8011aee:	6920      	ldr	r0, [r4, #16]
 8011af0:	6803      	ldr	r3, [r0, #0]
 8011af2:	699b      	ldr	r3, [r3, #24]
 8011af4:	4798      	blx	r3
 8011af6:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8011af8:	2264      	movs	r2, #100	@ 0x64
 8011afa:	1af3      	subs	r3, r6, r3
 8011afc:	fbb3 f3f2 	udiv	r3, r3, r2
 8011b00:	fbb0 f0f3 	udiv	r0, r0, r3
 8011b04:	2800      	cmp	r0, #0
 8011b06:	dc1d      	bgt.n	8011b44 <_ZN8touchgfx3HAL4tickEv+0x160>
 8011b08:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 8011b0c:	6920      	ldr	r0, [r4, #16]
 8011b0e:	2100      	movs	r1, #0
 8011b10:	6803      	ldr	r3, [r0, #0]
 8011b12:	69db      	ldr	r3, [r3, #28]
 8011b14:	4798      	blx	r3
 8011b16:	6766      	str	r6, [r4, #116]	@ 0x74
 8011b18:	f002 fe64 	bl	80147e4 <_ZN8touchgfx11Application11getInstanceEv>
 8011b1c:	6803      	ldr	r3, [r0, #0]
 8011b1e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011b20:	4798      	blx	r3
 8011b22:	6823      	ldr	r3, [r4, #0]
 8011b24:	4620      	mov	r0, r4
 8011b26:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 8011b2a:	4798      	blx	r3
 8011b2c:	2001      	movs	r0, #1
 8011b2e:	f7fd fcdd 	bl	800f4ec <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8011b32:	2300      	movs	r3, #0
 8011b34:	702b      	strb	r3, [r5, #0]
 8011b36:	b004      	add	sp, #16
 8011b38:	bd70      	pop	{r4, r5, r6, pc}
 8011b3a:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 8011b3e:	4620      	mov	r0, r4
 8011b40:	4798      	blx	r3
 8011b42:	e7af      	b.n	8011aa4 <_ZN8touchgfx3HAL4tickEv+0xc0>
 8011b44:	2863      	cmp	r0, #99	@ 0x63
 8011b46:	bfcb      	itete	gt
 8011b48:	2300      	movgt	r3, #0
 8011b4a:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 8011b4e:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 8011b52:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 8011b56:	e7d9      	b.n	8011b0c <_ZN8touchgfx3HAL4tickEv+0x128>
 8011b58:	24001a34 	.word	0x24001a34
 8011b5c:	24001a35 	.word	0x24001a35
 8011b60:	05f5e100 	.word	0x05f5e100

08011b64 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8011b64:	b510      	push	{r4, lr}
 8011b66:	4604      	mov	r4, r0
 8011b68:	f7fd ff70 	bl	800fa4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8011b6c:	2200      	movs	r2, #0
 8011b6e:	6863      	ldr	r3, [r4, #4]
 8011b70:	729a      	strb	r2, [r3, #10]
 8011b72:	bd10      	pop	{r4, pc}

08011b74 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8011b74:	65c1      	str	r1, [r0, #92]	@ 0x5c
 8011b76:	301c      	adds	r0, #28
 8011b78:	f013 bd72 	b.w	8025660 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08011b7c <_ZN8touchgfx3HAL5touchEll>:
 8011b7c:	b530      	push	{r4, r5, lr}
 8011b7e:	b087      	sub	sp, #28
 8011b80:	4604      	mov	r4, r0
 8011b82:	a804      	add	r0, sp, #16
 8011b84:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8011b88:	f002 fc1e 	bl	80143c8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8011b8c:	9b04      	ldr	r3, [sp, #16]
 8011b8e:	a906      	add	r1, sp, #24
 8011b90:	a803      	add	r0, sp, #12
 8011b92:	f8ad 300c 	strh.w	r3, [sp, #12]
 8011b96:	9b05      	ldr	r3, [sp, #20]
 8011b98:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8011b9c:	f002 fc66 	bl	801446c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8011ba0:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 8011ba4:	f104 001c 	add.w	r0, r4, #28
 8011ba8:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8011bac:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8011bb0:	b189      	cbz	r1, 8011bd6 <_ZN8touchgfx3HAL5touchEll+0x5a>
 8011bb2:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 8011bb6:	9300      	str	r3, [sp, #0]
 8011bb8:	4613      	mov	r3, r2
 8011bba:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 8011bbe:	462a      	mov	r2, r5
 8011bc0:	f013 fd5e 	bl	8025680 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8011bc4:	b128      	cbz	r0, 8011bd2 <_ZN8touchgfx3HAL5touchEll+0x56>
 8011bc6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8011bca:	6623      	str	r3, [r4, #96]	@ 0x60
 8011bcc:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8011bd0:	6663      	str	r3, [r4, #100]	@ 0x64
 8011bd2:	b007      	add	sp, #28
 8011bd4:	bd30      	pop	{r4, r5, pc}
 8011bd6:	f013 fd93 	bl	8025700 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8011bda:	2301      	movs	r3, #1
 8011bdc:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 8011be0:	e7f1      	b.n	8011bc6 <_ZN8touchgfx3HAL5touchEll+0x4a>

08011be2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8011be2:	b510      	push	{r4, lr}
 8011be4:	2b00      	cmp	r3, #0
 8011be6:	d046      	beq.n	8011c76 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8011be8:	ea81 0002 	eor.w	r0, r1, r2
 8011bec:	07c4      	lsls	r4, r0, #31
 8011bee:	d508      	bpl.n	8011c02 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8011bf0:	440b      	add	r3, r1
 8011bf2:	3a01      	subs	r2, #1
 8011bf4:	428b      	cmp	r3, r1
 8011bf6:	d93e      	bls.n	8011c76 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8011bf8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8011bfc:	f801 0b01 	strb.w	r0, [r1], #1
 8011c00:	e7f8      	b.n	8011bf4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8011c02:	07d0      	lsls	r0, r2, #31
 8011c04:	bf42      	ittt	mi
 8011c06:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 8011c0a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8011c0e:	f801 0b01 	strbmi.w	r0, [r1], #1
 8011c12:	2b01      	cmp	r3, #1
 8011c14:	d911      	bls.n	8011c3a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8011c16:	ea81 0402 	eor.w	r4, r1, r2
 8011c1a:	4610      	mov	r0, r2
 8011c1c:	07a4      	lsls	r4, r4, #30
 8011c1e:	d022      	beq.n	8011c66 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 8011c20:	f023 0401 	bic.w	r4, r3, #1
 8011c24:	440c      	add	r4, r1
 8011c26:	428c      	cmp	r4, r1
 8011c28:	4602      	mov	r2, r0
 8011c2a:	d904      	bls.n	8011c36 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8011c2c:	8812      	ldrh	r2, [r2, #0]
 8011c2e:	3002      	adds	r0, #2
 8011c30:	f821 2b02 	strh.w	r2, [r1], #2
 8011c34:	e7f7      	b.n	8011c26 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8011c36:	f003 0301 	and.w	r3, r3, #1
 8011c3a:	f023 0003 	bic.w	r0, r3, #3
 8011c3e:	4408      	add	r0, r1
 8011c40:	4288      	cmp	r0, r1
 8011c42:	4614      	mov	r4, r2
 8011c44:	d904      	bls.n	8011c50 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8011c46:	6824      	ldr	r4, [r4, #0]
 8011c48:	3204      	adds	r2, #4
 8011c4a:	f841 4b04 	str.w	r4, [r1], #4
 8011c4e:	e7f7      	b.n	8011c40 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8011c50:	f003 0303 	and.w	r3, r3, #3
 8011c54:	3a01      	subs	r2, #1
 8011c56:	440b      	add	r3, r1
 8011c58:	428b      	cmp	r3, r1
 8011c5a:	d90c      	bls.n	8011c76 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8011c5c:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8011c60:	f801 0b01 	strb.w	r0, [r1], #1
 8011c64:	e7f8      	b.n	8011c58 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8011c66:	0790      	lsls	r0, r2, #30
 8011c68:	d0e7      	beq.n	8011c3a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8011c6a:	f832 0b02 	ldrh.w	r0, [r2], #2
 8011c6e:	3b02      	subs	r3, #2
 8011c70:	f821 0b02 	strh.w	r0, [r1], #2
 8011c74:	e7e1      	b.n	8011c3a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8011c76:	2001      	movs	r0, #1
 8011c78:	bd10      	pop	{r4, pc}

08011c7a <_ZN8touchgfx3HAL7noTouchEv>:
 8011c7a:	b510      	push	{r4, lr}
 8011c7c:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 8011c80:	4604      	mov	r4, r0
 8011c82:	b153      	cbz	r3, 8011c9a <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8011c84:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 8011c88:	2101      	movs	r1, #1
 8011c8a:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 8011c8e:	301c      	adds	r0, #28
 8011c90:	f013 fd36 	bl	8025700 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8011c94:	2300      	movs	r3, #0
 8011c96:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 8011c9a:	bd10      	pop	{r4, pc}

08011c9c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8011c9c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011ca0:	b085      	sub	sp, #20
 8011ca2:	4604      	mov	r4, r0
 8011ca4:	2000      	movs	r0, #0
 8011ca6:	4699      	mov	r9, r3
 8011ca8:	ad04      	add	r5, sp, #16
 8011caa:	460f      	mov	r7, r1
 8011cac:	4690      	mov	r8, r2
 8011cae:	f845 0d04 	str.w	r0, [r5, #-4]!
 8011cb2:	69a0      	ldr	r0, [r4, #24]
 8011cb4:	6806      	ldr	r6, [r0, #0]
 8011cb6:	9501      	str	r5, [sp, #4]
 8011cb8:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 8011cbc:	9500      	str	r5, [sp, #0]
 8011cbe:	6835      	ldr	r5, [r6, #0]
 8011cc0:	47a8      	blx	r5
 8011cc2:	4d10      	ldr	r5, [pc, #64]	@ (8011d04 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 8011cc4:	4606      	mov	r6, r0
 8011cc6:	f8a5 9000 	strh.w	r9, [r5]
 8011cca:	f7fa ff37 	bl	800cb3c <_ZN8touchgfx3HAL3lcdEv>
 8011cce:	6803      	ldr	r3, [r0, #0]
 8011cd0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011cd2:	4798      	blx	r3
 8011cd4:	b128      	cbz	r0, 8011ce2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 8011cd6:	2801      	cmp	r0, #1
 8011cd8:	d00b      	beq.n	8011cf2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 8011cda:	4630      	mov	r0, r6
 8011cdc:	b005      	add	sp, #20
 8011cde:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011ce2:	882b      	ldrh	r3, [r5, #0]
 8011ce4:	fb08 7203 	mla	r2, r8, r3, r7
 8011ce8:	9b03      	ldr	r3, [sp, #12]
 8011cea:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 8011cee:	63e3      	str	r3, [r4, #60]	@ 0x3c
 8011cf0:	e7f3      	b.n	8011cda <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8011cf2:	882a      	ldrh	r2, [r5, #0]
 8011cf4:	9b03      	ldr	r3, [sp, #12]
 8011cf6:	fb08 7202 	mla	r2, r8, r2, r7
 8011cfa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8011cfe:	1a9a      	subs	r2, r3, r2
 8011d00:	63e2      	str	r2, [r4, #60]	@ 0x3c
 8011d02:	e7ea      	b.n	8011cda <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 8011d04:	24001a2a 	.word	0x24001a2a

08011d08 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 8011d08:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011d0a:	b08b      	sub	sp, #44	@ 0x2c
 8011d0c:	4617      	mov	r7, r2
 8011d0e:	4604      	mov	r4, r0
 8011d10:	460e      	mov	r6, r1
 8011d12:	461d      	mov	r5, r3
 8011d14:	f7fa ff12 	bl	800cb3c <_ZN8touchgfx3HAL3lcdEv>
 8011d18:	6803      	ldr	r3, [r0, #0]
 8011d1a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011d1c:	4798      	blx	r3
 8011d1e:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 8011d22:	9007      	str	r0, [sp, #28]
 8011d24:	4631      	mov	r1, r6
 8011d26:	6822      	ldr	r2, [r4, #0]
 8011d28:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8011d2c:	4b0c      	ldr	r3, [pc, #48]	@ (8011d60 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8011d2e:	4620      	mov	r0, r4
 8011d30:	881b      	ldrh	r3, [r3, #0]
 8011d32:	9306      	str	r3, [sp, #24]
 8011d34:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8011d38:	9305      	str	r3, [sp, #20]
 8011d3a:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 8011d3e:	9304      	str	r3, [sp, #16]
 8011d40:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8011d44:	9303      	str	r3, [sp, #12]
 8011d46:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8011d4a:	9302      	str	r3, [sp, #8]
 8011d4c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8011d50:	e9cd 5300 	strd	r5, r3, [sp]
 8011d54:	463b      	mov	r3, r7
 8011d56:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
 8011d58:	2200      	movs	r2, #0
 8011d5a:	47a8      	blx	r5
 8011d5c:	b00b      	add	sp, #44	@ 0x2c
 8011d5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011d60:	24001a2a 	.word	0x24001a2a

08011d64 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8011d64:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011d68:	4698      	mov	r8, r3
 8011d6a:	6803      	ldr	r3, [r0, #0]
 8011d6c:	b08b      	sub	sp, #44	@ 0x2c
 8011d6e:	4617      	mov	r7, r2
 8011d70:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
 8011d72:	460e      	mov	r6, r1
 8011d74:	4b13      	ldr	r3, [pc, #76]	@ (8011dc4 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8011d76:	4604      	mov	r4, r0
 8011d78:	f8b3 9000 	ldrh.w	r9, [r3]
 8011d7c:	f7fa fede 	bl	800cb3c <_ZN8touchgfx3HAL3lcdEv>
 8011d80:	6803      	ldr	r3, [r0, #0]
 8011d82:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011d84:	4798      	blx	r3
 8011d86:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 8011d8a:	2200      	movs	r2, #0
 8011d8c:	4631      	mov	r1, r6
 8011d8e:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8011d92:	2302      	movs	r3, #2
 8011d94:	4620      	mov	r0, r4
 8011d96:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8011d9a:	2301      	movs	r3, #1
 8011d9c:	9305      	str	r3, [sp, #20]
 8011d9e:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 8011da2:	9304      	str	r3, [sp, #16]
 8011da4:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 8011da8:	9303      	str	r3, [sp, #12]
 8011daa:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 8011dae:	9302      	str	r3, [sp, #8]
 8011db0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8011db4:	e9cd 8300 	strd	r8, r3, [sp]
 8011db8:	463b      	mov	r3, r7
 8011dba:	47a8      	blx	r5
 8011dbc:	b00b      	add	sp, #44	@ 0x2c
 8011dbe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011dc2:	bf00      	nop
 8011dc4:	24001a2a 	.word	0x24001a2a

08011dc8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8011dc8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011dcc:	4698      	mov	r8, r3
 8011dce:	6803      	ldr	r3, [r0, #0]
 8011dd0:	b087      	sub	sp, #28
 8011dd2:	460e      	mov	r6, r1
 8011dd4:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
 8011dd6:	4617      	mov	r7, r2
 8011dd8:	4b0f      	ldr	r3, [pc, #60]	@ (8011e18 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8011dda:	4604      	mov	r4, r0
 8011ddc:	f8b3 9000 	ldrh.w	r9, [r3]
 8011de0:	f7fa feac 	bl	800cb3c <_ZN8touchgfx3HAL3lcdEv>
 8011de4:	6803      	ldr	r3, [r0, #0]
 8011de6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011de8:	4798      	blx	r3
 8011dea:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 8011dee:	463a      	mov	r2, r7
 8011df0:	4631      	mov	r1, r6
 8011df2:	f8cd 900c 	str.w	r9, [sp, #12]
 8011df6:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8011dfa:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 8011dfe:	4620      	mov	r0, r4
 8011e00:	9302      	str	r3, [sp, #8]
 8011e02:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 8011e06:	9301      	str	r3, [sp, #4]
 8011e08:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8011e0c:	9300      	str	r3, [sp, #0]
 8011e0e:	4643      	mov	r3, r8
 8011e10:	47a8      	blx	r5
 8011e12:	b007      	add	sp, #28
 8011e14:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011e18:	24001a2a 	.word	0x24001a2a

08011e1c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8011e1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011e20:	4604      	mov	r4, r0
 8011e22:	b08f      	sub	sp, #60	@ 0x3c
 8011e24:	4610      	mov	r0, r2
 8011e26:	460d      	mov	r5, r1
 8011e28:	4691      	mov	r9, r2
 8011e2a:	461e      	mov	r6, r3
 8011e2c:	f005 f954 	bl	80170d8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8011e30:	2800      	cmp	r0, #0
 8011e32:	f000 809d 	beq.w	8011f70 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8011e36:	6823      	ldr	r3, [r4, #0]
 8011e38:	4620      	mov	r0, r4
 8011e3a:	f8df b198 	ldr.w	fp, [pc, #408]	@ 8011fd4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8011e3e:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 8011e42:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8011e44:	4798      	blx	r3
 8011e46:	6823      	ldr	r3, [r4, #0]
 8011e48:	4620      	mov	r0, r4
 8011e4a:	f8df a18c 	ldr.w	sl, [pc, #396]	@ 8011fd8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8011e4e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011e50:	4798      	blx	r3
 8011e52:	f8bb 3000 	ldrh.w	r3, [fp]
 8011e56:	4f5c      	ldr	r7, [pc, #368]	@ (8011fc8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8011e58:	9301      	str	r3, [sp, #4]
 8011e5a:	f8ba 3000 	ldrh.w	r3, [sl]
 8011e5e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8011e62:	4640      	mov	r0, r8
 8011e64:	9302      	str	r3, [sp, #8]
 8011e66:	883b      	ldrh	r3, [r7, #0]
 8011e68:	9303      	str	r3, [sp, #12]
 8011e6a:	4b58      	ldr	r3, [pc, #352]	@ (8011fcc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011e6c:	881a      	ldrh	r2, [r3, #0]
 8011e6e:	9305      	str	r3, [sp, #20]
 8011e70:	9204      	str	r2, [sp, #16]
 8011e72:	f005 f9c5 	bl	8017200 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011e76:	8038      	strh	r0, [r7, #0]
 8011e78:	4640      	mov	r0, r8
 8011e7a:	f005 f9f5 	bl	8017268 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011e7e:	9b05      	ldr	r3, [sp, #20]
 8011e80:	b280      	uxth	r0, r0
 8011e82:	8018      	strh	r0, [r3, #0]
 8011e84:	4b52      	ldr	r3, [pc, #328]	@ (8011fd0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8011e86:	781b      	ldrb	r3, [r3, #0]
 8011e88:	2b00      	cmp	r3, #0
 8011e8a:	d174      	bne.n	8011f76 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8011e8c:	883b      	ldrh	r3, [r7, #0]
 8011e8e:	f8aa 0000 	strh.w	r0, [sl]
 8011e92:	f8ab 3000 	strh.w	r3, [fp]
 8011e96:	4648      	mov	r0, r9
 8011e98:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 8011e9c:	f005 f91c 	bl	80170d8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8011ea0:	2200      	movs	r2, #0
 8011ea2:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 8011ea6:	4611      	mov	r1, r2
 8011ea8:	4628      	mov	r0, r5
 8011eaa:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8011eae:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8011eb2:	f7fb fbc4 	bl	800d63e <_ZN8touchgfx8Drawable5setXYEss>
 8011eb6:	2301      	movs	r3, #1
 8011eb8:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 8011ebc:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 8011ec0:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8011ec4:	2b00      	cmp	r3, #0
 8011ec6:	dd5c      	ble.n	8011f82 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8011ec8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8011ecc:	2b00      	cmp	r3, #0
 8011ece:	dd58      	ble.n	8011f82 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8011ed0:	462a      	mov	r2, r5
 8011ed2:	ab0a      	add	r3, sp, #40	@ 0x28
 8011ed4:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8011ed8:	6851      	ldr	r1, [r2, #4]
 8011eda:	c303      	stmia	r3!, {r0, r1}
 8011edc:	4631      	mov	r1, r6
 8011ede:	a80a      	add	r0, sp, #40	@ 0x28
 8011ee0:	f7ff fbf6 	bl	80116d0 <_ZN8touchgfx4RectaNERKS0_>
 8011ee4:	4b38      	ldr	r3, [pc, #224]	@ (8011fc8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8011ee6:	2100      	movs	r1, #0
 8011ee8:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011eec:	4b37      	ldr	r3, [pc, #220]	@ (8011fcc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011eee:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8011ef2:	aa0a      	add	r2, sp, #40	@ 0x28
 8011ef4:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011ef8:	910c      	str	r1, [sp, #48]	@ 0x30
 8011efa:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8011efe:	ab08      	add	r3, sp, #32
 8011f00:	e892 0003 	ldmia.w	r2, {r0, r1}
 8011f04:	e883 0003 	stmia.w	r3, {r0, r1}
 8011f08:	4618      	mov	r0, r3
 8011f0a:	a90c      	add	r1, sp, #48	@ 0x30
 8011f0c:	f7ff fbe0 	bl	80116d0 <_ZN8touchgfx4RectaNERKS0_>
 8011f10:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 8011f12:	2b00      	cmp	r3, #0
 8011f14:	d13c      	bne.n	8011f90 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8011f16:	2000      	movs	r0, #0
 8011f18:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 8011f1c:	2600      	movs	r6, #0
 8011f1e:	696b      	ldr	r3, [r5, #20]
 8011f20:	a908      	add	r1, sp, #32
 8011f22:	682a      	ldr	r2, [r5, #0]
 8011f24:	4628      	mov	r0, r5
 8011f26:	9305      	str	r3, [sp, #20]
 8011f28:	616e      	str	r6, [r5, #20]
 8011f2a:	6892      	ldr	r2, [r2, #8]
 8011f2c:	4790      	blx	r2
 8011f2e:	9b05      	ldr	r3, [sp, #20]
 8011f30:	4652      	mov	r2, sl
 8011f32:	4649      	mov	r1, r9
 8011f34:	616b      	str	r3, [r5, #20]
 8011f36:	4628      	mov	r0, r5
 8011f38:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 8011f3c:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 8011f40:	f7fb fb7d 	bl	800d63e <_ZN8touchgfx8Drawable5setXYEss>
 8011f44:	9a01      	ldr	r2, [sp, #4]
 8011f46:	4b23      	ldr	r3, [pc, #140]	@ (8011fd4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8011f48:	4620      	mov	r0, r4
 8011f4a:	801a      	strh	r2, [r3, #0]
 8011f4c:	9a02      	ldr	r2, [sp, #8]
 8011f4e:	4b22      	ldr	r3, [pc, #136]	@ (8011fd8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8011f50:	801a      	strh	r2, [r3, #0]
 8011f52:	9a03      	ldr	r2, [sp, #12]
 8011f54:	4b1c      	ldr	r3, [pc, #112]	@ (8011fc8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8011f56:	801a      	strh	r2, [r3, #0]
 8011f58:	4b1c      	ldr	r3, [pc, #112]	@ (8011fcc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011f5a:	9a04      	ldr	r2, [sp, #16]
 8011f5c:	801a      	strh	r2, [r3, #0]
 8011f5e:	6823      	ldr	r3, [r4, #0]
 8011f60:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 8011f64:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8011f66:	4798      	blx	r3
 8011f68:	6823      	ldr	r3, [r4, #0]
 8011f6a:	4620      	mov	r0, r4
 8011f6c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011f6e:	4798      	blx	r3
 8011f70:	b00f      	add	sp, #60	@ 0x3c
 8011f72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011f76:	883b      	ldrh	r3, [r7, #0]
 8011f78:	f8ab 0000 	strh.w	r0, [fp]
 8011f7c:	f8aa 3000 	strh.w	r3, [sl]
 8011f80:	e789      	b.n	8011e96 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8011f82:	462a      	mov	r2, r5
 8011f84:	ab0a      	add	r3, sp, #40	@ 0x28
 8011f86:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8011f8a:	6851      	ldr	r1, [r2, #4]
 8011f8c:	c303      	stmia	r3!, {r0, r1}
 8011f8e:	e7a9      	b.n	8011ee4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8011f90:	a807      	add	r0, sp, #28
 8011f92:	f005 faab 	bl	80174ec <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011f96:	4606      	mov	r6, r0
 8011f98:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 8011f9a:	6803      	ldr	r3, [r0, #0]
 8011f9c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011f9e:	4798      	blx	r3
 8011fa0:	4286      	cmp	r6, r0
 8011fa2:	d1b8      	bne.n	8011f16 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8011fa4:	f7fa fdca 	bl	800cb3c <_ZN8touchgfx3HAL3lcdEv>
 8011fa8:	6803      	ldr	r3, [r0, #0]
 8011faa:	4606      	mov	r6, r0
 8011fac:	a807      	add	r0, sp, #28
 8011fae:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8011fb0:	9305      	str	r3, [sp, #20]
 8011fb2:	f005 fa9b 	bl	80174ec <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011fb6:	9b05      	ldr	r3, [sp, #20]
 8011fb8:	4601      	mov	r1, r0
 8011fba:	4630      	mov	r0, r6
 8011fbc:	4798      	blx	r3
 8011fbe:	f080 0001 	eor.w	r0, r0, #1
 8011fc2:	b2c0      	uxtb	r0, r0
 8011fc4:	e7a8      	b.n	8011f18 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8011fc6:	bf00      	nop
 8011fc8:	24001a24 	.word	0x24001a24
 8011fcc:	24001a26 	.word	0x24001a26
 8011fd0:	24001a28 	.word	0x24001a28
 8011fd4:	24001a2a 	.word	0x24001a2a
 8011fd8:	24001a2c 	.word	0x24001a2c

08011fdc <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8011fdc:	4b07      	ldr	r3, [pc, #28]	@ (8011ffc <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8011fde:	b510      	push	{r4, lr}
 8011fe0:	781b      	ldrb	r3, [r3, #0]
 8011fe2:	4604      	mov	r4, r0
 8011fe4:	b13b      	cbz	r3, 8011ff6 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8011fe6:	6803      	ldr	r3, [r0, #0]
 8011fe8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8011fea:	4798      	blx	r3
 8011fec:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 8011fee:	4283      	cmp	r3, r0
 8011ff0:	d101      	bne.n	8011ff6 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8011ff2:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 8011ff4:	bd10      	pop	{r4, pc}
 8011ff6:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 8011ff8:	e7fc      	b.n	8011ff4 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8011ffa:	bf00      	nop
 8011ffc:	24001a2e 	.word	0x24001a2e

08012000 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8012000:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012004:	461d      	mov	r5, r3
 8012006:	b08a      	sub	sp, #40	@ 0x28
 8012008:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 801200c:	4690      	mov	r8, r2
 801200e:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 8012012:	2400      	movs	r4, #0
 8012014:	4607      	mov	r7, r0
 8012016:	fb06 8505 	mla	r5, r6, r5, r8
 801201a:	9404      	str	r4, [sp, #16]
 801201c:	f88d 4020 	strb.w	r4, [sp, #32]
 8012020:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8012024:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8012028:	f8ad 3018 	strh.w	r3, [sp, #24]
 801202c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8012030:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012034:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8012038:	f8ad 301c 	strh.w	r3, [sp, #28]
 801203c:	f7ff ffce 	bl	8011fdc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012040:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8012044:	6878      	ldr	r0, [r7, #4]
 8012046:	f8ad 601e 	strh.w	r6, [sp, #30]
 801204a:	a901      	add	r1, sp, #4
 801204c:	9505      	str	r5, [sp, #20]
 801204e:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 8012052:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 8012056:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 801205a:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 801205e:	6803      	ldr	r3, [r0, #0]
 8012060:	685b      	ldr	r3, [r3, #4]
 8012062:	4798      	blx	r3
 8012064:	b00a      	add	sp, #40	@ 0x28
 8012066:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801206a <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 801206a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801206e:	b08b      	sub	sp, #44	@ 0x2c
 8012070:	2400      	movs	r4, #0
 8012072:	4691      	mov	r9, r2
 8012074:	461d      	mov	r5, r3
 8012076:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 801207a:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 801207e:	4688      	mov	r8, r1
 8012080:	4607      	mov	r7, r0
 8012082:	9404      	str	r4, [sp, #16]
 8012084:	fb06 9505 	mla	r5, r6, r5, r9
 8012088:	e9cd 3401 	strd	r3, r4, [sp, #4]
 801208c:	f7ff ffa6 	bl	8011fdc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012090:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8012094:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8012098:	6878      	ldr	r0, [r7, #4]
 801209a:	f8ad 3018 	strh.w	r3, [sp, #24]
 801209e:	a901      	add	r1, sp, #4
 80120a0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 80120a4:	9505      	str	r5, [sp, #20]
 80120a6:	f8ad 301a 	strh.w	r3, [sp, #26]
 80120aa:	f8ad 401c 	strh.w	r4, [sp, #28]
 80120ae:	f8ad 601e 	strh.w	r6, [sp, #30]
 80120b2:	f8cd 8010 	str.w	r8, [sp, #16]
 80120b6:	f8ad 4020 	strh.w	r4, [sp, #32]
 80120ba:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 80120be:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 80120c2:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 80120c6:	6803      	ldr	r3, [r0, #0]
 80120c8:	685b      	ldr	r3, [r3, #4]
 80120ca:	4798      	blx	r3
 80120cc:	b00b      	add	sp, #44	@ 0x2c
 80120ce:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

080120d4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 80120d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80120d8:	b08a      	sub	sp, #40	@ 0x28
 80120da:	4698      	mov	r8, r3
 80120dc:	2300      	movs	r3, #0
 80120de:	4606      	mov	r6, r0
 80120e0:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 80120e4:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 80120e8:	2d0b      	cmp	r5, #11
 80120ea:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 80120ee:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 80120f2:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 80120f6:	9304      	str	r3, [sp, #16]
 80120f8:	d137      	bne.n	801216a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x96>
 80120fa:	2380      	movs	r3, #128	@ 0x80
 80120fc:	f88d 0020 	strb.w	r0, [sp, #32]
 8012100:	4630      	mov	r0, r6
 8012102:	9203      	str	r2, [sp, #12]
 8012104:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8012108:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 801210c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012110:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8012114:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012118:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 801211c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012120:	f7ff ff5c 	bl	8011fdc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012124:	2c0b      	cmp	r4, #11
 8012126:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 801212a:	f8ad 701e 	strh.w	r7, [sp, #30]
 801212e:	bf94      	ite	ls
 8012130:	4b19      	ldrls	r3, [pc, #100]	@ (8012198 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8012132:	2100      	movhi	r1, #0
 8012134:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 8012138:	bf98      	it	ls
 801213a:	5d19      	ldrbls	r1, [r3, r4]
 801213c:	fb02 8307 	mla	r3, r2, r7, r8
 8012140:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 8012144:	10c9      	asrs	r1, r1, #3
 8012146:	fb01 0003 	mla	r0, r1, r3, r0
 801214a:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 801214e:	a901      	add	r1, sp, #4
 8012150:	9005      	str	r0, [sp, #20]
 8012152:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 8012156:	2300      	movs	r3, #0
 8012158:	6870      	ldr	r0, [r6, #4]
 801215a:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 801215e:	6803      	ldr	r3, [r0, #0]
 8012160:	685b      	ldr	r3, [r3, #4]
 8012162:	4798      	blx	r3
 8012164:	b00a      	add	sp, #40	@ 0x28
 8012166:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801216a:	2d02      	cmp	r5, #2
 801216c:	d109      	bne.n	8012182 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xae>
 801216e:	28ff      	cmp	r0, #255	@ 0xff
 8012170:	d105      	bne.n	801217e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xaa>
 8012172:	f1bc 0f00 	cmp.w	ip, #0
 8012176:	bf14      	ite	ne
 8012178:	2340      	movne	r3, #64	@ 0x40
 801217a:	2320      	moveq	r3, #32
 801217c:	e7be      	b.n	80120fc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 801217e:	2340      	movs	r3, #64	@ 0x40
 8012180:	e7bc      	b.n	80120fc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8012182:	28ff      	cmp	r0, #255	@ 0xff
 8012184:	d105      	bne.n	8012192 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xbe>
 8012186:	f1bc 0f00 	cmp.w	ip, #0
 801218a:	bf14      	ite	ne
 801218c:	2304      	movne	r3, #4
 801218e:	2301      	moveq	r3, #1
 8012190:	e7b4      	b.n	80120fc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8012192:	2304      	movs	r3, #4
 8012194:	e7b2      	b.n	80120fc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8012196:	bf00      	nop
 8012198:	08028274 	.word	0x08028274

0801219c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 801219c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80121a0:	b08b      	sub	sp, #44	@ 0x2c
 80121a2:	461d      	mov	r5, r3
 80121a4:	2400      	movs	r4, #0
 80121a6:	4688      	mov	r8, r1
 80121a8:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 80121ac:	4693      	mov	fp, r2
 80121ae:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 80121b2:	4607      	mov	r7, r0
 80121b4:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 80121b8:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 80121bc:	9404      	str	r4, [sp, #16]
 80121be:	bf14      	ite	ne
 80121c0:	2308      	movne	r3, #8
 80121c2:	2302      	moveq	r3, #2
 80121c4:	fb05 b50a 	mla	r5, r5, sl, fp
 80121c8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 80121cc:	f7ff ff06 	bl	8011fdc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80121d0:	2e0b      	cmp	r6, #11
 80121d2:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80121d6:	a901      	add	r1, sp, #4
 80121d8:	bf98      	it	ls
 80121da:	4b13      	ldrls	r3, [pc, #76]	@ (8012228 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 80121dc:	f8ad a01e 	strh.w	sl, [sp, #30]
 80121e0:	bf98      	it	ls
 80121e2:	5d9c      	ldrbls	r4, [r3, r6]
 80121e4:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 80121e8:	10e4      	asrs	r4, r4, #3
 80121ea:	f8cd 8010 	str.w	r8, [sp, #16]
 80121ee:	f8ad 3018 	strh.w	r3, [sp, #24]
 80121f2:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 80121f6:	fb04 0405 	mla	r4, r4, r5, r0
 80121fa:	6878      	ldr	r0, [r7, #4]
 80121fc:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012200:	2300      	movs	r3, #0
 8012202:	9405      	str	r4, [sp, #20]
 8012204:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012208:	f88d 9020 	strb.w	r9, [sp, #32]
 801220c:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 8012210:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 8012214:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 8012218:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 801221c:	6803      	ldr	r3, [r0, #0]
 801221e:	685b      	ldr	r3, [r3, #4]
 8012220:	4798      	blx	r3
 8012222:	b00b      	add	sp, #44	@ 0x2c
 8012224:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012228:	08028274 	.word	0x08028274

0801222c <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 801222c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012230:	461e      	mov	r6, r3
 8012232:	4b0a      	ldr	r3, [pc, #40]	@ (801225c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8012234:	460f      	mov	r7, r1
 8012236:	4690      	mov	r8, r2
 8012238:	881d      	ldrh	r5, [r3, #0]
 801223a:	f7fa fc7f 	bl	800cb3c <_ZN8touchgfx3HAL3lcdEv>
 801223e:	6803      	ldr	r3, [r0, #0]
 8012240:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012242:	4798      	blx	r3
 8012244:	280b      	cmp	r0, #11
 8012246:	bf96      	itet	ls
 8012248:	4b05      	ldrls	r3, [pc, #20]	@ (8012260 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 801224a:	2400      	movhi	r4, #0
 801224c:	5c1c      	ldrbls	r4, [r3, r0]
 801224e:	fb08 7005 	mla	r0, r8, r5, r7
 8012252:	10e4      	asrs	r4, r4, #3
 8012254:	fb04 6000 	mla	r0, r4, r0, r6
 8012258:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801225c:	24001a2a 	.word	0x24001a2a
 8012260:	08028274 	.word	0x08028274

08012264 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8012264:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012266:	b08b      	sub	sp, #44	@ 0x2c
 8012268:	461f      	mov	r7, r3
 801226a:	4604      	mov	r4, r0
 801226c:	4616      	mov	r6, r2
 801226e:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8012272:	2500      	movs	r5, #0
 8012274:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8012278:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 801227c:	9504      	str	r5, [sp, #16]
 801227e:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012282:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8012286:	f8ad 301a 	strh.w	r3, [sp, #26]
 801228a:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801228e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012292:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8012296:	f88d 3020 	strb.w	r3, [sp, #32]
 801229a:	f7ff fe9f 	bl	8011fdc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801229e:	463a      	mov	r2, r7
 80122a0:	4631      	mov	r1, r6
 80122a2:	4603      	mov	r3, r0
 80122a4:	4620      	mov	r0, r4
 80122a6:	f7ff ffc1 	bl	801222c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80122aa:	4b0e      	ldr	r3, [pc, #56]	@ (80122e4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 80122ac:	9005      	str	r0, [sp, #20]
 80122ae:	881b      	ldrh	r3, [r3, #0]
 80122b0:	f8ad 301e 	strh.w	r3, [sp, #30]
 80122b4:	f7fa fc42 	bl	800cb3c <_ZN8touchgfx3HAL3lcdEv>
 80122b8:	6803      	ldr	r3, [r0, #0]
 80122ba:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80122bc:	4798      	blx	r3
 80122be:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80122c0:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 80122c4:	a901      	add	r1, sp, #4
 80122c6:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 80122ca:	9304      	str	r3, [sp, #16]
 80122cc:	6860      	ldr	r0, [r4, #4]
 80122ce:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 80122d2:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 80122d6:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 80122da:	6803      	ldr	r3, [r0, #0]
 80122dc:	685b      	ldr	r3, [r3, #4]
 80122de:	4798      	blx	r3
 80122e0:	b00b      	add	sp, #44	@ 0x2c
 80122e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80122e4:	24001a2a 	.word	0x24001a2a

080122e8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 80122e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80122ea:	b08d      	sub	sp, #52	@ 0x34
 80122ec:	2501      	movs	r5, #1
 80122ee:	4604      	mov	r4, r0
 80122f0:	466b      	mov	r3, sp
 80122f2:	9503      	str	r5, [sp, #12]
 80122f4:	e883 0006 	stmia.w	r3, {r1, r2}
 80122f8:	2300      	movs	r3, #0
 80122fa:	f8bd 6000 	ldrh.w	r6, [sp]
 80122fe:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8012302:	9306      	str	r3, [sp, #24]
 8012304:	6803      	ldr	r3, [r0, #0]
 8012306:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8012308:	4798      	blx	r3
 801230a:	463a      	mov	r2, r7
 801230c:	4631      	mov	r1, r6
 801230e:	4603      	mov	r3, r0
 8012310:	4620      	mov	r0, r4
 8012312:	f7ff ff8b 	bl	801222c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8012316:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 8012318:	9004      	str	r0, [sp, #16]
 801231a:	9307      	str	r3, [sp, #28]
 801231c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8012320:	f8ad 3020 	strh.w	r3, [sp, #32]
 8012324:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8012328:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 801232c:	4b0e      	ldr	r3, [pc, #56]	@ (8012368 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 801232e:	881b      	ldrh	r3, [r3, #0]
 8012330:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 8012334:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 8012338:	f7fa fc00 	bl	800cb3c <_ZN8touchgfx3HAL3lcdEv>
 801233c:	6803      	ldr	r3, [r0, #0]
 801233e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012340:	4798      	blx	r3
 8012342:	23ff      	movs	r3, #255	@ 0xff
 8012344:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 8012348:	a903      	add	r1, sp, #12
 801234a:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 801234e:	6860      	ldr	r0, [r4, #4]
 8012350:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 8012354:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 8012358:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 801235c:	6803      	ldr	r3, [r0, #0]
 801235e:	685b      	ldr	r3, [r3, #4]
 8012360:	4798      	blx	r3
 8012362:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 8012364:	b00d      	add	sp, #52	@ 0x34
 8012366:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012368:	24001a2a 	.word	0x24001a2a

0801236c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 801236c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012370:	b08c      	sub	sp, #48	@ 0x30
 8012372:	461e      	mov	r6, r3
 8012374:	2300      	movs	r3, #0
 8012376:	4604      	mov	r4, r0
 8012378:	466d      	mov	r5, sp
 801237a:	9306      	str	r3, [sp, #24]
 801237c:	6803      	ldr	r3, [r0, #0]
 801237e:	e885 0006 	stmia.w	r5, {r1, r2}
 8012382:	2501      	movs	r5, #1
 8012384:	f8bd 7000 	ldrh.w	r7, [sp]
 8012388:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 801238c:	9503      	str	r5, [sp, #12]
 801238e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8012390:	4798      	blx	r3
 8012392:	4642      	mov	r2, r8
 8012394:	4639      	mov	r1, r7
 8012396:	4603      	mov	r3, r0
 8012398:	4620      	mov	r0, r4
 801239a:	f7ff ff47 	bl	801222c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801239e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80123a2:	9004      	str	r0, [sp, #16]
 80123a4:	f8ad 3020 	strh.w	r3, [sp, #32]
 80123a8:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80123ac:	9607      	str	r6, [sp, #28]
 80123ae:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 80123b2:	4b10      	ldr	r3, [pc, #64]	@ (80123f4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 80123b4:	881b      	ldrh	r3, [r3, #0]
 80123b6:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 80123ba:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 80123bc:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 80123c0:	f7fa fbbc 	bl	800cb3c <_ZN8touchgfx3HAL3lcdEv>
 80123c4:	6803      	ldr	r3, [r0, #0]
 80123c6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80123c8:	4798      	blx	r3
 80123ca:	23ff      	movs	r3, #255	@ 0xff
 80123cc:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 80123d0:	a903      	add	r1, sp, #12
 80123d2:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 80123d6:	6860      	ldr	r0, [r4, #4]
 80123d8:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 80123dc:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 80123e0:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 80123e4:	6803      	ldr	r3, [r0, #0]
 80123e6:	685b      	ldr	r3, [r3, #4]
 80123e8:	4798      	blx	r3
 80123ea:	4630      	mov	r0, r6
 80123ec:	b00c      	add	sp, #48	@ 0x30
 80123ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80123f2:	bf00      	nop
 80123f4:	24001a2a 	.word	0x24001a2a

080123f8 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 80123f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80123fa:	b085      	sub	sp, #20
 80123fc:	4605      	mov	r5, r0
 80123fe:	ac02      	add	r4, sp, #8
 8012400:	e884 0006 	stmia.w	r4, {r1, r2}
 8012404:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 8012408:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 801240c:	f7ff fde6 	bl	8011fdc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8012410:	4631      	mov	r1, r6
 8012412:	4603      	mov	r3, r0
 8012414:	463a      	mov	r2, r7
 8012416:	4628      	mov	r0, r5
 8012418:	f7ff ff08 	bl	801222c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801241c:	4a05      	ldr	r2, [pc, #20]	@ (8012434 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 801241e:	682b      	ldr	r3, [r5, #0]
 8012420:	8812      	ldrh	r2, [r2, #0]
 8012422:	9200      	str	r2, [sp, #0]
 8012424:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 8012426:	4603      	mov	r3, r0
 8012428:	4628      	mov	r0, r5
 801242a:	e894 0006 	ldmia.w	r4, {r1, r2}
 801242e:	47b0      	blx	r6
 8012430:	b005      	add	sp, #20
 8012432:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8012434:	24001a2a 	.word	0x24001a2a

08012438 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8012438:	b570      	push	{r4, r5, r6, lr}
 801243a:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 801243e:	4604      	mov	r4, r0
 8012440:	b19b      	cbz	r3, 801246a <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8012442:	2002      	movs	r0, #2
 8012444:	f7fd f86e 	bl	800f524 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8012448:	2300      	movs	r3, #0
 801244a:	4620      	mov	r0, r4
 801244c:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 8012450:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 8012454:	6823      	ldr	r3, [r4, #0]
 8012456:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
 801245a:	f7ff fdbf 	bl	8011fdc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801245e:	4601      	mov	r1, r0
 8012460:	4620      	mov	r0, r4
 8012462:	462b      	mov	r3, r5
 8012464:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012468:	4718      	bx	r3
 801246a:	bd70      	pop	{r4, r5, r6, pc}

0801246c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 801246c:	b538      	push	{r3, r4, r5, lr}
 801246e:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 8012472:	4604      	mov	r4, r0
 8012474:	460d      	mov	r5, r1
 8012476:	428b      	cmp	r3, r1
 8012478:	d006      	beq.n	8012488 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 801247a:	6803      	ldr	r3, [r0, #0]
 801247c:	b929      	cbnz	r1, 801248a <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 801247e:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 8012482:	4798      	blx	r3
 8012484:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 8012488:	bd38      	pop	{r3, r4, r5, pc}
 801248a:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 801248e:	e7f8      	b.n	8012482 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08012490 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8012490:	4b0d      	ldr	r3, [pc, #52]	@ (80124c8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8012492:	b510      	push	{r4, lr}
 8012494:	781b      	ldrb	r3, [r3, #0]
 8012496:	4604      	mov	r4, r0
 8012498:	b95b      	cbnz	r3, 80124b2 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801249a:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 801249e:	2b02      	cmp	r3, #2
 80124a0:	d007      	beq.n	80124b2 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80124a2:	6840      	ldr	r0, [r0, #4]
 80124a4:	f000 f90e 	bl	80126c4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 80124a8:	b118      	cbz	r0, 80124b2 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 80124aa:	6862      	ldr	r2, [r4, #4]
 80124ac:	7a53      	ldrb	r3, [r2, #9]
 80124ae:	2b00      	cmp	r3, #0
 80124b0:	d0fc      	beq.n	80124ac <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 80124b2:	f7fd fab5 	bl	800fa20 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 80124b6:	4620      	mov	r0, r4
 80124b8:	2100      	movs	r1, #0
 80124ba:	f7ff ffd7 	bl	801246c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80124be:	4620      	mov	r0, r4
 80124c0:	f7ff fd8c 	bl	8011fdc <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80124c4:	bd10      	pop	{r4, pc}
 80124c6:	bf00      	nop
 80124c8:	24001a2e 	.word	0x24001a2e

080124cc <_ZN8touchgfx13DMA_Interface10initializeEv>:
 80124cc:	4770      	bx	lr

080124ce <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
 80124ce:	2000      	movs	r0, #0
 80124d0:	4770      	bx	lr

080124d2 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 80124d2:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 80124d6:	1a13      	subs	r3, r2, r0
 80124d8:	4258      	negs	r0, r3
 80124da:	4158      	adcs	r0, r3
 80124dc:	4770      	bx	lr

080124de <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 80124de:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 80124e2:	1a9b      	subs	r3, r3, r2
 80124e4:	2b00      	cmp	r3, #0
 80124e6:	bfdc      	itt	le
 80124e8:	6882      	ldrle	r2, [r0, #8]
 80124ea:	189b      	addle	r3, r3, r2
 80124ec:	2b01      	cmp	r3, #1
 80124ee:	bfcc      	ite	gt
 80124f0:	2000      	movgt	r0, #0
 80124f2:	2001      	movle	r0, #1
 80124f4:	4770      	bx	lr

080124f6 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 80124f6:	6902      	ldr	r2, [r0, #16]
 80124f8:	6843      	ldr	r3, [r0, #4]
 80124fa:	2024      	movs	r0, #36	@ 0x24
 80124fc:	fb00 3002 	mla	r0, r0, r2, r3
 8012500:	4770      	bx	lr

08012502 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8012502:	6803      	ldr	r3, [r0, #0]
 8012504:	691b      	ldr	r3, [r3, #16]
 8012506:	4718      	bx	r3

08012508 <_ZN8touchgfx13DMA_Interface7executeEv>:
 8012508:	2301      	movs	r3, #1
 801250a:	b570      	push	{r4, r5, r6, lr}
 801250c:	7203      	strb	r3, [r0, #8]
 801250e:	4604      	mov	r4, r0
 8012510:	6840      	ldr	r0, [r0, #4]
 8012512:	6803      	ldr	r3, [r0, #0]
 8012514:	699b      	ldr	r3, [r3, #24]
 8012516:	4798      	blx	r3
 8012518:	6803      	ldr	r3, [r0, #0]
 801251a:	4605      	mov	r5, r0
 801251c:	2b40      	cmp	r3, #64	@ 0x40
 801251e:	d00c      	beq.n	801253a <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8012520:	d810      	bhi.n	8012544 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8012522:	2b04      	cmp	r3, #4
 8012524:	d01d      	beq.n	8012562 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 8012526:	d804      	bhi.n	8012532 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 8012528:	2b01      	cmp	r3, #1
 801252a:	d006      	beq.n	801253a <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801252c:	2b02      	cmp	r3, #2
 801252e:	d02c      	beq.n	801258a <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8012530:	bd70      	pop	{r4, r5, r6, pc}
 8012532:	2b08      	cmp	r3, #8
 8012534:	d01d      	beq.n	8012572 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 8012536:	2b20      	cmp	r3, #32
 8012538:	d1fa      	bne.n	8012530 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 801253a:	6823      	ldr	r3, [r4, #0]
 801253c:	4620      	mov	r0, r4
 801253e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8012540:	4798      	blx	r3
 8012542:	e013      	b.n	801256c <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8012544:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8012548:	d0f7      	beq.n	801253a <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801254a:	d804      	bhi.n	8012556 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 801254c:	2b80      	cmp	r3, #128	@ 0x80
 801254e:	d0f4      	beq.n	801253a <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8012550:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8012554:	e7f0      	b.n	8012538 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8012556:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801255a:	d0ee      	beq.n	801253a <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 801255c:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8012560:	e7e5      	b.n	801252e <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8012562:	6823      	ldr	r3, [r4, #0]
 8012564:	7f01      	ldrb	r1, [r0, #28]
 8012566:	4620      	mov	r0, r4
 8012568:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801256a:	4798      	blx	r3
 801256c:	6823      	ldr	r3, [r4, #0]
 801256e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8012570:	e006      	b.n	8012580 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8012572:	6823      	ldr	r3, [r4, #0]
 8012574:	7f01      	ldrb	r1, [r0, #28]
 8012576:	4620      	mov	r0, r4
 8012578:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801257a:	4798      	blx	r3
 801257c:	6823      	ldr	r3, [r4, #0]
 801257e:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8012580:	4629      	mov	r1, r5
 8012582:	4620      	mov	r0, r4
 8012584:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012588:	4718      	bx	r3
 801258a:	6823      	ldr	r3, [r4, #0]
 801258c:	4620      	mov	r0, r4
 801258e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8012590:	4798      	blx	r3
 8012592:	e7f3      	b.n	801257c <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08012594 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8012594:	4770      	bx	lr

08012596 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8012596:	4770      	bx	lr

08012598 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8012598:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 801259c:	b510      	push	{r4, lr}
 801259e:	1ad2      	subs	r2, r2, r3
 80125a0:	2a00      	cmp	r2, #0
 80125a2:	bfdc      	itt	le
 80125a4:	6884      	ldrle	r4, [r0, #8]
 80125a6:	1912      	addle	r2, r2, r4
 80125a8:	2a01      	cmp	r2, #1
 80125aa:	dd16      	ble.n	80125da <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 80125ac:	6842      	ldr	r2, [r0, #4]
 80125ae:	2424      	movs	r4, #36	@ 0x24
 80125b0:	fb04 2303 	mla	r3, r4, r3, r2
 80125b4:	f101 0220 	add.w	r2, r1, #32
 80125b8:	f851 4b04 	ldr.w	r4, [r1], #4
 80125bc:	4291      	cmp	r1, r2
 80125be:	f843 4b04 	str.w	r4, [r3], #4
 80125c2:	d1f9      	bne.n	80125b8 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 80125c4:	780a      	ldrb	r2, [r1, #0]
 80125c6:	701a      	strb	r2, [r3, #0]
 80125c8:	68c3      	ldr	r3, [r0, #12]
 80125ca:	6882      	ldr	r2, [r0, #8]
 80125cc:	f3bf 8f5b 	dmb	ish
 80125d0:	3301      	adds	r3, #1
 80125d2:	429a      	cmp	r2, r3
 80125d4:	bfd8      	it	le
 80125d6:	1a9b      	suble	r3, r3, r2
 80125d8:	60c3      	str	r3, [r0, #12]
 80125da:	bd10      	pop	{r4, pc}

080125dc <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 80125dc:	6903      	ldr	r3, [r0, #16]
 80125de:	6882      	ldr	r2, [r0, #8]
 80125e0:	f3bf 8f5b 	dmb	ish
 80125e4:	3301      	adds	r3, #1
 80125e6:	429a      	cmp	r2, r3
 80125e8:	bfd8      	it	le
 80125ea:	1a9b      	suble	r3, r3, r2
 80125ec:	6103      	str	r3, [r0, #16]
 80125ee:	4770      	bx	lr

080125f0 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 80125f0:	b570      	push	{r4, r5, r6, lr}
 80125f2:	4604      	mov	r4, r0
 80125f4:	460e      	mov	r6, r1
 80125f6:	6860      	ldr	r0, [r4, #4]
 80125f8:	6803      	ldr	r3, [r0, #0]
 80125fa:	685b      	ldr	r3, [r3, #4]
 80125fc:	4798      	blx	r3
 80125fe:	2800      	cmp	r0, #0
 8012600:	d1f9      	bne.n	80125f6 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8012602:	4d0d      	ldr	r5, [pc, #52]	@ (8012638 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8012604:	6828      	ldr	r0, [r5, #0]
 8012606:	6803      	ldr	r3, [r0, #0]
 8012608:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 801260a:	4798      	blx	r3
 801260c:	f7fd fa2a 	bl	800fa64 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8012610:	6828      	ldr	r0, [r5, #0]
 8012612:	2101      	movs	r1, #1
 8012614:	f7ff ff2a 	bl	801246c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8012618:	6860      	ldr	r0, [r4, #4]
 801261a:	4631      	mov	r1, r6
 801261c:	6803      	ldr	r3, [r0, #0]
 801261e:	689b      	ldr	r3, [r3, #8]
 8012620:	4798      	blx	r3
 8012622:	6823      	ldr	r3, [r4, #0]
 8012624:	4620      	mov	r0, r4
 8012626:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012628:	4798      	blx	r3
 801262a:	6828      	ldr	r0, [r5, #0]
 801262c:	6803      	ldr	r3, [r0, #0]
 801262e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012632:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8012634:	4718      	bx	r3
 8012636:	bf00      	nop
 8012638:	24001a30 	.word	0x24001a30

0801263c <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 801263c:	b508      	push	{r3, lr}
 801263e:	f7fd f9ef 	bl	800fa20 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8012642:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8012646:	f7fd ba01 	b.w	800fa4c <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0801264a <_ZN8touchgfx13DMA_Interface5startEv>:
 801264a:	b510      	push	{r4, lr}
 801264c:	4604      	mov	r4, r0
 801264e:	6840      	ldr	r0, [r0, #4]
 8012650:	6803      	ldr	r3, [r0, #0]
 8012652:	681b      	ldr	r3, [r3, #0]
 8012654:	4798      	blx	r3
 8012656:	b948      	cbnz	r0, 801266c <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8012658:	7a63      	ldrb	r3, [r4, #9]
 801265a:	b13b      	cbz	r3, 801266c <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801265c:	7a23      	ldrb	r3, [r4, #8]
 801265e:	b92b      	cbnz	r3, 801266c <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8012660:	6823      	ldr	r3, [r4, #0]
 8012662:	4620      	mov	r0, r4
 8012664:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8012666:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801266a:	4718      	bx	r3
 801266c:	bd10      	pop	{r4, pc}

0801266e <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 801266e:	b570      	push	{r4, r5, r6, lr}
 8012670:	4604      	mov	r4, r0
 8012672:	6840      	ldr	r0, [r0, #4]
 8012674:	6803      	ldr	r3, [r0, #0]
 8012676:	681b      	ldr	r3, [r3, #0]
 8012678:	4798      	blx	r3
 801267a:	4605      	mov	r5, r0
 801267c:	b930      	cbnz	r0, 801268c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 801267e:	7a23      	ldrb	r3, [r4, #8]
 8012680:	b123      	cbz	r3, 801268c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8012682:	6860      	ldr	r0, [r4, #4]
 8012684:	6803      	ldr	r3, [r0, #0]
 8012686:	695b      	ldr	r3, [r3, #20]
 8012688:	4798      	blx	r3
 801268a:	7225      	strb	r5, [r4, #8]
 801268c:	6860      	ldr	r0, [r4, #4]
 801268e:	6803      	ldr	r3, [r0, #0]
 8012690:	681b      	ldr	r3, [r3, #0]
 8012692:	4798      	blx	r3
 8012694:	b928      	cbnz	r0, 80126a2 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8012696:	6823      	ldr	r3, [r4, #0]
 8012698:	4620      	mov	r0, r4
 801269a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801269c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80126a0:	4718      	bx	r3
 80126a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80126a6:	f7fd b9e9 	b.w	800fa7c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>
	...

080126ac <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 80126ac:	b510      	push	{r4, lr}
 80126ae:	6082      	str	r2, [r0, #8]
 80126b0:	2200      	movs	r2, #0
 80126b2:	4c03      	ldr	r4, [pc, #12]	@ (80126c0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 80126b4:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80126b8:	e9c0 4100 	strd	r4, r1, [r0]
 80126bc:	bd10      	pop	{r4, pc}
 80126be:	bf00      	nop
 80126c0:	080283b0 	.word	0x080283b0

080126c4 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 80126c4:	6840      	ldr	r0, [r0, #4]
 80126c6:	6803      	ldr	r3, [r0, #0]
 80126c8:	681b      	ldr	r3, [r3, #0]
 80126ca:	4718      	bx	r3

080126cc <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 80126cc:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
 80126d0:	4770      	bx	lr

080126d2 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 80126d2:	b510      	push	{r4, lr}
 80126d4:	4604      	mov	r4, r0
 80126d6:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 80126d8:	b150      	cbz	r0, 80126f0 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 80126da:	6803      	ldr	r3, [r0, #0]
 80126dc:	68db      	ldr	r3, [r3, #12]
 80126de:	4798      	blx	r3
 80126e0:	b130      	cbz	r0, 80126f0 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 80126e2:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 80126e4:	4621      	mov	r1, r4
 80126e6:	6803      	ldr	r3, [r0, #0]
 80126e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80126ec:	689b      	ldr	r3, [r3, #8]
 80126ee:	4718      	bx	r3
 80126f0:	bd10      	pop	{r4, pc}

080126f2 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 80126f2:	790b      	ldrb	r3, [r1, #4]
 80126f4:	2b00      	cmp	r3, #0
 80126f6:	bf0c      	ite	eq
 80126f8:	2301      	moveq	r3, #1
 80126fa:	2300      	movne	r3, #0
 80126fc:	b570      	push	{r4, r5, r6, lr}
 80126fe:	4604      	mov	r4, r0
 8012700:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
 8012704:	460e      	mov	r6, r1
 8012706:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
 801270a:	d109      	bne.n	8012720 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 801270c:	b14d      	cbz	r5, 8012722 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 801270e:	7933      	ldrb	r3, [r6, #4]
 8012710:	2b01      	cmp	r3, #1
 8012712:	d10c      	bne.n	801272e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8012714:	6823      	ldr	r3, [r4, #0]
 8012716:	4620      	mov	r0, r4
 8012718:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 801271a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801271e:	4718      	bx	r3
 8012720:	b12d      	cbz	r5, 801272e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8012722:	6823      	ldr	r3, [r4, #0]
 8012724:	4620      	mov	r0, r4
 8012726:	695b      	ldr	r3, [r3, #20]
 8012728:	4798      	blx	r3
 801272a:	2d00      	cmp	r5, #0
 801272c:	d1ef      	bne.n	801270e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 801272e:	bd70      	pop	{r4, r5, r6, pc}

08012730 <_ZN8touchgfx13AnimatedImage12setBitmapEndERKNS_6BitmapE>:
 8012730:	880b      	ldrh	r3, [r1, #0]
 8012732:	8643      	strh	r3, [r0, #50]	@ 0x32
 8012734:	4770      	bx	lr

08012736 <_ZN8touchgfx13AnimatedImage9setBitmapERKNS_6BitmapE>:
 8012736:	880b      	ldrh	r3, [r1, #0]
 8012738:	8603      	strh	r3, [r0, #48]	@ 0x30
 801273a:	f000 ba52 	b.w	8012be2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>

0801273e <_ZN8touchgfx13AnimatedImage13stopAnimationEv>:
 801273e:	b513      	push	{r0, r1, r4, lr}
 8012740:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
 8012744:	4604      	mov	r4, r0
 8012746:	b143      	cbz	r3, 801275a <_ZN8touchgfx13AnimatedImage13stopAnimationEv+0x1c>
 8012748:	f002 f84c 	bl	80147e4 <_ZN8touchgfx11Application11getInstanceEv>
 801274c:	4621      	mov	r1, r4
 801274e:	3004      	adds	r0, #4
 8012750:	f002 f86d 	bl	801482e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8012754:	2300      	movs	r3, #0
 8012756:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
 801275a:	f894 3036 	ldrb.w	r3, [r4, #54]	@ 0x36
 801275e:	b163      	cbz	r3, 801277a <_ZN8touchgfx13AnimatedImage13stopAnimationEv+0x3c>
 8012760:	8e63      	ldrh	r3, [r4, #50]	@ 0x32
 8012762:	a901      	add	r1, sp, #4
 8012764:	4620      	mov	r0, r4
 8012766:	f8ad 3004 	strh.w	r3, [sp, #4]
 801276a:	f000 fa3a 	bl	8012be2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 801276e:	6823      	ldr	r3, [r4, #0]
 8012770:	4620      	mov	r0, r4
 8012772:	695b      	ldr	r3, [r3, #20]
 8012774:	4798      	blx	r3
 8012776:	b002      	add	sp, #8
 8012778:	bd10      	pop	{r4, pc}
 801277a:	8e23      	ldrh	r3, [r4, #48]	@ 0x30
 801277c:	e7f1      	b.n	8012762 <_ZN8touchgfx13AnimatedImage13stopAnimationEv+0x24>

0801277e <_ZN8touchgfx13AnimatedImage14startAnimationEbbb>:
 801277e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8012780:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 8012784:	8e05      	ldrh	r5, [r0, #48]	@ 0x30
 8012786:	4604      	mov	r4, r0
 8012788:	42bd      	cmp	r5, r7
 801278a:	d01a      	beq.n	80127c2 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x44>
 801278c:	8e46      	ldrh	r6, [r0, #50]	@ 0x32
 801278e:	42be      	cmp	r6, r7
 8012790:	d017      	beq.n	80127c2 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x44>
 8012792:	f880 1036 	strb.w	r1, [r0, #54]	@ 0x36
 8012796:	f880 3037 	strb.w	r3, [r0, #55]	@ 0x37
 801279a:	b1a1      	cbz	r1, 80127c6 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x48>
 801279c:	b142      	cbz	r2, 80127b0 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x32>
 801279e:	a902      	add	r1, sp, #8
 80127a0:	f821 6d04 	strh.w	r6, [r1, #-4]!
 80127a4:	f000 fa1d 	bl	8012be2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80127a8:	6823      	ldr	r3, [r4, #0]
 80127aa:	4620      	mov	r0, r4
 80127ac:	695b      	ldr	r3, [r3, #20]
 80127ae:	4798      	blx	r3
 80127b0:	f002 f818 	bl	80147e4 <_ZN8touchgfx11Application11getInstanceEv>
 80127b4:	4621      	mov	r1, r4
 80127b6:	3004      	adds	r0, #4
 80127b8:	f002 f8e2 	bl	8014980 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 80127bc:	2301      	movs	r3, #1
 80127be:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
 80127c2:	b003      	add	sp, #12
 80127c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80127c6:	2a00      	cmp	r2, #0
 80127c8:	d0f2      	beq.n	80127b0 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x32>
 80127ca:	a902      	add	r1, sp, #8
 80127cc:	f821 5d04 	strh.w	r5, [r1, #-4]!
 80127d0:	e7e8      	b.n	80127a4 <_ZN8touchgfx13AnimatedImage14startAnimationEbbb+0x26>

080127d2 <_ZN8touchgfx13AnimatedImage14pauseAnimationEv>:
 80127d2:	b510      	push	{r4, lr}
 80127d4:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
 80127d8:	4604      	mov	r4, r0
 80127da:	b14b      	cbz	r3, 80127f0 <_ZN8touchgfx13AnimatedImage14pauseAnimationEv+0x1e>
 80127dc:	f002 f802 	bl	80147e4 <_ZN8touchgfx11Application11getInstanceEv>
 80127e0:	4621      	mov	r1, r4
 80127e2:	3004      	adds	r0, #4
 80127e4:	f002 f823 	bl	801482e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 80127e8:	2300      	movs	r3, #0
 80127ea:	f884 3038 	strb.w	r3, [r4, #56]	@ 0x38
 80127ee:	bd10      	pop	{r4, pc}
 80127f0:	f001 fff8 	bl	80147e4 <_ZN8touchgfx11Application11getInstanceEv>
 80127f4:	4621      	mov	r1, r4
 80127f6:	3004      	adds	r0, #4
 80127f8:	f002 f8c2 	bl	8014980 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 80127fc:	2301      	movs	r3, #1
 80127fe:	e7f4      	b.n	80127ea <_ZN8touchgfx13AnimatedImage14pauseAnimationEv+0x18>

08012800 <_ZN8touchgfx13AnimatedImage15handleTickEventEv>:
 8012800:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012802:	f890 3038 	ldrb.w	r3, [r0, #56]	@ 0x38
 8012806:	4604      	mov	r4, r0
 8012808:	2b00      	cmp	r3, #0
 801280a:	d042      	beq.n	8012892 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
 801280c:	f890 3035 	ldrb.w	r3, [r0, #53]	@ 0x35
 8012810:	f890 2034 	ldrb.w	r2, [r0, #52]	@ 0x34
 8012814:	3301      	adds	r3, #1
 8012816:	b2db      	uxtb	r3, r3
 8012818:	429a      	cmp	r2, r3
 801281a:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35
 801281e:	d138      	bne.n	8012892 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
 8012820:	2300      	movs	r3, #0
 8012822:	8e41      	ldrh	r1, [r0, #50]	@ 0x32
 8012824:	f890 2036 	ldrb.w	r2, [r0, #54]	@ 0x36
 8012828:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35
 801282c:	8cc3      	ldrh	r3, [r0, #38]	@ 0x26
 801282e:	4299      	cmp	r1, r3
 8012830:	d100      	bne.n	8012834 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x34>
 8012832:	b122      	cbz	r2, 801283e <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x3e>
 8012834:	8e21      	ldrh	r1, [r4, #48]	@ 0x30
 8012836:	4299      	cmp	r1, r3
 8012838:	d12f      	bne.n	801289a <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x9a>
 801283a:	2a00      	cmp	r2, #0
 801283c:	d034      	beq.n	80128a8 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0xa8>
 801283e:	f894 5037 	ldrb.w	r5, [r4, #55]	@ 0x37
 8012842:	b93d      	cbnz	r5, 8012854 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x54>
 8012844:	f001 ffce 	bl	80147e4 <_ZN8touchgfx11Application11getInstanceEv>
 8012848:	4621      	mov	r1, r4
 801284a:	3004      	adds	r0, #4
 801284c:	f001 ffef 	bl	801482e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 8012850:	f884 5038 	strb.w	r5, [r4, #56]	@ 0x38
 8012854:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 8012856:	b140      	cbz	r0, 801286a <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x6a>
 8012858:	6803      	ldr	r3, [r0, #0]
 801285a:	68db      	ldr	r3, [r3, #12]
 801285c:	4798      	blx	r3
 801285e:	b120      	cbz	r0, 801286a <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x6a>
 8012860:	6ae0      	ldr	r0, [r4, #44]	@ 0x2c
 8012862:	4621      	mov	r1, r4
 8012864:	6803      	ldr	r3, [r0, #0]
 8012866:	689b      	ldr	r3, [r3, #8]
 8012868:	4798      	blx	r3
 801286a:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 801286e:	b183      	cbz	r3, 8012892 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
 8012870:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
 8012874:	b16b      	cbz	r3, 8012892 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x92>
 8012876:	f894 3036 	ldrb.w	r3, [r4, #54]	@ 0x36
 801287a:	b163      	cbz	r3, 8012896 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x96>
 801287c:	8e63      	ldrh	r3, [r4, #50]	@ 0x32
 801287e:	a901      	add	r1, sp, #4
 8012880:	f8ad 3004 	strh.w	r3, [sp, #4]
 8012884:	4620      	mov	r0, r4
 8012886:	f000 f9ac 	bl	8012be2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 801288a:	6823      	ldr	r3, [r4, #0]
 801288c:	4620      	mov	r0, r4
 801288e:	695b      	ldr	r3, [r3, #20]
 8012890:	4798      	blx	r3
 8012892:	b003      	add	sp, #12
 8012894:	bd30      	pop	{r4, r5, pc}
 8012896:	8e23      	ldrh	r3, [r4, #48]	@ 0x30
 8012898:	e7f1      	b.n	801287e <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x7e>
 801289a:	b12a      	cbz	r2, 80128a8 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0xa8>
 801289c:	3b01      	subs	r3, #1
 801289e:	b29b      	uxth	r3, r3
 80128a0:	a902      	add	r1, sp, #8
 80128a2:	f821 3d04 	strh.w	r3, [r1, #-4]!
 80128a6:	e7ed      	b.n	8012884 <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x84>
 80128a8:	3301      	adds	r3, #1
 80128aa:	e7f8      	b.n	801289e <_ZN8touchgfx13AnimatedImage15handleTickEventEv+0x9e>

080128ac <_ZNK8touchgfx5Image17invalidateContentEv>:
 80128ac:	f890 2028 	ldrb.w	r2, [r0, #40]	@ 0x28
 80128b0:	b12a      	cbz	r2, 80128be <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80128b2:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80128b6:	b112      	cbz	r2, 80128be <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 80128b8:	6803      	ldr	r3, [r0, #0]
 80128ba:	695b      	ldr	r3, [r3, #20]
 80128bc:	4718      	bx	r3
 80128be:	4770      	bx	lr

080128c0 <_ZN8touchgfx13AnimatedImage10setBitmapsEtt>:
 80128c0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80128c2:	ac02      	add	r4, sp, #8
 80128c4:	6803      	ldr	r3, [r0, #0]
 80128c6:	4605      	mov	r5, r0
 80128c8:	4616      	mov	r6, r2
 80128ca:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 80128cc:	f824 1d04 	strh.w	r1, [r4, #-4]!
 80128d0:	4621      	mov	r1, r4
 80128d2:	4798      	blx	r3
 80128d4:	682b      	ldr	r3, [r5, #0]
 80128d6:	4621      	mov	r1, r4
 80128d8:	4628      	mov	r0, r5
 80128da:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80128dc:	f8ad 6004 	strh.w	r6, [sp, #4]
 80128e0:	4798      	blx	r3
 80128e2:	b002      	add	sp, #8
 80128e4:	bd70      	pop	{r4, r5, r6, pc}

080128e6 <_ZN8touchgfx13AnimatedImage22setUpdateTicksIntervalEh>:
 80128e6:	2300      	movs	r3, #0
 80128e8:	f880 1034 	strb.w	r1, [r0, #52]	@ 0x34
 80128ec:	f880 3035 	strb.w	r3, [r0, #53]	@ 0x35
 80128f0:	4770      	bx	lr

080128f2 <_ZNK8touchgfx3Box12getSolidRectEv>:
 80128f2:	2300      	movs	r3, #0
 80128f4:	8083      	strh	r3, [r0, #4]
 80128f6:	80c3      	strh	r3, [r0, #6]
 80128f8:	8003      	strh	r3, [r0, #0]
 80128fa:	8043      	strh	r3, [r0, #2]
 80128fc:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 8012900:	2bff      	cmp	r3, #255	@ 0xff
 8012902:	bf01      	itttt	eq
 8012904:	890b      	ldrheq	r3, [r1, #8]
 8012906:	8083      	strheq	r3, [r0, #4]
 8012908:	894b      	ldrheq	r3, [r1, #10]
 801290a:	80c3      	strheq	r3, [r0, #6]
 801290c:	4770      	bx	lr
	...

08012910 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8012910:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012912:	4604      	mov	r4, r0
 8012914:	466b      	mov	r3, sp
 8012916:	6808      	ldr	r0, [r1, #0]
 8012918:	6849      	ldr	r1, [r1, #4]
 801291a:	c303      	stmia	r3!, {r0, r1}
 801291c:	6823      	ldr	r3, [r4, #0]
 801291e:	4669      	mov	r1, sp
 8012920:	4620      	mov	r0, r4
 8012922:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012924:	4798      	blx	r3
 8012926:	4b08      	ldr	r3, [pc, #32]	@ (8012948 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8012928:	681b      	ldr	r3, [r3, #0]
 801292a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 801292e:	b10a      	cbz	r2, 8012934 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8012930:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8012932:	b900      	cbnz	r0, 8012936 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8012934:	6898      	ldr	r0, [r3, #8]
 8012936:	6803      	ldr	r3, [r0, #0]
 8012938:	4669      	mov	r1, sp
 801293a:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 801293c:	6a1d      	ldr	r5, [r3, #32]
 801293e:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 8012942:	47a8      	blx	r5
 8012944:	b003      	add	sp, #12
 8012946:	bd30      	pop	{r4, r5, pc}
 8012948:	24001a30 	.word	0x24001a30

0801294c <_ZNK8touchgfx3Box17invalidateContentEv>:
 801294c:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 8012950:	b12a      	cbz	r2, 801295e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8012952:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8012956:	b112      	cbz	r2, 801295e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 8012958:	6803      	ldr	r3, [r0, #0]
 801295a:	695b      	ldr	r3, [r3, #20]
 801295c:	4718      	bx	r3
 801295e:	4770      	bx	lr

08012960 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 8012960:	b570      	push	{r4, r5, r6, lr}
 8012962:	880b      	ldrh	r3, [r1, #0]
 8012964:	4605      	mov	r5, r0
 8012966:	4604      	mov	r4, r0
 8012968:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 801296a:	8813      	ldrh	r3, [r2, #0]
 801296c:	f825 3f30 	strh.w	r3, [r5, #48]!
 8012970:	4628      	mov	r0, r5
 8012972:	f004 fc45 	bl	8017200 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012976:	4606      	mov	r6, r0
 8012978:	4628      	mov	r0, r5
 801297a:	f004 fc75 	bl	8017268 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801297e:	6823      	ldr	r3, [r4, #0]
 8012980:	4605      	mov	r5, r0
 8012982:	4631      	mov	r1, r6
 8012984:	4620      	mov	r0, r4
 8012986:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8012988:	4798      	blx	r3
 801298a:	6823      	ldr	r3, [r4, #0]
 801298c:	4629      	mov	r1, r5
 801298e:	4620      	mov	r0, r4
 8012990:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8012992:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012996:	4718      	bx	r3

08012998 <_ZNK8touchgfx6Button12getSolidRectEv>:
 8012998:	b510      	push	{r4, lr}
 801299a:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
 801299e:	4604      	mov	r4, r0
 80129a0:	2bff      	cmp	r3, #255	@ 0xff
 80129a2:	d006      	beq.n	80129b2 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 80129a4:	2300      	movs	r3, #0
 80129a6:	8003      	strh	r3, [r0, #0]
 80129a8:	8043      	strh	r3, [r0, #2]
 80129aa:	8083      	strh	r3, [r0, #4]
 80129ac:	80c3      	strh	r3, [r0, #6]
 80129ae:	4620      	mov	r0, r4
 80129b0:	bd10      	pop	{r4, pc}
 80129b2:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
 80129b6:	b11b      	cbz	r3, 80129c0 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 80129b8:	3130      	adds	r1, #48	@ 0x30
 80129ba:	f004 fc89 	bl	80172d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80129be:	e7f6      	b.n	80129ae <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 80129c0:	312e      	adds	r1, #46	@ 0x2e
 80129c2:	e7fa      	b.n	80129ba <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

080129c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 80129c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80129c8:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 80129cc:	b08a      	sub	sp, #40	@ 0x28
 80129ce:	4604      	mov	r4, r0
 80129d0:	4688      	mov	r8, r1
 80129d2:	2b00      	cmp	r3, #0
 80129d4:	d066      	beq.n	8012aa4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 80129d6:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 80129d8:	a805      	add	r0, sp, #20
 80129da:	f8ad 3014 	strh.w	r3, [sp, #20]
 80129de:	f004 fc0f 	bl	8017200 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80129e2:	4607      	mov	r7, r0
 80129e4:	a805      	add	r0, sp, #20
 80129e6:	f004 fc3f 	bl	8017268 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80129ea:	f9b8 6000 	ldrsh.w	r6, [r8]
 80129ee:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 80129f2:	2300      	movs	r3, #0
 80129f4:	4432      	add	r2, r6
 80129f6:	9306      	str	r3, [sp, #24]
 80129f8:	b292      	uxth	r2, r2
 80129fa:	fa0f fc82 	sxth.w	ip, r2
 80129fe:	459c      	cmp	ip, r3
 8012a00:	dd52      	ble.n	8012aa8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012a02:	42b7      	cmp	r7, r6
 8012a04:	dd50      	ble.n	8012aa8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012a06:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8012a0a:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8012a0e:	442b      	add	r3, r5
 8012a10:	b29b      	uxth	r3, r3
 8012a12:	b219      	sxth	r1, r3
 8012a14:	2900      	cmp	r1, #0
 8012a16:	dd47      	ble.n	8012aa8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012a18:	42a8      	cmp	r0, r5
 8012a1a:	dd45      	ble.n	8012aa8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012a1c:	4567      	cmp	r7, ip
 8012a1e:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8012a22:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8012a26:	bfb8      	it	lt
 8012a28:	b2ba      	uxthlt	r2, r7
 8012a2a:	4288      	cmp	r0, r1
 8012a2c:	f8ad 6018 	strh.w	r6, [sp, #24]
 8012a30:	bfb8      	it	lt
 8012a32:	b283      	uxthlt	r3, r0
 8012a34:	1b92      	subs	r2, r2, r6
 8012a36:	f8ad 501a 	strh.w	r5, [sp, #26]
 8012a3a:	1b5b      	subs	r3, r3, r5
 8012a3c:	f8ad 201c 	strh.w	r2, [sp, #28]
 8012a40:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012a44:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8012a48:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8012a4c:	429a      	cmp	r2, r3
 8012a4e:	d026      	beq.n	8012a9e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8012a50:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012a54:	2b00      	cmp	r3, #0
 8012a56:	dd22      	ble.n	8012a9e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8012a58:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8012a5c:	2b00      	cmp	r3, #0
 8012a5e:	dd1e      	ble.n	8012a9e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 8012a60:	2300      	movs	r3, #0
 8012a62:	a908      	add	r1, sp, #32
 8012a64:	4620      	mov	r0, r4
 8012a66:	e9cd 3308 	strd	r3, r3, [sp, #32]
 8012a6a:	6823      	ldr	r3, [r4, #0]
 8012a6c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012a6e:	4798      	blx	r3
 8012a70:	4b0f      	ldr	r3, [pc, #60]	@ (8012ab0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 8012a72:	681b      	ldr	r3, [r3, #0]
 8012a74:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8012a78:	b10a      	cbz	r2, 8012a7e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 8012a7a:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8012a7c:	b900      	cbnz	r0, 8012a80 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 8012a7e:	6898      	ldr	r0, [r3, #8]
 8012a80:	2501      	movs	r5, #1
 8012a82:	6801      	ldr	r1, [r0, #0]
 8012a84:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8012a88:	9502      	str	r5, [sp, #8]
 8012a8a:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 8012a8e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8012a92:	9401      	str	r4, [sp, #4]
 8012a94:	ac06      	add	r4, sp, #24
 8012a96:	9400      	str	r4, [sp, #0]
 8012a98:	688c      	ldr	r4, [r1, #8]
 8012a9a:	a905      	add	r1, sp, #20
 8012a9c:	47a0      	blx	r4
 8012a9e:	b00a      	add	sp, #40	@ 0x28
 8012aa0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012aa4:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
 8012aa6:	e797      	b.n	80129d8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8012aa8:	2300      	movs	r3, #0
 8012aaa:	9307      	str	r3, [sp, #28]
 8012aac:	e7ca      	b.n	8012a44 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8012aae:	bf00      	nop
 8012ab0:	24001a30 	.word	0x24001a30

08012ab4 <_ZNK8touchgfx6Button17invalidateContentEv>:
 8012ab4:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
 8012ab8:	b12a      	cbz	r2, 8012ac6 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8012aba:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8012abe:	b112      	cbz	r2, 8012ac6 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8012ac0:	6803      	ldr	r3, [r0, #0]
 8012ac2:	695b      	ldr	r3, [r3, #20]
 8012ac4:	4718      	bx	r3
 8012ac6:	4770      	bx	lr

08012ac8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 8012ac8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012acc:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 8012ace:	4604      	mov	r4, r0
 8012ad0:	460e      	mov	r6, r1
 8012ad2:	b08e      	sub	sp, #56	@ 0x38
 8012ad4:	b218      	sxth	r0, r3
 8012ad6:	8921      	ldrh	r1, [r4, #8]
 8012ad8:	005b      	lsls	r3, r3, #1
 8012ada:	8962      	ldrh	r2, [r4, #10]
 8012adc:	f8ad 0000 	strh.w	r0, [sp]
 8012ae0:	b29b      	uxth	r3, r3
 8012ae2:	f8ad 0002 	strh.w	r0, [sp, #2]
 8012ae6:	1ac9      	subs	r1, r1, r3
 8012ae8:	1ad3      	subs	r3, r2, r3
 8012aea:	b209      	sxth	r1, r1
 8012aec:	b21b      	sxth	r3, r3
 8012aee:	2900      	cmp	r1, #0
 8012af0:	f8ad 1004 	strh.w	r1, [sp, #4]
 8012af4:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012af8:	dd5e      	ble.n	8012bb8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 8012afa:	2b00      	cmp	r3, #0
 8012afc:	dd5c      	ble.n	8012bb8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 8012afe:	6830      	ldr	r0, [r6, #0]
 8012b00:	ab02      	add	r3, sp, #8
 8012b02:	6871      	ldr	r1, [r6, #4]
 8012b04:	c303      	stmia	r3!, {r0, r1}
 8012b06:	4669      	mov	r1, sp
 8012b08:	a802      	add	r0, sp, #8
 8012b0a:	f7fe fde1 	bl	80116d0 <_ZN8touchgfx4RectaNERKS0_>
 8012b0e:	4620      	mov	r0, r4
 8012b10:	a902      	add	r1, sp, #8
 8012b12:	f7ff fefd 	bl	8012910 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 8012b16:	8e20      	ldrh	r0, [r4, #48]	@ 0x30
 8012b18:	2800      	cmp	r0, #0
 8012b1a:	d05f      	beq.n	8012bdc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 8012b1c:	8963      	ldrh	r3, [r4, #10]
 8012b1e:	b202      	sxth	r2, r0
 8012b20:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8012b24:	2500      	movs	r5, #0
 8012b26:	1a1f      	subs	r7, r3, r0
 8012b28:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 8012b2c:	f8ad 101c 	strh.w	r1, [sp, #28]
 8012b30:	b21b      	sxth	r3, r3
 8012b32:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 8012b36:	f8ad 1024 	strh.w	r1, [sp, #36]	@ 0x24
 8012b3a:	af04      	add	r7, sp, #16
 8012b3c:	1a09      	subs	r1, r1, r0
 8012b3e:	9506      	str	r5, [sp, #24]
 8012b40:	f8ad 201e 	strh.w	r2, [sp, #30]
 8012b44:	f8ad 5020 	strh.w	r5, [sp, #32]
 8012b48:	f8ad 2026 	strh.w	r2, [sp, #38]	@ 0x26
 8012b4c:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 8012b50:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8012b54:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 8012b58:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8012b5c:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 8012b60:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8012b64:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8012b68:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8012b6c:	ab06      	add	r3, sp, #24
 8012b6e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8012b72:	e893 0003 	ldmia.w	r3, {r0, r1}
 8012b76:	e887 0003 	stmia.w	r7, {r0, r1}
 8012b7a:	4631      	mov	r1, r6
 8012b7c:	4638      	mov	r0, r7
 8012b7e:	f7fe fda7 	bl	80116d0 <_ZN8touchgfx4RectaNERKS0_>
 8012b82:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8012b86:	2b00      	cmp	r3, #0
 8012b88:	dd12      	ble.n	8012bb0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 8012b8a:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8012b8e:	2b00      	cmp	r3, #0
 8012b90:	dd0e      	ble.n	8012bb0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 8012b92:	6823      	ldr	r3, [r4, #0]
 8012b94:	4639      	mov	r1, r7
 8012b96:	4620      	mov	r0, r4
 8012b98:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012b9a:	4798      	blx	r3
 8012b9c:	f7f9 ffce 	bl	800cb3c <_ZN8touchgfx3HAL3lcdEv>
 8012ba0:	6803      	ldr	r3, [r0, #0]
 8012ba2:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8012ba4:	4639      	mov	r1, r7
 8012ba6:	f8d3 8020 	ldr.w	r8, [r3, #32]
 8012baa:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 8012bae:	47c0      	blx	r8
 8012bb0:	3501      	adds	r5, #1
 8012bb2:	2d04      	cmp	r5, #4
 8012bb4:	d1da      	bne.n	8012b6c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 8012bb6:	e011      	b.n	8012bdc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 8012bb8:	6830      	ldr	r0, [r6, #0]
 8012bba:	ab06      	add	r3, sp, #24
 8012bbc:	6871      	ldr	r1, [r6, #4]
 8012bbe:	c303      	stmia	r3!, {r0, r1}
 8012bc0:	6823      	ldr	r3, [r4, #0]
 8012bc2:	a906      	add	r1, sp, #24
 8012bc4:	4620      	mov	r0, r4
 8012bc6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012bc8:	4798      	blx	r3
 8012bca:	f7f9 ffb7 	bl	800cb3c <_ZN8touchgfx3HAL3lcdEv>
 8012bce:	6803      	ldr	r3, [r0, #0]
 8012bd0:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 8012bd2:	a906      	add	r1, sp, #24
 8012bd4:	6a1d      	ldr	r5, [r3, #32]
 8012bd6:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 8012bda:	47a8      	blx	r5
 8012bdc:	b00e      	add	sp, #56	@ 0x38
 8012bde:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08012be2 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 8012be2:	b570      	push	{r4, r5, r6, lr}
 8012be4:	880b      	ldrh	r3, [r1, #0]
 8012be6:	460d      	mov	r5, r1
 8012be8:	4604      	mov	r4, r0
 8012bea:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8012bec:	4608      	mov	r0, r1
 8012bee:	f004 fb07 	bl	8017200 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012bf2:	4606      	mov	r6, r0
 8012bf4:	4628      	mov	r0, r5
 8012bf6:	f004 fb37 	bl	8017268 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012bfa:	6823      	ldr	r3, [r4, #0]
 8012bfc:	4605      	mov	r5, r0
 8012bfe:	4631      	mov	r1, r6
 8012c00:	4620      	mov	r0, r4
 8012c02:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8012c04:	4798      	blx	r3
 8012c06:	6823      	ldr	r3, [r4, #0]
 8012c08:	4629      	mov	r1, r5
 8012c0a:	4620      	mov	r0, r4
 8012c0c:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8012c0e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012c12:	4718      	bx	r3

08012c14 <_ZNK8touchgfx5Image12getSolidRectEv>:
 8012c14:	b510      	push	{r4, lr}
 8012c16:	f891 3028 	ldrb.w	r3, [r1, #40]	@ 0x28
 8012c1a:	4604      	mov	r4, r0
 8012c1c:	2bff      	cmp	r3, #255	@ 0xff
 8012c1e:	d006      	beq.n	8012c2e <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 8012c20:	2300      	movs	r3, #0
 8012c22:	8003      	strh	r3, [r0, #0]
 8012c24:	8043      	strh	r3, [r0, #2]
 8012c26:	8083      	strh	r3, [r0, #4]
 8012c28:	80c3      	strh	r3, [r0, #6]
 8012c2a:	4620      	mov	r0, r4
 8012c2c:	bd10      	pop	{r4, pc}
 8012c2e:	3126      	adds	r1, #38	@ 0x26
 8012c30:	f004 fb4e 	bl	80172d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8012c34:	e7f9      	b.n	8012c2a <_ZNK8touchgfx5Image12getSolidRectEv+0x16>
	...

08012c38 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 8012c38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012c3c:	4604      	mov	r4, r0
 8012c3e:	b088      	sub	sp, #32
 8012c40:	2500      	movs	r5, #0
 8012c42:	460f      	mov	r7, r1
 8012c44:	f854 3b26 	ldr.w	r3, [r4], #38
 8012c48:	a904      	add	r1, sp, #16
 8012c4a:	4606      	mov	r6, r0
 8012c4c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012c4e:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8012c52:	4798      	blx	r3
 8012c54:	4620      	mov	r0, r4
 8012c56:	f004 fad3 	bl	8017200 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012c5a:	4680      	mov	r8, r0
 8012c5c:	4620      	mov	r0, r4
 8012c5e:	f004 fb03 	bl	8017268 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012c62:	9506      	str	r5, [sp, #24]
 8012c64:	ad06      	add	r5, sp, #24
 8012c66:	f8ad 001e 	strh.w	r0, [sp, #30]
 8012c6a:	4639      	mov	r1, r7
 8012c6c:	f8ad 801c 	strh.w	r8, [sp, #28]
 8012c70:	4628      	mov	r0, r5
 8012c72:	f7fe fd2d 	bl	80116d0 <_ZN8touchgfx4RectaNERKS0_>
 8012c76:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8012c7a:	2b00      	cmp	r3, #0
 8012c7c:	dd19      	ble.n	8012cb2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8012c7e:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8012c82:	2b00      	cmp	r3, #0
 8012c84:	dd15      	ble.n	8012cb2 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 8012c86:	4b0c      	ldr	r3, [pc, #48]	@ (8012cb8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 8012c88:	681b      	ldr	r3, [r3, #0]
 8012c8a:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8012c8e:	b10a      	cbz	r2, 8012c94 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 8012c90:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 8012c92:	b900      	cbnz	r0, 8012c96 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 8012c94:	6898      	ldr	r0, [r3, #8]
 8012c96:	2701      	movs	r7, #1
 8012c98:	6801      	ldr	r1, [r0, #0]
 8012c9a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8012c9e:	9702      	str	r7, [sp, #8]
 8012ca0:	f896 6028 	ldrb.w	r6, [r6, #40]	@ 0x28
 8012ca4:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8012ca8:	e9cd 5600 	strd	r5, r6, [sp]
 8012cac:	688d      	ldr	r5, [r1, #8]
 8012cae:	4621      	mov	r1, r4
 8012cb0:	47a8      	blx	r5
 8012cb2:	b008      	add	sp, #32
 8012cb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012cb8:	24001a30 	.word	0x24001a30

08012cbc <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 8012cbc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012cc0:	b08d      	sub	sp, #52	@ 0x34
 8012cc2:	4604      	mov	r4, r0
 8012cc4:	460f      	mov	r7, r1
 8012cc6:	f7ff fe7d 	bl	80129c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 8012cca:	4a55      	ldr	r2, [pc, #340]	@ (8012e20 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 8012ccc:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8012cce:	8812      	ldrh	r2, [r2, #0]
 8012cd0:	429a      	cmp	r2, r3
 8012cd2:	f240 8082 	bls.w	8012dda <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8012cd6:	4d53      	ldr	r5, [pc, #332]	@ (8012e24 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 8012cd8:	682a      	ldr	r2, [r5, #0]
 8012cda:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8012cde:	4b52      	ldr	r3, [pc, #328]	@ (8012e28 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 8012ce0:	681b      	ldr	r3, [r3, #0]
 8012ce2:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8012ce6:	2200      	movs	r2, #0
 8012ce8:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	@ 0x46
 8012cec:	e9cd 2203 	strd	r2, r2, [sp, #12]
 8012cf0:	f894 2044 	ldrb.w	r2, [r4, #68]	@ 0x44
 8012cf4:	2a03      	cmp	r2, #3
 8012cf6:	d811      	bhi.n	8012d1c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8012cf8:	e8df f002 	tbb	[pc, r2]
 8012cfc:	89727902 	.word	0x89727902
 8012d00:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8012d04:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8012d08:	1ad2      	subs	r2, r2, r3
 8012d0a:	2002      	movs	r0, #2
 8012d0c:	f8ad 1010 	strh.w	r1, [sp, #16]
 8012d10:	f8ad 3012 	strh.w	r3, [sp, #18]
 8012d14:	fb92 f2f0 	sdiv	r2, r2, r0
 8012d18:	f8ad 200e 	strh.w	r2, [sp, #14]
 8012d1c:	f10d 080c 	add.w	r8, sp, #12
 8012d20:	f10d 0914 	add.w	r9, sp, #20
 8012d24:	e898 0003 	ldmia.w	r8, {r0, r1}
 8012d28:	e889 0003 	stmia.w	r9, {r0, r1}
 8012d2c:	4639      	mov	r1, r7
 8012d2e:	4648      	mov	r0, r9
 8012d30:	f7fe fcce 	bl	80116d0 <_ZN8touchgfx4RectaNERKS0_>
 8012d34:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8012d38:	2b00      	cmp	r3, #0
 8012d3a:	dd4e      	ble.n	8012dda <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8012d3c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8012d40:	2b00      	cmp	r3, #0
 8012d42:	dd4a      	ble.n	8012dda <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 8012d44:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8012d48:	4641      	mov	r1, r8
 8012d4a:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8012d4e:	4620      	mov	r0, r4
 8012d50:	1a9b      	subs	r3, r3, r2
 8012d52:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 8012d56:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012d5a:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 8012d5e:	1a9b      	subs	r3, r3, r2
 8012d60:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012d64:	6823      	ldr	r3, [r4, #0]
 8012d66:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012d68:	4798      	blx	r3
 8012d6a:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 8012d6e:	2b00      	cmp	r3, #0
 8012d70:	d053      	beq.n	8012e1a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 8012d72:	6c22      	ldr	r2, [r4, #64]	@ 0x40
 8012d74:	8f21      	ldrh	r1, [r4, #56]	@ 0x38
 8012d76:	682b      	ldr	r3, [r5, #0]
 8012d78:	f894 0032 	ldrb.w	r0, [r4, #50]	@ 0x32
 8012d7c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 8012d80:	f894 4044 	ldrb.w	r4, [r4, #68]	@ 0x44
 8012d84:	785b      	ldrb	r3, [r3, #1]
 8012d86:	9209      	str	r2, [sp, #36]	@ 0x24
 8012d88:	f3c3 0501 	ubfx	r5, r3, #0, #2
 8012d8c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8012d90:	9607      	str	r6, [sp, #28]
 8012d92:	f88d 3021 	strb.w	r3, [sp, #33]	@ 0x21
 8012d96:	2300      	movs	r3, #0
 8012d98:	f88d 5020 	strb.w	r5, [sp, #32]
 8012d9c:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 8012da0:	f88d 302b 	strb.w	r3, [sp, #43]	@ 0x2b
 8012da4:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 8012da8:	4b20      	ldr	r3, [pc, #128]	@ (8012e2c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 8012daa:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 8012dae:	681b      	ldr	r3, [r3, #0]
 8012db0:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 8012db4:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8012db8:	b10a      	cbz	r2, 8012dbe <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 8012dba:	6cdc      	ldr	r4, [r3, #76]	@ 0x4c
 8012dbc:	b904      	cbnz	r4, 8012dc0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 8012dbe:	689c      	ldr	r4, [r3, #8]
 8012dc0:	4b1b      	ldr	r3, [pc, #108]	@ (8012e30 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 8012dc2:	6818      	ldr	r0, [r3, #0]
 8012dc4:	f7fc f87a 	bl	800eebc <_ZNK8touchgfx5Texts7getTextEt>
 8012dc8:	ab07      	add	r3, sp, #28
 8012dca:	9001      	str	r0, [sp, #4]
 8012dcc:	4620      	mov	r0, r4
 8012dce:	9300      	str	r3, [sp, #0]
 8012dd0:	464b      	mov	r3, r9
 8012dd2:	e898 0006 	ldmia.w	r8, {r1, r2}
 8012dd6:	f7fc f802 	bl	800edde <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 8012dda:	b00d      	add	sp, #52	@ 0x34
 8012ddc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012de0:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 8012de4:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 8012de8:	1ad2      	subs	r2, r2, r3
 8012dea:	3201      	adds	r2, #1
 8012dec:	e78d      	b.n	8012d0a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 8012dee:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8012df2:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8012df6:	1ad2      	subs	r2, r2, r3
 8012df8:	3201      	adds	r2, #1
 8012dfa:	2002      	movs	r0, #2
 8012dfc:	f8ad 3010 	strh.w	r3, [sp, #16]
 8012e00:	f8ad 1012 	strh.w	r1, [sp, #18]
 8012e04:	fb92 f2f0 	sdiv	r2, r2, r0
 8012e08:	f8ad 200c 	strh.w	r2, [sp, #12]
 8012e0c:	e786      	b.n	8012d1c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 8012e0e:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8012e12:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 8012e16:	1ad2      	subs	r2, r2, r3
 8012e18:	e7ef      	b.n	8012dfa <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 8012e1a:	6be2      	ldr	r2, [r4, #60]	@ 0x3c
 8012e1c:	e7aa      	b.n	8012d74 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 8012e1e:	bf00      	nop
 8012e20:	24001a84 	.word	0x24001a84
 8012e24:	24001a80 	.word	0x24001a80
 8012e28:	24001a88 	.word	0x24001a88
 8012e2c:	24001a30 	.word	0x24001a30
 8012e30:	24001a8c 	.word	0x24001a8c

08012e34 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 8012e34:	2101      	movs	r1, #1
 8012e36:	2200      	movs	r2, #0
 8012e38:	b510      	push	{r4, lr}
 8012e3a:	4c13      	ldr	r4, [pc, #76]	@ (8012e88 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 8012e3c:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 8012e40:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
 8012e44:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8012e48:	6004      	str	r4, [r0, #0]
 8012e4a:	4c10      	ldr	r4, [pc, #64]	@ (8012e8c <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 8012e4c:	8082      	strh	r2, [r0, #4]
 8012e4e:	80c2      	strh	r2, [r0, #6]
 8012e50:	8102      	strh	r2, [r0, #8]
 8012e52:	8142      	strh	r2, [r0, #10]
 8012e54:	8182      	strh	r2, [r0, #12]
 8012e56:	81c2      	strh	r2, [r0, #14]
 8012e58:	8202      	strh	r2, [r0, #16]
 8012e5a:	8242      	strh	r2, [r0, #18]
 8012e5c:	61c2      	str	r2, [r0, #28]
 8012e5e:	8402      	strh	r2, [r0, #32]
 8012e60:	8442      	strh	r2, [r0, #34]	@ 0x22
 8012e62:	6282      	str	r2, [r0, #40]	@ 0x28
 8012e64:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
 8012e68:	85c1      	strh	r1, [r0, #46]	@ 0x2e
 8012e6a:	8601      	strh	r1, [r0, #48]	@ 0x30
 8012e6c:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
 8012e70:	6344      	str	r4, [r0, #52]	@ 0x34
 8012e72:	8701      	strh	r1, [r0, #56]	@ 0x38
 8012e74:	f880 2044 	strb.w	r2, [r0, #68]	@ 0x44
 8012e78:	f8a0 2046 	strh.w	r2, [r0, #70]	@ 0x46
 8012e7c:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8012e80:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 8012e84:	bd10      	pop	{r4, pc}
 8012e86:	bf00      	nop
 8012e88:	08028670 	.word	0x08028670
 8012e8c:	08027568 	.word	0x08027568

08012e90 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8012e90:	b510      	push	{r4, lr}
 8012e92:	6803      	ldr	r3, [r0, #0]
 8012e94:	460c      	mov	r4, r1
 8012e96:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8012e98:	4798      	blx	r3
 8012e9a:	1b03      	subs	r3, r0, r4
 8012e9c:	4258      	negs	r0, r3
 8012e9e:	4158      	adcs	r0, r3
 8012ea0:	bd10      	pop	{r4, pc}
	...

08012ea4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8012ea4:	4b01      	ldr	r3, [pc, #4]	@ (8012eac <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8012ea6:	6019      	str	r1, [r3, #0]
 8012ea8:	4770      	bx	lr
 8012eaa:	bf00      	nop
 8012eac:	24001a38 	.word	0x24001a38

08012eb0 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8012eb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012eb4:	4696      	mov	lr, r2
 8012eb6:	b097      	sub	sp, #92	@ 0x5c
 8012eb8:	4605      	mov	r5, r0
 8012eba:	4614      	mov	r4, r2
 8012ebc:	460e      	mov	r6, r1
 8012ebe:	461f      	mov	r7, r3
 8012ec0:	f10d 0c1c 	add.w	ip, sp, #28
 8012ec4:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 8012ec8:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 8012ecc:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 8012ed0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8012ed4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012ed8:	f8de 3000 	ldr.w	r3, [lr]
 8012edc:	f104 0e14 	add.w	lr, r4, #20
 8012ee0:	f8cc 3000 	str.w	r3, [ip]
 8012ee4:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 8012ee8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8012eec:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012ef0:	f8de 3000 	ldr.w	r3, [lr]
 8012ef4:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 8012ef8:	f8cc 3000 	str.w	r3, [ip]
 8012efc:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 8012f00:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8012f04:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012f08:	f8de 3000 	ldr.w	r3, [lr]
 8012f0c:	4631      	mov	r1, r6
 8012f0e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8012f10:	4628      	mov	r0, r5
 8012f12:	f8cc 3000 	str.w	r3, [ip]
 8012f16:	682b      	ldr	r3, [r5, #0]
 8012f18:	9201      	str	r2, [sp, #4]
 8012f1a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8012f1c:	f8cd 8008 	str.w	r8, [sp, #8]
 8012f20:	9200      	str	r2, [sp, #0]
 8012f22:	aa07      	add	r2, sp, #28
 8012f24:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8012f28:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 8012f2c:	463b      	mov	r3, r7
 8012f2e:	47d8      	blx	fp
 8012f30:	46a6      	mov	lr, r4
 8012f32:	f10d 0c1c 	add.w	ip, sp, #28
 8012f36:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8012f3a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012f3e:	f8de 3000 	ldr.w	r3, [lr]
 8012f42:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 8012f46:	343c      	adds	r4, #60	@ 0x3c
 8012f48:	f8cc 3000 	str.w	r3, [ip]
 8012f4c:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 8012f50:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8012f54:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012f58:	f8de 3000 	ldr.w	r3, [lr]
 8012f5c:	f8cc 3000 	str.w	r3, [ip]
 8012f60:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 8012f64:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8012f66:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012f6a:	6823      	ldr	r3, [r4, #0]
 8012f6c:	4631      	mov	r1, r6
 8012f6e:	4628      	mov	r0, r5
 8012f70:	f8cc 3000 	str.w	r3, [ip]
 8012f74:	682b      	ldr	r3, [r5, #0]
 8012f76:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8012f7a:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8012f7c:	f8cd 8008 	str.w	r8, [sp, #8]
 8012f80:	9201      	str	r2, [sp, #4]
 8012f82:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8012f84:	9200      	str	r2, [sp, #0]
 8012f86:	aa07      	add	r2, sp, #28
 8012f88:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 8012f8a:	463b      	mov	r3, r7
 8012f8c:	47a0      	blx	r4
 8012f8e:	b017      	add	sp, #92	@ 0x5c
 8012f90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012f94 <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8012f94:	2000      	movs	r0, #0
 8012f96:	4770      	bx	lr

08012f98 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8012f98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012f9c:	b08d      	sub	sp, #52	@ 0x34
 8012f9e:	4688      	mov	r8, r1
 8012fa0:	f8d3 c000 	ldr.w	ip, [r3]
 8012fa4:	9916      	ldr	r1, [sp, #88]	@ 0x58
 8012fa6:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 8012faa:	680f      	ldr	r7, [r1, #0]
 8012fac:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 8012fb0:	eba7 070c 	sub.w	r7, r7, ip
 8012fb4:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 8012fb8:	edd3 6a07 	vldr	s13, [r3, #28]
 8012fbc:	42bc      	cmp	r4, r7
 8012fbe:	9918      	ldr	r1, [sp, #96]	@ 0x60
 8012fc0:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 8012fc4:	bfa8      	it	ge
 8012fc6:	463c      	movge	r4, r7
 8012fc8:	f9b1 9000 	ldrsh.w	r9, [r1]
 8012fcc:	f9ba 1000 	ldrsh.w	r1, [sl]
 8012fd0:	ee07 4a90 	vmov	s15, r4
 8012fd4:	eb09 0e0c 	add.w	lr, r9, ip
 8012fd8:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 8012fdc:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8012fe0:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 8012fe4:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 8012fe8:	4571      	cmp	r1, lr
 8012fea:	ee25 4a04 	vmul.f32	s8, s10, s8
 8012fee:	ee65 4a24 	vmul.f32	s9, s10, s9
 8012ff2:	ee25 5a27 	vmul.f32	s10, s10, s15
 8012ff6:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 8012ffa:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8012ffe:	ee32 1a05 	vadd.f32	s2, s4, s10
 8013002:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8013006:	ee36 0a84 	vadd.f32	s0, s13, s8
 801300a:	ee61 1a87 	vmul.f32	s3, s3, s14
 801300e:	ee22 2a07 	vmul.f32	s4, s4, s14
 8013012:	f340 808c 	ble.w	801312e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x196>
 8013016:	eba1 060e 	sub.w	r6, r1, lr
 801301a:	fb96 f5f4 	sdiv	r5, r6, r4
 801301e:	ee07 5a10 	vmov	s14, r5
 8013022:	2d00      	cmp	r5, #0
 8013024:	fb04 6615 	mls	r6, r4, r5, r6
 8013028:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801302c:	eea7 0a04 	vfma.f32	s0, s14, s8
 8013030:	eee7 0a24 	vfma.f32	s1, s14, s9
 8013034:	eea7 1a05 	vfma.f32	s2, s14, s10
 8013038:	dd12      	ble.n	8013060 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xc8>
 801303a:	ee70 6a44 	vsub.f32	s13, s0, s8
 801303e:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8013042:	ee31 2a45 	vsub.f32	s4, s2, s10
 8013046:	eef5 6a40 	vcmp.f32	s13, #0.0
 801304a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801304e:	bf14      	ite	ne
 8013050:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8013054:	eeb0 7a67 	vmoveq.f32	s14, s15
 8013058:	ee61 1a87 	vmul.f32	s3, s3, s14
 801305c:	ee22 2a07 	vmul.f32	s4, s4, s14
 8013060:	fb05 f204 	mul.w	r2, r5, r4
 8013064:	1abf      	subs	r7, r7, r2
 8013066:	4494      	add	ip, r2
 8013068:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 801306c:	4411      	add	r1, r2
 801306e:	eb09 020c 	add.w	r2, r9, ip
 8013072:	b209      	sxth	r1, r1
 8013074:	443a      	add	r2, r7
 8013076:	428a      	cmp	r2, r1
 8013078:	bfc4      	itt	gt
 801307a:	eba1 0209 	subgt.w	r2, r1, r9
 801307e:	eba2 070c 	subgt.w	r7, r2, ip
 8013082:	2f00      	cmp	r7, #0
 8013084:	dd50      	ble.n	8013128 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x190>
 8013086:	fb97 f1f4 	sdiv	r1, r7, r4
 801308a:	fb04 7211 	mls	r2, r4, r1, r7
 801308e:	b90a      	cbnz	r2, 8013094 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 8013090:	3901      	subs	r1, #1
 8013092:	4622      	mov	r2, r4
 8013094:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8013098:	6840      	ldr	r0, [r0, #4]
 801309a:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 801309e:	44b6      	add	lr, r6
 80130a0:	f8d0 a000 	ldr.w	sl, [r0]
 80130a4:	2900      	cmp	r1, #0
 80130a6:	bfcc      	ite	gt
 80130a8:	46a1      	movgt	r9, r4
 80130aa:	4691      	movle	r9, r2
 80130ac:	900b      	str	r0, [sp, #44]	@ 0x2c
 80130ae:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 80130b0:	fb04 e505 	mla	r5, r4, r5, lr
 80130b4:	eef0 6a42 	vmov.f32	s13, s4
 80130b8:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 80130bc:	9008      	str	r0, [sp, #32]
 80130be:	eeb0 7a61 	vmov.f32	s14, s3
 80130c2:	9818      	ldr	r0, [sp, #96]	@ 0x60
 80130c4:	695b      	ldr	r3, [r3, #20]
 80130c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80130ca:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 80130ce:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80130d2:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 80130d4:	445b      	add	r3, fp
 80130d6:	9307      	str	r3, [sp, #28]
 80130d8:	ee16 3a90 	vmov	r3, s13
 80130dc:	e9cd 8505 	strd	r8, r5, [sp, #20]
 80130e0:	ee60 2aa3 	vmul.f32	s5, s1, s7
 80130e4:	ee21 3a23 	vmul.f32	s6, s2, s7
 80130e8:	ee72 7ae1 	vsub.f32	s15, s5, s3
 80130ec:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80130f0:	ee17 7a90 	vmov	r7, s15
 80130f4:	ee73 7a42 	vsub.f32	s15, s6, s4
 80130f8:	fb97 f7f4 	sdiv	r7, r7, r4
 80130fc:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8013100:	ee17 ca90 	vmov	ip, s15
 8013104:	fb9c fcf4 	sdiv	ip, ip, r4
 8013108:	fb0c 3306 	mla	r3, ip, r6, r3
 801310c:	9302      	str	r3, [sp, #8]
 801310e:	ee17 3a10 	vmov	r3, s14
 8013112:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8013116:	fb07 3706 	mla	r7, r7, r6, r3
 801311a:	eba9 0306 	sub.w	r3, r9, r6
 801311e:	e9cd 4700 	strd	r4, r7, [sp]
 8013122:	f8da 4008 	ldr.w	r4, [sl, #8]
 8013126:	47a0      	blx	r4
 8013128:	b00d      	add	sp, #52	@ 0x34
 801312a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801312e:	2500      	movs	r5, #0
 8013130:	462e      	mov	r6, r5
 8013132:	e799      	b.n	8013068 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd0>

08013134 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8013134:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013138:	b0db      	sub	sp, #364	@ 0x16c
 801313a:	461d      	mov	r5, r3
 801313c:	4614      	mov	r4, r2
 801313e:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 8013142:	910f      	str	r1, [sp, #60]	@ 0x3c
 8013144:	4629      	mov	r1, r5
 8013146:	930a      	str	r3, [sp, #40]	@ 0x28
 8013148:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 801314c:	9009      	str	r0, [sp, #36]	@ 0x24
 801314e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8013150:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 8013154:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 8013158:	9310      	str	r3, [sp, #64]	@ 0x40
 801315a:	6803      	ldr	r3, [r0, #0]
 801315c:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 801315e:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 8013162:	47b8      	blx	r7
 8013164:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013166:	6058      	str	r0, [r3, #4]
 8013168:	2800      	cmp	r0, #0
 801316a:	f000 83a1 	beq.w	80138b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801316e:	682b      	ldr	r3, [r5, #0]
 8013170:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 8013174:	ed94 7a02 	vldr	s14, [r4, #8]
 8013178:	9314      	str	r3, [sp, #80]	@ 0x50
 801317a:	686b      	ldr	r3, [r5, #4]
 801317c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8013180:	9315      	str	r3, [sp, #84]	@ 0x54
 8013182:	4bc1      	ldr	r3, [pc, #772]	@ (8013488 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8013184:	7819      	ldrb	r1, [r3, #0]
 8013186:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 801318a:	2900      	cmp	r1, #0
 801318c:	bf16      	itet	ne
 801318e:	4619      	movne	r1, r3
 8013190:	4611      	moveq	r1, r2
 8013192:	4613      	movne	r3, r2
 8013194:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013198:	9116      	str	r1, [sp, #88]	@ 0x58
 801319a:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 801319e:	f240 8387 	bls.w	80138b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80131a2:	ed94 7a07 	vldr	s14, [r4, #28]
 80131a6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80131aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80131ae:	f240 837f 	bls.w	80138b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80131b2:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 80131b6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80131ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80131be:	f240 8377 	bls.w	80138b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80131c2:	6822      	ldr	r2, [r4, #0]
 80131c4:	4bb1      	ldr	r3, [pc, #708]	@ (801348c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 80131c6:	429a      	cmp	r2, r3
 80131c8:	f2c0 8372 	blt.w	80138b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80131cc:	49b0      	ldr	r1, [pc, #704]	@ (8013490 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 80131ce:	6963      	ldr	r3, [r4, #20]
 80131d0:	428a      	cmp	r2, r1
 80131d2:	f300 836d 	bgt.w	80138b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80131d6:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 80131da:	48ae      	ldr	r0, [pc, #696]	@ (8013494 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 80131dc:	33ff      	adds	r3, #255	@ 0xff
 80131de:	4283      	cmp	r3, r0
 80131e0:	f200 8366 	bhi.w	80138b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80131e4:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 80131e6:	4dac      	ldr	r5, [pc, #688]	@ (8013498 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 80131e8:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 80131ec:	33ff      	adds	r3, #255	@ 0xff
 80131ee:	42ab      	cmp	r3, r5
 80131f0:	f200 835e 	bhi.w	80138b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80131f4:	6862      	ldr	r2, [r4, #4]
 80131f6:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 80131fa:	33ff      	adds	r3, #255	@ 0xff
 80131fc:	4283      	cmp	r3, r0
 80131fe:	f200 8357 	bhi.w	80138b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013202:	69a1      	ldr	r1, [r4, #24]
 8013204:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 8013208:	33ff      	adds	r3, #255	@ 0xff
 801320a:	4283      	cmp	r3, r0
 801320c:	f200 8350 	bhi.w	80138b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8013210:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8013212:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 8013216:	30ff      	adds	r0, #255	@ 0xff
 8013218:	42a8      	cmp	r0, r5
 801321a:	f200 8349 	bhi.w	80138b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801321e:	428a      	cmp	r2, r1
 8013220:	f280 8110 	bge.w	8013444 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8013224:	429a      	cmp	r2, r3
 8013226:	f300 8119 	bgt.w	801345c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 801322a:	4299      	cmp	r1, r3
 801322c:	f280 811d 	bge.w	801346a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8013230:	2502      	movs	r5, #2
 8013232:	2701      	movs	r7, #1
 8013234:	46a9      	mov	r9, r5
 8013236:	46b8      	mov	r8, r7
 8013238:	f04f 0a00 	mov.w	sl, #0
 801323c:	4621      	mov	r1, r4
 801323e:	a849      	add	r0, sp, #292	@ 0x124
 8013240:	f003 fd16 	bl	8016c70 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8013244:	4622      	mov	r2, r4
 8013246:	4653      	mov	r3, sl
 8013248:	a949      	add	r1, sp, #292	@ 0x124
 801324a:	f8cd 9000 	str.w	r9, [sp]
 801324e:	a819      	add	r0, sp, #100	@ 0x64
 8013250:	f003 fe3e 	bl	8016ed0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8013254:	4622      	mov	r2, r4
 8013256:	4653      	mov	r3, sl
 8013258:	a949      	add	r1, sp, #292	@ 0x124
 801325a:	f8cd 8000 	str.w	r8, [sp]
 801325e:	a829      	add	r0, sp, #164	@ 0xa4
 8013260:	f003 fe36 	bl	8016ed0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8013264:	4643      	mov	r3, r8
 8013266:	4622      	mov	r2, r4
 8013268:	a949      	add	r1, sp, #292	@ 0x124
 801326a:	f8cd 9000 	str.w	r9, [sp]
 801326e:	a839      	add	r0, sp, #228	@ 0xe4
 8013270:	f003 fe2e 	bl	8016ed0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8013274:	42af      	cmp	r7, r5
 8013276:	af12      	add	r7, sp, #72	@ 0x48
 8013278:	bfb7      	itett	lt
 801327a:	2300      	movlt	r3, #0
 801327c:	2301      	movge	r3, #1
 801327e:	ad29      	addlt	r5, sp, #164	@ 0xa4
 8013280:	ac19      	addlt	r4, sp, #100	@ 0x64
 8013282:	bfb1      	iteee	lt
 8013284:	930e      	strlt	r3, [sp, #56]	@ 0x38
 8013286:	ad19      	addge	r5, sp, #100	@ 0x64
 8013288:	930e      	strge	r3, [sp, #56]	@ 0x38
 801328a:	ac29      	addge	r4, sp, #164	@ 0xa4
 801328c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801328e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8013292:	e887 0003 	stmia.w	r7, {r0, r1}
 8013296:	b928      	cbnz	r0, 80132a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8013298:	4b80      	ldr	r3, [pc, #512]	@ (801349c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 801329a:	6818      	ldr	r0, [r3, #0]
 801329c:	6803      	ldr	r3, [r0, #0]
 801329e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80132a0:	4798      	blx	r3
 80132a2:	6038      	str	r0, [r7, #0]
 80132a4:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 80132a6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80132aa:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80132ae:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 80132b0:	930c      	str	r3, [sp, #48]	@ 0x30
 80132b2:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80132b4:	6963      	ldr	r3, [r4, #20]
 80132b6:	440b      	add	r3, r1
 80132b8:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80132bc:	4408      	add	r0, r1
 80132be:	b200      	sxth	r0, r0
 80132c0:	4283      	cmp	r3, r0
 80132c2:	900d      	str	r0, [sp, #52]	@ 0x34
 80132c4:	f280 80dd 	bge.w	8013482 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 80132c8:	428b      	cmp	r3, r1
 80132ca:	da08      	bge.n	80132de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80132cc:	2a00      	cmp	r2, #0
 80132ce:	dd06      	ble.n	80132de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80132d0:	1acb      	subs	r3, r1, r3
 80132d2:	429a      	cmp	r2, r3
 80132d4:	f2c0 80e4 	blt.w	80134a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 80132d8:	2b00      	cmp	r3, #0
 80132da:	f300 80e2 	bgt.w	80134a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 80132de:	6967      	ldr	r7, [r4, #20]
 80132e0:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 80132e4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80132e6:	443b      	add	r3, r7
 80132e8:	461f      	mov	r7, r3
 80132ea:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80132ec:	1bdf      	subs	r7, r3, r7
 80132ee:	4297      	cmp	r7, r2
 80132f0:	bfa8      	it	ge
 80132f2:	4617      	movge	r7, r2
 80132f4:	2f00      	cmp	r7, #0
 80132f6:	f340 8166 	ble.w	80135c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 80132fa:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 80132fc:	6829      	ldr	r1, [r5, #0]
 80132fe:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013302:	f9bb 3000 	ldrsh.w	r3, [fp]
 8013306:	4411      	add	r1, r2
 8013308:	6820      	ldr	r0, [r4, #0]
 801330a:	4299      	cmp	r1, r3
 801330c:	dd1a      	ble.n	8013344 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 801330e:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8013312:	4402      	add	r2, r0
 8013314:	440b      	add	r3, r1
 8013316:	b21b      	sxth	r3, r3
 8013318:	429a      	cmp	r2, r3
 801331a:	dc13      	bgt.n	8013344 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 801331c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801331e:	a912      	add	r1, sp, #72	@ 0x48
 8013320:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013322:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8013324:	681b      	ldr	r3, [r3, #0]
 8013326:	9206      	str	r2, [sp, #24]
 8013328:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801332a:	9500      	str	r5, [sp, #0]
 801332c:	9205      	str	r2, [sp, #20]
 801332e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8013330:	e9cd b203 	strd	fp, r2, [sp, #12]
 8013334:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 8013336:	e9cd 8201 	strd	r8, r2, [sp, #4]
 801333a:	aa49      	add	r2, sp, #292	@ 0x124
 801333c:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 8013340:	4623      	mov	r3, r4
 8013342:	47c8      	blx	r9
 8013344:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 8013348:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 801334c:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 8013350:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013354:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 8013358:	68a1      	ldr	r1, [r4, #8]
 801335a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801335e:	ed94 6a08 	vldr	s12, [r4, #32]
 8013362:	edd4 6a07 	vldr	s13, [r4, #28]
 8013366:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 801336a:	ee76 6a86 	vadd.f32	s13, s13, s12
 801336e:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8013372:	e9d4 2300 	ldrd	r2, r3, [r4]
 8013376:	edc4 6a07 	vstr	s13, [r4, #28]
 801337a:	441a      	add	r2, r3
 801337c:	6963      	ldr	r3, [r4, #20]
 801337e:	3301      	adds	r3, #1
 8013380:	6022      	str	r2, [r4, #0]
 8013382:	6163      	str	r3, [r4, #20]
 8013384:	69a3      	ldr	r3, [r4, #24]
 8013386:	3b01      	subs	r3, #1
 8013388:	61a3      	str	r3, [r4, #24]
 801338a:	6923      	ldr	r3, [r4, #16]
 801338c:	440b      	add	r3, r1
 801338e:	68e1      	ldr	r1, [r4, #12]
 8013390:	428b      	cmp	r3, r1
 8013392:	6123      	str	r3, [r4, #16]
 8013394:	db15      	blt.n	80133c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8013396:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 801339a:	3201      	adds	r2, #1
 801339c:	1a5b      	subs	r3, r3, r1
 801339e:	ee76 6a26 	vadd.f32	s13, s12, s13
 80133a2:	6022      	str	r2, [r4, #0]
 80133a4:	6123      	str	r3, [r4, #16]
 80133a6:	edc4 6a07 	vstr	s13, [r4, #28]
 80133aa:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 80133ae:	ee36 7a87 	vadd.f32	s14, s13, s14
 80133b2:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 80133b6:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 80133ba:	ee77 7a27 	vadd.f32	s15, s14, s15
 80133be:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 80133c2:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 80133c6:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 80133ca:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 80133ce:	ee37 7a27 	vadd.f32	s14, s14, s15
 80133d2:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 80133d6:	68a9      	ldr	r1, [r5, #8]
 80133d8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80133dc:	ed95 6a08 	vldr	s12, [r5, #32]
 80133e0:	edd5 6a07 	vldr	s13, [r5, #28]
 80133e4:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 80133e8:	ee76 6a86 	vadd.f32	s13, s13, s12
 80133ec:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 80133f0:	e9d5 2300 	ldrd	r2, r3, [r5]
 80133f4:	edc5 6a07 	vstr	s13, [r5, #28]
 80133f8:	441a      	add	r2, r3
 80133fa:	696b      	ldr	r3, [r5, #20]
 80133fc:	3301      	adds	r3, #1
 80133fe:	602a      	str	r2, [r5, #0]
 8013400:	616b      	str	r3, [r5, #20]
 8013402:	69ab      	ldr	r3, [r5, #24]
 8013404:	3b01      	subs	r3, #1
 8013406:	61ab      	str	r3, [r5, #24]
 8013408:	692b      	ldr	r3, [r5, #16]
 801340a:	440b      	add	r3, r1
 801340c:	68e9      	ldr	r1, [r5, #12]
 801340e:	428b      	cmp	r3, r1
 8013410:	612b      	str	r3, [r5, #16]
 8013412:	db15      	blt.n	8013440 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8013414:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 8013418:	3201      	adds	r2, #1
 801341a:	1a5b      	subs	r3, r3, r1
 801341c:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013420:	602a      	str	r2, [r5, #0]
 8013422:	612b      	str	r3, [r5, #16]
 8013424:	edc5 6a07 	vstr	s13, [r5, #28]
 8013428:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 801342c:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013430:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8013434:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 8013438:	ee77 7a27 	vadd.f32	s15, s14, s15
 801343c:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8013440:	3f01      	subs	r7, #1
 8013442:	e757      	b.n	80132f4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8013444:	4299      	cmp	r1, r3
 8013446:	dc13      	bgt.n	8013470 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8013448:	429a      	cmp	r2, r3
 801344a:	da14      	bge.n	8013476 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 801344c:	2502      	movs	r5, #2
 801344e:	2703      	movs	r7, #3
 8013450:	f04f 0800 	mov.w	r8, #0
 8013454:	46a9      	mov	r9, r5
 8013456:	f04f 0a01 	mov.w	sl, #1
 801345a:	e6ef      	b.n	801323c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 801345c:	2501      	movs	r5, #1
 801345e:	2700      	movs	r7, #0
 8013460:	46a9      	mov	r9, r5
 8013462:	46b8      	mov	r8, r7
 8013464:	f04f 0a02 	mov.w	sl, #2
 8013468:	e6e8      	b.n	801323c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 801346a:	2501      	movs	r5, #1
 801346c:	2702      	movs	r7, #2
 801346e:	e6e1      	b.n	8013234 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8013470:	2500      	movs	r5, #0
 8013472:	2701      	movs	r7, #1
 8013474:	e7f4      	b.n	8013460 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8013476:	2702      	movs	r7, #2
 8013478:	2503      	movs	r5, #3
 801347a:	f04f 0900 	mov.w	r9, #0
 801347e:	46b8      	mov	r8, r7
 8013480:	e7e9      	b.n	8013456 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8013482:	4613      	mov	r3, r2
 8013484:	e728      	b.n	80132d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8013486:	bf00      	nop
 8013488:	24001a28 	.word	0x24001a28
 801348c:	fffd8f01 	.word	0xfffd8f01
 8013490:	00027100 	.word	0x00027100
 8013494:	0004e1ff 	.word	0x0004e1ff
 8013498:	0004e1fe 	.word	0x0004e1fe
 801349c:	24001a30 	.word	0x24001a30
 80134a0:	4613      	mov	r3, r2
 80134a2:	992b      	ldr	r1, [sp, #172]	@ 0xac
 80134a4:	469e      	mov	lr, r3
 80134a6:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 80134a8:	469c      	mov	ip, r3
 80134aa:	9111      	str	r1, [sp, #68]	@ 0x44
 80134ac:	f04f 0900 	mov.w	r9, #0
 80134b0:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 80134b4:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 80134b8:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 80134bc:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 80134c0:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 80134c4:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 80134c8:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 80134cc:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 80134d0:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 80134d4:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 80134d8:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 80134dc:	f1bc 0f00 	cmp.w	ip, #0
 80134e0:	d147      	bne.n	8013572 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 80134e2:	eb03 0c07 	add.w	ip, r3, r7
 80134e6:	1ad7      	subs	r7, r2, r3
 80134e8:	f1b9 0f00 	cmp.w	r9, #0
 80134ec:	d009      	beq.n	8013502 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 80134ee:	9029      	str	r0, [sp, #164]	@ 0xa4
 80134f0:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 80134f4:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 80134f8:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 80134fc:	912d      	str	r1, [sp, #180]	@ 0xb4
 80134fe:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 8013502:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8013504:	f04f 0800 	mov.w	r8, #0
 8013508:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 801350c:	9111      	str	r1, [sp, #68]	@ 0x44
 801350e:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 8013512:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 8013516:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 801351a:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 801351e:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 8013522:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 8013526:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 801352a:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 801352e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 8013532:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 8013536:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 801353a:	f1be 0f00 	cmp.w	lr, #0
 801353e:	d031      	beq.n	80135a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8013540:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8013542:	4450      	add	r0, sl
 8013544:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8013548:	4431      	add	r1, r6
 801354a:	ee37 7a04 	vadd.f32	s14, s14, s8
 801354e:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8013552:	4549      	cmp	r1, r9
 8013554:	db08      	blt.n	8013568 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8013556:	ee77 7a85 	vadd.f32	s15, s15, s10
 801355a:	3001      	adds	r0, #1
 801355c:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8013560:	eba1 0109 	sub.w	r1, r1, r9
 8013564:	ee37 7a06 	vadd.f32	s14, s14, s12
 8013568:	f10e 3eff 	add.w	lr, lr, #4294967295
 801356c:	f04f 0801 	mov.w	r8, #1
 8013570:	e7e3      	b.n	801353a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8013572:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8013574:	4450      	add	r0, sl
 8013576:	ee37 7a24 	vadd.f32	s14, s14, s9
 801357a:	4431      	add	r1, r6
 801357c:	ee77 7a84 	vadd.f32	s15, s15, s8
 8013580:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8013584:	4541      	cmp	r1, r8
 8013586:	db08      	blt.n	801359a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8013588:	ee76 6a85 	vadd.f32	s13, s13, s10
 801358c:	3001      	adds	r0, #1
 801358e:	ee37 7a25 	vadd.f32	s14, s14, s11
 8013592:	eba1 0108 	sub.w	r1, r1, r8
 8013596:	ee77 7a86 	vadd.f32	s15, s15, s12
 801359a:	f10c 3cff 	add.w	ip, ip, #4294967295
 801359e:	f04f 0901 	mov.w	r9, #1
 80135a2:	e79b      	b.n	80134dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 80135a4:	449c      	add	ip, r3
 80135a6:	1aff      	subs	r7, r7, r3
 80135a8:	f1b8 0f00 	cmp.w	r8, #0
 80135ac:	d009      	beq.n	80135c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 80135ae:	9019      	str	r0, [sp, #100]	@ 0x64
 80135b0:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 80135b4:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 80135b8:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 80135bc:	911d      	str	r1, [sp, #116]	@ 0x74
 80135be:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 80135c2:	1ad2      	subs	r2, r2, r3
 80135c4:	e68b      	b.n	80132de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80135c6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80135c8:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 80135ca:	2b00      	cmp	r3, #0
 80135cc:	f000 80d1 	beq.w	8013772 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 80135d0:	ad19      	add	r5, sp, #100	@ 0x64
 80135d2:	ac39      	add	r4, sp, #228	@ 0xe4
 80135d4:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 80135d6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80135da:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80135de:	930c      	str	r3, [sp, #48]	@ 0x30
 80135e0:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80135e2:	6963      	ldr	r3, [r4, #20]
 80135e4:	440b      	add	r3, r1
 80135e6:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80135ea:	4408      	add	r0, r1
 80135ec:	b200      	sxth	r0, r0
 80135ee:	4283      	cmp	r3, r0
 80135f0:	900d      	str	r0, [sp, #52]	@ 0x34
 80135f2:	f280 80c1 	bge.w	8013778 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 80135f6:	428b      	cmp	r3, r1
 80135f8:	da08      	bge.n	801360c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80135fa:	2a00      	cmp	r2, #0
 80135fc:	dd06      	ble.n	801360c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80135fe:	1acb      	subs	r3, r1, r3
 8013600:	429a      	cmp	r2, r3
 8013602:	f2c0 80bb 	blt.w	801377c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8013606:	2b00      	cmp	r3, #0
 8013608:	f300 80b9 	bgt.w	801377e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 801360c:	6967      	ldr	r7, [r4, #20]
 801360e:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 8013612:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8013614:	443b      	add	r3, r7
 8013616:	461f      	mov	r7, r3
 8013618:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801361a:	1bdf      	subs	r7, r3, r7
 801361c:	4297      	cmp	r7, r2
 801361e:	bfa8      	it	ge
 8013620:	4617      	movge	r7, r2
 8013622:	2f00      	cmp	r7, #0
 8013624:	f340 813c 	ble.w	80138a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8013628:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 801362a:	6829      	ldr	r1, [r5, #0]
 801362c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013630:	f9bb 3000 	ldrsh.w	r3, [fp]
 8013634:	4411      	add	r1, r2
 8013636:	6820      	ldr	r0, [r4, #0]
 8013638:	4299      	cmp	r1, r3
 801363a:	dd1a      	ble.n	8013672 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 801363c:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8013640:	4402      	add	r2, r0
 8013642:	440b      	add	r3, r1
 8013644:	b21b      	sxth	r3, r3
 8013646:	429a      	cmp	r2, r3
 8013648:	dc13      	bgt.n	8013672 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 801364a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801364c:	a912      	add	r1, sp, #72	@ 0x48
 801364e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013650:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8013652:	681b      	ldr	r3, [r3, #0]
 8013654:	9206      	str	r2, [sp, #24]
 8013656:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8013658:	9500      	str	r5, [sp, #0]
 801365a:	9205      	str	r2, [sp, #20]
 801365c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801365e:	e9cd b203 	strd	fp, r2, [sp, #12]
 8013662:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 8013664:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8013668:	aa49      	add	r2, sp, #292	@ 0x124
 801366a:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 801366e:	4623      	mov	r3, r4
 8013670:	47c8      	blx	r9
 8013672:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 8013676:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 801367a:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 801367e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013682:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 8013686:	68a1      	ldr	r1, [r4, #8]
 8013688:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801368c:	ed94 6a08 	vldr	s12, [r4, #32]
 8013690:	edd4 6a07 	vldr	s13, [r4, #28]
 8013694:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8013698:	ee76 6a86 	vadd.f32	s13, s13, s12
 801369c:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 80136a0:	e9d4 2300 	ldrd	r2, r3, [r4]
 80136a4:	edc4 6a07 	vstr	s13, [r4, #28]
 80136a8:	441a      	add	r2, r3
 80136aa:	6963      	ldr	r3, [r4, #20]
 80136ac:	3301      	adds	r3, #1
 80136ae:	6022      	str	r2, [r4, #0]
 80136b0:	6163      	str	r3, [r4, #20]
 80136b2:	69a3      	ldr	r3, [r4, #24]
 80136b4:	3b01      	subs	r3, #1
 80136b6:	61a3      	str	r3, [r4, #24]
 80136b8:	6923      	ldr	r3, [r4, #16]
 80136ba:	440b      	add	r3, r1
 80136bc:	68e1      	ldr	r1, [r4, #12]
 80136be:	428b      	cmp	r3, r1
 80136c0:	6123      	str	r3, [r4, #16]
 80136c2:	db15      	blt.n	80136f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 80136c4:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 80136c8:	3201      	adds	r2, #1
 80136ca:	1a5b      	subs	r3, r3, r1
 80136cc:	ee76 6a26 	vadd.f32	s13, s12, s13
 80136d0:	6022      	str	r2, [r4, #0]
 80136d2:	6123      	str	r3, [r4, #16]
 80136d4:	edc4 6a07 	vstr	s13, [r4, #28]
 80136d8:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 80136dc:	ee36 7a87 	vadd.f32	s14, s13, s14
 80136e0:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 80136e4:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 80136e8:	ee77 7a27 	vadd.f32	s15, s14, s15
 80136ec:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 80136f0:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 80136f4:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 80136f8:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 80136fc:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013700:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 8013704:	68a9      	ldr	r1, [r5, #8]
 8013706:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801370a:	ed95 6a08 	vldr	s12, [r5, #32]
 801370e:	edd5 6a07 	vldr	s13, [r5, #28]
 8013712:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8013716:	ee76 6a86 	vadd.f32	s13, s13, s12
 801371a:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 801371e:	e9d5 2300 	ldrd	r2, r3, [r5]
 8013722:	edc5 6a07 	vstr	s13, [r5, #28]
 8013726:	441a      	add	r2, r3
 8013728:	696b      	ldr	r3, [r5, #20]
 801372a:	3301      	adds	r3, #1
 801372c:	602a      	str	r2, [r5, #0]
 801372e:	616b      	str	r3, [r5, #20]
 8013730:	69ab      	ldr	r3, [r5, #24]
 8013732:	3b01      	subs	r3, #1
 8013734:	61ab      	str	r3, [r5, #24]
 8013736:	692b      	ldr	r3, [r5, #16]
 8013738:	440b      	add	r3, r1
 801373a:	68e9      	ldr	r1, [r5, #12]
 801373c:	428b      	cmp	r3, r1
 801373e:	612b      	str	r3, [r5, #16]
 8013740:	db15      	blt.n	801376e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8013742:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 8013746:	3201      	adds	r2, #1
 8013748:	1a5b      	subs	r3, r3, r1
 801374a:	ee76 6a26 	vadd.f32	s13, s12, s13
 801374e:	602a      	str	r2, [r5, #0]
 8013750:	612b      	str	r3, [r5, #16]
 8013752:	edc5 6a07 	vstr	s13, [r5, #28]
 8013756:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 801375a:	ee36 7a87 	vadd.f32	s14, s13, s14
 801375e:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8013762:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 8013766:	ee77 7a27 	vadd.f32	s15, s14, s15
 801376a:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 801376e:	3f01      	subs	r7, #1
 8013770:	e757      	b.n	8013622 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8013772:	ad39      	add	r5, sp, #228	@ 0xe4
 8013774:	ac19      	add	r4, sp, #100	@ 0x64
 8013776:	e72d      	b.n	80135d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8013778:	4613      	mov	r3, r2
 801377a:	e744      	b.n	8013606 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 801377c:	4613      	mov	r3, r2
 801377e:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 8013780:	469e      	mov	lr, r3
 8013782:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 8013786:	461f      	mov	r7, r3
 8013788:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 801378c:	f04f 0900 	mov.w	r9, #0
 8013790:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 8013794:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 8013798:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 801379c:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 80137a0:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 80137a4:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 80137a6:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 80137aa:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 80137ae:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 80137b2:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 80137b6:	960e      	str	r6, [sp, #56]	@ 0x38
 80137b8:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 80137bc:	2f00      	cmp	r7, #0
 80137be:	d146      	bne.n	801384e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 80137c0:	449c      	add	ip, r3
 80137c2:	1ad7      	subs	r7, r2, r3
 80137c4:	f1b9 0f00 	cmp.w	r9, #0
 80137c8:	d009      	beq.n	80137de <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 80137ca:	9039      	str	r0, [sp, #228]	@ 0xe4
 80137cc:	913d      	str	r1, [sp, #244]	@ 0xf4
 80137ce:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 80137d2:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 80137d6:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 80137da:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 80137de:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 80137e0:	f04f 0800 	mov.w	r8, #0
 80137e4:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 80137e8:	910e      	str	r1, [sp, #56]	@ 0x38
 80137ea:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 80137ee:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 80137f2:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 80137f6:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 80137fa:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 80137fe:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 8013802:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 8013806:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 801380a:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 801380e:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 8013812:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 8013816:	f1be 0f00 	cmp.w	lr, #0
 801381a:	d030      	beq.n	801387e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 801381c:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 801381e:	4450      	add	r0, sl
 8013820:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8013824:	4431      	add	r1, r6
 8013826:	ee37 7a04 	vadd.f32	s14, s14, s8
 801382a:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801382e:	4549      	cmp	r1, r9
 8013830:	db08      	blt.n	8013844 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8013832:	ee77 7a85 	vadd.f32	s15, s15, s10
 8013836:	3001      	adds	r0, #1
 8013838:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801383c:	eba1 0109 	sub.w	r1, r1, r9
 8013840:	ee37 7a06 	vadd.f32	s14, s14, s12
 8013844:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013848:	f04f 0801 	mov.w	r8, #1
 801384c:	e7e3      	b.n	8013816 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 801384e:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 8013850:	4450      	add	r0, sl
 8013852:	ee37 7a24 	vadd.f32	s14, s14, s9
 8013856:	4431      	add	r1, r6
 8013858:	ee77 7a84 	vadd.f32	s15, s15, s8
 801385c:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8013860:	4541      	cmp	r1, r8
 8013862:	db08      	blt.n	8013876 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8013864:	ee76 6a85 	vadd.f32	s13, s13, s10
 8013868:	3001      	adds	r0, #1
 801386a:	ee37 7a25 	vadd.f32	s14, s14, s11
 801386e:	eba1 0108 	sub.w	r1, r1, r8
 8013872:	ee77 7a86 	vadd.f32	s15, s15, s12
 8013876:	3f01      	subs	r7, #1
 8013878:	f04f 0901 	mov.w	r9, #1
 801387c:	e79e      	b.n	80137bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 801387e:	449c      	add	ip, r3
 8013880:	1aff      	subs	r7, r7, r3
 8013882:	f1b8 0f00 	cmp.w	r8, #0
 8013886:	d009      	beq.n	801389c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8013888:	9019      	str	r0, [sp, #100]	@ 0x64
 801388a:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 801388e:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 8013892:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 8013896:	911d      	str	r1, [sp, #116]	@ 0x74
 8013898:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 801389c:	1ad2      	subs	r2, r2, r3
 801389e:	e6b5      	b.n	801360c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80138a0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80138a2:	681b      	ldr	r3, [r3, #0]
 80138a4:	b923      	cbnz	r3, 80138b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80138a6:	4b04      	ldr	r3, [pc, #16]	@ (80138b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 80138a8:	6818      	ldr	r0, [r3, #0]
 80138aa:	6803      	ldr	r3, [r0, #0]
 80138ac:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80138ae:	4798      	blx	r3
 80138b0:	b05b      	add	sp, #364	@ 0x16c
 80138b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80138b6:	bf00      	nop
 80138b8:	24001a30 	.word	0x24001a30

080138bc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 80138bc:	b570      	push	{r4, r5, r6, lr}
 80138be:	4604      	mov	r4, r0
 80138c0:	2500      	movs	r5, #0
 80138c2:	9805      	ldr	r0, [sp, #20]
 80138c4:	f89d 601c 	ldrb.w	r6, [sp, #28]
 80138c8:	6061      	str	r1, [r4, #4]
 80138ca:	8263      	strh	r3, [r4, #18]
 80138cc:	f89d 1010 	ldrb.w	r1, [sp, #16]
 80138d0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80138d4:	8025      	strh	r5, [r4, #0]
 80138d6:	7221      	strb	r1, [r4, #8]
 80138d8:	7266      	strb	r6, [r4, #9]
 80138da:	60e0      	str	r0, [r4, #12]
 80138dc:	8222      	strh	r2, [r4, #16]
 80138de:	82a3      	strh	r3, [r4, #20]
 80138e0:	82e5      	strh	r5, [r4, #22]
 80138e2:	8325      	strh	r5, [r4, #24]
 80138e4:	8365      	strh	r5, [r4, #26]
 80138e6:	83a5      	strh	r5, [r4, #28]
 80138e8:	83e5      	strh	r5, [r4, #30]
 80138ea:	8425      	strh	r5, [r4, #32]
 80138ec:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
 80138f0:	b32e      	cbz	r6, 801393e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80138f2:	6803      	ldr	r3, [r0, #0]
 80138f4:	695b      	ldr	r3, [r3, #20]
 80138f6:	4798      	blx	r3
 80138f8:	4606      	mov	r6, r0
 80138fa:	b300      	cbz	r0, 801393e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80138fc:	68e0      	ldr	r0, [r4, #12]
 80138fe:	4631      	mov	r1, r6
 8013900:	6803      	ldr	r3, [r0, #0]
 8013902:	68db      	ldr	r3, [r3, #12]
 8013904:	4798      	blx	r3
 8013906:	4605      	mov	r5, r0
 8013908:	b1c8      	cbz	r0, 801393e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801390a:	7b43      	ldrb	r3, [r0, #13]
 801390c:	7a82      	ldrb	r2, [r0, #10]
 801390e:	005b      	lsls	r3, r3, #1
 8013910:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8013914:	4313      	orrs	r3, r2
 8013916:	8423      	strh	r3, [r4, #32]
 8013918:	7a63      	ldrb	r3, [r4, #9]
 801391a:	2b06      	cmp	r3, #6
 801391c:	d10f      	bne.n	801393e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801391e:	68e0      	ldr	r0, [r4, #12]
 8013920:	462a      	mov	r2, r5
 8013922:	4631      	mov	r1, r6
 8013924:	6803      	ldr	r3, [r0, #0]
 8013926:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8013928:	4798      	blx	r3
 801392a:	7b6b      	ldrb	r3, [r5, #13]
 801392c:	005b      	lsls	r3, r3, #1
 801392e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8013932:	7aab      	ldrb	r3, [r5, #10]
 8013934:	4313      	orrs	r3, r2
 8013936:	4418      	add	r0, r3
 8013938:	8c23      	ldrh	r3, [r4, #32]
 801393a:	4418      	add	r0, r3
 801393c:	8420      	strh	r0, [r4, #32]
 801393e:	4620      	mov	r0, r4
 8013940:	bd70      	pop	{r4, r5, r6, pc}

08013942 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8013942:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013946:	2400      	movs	r4, #0
 8013948:	b085      	sub	sp, #20
 801394a:	4681      	mov	r9, r0
 801394c:	4688      	mov	r8, r1
 801394e:	4692      	mov	sl, r2
 8013950:	469b      	mov	fp, r3
 8013952:	4627      	mov	r7, r4
 8013954:	4625      	mov	r5, r4
 8013956:	4626      	mov	r6, r4
 8013958:	4554      	cmp	r4, sl
 801395a:	da2a      	bge.n	80139b2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801395c:	2300      	movs	r3, #0
 801395e:	9303      	str	r3, [sp, #12]
 8013960:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8013964:	429d      	cmp	r5, r3
 8013966:	d004      	beq.n	8013972 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8013968:	f242 030b 	movw	r3, #8203	@ 0x200b
 801396c:	429d      	cmp	r5, r3
 801396e:	bf18      	it	ne
 8013970:	462f      	movne	r7, r5
 8013972:	ab03      	add	r3, sp, #12
 8013974:	4642      	mov	r2, r8
 8013976:	4659      	mov	r1, fp
 8013978:	4648      	mov	r0, r9
 801397a:	f002 ff8f 	bl	801689c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801397e:	4605      	mov	r5, r0
 8013980:	b1b8      	cbz	r0, 80139b2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8013982:	280a      	cmp	r0, #10
 8013984:	d015      	beq.n	80139b2 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8013986:	9a03      	ldr	r2, [sp, #12]
 8013988:	b18a      	cbz	r2, 80139ae <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 801398a:	7b50      	ldrb	r0, [r2, #13]
 801398c:	4639      	mov	r1, r7
 801398e:	7a93      	ldrb	r3, [r2, #10]
 8013990:	0040      	lsls	r0, r0, #1
 8013992:	8895      	ldrh	r5, [r2, #4]
 8013994:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 8013998:	4303      	orrs	r3, r0
 801399a:	4640      	mov	r0, r8
 801399c:	9301      	str	r3, [sp, #4]
 801399e:	f8d8 3000 	ldr.w	r3, [r8]
 80139a2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80139a4:	4798      	blx	r3
 80139a6:	9b01      	ldr	r3, [sp, #4]
 80139a8:	4418      	add	r0, r3
 80139aa:	4406      	add	r6, r0
 80139ac:	b2b6      	uxth	r6, r6
 80139ae:	3401      	adds	r4, #1
 80139b0:	e7d2      	b.n	8013958 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 80139b2:	4630      	mov	r0, r6
 80139b4:	b005      	add	sp, #20
 80139b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080139ba <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 80139ba:	2a02      	cmp	r2, #2
 80139bc:	b530      	push	{r4, r5, lr}
 80139be:	d011      	beq.n	80139e4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 80139c0:	2a03      	cmp	r2, #3
 80139c2:	d01c      	beq.n	80139fe <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 80139c4:	2a01      	cmp	r2, #1
 80139c6:	d10c      	bne.n	80139e2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80139c8:	888b      	ldrh	r3, [r1, #4]
 80139ca:	8801      	ldrh	r1, [r0, #0]
 80139cc:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 80139d0:	1a5b      	subs	r3, r3, r1
 80139d2:	8844      	ldrh	r4, [r0, #2]
 80139d4:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80139d8:	1a9b      	subs	r3, r3, r2
 80139da:	8004      	strh	r4, [r0, #0]
 80139dc:	8081      	strh	r1, [r0, #4]
 80139de:	8043      	strh	r3, [r0, #2]
 80139e0:	80c2      	strh	r2, [r0, #6]
 80139e2:	bd30      	pop	{r4, r5, pc}
 80139e4:	88cb      	ldrh	r3, [r1, #6]
 80139e6:	8842      	ldrh	r2, [r0, #2]
 80139e8:	1a9b      	subs	r3, r3, r2
 80139ea:	88c2      	ldrh	r2, [r0, #6]
 80139ec:	1a9b      	subs	r3, r3, r2
 80139ee:	888a      	ldrh	r2, [r1, #4]
 80139f0:	8801      	ldrh	r1, [r0, #0]
 80139f2:	8043      	strh	r3, [r0, #2]
 80139f4:	1a52      	subs	r2, r2, r1
 80139f6:	8881      	ldrh	r1, [r0, #4]
 80139f8:	1a52      	subs	r2, r2, r1
 80139fa:	8002      	strh	r2, [r0, #0]
 80139fc:	e7f1      	b.n	80139e2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80139fe:	88cb      	ldrh	r3, [r1, #6]
 8013a00:	8841      	ldrh	r1, [r0, #2]
 8013a02:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8013a06:	1a5b      	subs	r3, r3, r1
 8013a08:	f9b0 5000 	ldrsh.w	r5, [r0]
 8013a0c:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8013a10:	1a9b      	subs	r3, r3, r2
 8013a12:	8045      	strh	r5, [r0, #2]
 8013a14:	8082      	strh	r2, [r0, #4]
 8013a16:	8003      	strh	r3, [r0, #0]
 8013a18:	80c4      	strh	r4, [r0, #6]
 8013a1a:	e7e2      	b.n	80139e2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08013a1c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8013a1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013a20:	b09f      	sub	sp, #124	@ 0x7c
 8013a22:	920f      	str	r2, [sp, #60]	@ 0x3c
 8013a24:	9312      	str	r3, [sp, #72]	@ 0x48
 8013a26:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8013a28:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8013a2a:	8812      	ldrh	r2, [r2, #0]
 8013a2c:	889b      	ldrh	r3, [r3, #4]
 8013a2e:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 8013a30:	4413      	add	r3, r2
 8013a32:	900e      	str	r0, [sp, #56]	@ 0x38
 8013a34:	6828      	ldr	r0, [r5, #0]
 8013a36:	b21b      	sxth	r3, r3
 8013a38:	9117      	str	r1, [sp, #92]	@ 0x5c
 8013a3a:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
 8013a3e:	9311      	str	r3, [sp, #68]	@ 0x44
 8013a40:	6803      	ldr	r3, [r0, #0]
 8013a42:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
 8013a46:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8013a48:	4798      	blx	r3
 8013a4a:	682b      	ldr	r3, [r5, #0]
 8013a4c:	9013      	str	r0, [sp, #76]	@ 0x4c
 8013a4e:	7b1a      	ldrb	r2, [r3, #12]
 8013a50:	7adb      	ldrb	r3, [r3, #11]
 8013a52:	9215      	str	r2, [sp, #84]	@ 0x54
 8013a54:	9316      	str	r3, [sp, #88]	@ 0x58
 8013a56:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
 8013a5a:	2c00      	cmp	r4, #0
 8013a5c:	d067      	beq.n	8013b2e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8013a5e:	7c2b      	ldrb	r3, [r5, #16]
 8013a60:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 8013a62:	2b06      	cmp	r3, #6
 8013a64:	bf14      	ite	ne
 8013a66:	2301      	movne	r3, #1
 8013a68:	2302      	moveq	r3, #2
 8013a6a:	4413      	add	r3, r2
 8013a6c:	f04f 0900 	mov.w	r9, #0
 8013a70:	9310      	str	r3, [sp, #64]	@ 0x40
 8013a72:	464c      	mov	r4, r9
 8013a74:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 8013a78:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
 8013a7c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8013a7e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8013a80:	4293      	cmp	r3, r2
 8013a82:	f280 808b 	bge.w	8013b9c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 8013a86:	2300      	movs	r3, #0
 8013a88:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
 8013a8c:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
 8013a90:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8013a94:	429c      	cmp	r4, r3
 8013a96:	d006      	beq.n	8013aa6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
 8013a98:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8013a9a:	f242 020b 	movw	r2, #8203	@ 0x200b
 8013a9e:	4294      	cmp	r4, r2
 8013aa0:	bf18      	it	ne
 8013aa2:	4623      	movne	r3, r4
 8013aa4:	930c      	str	r3, [sp, #48]	@ 0x30
 8013aa6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8013aa8:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 8013aaa:	682a      	ldr	r2, [r5, #0]
 8013aac:	428b      	cmp	r3, r1
 8013aae:	db40      	blt.n	8013b32 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8013ab0:	6813      	ldr	r3, [r2, #0]
 8013ab2:	4610      	mov	r0, r2
 8013ab4:	695b      	ldr	r3, [r3, #20]
 8013ab6:	4798      	blx	r3
 8013ab8:	4604      	mov	r4, r0
 8013aba:	6828      	ldr	r0, [r5, #0]
 8013abc:	aa1d      	add	r2, sp, #116	@ 0x74
 8013abe:	4621      	mov	r1, r4
 8013ac0:	6803      	ldr	r3, [r0, #0]
 8013ac2:	689f      	ldr	r7, [r3, #8]
 8013ac4:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 8013ac8:	47b8      	blx	r7
 8013aca:	901c      	str	r0, [sp, #112]	@ 0x70
 8013acc:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8013ad0:	429c      	cmp	r4, r3
 8013ad2:	f000 80eb 	beq.w	8013cac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013ad6:	f242 030b 	movw	r3, #8203	@ 0x200b
 8013ada:	429c      	cmp	r4, r3
 8013adc:	f000 80e6 	beq.w	8013cac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013ae0:	2c00      	cmp	r4, #0
 8013ae2:	f000 810d 	beq.w	8013d00 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
 8013ae6:	2c0a      	cmp	r4, #10
 8013ae8:	d05e      	beq.n	8013ba8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 8013aea:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8013aec:	b36a      	cbz	r2, 8013b4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8013aee:	8894      	ldrh	r4, [r2, #4]
 8013af0:	f1bb 0f00 	cmp.w	fp, #0
 8013af4:	d03a      	beq.n	8013b6c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 8013af6:	f892 900d 	ldrb.w	r9, [r2, #13]
 8013afa:	f1bb 0f01 	cmp.w	fp, #1
 8013afe:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8013b02:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 8013b06:	f892 900a 	ldrb.w	r9, [r2, #10]
 8013b0a:	ea49 0903 	orr.w	r9, r9, r3
 8013b0e:	d133      	bne.n	8013b78 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
 8013b10:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8013b12:	eba6 0609 	sub.w	r6, r6, r9
 8013b16:	2b00      	cmp	r3, #0
 8013b18:	d14d      	bne.n	8013bb6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 8013b1a:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8013b1c:	eb09 0306 	add.w	r3, r9, r6
 8013b20:	4413      	add	r3, r2
 8013b22:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8013b24:	f9b2 2000 	ldrsh.w	r2, [r2]
 8013b28:	4293      	cmp	r3, r2
 8013b2a:	da4e      	bge.n	8013bca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 8013b2c:	e036      	b.n	8013b9c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 8013b2e:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 8013b30:	e79c      	b.n	8013a6c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
 8013b32:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 8013b36:	4659      	mov	r1, fp
 8013b38:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 8013b3a:	9301      	str	r3, [sp, #4]
 8013b3c:	ab1d      	add	r3, sp, #116	@ 0x74
 8013b3e:	9300      	str	r3, [sp, #0]
 8013b40:	ab1c      	add	r3, sp, #112	@ 0x70
 8013b42:	f002 fef4 	bl	801692e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8013b46:	4604      	mov	r4, r0
 8013b48:	e7c0      	b.n	8013acc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8013b4a:	6828      	ldr	r0, [r5, #0]
 8013b4c:	6803      	ldr	r3, [r0, #0]
 8013b4e:	691b      	ldr	r3, [r3, #16]
 8013b50:	4798      	blx	r3
 8013b52:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8013b56:	4298      	cmp	r0, r3
 8013b58:	f000 80a8 	beq.w	8013cac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013b5c:	f242 030b 	movw	r3, #8203	@ 0x200b
 8013b60:	4298      	cmp	r0, r3
 8013b62:	f000 80a3 	beq.w	8013cac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013b66:	f1bb 0f00 	cmp.w	fp, #0
 8013b6a:	d100      	bne.n	8013b6e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8013b6c:	444e      	add	r6, r9
 8013b6e:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8013b70:	2a00      	cmp	r2, #0
 8013b72:	d1c0      	bne.n	8013af6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8013b74:	4691      	mov	r9, r2
 8013b76:	e099      	b.n	8013cac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013b78:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8013b7a:	2b00      	cmp	r3, #0
 8013b7c:	f000 80c2 	beq.w	8013d04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e8>
 8013b80:	f1bb 0f00 	cmp.w	fp, #0
 8013b84:	d117      	bne.n	8013bb6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 8013b86:	6828      	ldr	r0, [r5, #0]
 8013b88:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8013b8a:	6803      	ldr	r3, [r0, #0]
 8013b8c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8013b8e:	4798      	blx	r3
 8013b90:	4406      	add	r6, r0
 8013b92:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8013b94:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8013b96:	1af3      	subs	r3, r6, r3
 8013b98:	4293      	cmp	r3, r2
 8013b9a:	dd16      	ble.n	8013bca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 8013b9c:	2c00      	cmp	r4, #0
 8013b9e:	f000 80af 	beq.w	8013d00 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
 8013ba2:	2c0a      	cmp	r4, #10
 8013ba4:	f040 809d 	bne.w	8013ce2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
 8013ba8:	240a      	movs	r4, #10
 8013baa:	fab4 f084 	clz	r0, r4
 8013bae:	0940      	lsrs	r0, r0, #5
 8013bb0:	b01f      	add	sp, #124	@ 0x7c
 8013bb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013bb6:	6828      	ldr	r0, [r5, #0]
 8013bb8:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8013bba:	6803      	ldr	r3, [r0, #0]
 8013bbc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8013bbe:	4798      	blx	r3
 8013bc0:	f1bb 0f01 	cmp.w	fp, #1
 8013bc4:	eba6 0600 	sub.w	r6, r6, r0
 8013bc8:	d0a7      	beq.n	8013b1a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8013bca:	981c      	ldr	r0, [sp, #112]	@ 0x70
 8013bcc:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8013bce:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8013bd2:	f9b3 8000 	ldrsh.w	r8, [r3]
 8013bd6:	7b43      	ldrb	r3, [r0, #13]
 8013bd8:	4431      	add	r1, r6
 8013bda:	015b      	lsls	r3, r3, #5
 8013bdc:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8013be0:	7983      	ldrb	r3, [r0, #6]
 8013be2:	4313      	orrs	r3, r2
 8013be4:	440b      	add	r3, r1
 8013be6:	4543      	cmp	r3, r8
 8013be8:	db60      	blt.n	8013cac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013bea:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8013bec:	4299      	cmp	r1, r3
 8013bee:	da5d      	bge.n	8013cac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013bf0:	6828      	ldr	r0, [r5, #0]
 8013bf2:	45b0      	cmp	r8, r6
 8013bf4:	6803      	ldr	r3, [r0, #0]
 8013bf6:	bfcc      	ite	gt
 8013bf8:	eba8 0806 	subgt.w	r8, r8, r6
 8013bfc:	f04f 0800 	movle.w	r8, #0
 8013c00:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8013c02:	bfc8      	it	gt
 8013c04:	fa1f f888 	uxthgt.w	r8, r8
 8013c08:	4798      	blx	r3
 8013c0a:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8013c0c:	7b53      	ldrb	r3, [r2, #13]
 8013c0e:	00d9      	lsls	r1, r3, #3
 8013c10:	f401 7780 	and.w	r7, r1, #256	@ 0x100
 8013c14:	7a11      	ldrb	r1, [r2, #8]
 8013c16:	4339      	orrs	r1, r7
 8013c18:	065f      	lsls	r7, r3, #25
 8013c1a:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8013c1c:	bf48      	it	mi
 8013c1e:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
 8013c22:	4407      	add	r7, r0
 8013c24:	bf48      	it	mi
 8013c26:	b209      	sxthmi	r1, r1
 8013c28:	1a7f      	subs	r7, r7, r1
 8013c2a:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 8013c2c:	b2bf      	uxth	r7, r7
 8013c2e:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8013c32:	fa0f fa87 	sxth.w	sl, r7
 8013c36:	4551      	cmp	r1, sl
 8013c38:	dd3c      	ble.n	8013cb4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8013c3a:	011b      	lsls	r3, r3, #4
 8013c3c:	79d0      	ldrb	r0, [r2, #7]
 8013c3e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8013c42:	4303      	orrs	r3, r0
 8013c44:	449a      	add	sl, r3
 8013c46:	4551      	cmp	r1, sl
 8013c48:	dc30      	bgt.n	8013cac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013c4a:	1bcf      	subs	r7, r1, r7
 8013c4c:	468a      	mov	sl, r1
 8013c4e:	b23f      	sxth	r7, r7
 8013c50:	9219      	str	r2, [sp, #100]	@ 0x64
 8013c52:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8013c54:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8013c56:	6828      	ldr	r0, [r5, #0]
 8013c58:	2a00      	cmp	r2, #0
 8013c5a:	d12d      	bne.n	8013cb8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8013c5c:	9318      	str	r3, [sp, #96]	@ 0x60
 8013c5e:	b2bf      	uxth	r7, r7
 8013c60:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8013c62:	6819      	ldr	r1, [r3, #0]
 8013c64:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
 8013c66:	6801      	ldr	r1, [r0, #0]
 8013c68:	9314      	str	r3, [sp, #80]	@ 0x50
 8013c6a:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 8013c6c:	4788      	blx	r1
 8013c6e:	79a9      	ldrb	r1, [r5, #6]
 8013c70:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8013c72:	910b      	str	r1, [sp, #44]	@ 0x2c
 8013c74:	7ba9      	ldrb	r1, [r5, #14]
 8013c76:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8013c78:	910a      	str	r1, [sp, #40]	@ 0x28
 8013c7a:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
 8013c7e:	9109      	str	r1, [sp, #36]	@ 0x24
 8013c80:	68a9      	ldr	r1, [r5, #8]
 8013c82:	9306      	str	r3, [sp, #24]
 8013c84:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8013c86:	9205      	str	r2, [sp, #20]
 8013c88:	9304      	str	r3, [sp, #16]
 8013c8a:	f8cd a004 	str.w	sl, [sp, #4]
 8013c8e:	e9cd 8702 	strd	r8, r7, [sp, #8]
 8013c92:	44b0      	add	r8, r6
 8013c94:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 8013c96:	fa0f f388 	sxth.w	r3, r8
 8013c9a:	9300      	str	r3, [sp, #0]
 8013c9c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8013c9e:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8013ca2:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8013ca4:	681a      	ldr	r2, [r3, #0]
 8013ca6:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8013ca8:	685b      	ldr	r3, [r3, #4]
 8013caa:	47b8      	blx	r7
 8013cac:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8013cae:	3301      	adds	r3, #1
 8013cb0:	930d      	str	r3, [sp, #52]	@ 0x34
 8013cb2:	e6e3      	b.n	8013a7c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
 8013cb4:	2700      	movs	r7, #0
 8013cb6:	e7cb      	b.n	8013c50 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8013cb8:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8013cba:	f8d2 c008 	ldr.w	ip, [r2, #8]
 8013cbe:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8013cc0:	f8dc 1000 	ldr.w	r1, [ip]
 8013cc4:	e9cd 6204 	strd	r6, r2, [sp, #16]
 8013cc8:	79aa      	ldrb	r2, [r5, #6]
 8013cca:	9203      	str	r2, [sp, #12]
 8013ccc:	7baa      	ldrb	r2, [r5, #14]
 8013cce:	9202      	str	r2, [sp, #8]
 8013cd0:	68aa      	ldr	r2, [r5, #8]
 8013cd2:	e9cd 0200 	strd	r0, r2, [sp]
 8013cd6:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8013cd8:	4660      	mov	r0, ip
 8013cda:	688f      	ldr	r7, [r1, #8]
 8013cdc:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8013cde:	47b8      	blx	r7
 8013ce0:	e7e4      	b.n	8013cac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8013ce2:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8013ce4:	3501      	adds	r5, #1
 8013ce6:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 8013ce8:	429d      	cmp	r5, r3
 8013cea:	f6bf af5e 	bge.w	8013baa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 8013cee:	4659      	mov	r1, fp
 8013cf0:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 8013cf2:	f7fa ffc3 	bl	800ec7c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013cf6:	4604      	mov	r4, r0
 8013cf8:	b110      	cbz	r0, 8013d00 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e4>
 8013cfa:	280a      	cmp	r0, #10
 8013cfc:	d1f2      	bne.n	8013ce4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c8>
 8013cfe:	e753      	b.n	8013ba8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 8013d00:	2400      	movs	r4, #0
 8013d02:	e752      	b.n	8013baa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 8013d04:	f1bb 0f00 	cmp.w	fp, #0
 8013d08:	f43f af43 	beq.w	8013b92 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 8013d0c:	e75d      	b.n	8013bca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

08013d0e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8013d0e:	b530      	push	{r4, r5, lr}
 8013d10:	8ac4      	ldrh	r4, [r0, #22]
 8013d12:	8b45      	ldrh	r5, [r0, #26]
 8013d14:	8343      	strh	r3, [r0, #26]
 8013d16:	442c      	add	r4, r5
 8013d18:	1ae4      	subs	r4, r4, r3
 8013d1a:	8b83      	ldrh	r3, [r0, #28]
 8013d1c:	82c4      	strh	r4, [r0, #22]
 8013d1e:	8b04      	ldrh	r4, [r0, #24]
 8013d20:	4422      	add	r2, r4
 8013d22:	440c      	add	r4, r1
 8013d24:	1a59      	subs	r1, r3, r1
 8013d26:	83c2      	strh	r2, [r0, #30]
 8013d28:	8304      	strh	r4, [r0, #24]
 8013d2a:	8381      	strh	r1, [r0, #28]
 8013d2c:	bd30      	pop	{r4, r5, pc}

08013d2e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8013d2e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013d32:	4604      	mov	r4, r0
 8013d34:	8a47      	ldrh	r7, [r0, #18]
 8013d36:	68c0      	ldr	r0, [r0, #12]
 8013d38:	b085      	sub	sp, #20
 8013d3a:	6803      	ldr	r3, [r0, #0]
 8013d3c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013d3e:	4798      	blx	r3
 8013d40:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8013d44:	7a63      	ldrb	r3, [r4, #9]
 8013d46:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8013d4a:	3b01      	subs	r3, #1
 8013d4c:	42b7      	cmp	r7, r6
 8013d4e:	bfac      	ite	ge
 8013d50:	f04f 0900 	movge.w	r9, #0
 8013d54:	f04f 0901 	movlt.w	r9, #1
 8013d58:	2b05      	cmp	r3, #5
 8013d5a:	d804      	bhi.n	8013d66 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x38>
 8013d5c:	e8df f003 	tbb	[pc, r3]
 8013d60:	470f0854 	.word	0x470f0854
 8013d64:	4c4c      	.short	0x4c4c
 8013d66:	2500      	movs	r5, #0
 8013d68:	46a9      	mov	r9, r5
 8013d6a:	462e      	mov	r6, r5
 8013d6c:	462f      	mov	r7, r5
 8013d6e:	e00e      	b.n	8013d8e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8013d70:	42b7      	cmp	r7, r6
 8013d72:	f04f 0500 	mov.w	r5, #0
 8013d76:	bfb4      	ite	lt
 8013d78:	2600      	movlt	r6, #0
 8013d7a:	2601      	movge	r6, #1
 8013d7c:	e7f6      	b.n	8013d6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 8013d7e:	42b7      	cmp	r7, r6
 8013d80:	464d      	mov	r5, r9
 8013d82:	f04f 0900 	mov.w	r9, #0
 8013d86:	bfb4      	ite	lt
 8013d88:	2600      	movlt	r6, #0
 8013d8a:	2601      	movge	r6, #1
 8013d8c:	464f      	mov	r7, r9
 8013d8e:	f04f 0800 	mov.w	r8, #0
 8013d92:	f8a4 8016 	strh.w	r8, [r4, #22]
 8013d96:	f8a4 8018 	strh.w	r8, [r4, #24]
 8013d9a:	f8cd 8004 	str.w	r8, [sp, #4]
 8013d9e:	2300      	movs	r3, #0
 8013da0:	9303      	str	r3, [sp, #12]
 8013da2:	8823      	ldrh	r3, [r4, #0]
 8013da4:	2b20      	cmp	r3, #32
 8013da6:	d033      	beq.n	8013e10 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe2>
 8013da8:	f242 010b 	movw	r1, #8203	@ 0x200b
 8013dac:	1a5a      	subs	r2, r3, r1
 8013dae:	f1d2 0a00 	rsbs	sl, r2, #0
 8013db2:	eb4a 0a02 	adc.w	sl, sl, r2
 8013db6:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 8013dba:	4293      	cmp	r3, r2
 8013dbc:	d008      	beq.n	8013dd0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 8013dbe:	428b      	cmp	r3, r1
 8013dc0:	9a01      	ldr	r2, [sp, #4]
 8013dc2:	bf0e      	itee	eq
 8013dc4:	f04f 0a01 	moveq.w	sl, #1
 8013dc8:	461a      	movne	r2, r3
 8013dca:	f04f 0a00 	movne.w	sl, #0
 8013dce:	9201      	str	r2, [sp, #4]
 8013dd0:	ab03      	add	r3, sp, #12
 8013dd2:	68e2      	ldr	r2, [r4, #12]
 8013dd4:	7a21      	ldrb	r1, [r4, #8]
 8013dd6:	6860      	ldr	r0, [r4, #4]
 8013dd8:	f002 fd60 	bl	801689c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8013ddc:	8020      	strh	r0, [r4, #0]
 8013dde:	b9d8      	cbnz	r0, 8013e18 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xea>
 8013de0:	8ba2      	ldrh	r2, [r4, #28]
 8013de2:	2300      	movs	r3, #0
 8013de4:	4611      	mov	r1, r2
 8013de6:	4620      	mov	r0, r4
 8013de8:	f7ff ff91 	bl	8013d0e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8013dec:	e06e      	b.n	8013ecc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 8013dee:	2500      	movs	r5, #0
 8013df0:	2701      	movs	r7, #1
 8013df2:	46a9      	mov	r9, r5
 8013df4:	462e      	mov	r6, r5
 8013df6:	e7ca      	b.n	8013d8e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8013df8:	42b7      	cmp	r7, r6
 8013dfa:	f04f 0500 	mov.w	r5, #0
 8013dfe:	bfb4      	ite	lt
 8013e00:	2700      	movlt	r7, #0
 8013e02:	2701      	movge	r7, #1
 8013e04:	462e      	mov	r6, r5
 8013e06:	e7c2      	b.n	8013d8e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8013e08:	2500      	movs	r5, #0
 8013e0a:	2601      	movs	r6, #1
 8013e0c:	46a9      	mov	r9, r5
 8013e0e:	e7ad      	b.n	8013d6c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3e>
 8013e10:	9301      	str	r3, [sp, #4]
 8013e12:	f04f 0a01 	mov.w	sl, #1
 8013e16:	e7db      	b.n	8013dd0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa2>
 8013e18:	8b63      	ldrh	r3, [r4, #26]
 8013e1a:	280a      	cmp	r0, #10
 8013e1c:	f103 0301 	add.w	r3, r3, #1
 8013e20:	8363      	strh	r3, [r4, #26]
 8013e22:	d0dd      	beq.n	8013de0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb2>
 8013e24:	9a03      	ldr	r2, [sp, #12]
 8013e26:	bb62      	cbnz	r2, 8013e82 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x154>
 8013e28:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8013e2c:	4298      	cmp	r0, r3
 8013e2e:	d003      	beq.n	8013e38 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 8013e30:	f242 030b 	movw	r3, #8203	@ 0x200b
 8013e34:	4298      	cmp	r0, r3
 8013e36:	d1b2      	bne.n	8013d9e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013e38:	8823      	ldrh	r3, [r4, #0]
 8013e3a:	8ba1      	ldrh	r1, [r4, #28]
 8013e3c:	2b20      	cmp	r3, #32
 8013e3e:	d003      	beq.n	8013e48 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11a>
 8013e40:	f242 000b 	movw	r0, #8203	@ 0x200b
 8013e44:	4283      	cmp	r3, r0
 8013e46:	d131      	bne.n	8013eac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x17e>
 8013e48:	f1ba 0f00 	cmp.w	sl, #0
 8013e4c:	bf0a      	itet	eq
 8013e4e:	4688      	moveq	r8, r1
 8013e50:	4650      	movne	r0, sl
 8013e52:	2001      	moveq	r0, #1
 8013e54:	440a      	add	r2, r1
 8013e56:	8b23      	ldrh	r3, [r4, #24]
 8013e58:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8013e5c:	b292      	uxth	r2, r2
 8013e5e:	83a2      	strh	r2, [r4, #28]
 8013e60:	4413      	add	r3, r2
 8013e62:	f1b9 0f00 	cmp.w	r9, #0
 8013e66:	d102      	bne.n	8013e6e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x140>
 8013e68:	2d00      	cmp	r5, #0
 8013e6a:	d042      	beq.n	8013ef2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c4>
 8013e6c:	b300      	cbz	r0, 8013eb0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x182>
 8013e6e:	8c21      	ldrh	r1, [r4, #32]
 8013e70:	4419      	add	r1, r3
 8013e72:	458c      	cmp	ip, r1
 8013e74:	da37      	bge.n	8013ee6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 8013e76:	8ae1      	ldrh	r1, [r4, #22]
 8013e78:	2900      	cmp	r1, #0
 8013e7a:	d034      	beq.n	8013ee6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1b8>
 8013e7c:	4563      	cmp	r3, ip
 8013e7e:	dd8e      	ble.n	8013d9e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013e80:	e01d      	b.n	8013ebe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x190>
 8013e82:	8893      	ldrh	r3, [r2, #4]
 8013e84:	9901      	ldr	r1, [sp, #4]
 8013e86:	8023      	strh	r3, [r4, #0]
 8013e88:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8013e8c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8013e90:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
 8013e94:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8013e98:	ea4b 0b00 	orr.w	fp, fp, r0
 8013e9c:	68e0      	ldr	r0, [r4, #12]
 8013e9e:	6803      	ldr	r3, [r0, #0]
 8013ea0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8013ea2:	4798      	blx	r3
 8013ea4:	eb0b 0200 	add.w	r2, fp, r0
 8013ea8:	b292      	uxth	r2, r2
 8013eaa:	e7c5      	b.n	8013e38 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10a>
 8013eac:	2000      	movs	r0, #0
 8013eae:	e7d1      	b.n	8013e54 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x126>
 8013eb0:	4563      	cmp	r3, ip
 8013eb2:	f77f af74 	ble.w	8013d9e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013eb6:	8ae3      	ldrh	r3, [r4, #22]
 8013eb8:	2b00      	cmp	r3, #0
 8013eba:	f43f af70 	beq.w	8013d9e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013ebe:	2301      	movs	r3, #1
 8013ec0:	8c22      	ldrh	r2, [r4, #32]
 8013ec2:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 8013ec6:	8be3      	ldrh	r3, [r4, #30]
 8013ec8:	4413      	add	r3, r2
 8013eca:	83e3      	strh	r3, [r4, #30]
 8013ecc:	68e0      	ldr	r0, [r4, #12]
 8013ece:	6803      	ldr	r3, [r0, #0]
 8013ed0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013ed2:	4798      	blx	r3
 8013ed4:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8013ed8:	4418      	add	r0, r3
 8013eda:	8a63      	ldrh	r3, [r4, #18]
 8013edc:	1a18      	subs	r0, r3, r0
 8013ede:	8260      	strh	r0, [r4, #18]
 8013ee0:	b005      	add	sp, #20
 8013ee2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013ee6:	2300      	movs	r3, #0
 8013ee8:	4611      	mov	r1, r2
 8013eea:	4620      	mov	r0, r4
 8013eec:	f7ff ff0f 	bl	8013d0e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8013ef0:	e755      	b.n	8013d9e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013ef2:	4563      	cmp	r3, ip
 8013ef4:	dd14      	ble.n	8013f20 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f2>
 8013ef6:	b117      	cbz	r7, 8013efe <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d0>
 8013ef8:	2301      	movs	r3, #1
 8013efa:	460a      	mov	r2, r1
 8013efc:	e772      	b.n	8013de4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb6>
 8013efe:	2e00      	cmp	r6, #0
 8013f00:	f43f af4d 	beq.w	8013d9e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013f04:	2800      	cmp	r0, #0
 8013f06:	f47f af4a 	bne.w	8013d9e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013f0a:	f1ba 0f00 	cmp.w	sl, #0
 8013f0e:	d002      	beq.n	8013f16 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1e8>
 8013f10:	2301      	movs	r3, #1
 8013f12:	4642      	mov	r2, r8
 8013f14:	e767      	b.n	8013de6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 8013f16:	8ae3      	ldrh	r3, [r4, #22]
 8013f18:	2b00      	cmp	r3, #0
 8013f1a:	f43f af40 	beq.w	8013d9e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013f1e:	e7d5      	b.n	8013ecc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x19e>
 8013f20:	2800      	cmp	r0, #0
 8013f22:	f47f af3c 	bne.w	8013d9e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013f26:	f1ba 0f00 	cmp.w	sl, #0
 8013f2a:	f43f af38 	beq.w	8013d9e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013f2e:	2301      	movs	r3, #1
 8013f30:	4642      	mov	r2, r8
 8013f32:	e7da      	b.n	8013eea <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1bc>

08013f34 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8013f34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013f38:	b0e3      	sub	sp, #396	@ 0x18c
 8013f3a:	461c      	mov	r4, r3
 8013f3c:	4683      	mov	fp, r0
 8013f3e:	4688      	mov	r8, r1
 8013f40:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
 8013f42:	2b00      	cmp	r3, #0
 8013f44:	f000 8112 	beq.w	801416c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013f48:	6823      	ldr	r3, [r4, #0]
 8013f4a:	2b00      	cmp	r3, #0
 8013f4c:	f000 810e 	beq.w	801416c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013f50:	7ba3      	ldrb	r3, [r4, #14]
 8013f52:	2b00      	cmp	r3, #0
 8013f54:	f000 810a 	beq.w	801416c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013f58:	ad0a      	add	r5, sp, #40	@ 0x28
 8013f5a:	6810      	ldr	r0, [r2, #0]
 8013f5c:	6851      	ldr	r1, [r2, #4]
 8013f5e:	462b      	mov	r3, r5
 8013f60:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8013f64:	c303      	stmia	r3!, {r0, r1}
 8013f66:	2100      	movs	r1, #0
 8013f68:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8013f6c:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8013f70:	4628      	mov	r0, r5
 8013f72:	910c      	str	r1, [sp, #48]	@ 0x30
 8013f74:	a90c      	add	r1, sp, #48	@ 0x30
 8013f76:	79a2      	ldrb	r2, [r4, #6]
 8013f78:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8013f7c:	f7ff fd1d 	bl	80139ba <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8013f80:	a90c      	add	r1, sp, #48	@ 0x30
 8013f82:	79a2      	ldrb	r2, [r4, #6]
 8013f84:	4608      	mov	r0, r1
 8013f86:	f7ff fd18 	bl	80139ba <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8013f8a:	a817      	add	r0, sp, #92	@ 0x5c
 8013f8c:	f002 f93e 	bl	801620c <_ZN8touchgfx12TextProviderC1Ev>
 8013f90:	6820      	ldr	r0, [r4, #0]
 8013f92:	6803      	ldr	r3, [r0, #0]
 8013f94:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8013f96:	4798      	blx	r3
 8013f98:	4606      	mov	r6, r0
 8013f9a:	6820      	ldr	r0, [r4, #0]
 8013f9c:	6803      	ldr	r3, [r0, #0]
 8013f9e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8013fa0:	4798      	blx	r3
 8013fa2:	4633      	mov	r3, r6
 8013fa4:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 8013fa6:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 8013fa8:	9000      	str	r0, [sp, #0]
 8013faa:	a817      	add	r0, sp, #92	@ 0x5c
 8013fac:	f002 f981 	bl	80162b2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013fb0:	6820      	ldr	r0, [r4, #0]
 8013fb2:	f894 a004 	ldrb.w	sl, [r4, #4]
 8013fb6:	6803      	ldr	r3, [r0, #0]
 8013fb8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013fba:	4798      	blx	r3
 8013fbc:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8013fc0:	6823      	ldr	r3, [r4, #0]
 8013fc2:	4607      	mov	r7, r0
 8013fc4:	4406      	add	r6, r0
 8013fc6:	a830      	add	r0, sp, #192	@ 0xc0
 8013fc8:	f893 9009 	ldrb.w	r9, [r3, #9]
 8013fcc:	f002 f91e 	bl	801620c <_ZN8touchgfx12TextProviderC1Ev>
 8013fd0:	7c23      	ldrb	r3, [r4, #16]
 8013fd2:	b17b      	cbz	r3, 8013ff4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8013fd4:	6820      	ldr	r0, [r4, #0]
 8013fd6:	6803      	ldr	r3, [r0, #0]
 8013fd8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8013fda:	4798      	blx	r3
 8013fdc:	9009      	str	r0, [sp, #36]	@ 0x24
 8013fde:	6820      	ldr	r0, [r4, #0]
 8013fe0:	6802      	ldr	r2, [r0, #0]
 8013fe2:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8013fe4:	4790      	blx	r2
 8013fe6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013fe8:	9000      	str	r0, [sp, #0]
 8013fea:	a830      	add	r0, sp, #192	@ 0xc0
 8013fec:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 8013fee:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 8013ff0:	f002 f95f 	bl	80162b2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013ff4:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8013ff8:	a80e      	add	r0, sp, #56	@ 0x38
 8013ffa:	7be2      	ldrb	r2, [r4, #15]
 8013ffc:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 8014000:	1a8a      	subs	r2, r1, r2
 8014002:	7c21      	ldrb	r1, [r4, #16]
 8014004:	9103      	str	r1, [sp, #12]
 8014006:	b292      	uxth	r2, r2
 8014008:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 801400c:	9102      	str	r1, [sp, #8]
 801400e:	6821      	ldr	r1, [r4, #0]
 8014010:	9101      	str	r1, [sp, #4]
 8014012:	7961      	ldrb	r1, [r4, #5]
 8014014:	9100      	str	r1, [sp, #0]
 8014016:	a930      	add	r1, sp, #192	@ 0xc0
 8014018:	f7ff fc50 	bl	80138bc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801401c:	2e00      	cmp	r6, #0
 801401e:	dc5b      	bgt.n	80140d8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8014020:	af17      	add	r7, sp, #92	@ 0x5c
 8014022:	f04f 0900 	mov.w	r9, #0
 8014026:	7c23      	ldrb	r3, [r4, #16]
 8014028:	2b00      	cmp	r3, #0
 801402a:	f000 80b1 	beq.w	8014190 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 801402e:	a80e      	add	r0, sp, #56	@ 0x38
 8014030:	f7ff fe7d 	bl	8013d2e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8014034:	f1ba 0f00 	cmp.w	sl, #0
 8014038:	f000 80a5 	beq.w	8014186 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801403c:	7c23      	ldrb	r3, [r4, #16]
 801403e:	2264      	movs	r2, #100	@ 0x64
 8014040:	4639      	mov	r1, r7
 8014042:	a849      	add	r0, sp, #292	@ 0x124
 8014044:	9309      	str	r3, [sp, #36]	@ 0x24
 8014046:	f011 ffcc 	bl	8025fe2 <memcpy>
 801404a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801404c:	2b00      	cmp	r3, #0
 801404e:	f000 80a7 	beq.w	80141a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8014052:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
 8014056:	7922      	ldrb	r2, [r4, #4]
 8014058:	2a01      	cmp	r2, #1
 801405a:	f040 808a 	bne.w	8014172 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 801405e:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 8014062:	1ac0      	subs	r0, r0, r3
 8014064:	2302      	movs	r3, #2
 8014066:	fb90 f0f3 	sdiv	r0, r0, r3
 801406a:	b200      	sxth	r0, r0
 801406c:	7c23      	ldrb	r3, [r4, #16]
 801406e:	2b00      	cmp	r3, #0
 8014070:	f000 808b 	beq.w	801418a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8014074:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
 8014078:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
 801407c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8014080:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8014084:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8014088:	2100      	movs	r1, #0
 801408a:	4410      	add	r0, r2
 801408c:	4642      	mov	r2, r8
 801408e:	b200      	sxth	r0, r0
 8014090:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8014094:	9000      	str	r0, [sp, #0]
 8014096:	4658      	mov	r0, fp
 8014098:	e9cd 5401 	strd	r5, r4, [sp, #4]
 801409c:	f7ff fcbe 	bl	8013a1c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 80140a0:	2800      	cmp	r0, #0
 80140a2:	d163      	bne.n	801416c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80140a4:	b2b2      	uxth	r2, r6
 80140a6:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 80140aa:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 80140ae:	4413      	add	r3, r2
 80140b0:	1a8a      	subs	r2, r1, r2
 80140b2:	b21b      	sxth	r3, r3
 80140b4:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 80140b8:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
 80140bc:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80140c0:	2a00      	cmp	r2, #0
 80140c2:	d153      	bne.n	801416c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80140c4:	6822      	ldr	r2, [r4, #0]
 80140c6:	8869      	ldrh	r1, [r5, #2]
 80140c8:	7a12      	ldrb	r2, [r2, #8]
 80140ca:	1a9b      	subs	r3, r3, r2
 80140cc:	88ea      	ldrh	r2, [r5, #6]
 80140ce:	440a      	add	r2, r1
 80140d0:	b212      	sxth	r2, r2
 80140d2:	4293      	cmp	r3, r2
 80140d4:	dda7      	ble.n	8014026 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 80140d6:	e049      	b.n	801416c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80140d8:	7c23      	ldrb	r3, [r4, #16]
 80140da:	444f      	add	r7, r9
 80140dc:	b1c3      	cbz	r3, 8014110 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 80140de:	f64f 79ff 	movw	r9, #65535	@ 0xffff
 80140e2:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 80140e6:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80140ea:	443b      	add	r3, r7
 80140ec:	4293      	cmp	r3, r2
 80140ee:	da97      	bge.n	8014020 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 80140f0:	a80e      	add	r0, sp, #56	@ 0x38
 80140f2:	f7ff fe1c 	bl	8013d2e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80140f6:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
 80140fa:	3b01      	subs	r3, #1
 80140fc:	b29b      	uxth	r3, r3
 80140fe:	454b      	cmp	r3, r9
 8014100:	9309      	str	r3, [sp, #36]	@ 0x24
 8014102:	d021      	beq.n	8014148 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8014104:	7961      	ldrb	r1, [r4, #5]
 8014106:	a817      	add	r0, sp, #92	@ 0x5c
 8014108:	f7fa fdb8 	bl	800ec7c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801410c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801410e:	e7f4      	b.n	80140fa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8014110:	fa1f f986 	uxth.w	r9, r6
 8014114:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8014118:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801411c:	443b      	add	r3, r7
 801411e:	4293      	cmp	r3, r2
 8014120:	f6bf af7e 	bge.w	8014020 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8014124:	a817      	add	r0, sp, #92	@ 0x5c
 8014126:	f002 fc85 	bl	8016a34 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801412a:	b1f8      	cbz	r0, 801416c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 801412c:	280a      	cmp	r0, #10
 801412e:	d1f1      	bne.n	8014114 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8014130:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8014134:	444b      	add	r3, r9
 8014136:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801413a:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 801413e:	eba3 0309 	sub.w	r3, r3, r9
 8014142:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8014146:	e7e5      	b.n	8014114 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8014148:	b2b3      	uxth	r3, r6
 801414a:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 801414e:	441a      	add	r2, r3
 8014150:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8014154:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 8014158:	1ad3      	subs	r3, r2, r3
 801415a:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801415e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8014162:	b11b      	cbz	r3, 801416c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8014164:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
 8014168:	2b00      	cmp	r3, #0
 801416a:	d0ba      	beq.n	80140e2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 801416c:	b063      	add	sp, #396	@ 0x18c
 801416e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014172:	2a02      	cmp	r2, #2
 8014174:	d105      	bne.n	8014182 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8014176:	7be2      	ldrb	r2, [r4, #15]
 8014178:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 801417c:	1a80      	subs	r0, r0, r2
 801417e:	1ac0      	subs	r0, r0, r3
 8014180:	e773      	b.n	801406a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8014182:	2000      	movs	r0, #0
 8014184:	e772      	b.n	801406c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8014186:	7be0      	ldrb	r0, [r4, #15]
 8014188:	e770      	b.n	801406c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801418a:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 801418e:	e773      	b.n	8014078 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8014190:	f1ba 0f00 	cmp.w	sl, #0
 8014194:	d0f7      	beq.n	8014186 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8014196:	2264      	movs	r2, #100	@ 0x64
 8014198:	4639      	mov	r1, r7
 801419a:	a849      	add	r0, sp, #292	@ 0x124
 801419c:	f011 ff21 	bl	8025fe2 <memcpy>
 80141a0:	2300      	movs	r3, #0
 80141a2:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 80141a6:	6821      	ldr	r1, [r4, #0]
 80141a8:	a849      	add	r0, sp, #292	@ 0x124
 80141aa:	f7ff fbca 	bl	8013942 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80141ae:	b203      	sxth	r3, r0
 80141b0:	e751      	b.n	8014056 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

080141b2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 80141b2:	2b03      	cmp	r3, #3
 80141b4:	d818      	bhi.n	80141e8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 80141b6:	e8df f003 	tbb	[pc, r3]
 80141ba:	0602      	.short	0x0602
 80141bc:	130d      	.short	0x130d
 80141be:	f9b0 2000 	ldrsh.w	r2, [r0]
 80141c2:	1850      	adds	r0, r2, r1
 80141c4:	4770      	bx	lr
 80141c6:	8803      	ldrh	r3, [r0, #0]
 80141c8:	8880      	ldrh	r0, [r0, #4]
 80141ca:	4418      	add	r0, r3
 80141cc:	b200      	sxth	r0, r0
 80141ce:	1a80      	subs	r0, r0, r2
 80141d0:	3801      	subs	r0, #1
 80141d2:	4770      	bx	lr
 80141d4:	8803      	ldrh	r3, [r0, #0]
 80141d6:	8880      	ldrh	r0, [r0, #4]
 80141d8:	4418      	add	r0, r3
 80141da:	b200      	sxth	r0, r0
 80141dc:	1a40      	subs	r0, r0, r1
 80141de:	e7f7      	b.n	80141d0 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 80141e0:	f9b0 0000 	ldrsh.w	r0, [r0]
 80141e4:	4410      	add	r0, r2
 80141e6:	4770      	bx	lr
 80141e8:	2000      	movs	r0, #0
 80141ea:	4770      	bx	lr

080141ec <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 80141ec:	2b03      	cmp	r3, #3
 80141ee:	d817      	bhi.n	8014220 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 80141f0:	e8df f003 	tbb	[pc, r3]
 80141f4:	10090602 	.word	0x10090602
 80141f8:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80141fc:	1850      	adds	r0, r2, r1
 80141fe:	4770      	bx	lr
 8014200:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8014204:	e7fa      	b.n	80141fc <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8014206:	8843      	ldrh	r3, [r0, #2]
 8014208:	88c0      	ldrh	r0, [r0, #6]
 801420a:	4418      	add	r0, r3
 801420c:	b200      	sxth	r0, r0
 801420e:	1a80      	subs	r0, r0, r2
 8014210:	3801      	subs	r0, #1
 8014212:	4770      	bx	lr
 8014214:	8843      	ldrh	r3, [r0, #2]
 8014216:	88c0      	ldrh	r0, [r0, #6]
 8014218:	4418      	add	r0, r3
 801421a:	b200      	sxth	r0, r0
 801421c:	1a40      	subs	r0, r0, r1
 801421e:	e7f7      	b.n	8014210 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8014220:	2000      	movs	r0, #0
 8014222:	4770      	bx	lr

08014224 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8014224:	4b01      	ldr	r3, [pc, #4]	@ (801422c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8014226:	2200      	movs	r2, #0
 8014228:	601a      	str	r2, [r3, #0]
 801422a:	4770      	bx	lr
 801422c:	24001a38 	.word	0x24001a38

08014230 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8014230:	4603      	mov	r3, r0
 8014232:	b1c8      	cbz	r0, 8014268 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8014234:	0c02      	lsrs	r2, r0, #16
 8014236:	0412      	lsls	r2, r2, #16
 8014238:	b9a2      	cbnz	r2, 8014264 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801423a:	0403      	lsls	r3, r0, #16
 801423c:	2010      	movs	r0, #16
 801423e:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 8014242:	bf04      	itt	eq
 8014244:	021b      	lsleq	r3, r3, #8
 8014246:	3008      	addeq	r0, #8
 8014248:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 801424c:	bf04      	itt	eq
 801424e:	011b      	lsleq	r3, r3, #4
 8014250:	3004      	addeq	r0, #4
 8014252:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 8014256:	bf04      	itt	eq
 8014258:	009b      	lsleq	r3, r3, #2
 801425a:	3002      	addeq	r0, #2
 801425c:	2b00      	cmp	r3, #0
 801425e:	db04      	blt.n	801426a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8014260:	3001      	adds	r0, #1
 8014262:	4770      	bx	lr
 8014264:	2000      	movs	r0, #0
 8014266:	e7ea      	b.n	801423e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8014268:	2020      	movs	r0, #32
 801426a:	4770      	bx	lr

0801426c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 801426c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014270:	b087      	sub	sp, #28
 8014272:	460d      	mov	r5, r1
 8014274:	4616      	mov	r6, r2
 8014276:	4698      	mov	r8, r3
 8014278:	4601      	mov	r1, r0
 801427a:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 801427e:	b120      	cbz	r0, 801428a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8014280:	b11a      	cbz	r2, 801428a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8014282:	2d1f      	cmp	r5, #31
 8014284:	d801      	bhi.n	801428a <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8014286:	2b1f      	cmp	r3, #31
 8014288:	d904      	bls.n	8014294 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 801428a:	2000      	movs	r0, #0
 801428c:	6038      	str	r0, [r7, #0]
 801428e:	b007      	add	sp, #28
 8014290:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014294:	b97d      	cbnz	r5, 80142b6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8014296:	b143      	cbz	r3, 80142aa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8014298:	4602      	mov	r2, r0
 801429a:	462b      	mov	r3, r5
 801429c:	4641      	mov	r1, r8
 801429e:	4630      	mov	r0, r6
 80142a0:	e9cd 4700 	strd	r4, r7, [sp]
 80142a4:	f7ff ffe2 	bl	801426c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80142a8:	e7f1      	b.n	801428e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80142aa:	f04f 33ff 	mov.w	r3, #4294967295
 80142ae:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 80142b2:	603b      	str	r3, [r7, #0]
 80142b4:	e7eb      	b.n	801428e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80142b6:	fa32 fa05 	lsrs.w	sl, r2, r5
 80142ba:	d106      	bne.n	80142ca <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 80142bc:	4346      	muls	r6, r0
 80142be:	fbb6 f0f4 	udiv	r0, r6, r4
 80142c2:	fb04 6610 	mls	r6, r4, r0, r6
 80142c6:	603e      	str	r6, [r7, #0]
 80142c8:	e7e1      	b.n	801428e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 80142ca:	2201      	movs	r2, #1
 80142cc:	fa00 fb05 	lsl.w	fp, r0, r5
 80142d0:	40aa      	lsls	r2, r5
 80142d2:	fbbb f9f4 	udiv	r9, fp, r4
 80142d6:	3a01      	subs	r2, #1
 80142d8:	fb0a f309 	mul.w	r3, sl, r9
 80142dc:	fb04 b919 	mls	r9, r4, r9, fp
 80142e0:	4016      	ands	r6, r2
 80142e2:	9303      	str	r3, [sp, #12]
 80142e4:	4630      	mov	r0, r6
 80142e6:	f7ff ffa3 	bl	8014230 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80142ea:	462b      	mov	r3, r5
 80142ec:	460a      	mov	r2, r1
 80142ee:	4601      	mov	r1, r0
 80142f0:	4630      	mov	r0, r6
 80142f2:	e9cd 4700 	strd	r4, r7, [sp]
 80142f6:	f7ff ffb9 	bl	801426c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80142fa:	4606      	mov	r6, r0
 80142fc:	4648      	mov	r0, r9
 80142fe:	eb05 0108 	add.w	r1, r5, r8
 8014302:	f7ff ff95 	bl	8014230 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014306:	ab05      	add	r3, sp, #20
 8014308:	464a      	mov	r2, r9
 801430a:	e9cd 4300 	strd	r4, r3, [sp]
 801430e:	4603      	mov	r3, r0
 8014310:	4650      	mov	r0, sl
 8014312:	f7ff ffab 	bl	801426c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014316:	6839      	ldr	r1, [r7, #0]
 8014318:	9a05      	ldr	r2, [sp, #20]
 801431a:	9b03      	ldr	r3, [sp, #12]
 801431c:	4411      	add	r1, r2
 801431e:	fbb1 f2f4 	udiv	r2, r1, r4
 8014322:	18d3      	adds	r3, r2, r3
 8014324:	fb04 1412 	mls	r4, r4, r2, r1
 8014328:	441e      	add	r6, r3
 801432a:	603c      	str	r4, [r7, #0]
 801432c:	4430      	add	r0, r6
 801432e:	e7ae      	b.n	801428e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08014330 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8014330:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014334:	b085      	sub	sp, #20
 8014336:	f1b0 0900 	subs.w	r9, r0, #0
 801433a:	461d      	mov	r5, r3
 801433c:	4617      	mov	r7, r2
 801433e:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8014340:	bfbb      	ittet	lt
 8014342:	f1c9 0900 	rsblt	r9, r9, #0
 8014346:	f04f 36ff 	movlt.w	r6, #4294967295
 801434a:	2601      	movge	r6, #1
 801434c:	6823      	ldrlt	r3, [r4, #0]
 801434e:	bfbc      	itt	lt
 8014350:	425b      	neglt	r3, r3
 8014352:	6023      	strlt	r3, [r4, #0]
 8014354:	2a00      	cmp	r2, #0
 8014356:	da04      	bge.n	8014362 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8014358:	6823      	ldr	r3, [r4, #0]
 801435a:	4257      	negs	r7, r2
 801435c:	4276      	negs	r6, r6
 801435e:	425b      	negs	r3, r3
 8014360:	6023      	str	r3, [r4, #0]
 8014362:	2d00      	cmp	r5, #0
 8014364:	4638      	mov	r0, r7
 8014366:	bfba      	itte	lt
 8014368:	426d      	neglt	r5, r5
 801436a:	f04f 38ff 	movlt.w	r8, #4294967295
 801436e:	f04f 0801 	movge.w	r8, #1
 8014372:	f7ff ff5d 	bl	8014230 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8014376:	ab03      	add	r3, sp, #12
 8014378:	463a      	mov	r2, r7
 801437a:	e9cd 5300 	strd	r5, r3, [sp]
 801437e:	4603      	mov	r3, r0
 8014380:	4648      	mov	r0, r9
 8014382:	f7ff ff73 	bl	801426c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8014386:	6823      	ldr	r3, [r4, #0]
 8014388:	9a03      	ldr	r2, [sp, #12]
 801438a:	4546      	cmp	r6, r8
 801438c:	441a      	add	r2, r3
 801438e:	fb92 f3f5 	sdiv	r3, r2, r5
 8014392:	4418      	add	r0, r3
 8014394:	fb05 2313 	mls	r3, r5, r3, r2
 8014398:	bf18      	it	ne
 801439a:	4240      	negne	r0, r0
 801439c:	1c72      	adds	r2, r6, #1
 801439e:	6023      	str	r3, [r4, #0]
 80143a0:	d105      	bne.n	80143ae <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 80143a2:	2b00      	cmp	r3, #0
 80143a4:	f1c3 0200 	rsb	r2, r3, #0
 80143a8:	db0b      	blt.n	80143c2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 80143aa:	6022      	str	r2, [r4, #0]
 80143ac:	e006      	b.n	80143bc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80143ae:	2e01      	cmp	r6, #1
 80143b0:	d104      	bne.n	80143bc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80143b2:	2b00      	cmp	r3, #0
 80143b4:	da02      	bge.n	80143bc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80143b6:	442b      	add	r3, r5
 80143b8:	3801      	subs	r0, #1
 80143ba:	6023      	str	r3, [r4, #0]
 80143bc:	b005      	add	sp, #20
 80143be:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80143c2:	3801      	subs	r0, #1
 80143c4:	1b52      	subs	r2, r2, r5
 80143c6:	e7f0      	b.n	80143aa <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

080143c8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 80143c8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80143cc:	4c1c      	ldr	r4, [pc, #112]	@ (8014440 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 80143ce:	4605      	mov	r5, r0
 80143d0:	6807      	ldr	r7, [r0, #0]
 80143d2:	69a3      	ldr	r3, [r4, #24]
 80143d4:	b92b      	cbnz	r3, 80143e2 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 80143d6:	6840      	ldr	r0, [r0, #4]
 80143d8:	e9c5 7000 	strd	r7, r0, [r5]
 80143dc:	b004      	add	sp, #16
 80143de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80143e2:	f04f 0802 	mov.w	r8, #2
 80143e6:	68a2      	ldr	r2, [r4, #8]
 80143e8:	ae04      	add	r6, sp, #16
 80143ea:	6820      	ldr	r0, [r4, #0]
 80143ec:	fb93 f1f8 	sdiv	r1, r3, r8
 80143f0:	440a      	add	r2, r1
 80143f2:	69e1      	ldr	r1, [r4, #28]
 80143f4:	f846 2d04 	str.w	r2, [r6, #-4]!
 80143f8:	463a      	mov	r2, r7
 80143fa:	9600      	str	r6, [sp, #0]
 80143fc:	f7ff ff98 	bl	8014330 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014400:	69a3      	ldr	r3, [r4, #24]
 8014402:	4607      	mov	r7, r0
 8014404:	686a      	ldr	r2, [r5, #4]
 8014406:	6a21      	ldr	r1, [r4, #32]
 8014408:	9600      	str	r6, [sp, #0]
 801440a:	6860      	ldr	r0, [r4, #4]
 801440c:	f7ff ff90 	bl	8014330 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8014410:	69a3      	ldr	r3, [r4, #24]
 8014412:	6962      	ldr	r2, [r4, #20]
 8014414:	4407      	add	r7, r0
 8014416:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8014418:	9600      	str	r6, [sp, #0]
 801441a:	68e0      	ldr	r0, [r4, #12]
 801441c:	fb93 f8f8 	sdiv	r8, r3, r8
 8014420:	4442      	add	r2, r8
 8014422:	9203      	str	r2, [sp, #12]
 8014424:	682a      	ldr	r2, [r5, #0]
 8014426:	f7ff ff83 	bl	8014330 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801442a:	4680      	mov	r8, r0
 801442c:	9600      	str	r6, [sp, #0]
 801442e:	69a3      	ldr	r3, [r4, #24]
 8014430:	686a      	ldr	r2, [r5, #4]
 8014432:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 8014434:	6920      	ldr	r0, [r4, #16]
 8014436:	f7ff ff7b 	bl	8014330 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801443a:	4440      	add	r0, r8
 801443c:	e7cc      	b.n	80143d8 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 801443e:	bf00      	nop
 8014440:	24001a3c 	.word	0x24001a3c

08014444 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8014444:	4b07      	ldr	r3, [pc, #28]	@ (8014464 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8014446:	781b      	ldrb	r3, [r3, #0]
 8014448:	2b01      	cmp	r3, #1
 801444a:	d109      	bne.n	8014460 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 801444c:	f9b1 3000 	ldrsh.w	r3, [r1]
 8014450:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014454:	8003      	strh	r3, [r0, #0]
 8014456:	4b04      	ldr	r3, [pc, #16]	@ (8014468 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8014458:	881b      	ldrh	r3, [r3, #0]
 801445a:	3b01      	subs	r3, #1
 801445c:	1a9b      	subs	r3, r3, r2
 801445e:	800b      	strh	r3, [r1, #0]
 8014460:	4770      	bx	lr
 8014462:	bf00      	nop
 8014464:	24001a28 	.word	0x24001a28
 8014468:	24001a24 	.word	0x24001a24

0801446c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 801446c:	4b07      	ldr	r3, [pc, #28]	@ (801448c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 801446e:	b510      	push	{r4, lr}
 8014470:	781b      	ldrb	r3, [r3, #0]
 8014472:	2b01      	cmp	r3, #1
 8014474:	d108      	bne.n	8014488 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8014476:	4b06      	ldr	r3, [pc, #24]	@ (8014490 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8014478:	880c      	ldrh	r4, [r1, #0]
 801447a:	881b      	ldrh	r3, [r3, #0]
 801447c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8014480:	3b01      	subs	r3, #1
 8014482:	1b1b      	subs	r3, r3, r4
 8014484:	8003      	strh	r3, [r0, #0]
 8014486:	800a      	strh	r2, [r1, #0]
 8014488:	bd10      	pop	{r4, pc}
 801448a:	bf00      	nop
 801448c:	24001a28 	.word	0x24001a28
 8014490:	24001a24 	.word	0x24001a24

08014494 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8014494:	4b0a      	ldr	r3, [pc, #40]	@ (80144c0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8014496:	b510      	push	{r4, lr}
 8014498:	781b      	ldrb	r3, [r3, #0]
 801449a:	2b01      	cmp	r3, #1
 801449c:	d10e      	bne.n	80144bc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801449e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80144a2:	8843      	ldrh	r3, [r0, #2]
 80144a4:	f9b0 4000 	ldrsh.w	r4, [r0]
 80144a8:	18ca      	adds	r2, r1, r3
 80144aa:	4b06      	ldr	r3, [pc, #24]	@ (80144c4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 80144ac:	8044      	strh	r4, [r0, #2]
 80144ae:	881b      	ldrh	r3, [r3, #0]
 80144b0:	1a9b      	subs	r3, r3, r2
 80144b2:	8003      	strh	r3, [r0, #0]
 80144b4:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80144b8:	8081      	strh	r1, [r0, #4]
 80144ba:	80c3      	strh	r3, [r0, #6]
 80144bc:	bd10      	pop	{r4, pc}
 80144be:	bf00      	nop
 80144c0:	24001a28 	.word	0x24001a28
 80144c4:	24001a24 	.word	0x24001a24

080144c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 80144c8:	4b08      	ldr	r3, [pc, #32]	@ (80144ec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 80144ca:	781b      	ldrb	r3, [r3, #0]
 80144cc:	2b01      	cmp	r3, #1
 80144ce:	d10c      	bne.n	80144ea <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 80144d0:	8803      	ldrh	r3, [r0, #0]
 80144d2:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 80144d6:	8842      	ldrh	r2, [r0, #2]
 80144d8:	8002      	strh	r2, [r0, #0]
 80144da:	185a      	adds	r2, r3, r1
 80144dc:	4b04      	ldr	r3, [pc, #16]	@ (80144f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 80144de:	881b      	ldrh	r3, [r3, #0]
 80144e0:	1a9b      	subs	r3, r3, r2
 80144e2:	8043      	strh	r3, [r0, #2]
 80144e4:	88c3      	ldrh	r3, [r0, #6]
 80144e6:	80c1      	strh	r1, [r0, #6]
 80144e8:	8083      	strh	r3, [r0, #4]
 80144ea:	4770      	bx	lr
 80144ec:	24001a28 	.word	0x24001a28
 80144f0:	24001a24 	.word	0x24001a24

080144f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 80144f4:	4b07      	ldr	r3, [pc, #28]	@ (8014514 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 80144f6:	b510      	push	{r4, lr}
 80144f8:	781b      	ldrb	r3, [r3, #0]
 80144fa:	2b01      	cmp	r3, #1
 80144fc:	d108      	bne.n	8014510 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 80144fe:	f9b1 3000 	ldrsh.w	r3, [r1]
 8014502:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014506:	8003      	strh	r3, [r0, #0]
 8014508:	8893      	ldrh	r3, [r2, #4]
 801450a:	3b01      	subs	r3, #1
 801450c:	1b1b      	subs	r3, r3, r4
 801450e:	800b      	strh	r3, [r1, #0]
 8014510:	bd10      	pop	{r4, pc}
 8014512:	bf00      	nop
 8014514:	24001a28 	.word	0x24001a28

08014518 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8014518:	4b0a      	ldr	r3, [pc, #40]	@ (8014544 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 801451a:	460a      	mov	r2, r1
 801451c:	b510      	push	{r4, lr}
 801451e:	781b      	ldrb	r3, [r3, #0]
 8014520:	2b01      	cmp	r3, #1
 8014522:	d10d      	bne.n	8014540 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8014524:	8881      	ldrh	r1, [r0, #4]
 8014526:	8803      	ldrh	r3, [r0, #0]
 8014528:	440b      	add	r3, r1
 801452a:	4601      	mov	r1, r0
 801452c:	3b01      	subs	r3, #1
 801452e:	f821 3b02 	strh.w	r3, [r1], #2
 8014532:	f7ff ffdf 	bl	80144f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8014536:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801453a:	88c2      	ldrh	r2, [r0, #6]
 801453c:	80c3      	strh	r3, [r0, #6]
 801453e:	8082      	strh	r2, [r0, #4]
 8014540:	bd10      	pop	{r4, pc}
 8014542:	bf00      	nop
 8014544:	24001a28 	.word	0x24001a28

08014548 <_ZN8touchgfx11Application13requestRedrawEv>:
 8014548:	4b06      	ldr	r3, [pc, #24]	@ (8014564 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 801454a:	2100      	movs	r1, #0
 801454c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014550:	4b05      	ldr	r3, [pc, #20]	@ (8014568 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8014552:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 8014556:	f9b3 3000 	ldrsh.w	r3, [r3]
 801455a:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 801455e:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 8014562:	4770      	bx	lr
 8014564:	24001a24 	.word	0x24001a24
 8014568:	24001a26 	.word	0x24001a26

0801456c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 801456c:	4b03      	ldr	r3, [pc, #12]	@ (801457c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 801456e:	6818      	ldr	r0, [r3, #0]
 8014570:	b110      	cbz	r0, 8014578 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8014572:	6803      	ldr	r3, [r0, #0]
 8014574:	699b      	ldr	r3, [r3, #24]
 8014576:	4718      	bx	r3
 8014578:	4770      	bx	lr
 801457a:	bf00      	nop
 801457c:	24001a6c 	.word	0x24001a6c

08014580 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8014580:	4770      	bx	lr
	...

08014584 <_ZN8touchgfx11Application4drawEv>:
 8014584:	4b09      	ldr	r3, [pc, #36]	@ (80145ac <_ZN8touchgfx11Application4drawEv+0x28>)
 8014586:	b507      	push	{r0, r1, r2, lr}
 8014588:	f9b3 2000 	ldrsh.w	r2, [r3]
 801458c:	2100      	movs	r1, #0
 801458e:	4b08      	ldr	r3, [pc, #32]	@ (80145b0 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8014590:	9100      	str	r1, [sp, #0]
 8014592:	4669      	mov	r1, sp
 8014594:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014598:	f8ad 2004 	strh.w	r2, [sp, #4]
 801459c:	f8ad 3006 	strh.w	r3, [sp, #6]
 80145a0:	6803      	ldr	r3, [r0, #0]
 80145a2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80145a4:	4798      	blx	r3
 80145a6:	b003      	add	sp, #12
 80145a8:	f85d fb04 	ldr.w	pc, [sp], #4
 80145ac:	24001a24 	.word	0x24001a24
 80145b0:	24001a26 	.word	0x24001a26

080145b4 <_ZN8touchgfx11Application10invalidateEv>:
 80145b4:	4b09      	ldr	r3, [pc, #36]	@ (80145dc <_ZN8touchgfx11Application10invalidateEv+0x28>)
 80145b6:	b082      	sub	sp, #8
 80145b8:	2100      	movs	r1, #0
 80145ba:	f9b3 2000 	ldrsh.w	r2, [r3]
 80145be:	4b08      	ldr	r3, [pc, #32]	@ (80145e0 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 80145c0:	f8ad 2004 	strh.w	r2, [sp, #4]
 80145c4:	aa02      	add	r2, sp, #8
 80145c6:	f9b3 3000 	ldrsh.w	r3, [r3]
 80145ca:	9100      	str	r1, [sp, #0]
 80145cc:	f8ad 3006 	strh.w	r3, [sp, #6]
 80145d0:	6803      	ldr	r3, [r0, #0]
 80145d2:	e912 0006 	ldmdb	r2, {r1, r2}
 80145d6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80145d8:	b002      	add	sp, #8
 80145da:	4718      	bx	r3
 80145dc:	24001a24 	.word	0x24001a24
 80145e0:	24001a26 	.word	0x24001a26

080145e4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 80145e4:	4b03      	ldr	r3, [pc, #12]	@ (80145f4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 80145e6:	6818      	ldr	r0, [r3, #0]
 80145e8:	b110      	cbz	r0, 80145f0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 80145ea:	6803      	ldr	r3, [r0, #0]
 80145ec:	69db      	ldr	r3, [r3, #28]
 80145ee:	4718      	bx	r3
 80145f0:	4770      	bx	lr
 80145f2:	bf00      	nop
 80145f4:	24001a6c 	.word	0x24001a6c

080145f8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 80145f8:	4b03      	ldr	r3, [pc, #12]	@ (8014608 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 80145fa:	6818      	ldr	r0, [r3, #0]
 80145fc:	b110      	cbz	r0, 8014604 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 80145fe:	6803      	ldr	r3, [r0, #0]
 8014600:	6a1b      	ldr	r3, [r3, #32]
 8014602:	4718      	bx	r3
 8014604:	4770      	bx	lr
 8014606:	bf00      	nop
 8014608:	24001a6c 	.word	0x24001a6c

0801460c <_ZN8touchgfx11Application16clearCachedAreasEv>:
 801460c:	2300      	movs	r3, #0
 801460e:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 8014612:	4770      	bx	lr

08014614 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8014614:	4b03      	ldr	r3, [pc, #12]	@ (8014624 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8014616:	6818      	ldr	r0, [r3, #0]
 8014618:	b110      	cbz	r0, 8014620 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 801461a:	6803      	ldr	r3, [r0, #0]
 801461c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801461e:	4718      	bx	r3
 8014620:	4770      	bx	lr
 8014622:	bf00      	nop
 8014624:	24001a6c 	.word	0x24001a6c

08014628 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8014628:	b510      	push	{r4, lr}
 801462a:	f9b1 4000 	ldrsh.w	r4, [r1]
 801462e:	888a      	ldrh	r2, [r1, #4]
 8014630:	f9b0 3000 	ldrsh.w	r3, [r0]
 8014634:	4422      	add	r2, r4
 8014636:	b212      	sxth	r2, r2
 8014638:	4293      	cmp	r3, r2
 801463a:	da15      	bge.n	8014668 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801463c:	8882      	ldrh	r2, [r0, #4]
 801463e:	4413      	add	r3, r2
 8014640:	b21b      	sxth	r3, r3
 8014642:	429c      	cmp	r4, r3
 8014644:	da10      	bge.n	8014668 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014646:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 801464a:	88c9      	ldrh	r1, [r1, #6]
 801464c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8014650:	4419      	add	r1, r3
 8014652:	b209      	sxth	r1, r1
 8014654:	428a      	cmp	r2, r1
 8014656:	da07      	bge.n	8014668 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014658:	88c0      	ldrh	r0, [r0, #6]
 801465a:	4410      	add	r0, r2
 801465c:	b200      	sxth	r0, r0
 801465e:	4283      	cmp	r3, r0
 8014660:	bfac      	ite	ge
 8014662:	2000      	movge	r0, #0
 8014664:	2001      	movlt	r0, #1
 8014666:	bd10      	pop	{r4, pc}
 8014668:	2000      	movs	r0, #0
 801466a:	e7fc      	b.n	8014666 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0801466c <_ZN8touchgfx4Rect10restrictToEss>:
 801466c:	f9b0 3000 	ldrsh.w	r3, [r0]
 8014670:	2b00      	cmp	r3, #0
 8014672:	b510      	push	{r4, lr}
 8014674:	da04      	bge.n	8014680 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8014676:	8884      	ldrh	r4, [r0, #4]
 8014678:	4423      	add	r3, r4
 801467a:	8083      	strh	r3, [r0, #4]
 801467c:	2300      	movs	r3, #0
 801467e:	8003      	strh	r3, [r0, #0]
 8014680:	f9b0 4000 	ldrsh.w	r4, [r0]
 8014684:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8014688:	1b09      	subs	r1, r1, r4
 801468a:	428b      	cmp	r3, r1
 801468c:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8014690:	bfc8      	it	gt
 8014692:	8081      	strhgt	r1, [r0, #4]
 8014694:	2b00      	cmp	r3, #0
 8014696:	da04      	bge.n	80146a2 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8014698:	88c1      	ldrh	r1, [r0, #6]
 801469a:	440b      	add	r3, r1
 801469c:	80c3      	strh	r3, [r0, #6]
 801469e:	2300      	movs	r3, #0
 80146a0:	8043      	strh	r3, [r0, #2]
 80146a2:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80146a6:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 80146aa:	1a52      	subs	r2, r2, r1
 80146ac:	4293      	cmp	r3, r2
 80146ae:	bfc8      	it	gt
 80146b0:	80c2      	strhgt	r2, [r0, #6]
 80146b2:	bd10      	pop	{r4, pc}

080146b4 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 80146b4:	4b10      	ldr	r3, [pc, #64]	@ (80146f8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 80146b6:	b510      	push	{r4, lr}
 80146b8:	460c      	mov	r4, r1
 80146ba:	f9b3 2000 	ldrsh.w	r2, [r3]
 80146be:	4b0f      	ldr	r3, [pc, #60]	@ (80146fc <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 80146c0:	4620      	mov	r0, r4
 80146c2:	f9b3 1000 	ldrsh.w	r1, [r3]
 80146c6:	f7ff ffd1 	bl	801466c <_ZN8touchgfx4Rect10restrictToEss>
 80146ca:	4b0d      	ldr	r3, [pc, #52]	@ (8014700 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 80146cc:	6818      	ldr	r0, [r3, #0]
 80146ce:	b190      	cbz	r0, 80146f6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 80146d0:	6803      	ldr	r3, [r0, #0]
 80146d2:	4621      	mov	r1, r4
 80146d4:	689b      	ldr	r3, [r3, #8]
 80146d6:	4798      	blx	r3
 80146d8:	4b0a      	ldr	r3, [pc, #40]	@ (8014704 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 80146da:	6818      	ldr	r0, [r3, #0]
 80146dc:	b118      	cbz	r0, 80146e6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 80146de:	6803      	ldr	r3, [r0, #0]
 80146e0:	4621      	mov	r1, r4
 80146e2:	689b      	ldr	r3, [r3, #8]
 80146e4:	4798      	blx	r3
 80146e6:	4b08      	ldr	r3, [pc, #32]	@ (8014708 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 80146e8:	4621      	mov	r1, r4
 80146ea:	6818      	ldr	r0, [r3, #0]
 80146ec:	6803      	ldr	r3, [r0, #0]
 80146ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80146f2:	69db      	ldr	r3, [r3, #28]
 80146f4:	4718      	bx	r3
 80146f6:	bd10      	pop	{r4, pc}
 80146f8:	24001a26 	.word	0x24001a26
 80146fc:	24001a24 	.word	0x24001a24
 8014700:	24001a6c 	.word	0x24001a6c
 8014704:	24001a68 	.word	0x24001a68
 8014708:	24001a30 	.word	0x24001a30

0801470c <_ZNK8touchgfx4Rect8includesERKS0_>:
 801470c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801470e:	4606      	mov	r6, r0
 8014710:	4608      	mov	r0, r1
 8014712:	460f      	mov	r7, r1
 8014714:	f7fd f81f 	bl	8011756 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014718:	b9e8      	cbnz	r0, 8014756 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801471a:	f9b7 5000 	ldrsh.w	r5, [r7]
 801471e:	f9b6 4000 	ldrsh.w	r4, [r6]
 8014722:	42a5      	cmp	r5, r4
 8014724:	db17      	blt.n	8014756 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014726:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 801472a:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801472e:	429a      	cmp	r2, r3
 8014730:	db11      	blt.n	8014756 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014732:	88b9      	ldrh	r1, [r7, #4]
 8014734:	440d      	add	r5, r1
 8014736:	88b1      	ldrh	r1, [r6, #4]
 8014738:	440c      	add	r4, r1
 801473a:	b22d      	sxth	r5, r5
 801473c:	b224      	sxth	r4, r4
 801473e:	42a5      	cmp	r5, r4
 8014740:	dc09      	bgt.n	8014756 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014742:	88f8      	ldrh	r0, [r7, #6]
 8014744:	4410      	add	r0, r2
 8014746:	88f2      	ldrh	r2, [r6, #6]
 8014748:	4413      	add	r3, r2
 801474a:	b200      	sxth	r0, r0
 801474c:	b21b      	sxth	r3, r3
 801474e:	4298      	cmp	r0, r3
 8014750:	bfcc      	ite	gt
 8014752:	2000      	movgt	r0, #0
 8014754:	2001      	movle	r0, #1
 8014756:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08014758 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8014758:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801475a:	4604      	mov	r4, r0
 801475c:	4608      	mov	r0, r1
 801475e:	460d      	mov	r5, r1
 8014760:	f7fc fff9 	bl	8011756 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014764:	b978      	cbnz	r0, 8014786 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8014766:	4620      	mov	r0, r4
 8014768:	f7fc fff5 	bl	8011756 <_ZNK8touchgfx4Rect7isEmptyEv>
 801476c:	f9b5 6000 	ldrsh.w	r6, [r5]
 8014770:	b150      	cbz	r0, 8014788 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8014772:	8026      	strh	r6, [r4, #0]
 8014774:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8014778:	8063      	strh	r3, [r4, #2]
 801477a:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 801477e:	80a3      	strh	r3, [r4, #4]
 8014780:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8014784:	80e3      	strh	r3, [r4, #6]
 8014786:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014788:	f9b4 1000 	ldrsh.w	r1, [r4]
 801478c:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8014790:	42b1      	cmp	r1, r6
 8014792:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8014796:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 801479a:	460f      	mov	r7, r1
 801479c:	88ed      	ldrh	r5, [r5, #6]
 801479e:	bfa8      	it	ge
 80147a0:	4637      	movge	r7, r6
 80147a2:	4293      	cmp	r3, r2
 80147a4:	4618      	mov	r0, r3
 80147a6:	4466      	add	r6, ip
 80147a8:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 80147ac:	bfa8      	it	ge
 80147ae:	4610      	movge	r0, r2
 80147b0:	442a      	add	r2, r5
 80147b2:	88e5      	ldrh	r5, [r4, #6]
 80147b4:	4461      	add	r1, ip
 80147b6:	b236      	sxth	r6, r6
 80147b8:	8027      	strh	r7, [r4, #0]
 80147ba:	442b      	add	r3, r5
 80147bc:	b209      	sxth	r1, r1
 80147be:	b212      	sxth	r2, r2
 80147c0:	8060      	strh	r0, [r4, #2]
 80147c2:	b21b      	sxth	r3, r3
 80147c4:	428e      	cmp	r6, r1
 80147c6:	bfac      	ite	ge
 80147c8:	ebc7 0106 	rsbge	r1, r7, r6
 80147cc:	ebc7 0101 	rsblt	r1, r7, r1
 80147d0:	429a      	cmp	r2, r3
 80147d2:	bfac      	ite	ge
 80147d4:	ebc0 0202 	rsbge	r2, r0, r2
 80147d8:	ebc0 0203 	rsblt	r2, r0, r3
 80147dc:	80a1      	strh	r1, [r4, #4]
 80147de:	80e2      	strh	r2, [r4, #6]
 80147e0:	e7d1      	b.n	8014786 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

080147e4 <_ZN8touchgfx11Application11getInstanceEv>:
 80147e4:	4b01      	ldr	r3, [pc, #4]	@ (80147ec <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 80147e6:	6818      	ldr	r0, [r3, #0]
 80147e8:	4770      	bx	lr
 80147ea:	bf00      	nop
 80147ec:	24001a7c 	.word	0x24001a7c

080147f0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 80147f0:	2300      	movs	r3, #0
 80147f2:	b510      	push	{r4, lr}
 80147f4:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 80147f8:	4604      	mov	r4, r0
 80147fa:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 80147fe:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 8014802:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 8014806:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 801480a:	429a      	cmp	r2, r3
 801480c:	d90e      	bls.n	801482c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 801480e:	18e2      	adds	r2, r4, r3
 8014810:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 8014814:	b122      	cbz	r2, 8014820 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8014816:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 801481a:	6803      	ldr	r3, [r0, #0]
 801481c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801481e:	4798      	blx	r3
 8014820:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 8014824:	3301      	adds	r3, #1
 8014826:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 801482a:	e7ea      	b.n	8014802 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 801482c:	bd10      	pop	{r4, pc}

0801482e <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 801482e:	b530      	push	{r4, r5, lr}
 8014830:	2200      	movs	r2, #0
 8014832:	f8b0 5080 	ldrh.w	r5, [r0, #128]	@ 0x80
 8014836:	b293      	uxth	r3, r2
 8014838:	429d      	cmp	r5, r3
 801483a:	d90e      	bls.n	801485a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 801483c:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 8014840:	428b      	cmp	r3, r1
 8014842:	d10b      	bne.n	801485c <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 8014844:	1884      	adds	r4, r0, r2
 8014846:	f894 3084 	ldrb.w	r3, [r4, #132]	@ 0x84
 801484a:	b13b      	cbz	r3, 801485c <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 801484c:	3b01      	subs	r3, #1
 801484e:	b2db      	uxtb	r3, r3
 8014850:	f884 3084 	strb.w	r3, [r4, #132]	@ 0x84
 8014854:	b90b      	cbnz	r3, 801485a <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 8014856:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 801485a:	bd30      	pop	{r4, r5, pc}
 801485c:	3201      	adds	r2, #1
 801485e:	e7ea      	b.n	8014836 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

08014860 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 8014860:	2300      	movs	r3, #0
 8014862:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 8014866:	30a4      	adds	r0, #164	@ 0xa4
 8014868:	f820 3c24 	strh.w	r3, [r0, #-36]
 801486c:	f802 3b01 	strb.w	r3, [r2], #1
 8014870:	4282      	cmp	r2, r0
 8014872:	d1fb      	bne.n	801486c <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 8014874:	4770      	bx	lr
	...

08014878 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8014878:	b570      	push	{r4, r5, r6, lr}
 801487a:	4c0b      	ldr	r4, [pc, #44]	@ (80148a8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 801487c:	4605      	mov	r5, r0
 801487e:	460e      	mov	r6, r1
 8014880:	6820      	ldr	r0, [r4, #0]
 8014882:	b110      	cbz	r0, 801488a <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 8014884:	6803      	ldr	r3, [r0, #0]
 8014886:	695b      	ldr	r3, [r3, #20]
 8014888:	4798      	blx	r3
 801488a:	1d28      	adds	r0, r5, #4
 801488c:	f7ff ffe8 	bl	8014860 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8014890:	6026      	str	r6, [r4, #0]
 8014892:	6833      	ldr	r3, [r6, #0]
 8014894:	4630      	mov	r0, r6
 8014896:	68db      	ldr	r3, [r3, #12]
 8014898:	4798      	blx	r3
 801489a:	682b      	ldr	r3, [r5, #0]
 801489c:	4628      	mov	r0, r5
 801489e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80148a0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80148a4:	4718      	bx	r3
 80148a6:	bf00      	nop
 80148a8:	24001a6c 	.word	0x24001a6c

080148ac <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 80148ac:	2300      	movs	r3, #0
 80148ae:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 80148b2:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 80148b6:	461a      	mov	r2, r3
 80148b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80148ba:	461c      	mov	r4, r3
 80148bc:	461d      	mov	r5, r3
 80148be:	459c      	cmp	ip, r3
 80148c0:	dd1a      	ble.n	80148f8 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 80148c2:	18c6      	adds	r6, r0, r3
 80148c4:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 80148c8:	b16e      	cbz	r6, 80148e6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 80148ca:	429a      	cmp	r2, r3
 80148cc:	d008      	beq.n	80148e0 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 80148ce:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 80148d2:	fa1f fe82 	uxth.w	lr, r2
 80148d6:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 80148da:	1887      	adds	r7, r0, r2
 80148dc:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 80148e0:	3201      	adds	r2, #1
 80148e2:	3301      	adds	r3, #1
 80148e4:	e7eb      	b.n	80148be <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 80148e6:	4299      	cmp	r1, r3
 80148e8:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 80148ec:	bfa8      	it	ge
 80148ee:	3501      	addge	r5, #1
 80148f0:	429e      	cmp	r6, r3
 80148f2:	bfc8      	it	gt
 80148f4:	3401      	addgt	r4, #1
 80148f6:	e7f4      	b.n	80148e2 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 80148f8:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 80148fc:	1b49      	subs	r1, r1, r5
 80148fe:	1b1b      	subs	r3, r3, r4
 8014900:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 8014904:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 8014908:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 801490c:	4293      	cmp	r3, r2
 801490e:	dd03      	ble.n	8014918 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8014910:	3b01      	subs	r3, #1
 8014912:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 8014916:	e7f7      	b.n	8014908 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8014918:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0801491c <_ZN8touchgfx11Application15handleTickEventEv>:
 801491c:	b570      	push	{r4, r5, r6, lr}
 801491e:	4d16      	ldr	r5, [pc, #88]	@ (8014978 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8014920:	4604      	mov	r4, r0
 8014922:	6828      	ldr	r0, [r5, #0]
 8014924:	b140      	cbz	r0, 8014938 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8014926:	7a03      	ldrb	r3, [r0, #8]
 8014928:	b933      	cbnz	r3, 8014938 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801492a:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 801492e:	6803      	ldr	r3, [r0, #0]
 8014930:	689b      	ldr	r3, [r3, #8]
 8014932:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8014936:	4718      	bx	r3
 8014938:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 801493c:	4e0f      	ldr	r6, [pc, #60]	@ (801497c <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 801493e:	b973      	cbnz	r3, 801495e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8014940:	b168      	cbz	r0, 801495e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8014942:	7a03      	ldrb	r3, [r0, #8]
 8014944:	b15b      	cbz	r3, 801495e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8014946:	6830      	ldr	r0, [r6, #0]
 8014948:	b110      	cbz	r0, 8014950 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 801494a:	6803      	ldr	r3, [r0, #0]
 801494c:	691b      	ldr	r3, [r3, #16]
 801494e:	4798      	blx	r3
 8014950:	6828      	ldr	r0, [r5, #0]
 8014952:	6803      	ldr	r3, [r0, #0]
 8014954:	68db      	ldr	r3, [r3, #12]
 8014956:	4798      	blx	r3
 8014958:	2301      	movs	r3, #1
 801495a:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 801495e:	3404      	adds	r4, #4
 8014960:	4620      	mov	r0, r4
 8014962:	f7ff ff45 	bl	80147f0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8014966:	4620      	mov	r0, r4
 8014968:	f7ff ffa0 	bl	80148ac <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 801496c:	6830      	ldr	r0, [r6, #0]
 801496e:	b110      	cbz	r0, 8014976 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8014970:	6803      	ldr	r3, [r0, #0]
 8014972:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8014974:	e7dd      	b.n	8014932 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8014976:	bd70      	pop	{r4, r5, r6, pc}
 8014978:	24001a70 	.word	0x24001a70
 801497c:	24001a6c 	.word	0x24001a6c

08014980 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8014980:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014982:	2300      	movs	r3, #0
 8014984:	4604      	mov	r4, r0
 8014986:	460d      	mov	r5, r1
 8014988:	f8b0 1080 	ldrh.w	r1, [r0, #128]	@ 0x80
 801498c:	4618      	mov	r0, r3
 801498e:	b29a      	uxth	r2, r3
 8014990:	4291      	cmp	r1, r2
 8014992:	d912      	bls.n	80149ba <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x3a>
 8014994:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8014998:	18e6      	adds	r6, r4, r3
 801499a:	42af      	cmp	r7, r5
 801499c:	f896 2084 	ldrb.w	r2, [r6, #132]	@ 0x84
 80149a0:	d105      	bne.n	80149ae <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 80149a2:	2aff      	cmp	r2, #255	@ 0xff
 80149a4:	d002      	beq.n	80149ac <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 80149a6:	3201      	adds	r2, #1
 80149a8:	f886 2084 	strb.w	r2, [r6, #132]	@ 0x84
 80149ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80149ae:	2a00      	cmp	r2, #0
 80149b0:	f103 0301 	add.w	r3, r3, #1
 80149b4:	bf08      	it	eq
 80149b6:	2001      	moveq	r0, #1
 80149b8:	e7e9      	b.n	801498e <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 80149ba:	b120      	cbz	r0, 80149c6 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x46>
 80149bc:	2920      	cmp	r1, #32
 80149be:	d102      	bne.n	80149c6 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x46>
 80149c0:	4620      	mov	r0, r4
 80149c2:	f7ff ff73 	bl	80148ac <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 80149c6:	f8b4 3080 	ldrh.w	r3, [r4, #128]	@ 0x80
 80149ca:	2b1f      	cmp	r3, #31
 80149cc:	d8ee      	bhi.n	80149ac <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 80149ce:	18e2      	adds	r2, r4, r3
 80149d0:	2101      	movs	r1, #1
 80149d2:	f882 1084 	strb.w	r1, [r2, #132]	@ 0x84
 80149d6:	185a      	adds	r2, r3, r1
 80149d8:	f8a4 2080 	strh.w	r2, [r4, #128]	@ 0x80
 80149dc:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 80149e0:	e7e4      	b.n	80149ac <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

080149e2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 80149e2:	4603      	mov	r3, r0
 80149e4:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 80149e8:	2200      	movs	r2, #0
 80149ea:	801a      	strh	r2, [r3, #0]
 80149ec:	3308      	adds	r3, #8
 80149ee:	f823 2c06 	strh.w	r2, [r3, #-6]
 80149f2:	f823 2c04 	strh.w	r2, [r3, #-4]
 80149f6:	f823 2c02 	strh.w	r2, [r3, #-2]
 80149fa:	428b      	cmp	r3, r1
 80149fc:	d1f5      	bne.n	80149ea <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 80149fe:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 8014a02:	4770      	bx	lr

08014a04 <_ZN8touchgfx11ApplicationC1Ev>:
 8014a04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8014a06:	4b1d      	ldr	r3, [pc, #116]	@ (8014a7c <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8014a08:	4606      	mov	r6, r0
 8014a0a:	4604      	mov	r4, r0
 8014a0c:	2500      	movs	r5, #0
 8014a0e:	f846 3b04 	str.w	r3, [r6], #4
 8014a12:	22a8      	movs	r2, #168	@ 0xa8
 8014a14:	2100      	movs	r1, #0
 8014a16:	4630      	mov	r0, r6
 8014a18:	f011 fa14 	bl	8025e44 <memset>
 8014a1c:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 8014a20:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 8014a24:	4f16      	ldr	r7, [pc, #88]	@ (8014a80 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8014a26:	f7ff ffdc 	bl	80149e2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8014a2a:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 8014a2e:	f7ff ffd8 	bl	80149e2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8014a32:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 8014a36:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 8014a3a:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 8014a3e:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 8014a42:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 8014a46:	490f      	ldr	r1, [pc, #60]	@ (8014a84 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8014a48:	480f      	ldr	r0, [pc, #60]	@ (8014a88 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8014a4a:	f010 fd97 	bl	802557c <CRC_Lock>
 8014a4e:	4b0f      	ldr	r3, [pc, #60]	@ (8014a8c <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8014a50:	b158      	cbz	r0, 8014a6a <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8014a52:	801d      	strh	r5, [r3, #0]
 8014a54:	2300      	movs	r3, #0
 8014a56:	4a0e      	ldr	r2, [pc, #56]	@ (8014a90 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8014a58:	4630      	mov	r0, r6
 8014a5a:	6013      	str	r3, [r2, #0]
 8014a5c:	4a0d      	ldr	r2, [pc, #52]	@ (8014a94 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8014a5e:	603b      	str	r3, [r7, #0]
 8014a60:	6013      	str	r3, [r2, #0]
 8014a62:	f7ff fefd 	bl	8014860 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8014a66:	4620      	mov	r0, r4
 8014a68:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8014a6a:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8014a6e:	2002      	movs	r0, #2
 8014a70:	801a      	strh	r2, [r3, #0]
 8014a72:	6038      	str	r0, [r7, #0]
 8014a74:	f001 fa50 	bl	8015f18 <_ZN8touchgfx6Screen4drawEv>
 8014a78:	e7ec      	b.n	8014a54 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8014a7a:	bf00      	nop
 8014a7c:	0802873c 	.word	0x0802873c
 8014a80:	24001a6c 	.word	0x24001a6c
 8014a84:	b5e8b5cd 	.word	0xb5e8b5cd
 8014a88:	f407a5c2 	.word	0xf407a5c2
 8014a8c:	2400001c 	.word	0x2400001c
 8014a90:	24001a7c 	.word	0x24001a7c
 8014a94:	24001a70 	.word	0x24001a70

08014a98 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8014a98:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 8014a9c:	3b01      	subs	r3, #1
 8014a9e:	b29b      	uxth	r3, r3
 8014aa0:	428b      	cmp	r3, r1
 8014aa2:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 8014aa6:	b510      	push	{r4, lr}
 8014aa8:	d908      	bls.n	8014abc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8014aaa:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8014aae:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8014ab2:	681a      	ldr	r2, [r3, #0]
 8014ab4:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8014ab8:	685a      	ldr	r2, [r3, #4]
 8014aba:	6062      	str	r2, [r4, #4]
 8014abc:	bd10      	pop	{r4, pc}
	...

08014ac0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8014ac0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ac4:	b08f      	sub	sp, #60	@ 0x3c
 8014ac6:	4b8f      	ldr	r3, [pc, #572]	@ (8014d04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8014ac8:	4683      	mov	fp, r0
 8014aca:	ac0a      	add	r4, sp, #40	@ 0x28
 8014acc:	e884 0006 	stmia.w	r4, {r1, r2}
 8014ad0:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014ad4:	4620      	mov	r0, r4
 8014ad6:	4b8c      	ldr	r3, [pc, #560]	@ (8014d08 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8014ad8:	f9b3 1000 	ldrsh.w	r1, [r3]
 8014adc:	f7ff fdc6 	bl	801466c <_ZN8touchgfx4Rect10restrictToEss>
 8014ae0:	4620      	mov	r0, r4
 8014ae2:	f7fc fe38 	bl	8011756 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014ae6:	2800      	cmp	r0, #0
 8014ae8:	d16a      	bne.n	8014bc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8014aea:	9403      	str	r4, [sp, #12]
 8014aec:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 8014af0:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 8014af4:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8014af8:	9301      	str	r3, [sp, #4]
 8014afa:	35a4      	adds	r5, #164	@ 0xa4
 8014afc:	b15c      	cbz	r4, 8014b16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8014afe:	4629      	mov	r1, r5
 8014b00:	9803      	ldr	r0, [sp, #12]
 8014b02:	f7ff fe03 	bl	801470c <_ZNK8touchgfx4Rect8includesERKS0_>
 8014b06:	3c01      	subs	r4, #1
 8014b08:	b118      	cbz	r0, 8014b12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8014b0a:	b2a1      	uxth	r1, r4
 8014b0c:	9801      	ldr	r0, [sp, #4]
 8014b0e:	f7ff ffc3 	bl	8014a98 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014b12:	3d08      	subs	r5, #8
 8014b14:	e7f2      	b.n	8014afc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8014b16:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 8014b1a:	f10a 33ff 	add.w	r3, sl, #4294967295
 8014b1e:	f8cd a010 	str.w	sl, [sp, #16]
 8014b22:	9302      	str	r3, [sp, #8]
 8014b24:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 8014b28:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 8014b2c:	9306      	str	r3, [sp, #24]
 8014b2e:	445c      	add	r4, fp
 8014b30:	2500      	movs	r5, #0
 8014b32:	4626      	mov	r6, r4
 8014b34:	f8cd a014 	str.w	sl, [sp, #20]
 8014b38:	462f      	mov	r7, r5
 8014b3a:	9b05      	ldr	r3, [sp, #20]
 8014b3c:	2b00      	cmp	r3, #0
 8014b3e:	d073      	beq.n	8014c28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8014b40:	9903      	ldr	r1, [sp, #12]
 8014b42:	4630      	mov	r0, r6
 8014b44:	f7ff fd70 	bl	8014628 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8014b48:	b350      	cbz	r0, 8014ba0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8014b4a:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 8014b4e:	f9b6 c000 	ldrsh.w	ip, [r6]
 8014b52:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 8014b56:	45e6      	cmp	lr, ip
 8014b58:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8014b5c:	db33      	blt.n	8014bc6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8014b5e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8014b62:	88b3      	ldrh	r3, [r6, #4]
 8014b64:	4472      	add	r2, lr
 8014b66:	4463      	add	r3, ip
 8014b68:	b212      	sxth	r2, r2
 8014b6a:	b21b      	sxth	r3, r3
 8014b6c:	429a      	cmp	r2, r3
 8014b6e:	dc2a      	bgt.n	8014bc6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8014b70:	fa1f f289 	uxth.w	r2, r9
 8014b74:	88f3      	ldrh	r3, [r6, #6]
 8014b76:	45c8      	cmp	r8, r9
 8014b78:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8014b7c:	4413      	add	r3, r2
 8014b7e:	fa1f fc88 	uxth.w	ip, r8
 8014b82:	b29b      	uxth	r3, r3
 8014b84:	fa0f fe83 	sxth.w	lr, r3
 8014b88:	db0f      	blt.n	8014baa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8014b8a:	eba3 030c 	sub.w	r3, r3, ip
 8014b8e:	1ac9      	subs	r1, r1, r3
 8014b90:	b209      	sxth	r1, r1
 8014b92:	2900      	cmp	r1, #0
 8014b94:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8014b98:	dd12      	ble.n	8014bc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8014b9a:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 8014b9e:	4605      	mov	r5, r0
 8014ba0:	9b05      	ldr	r3, [sp, #20]
 8014ba2:	3e08      	subs	r6, #8
 8014ba4:	3b01      	subs	r3, #1
 8014ba6:	9305      	str	r3, [sp, #20]
 8014ba8:	e7c7      	b.n	8014b3a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8014baa:	4461      	add	r1, ip
 8014bac:	b209      	sxth	r1, r1
 8014bae:	4571      	cmp	r1, lr
 8014bb0:	dc38      	bgt.n	8014c24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8014bb2:	eba2 020c 	sub.w	r2, r2, ip
 8014bb6:	b212      	sxth	r2, r2
 8014bb8:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 8014bbc:	2a00      	cmp	r2, #0
 8014bbe:	dcee      	bgt.n	8014b9e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8014bc0:	b00f      	add	sp, #60	@ 0x3c
 8014bc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014bc6:	45c8      	cmp	r8, r9
 8014bc8:	db2c      	blt.n	8014c24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8014bca:	88f3      	ldrh	r3, [r6, #6]
 8014bcc:	4499      	add	r9, r3
 8014bce:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 8014bd2:	4498      	add	r8, r3
 8014bd4:	fa0f f989 	sxth.w	r9, r9
 8014bd8:	fa0f f888 	sxth.w	r8, r8
 8014bdc:	45c1      	cmp	r9, r8
 8014bde:	db21      	blt.n	8014c24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8014be0:	fa1f f28c 	uxth.w	r2, ip
 8014be4:	88b3      	ldrh	r3, [r6, #4]
 8014be6:	45e6      	cmp	lr, ip
 8014be8:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 8014bec:	4413      	add	r3, r2
 8014bee:	fa1f f88e 	uxth.w	r8, lr
 8014bf2:	b29b      	uxth	r3, r3
 8014bf4:	fa0f f983 	sxth.w	r9, r3
 8014bf8:	db0a      	blt.n	8014c10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8014bfa:	eba3 0308 	sub.w	r3, r3, r8
 8014bfe:	1ac9      	subs	r1, r1, r3
 8014c00:	b209      	sxth	r1, r1
 8014c02:	2900      	cmp	r1, #0
 8014c04:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 8014c08:	ddda      	ble.n	8014bc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8014c0a:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 8014c0e:	e7c6      	b.n	8014b9e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8014c10:	4441      	add	r1, r8
 8014c12:	b209      	sxth	r1, r1
 8014c14:	4549      	cmp	r1, r9
 8014c16:	dc05      	bgt.n	8014c24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8014c18:	eba2 0208 	sub.w	r2, r2, r8
 8014c1c:	b212      	sxth	r2, r2
 8014c1e:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 8014c22:	e7cb      	b.n	8014bbc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8014c24:	4607      	mov	r7, r0
 8014c26:	e7bb      	b.n	8014ba0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8014c28:	2d00      	cmp	r5, #0
 8014c2a:	d181      	bne.n	8014b30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8014c2c:	2f00      	cmp	r7, #0
 8014c2e:	f000 81dd 	beq.w	8014fec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8014c32:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 8014c36:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 8014c3a:	b2b3      	uxth	r3, r6
 8014c3c:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 8014c40:	9305      	str	r3, [sp, #20]
 8014c42:	9a05      	ldr	r2, [sp, #20]
 8014c44:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8014c48:	4413      	add	r3, r2
 8014c4a:	b2ba      	uxth	r2, r7
 8014c4c:	4492      	add	sl, r2
 8014c4e:	b29b      	uxth	r3, r3
 8014c50:	fa1f fa8a 	uxth.w	sl, sl
 8014c54:	fa0f f883 	sxth.w	r8, r3
 8014c58:	fa0f f98a 	sxth.w	r9, sl
 8014c5c:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8014c60:	9b04      	ldr	r3, [sp, #16]
 8014c62:	2b00      	cmp	r3, #0
 8014c64:	d052      	beq.n	8014d0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8014c66:	9903      	ldr	r1, [sp, #12]
 8014c68:	4620      	mov	r0, r4
 8014c6a:	f7ff fcdd 	bl	8014628 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8014c6e:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8014c72:	b1c0      	cbz	r0, 8014ca6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8014c74:	f9b4 e000 	ldrsh.w	lr, [r4]
 8014c78:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8014c7c:	4576      	cmp	r6, lr
 8014c7e:	dc22      	bgt.n	8014cc6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8014c80:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8014c84:	44f4      	add	ip, lr
 8014c86:	fa0f fc8c 	sxth.w	ip, ip
 8014c8a:	45e0      	cmp	r8, ip
 8014c8c:	db1b      	blt.n	8014cc6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8014c8e:	428f      	cmp	r7, r1
 8014c90:	fa1f fc81 	uxth.w	ip, r1
 8014c94:	88e1      	ldrh	r1, [r4, #6]
 8014c96:	dc0d      	bgt.n	8014cb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8014c98:	ebaa 0c0c 	sub.w	ip, sl, ip
 8014c9c:	f8a4 9002 	strh.w	r9, [r4, #2]
 8014ca0:	eba1 010c 	sub.w	r1, r1, ip
 8014ca4:	80e1      	strh	r1, [r4, #6]
 8014ca6:	4628      	mov	r0, r5
 8014ca8:	9904      	ldr	r1, [sp, #16]
 8014caa:	3c08      	subs	r4, #8
 8014cac:	4605      	mov	r5, r0
 8014cae:	3901      	subs	r1, #1
 8014cb0:	9104      	str	r1, [sp, #16]
 8014cb2:	e7d3      	b.n	8014c5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8014cb4:	4461      	add	r1, ip
 8014cb6:	b209      	sxth	r1, r1
 8014cb8:	4549      	cmp	r1, r9
 8014cba:	dcf5      	bgt.n	8014ca8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8014cbc:	eba2 0c0c 	sub.w	ip, r2, ip
 8014cc0:	f8a4 c006 	strh.w	ip, [r4, #6]
 8014cc4:	e7ef      	b.n	8014ca6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8014cc6:	428f      	cmp	r7, r1
 8014cc8:	dcee      	bgt.n	8014ca8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8014cca:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8014cce:	4461      	add	r1, ip
 8014cd0:	b209      	sxth	r1, r1
 8014cd2:	4589      	cmp	r9, r1
 8014cd4:	dbe8      	blt.n	8014ca8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8014cd6:	4576      	cmp	r6, lr
 8014cd8:	fa1f fc8e 	uxth.w	ip, lr
 8014cdc:	88a1      	ldrh	r1, [r4, #4]
 8014cde:	dc07      	bgt.n	8014cf0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8014ce0:	eba3 0c0c 	sub.w	ip, r3, ip
 8014ce4:	f8a4 8000 	strh.w	r8, [r4]
 8014ce8:	eba1 010c 	sub.w	r1, r1, ip
 8014cec:	80a1      	strh	r1, [r4, #4]
 8014cee:	e7da      	b.n	8014ca6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8014cf0:	4461      	add	r1, ip
 8014cf2:	b209      	sxth	r1, r1
 8014cf4:	4588      	cmp	r8, r1
 8014cf6:	dbd7      	blt.n	8014ca8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8014cf8:	9905      	ldr	r1, [sp, #20]
 8014cfa:	eba1 0c0c 	sub.w	ip, r1, ip
 8014cfe:	f8a4 c004 	strh.w	ip, [r4, #4]
 8014d02:	e7d0      	b.n	8014ca6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8014d04:	24001a26 	.word	0x24001a26
 8014d08:	24001a24 	.word	0x24001a24
 8014d0c:	2d00      	cmp	r5, #0
 8014d0e:	f000 816d 	beq.w	8014fec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8014d12:	9b06      	ldr	r3, [sp, #24]
 8014d14:	445b      	add	r3, fp
 8014d16:	461c      	mov	r4, r3
 8014d18:	9b02      	ldr	r3, [sp, #8]
 8014d1a:	3301      	adds	r3, #1
 8014d1c:	f000 8166 	beq.w	8014fec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8014d20:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 8014d24:	9803      	ldr	r0, [sp, #12]
 8014d26:	4629      	mov	r1, r5
 8014d28:	f7ff fcf0 	bl	801470c <_ZNK8touchgfx4Rect8includesERKS0_>
 8014d2c:	b120      	cbz	r0, 8014d38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8014d2e:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8014d32:	9801      	ldr	r0, [sp, #4]
 8014d34:	f7ff feb0 	bl	8014a98 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014d38:	9903      	ldr	r1, [sp, #12]
 8014d3a:	4628      	mov	r0, r5
 8014d3c:	f7ff fc74 	bl	8014628 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8014d40:	2800      	cmp	r0, #0
 8014d42:	f000 809c 	beq.w	8014e7e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8014d46:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 8014d4a:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8014d4e:	fa1f f189 	uxth.w	r1, r9
 8014d52:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8014d56:	9309      	str	r3, [sp, #36]	@ 0x24
 8014d58:	eb01 0c03 	add.w	ip, r1, r3
 8014d5c:	b283      	uxth	r3, r0
 8014d5e:	4548      	cmp	r0, r9
 8014d60:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 8014d64:	fa1f fa8c 	uxth.w	sl, ip
 8014d68:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 8014d6c:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 8014d70:	eb03 050c 	add.w	r5, r3, ip
 8014d74:	b2ad      	uxth	r5, r5
 8014d76:	9505      	str	r5, [sp, #20]
 8014d78:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8014d7c:	9504      	str	r5, [sp, #16]
 8014d7e:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 8014d82:	f340 8099 	ble.w	8014eb8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8014d86:	1a5b      	subs	r3, r3, r1
 8014d88:	4596      	cmp	lr, r2
 8014d8a:	fa0f f08a 	sxth.w	r0, sl
 8014d8e:	b29b      	uxth	r3, r3
 8014d90:	b21e      	sxth	r6, r3
 8014d92:	dd2e      	ble.n	8014df2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8014d94:	9f02      	ldr	r7, [sp, #8]
 8014d96:	fa1f fe8e 	uxth.w	lr, lr
 8014d9a:	b292      	uxth	r2, r2
 8014d9c:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 8014da0:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8014da4:	9f04      	ldr	r7, [sp, #16]
 8014da6:	ebae 0102 	sub.w	r1, lr, r2
 8014daa:	44a6      	add	lr, r4
 8014dac:	1a3f      	subs	r7, r7, r0
 8014dae:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 8014db2:	b289      	uxth	r1, r1
 8014db4:	4402      	add	r2, r0
 8014db6:	fa0f fe8e 	sxth.w	lr, lr
 8014dba:	b20d      	sxth	r5, r1
 8014dbc:	b212      	sxth	r2, r2
 8014dbe:	436f      	muls	r7, r5
 8014dc0:	ebae 0202 	sub.w	r2, lr, r2
 8014dc4:	4372      	muls	r2, r6
 8014dc6:	4297      	cmp	r7, r2
 8014dc8:	db09      	blt.n	8014dde <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8014dca:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 8014dce:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 8014dd2:	449c      	add	ip, r3
 8014dd4:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8014dd8:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 8014ddc:	e686      	b.n	8014aec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014dde:	4421      	add	r1, r4
 8014de0:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 8014de4:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 8014de8:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8014dec:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8014df0:	e67c      	b.n	8014aec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014df2:	9f04      	ldr	r7, [sp, #16]
 8014df4:	42b8      	cmp	r0, r7
 8014df6:	da27      	bge.n	8014e48 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8014df8:	9902      	ldr	r1, [sp, #8]
 8014dfa:	1a3f      	subs	r7, r7, r0
 8014dfc:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 8014e00:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8014e04:	eb05 010e 	add.w	r1, r5, lr
 8014e08:	fa1f f881 	uxth.w	r8, r1
 8014e0c:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 8014e10:	4411      	add	r1, r2
 8014e12:	fa0f f988 	sxth.w	r9, r8
 8014e16:	eba2 020e 	sub.w	r2, r2, lr
 8014e1a:	eba1 0108 	sub.w	r1, r1, r8
 8014e1e:	4372      	muls	r2, r6
 8014e20:	b289      	uxth	r1, r1
 8014e22:	fa0f f881 	sxth.w	r8, r1
 8014e26:	fb08 f707 	mul.w	r7, r8, r7
 8014e2a:	42ba      	cmp	r2, r7
 8014e2c:	dc06      	bgt.n	8014e3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8014e2e:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 8014e32:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 8014e36:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 8014e3a:	e7ca      	b.n	8014dd2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8014e3c:	4429      	add	r1, r5
 8014e3e:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 8014e42:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8014e46:	e651      	b.n	8014aec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014e48:	9805      	ldr	r0, [sp, #20]
 8014e4a:	2d06      	cmp	r5, #6
 8014e4c:	ebaa 0000 	sub.w	r0, sl, r0
 8014e50:	b280      	uxth	r0, r0
 8014e52:	fa0f fe80 	sxth.w	lr, r0
 8014e56:	d817      	bhi.n	8014e88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8014e58:	9b04      	ldr	r3, [sp, #16]
 8014e5a:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 8014e5e:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 8014e62:	1c6b      	adds	r3, r5, #1
 8014e64:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 8014e68:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 8014e6c:	9b01      	ldr	r3, [sp, #4]
 8014e6e:	9801      	ldr	r0, [sp, #4]
 8014e70:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8014e74:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8014e78:	805a      	strh	r2, [r3, #2]
 8014e7a:	809e      	strh	r6, [r3, #4]
 8014e7c:	80d9      	strh	r1, [r3, #6]
 8014e7e:	9b02      	ldr	r3, [sp, #8]
 8014e80:	3c08      	subs	r4, #8
 8014e82:	3b01      	subs	r3, #1
 8014e84:	9302      	str	r3, [sp, #8]
 8014e86:	e747      	b.n	8014d18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8014e88:	9a02      	ldr	r2, [sp, #8]
 8014e8a:	45b6      	cmp	lr, r6
 8014e8c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8014e90:	db0d      	blt.n	8014eae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8014e92:	449c      	add	ip, r3
 8014e94:	445a      	add	r2, fp
 8014e96:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 8014e9a:	fa1f fc8c 	uxth.w	ip, ip
 8014e9e:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 8014ea2:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 8014ea6:	448c      	add	ip, r1
 8014ea8:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 8014eac:	e61e      	b.n	8014aec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014eae:	445a      	add	r2, fp
 8014eb0:	4484      	add	ip, r0
 8014eb2:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 8014eb6:	e78f      	b.n	8014dd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8014eb8:	fa1f f18e 	uxth.w	r1, lr
 8014ebc:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 8014ec0:	b293      	uxth	r3, r2
 8014ec2:	4596      	cmp	lr, r2
 8014ec4:	eb01 0806 	add.w	r8, r1, r6
 8014ec8:	9306      	str	r3, [sp, #24]
 8014eca:	fa1f f888 	uxth.w	r8, r8
 8014ece:	9f06      	ldr	r7, [sp, #24]
 8014ed0:	fa0f f388 	sxth.w	r3, r8
 8014ed4:	9307      	str	r3, [sp, #28]
 8014ed6:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 8014eda:	443b      	add	r3, r7
 8014edc:	b29b      	uxth	r3, r3
 8014ede:	9308      	str	r3, [sp, #32]
 8014ee0:	da24      	bge.n	8014f2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8014ee2:	9905      	ldr	r1, [sp, #20]
 8014ee4:	eba3 0308 	sub.w	r3, r3, r8
 8014ee8:	eba2 020e 	sub.w	r2, r2, lr
 8014eec:	eba9 0000 	sub.w	r0, r9, r0
 8014ef0:	ebaa 0401 	sub.w	r4, sl, r1
 8014ef4:	b29b      	uxth	r3, r3
 8014ef6:	b2a4      	uxth	r4, r4
 8014ef8:	b219      	sxth	r1, r3
 8014efa:	b225      	sxth	r5, r4
 8014efc:	4348      	muls	r0, r1
 8014efe:	436a      	muls	r2, r5
 8014f00:	4282      	cmp	r2, r0
 8014f02:	9a02      	ldr	r2, [sp, #8]
 8014f04:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8014f08:	445a      	add	r2, fp
 8014f0a:	dc06      	bgt.n	8014f1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8014f0c:	9b07      	ldr	r3, [sp, #28]
 8014f0e:	44a4      	add	ip, r4
 8014f10:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 8014f14:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 8014f18:	e75e      	b.n	8014dd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8014f1a:	9904      	ldr	r1, [sp, #16]
 8014f1c:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 8014f20:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 8014f24:	4433      	add	r3, r6
 8014f26:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8014f2a:	e5df      	b.n	8014aec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014f2c:	9f06      	ldr	r7, [sp, #24]
 8014f2e:	9b04      	ldr	r3, [sp, #16]
 8014f30:	1bc9      	subs	r1, r1, r7
 8014f32:	fa0f f78a 	sxth.w	r7, sl
 8014f36:	b289      	uxth	r1, r1
 8014f38:	429f      	cmp	r7, r3
 8014f3a:	fa0f fe81 	sxth.w	lr, r1
 8014f3e:	dd23      	ble.n	8014f88 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8014f40:	9a05      	ldr	r2, [sp, #20]
 8014f42:	eba9 0000 	sub.w	r0, r9, r0
 8014f46:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8014f4a:	ebaa 0202 	sub.w	r2, sl, r2
 8014f4e:	9d07      	ldr	r5, [sp, #28]
 8014f50:	fb0e f000 	mul.w	r0, lr, r0
 8014f54:	b292      	uxth	r2, r2
 8014f56:	eba5 0a03 	sub.w	sl, r5, r3
 8014f5a:	9b02      	ldr	r3, [sp, #8]
 8014f5c:	b214      	sxth	r4, r2
 8014f5e:	00db      	lsls	r3, r3, #3
 8014f60:	fb04 fa0a 	mul.w	sl, r4, sl
 8014f64:	445b      	add	r3, fp
 8014f66:	4550      	cmp	r0, sl
 8014f68:	db03      	blt.n	8014f72 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8014f6a:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 8014f6e:	4494      	add	ip, r2
 8014f70:	e732      	b.n	8014dd8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8014f72:	9a04      	ldr	r2, [sp, #16]
 8014f74:	4431      	add	r1, r6
 8014f76:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 8014f7a:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 8014f7e:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 8014f82:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8014f86:	e75c      	b.n	8014e42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8014f88:	9b08      	ldr	r3, [sp, #32]
 8014f8a:	2d06      	cmp	r5, #6
 8014f8c:	eba3 0308 	sub.w	r3, r3, r8
 8014f90:	b29b      	uxth	r3, r3
 8014f92:	b218      	sxth	r0, r3
 8014f94:	d813      	bhi.n	8014fbe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8014f96:	9b07      	ldr	r3, [sp, #28]
 8014f98:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 8014f9c:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 8014fa0:	1c6b      	adds	r3, r5, #1
 8014fa2:	9901      	ldr	r1, [sp, #4]
 8014fa4:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 8014fa8:	9b01      	ldr	r3, [sp, #4]
 8014faa:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8014fae:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8014fb2:	805a      	strh	r2, [r3, #2]
 8014fb4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8014fb6:	f8a3 e006 	strh.w	lr, [r3, #6]
 8014fba:	809a      	strh	r2, [r3, #4]
 8014fbc:	e75f      	b.n	8014e7e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8014fbe:	9c02      	ldr	r4, [sp, #8]
 8014fc0:	4570      	cmp	r0, lr
 8014fc2:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8014fc6:	db0d      	blt.n	8014fe4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8014fc8:	4431      	add	r1, r6
 8014fca:	9b06      	ldr	r3, [sp, #24]
 8014fcc:	445c      	add	r4, fp
 8014fce:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8014fd2:	b289      	uxth	r1, r1
 8014fd4:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 8014fd8:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8014fdc:	4419      	add	r1, r3
 8014fde:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 8014fe2:	e583      	b.n	8014aec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014fe4:	445c      	add	r4, fp
 8014fe6:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 8014fea:	e79b      	b.n	8014f24 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8014fec:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 8014ff0:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 8014ff4:	1e65      	subs	r5, r4, #1
 8014ff6:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 8014ffa:	b2ad      	uxth	r5, r5
 8014ffc:	42b5      	cmp	r5, r6
 8014ffe:	d044      	beq.n	801508a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 8015000:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 8015004:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 8015008:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 801500c:	4282      	cmp	r2, r0
 801500e:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 8015012:	d11f      	bne.n	8015054 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8015014:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 8015018:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 801501c:	459c      	cmp	ip, r3
 801501e:	d119      	bne.n	8015054 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8015020:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 8015024:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8015028:	19d8      	adds	r0, r3, r7
 801502a:	b200      	sxth	r0, r0
 801502c:	4288      	cmp	r0, r1
 801502e:	d109      	bne.n	8015044 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 8015030:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 8015034:	4413      	add	r3, r2
 8015036:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 801503a:	4629      	mov	r1, r5
 801503c:	9801      	ldr	r0, [sp, #4]
 801503e:	f7ff fd2b 	bl	8014a98 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8015042:	e003      	b.n	801504c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015044:	4411      	add	r1, r2
 8015046:	b209      	sxth	r1, r1
 8015048:	42b9      	cmp	r1, r7
 801504a:	d0f3      	beq.n	8015034 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 801504c:	3d01      	subs	r5, #1
 801504e:	3c08      	subs	r4, #8
 8015050:	b2ad      	uxth	r5, r5
 8015052:	e7d3      	b.n	8014ffc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8015054:	42b9      	cmp	r1, r7
 8015056:	d1f9      	bne.n	801504c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015058:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 801505c:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8015060:	4299      	cmp	r1, r3
 8015062:	d1f3      	bne.n	801504c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015064:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 8015068:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 801506c:	181f      	adds	r7, r3, r0
 801506e:	b23f      	sxth	r7, r7
 8015070:	42ba      	cmp	r2, r7
 8015072:	d105      	bne.n	8015080 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8015074:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 8015078:	440b      	add	r3, r1
 801507a:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 801507e:	e7dc      	b.n	801503a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8015080:	440a      	add	r2, r1
 8015082:	b212      	sxth	r2, r2
 8015084:	4290      	cmp	r0, r2
 8015086:	d1e1      	bne.n	801504c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8015088:	e7f6      	b.n	8015078 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 801508a:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 801508e:	2e07      	cmp	r6, #7
 8015090:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8015094:	d812      	bhi.n	80150bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8015096:	1c75      	adds	r5, r6, #1
 8015098:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 801509c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 80150a0:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 80150a4:	9d01      	ldr	r5, [sp, #4]
 80150a6:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 80150aa:	442c      	add	r4, r5
 80150ac:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 80150b0:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 80150b4:	8061      	strh	r1, [r4, #2]
 80150b6:	80a2      	strh	r2, [r4, #4]
 80150b8:	80e3      	strh	r3, [r4, #6]
 80150ba:	e581      	b.n	8014bc0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80150bc:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 80150c0:	3e01      	subs	r6, #1
 80150c2:	445c      	add	r4, fp
 80150c4:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 80150c8:	f04f 37ff 	mov.w	r7, #4294967295
 80150cc:	2500      	movs	r5, #0
 80150ce:	9305      	str	r3, [sp, #20]
 80150d0:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 80150d4:	1e72      	subs	r2, r6, #1
 80150d6:	9302      	str	r3, [sp, #8]
 80150d8:	4691      	mov	r9, r2
 80150da:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 80150de:	9304      	str	r3, [sp, #16]
 80150e0:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 80150e4:	f1b9 3fff 	cmp.w	r9, #4294967295
 80150e8:	6818      	ldr	r0, [r3, #0]
 80150ea:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 80150ee:	9207      	str	r2, [sp, #28]
 80150f0:	bf16      	itet	ne
 80150f2:	9905      	ldrne	r1, [sp, #20]
 80150f4:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 80150f8:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 80150fc:	9306      	str	r3, [sp, #24]
 80150fe:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8015102:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8015106:	fb18 f801 	smulbb	r8, r8, r1
 801510a:	6859      	ldr	r1, [r3, #4]
 801510c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8015110:	4671      	mov	r1, lr
 8015112:	a80c      	add	r0, sp, #48	@ 0x30
 8015114:	f7ff fb20 	bl	8014758 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015118:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 801511c:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 8015120:	f04f 0c08 	mov.w	ip, #8
 8015124:	9b04      	ldr	r3, [sp, #16]
 8015126:	9a02      	ldr	r2, [sp, #8]
 8015128:	fb10 f001 	smulbb	r0, r0, r1
 801512c:	fb02 8803 	mla	r8, r2, r3, r8
 8015130:	eba0 0108 	sub.w	r1, r0, r8
 8015134:	fb90 f0fc 	sdiv	r0, r0, ip
 8015138:	4288      	cmp	r0, r1
 801513a:	dc20      	bgt.n	801517e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 801513c:	4551      	cmp	r1, sl
 801513e:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8015142:	da03      	bge.n	801514c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68c>
 8015144:	b1d9      	cbz	r1, 801517e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6be>
 8015146:	468a      	mov	sl, r1
 8015148:	464f      	mov	r7, r9
 801514a:	4635      	mov	r5, r6
 801514c:	f109 39ff 	add.w	r9, r9, #4294967295
 8015150:	f119 0f02 	cmn.w	r9, #2
 8015154:	d1c6      	bne.n	80150e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8015156:	4616      	mov	r6, r2
 8015158:	3201      	adds	r2, #1
 801515a:	f1a4 0408 	sub.w	r4, r4, #8
 801515e:	d1b7      	bne.n	80150d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8015160:	9b01      	ldr	r3, [sp, #4]
 8015162:	b2ac      	uxth	r4, r5
 8015164:	00ed      	lsls	r5, r5, #3
 8015166:	1958      	adds	r0, r3, r5
 8015168:	1c7b      	adds	r3, r7, #1
 801516a:	d10b      	bne.n	8015184 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c4>
 801516c:	4601      	mov	r1, r0
 801516e:	9803      	ldr	r0, [sp, #12]
 8015170:	f7ff faf2 	bl	8014758 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015174:	4621      	mov	r1, r4
 8015176:	9801      	ldr	r0, [sp, #4]
 8015178:	f7ff fc8e 	bl	8014a98 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801517c:	e4b6      	b.n	8014aec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801517e:	464f      	mov	r7, r9
 8015180:	4635      	mov	r5, r6
 8015182:	e7ed      	b.n	8015160 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a0>
 8015184:	9b01      	ldr	r3, [sp, #4]
 8015186:	00ff      	lsls	r7, r7, #3
 8015188:	445d      	add	r5, fp
 801518a:	19d9      	adds	r1, r3, r7
 801518c:	445f      	add	r7, fp
 801518e:	f7ff fae3 	bl	8014758 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8015192:	9b03      	ldr	r3, [sp, #12]
 8015194:	cb03      	ldmia	r3!, {r0, r1}
 8015196:	9b03      	ldr	r3, [sp, #12]
 8015198:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 801519c:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 80151a0:	f855 0fac 	ldr.w	r0, [r5, #172]!
 80151a4:	6869      	ldr	r1, [r5, #4]
 80151a6:	c303      	stmia	r3!, {r0, r1}
 80151a8:	e7e4      	b.n	8015174 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b4>
 80151aa:	bf00      	nop

080151ac <_ZN8touchgfx11Application15drawCachedAreasEv>:
 80151ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80151b0:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 80151b4:	b09b      	sub	sp, #108	@ 0x6c
 80151b6:	4604      	mov	r4, r0
 80151b8:	4630      	mov	r0, r6
 80151ba:	f7fc facc 	bl	8011756 <_ZNK8touchgfx4Rect7isEmptyEv>
 80151be:	4605      	mov	r5, r0
 80151c0:	b948      	cbnz	r0, 80151d6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 80151c2:	6823      	ldr	r3, [r4, #0]
 80151c4:	4620      	mov	r0, r4
 80151c6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80151c8:	e896 0006 	ldmia.w	r6, {r1, r2}
 80151cc:	4798      	blx	r3
 80151ce:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 80151d2:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 80151d6:	4bc5      	ldr	r3, [pc, #788]	@ (80154ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x340>)
 80151d8:	681b      	ldr	r3, [r3, #0]
 80151da:	2b00      	cmp	r3, #0
 80151dc:	d03f      	beq.n	801525e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80151de:	4dc4      	ldr	r5, [pc, #784]	@ (80154f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 80151e0:	4628      	mov	r0, r5
 80151e2:	f7fc fab8 	bl	8011756 <_ZNK8touchgfx4Rect7isEmptyEv>
 80151e6:	4606      	mov	r6, r0
 80151e8:	2800      	cmp	r0, #0
 80151ea:	d138      	bne.n	801525e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 80151ec:	4628      	mov	r0, r5
 80151ee:	f7ff f951 	bl	8014494 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80151f2:	6823      	ldr	r3, [r4, #0]
 80151f4:	6829      	ldr	r1, [r5, #0]
 80151f6:	4620      	mov	r0, r4
 80151f8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80151fa:	686a      	ldr	r2, [r5, #4]
 80151fc:	4798      	blx	r3
 80151fe:	802e      	strh	r6, [r5, #0]
 8015200:	806e      	strh	r6, [r5, #2]
 8015202:	80ae      	strh	r6, [r5, #4]
 8015204:	80ee      	strh	r6, [r5, #6]
 8015206:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 801520a:	4dba      	ldr	r5, [pc, #744]	@ (80154f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 801520c:	4640      	mov	r0, r8
 801520e:	f7ff fbe8 	bl	80149e2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8015212:	882e      	ldrh	r6, [r5, #0]
 8015214:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 8015218:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 801521c:	4633      	mov	r3, r6
 801521e:	42bb      	cmp	r3, r7
 8015220:	d224      	bcs.n	801526c <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8015222:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 8015226:	2907      	cmp	r1, #7
 8015228:	d816      	bhi.n	8015258 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 801522a:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 801522e:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8015232:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8015236:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 801523a:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 801523e:	1c4a      	adds	r2, r1, #1
 8015240:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
 8015244:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 8015248:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 801524c:	f8a2 a002 	strh.w	sl, [r2, #2]
 8015250:	f8a2 e004 	strh.w	lr, [r2, #4]
 8015254:	f8a2 c006 	strh.w	ip, [r2, #6]
 8015258:	3301      	adds	r3, #1
 801525a:	b29b      	uxth	r3, r3
 801525c:	e7df      	b.n	801521e <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 801525e:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8015262:	2b00      	cmp	r3, #0
 8015264:	d1cf      	bne.n	8015206 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 8015266:	b01b      	add	sp, #108	@ 0x6c
 8015268:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801526c:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 8015270:	42b3      	cmp	r3, r6
 8015272:	d90c      	bls.n	801528e <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8015274:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8015278:	6822      	ldr	r2, [r4, #0]
 801527a:	3601      	adds	r6, #1
 801527c:	4620      	mov	r0, r4
 801527e:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 8015280:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 8015284:	b2b6      	uxth	r6, r6
 8015286:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 801528a:	47b8      	blx	r7
 801528c:	e7ee      	b.n	801526c <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 801528e:	4a9a      	ldr	r2, [pc, #616]	@ (80154f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8015290:	6813      	ldr	r3, [r2, #0]
 8015292:	4691      	mov	r9, r2
 8015294:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 8015298:	2b01      	cmp	r3, #1
 801529a:	f040 80e0 	bne.w	801545e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b2>
 801529e:	8829      	ldrh	r1, [r5, #0]
 80152a0:	2600      	movs	r6, #0
 80152a2:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 80152a6:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 80152aa:	33ae      	adds	r3, #174	@ 0xae
 80152ac:	428f      	cmp	r7, r1
 80152ae:	f103 0308 	add.w	r3, r3, #8
 80152b2:	dd0a      	ble.n	80152ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 80152b4:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 80152b8:	3101      	adds	r1, #1
 80152ba:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 80152be:	4402      	add	r2, r0
 80152c0:	b212      	sxth	r2, r2
 80152c2:	4296      	cmp	r6, r2
 80152c4:	bfb8      	it	lt
 80152c6:	4616      	movlt	r6, r2
 80152c8:	e7f0      	b.n	80152ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 80152ca:	4b8c      	ldr	r3, [pc, #560]	@ (80154fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80152cc:	f8df 9228 	ldr.w	r9, [pc, #552]	@ 80154f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>
 80152d0:	881b      	ldrh	r3, [r3, #0]
 80152d2:	2b0f      	cmp	r3, #15
 80152d4:	bf8c      	ite	hi
 80152d6:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 80152da:	f04f 0b01 	movls.w	fp, #1
 80152de:	2300      	movs	r3, #0
 80152e0:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80152e4:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 80152e8:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 80152ec:	4b82      	ldr	r3, [pc, #520]	@ (80154f8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 80152ee:	4438      	add	r0, r7
 80152f0:	b207      	sxth	r7, r0
 80152f2:	6818      	ldr	r0, [r3, #0]
 80152f4:	42b7      	cmp	r7, r6
 80152f6:	6803      	ldr	r3, [r0, #0]
 80152f8:	f280 8083 	bge.w	8015402 <_ZN8touchgfx11Application15drawCachedAreasEv+0x256>
 80152fc:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8015300:	4798      	blx	r3
 8015302:	eb07 030b 	add.w	r3, r7, fp
 8015306:	4298      	cmp	r0, r3
 8015308:	da07      	bge.n	801531a <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 801530a:	42b0      	cmp	r0, r6
 801530c:	da05      	bge.n	801531a <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 801530e:	4287      	cmp	r7, r0
 8015310:	dd6c      	ble.n	80153ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 8015312:	2f00      	cmp	r7, #0
 8015314:	dd6a      	ble.n	80153ec <_ZN8touchgfx11Application15drawCachedAreasEv+0x240>
 8015316:	4630      	mov	r0, r6
 8015318:	e004      	b.n	8015324 <_ZN8touchgfx11Application15drawCachedAreasEv+0x178>
 801531a:	4287      	cmp	r7, r0
 801531c:	dcfb      	bgt.n	8015316 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16a>
 801531e:	42b0      	cmp	r0, r6
 8015320:	bfa8      	it	ge
 8015322:	4630      	movge	r0, r6
 8015324:	4b76      	ldr	r3, [pc, #472]	@ (8015500 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8015326:	1bc0      	subs	r0, r0, r7
 8015328:	2200      	movs	r2, #0
 801532a:	f8ad 7016 	strh.w	r7, [sp, #22]
 801532e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015332:	882f      	ldrh	r7, [r5, #0]
 8015334:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015338:	f8ad 3018 	strh.w	r3, [sp, #24]
 801533c:	f8ad 001a 	strh.w	r0, [sp, #26]
 8015340:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8015344:	42bb      	cmp	r3, r7
 8015346:	d9cd      	bls.n	80152e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 8015348:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 801534c:	ab07      	add	r3, sp, #28
 801534e:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8015352:	6851      	ldr	r1, [r2, #4]
 8015354:	c303      	stmia	r3!, {r0, r1}
 8015356:	a905      	add	r1, sp, #20
 8015358:	a807      	add	r0, sp, #28
 801535a:	f7ff f965 	bl	8014628 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801535e:	2800      	cmp	r0, #0
 8015360:	d04c      	beq.n	80153fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x250>
 8015362:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8015366:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 801536a:	f8bd a020 	ldrh.w	sl, [sp, #32]
 801536e:	4686      	mov	lr, r0
 8015370:	4290      	cmp	r0, r2
 8015372:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8015376:	4450      	add	r0, sl
 8015378:	f8bd a018 	ldrh.w	sl, [sp, #24]
 801537c:	bfb8      	it	lt
 801537e:	4696      	movlt	lr, r2
 8015380:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8015384:	4452      	add	r2, sl
 8015386:	b280      	uxth	r0, r0
 8015388:	4299      	cmp	r1, r3
 801538a:	468c      	mov	ip, r1
 801538c:	b292      	uxth	r2, r2
 801538e:	9302      	str	r3, [sp, #8]
 8015390:	bfb8      	it	lt
 8015392:	469c      	movlt	ip, r3
 8015394:	b203      	sxth	r3, r0
 8015396:	fa0f fa82 	sxth.w	sl, r2
 801539a:	f8ad e01c 	strh.w	lr, [sp, #28]
 801539e:	f8ad c01e 	strh.w	ip, [sp, #30]
 80153a2:	4553      	cmp	r3, sl
 80153a4:	bfb8      	it	lt
 80153a6:	4602      	movlt	r2, r0
 80153a8:	9b02      	ldr	r3, [sp, #8]
 80153aa:	eba2 020e 	sub.w	r2, r2, lr
 80153ae:	f8ad 2020 	strh.w	r2, [sp, #32]
 80153b2:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 80153b6:	4411      	add	r1, r2
 80153b8:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80153bc:	4413      	add	r3, r2
 80153be:	b289      	uxth	r1, r1
 80153c0:	b29b      	uxth	r3, r3
 80153c2:	b208      	sxth	r0, r1
 80153c4:	b21a      	sxth	r2, r3
 80153c6:	4290      	cmp	r0, r2
 80153c8:	bfb8      	it	lt
 80153ca:	460b      	movlt	r3, r1
 80153cc:	eba3 030c 	sub.w	r3, r3, ip
 80153d0:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 80153d4:	a807      	add	r0, sp, #28
 80153d6:	f7fc f9be 	bl	8011756 <_ZNK8touchgfx4Rect7isEmptyEv>
 80153da:	b920      	cbnz	r0, 80153e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23a>
 80153dc:	6823      	ldr	r3, [r4, #0]
 80153de:	a907      	add	r1, sp, #28
 80153e0:	4620      	mov	r0, r4
 80153e2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80153e4:	4798      	blx	r3
 80153e6:	3701      	adds	r7, #1
 80153e8:	b2bf      	uxth	r7, r7
 80153ea:	e7a9      	b.n	8015340 <_ZN8touchgfx11Application15drawCachedAreasEv+0x194>
 80153ec:	f8d9 0000 	ldr.w	r0, [r9]
 80153f0:	2101      	movs	r1, #1
 80153f2:	6803      	ldr	r3, [r0, #0]
 80153f4:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 80153f8:	4798      	blx	r3
 80153fa:	e773      	b.n	80152e4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x138>
 80153fc:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8015400:	e7e8      	b.n	80153d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x228>
 8015402:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8015404:	4798      	blx	r3
 8015406:	4b3f      	ldr	r3, [pc, #252]	@ (8015504 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8015408:	781b      	ldrb	r3, [r3, #0]
 801540a:	2b00      	cmp	r3, #0
 801540c:	f43f af2b 	beq.w	8015266 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8015410:	2300      	movs	r3, #0
 8015412:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 8015416:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 801541a:	882b      	ldrh	r3, [r5, #0]
 801541c:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8015420:	42ab      	cmp	r3, r5
 8015422:	f4bf af20 	bcs.w	8015266 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8015426:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 801542a:	2907      	cmp	r1, #7
 801542c:	d814      	bhi.n	8015458 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ac>
 801542e:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8015432:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 8015436:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 801543a:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 801543e:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 8015442:	1c4a      	adds	r2, r1, #1
 8015444:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 8015448:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 801544c:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8015450:	f8a2 c002 	strh.w	ip, [r2, #2]
 8015454:	8097      	strh	r7, [r2, #4]
 8015456:	80d6      	strh	r6, [r2, #6]
 8015458:	3301      	adds	r3, #1
 801545a:	b29b      	uxth	r3, r3
 801545c:	e7e0      	b.n	8015420 <_ZN8touchgfx11Application15drawCachedAreasEv+0x274>
 801545e:	2b02      	cmp	r3, #2
 8015460:	f040 8133 	bne.w	80156ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x51e>
 8015464:	4b28      	ldr	r3, [pc, #160]	@ (8015508 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8015466:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 801546a:	781b      	ldrb	r3, [r3, #0]
 801546c:	2b01      	cmp	r3, #1
 801546e:	f000 8098 	beq.w	80155a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 8015472:	882a      	ldrh	r2, [r5, #0]
 8015474:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 8015478:	3201      	adds	r2, #1
 801547a:	b292      	uxth	r2, r2
 801547c:	2900      	cmp	r1, #0
 801547e:	d0c2      	beq.n	8015406 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8015480:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
 8015484:	4694      	mov	ip, r2
 8015486:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
 801548a:	f04f 0900 	mov.w	r9, #0
 801548e:	441e      	add	r6, r3
 8015490:	b236      	sxth	r6, r6
 8015492:	fa1f f38c 	uxth.w	r3, ip
 8015496:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 801549a:	4299      	cmp	r1, r3
 801549c:	f240 80be 	bls.w	801561c <_ZN8touchgfx11Application15drawCachedAreasEv+0x470>
 80154a0:	4427      	add	r7, r4
 80154a2:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 80154a6:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 80154aa:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 80154ae:	4283      	cmp	r3, r0
 80154b0:	f340 80a0 	ble.w	80155f4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x448>
 80154b4:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
 80154b8:	46e1      	mov	r9, ip
 80154ba:	4406      	add	r6, r0
 80154bc:	b236      	sxth	r6, r6
 80154be:	429e      	cmp	r6, r3
 80154c0:	bfa8      	it	ge
 80154c2:	461e      	movge	r6, r3
 80154c4:	f10c 0c01 	add.w	ip, ip, #1
 80154c8:	e7e3      	b.n	8015492 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e6>
 80154ca:	d10a      	bne.n	80154e2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x336>
 80154cc:	4562      	cmp	r2, ip
 80154ce:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
 80154d2:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 80154d6:	bfb8      	it	lt
 80154d8:	4662      	movlt	r2, ip
 80154da:	4288      	cmp	r0, r1
 80154dc:	bfb8      	it	lt
 80154de:	461f      	movlt	r7, r3
 80154e0:	e086      	b.n	80155f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 80154e2:	428a      	cmp	r2, r1
 80154e4:	bfb8      	it	lt
 80154e6:	460a      	movlt	r2, r1
 80154e8:	e082      	b.n	80155f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x444>
 80154ea:	bf00      	nop
 80154ec:	24001a68 	.word	0x24001a68
 80154f0:	24001a74 	.word	0x24001a74
 80154f4:	2400001c 	.word	0x2400001c
 80154f8:	24001a30 	.word	0x24001a30
 80154fc:	24001a26 	.word	0x24001a26
 8015500:	24001a24 	.word	0x24001a24
 8015504:	24001a2e 	.word	0x24001a2e
 8015508:	24001a28 	.word	0x24001a28
 801550c:	19a1      	adds	r1, r4, r6
 801550e:	ab07      	add	r3, sp, #28
 8015510:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8015514:	6849      	ldr	r1, [r1, #4]
 8015516:	c303      	stmia	r3!, {r0, r1}
 8015518:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801551c:	a807      	add	r0, sp, #28
 801551e:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8015522:	2b13      	cmp	r3, #19
 8015524:	440b      	add	r3, r1
 8015526:	bfd8      	it	le
 8015528:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 801552c:	1a9b      	subs	r3, r3, r2
 801552e:	f8ad 201c 	strh.w	r2, [sp, #28]
 8015532:	f8ad 3020 	strh.w	r3, [sp, #32]
 8015536:	f7fe ffc7 	bl	80144c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801553a:	a807      	add	r0, sp, #28
 801553c:	f7fc f90b 	bl	8011756 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015540:	bb78      	cbnz	r0, 80155a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 8015542:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
 8015546:	4426      	add	r6, r4
 8015548:	f8d9 0000 	ldr.w	r0, [r9]
 801554c:	f1bc 0f14 	cmp.w	ip, #20
 8015550:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8015554:	f8d0 e000 	ldr.w	lr, [r0]
 8015558:	bfa8      	it	ge
 801555a:	f04f 0c14 	movge.w	ip, #20
 801555e:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8015562:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8015566:	fa1f fc8c 	uxth.w	ip, ip
 801556a:	f8cd c000 	str.w	ip, [sp]
 801556e:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
 8015572:	47d8      	blx	fp
 8015574:	4683      	mov	fp, r0
 8015576:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 801557a:	a807      	add	r0, sp, #28
 801557c:	f7fe ff8a 	bl	8014494 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8015580:	6823      	ldr	r3, [r4, #0]
 8015582:	4620      	mov	r0, r4
 8015584:	a907      	add	r1, sp, #28
 8015586:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8015588:	4798      	blx	r3
 801558a:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 801558e:	eba0 000b 	sub.w	r0, r0, fp
 8015592:	b200      	sxth	r0, r0
 8015594:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
 8015598:	b918      	cbnz	r0, 80155a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3f6>
 801559a:	b2b9      	uxth	r1, r7
 801559c:	4650      	mov	r0, sl
 801559e:	f7ff fa7b 	bl	8014a98 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80155a2:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 80155a6:	f1bb 0f00 	cmp.w	fp, #0
 80155aa:	f43f af2c 	beq.w	8015406 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 80155ae:	882b      	ldrh	r3, [r5, #0]
 80155b0:	2700      	movs	r7, #0
 80155b2:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 80155b6:	3301      	adds	r3, #1
 80155b8:	b29b      	uxth	r3, r3
 80155ba:	b299      	uxth	r1, r3
 80155bc:	00fe      	lsls	r6, r7, #3
 80155be:	458b      	cmp	fp, r1
 80155c0:	d9a4      	bls.n	801550c <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>
 80155c2:	4426      	add	r6, r4
 80155c4:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 80155c8:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
 80155cc:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 80155d0:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 80155d4:	4408      	add	r0, r1
 80155d6:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 80155da:	4461      	add	r1, ip
 80155dc:	b200      	sxth	r0, r0
 80155de:	b209      	sxth	r1, r1
 80155e0:	4288      	cmp	r0, r1
 80155e2:	f6bf af72 	bge.w	80154ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x31e>
 80155e6:	4584      	cmp	ip, r0
 80155e8:	4662      	mov	r2, ip
 80155ea:	461f      	mov	r7, r3
 80155ec:	bfb8      	it	lt
 80155ee:	4602      	movlt	r2, r0
 80155f0:	3301      	adds	r3, #1
 80155f2:	e7e2      	b.n	80155ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x40e>
 80155f4:	d10e      	bne.n	8015614 <_ZN8touchgfx11Application15drawCachedAreasEv+0x468>
 80155f6:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 80155fa:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 80155fe:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 8015602:	4473      	add	r3, lr
 8015604:	b21b      	sxth	r3, r3
 8015606:	429e      	cmp	r6, r3
 8015608:	bfa8      	it	ge
 801560a:	461e      	movge	r6, r3
 801560c:	4287      	cmp	r7, r0
 801560e:	bfb8      	it	lt
 8015610:	46e1      	movlt	r9, ip
 8015612:	e757      	b.n	80154c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 8015614:	4286      	cmp	r6, r0
 8015616:	bfa8      	it	ge
 8015618:	4606      	movge	r6, r0
 801561a:	e753      	b.n	80154c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x318>
 801561c:	eb0a 0007 	add.w	r0, sl, r7
 8015620:	4427      	add	r7, r4
 8015622:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 8015626:	f1bb 0f13 	cmp.w	fp, #19
 801562a:	bfdc      	itt	le
 801562c:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
 8015630:	445e      	addle	r6, fp
 8015632:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8015636:	bfd8      	it	le
 8015638:	b236      	sxthle	r6, r6
 801563a:	f7fc f88c 	bl	8011756 <_ZNK8touchgfx4Rect7isEmptyEv>
 801563e:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8015642:	2800      	cmp	r0, #0
 8015644:	f47f af1a 	bne.w	801547c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d0>
 8015648:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 801564c:	fa1f fb8b 	uxth.w	fp, fp
 8015650:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 8015654:	1ab6      	subs	r6, r6, r2
 8015656:	4829      	ldr	r0, [pc, #164]	@ (80156fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x550>)
 8015658:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 801565c:	2e14      	cmp	r6, #20
 801565e:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 8015662:	6800      	ldr	r0, [r0, #0]
 8015664:	bfa8      	it	ge
 8015666:	2614      	movge	r6, #20
 8015668:	f8ad 101c 	strh.w	r1, [sp, #28]
 801566c:	f8ad 201e 	strh.w	r2, [sp, #30]
 8015670:	b289      	uxth	r1, r1
 8015672:	f8ad 3020 	strh.w	r3, [sp, #32]
 8015676:	b2b6      	uxth	r6, r6
 8015678:	f8d0 c000 	ldr.w	ip, [r0]
 801567c:	b292      	uxth	r2, r2
 801567e:	455e      	cmp	r6, fp
 8015680:	bf94      	ite	ls
 8015682:	9600      	strls	r6, [sp, #0]
 8015684:	f8cd b000 	strhi.w	fp, [sp]
 8015688:	b29b      	uxth	r3, r3
 801568a:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
 801568e:	47b0      	blx	r6
 8015690:	6823      	ldr	r3, [r4, #0]
 8015692:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 8015696:	a907      	add	r1, sp, #28
 8015698:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801569a:	4620      	mov	r0, r4
 801569c:	4798      	blx	r3
 801569e:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 80156a2:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 80156a6:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 80156aa:	1a5b      	subs	r3, r3, r1
 80156ac:	440a      	add	r2, r1
 80156ae:	b21b      	sxth	r3, r3
 80156b0:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 80156b4:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 80156b8:	2b00      	cmp	r3, #0
 80156ba:	f47f aeda 	bne.w	8015472 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 80156be:	fa1f f189 	uxth.w	r1, r9
 80156c2:	4650      	mov	r0, sl
 80156c4:	f7ff f9e8 	bl	8014a98 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80156c8:	e6d3      	b.n	8015472 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2c6>
 80156ca:	882e      	ldrh	r6, [r5, #0]
 80156cc:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 80156d0:	42b3      	cmp	r3, r6
 80156d2:	f67f ae98 	bls.w	8015406 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 80156d6:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 80156da:	ab07      	add	r3, sp, #28
 80156dc:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80156e0:	6851      	ldr	r1, [r2, #4]
 80156e2:	c303      	stmia	r3!, {r0, r1}
 80156e4:	a807      	add	r0, sp, #28
 80156e6:	f7fc f836 	bl	8011756 <_ZNK8touchgfx4Rect7isEmptyEv>
 80156ea:	b920      	cbnz	r0, 80156f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x54a>
 80156ec:	6823      	ldr	r3, [r4, #0]
 80156ee:	a907      	add	r1, sp, #28
 80156f0:	4620      	mov	r0, r4
 80156f2:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80156f4:	4798      	blx	r3
 80156f6:	3601      	adds	r6, #1
 80156f8:	b2b6      	uxth	r6, r6
 80156fa:	e7e7      	b.n	80156cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x520>
 80156fc:	24001a30 	.word	0x24001a30

08015700 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8015700:	4b03      	ldr	r3, [pc, #12]	@ (8015710 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8015702:	2200      	movs	r2, #0
 8015704:	801a      	strh	r2, [r3, #0]
 8015706:	805a      	strh	r2, [r3, #2]
 8015708:	809a      	strh	r2, [r3, #4]
 801570a:	80da      	strh	r2, [r3, #6]
 801570c:	4770      	bx	lr
 801570e:	bf00      	nop
 8015710:	24001a74 	.word	0x24001a74

08015714 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8015714:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015718:	b09d      	sub	sp, #116	@ 0x74
 801571a:	4606      	mov	r6, r0
 801571c:	4614      	mov	r4, r2
 801571e:	468a      	mov	sl, r1
 8015720:	a803      	add	r0, sp, #12
 8015722:	461d      	mov	r5, r3
 8015724:	f000 fd72 	bl	801620c <_ZN8touchgfx12TextProviderC1Ev>
 8015728:	6833      	ldr	r3, [r6, #0]
 801572a:	4630      	mov	r0, r6
 801572c:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 8015730:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8015732:	4798      	blx	r3
 8015734:	6833      	ldr	r3, [r6, #0]
 8015736:	4607      	mov	r7, r0
 8015738:	4630      	mov	r0, r6
 801573a:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801573c:	4798      	blx	r3
 801573e:	462a      	mov	r2, r5
 8015740:	2500      	movs	r5, #0
 8015742:	4621      	mov	r1, r4
 8015744:	9000      	str	r0, [sp, #0]
 8015746:	463b      	mov	r3, r7
 8015748:	462c      	mov	r4, r5
 801574a:	46a9      	mov	r9, r5
 801574c:	46a8      	mov	r8, r5
 801574e:	a803      	add	r0, sp, #12
 8015750:	f000 fdaf 	bl	80162b2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015754:	2300      	movs	r3, #0
 8015756:	9302      	str	r3, [sp, #8]
 8015758:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 801575c:	429c      	cmp	r4, r3
 801575e:	d002      	beq.n	8015766 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8015760:	455c      	cmp	r4, fp
 8015762:	bf18      	it	ne
 8015764:	4625      	movne	r5, r4
 8015766:	ab02      	add	r3, sp, #8
 8015768:	4632      	mov	r2, r6
 801576a:	4651      	mov	r1, sl
 801576c:	a803      	add	r0, sp, #12
 801576e:	f001 f895 	bl	801689c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015772:	4604      	mov	r4, r0
 8015774:	b108      	cbz	r0, 801577a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8015776:	280a      	cmp	r0, #10
 8015778:	d10a      	bne.n	8015790 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 801577a:	45c1      	cmp	r9, r8
 801577c:	bf38      	it	cc
 801577e:	46c1      	movcc	r9, r8
 8015780:	f04f 0800 	mov.w	r8, #0
 8015784:	2c00      	cmp	r4, #0
 8015786:	d1e5      	bne.n	8015754 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8015788:	4648      	mov	r0, r9
 801578a:	b01d      	add	sp, #116	@ 0x74
 801578c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015790:	9a02      	ldr	r2, [sp, #8]
 8015792:	2a00      	cmp	r2, #0
 8015794:	d0de      	beq.n	8015754 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8015796:	7b57      	ldrb	r7, [r2, #13]
 8015798:	4629      	mov	r1, r5
 801579a:	6833      	ldr	r3, [r6, #0]
 801579c:	007f      	lsls	r7, r7, #1
 801579e:	8894      	ldrh	r4, [r2, #4]
 80157a0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80157a2:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 80157a6:	7a97      	ldrb	r7, [r2, #10]
 80157a8:	4307      	orrs	r7, r0
 80157aa:	4630      	mov	r0, r6
 80157ac:	4798      	blx	r3
 80157ae:	4438      	add	r0, r7
 80157b0:	4480      	add	r8, r0
 80157b2:	fa1f f888 	uxth.w	r8, r8
 80157b6:	e7e5      	b.n	8015784 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

080157b8 <_ZNK8touchgfx4Font12getCharWidthEt>:
 80157b8:	b508      	push	{r3, lr}
 80157ba:	6803      	ldr	r3, [r0, #0]
 80157bc:	68db      	ldr	r3, [r3, #12]
 80157be:	4798      	blx	r3
 80157c0:	b128      	cbz	r0, 80157ce <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 80157c2:	7b43      	ldrb	r3, [r0, #13]
 80157c4:	7a80      	ldrb	r0, [r0, #10]
 80157c6:	005b      	lsls	r3, r3, #1
 80157c8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80157cc:	4318      	orrs	r0, r3
 80157ce:	bd08      	pop	{r3, pc}

080157d0 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 80157d0:	b40e      	push	{r1, r2, r3}
 80157d2:	b5f0      	push	{r4, r5, r6, r7, lr}
 80157d4:	b09e      	sub	sp, #120	@ 0x78
 80157d6:	4605      	mov	r5, r0
 80157d8:	ab23      	add	r3, sp, #140	@ 0x8c
 80157da:	a805      	add	r0, sp, #20
 80157dc:	f853 4b04 	ldr.w	r4, [r3], #4
 80157e0:	9303      	str	r3, [sp, #12]
 80157e2:	f000 fd13 	bl	801620c <_ZN8touchgfx12TextProviderC1Ev>
 80157e6:	682b      	ldr	r3, [r5, #0]
 80157e8:	4628      	mov	r0, r5
 80157ea:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80157ec:	4798      	blx	r3
 80157ee:	682b      	ldr	r3, [r5, #0]
 80157f0:	4606      	mov	r6, r0
 80157f2:	4628      	mov	r0, r5
 80157f4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80157f6:	4798      	blx	r3
 80157f8:	4633      	mov	r3, r6
 80157fa:	4621      	mov	r1, r4
 80157fc:	ae1e      	add	r6, sp, #120	@ 0x78
 80157fe:	2400      	movs	r4, #0
 8015800:	9000      	str	r0, [sp, #0]
 8015802:	9a03      	ldr	r2, [sp, #12]
 8015804:	a805      	add	r0, sp, #20
 8015806:	f000 fd54 	bl	80162b2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801580a:	f846 4d68 	str.w	r4, [r6, #-104]!
 801580e:	462a      	mov	r2, r5
 8015810:	4633      	mov	r3, r6
 8015812:	4621      	mov	r1, r4
 8015814:	a805      	add	r0, sp, #20
 8015816:	f001 f841 	bl	801689c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801581a:	b300      	cbz	r0, 801585e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8e>
 801581c:	280a      	cmp	r0, #10
 801581e:	d01a      	beq.n	8015856 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 8015820:	9f04      	ldr	r7, [sp, #16]
 8015822:	b1c7      	cbz	r7, 8015856 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x86>
 8015824:	7b78      	ldrb	r0, [r7, #13]
 8015826:	7a3b      	ldrb	r3, [r7, #8]
 8015828:	00c1      	lsls	r1, r0, #3
 801582a:	88ea      	ldrh	r2, [r5, #6]
 801582c:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 8015830:	4319      	orrs	r1, r3
 8015832:	0643      	lsls	r3, r0, #25
 8015834:	ea4f 1000 	mov.w	r0, r0, lsl #4
 8015838:	bf48      	it	mi
 801583a:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 801583e:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 8015842:	bf48      	it	mi
 8015844:	b219      	sxthmi	r1, r3
 8015846:	79fb      	ldrb	r3, [r7, #7]
 8015848:	4303      	orrs	r3, r0
 801584a:	4413      	add	r3, r2
 801584c:	1a5b      	subs	r3, r3, r1
 801584e:	b21b      	sxth	r3, r3
 8015850:	429c      	cmp	r4, r3
 8015852:	bfb8      	it	lt
 8015854:	461c      	movlt	r4, r3
 8015856:	4633      	mov	r3, r6
 8015858:	462a      	mov	r2, r5
 801585a:	2100      	movs	r1, #0
 801585c:	e7da      	b.n	8015814 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 801585e:	b2a0      	uxth	r0, r4
 8015860:	b01e      	add	sp, #120	@ 0x78
 8015862:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8015866:	b003      	add	sp, #12
 8015868:	4770      	bx	lr

0801586a <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 801586a:	7a43      	ldrb	r3, [r0, #9]
 801586c:	8880      	ldrh	r0, [r0, #4]
 801586e:	4418      	add	r0, r3
 8015870:	b280      	uxth	r0, r0
 8015872:	4770      	bx	lr

08015874 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8015874:	6803      	ldr	r3, [r0, #0]
 8015876:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015878:	4718      	bx	r3

0801587a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801587a:	b40e      	push	{r1, r2, r3}
 801587c:	b570      	push	{r4, r5, r6, lr}
 801587e:	b09d      	sub	sp, #116	@ 0x74
 8015880:	4604      	mov	r4, r0
 8015882:	ab21      	add	r3, sp, #132	@ 0x84
 8015884:	a803      	add	r0, sp, #12
 8015886:	f853 5b04 	ldr.w	r5, [r3], #4
 801588a:	9302      	str	r3, [sp, #8]
 801588c:	f000 fcbe 	bl	801620c <_ZN8touchgfx12TextProviderC1Ev>
 8015890:	6823      	ldr	r3, [r4, #0]
 8015892:	4620      	mov	r0, r4
 8015894:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8015896:	4798      	blx	r3
 8015898:	6823      	ldr	r3, [r4, #0]
 801589a:	4606      	mov	r6, r0
 801589c:	4620      	mov	r0, r4
 801589e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80158a0:	2401      	movs	r4, #1
 80158a2:	4798      	blx	r3
 80158a4:	4633      	mov	r3, r6
 80158a6:	9000      	str	r0, [sp, #0]
 80158a8:	4629      	mov	r1, r5
 80158aa:	9a02      	ldr	r2, [sp, #8]
 80158ac:	a803      	add	r0, sp, #12
 80158ae:	f000 fd00 	bl	80162b2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80158b2:	a803      	add	r0, sp, #12
 80158b4:	f001 f8be 	bl	8016a34 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80158b8:	b2a3      	uxth	r3, r4
 80158ba:	b138      	cbz	r0, 80158cc <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x52>
 80158bc:	280a      	cmp	r0, #10
 80158be:	a803      	add	r0, sp, #12
 80158c0:	bf04      	itt	eq
 80158c2:	3301      	addeq	r3, #1
 80158c4:	b21c      	sxtheq	r4, r3
 80158c6:	f001 f8b5 	bl	8016a34 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80158ca:	e7f5      	b.n	80158b8 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 80158cc:	4618      	mov	r0, r3
 80158ce:	b01d      	add	sp, #116	@ 0x74
 80158d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80158d4:	b003      	add	sp, #12
 80158d6:	4770      	bx	lr

080158d8 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 80158d8:	b40e      	push	{r1, r2, r3}
 80158da:	b5f0      	push	{r4, r5, r6, r7, lr}
 80158dc:	b09e      	sub	sp, #120	@ 0x78
 80158de:	4604      	mov	r4, r0
 80158e0:	ab23      	add	r3, sp, #140	@ 0x8c
 80158e2:	a805      	add	r0, sp, #20
 80158e4:	f853 5b04 	ldr.w	r5, [r3], #4
 80158e8:	9303      	str	r3, [sp, #12]
 80158ea:	f000 fc8f 	bl	801620c <_ZN8touchgfx12TextProviderC1Ev>
 80158ee:	6823      	ldr	r3, [r4, #0]
 80158f0:	4620      	mov	r0, r4
 80158f2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80158f4:	4798      	blx	r3
 80158f6:	6823      	ldr	r3, [r4, #0]
 80158f8:	4606      	mov	r6, r0
 80158fa:	4620      	mov	r0, r4
 80158fc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80158fe:	4798      	blx	r3
 8015900:	4633      	mov	r3, r6
 8015902:	4629      	mov	r1, r5
 8015904:	9000      	str	r0, [sp, #0]
 8015906:	9a03      	ldr	r2, [sp, #12]
 8015908:	a805      	add	r0, sp, #20
 801590a:	f000 fcd2 	bl	80162b2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801590e:	ad1e      	add	r5, sp, #120	@ 0x78
 8015910:	2100      	movs	r1, #0
 8015912:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 8015916:	4622      	mov	r2, r4
 8015918:	a805      	add	r0, sp, #20
 801591a:	f845 1d68 	str.w	r1, [r5, #-104]!
 801591e:	462b      	mov	r3, r5
 8015920:	f000 ffbc 	bl	801689c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015924:	b1d8      	cbz	r0, 801595e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8015926:	280a      	cmp	r0, #10
 8015928:	d012      	beq.n	8015950 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 801592a:	9804      	ldr	r0, [sp, #16]
 801592c:	b180      	cbz	r0, 8015950 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 801592e:	7b47      	ldrb	r7, [r0, #13]
 8015930:	88e2      	ldrh	r2, [r4, #6]
 8015932:	00fb      	lsls	r3, r7, #3
 8015934:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8015938:	7a03      	ldrb	r3, [r0, #8]
 801593a:	430b      	orrs	r3, r1
 801593c:	0679      	lsls	r1, r7, #25
 801593e:	bf44      	itt	mi
 8015940:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8015944:	b21b      	sxthmi	r3, r3
 8015946:	1ad3      	subs	r3, r2, r3
 8015948:	b21b      	sxth	r3, r3
 801594a:	429e      	cmp	r6, r3
 801594c:	bfa8      	it	ge
 801594e:	461e      	movge	r6, r3
 8015950:	462b      	mov	r3, r5
 8015952:	4622      	mov	r2, r4
 8015954:	2100      	movs	r1, #0
 8015956:	a805      	add	r0, sp, #20
 8015958:	f000 ffa0 	bl	801689c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801595c:	e7e2      	b.n	8015924 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 801595e:	4630      	mov	r0, r6
 8015960:	b01e      	add	sp, #120	@ 0x78
 8015962:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8015966:	b003      	add	sp, #12
 8015968:	4770      	bx	lr

0801596a <_ZNK8touchgfx8Drawable10invalidateEv>:
 801596a:	b513      	push	{r0, r1, r4, lr}
 801596c:	6803      	ldr	r3, [r0, #0]
 801596e:	2400      	movs	r4, #0
 8015970:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8015974:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8015978:	f8ad 1004 	strh.w	r1, [sp, #4]
 801597c:	4669      	mov	r1, sp
 801597e:	691b      	ldr	r3, [r3, #16]
 8015980:	9400      	str	r4, [sp, #0]
 8015982:	f8ad 2006 	strh.w	r2, [sp, #6]
 8015986:	4798      	blx	r3
 8015988:	b002      	add	sp, #8
 801598a:	bd10      	pop	{r4, pc}

0801598c <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 801598c:	b538      	push	{r3, r4, r5, lr}
 801598e:	680b      	ldr	r3, [r1, #0]
 8015990:	460c      	mov	r4, r1
 8015992:	4605      	mov	r5, r0
 8015994:	68db      	ldr	r3, [r3, #12]
 8015996:	4798      	blx	r3
 8015998:	6823      	ldr	r3, [r4, #0]
 801599a:	4620      	mov	r0, r4
 801599c:	4629      	mov	r1, r5
 801599e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80159a0:	4798      	blx	r3
 80159a2:	4628      	mov	r0, r5
 80159a4:	bd38      	pop	{r3, r4, r5, pc}

080159a6 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 80159a6:	b410      	push	{r4}
 80159a8:	880a      	ldrh	r2, [r1, #0]
 80159aa:	8884      	ldrh	r4, [r0, #4]
 80159ac:	4422      	add	r2, r4
 80159ae:	800a      	strh	r2, [r1, #0]
 80159b0:	884a      	ldrh	r2, [r1, #2]
 80159b2:	88c4      	ldrh	r4, [r0, #6]
 80159b4:	4422      	add	r2, r4
 80159b6:	804a      	strh	r2, [r1, #2]
 80159b8:	6940      	ldr	r0, [r0, #20]
 80159ba:	b120      	cbz	r0, 80159c6 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 80159bc:	6803      	ldr	r3, [r0, #0]
 80159be:	f85d 4b04 	ldr.w	r4, [sp], #4
 80159c2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80159c4:	4718      	bx	r3
 80159c6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80159ca:	4770      	bx	lr

080159cc <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 80159cc:	b570      	push	{r4, r5, r6, lr}
 80159ce:	8882      	ldrh	r2, [r0, #4]
 80159d0:	460c      	mov	r4, r1
 80159d2:	880b      	ldrh	r3, [r1, #0]
 80159d4:	4605      	mov	r5, r0
 80159d6:	4413      	add	r3, r2
 80159d8:	800b      	strh	r3, [r1, #0]
 80159da:	884b      	ldrh	r3, [r1, #2]
 80159dc:	88c2      	ldrh	r2, [r0, #6]
 80159de:	4413      	add	r3, r2
 80159e0:	804b      	strh	r3, [r1, #2]
 80159e2:	1d01      	adds	r1, r0, #4
 80159e4:	4620      	mov	r0, r4
 80159e6:	f7fb fe73 	bl	80116d0 <_ZN8touchgfx4RectaNERKS0_>
 80159ea:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80159ee:	2b00      	cmp	r3, #0
 80159f0:	dd0b      	ble.n	8015a0a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80159f2:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80159f6:	2b00      	cmp	r3, #0
 80159f8:	dd07      	ble.n	8015a0a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80159fa:	6968      	ldr	r0, [r5, #20]
 80159fc:	b128      	cbz	r0, 8015a0a <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80159fe:	6803      	ldr	r3, [r0, #0]
 8015a00:	4621      	mov	r1, r4
 8015a02:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015a04:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015a08:	4718      	bx	r3
 8015a0a:	bd70      	pop	{r4, r5, r6, pc}

08015a0c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8015a0c:	b570      	push	{r4, r5, r6, lr}
 8015a0e:	8882      	ldrh	r2, [r0, #4]
 8015a10:	460c      	mov	r4, r1
 8015a12:	880b      	ldrh	r3, [r1, #0]
 8015a14:	4605      	mov	r5, r0
 8015a16:	4413      	add	r3, r2
 8015a18:	800b      	strh	r3, [r1, #0]
 8015a1a:	884b      	ldrh	r3, [r1, #2]
 8015a1c:	88c2      	ldrh	r2, [r0, #6]
 8015a1e:	4413      	add	r3, r2
 8015a20:	804b      	strh	r3, [r1, #2]
 8015a22:	1d01      	adds	r1, r0, #4
 8015a24:	4620      	mov	r0, r4
 8015a26:	f7fb fe53 	bl	80116d0 <_ZN8touchgfx4RectaNERKS0_>
 8015a2a:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8015a2e:	2b00      	cmp	r3, #0
 8015a30:	dd19      	ble.n	8015a66 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8015a32:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8015a36:	2b00      	cmp	r3, #0
 8015a38:	dd15      	ble.n	8015a66 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8015a3a:	6968      	ldr	r0, [r5, #20]
 8015a3c:	b128      	cbz	r0, 8015a4a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8015a3e:	6803      	ldr	r3, [r0, #0]
 8015a40:	4621      	mov	r1, r4
 8015a42:	691b      	ldr	r3, [r3, #16]
 8015a44:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015a48:	4718      	bx	r3
 8015a4a:	4b07      	ldr	r3, [pc, #28]	@ (8015a68 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8015a4c:	681b      	ldr	r3, [r3, #0]
 8015a4e:	3304      	adds	r3, #4
 8015a50:	429d      	cmp	r5, r3
 8015a52:	d108      	bne.n	8015a66 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8015a54:	f7fe fec6 	bl	80147e4 <_ZN8touchgfx11Application11getInstanceEv>
 8015a58:	6803      	ldr	r3, [r0, #0]
 8015a5a:	6821      	ldr	r1, [r4, #0]
 8015a5c:	6862      	ldr	r2, [r4, #4]
 8015a5e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8015a60:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015a64:	4718      	bx	r3
 8015a66:	bd70      	pop	{r4, r5, r6, pc}
 8015a68:	24001a6c 	.word	0x24001a6c

08015a6c <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8015a6c:	b570      	push	{r4, r5, r6, lr}
 8015a6e:	4604      	mov	r4, r0
 8015a70:	4616      	mov	r6, r2
 8015a72:	460d      	mov	r5, r1
 8015a74:	b901      	cbnz	r1, 8015a78 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8015a76:	b192      	cbz	r2, 8015a9e <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8015a78:	6823      	ldr	r3, [r4, #0]
 8015a7a:	4620      	mov	r0, r4
 8015a7c:	699b      	ldr	r3, [r3, #24]
 8015a7e:	4798      	blx	r3
 8015a80:	88e2      	ldrh	r2, [r4, #6]
 8015a82:	88a1      	ldrh	r1, [r4, #4]
 8015a84:	4620      	mov	r0, r4
 8015a86:	4432      	add	r2, r6
 8015a88:	4429      	add	r1, r5
 8015a8a:	b212      	sxth	r2, r2
 8015a8c:	b209      	sxth	r1, r1
 8015a8e:	f7f7 fdd6 	bl	800d63e <_ZN8touchgfx8Drawable5setXYEss>
 8015a92:	6823      	ldr	r3, [r4, #0]
 8015a94:	4620      	mov	r0, r4
 8015a96:	699b      	ldr	r3, [r3, #24]
 8015a98:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015a9c:	4718      	bx	r3
 8015a9e:	bd70      	pop	{r4, r5, r6, pc}

08015aa0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8015aa0:	b510      	push	{r4, lr}
 8015aa2:	2300      	movs	r3, #0
 8015aa4:	4604      	mov	r4, r0
 8015aa6:	4608      	mov	r0, r1
 8015aa8:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8015aac:	8023      	strh	r3, [r4, #0]
 8015aae:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8015ab2:	8063      	strh	r3, [r4, #2]
 8015ab4:	6803      	ldr	r3, [r0, #0]
 8015ab6:	80a1      	strh	r1, [r4, #4]
 8015ab8:	4621      	mov	r1, r4
 8015aba:	80e2      	strh	r2, [r4, #6]
 8015abc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015abe:	4798      	blx	r3
 8015ac0:	4620      	mov	r0, r4
 8015ac2:	bd10      	pop	{r4, pc}

08015ac4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8015ac4:	b530      	push	{r4, r5, lr}
 8015ac6:	8083      	strh	r3, [r0, #4]
 8015ac8:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8015acc:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8015ad0:	80c3      	strh	r3, [r0, #6]
 8015ad2:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8015ad6:	6141      	str	r1, [r0, #20]
 8015ad8:	7203      	strb	r3, [r0, #8]
 8015ada:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8015ade:	8302      	strh	r2, [r0, #24]
 8015ae0:	7243      	strb	r3, [r0, #9]
 8015ae2:	7a83      	ldrb	r3, [r0, #10]
 8015ae4:	f365 0306 	bfi	r3, r5, #0, #7
 8015ae8:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8015aec:	f365 13c7 	bfi	r3, r5, #7, #1
 8015af0:	7283      	strb	r3, [r0, #10]
 8015af2:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8015af6:	72c3      	strb	r3, [r0, #11]
 8015af8:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 8015afc:	7303      	strb	r3, [r0, #12]
 8015afe:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8015b02:	81c3      	strh	r3, [r0, #14]
 8015b04:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8015b08:	8203      	strh	r3, [r0, #16]
 8015b0a:	4b01      	ldr	r3, [pc, #4]	@ (8015b10 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8015b0c:	6003      	str	r3, [r0, #0]
 8015b0e:	bd30      	pop	{r4, r5, pc}
 8015b10:	080287f8 	.word	0x080287f8

08015b14 <_ZNK8touchgfx9ConstFont4findEt>:
 8015b14:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015b16:	6944      	ldr	r4, [r0, #20]
 8015b18:	b3bc      	cbz	r4, 8015b8a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015b1a:	88a3      	ldrh	r3, [r4, #4]
 8015b1c:	8b02      	ldrh	r2, [r0, #24]
 8015b1e:	1acb      	subs	r3, r1, r3
 8015b20:	f102 32ff 	add.w	r2, r2, #4294967295
 8015b24:	d431      	bmi.n	8015b8a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015b26:	4293      	cmp	r3, r2
 8015b28:	dd0c      	ble.n	8015b44 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8015b2a:	230e      	movs	r3, #14
 8015b2c:	fb03 4302 	mla	r3, r3, r2, r4
 8015b30:	889b      	ldrh	r3, [r3, #4]
 8015b32:	1a5b      	subs	r3, r3, r1
 8015b34:	1ad3      	subs	r3, r2, r3
 8015b36:	429a      	cmp	r2, r3
 8015b38:	db27      	blt.n	8015b8a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015b3a:	2b00      	cmp	r3, #0
 8015b3c:	bfbc      	itt	lt
 8015b3e:	2302      	movlt	r3, #2
 8015b40:	fb92 f3f3 	sdivlt	r3, r2, r3
 8015b44:	2500      	movs	r5, #0
 8015b46:	260e      	movs	r6, #14
 8015b48:	4295      	cmp	r5, r2
 8015b4a:	dc1e      	bgt.n	8015b8a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015b4c:	fb06 4003 	mla	r0, r6, r3, r4
 8015b50:	8887      	ldrh	r7, [r0, #4]
 8015b52:	42b9      	cmp	r1, r7
 8015b54:	d01a      	beq.n	8015b8c <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8015b56:	d20d      	bcs.n	8015b74 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8015b58:	1e5a      	subs	r2, r3, #1
 8015b5a:	4295      	cmp	r5, r2
 8015b5c:	dc15      	bgt.n	8015b8a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015b5e:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8015b62:	1a5b      	subs	r3, r3, r1
 8015b64:	1ad3      	subs	r3, r2, r3
 8015b66:	429a      	cmp	r2, r3
 8015b68:	db0f      	blt.n	8015b8a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015b6a:	429d      	cmp	r5, r3
 8015b6c:	ddec      	ble.n	8015b48 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8015b6e:	1953      	adds	r3, r2, r5
 8015b70:	105b      	asrs	r3, r3, #1
 8015b72:	e7e9      	b.n	8015b48 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8015b74:	1c5d      	adds	r5, r3, #1
 8015b76:	42aa      	cmp	r2, r5
 8015b78:	db07      	blt.n	8015b8a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015b7a:	8a43      	ldrh	r3, [r0, #18]
 8015b7c:	1acb      	subs	r3, r1, r3
 8015b7e:	442b      	add	r3, r5
 8015b80:	429d      	cmp	r5, r3
 8015b82:	dc02      	bgt.n	8015b8a <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015b84:	429a      	cmp	r2, r3
 8015b86:	dadf      	bge.n	8015b48 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8015b88:	e7f1      	b.n	8015b6e <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8015b8a:	2000      	movs	r0, #0
 8015b8c:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015b8e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8015b8e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015b90:	4604      	mov	r4, r0
 8015b92:	4617      	mov	r7, r2
 8015b94:	461e      	mov	r6, r3
 8015b96:	b911      	cbnz	r1, 8015b9e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8015b98:	2500      	movs	r5, #0
 8015b9a:	4628      	mov	r0, r5
 8015b9c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015b9e:	290a      	cmp	r1, #10
 8015ba0:	d0fa      	beq.n	8015b98 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8015ba2:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 8015ba6:	4291      	cmp	r1, r2
 8015ba8:	d0f6      	beq.n	8015b98 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8015baa:	f242 020b 	movw	r2, #8203	@ 0x200b
 8015bae:	4291      	cmp	r1, r2
 8015bb0:	d0f2      	beq.n	8015b98 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8015bb2:	f7ff ffaf 	bl	8015b14 <_ZNK8touchgfx9ConstFont4findEt>
 8015bb6:	4605      	mov	r5, r0
 8015bb8:	b950      	cbnz	r0, 8015bd0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8015bba:	6823      	ldr	r3, [r4, #0]
 8015bbc:	4620      	mov	r0, r4
 8015bbe:	691b      	ldr	r3, [r3, #16]
 8015bc0:	4798      	blx	r3
 8015bc2:	4601      	mov	r1, r0
 8015bc4:	4620      	mov	r0, r4
 8015bc6:	f7ff ffa5 	bl	8015b14 <_ZNK8touchgfx9ConstFont4findEt>
 8015bca:	4605      	mov	r5, r0
 8015bcc:	2800      	cmp	r0, #0
 8015bce:	d0e3      	beq.n	8015b98 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8015bd0:	6823      	ldr	r3, [r4, #0]
 8015bd2:	4629      	mov	r1, r5
 8015bd4:	4620      	mov	r0, r4
 8015bd6:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8015bd8:	4798      	blx	r3
 8015bda:	6038      	str	r0, [r7, #0]
 8015bdc:	6823      	ldr	r3, [r4, #0]
 8015bde:	4620      	mov	r0, r4
 8015be0:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8015be2:	4798      	blx	r3
 8015be4:	7030      	strb	r0, [r6, #0]
 8015be6:	e7d8      	b.n	8015b9a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08015be8 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8015be8:	2000      	movs	r0, #0
 8015bea:	4770      	bx	lr

08015bec <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8015bec:	2001      	movs	r0, #1
 8015bee:	4770      	bx	lr

08015bf0 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8015bf0:	2002      	movs	r0, #2
 8015bf2:	4770      	bx	lr

08015bf4 <_ZN8touchgfx12GestureEventD1Ev>:
 8015bf4:	4770      	bx	lr

08015bf6 <_ZN8touchgfx9DragEventD1Ev>:
 8015bf6:	4770      	bx	lr

08015bf8 <_ZN8touchgfx10ClickEventD1Ev>:
 8015bf8:	4770      	bx	lr

08015bfa <_ZN8touchgfx10ClickEventD0Ev>:
 8015bfa:	b510      	push	{r4, lr}
 8015bfc:	4604      	mov	r4, r0
 8015bfe:	210c      	movs	r1, #12
 8015c00:	f00f fde5 	bl	80257ce <_ZdlPvj>
 8015c04:	4620      	mov	r0, r4
 8015c06:	bd10      	pop	{r4, pc}

08015c08 <_ZN8touchgfx9DragEventD0Ev>:
 8015c08:	b510      	push	{r4, lr}
 8015c0a:	4604      	mov	r4, r0
 8015c0c:	2110      	movs	r1, #16
 8015c0e:	f00f fdde 	bl	80257ce <_ZdlPvj>
 8015c12:	4620      	mov	r0, r4
 8015c14:	bd10      	pop	{r4, pc}

08015c16 <_ZN8touchgfx12GestureEventD0Ev>:
 8015c16:	b510      	push	{r4, lr}
 8015c18:	4604      	mov	r4, r0
 8015c1a:	210c      	movs	r1, #12
 8015c1c:	f00f fdd7 	bl	80257ce <_ZdlPvj>
 8015c20:	4620      	mov	r0, r4
 8015c22:	bd10      	pop	{r4, pc}

08015c24 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8015c24:	b530      	push	{r4, r5, lr}
 8015c26:	460d      	mov	r5, r1
 8015c28:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8015c2a:	b087      	sub	sp, #28
 8015c2c:	4604      	mov	r4, r0
 8015c2e:	b301      	cbz	r1, 8015c72 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8015c30:	a801      	add	r0, sp, #4
 8015c32:	f7ff ff35 	bl	8015aa0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015c36:	892a      	ldrh	r2, [r5, #8]
 8015c38:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8015c3c:	7928      	ldrb	r0, [r5, #4]
 8015c3e:	1ad2      	subs	r2, r2, r3
 8015c40:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 8015c42:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8015c46:	441a      	add	r2, r3
 8015c48:	896b      	ldrh	r3, [r5, #10]
 8015c4a:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8015c4e:	f88d 0010 	strb.w	r0, [sp, #16]
 8015c52:	1b5b      	subs	r3, r3, r5
 8015c54:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 8015c56:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8015c58:	442b      	add	r3, r5
 8015c5a:	4d07      	ldr	r5, [pc, #28]	@ (8015c78 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8015c5c:	f8ad 1012 	strh.w	r1, [sp, #18]
 8015c60:	a903      	add	r1, sp, #12
 8015c62:	9503      	str	r5, [sp, #12]
 8015c64:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015c68:	f8ad 3016 	strh.w	r3, [sp, #22]
 8015c6c:	6803      	ldr	r3, [r0, #0]
 8015c6e:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8015c70:	4798      	blx	r3
 8015c72:	b007      	add	sp, #28
 8015c74:	bd30      	pop	{r4, r5, pc}
 8015c76:	bf00      	nop
 8015c78:	08028888 	.word	0x08028888

08015c7c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8015c7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015c80:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8015c82:	b08a      	sub	sp, #40	@ 0x28
 8015c84:	4604      	mov	r4, r0
 8015c86:	460d      	mov	r5, r1
 8015c88:	b113      	cbz	r3, 8015c90 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8015c8a:	790b      	ldrb	r3, [r1, #4]
 8015c8c:	2b00      	cmp	r3, #0
 8015c8e:	d044      	beq.n	8015d1a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8015c90:	f104 0804 	add.w	r8, r4, #4
 8015c94:	a803      	add	r0, sp, #12
 8015c96:	4641      	mov	r1, r8
 8015c98:	f7ff ff02 	bl	8015aa0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015c9c:	792b      	ldrb	r3, [r5, #4]
 8015c9e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8015ca2:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8015ca6:	b983      	cbnz	r3, 8015cca <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8015ca8:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 8015cac:	892a      	ldrh	r2, [r5, #8]
 8015cae:	88e9      	ldrh	r1, [r5, #6]
 8015cb0:	4640      	mov	r0, r8
 8015cb2:	1b92      	subs	r2, r2, r6
 8015cb4:	9301      	str	r3, [sp, #4]
 8015cb6:	1bc9      	subs	r1, r1, r7
 8015cb8:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 8015cbc:	b212      	sxth	r2, r2
 8015cbe:	9300      	str	r3, [sp, #0]
 8015cc0:	b209      	sxth	r1, r1
 8015cc2:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 8015cc6:	f7fb fc21 	bl	801150c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8015cca:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8015ccc:	b329      	cbz	r1, 8015d1a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8015cce:	a805      	add	r0, sp, #20
 8015cd0:	f7ff fee6 	bl	8015aa0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015cd4:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8015cd8:	792b      	ldrb	r3, [r5, #4]
 8015cda:	a907      	add	r1, sp, #28
 8015cdc:	1abf      	subs	r7, r7, r2
 8015cde:	88ea      	ldrh	r2, [r5, #6]
 8015ce0:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8015ce2:	4417      	add	r7, r2
 8015ce4:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 8015ce6:	f88d 3020 	strb.w	r3, [sp, #32]
 8015cea:	4417      	add	r7, r2
 8015cec:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8015cf0:	1ab6      	subs	r6, r6, r2
 8015cf2:	892a      	ldrh	r2, [r5, #8]
 8015cf4:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 8015cf8:	4416      	add	r6, r2
 8015cfa:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8015cfc:	4416      	add	r6, r2
 8015cfe:	4a08      	ldr	r2, [pc, #32]	@ (8015d20 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8015d00:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 8015d04:	2600      	movs	r6, #0
 8015d06:	9207      	str	r2, [sp, #28]
 8015d08:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 8015d0c:	6803      	ldr	r3, [r0, #0]
 8015d0e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8015d10:	4798      	blx	r3
 8015d12:	792b      	ldrb	r3, [r5, #4]
 8015d14:	b10b      	cbz	r3, 8015d1a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8015d16:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 8015d1a:	b00a      	add	sp, #40	@ 0x28
 8015d1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015d20:	08028860 	.word	0x08028860

08015d24 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8015d24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015d28:	460c      	mov	r4, r1
 8015d2a:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 8015d2c:	b088      	sub	sp, #32
 8015d2e:	4605      	mov	r5, r0
 8015d30:	2900      	cmp	r1, #0
 8015d32:	d06d      	beq.n	8015e10 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8015d34:	4668      	mov	r0, sp
 8015d36:	f7ff feb3 	bl	8015aa0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015d3a:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 8015d3c:	88e3      	ldrh	r3, [r4, #6]
 8015d3e:	f9bd 8000 	ldrsh.w	r8, [sp]
 8015d42:	440b      	add	r3, r1
 8015d44:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8015d48:	b21b      	sxth	r3, r3
 8015d4a:	4543      	cmp	r3, r8
 8015d4c:	db31      	blt.n	8015db2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8015d4e:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8015d52:	44c4      	add	ip, r8
 8015d54:	fa0f fc8c 	sxth.w	ip, ip
 8015d58:	4563      	cmp	r3, ip
 8015d5a:	da2a      	bge.n	8015db2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8015d5c:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 8015d5e:	8926      	ldrh	r6, [r4, #8]
 8015d60:	4416      	add	r6, r2
 8015d62:	b236      	sxth	r6, r6
 8015d64:	42be      	cmp	r6, r7
 8015d66:	db24      	blt.n	8015db2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8015d68:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8015d6c:	4438      	add	r0, r7
 8015d6e:	b200      	sxth	r0, r0
 8015d70:	4286      	cmp	r6, r0
 8015d72:	da1e      	bge.n	8015db2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8015d74:	8963      	ldrh	r3, [r4, #10]
 8015d76:	4419      	add	r1, r3
 8015d78:	b209      	sxth	r1, r1
 8015d7a:	4541      	cmp	r1, r8
 8015d7c:	db08      	blt.n	8015d90 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8015d7e:	4561      	cmp	r1, ip
 8015d80:	da06      	bge.n	8015d90 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8015d82:	89a3      	ldrh	r3, [r4, #12]
 8015d84:	441a      	add	r2, r3
 8015d86:	b212      	sxth	r2, r2
 8015d88:	42ba      	cmp	r2, r7
 8015d8a:	db01      	blt.n	8015d90 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8015d8c:	4282      	cmp	r2, r0
 8015d8e:	db10      	blt.n	8015db2 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8015d90:	4b21      	ldr	r3, [pc, #132]	@ (8015e18 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8015d92:	a904      	add	r1, sp, #16
 8015d94:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8015d96:	9304      	str	r3, [sp, #16]
 8015d98:	2302      	movs	r3, #2
 8015d9a:	f88d 3014 	strb.w	r3, [sp, #20]
 8015d9e:	2300      	movs	r3, #0
 8015da0:	f8ad 3016 	strh.w	r3, [sp, #22]
 8015da4:	f8ad 3018 	strh.w	r3, [sp, #24]
 8015da8:	f8ad 301a 	strh.w	r3, [sp, #26]
 8015dac:	6803      	ldr	r3, [r0, #0]
 8015dae:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8015db0:	4798      	blx	r3
 8015db2:	1d29      	adds	r1, r5, #4
 8015db4:	a802      	add	r0, sp, #8
 8015db6:	f7ff fe73 	bl	8015aa0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015dba:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8015dbe:	88e0      	ldrh	r0, [r4, #6]
 8015dc0:	eba3 0808 	sub.w	r8, r3, r8
 8015dc4:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8015dc8:	7921      	ldrb	r1, [r4, #4]
 8015dca:	fa1f f888 	uxth.w	r8, r8
 8015dce:	1bdf      	subs	r7, r3, r7
 8015dd0:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 8015dd4:	b2bb      	uxth	r3, r7
 8015dd6:	4440      	add	r0, r8
 8015dd8:	8922      	ldrh	r2, [r4, #8]
 8015dda:	8967      	ldrh	r7, [r4, #10]
 8015ddc:	4460      	add	r0, ip
 8015dde:	89a4      	ldrh	r4, [r4, #12]
 8015de0:	441a      	add	r2, r3
 8015de2:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 8015de4:	44b8      	add	r8, r7
 8015de6:	4423      	add	r3, r4
 8015de8:	f8ad 0016 	strh.w	r0, [sp, #22]
 8015dec:	4432      	add	r2, r6
 8015dee:	44e0      	add	r8, ip
 8015df0:	4433      	add	r3, r6
 8015df2:	4c0a      	ldr	r4, [pc, #40]	@ (8015e1c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8015df4:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8015df6:	f88d 1014 	strb.w	r1, [sp, #20]
 8015dfa:	a904      	add	r1, sp, #16
 8015dfc:	9404      	str	r4, [sp, #16]
 8015dfe:	f8ad 2018 	strh.w	r2, [sp, #24]
 8015e02:	f8ad 801a 	strh.w	r8, [sp, #26]
 8015e06:	f8ad 301c 	strh.w	r3, [sp, #28]
 8015e0a:	6803      	ldr	r3, [r0, #0]
 8015e0c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8015e0e:	4798      	blx	r3
 8015e10:	b008      	add	sp, #32
 8015e12:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015e16:	bf00      	nop
 8015e18:	08028860 	.word	0x08028860
 8015e1c:	08028874 	.word	0x08028874

08015e20 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8015e20:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8015e22:	4604      	mov	r4, r0
 8015e24:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8015e28:	3201      	adds	r2, #1
 8015e2a:	d112      	bne.n	8015e52 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8015e2c:	2500      	movs	r5, #0
 8015e2e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8015e32:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8015e36:	6803      	ldr	r3, [r0, #0]
 8015e38:	9500      	str	r5, [sp, #0]
 8015e3a:	466d      	mov	r5, sp
 8015e3c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8015e40:	f8ad 2006 	strh.w	r2, [sp, #6]
 8015e44:	4629      	mov	r1, r5
 8015e46:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8015e48:	4798      	blx	r3
 8015e4a:	e895 0003 	ldmia.w	r5, {r0, r1}
 8015e4e:	e884 0003 	stmia.w	r4, {r0, r1}
 8015e52:	4620      	mov	r0, r4
 8015e54:	b003      	add	sp, #12
 8015e56:	bd30      	pop	{r4, r5, pc}

08015e58 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8015e58:	b513      	push	{r0, r1, r4, lr}
 8015e5a:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8015e5e:	4604      	mov	r4, r0
 8015e60:	3301      	adds	r3, #1
 8015e62:	d109      	bne.n	8015e78 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8015e64:	4601      	mov	r1, r0
 8015e66:	4668      	mov	r0, sp
 8015e68:	f7ff fe1a 	bl	8015aa0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015e6c:	f8bd 3000 	ldrh.w	r3, [sp]
 8015e70:	8423      	strh	r3, [r4, #32]
 8015e72:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8015e76:	8463      	strh	r3, [r4, #34]	@ 0x22
 8015e78:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8015e7c:	b002      	add	sp, #8
 8015e7e:	bd10      	pop	{r4, pc}

08015e80 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8015e80:	b513      	push	{r0, r1, r4, lr}
 8015e82:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 8015e86:	4604      	mov	r4, r0
 8015e88:	3301      	adds	r3, #1
 8015e8a:	d109      	bne.n	8015ea0 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8015e8c:	4601      	mov	r1, r0
 8015e8e:	4668      	mov	r0, sp
 8015e90:	f7ff fe06 	bl	8015aa0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015e94:	f8bd 3000 	ldrh.w	r3, [sp]
 8015e98:	8423      	strh	r3, [r4, #32]
 8015e9a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8015e9e:	8463      	strh	r3, [r4, #34]	@ 0x22
 8015ea0:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 8015ea4:	b002      	add	sp, #8
 8015ea6:	bd10      	pop	{r4, pc}

08015ea8 <_ZN8touchgfx6ScreenC1Ev>:
 8015ea8:	b570      	push	{r4, r5, r6, lr}
 8015eaa:	4b17      	ldr	r3, [pc, #92]	@ (8015f08 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8015eac:	4605      	mov	r5, r0
 8015eae:	4a17      	ldr	r2, [pc, #92]	@ (8015f0c <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8015eb0:	2101      	movs	r1, #1
 8015eb2:	f845 3b04 	str.w	r3, [r5], #4
 8015eb6:	2300      	movs	r3, #0
 8015eb8:	6042      	str	r2, [r0, #4]
 8015eba:	4604      	mov	r4, r0
 8015ebc:	8103      	strh	r3, [r0, #8]
 8015ebe:	8143      	strh	r3, [r0, #10]
 8015ec0:	8183      	strh	r3, [r0, #12]
 8015ec2:	81c3      	strh	r3, [r0, #14]
 8015ec4:	8203      	strh	r3, [r0, #16]
 8015ec6:	8243      	strh	r3, [r0, #18]
 8015ec8:	8283      	strh	r3, [r0, #20]
 8015eca:	82c3      	strh	r3, [r0, #22]
 8015ecc:	6203      	str	r3, [r0, #32]
 8015ece:	8483      	strh	r3, [r0, #36]	@ 0x24
 8015ed0:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8015ed2:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 8015ed6:	6343      	str	r3, [r0, #52]	@ 0x34
 8015ed8:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 8015edc:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 8015ee0:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8015ee4:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 8015ee8:	4b09      	ldr	r3, [pc, #36]	@ (8015f10 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8015eea:	4628      	mov	r0, r5
 8015eec:	f9b3 6000 	ldrsh.w	r6, [r3]
 8015ef0:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 8015ef2:	4a08      	ldr	r2, [pc, #32]	@ (8015f14 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8015ef4:	f9b2 1000 	ldrsh.w	r1, [r2]
 8015ef8:	4798      	blx	r3
 8015efa:	6863      	ldr	r3, [r4, #4]
 8015efc:	4628      	mov	r0, r5
 8015efe:	4631      	mov	r1, r6
 8015f00:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8015f02:	4798      	blx	r3
 8015f04:	4620      	mov	r0, r4
 8015f06:	bd70      	pop	{r4, r5, r6, pc}
 8015f08:	0802889c 	.word	0x0802889c
 8015f0c:	080281ec 	.word	0x080281ec
 8015f10:	24001a26 	.word	0x24001a26
 8015f14:	24001a24 	.word	0x24001a24

08015f18 <_ZN8touchgfx6Screen4drawEv>:
 8015f18:	4b09      	ldr	r3, [pc, #36]	@ (8015f40 <_ZN8touchgfx6Screen4drawEv+0x28>)
 8015f1a:	b507      	push	{r0, r1, r2, lr}
 8015f1c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8015f20:	2100      	movs	r1, #0
 8015f22:	4b08      	ldr	r3, [pc, #32]	@ (8015f44 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8015f24:	9100      	str	r1, [sp, #0]
 8015f26:	4669      	mov	r1, sp
 8015f28:	f9b3 3000 	ldrsh.w	r3, [r3]
 8015f2c:	f8ad 2004 	strh.w	r2, [sp, #4]
 8015f30:	f8ad 3006 	strh.w	r3, [sp, #6]
 8015f34:	6803      	ldr	r3, [r0, #0]
 8015f36:	689b      	ldr	r3, [r3, #8]
 8015f38:	4798      	blx	r3
 8015f3a:	b003      	add	sp, #12
 8015f3c:	f85d fb04 	ldr.w	pc, [sp], #4
 8015f40:	24001a24 	.word	0x24001a24
 8015f44:	24001a26 	.word	0x24001a26

08015f48 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8015f48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015f4c:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8015f50:	b089      	sub	sp, #36	@ 0x24
 8015f52:	4680      	mov	r8, r0
 8015f54:	460c      	mov	r4, r1
 8015f56:	2b00      	cmp	r3, #0
 8015f58:	4615      	mov	r5, r2
 8015f5a:	dd0e      	ble.n	8015f7a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8015f5c:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8015f60:	2b00      	cmp	r3, #0
 8015f62:	dd0a      	ble.n	8015f7a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8015f64:	4628      	mov	r0, r5
 8015f66:	f7ff ff5b 	bl	8015e20 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8015f6a:	4621      	mov	r1, r4
 8015f6c:	f7fe fb5c 	bl	8014628 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015f70:	69eb      	ldr	r3, [r5, #28]
 8015f72:	b928      	cbnz	r0, 8015f80 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8015f74:	461d      	mov	r5, r3
 8015f76:	2b00      	cmp	r3, #0
 8015f78:	d1f4      	bne.n	8015f64 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8015f7a:	b009      	add	sp, #36	@ 0x24
 8015f7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015f80:	ae04      	add	r6, sp, #16
 8015f82:	2b00      	cmp	r3, #0
 8015f84:	f000 80b5 	beq.w	80160f2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8015f88:	682b      	ldr	r3, [r5, #0]
 8015f8a:	4629      	mov	r1, r5
 8015f8c:	a802      	add	r0, sp, #8
 8015f8e:	68db      	ldr	r3, [r3, #12]
 8015f90:	4798      	blx	r3
 8015f92:	4628      	mov	r0, r5
 8015f94:	f7ff ff60 	bl	8015e58 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8015f98:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8015f9c:	4407      	add	r7, r0
 8015f9e:	4628      	mov	r0, r5
 8015fa0:	f7ff ff6e 	bl	8015e80 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8015fa4:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8015fa8:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8015fac:	b23f      	sxth	r7, r7
 8015fae:	4418      	add	r0, r3
 8015fb0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8015fb4:	4621      	mov	r1, r4
 8015fb6:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015fba:	f8ad 0012 	strh.w	r0, [sp, #18]
 8015fbe:	4630      	mov	r0, r6
 8015fc0:	f8ad 3016 	strh.w	r3, [sp, #22]
 8015fc4:	f8ad 7010 	strh.w	r7, [sp, #16]
 8015fc8:	f7fb fb82 	bl	80116d0 <_ZN8touchgfx4RectaNERKS0_>
 8015fcc:	4628      	mov	r0, r5
 8015fce:	f7ff ff27 	bl	8015e20 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8015fd2:	ab06      	add	r3, sp, #24
 8015fd4:	4602      	mov	r2, r0
 8015fd6:	e896 0003 	ldmia.w	r6, {r0, r1}
 8015fda:	e883 0003 	stmia.w	r3, {r0, r1}
 8015fde:	4611      	mov	r1, r2
 8015fe0:	4618      	mov	r0, r3
 8015fe2:	f7fb fb75 	bl	80116d0 <_ZN8touchgfx4RectaNERKS0_>
 8015fe6:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8015fea:	f9b4 1000 	ldrsh.w	r1, [r4]
 8015fee:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8015ff2:	4299      	cmp	r1, r3
 8015ff4:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8015ff8:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 8015ffc:	d10b      	bne.n	8016016 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8015ffe:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8016002:	4552      	cmp	r2, sl
 8016004:	d107      	bne.n	8016016 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8016006:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801600a:	455a      	cmp	r2, fp
 801600c:	d103      	bne.n	8016016 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801600e:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8016012:	454a      	cmp	r2, r9
 8016014:	d06d      	beq.n	80160f2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8016016:	f1bb 0f00 	cmp.w	fp, #0
 801601a:	dd65      	ble.n	80160e8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801601c:	f1b9 0f00 	cmp.w	r9, #0
 8016020:	dd62      	ble.n	80160e8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8016022:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8016026:	fa1f f08a 	uxth.w	r0, sl
 801602a:	4552      	cmp	r2, sl
 801602c:	9000      	str	r0, [sp, #0]
 801602e:	da12      	bge.n	8016056 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 8016030:	9301      	str	r3, [sp, #4]
 8016032:	9b00      	ldr	r3, [sp, #0]
 8016034:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8016038:	f8ad 2012 	strh.w	r2, [sp, #18]
 801603c:	1a9a      	subs	r2, r3, r2
 801603e:	f8ad 1010 	strh.w	r1, [sp, #16]
 8016042:	4631      	mov	r1, r6
 8016044:	f8ad 0014 	strh.w	r0, [sp, #20]
 8016048:	4640      	mov	r0, r8
 801604a:	f8ad 2016 	strh.w	r2, [sp, #22]
 801604e:	69ea      	ldr	r2, [r5, #28]
 8016050:	f7ff ff7a 	bl	8015f48 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8016054:	9b01      	ldr	r3, [sp, #4]
 8016056:	f9b4 2000 	ldrsh.w	r2, [r4]
 801605a:	b29f      	uxth	r7, r3
 801605c:	429a      	cmp	r2, r3
 801605e:	da0d      	bge.n	801607c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8016060:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016064:	1aba      	subs	r2, r7, r2
 8016066:	f8ad a012 	strh.w	sl, [sp, #18]
 801606a:	4631      	mov	r1, r6
 801606c:	f8ad 2014 	strh.w	r2, [sp, #20]
 8016070:	4640      	mov	r0, r8
 8016072:	f8ad 9016 	strh.w	r9, [sp, #22]
 8016076:	69ea      	ldr	r2, [r5, #28]
 8016078:	f7ff ff66 	bl	8015f48 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801607c:	8822      	ldrh	r2, [r4, #0]
 801607e:	445f      	add	r7, fp
 8016080:	88a3      	ldrh	r3, [r4, #4]
 8016082:	b2bf      	uxth	r7, r7
 8016084:	4413      	add	r3, r2
 8016086:	b23a      	sxth	r2, r7
 8016088:	b29b      	uxth	r3, r3
 801608a:	b219      	sxth	r1, r3
 801608c:	4291      	cmp	r1, r2
 801608e:	dd0d      	ble.n	80160ac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8016090:	1bdb      	subs	r3, r3, r7
 8016092:	f8ad 2010 	strh.w	r2, [sp, #16]
 8016096:	f8ad a012 	strh.w	sl, [sp, #18]
 801609a:	4631      	mov	r1, r6
 801609c:	f8ad 3014 	strh.w	r3, [sp, #20]
 80160a0:	4640      	mov	r0, r8
 80160a2:	f8ad 9016 	strh.w	r9, [sp, #22]
 80160a6:	69ea      	ldr	r2, [r5, #28]
 80160a8:	f7ff ff4e 	bl	8015f48 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80160ac:	88e2      	ldrh	r2, [r4, #6]
 80160ae:	8863      	ldrh	r3, [r4, #2]
 80160b0:	4413      	add	r3, r2
 80160b2:	9a00      	ldr	r2, [sp, #0]
 80160b4:	444a      	add	r2, r9
 80160b6:	b29b      	uxth	r3, r3
 80160b8:	fa1f f982 	uxth.w	r9, r2
 80160bc:	b219      	sxth	r1, r3
 80160be:	fa0f f289 	sxth.w	r2, r9
 80160c2:	428a      	cmp	r2, r1
 80160c4:	da15      	bge.n	80160f2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80160c6:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80160ca:	eba3 0309 	sub.w	r3, r3, r9
 80160ce:	f9b4 0000 	ldrsh.w	r0, [r4]
 80160d2:	f8ad 1014 	strh.w	r1, [sp, #20]
 80160d6:	4631      	mov	r1, r6
 80160d8:	f8ad 0010 	strh.w	r0, [sp, #16]
 80160dc:	f8ad 2012 	strh.w	r2, [sp, #18]
 80160e0:	f8ad 3016 	strh.w	r3, [sp, #22]
 80160e4:	69ea      	ldr	r2, [r5, #28]
 80160e6:	e001      	b.n	80160ec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 80160e8:	69ea      	ldr	r2, [r5, #28]
 80160ea:	4621      	mov	r1, r4
 80160ec:	4640      	mov	r0, r8
 80160ee:	f7ff ff2b 	bl	8015f48 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80160f2:	4628      	mov	r0, r5
 80160f4:	f7ff fe94 	bl	8015e20 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80160f8:	6861      	ldr	r1, [r4, #4]
 80160fa:	4602      	mov	r2, r0
 80160fc:	4633      	mov	r3, r6
 80160fe:	6820      	ldr	r0, [r4, #0]
 8016100:	c303      	stmia	r3!, {r0, r1}
 8016102:	4611      	mov	r1, r2
 8016104:	4630      	mov	r0, r6
 8016106:	f7fb fae3 	bl	80116d0 <_ZN8touchgfx4RectaNERKS0_>
 801610a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801610e:	2b00      	cmp	r3, #0
 8016110:	f77f af33 	ble.w	8015f7a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8016114:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8016118:	2b00      	cmp	r3, #0
 801611a:	f77f af2e 	ble.w	8015f7a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801611e:	4628      	mov	r0, r5
 8016120:	f7ff fe9a 	bl	8015e58 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8016124:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8016128:	1a18      	subs	r0, r3, r0
 801612a:	f8ad 0010 	strh.w	r0, [sp, #16]
 801612e:	4628      	mov	r0, r5
 8016130:	f7ff fea6 	bl	8015e80 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8016134:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8016138:	4631      	mov	r1, r6
 801613a:	1a18      	subs	r0, r3, r0
 801613c:	f8ad 0012 	strh.w	r0, [sp, #18]
 8016140:	4628      	mov	r0, r5
 8016142:	682b      	ldr	r3, [r5, #0]
 8016144:	689b      	ldr	r3, [r3, #8]
 8016146:	4798      	blx	r3
 8016148:	e717      	b.n	8015f7a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0801614a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 801614a:	b570      	push	{r4, r5, r6, lr}
 801614c:	1d06      	adds	r6, r0, #4
 801614e:	b086      	sub	sp, #24
 8016150:	460c      	mov	r4, r1
 8016152:	2300      	movs	r3, #0
 8016154:	4631      	mov	r1, r6
 8016156:	4605      	mov	r5, r0
 8016158:	a802      	add	r0, sp, #8
 801615a:	9301      	str	r3, [sp, #4]
 801615c:	f7ff fca0 	bl	8015aa0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8016160:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016164:	8822      	ldrh	r2, [r4, #0]
 8016166:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 801616a:	1ad2      	subs	r2, r2, r3
 801616c:	8863      	ldrh	r3, [r4, #2]
 801616e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8016172:	1a5b      	subs	r3, r3, r1
 8016174:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8016178:	f8ad 2010 	strh.w	r2, [sp, #16]
 801617c:	aa01      	add	r2, sp, #4
 801617e:	f8ad 0014 	strh.w	r0, [sp, #20]
 8016182:	4630      	mov	r0, r6
 8016184:	f8ad 1016 	strh.w	r1, [sp, #22]
 8016188:	a904      	add	r1, sp, #16
 801618a:	f8ad 3012 	strh.w	r3, [sp, #18]
 801618e:	f7fb fb77 	bl	8011880 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8016192:	9a01      	ldr	r2, [sp, #4]
 8016194:	b11a      	cbz	r2, 801619e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8016196:	4621      	mov	r1, r4
 8016198:	4628      	mov	r0, r5
 801619a:	f7ff fed5 	bl	8015f48 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801619e:	b006      	add	sp, #24
 80161a0:	bd70      	pop	{r4, r5, r6, pc}

080161a2 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 80161a2:	4602      	mov	r2, r0
 80161a4:	b530      	push	{r4, r5, lr}
 80161a6:	4604      	mov	r4, r0
 80161a8:	b085      	sub	sp, #20
 80161aa:	f852 0f08 	ldr.w	r0, [r2, #8]!
 80161ae:	460d      	mov	r5, r1
 80161b0:	466b      	mov	r3, sp
 80161b2:	6851      	ldr	r1, [r2, #4]
 80161b4:	c303      	stmia	r3!, {r0, r1}
 80161b6:	4629      	mov	r1, r5
 80161b8:	4668      	mov	r0, sp
 80161ba:	f7fb fa89 	bl	80116d0 <_ZN8touchgfx4RectaNERKS0_>
 80161be:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 80161c2:	b12b      	cbz	r3, 80161d0 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 80161c4:	4669      	mov	r1, sp
 80161c6:	4620      	mov	r0, r4
 80161c8:	f7ff ffbf 	bl	801614a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 80161cc:	b005      	add	sp, #20
 80161ce:	bd30      	pop	{r4, r5, pc}
 80161d0:	3404      	adds	r4, #4
 80161d2:	a802      	add	r0, sp, #8
 80161d4:	4621      	mov	r1, r4
 80161d6:	f7ff fc63 	bl	8015aa0 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80161da:	f8bd 3000 	ldrh.w	r3, [sp]
 80161de:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 80161e2:	4669      	mov	r1, sp
 80161e4:	4620      	mov	r0, r4
 80161e6:	1a9b      	subs	r3, r3, r2
 80161e8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80161ec:	f8ad 3000 	strh.w	r3, [sp]
 80161f0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80161f4:	1a9b      	subs	r3, r3, r2
 80161f6:	f8ad 3002 	strh.w	r3, [sp, #2]
 80161fa:	f7fb fb08 	bl	801180e <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 80161fe:	e7e5      	b.n	80161cc <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08016200 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8016200:	460b      	mov	r3, r1
 8016202:	680a      	ldr	r2, [r1, #0]
 8016204:	1d01      	adds	r1, r0, #4
 8016206:	6992      	ldr	r2, [r2, #24]
 8016208:	4618      	mov	r0, r3
 801620a:	4710      	bx	r2

0801620c <_ZN8touchgfx12TextProviderC1Ev>:
 801620c:	b538      	push	{r3, r4, r5, lr}
 801620e:	2500      	movs	r5, #0
 8016210:	2302      	movs	r3, #2
 8016212:	4604      	mov	r4, r0
 8016214:	220e      	movs	r2, #14
 8016216:	7403      	strb	r3, [r0, #16]
 8016218:	4629      	mov	r1, r5
 801621a:	6145      	str	r5, [r0, #20]
 801621c:	7605      	strb	r5, [r0, #24]
 801621e:	83c5      	strh	r5, [r0, #30]
 8016220:	8405      	strh	r5, [r0, #32]
 8016222:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8016224:	8705      	strh	r5, [r0, #56]	@ 0x38
 8016226:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 8016228:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 801622c:	e9c0 5500 	strd	r5, r5, [r0]
 8016230:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 8016234:	304c      	adds	r0, #76	@ 0x4c
 8016236:	f00f fe05 	bl	8025e44 <memset>
 801623a:	2301      	movs	r3, #1
 801623c:	4620      	mov	r0, r4
 801623e:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 8016242:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8016246:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 801624a:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 801624e:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 8016252:	f7f8 fdb9 	bl	800edc8 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8016256:	4620      	mov	r0, r4
 8016258:	bd38      	pop	{r3, r4, r5, pc}

0801625a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 801625a:	b530      	push	{r4, r5, lr}
 801625c:	2500      	movs	r5, #0
 801625e:	2401      	movs	r4, #1
 8016260:	6843      	ldr	r3, [r0, #4]
 8016262:	b913      	cbnz	r3, 801626a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8016264:	6803      	ldr	r3, [r0, #0]
 8016266:	b313      	cbz	r3, 80162ae <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8016268:	6043      	str	r3, [r0, #4]
 801626a:	7e03      	ldrb	r3, [r0, #24]
 801626c:	b143      	cbz	r3, 8016280 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 801626e:	6943      	ldr	r3, [r0, #20]
 8016270:	b12b      	cbz	r3, 801627e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8016272:	881a      	ldrh	r2, [r3, #0]
 8016274:	b11a      	cbz	r2, 801627e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8016276:	1c9a      	adds	r2, r3, #2
 8016278:	6142      	str	r2, [r0, #20]
 801627a:	8818      	ldrh	r0, [r3, #0]
 801627c:	bd30      	pop	{r4, r5, pc}
 801627e:	7605      	strb	r5, [r0, #24]
 8016280:	6843      	ldr	r3, [r0, #4]
 8016282:	8819      	ldrh	r1, [r3, #0]
 8016284:	b199      	cbz	r1, 80162ae <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8016286:	1c9a      	adds	r2, r3, #2
 8016288:	2902      	cmp	r1, #2
 801628a:	6042      	str	r2, [r0, #4]
 801628c:	d1f5      	bne.n	801627a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 801628e:	7c03      	ldrb	r3, [r0, #16]
 8016290:	2b01      	cmp	r3, #1
 8016292:	d8e5      	bhi.n	8016260 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8016294:	1c5a      	adds	r2, r3, #1
 8016296:	3302      	adds	r3, #2
 8016298:	7402      	strb	r2, [r0, #16]
 801629a:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 801629e:	6143      	str	r3, [r0, #20]
 80162a0:	2b00      	cmp	r3, #0
 80162a2:	d0dd      	beq.n	8016260 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80162a4:	881b      	ldrh	r3, [r3, #0]
 80162a6:	2b00      	cmp	r3, #0
 80162a8:	d0da      	beq.n	8016260 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80162aa:	7604      	strb	r4, [r0, #24]
 80162ac:	e7d8      	b.n	8016260 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80162ae:	2000      	movs	r0, #0
 80162b0:	e7e4      	b.n	801627c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

080162b2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 80162b2:	6001      	str	r1, [r0, #0]
 80162b4:	2100      	movs	r1, #0
 80162b6:	b430      	push	{r4, r5}
 80162b8:	6041      	str	r1, [r0, #4]
 80162ba:	6815      	ldr	r5, [r2, #0]
 80162bc:	6085      	str	r5, [r0, #8]
 80162be:	6852      	ldr	r2, [r2, #4]
 80162c0:	6443      	str	r3, [r0, #68]	@ 0x44
 80162c2:	9b02      	ldr	r3, [sp, #8]
 80162c4:	60c2      	str	r2, [r0, #12]
 80162c6:	7401      	strb	r1, [r0, #16]
 80162c8:	6141      	str	r1, [r0, #20]
 80162ca:	7601      	strb	r1, [r0, #24]
 80162cc:	8701      	strh	r1, [r0, #56]	@ 0x38
 80162ce:	8401      	strh	r1, [r0, #32]
 80162d0:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 80162d4:	6483      	str	r3, [r0, #72]	@ 0x48
 80162d6:	bc30      	pop	{r4, r5}
 80162d8:	f7f8 bd76 	b.w	800edc8 <_ZN8touchgfx12TextProvider18initializeInternalEv>

080162dc <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 80162dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80162de:	4605      	mov	r5, r0
 80162e0:	4608      	mov	r0, r1
 80162e2:	b1f1      	cbz	r1, 8016322 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x46>
 80162e4:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 80162e8:	460b      	mov	r3, r1
 80162ea:	f101 0708 	add.w	r7, r1, #8
 80162ee:	4622      	mov	r2, r4
 80162f0:	6818      	ldr	r0, [r3, #0]
 80162f2:	3308      	adds	r3, #8
 80162f4:	f853 1c04 	ldr.w	r1, [r3, #-4]
 80162f8:	4626      	mov	r6, r4
 80162fa:	42bb      	cmp	r3, r7
 80162fc:	c603      	stmia	r6!, {r0, r1}
 80162fe:	4634      	mov	r4, r6
 8016300:	d1f6      	bne.n	80162f0 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8016302:	6818      	ldr	r0, [r3, #0]
 8016304:	6030      	str	r0, [r6, #0]
 8016306:	4610      	mov	r0, r2
 8016308:	889b      	ldrh	r3, [r3, #4]
 801630a:	80b3      	strh	r3, [r6, #4]
 801630c:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8016310:	015b      	lsls	r3, r3, #5
 8016312:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8016316:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 801631a:	430b      	orrs	r3, r1
 801631c:	425b      	negs	r3, r3
 801631e:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8016322:	bdf0      	pop	{r4, r5, r6, r7, pc}

08016324 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8016324:	b538      	push	{r3, r4, r5, lr}
 8016326:	460c      	mov	r4, r1
 8016328:	6811      	ldr	r1, [r2, #0]
 801632a:	4610      	mov	r0, r2
 801632c:	68cd      	ldr	r5, [r1, #12]
 801632e:	4619      	mov	r1, r3
 8016330:	47a8      	blx	r5
 8016332:	2800      	cmp	r0, #0
 8016334:	bf08      	it	eq
 8016336:	4620      	moveq	r0, r4
 8016338:	bd38      	pop	{r3, r4, r5, pc}
	...

0801633c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 801633c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016340:	468c      	mov	ip, r1
 8016342:	4604      	mov	r4, r0
 8016344:	4615      	mov	r5, r2
 8016346:	b942      	cbnz	r2, 801635a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
 8016348:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
 801634c:	f8a4 205c 	strh.w	r2, [r4, #92]	@ 0x5c
 8016350:	f8a4 205e 	strh.w	r2, [r4, #94]	@ 0x5e
 8016354:	4628      	mov	r0, r5
 8016356:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801635a:	7b50      	ldrb	r0, [r2, #13]
 801635c:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
 8016360:	8893      	ldrh	r3, [r2, #4]
 8016362:	0106      	lsls	r6, r0, #4
 8016364:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8016368:	79ee      	ldrb	r6, [r5, #7]
 801636a:	4316      	orrs	r6, r2
 801636c:	185a      	adds	r2, r3, r1
 801636e:	b291      	uxth	r1, r2
 8016370:	b2b7      	uxth	r7, r6
 8016372:	291d      	cmp	r1, #29
 8016374:	d87f      	bhi.n	8016476 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
 8016376:	2201      	movs	r2, #1
 8016378:	10f6      	asrs	r6, r6, #3
 801637a:	408a      	lsls	r2, r1
 801637c:	4974      	ldr	r1, [pc, #464]	@ (8016550 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 801637e:	420a      	tst	r2, r1
 8016380:	d12e      	bne.n	80163e0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8016382:	f412 7f60 	tst.w	r2, #896	@ 0x380
 8016386:	d076      	beq.n	8016476 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
 8016388:	f104 024c 	add.w	r2, r4, #76	@ 0x4c
 801638c:	462b      	mov	r3, r5
 801638e:	f105 0e08 	add.w	lr, r5, #8
 8016392:	4615      	mov	r5, r2
 8016394:	6818      	ldr	r0, [r3, #0]
 8016396:	3308      	adds	r3, #8
 8016398:	f853 1c04 	ldr.w	r1, [r3, #-4]
 801639c:	4694      	mov	ip, r2
 801639e:	4573      	cmp	r3, lr
 80163a0:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80163a4:	4662      	mov	r2, ip
 80163a6:	d1f5      	bne.n	8016394 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x58>
 80163a8:	6818      	ldr	r0, [r3, #0]
 80163aa:	f8cc 0000 	str.w	r0, [ip]
 80163ae:	889b      	ldrh	r3, [r3, #4]
 80163b0:	f8ac 3004 	strh.w	r3, [ip, #4]
 80163b4:	b2b3      	uxth	r3, r6
 80163b6:	f8b4 105c 	ldrh.w	r1, [r4, #92]	@ 0x5c
 80163ba:	f894 0059 	ldrb.w	r0, [r4, #89]	@ 0x59
 80163be:	1aca      	subs	r2, r1, r3
 80163c0:	1bcf      	subs	r7, r1, r7
 80163c2:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 80163c6:	b292      	uxth	r2, r2
 80163c8:	1afb      	subs	r3, r7, r3
 80163ca:	f884 2054 	strb.w	r2, [r4, #84]	@ 0x54
 80163ce:	10d2      	asrs	r2, r2, #3
 80163d0:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 80163d4:	4302      	orrs	r2, r0
 80163d6:	f884 2059 	strb.w	r2, [r4, #89]	@ 0x59
 80163da:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 80163de:	e7b9      	b.n	8016354 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 80163e0:	f104 024c 	add.w	r2, r4, #76	@ 0x4c
 80163e4:	462b      	mov	r3, r5
 80163e6:	f105 0808 	add.w	r8, r5, #8
 80163ea:	4615      	mov	r5, r2
 80163ec:	6818      	ldr	r0, [r3, #0]
 80163ee:	3308      	adds	r3, #8
 80163f0:	f853 1c04 	ldr.w	r1, [r3, #-4]
 80163f4:	4696      	mov	lr, r2
 80163f6:	4543      	cmp	r3, r8
 80163f8:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80163fc:	4672      	mov	r2, lr
 80163fe:	d1f5      	bne.n	80163ec <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
 8016400:	6818      	ldr	r0, [r3, #0]
 8016402:	f8ce 0000 	str.w	r0, [lr]
 8016406:	889b      	ldrh	r3, [r3, #4]
 8016408:	f8ae 3004 	strh.w	r3, [lr, #4]
 801640c:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 801640e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016412:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 8016414:	f640 6333 	movw	r3, #3635	@ 0xe33
 8016418:	4299      	cmp	r1, r3
 801641a:	d111      	bne.n	8016440 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x104>
 801641c:	f8dc 3000 	ldr.w	r3, [ip]
 8016420:	4660      	mov	r0, ip
 8016422:	68db      	ldr	r3, [r3, #12]
 8016424:	4798      	blx	r3
 8016426:	7b41      	ldrb	r1, [r0, #13]
 8016428:	00cb      	lsls	r3, r1, #3
 801642a:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801642e:	7a03      	ldrb	r3, [r0, #8]
 8016430:	4313      	orrs	r3, r2
 8016432:	064a      	lsls	r2, r1, #25
 8016434:	bf44      	itt	mi
 8016436:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801643a:	b21b      	sxthmi	r3, r3
 801643c:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8016440:	f8b4 305a 	ldrh.w	r3, [r4, #90]	@ 0x5a
 8016444:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8016448:	443b      	add	r3, r7
 801644a:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 801644e:	4433      	add	r3, r6
 8016450:	b29b      	uxth	r3, r3
 8016452:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8016456:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 801645a:	10db      	asrs	r3, r3, #3
 801645c:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8016460:	4313      	orrs	r3, r2
 8016462:	f894 205e 	ldrb.w	r2, [r4, #94]	@ 0x5e
 8016466:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 801646a:	f894 3055 	ldrb.w	r3, [r4, #85]	@ 0x55
 801646e:	1a9b      	subs	r3, r3, r2
 8016470:	f884 3055 	strb.w	r3, [r4, #85]	@ 0x55
 8016474:	e76e      	b.n	8016354 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8016476:	f023 0204 	bic.w	r2, r3, #4
 801647a:	f640 611b 	movw	r1, #3611	@ 0xe1b
 801647e:	428a      	cmp	r2, r1
 8016480:	d003      	beq.n	801648a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14e>
 8016482:	f640 621d 	movw	r2, #3613	@ 0xe1d
 8016486:	4293      	cmp	r3, r2
 8016488:	d120      	bne.n	80164cc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x190>
 801648a:	3b01      	subs	r3, #1
 801648c:	4662      	mov	r2, ip
 801648e:	4629      	mov	r1, r5
 8016490:	4620      	mov	r0, r4
 8016492:	b29b      	uxth	r3, r3
 8016494:	f7ff ff46 	bl	8016324 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8016498:	7b41      	ldrb	r1, [r0, #13]
 801649a:	00cb      	lsls	r3, r1, #3
 801649c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80164a0:	7a03      	ldrb	r3, [r0, #8]
 80164a2:	0648      	lsls	r0, r1, #25
 80164a4:	ea43 0302 	orr.w	r3, r3, r2
 80164a8:	bf44      	itt	mi
 80164aa:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80164ae:	b21b      	sxthmi	r3, r3
 80164b0:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 80164b4:	7b6b      	ldrb	r3, [r5, #13]
 80164b6:	7aaa      	ldrb	r2, [r5, #10]
 80164b8:	005b      	lsls	r3, r3, #1
 80164ba:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80164be:	4313      	orrs	r3, r2
 80164c0:	115a      	asrs	r2, r3, #5
 80164c2:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 80164c6:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 80164ca:	e032      	b.n	8016532 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f6>
 80164cc:	00c2      	lsls	r2, r0, #3
 80164ce:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 80164d2:	7a2a      	ldrb	r2, [r5, #8]
 80164d4:	430a      	orrs	r2, r1
 80164d6:	0641      	lsls	r1, r0, #25
 80164d8:	f640 6109 	movw	r1, #3593	@ 0xe09
 80164dc:	bf44      	itt	mi
 80164de:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
 80164e2:	b212      	sxthmi	r2, r2
 80164e4:	f8a4 205a 	strh.w	r2, [r4, #90]	@ 0x5a
 80164e8:	f023 0210 	bic.w	r2, r3, #16
 80164ec:	428a      	cmp	r2, r1
 80164ee:	d003      	beq.n	80164f8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1bc>
 80164f0:	f640 6213 	movw	r2, #3603	@ 0xe13
 80164f4:	4293      	cmp	r3, r2
 80164f6:	d129      	bne.n	801654c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x210>
 80164f8:	7b6e      	ldrb	r6, [r5, #13]
 80164fa:	4629      	mov	r1, r5
 80164fc:	4620      	mov	r0, r4
 80164fe:	0076      	lsls	r6, r6, #1
 8016500:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8016504:	7aae      	ldrb	r6, [r5, #10]
 8016506:	4316      	orrs	r6, r2
 8016508:	f640 6213 	movw	r2, #3603	@ 0xe13
 801650c:	4293      	cmp	r3, r2
 801650e:	4662      	mov	r2, ip
 8016510:	bf16      	itet	ne
 8016512:	f103 33ff 	addne.w	r3, r3, #4294967295
 8016516:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 801651a:	b29b      	uxthne	r3, r3
 801651c:	f7ff ff02 	bl	8016324 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8016520:	7b43      	ldrb	r3, [r0, #13]
 8016522:	7a82      	ldrb	r2, [r0, #10]
 8016524:	005b      	lsls	r3, r3, #1
 8016526:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801652a:	4313      	orrs	r3, r2
 801652c:	1af6      	subs	r6, r6, r3
 801652e:	f8a4 605e 	strh.w	r6, [r4, #94]	@ 0x5e
 8016532:	7b69      	ldrb	r1, [r5, #13]
 8016534:	00cb      	lsls	r3, r1, #3
 8016536:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801653a:	7a2b      	ldrb	r3, [r5, #8]
 801653c:	4313      	orrs	r3, r2
 801653e:	064a      	lsls	r2, r1, #25
 8016540:	bf44      	itt	mi
 8016542:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8016546:	b21b      	sxthmi	r3, r3
 8016548:	1bdb      	subs	r3, r3, r7
 801654a:	e746      	b.n	80163da <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 801654c:	2300      	movs	r3, #0
 801654e:	e7ba      	b.n	80164c6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18a>
 8016550:	3fc00079 	.word	0x3fc00079

08016554 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8016554:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016558:	4604      	mov	r4, r0
 801655a:	b942      	cbnz	r2, 801656e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 801655c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8016560:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 8016564:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 8016568:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 801656c:	e047      	b.n	80165fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801656e:	7b51      	ldrb	r1, [r2, #13]
 8016570:	8893      	ldrh	r3, [r2, #4]
 8016572:	010d      	lsls	r5, r1, #4
 8016574:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 8016578:	79d5      	ldrb	r5, [r2, #7]
 801657a:	4305      	orrs	r5, r0
 801657c:	2d04      	cmp	r5, #4
 801657e:	bfcc      	ite	gt
 8016580:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8016584:	f04f 0e01 	movle.w	lr, #1
 8016588:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 801658c:	f200 80ab 	bhi.w	80166e6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8016590:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 8016594:	4283      	cmp	r3, r0
 8016596:	d216      	bcs.n	80165c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016598:	f240 605b 	movw	r0, #1627	@ 0x65b
 801659c:	4283      	cmp	r3, r0
 801659e:	d859      	bhi.n	8016654 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 80165a0:	f240 6057 	movw	r0, #1623	@ 0x657
 80165a4:	4283      	cmp	r3, r0
 80165a6:	d20e      	bcs.n	80165c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80165a8:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 80165ac:	d24a      	bcs.n	8016644 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 80165ae:	f240 604e 	movw	r0, #1614	@ 0x64e
 80165b2:	4283      	cmp	r3, r0
 80165b4:	d207      	bcs.n	80165c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80165b6:	f240 601a 	movw	r0, #1562	@ 0x61a
 80165ba:	4283      	cmp	r3, r0
 80165bc:	d02a      	beq.n	8016614 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80165be:	d821      	bhi.n	8016604 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 80165c0:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 80165c4:	d35b      	bcc.n	801667e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80165c6:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 80165ca:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 80165ce:	f040 80d0 	bne.w	8016772 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 80165d2:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 80165d6:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 80165da:	f040 80ca 	bne.w	8016772 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 80165de:	00cb      	lsls	r3, r1, #3
 80165e0:	0649      	lsls	r1, r1, #25
 80165e2:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 80165e6:	7a13      	ldrb	r3, [r2, #8]
 80165e8:	ea43 0300 	orr.w	r3, r3, r0
 80165ec:	bf44      	itt	mi
 80165ee:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80165f2:	b21b      	sxthmi	r3, r3
 80165f4:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 80165f8:	1b5d      	subs	r5, r3, r5
 80165fa:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80165fe:	4610      	mov	r0, r2
 8016600:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016604:	f240 604b 	movw	r0, #1611	@ 0x64b
 8016608:	4283      	cmp	r3, r0
 801660a:	d338      	bcc.n	801667e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801660c:	f240 604c 	movw	r0, #1612	@ 0x64c
 8016610:	4283      	cmp	r3, r0
 8016612:	d9d8      	bls.n	80165c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016614:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 8016618:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 801661c:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8016620:	f040 80f3 	bne.w	801680a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 8016624:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8016628:	f040 80ef 	bne.w	801680a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b6>
 801662c:	00cb      	lsls	r3, r1, #3
 801662e:	064e      	lsls	r6, r1, #25
 8016630:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8016634:	7a13      	ldrb	r3, [r2, #8]
 8016636:	ea43 0300 	orr.w	r3, r3, r0
 801663a:	bf44      	itt	mi
 801663c:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8016640:	b21b      	sxthmi	r3, r3
 8016642:	e7d9      	b.n	80165f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8016644:	f240 6054 	movw	r0, #1620	@ 0x654
 8016648:	4283      	cmp	r3, r0
 801664a:	d8e3      	bhi.n	8016614 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801664c:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8016650:	d9e0      	bls.n	8016614 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016652:	e7b8      	b.n	80165c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016654:	f240 6074 	movw	r0, #1652	@ 0x674
 8016658:	4283      	cmp	r3, r0
 801665a:	d0b4      	beq.n	80165c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801665c:	d82d      	bhi.n	80166ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 801665e:	f240 605e 	movw	r0, #1630	@ 0x65e
 8016662:	4283      	cmp	r3, r0
 8016664:	d804      	bhi.n	8016670 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8016666:	f240 605d 	movw	r0, #1629	@ 0x65d
 801666a:	4283      	cmp	r3, r0
 801666c:	d3d2      	bcc.n	8016614 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801666e:	e7aa      	b.n	80165c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016670:	f240 605f 	movw	r0, #1631	@ 0x65f
 8016674:	4283      	cmp	r3, r0
 8016676:	d0cd      	beq.n	8016614 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016678:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 801667c:	d0a3      	beq.n	80165c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801667e:	00cb      	lsls	r3, r1, #3
 8016680:	0649      	lsls	r1, r1, #25
 8016682:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 8016686:	7a13      	ldrb	r3, [r2, #8]
 8016688:	ea43 0300 	orr.w	r3, r3, r0
 801668c:	bf44      	itt	mi
 801668e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8016692:	b21b      	sxthmi	r3, r3
 8016694:	1b5d      	subs	r5, r3, r5
 8016696:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 801669a:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801669e:	7b53      	ldrb	r3, [r2, #13]
 80166a0:	015b      	lsls	r3, r3, #5
 80166a2:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 80166a6:	7993      	ldrb	r3, [r2, #6]
 80166a8:	430b      	orrs	r3, r1
 80166aa:	2105      	movs	r1, #5
 80166ac:	005b      	lsls	r3, r3, #1
 80166ae:	fb93 f3f1 	sdiv	r3, r3, r1
 80166b2:	f992 1009 	ldrsb.w	r1, [r2, #9]
 80166b6:	440b      	add	r3, r1
 80166b8:	e756      	b.n	8016568 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 80166ba:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 80166be:	4283      	cmp	r3, r0
 80166c0:	d809      	bhi.n	80166d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 80166c2:	f240 60df 	movw	r0, #1759	@ 0x6df
 80166c6:	4283      	cmp	r3, r0
 80166c8:	f4bf af7d 	bcs.w	80165c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80166cc:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 80166d0:	2b05      	cmp	r3, #5
 80166d2:	d8d4      	bhi.n	801667e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80166d4:	e777      	b.n	80165c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80166d6:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 80166da:	4283      	cmp	r3, r0
 80166dc:	d09a      	beq.n	8016614 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80166de:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 80166e2:	4283      	cmp	r3, r0
 80166e4:	e7ca      	b.n	801667c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 80166e6:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 80166ea:	d22b      	bcs.n	8016744 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 80166ec:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 80166f0:	4283      	cmp	r3, r0
 80166f2:	d28f      	bcs.n	8016614 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80166f4:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 80166f8:	4283      	cmp	r3, r0
 80166fa:	d816      	bhi.n	801672a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 80166fc:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 8016700:	4283      	cmp	r3, r0
 8016702:	f4bf af60 	bcs.w	80165c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016706:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 801670a:	4283      	cmp	r3, r0
 801670c:	d80a      	bhi.n	8016724 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 801670e:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 8016712:	4283      	cmp	r3, r0
 8016714:	f4bf af57 	bcs.w	80165c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016718:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 801671c:	4283      	cmp	r3, r0
 801671e:	f43f af79 	beq.w	8016614 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016722:	e7ac      	b.n	801667e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016724:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 8016728:	e7f8      	b.n	801671c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 801672a:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 801672e:	4283      	cmp	r3, r0
 8016730:	d802      	bhi.n	8016738 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8016732:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 8016736:	e798      	b.n	801666a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8016738:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 801673c:	4283      	cmp	r3, r0
 801673e:	f47f af42 	bne.w	80165c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016742:	e767      	b.n	8016614 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016744:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 8016748:	4283      	cmp	r3, r0
 801674a:	f43f af63 	beq.w	8016614 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801674e:	d802      	bhi.n	8016756 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8016750:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 8016754:	e7f2      	b.n	801673c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8016756:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 801675a:	4283      	cmp	r3, r0
 801675c:	d805      	bhi.n	801676a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 801675e:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 8016762:	4283      	cmp	r3, r0
 8016764:	f4ff af2f 	bcc.w	80165c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016768:	e754      	b.n	8016614 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801676a:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 801676e:	4283      	cmp	r3, r0
 8016770:	e7af      	b.n	80166d2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8016772:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8016776:	4617      	mov	r7, r2
 8016778:	f102 0808 	add.w	r8, r2, #8
 801677c:	4666      	mov	r6, ip
 801677e:	6838      	ldr	r0, [r7, #0]
 8016780:	3708      	adds	r7, #8
 8016782:	f857 1c04 	ldr.w	r1, [r7, #-4]
 8016786:	46e6      	mov	lr, ip
 8016788:	4547      	cmp	r7, r8
 801678a:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 801678e:	46f4      	mov	ip, lr
 8016790:	d1f5      	bne.n	801677e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8016792:	6838      	ldr	r0, [r7, #0]
 8016794:	f8ce 0000 	str.w	r0, [lr]
 8016798:	88b9      	ldrh	r1, [r7, #4]
 801679a:	f8ae 1004 	strh.w	r1, [lr, #4]
 801679e:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 80167a2:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 80167a6:	d009      	beq.n	80167bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x268>
 80167a8:	7b51      	ldrb	r1, [r2, #13]
 80167aa:	7992      	ldrb	r2, [r2, #6]
 80167ac:	0149      	lsls	r1, r1, #5
 80167ae:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 80167b2:	4311      	orrs	r1, r2
 80167b4:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80167b8:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 80167bc:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 80167c0:	b2ad      	uxth	r5, r5
 80167c2:	d00d      	beq.n	80167e0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28c>
 80167c4:	442b      	add	r3, r5
 80167c6:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 80167ca:	b29b      	uxth	r3, r3
 80167cc:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 80167d0:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 80167d4:	10db      	asrs	r3, r3, #3
 80167d6:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 80167da:	4313      	orrs	r3, r2
 80167dc:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 80167e0:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 80167e4:	00cb      	lsls	r3, r1, #3
 80167e6:	064f      	lsls	r7, r1, #25
 80167e8:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80167ec:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 80167f0:	ea43 0302 	orr.w	r3, r3, r2
 80167f4:	bf44      	itt	mi
 80167f6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80167fa:	b21b      	sxthmi	r3, r3
 80167fc:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8016800:	1b5b      	subs	r3, r3, r5
 8016802:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 8016806:	4632      	mov	r2, r6
 8016808:	e6f9      	b.n	80165fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801680a:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 801680e:	4617      	mov	r7, r2
 8016810:	f102 0908 	add.w	r9, r2, #8
 8016814:	4666      	mov	r6, ip
 8016816:	6838      	ldr	r0, [r7, #0]
 8016818:	3708      	adds	r7, #8
 801681a:	f857 1c04 	ldr.w	r1, [r7, #-4]
 801681e:	46e0      	mov	r8, ip
 8016820:	454f      	cmp	r7, r9
 8016822:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8016826:	46c4      	mov	ip, r8
 8016828:	d1f5      	bne.n	8016816 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c2>
 801682a:	6838      	ldr	r0, [r7, #0]
 801682c:	f8c8 0000 	str.w	r0, [r8]
 8016830:	88b9      	ldrh	r1, [r7, #4]
 8016832:	f8a8 1004 	strh.w	r1, [r8, #4]
 8016836:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 801683a:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 801683e:	d009      	beq.n	8016854 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x300>
 8016840:	7b51      	ldrb	r1, [r2, #13]
 8016842:	7992      	ldrb	r2, [r2, #6]
 8016844:	0149      	lsls	r1, r1, #5
 8016846:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 801684a:	4311      	orrs	r1, r2
 801684c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8016850:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8016854:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8016858:	d00e      	beq.n	8016878 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 801685a:	eba3 030e 	sub.w	r3, r3, lr
 801685e:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8016862:	b29b      	uxth	r3, r3
 8016864:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8016868:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 801686c:	10db      	asrs	r3, r3, #3
 801686e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8016872:	4313      	orrs	r3, r2
 8016874:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8016878:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 801687c:	00cb      	lsls	r3, r1, #3
 801687e:	0648      	lsls	r0, r1, #25
 8016880:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8016884:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8016888:	ea43 0302 	orr.w	r3, r3, r2
 801688c:	bf44      	itt	mi
 801688e:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8016892:	b21b      	sxthmi	r3, r3
 8016894:	1b5d      	subs	r5, r3, r5
 8016896:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 801689a:	e7b4      	b.n	8016806 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b2>

0801689c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 801689c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80168a0:	461e      	mov	r6, r3
 80168a2:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80168a4:	4604      	mov	r4, r0
 80168a6:	4617      	mov	r7, r2
 80168a8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80168ac:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 80168b0:	f7f8 f9e4 	bl	800ec7c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80168b4:	4605      	mov	r5, r0
 80168b6:	b918      	cbnz	r0, 80168c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 80168b8:	6030      	str	r0, [r6, #0]
 80168ba:	4628      	mov	r0, r5
 80168bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80168c0:	683b      	ldr	r3, [r7, #0]
 80168c2:	4601      	mov	r1, r0
 80168c4:	4638      	mov	r0, r7
 80168c6:	68db      	ldr	r3, [r3, #12]
 80168c8:	4798      	blx	r3
 80168ca:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 80168ce:	4602      	mov	r2, r0
 80168d0:	6030      	str	r0, [r6, #0]
 80168d2:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80168d6:	d213      	bcs.n	8016900 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 80168d8:	4643      	mov	r3, r8
 80168da:	4639      	mov	r1, r7
 80168dc:	4620      	mov	r0, r4
 80168de:	f7ff fe39 	bl	8016554 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80168e2:	6030      	str	r0, [r6, #0]
 80168e4:	6833      	ldr	r3, [r6, #0]
 80168e6:	b143      	cbz	r3, 80168fa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 80168e8:	7b5a      	ldrb	r2, [r3, #13]
 80168ea:	7a9b      	ldrb	r3, [r3, #10]
 80168ec:	0052      	lsls	r2, r2, #1
 80168ee:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 80168f2:	4313      	orrs	r3, r2
 80168f4:	bf0c      	ite	eq
 80168f6:	2301      	moveq	r3, #1
 80168f8:	2300      	movne	r3, #0
 80168fa:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 80168fe:	e7dc      	b.n	80168ba <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8016900:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8016904:	b29b      	uxth	r3, r3
 8016906:	2b7f      	cmp	r3, #127	@ 0x7f
 8016908:	d804      	bhi.n	8016914 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801690a:	4639      	mov	r1, r7
 801690c:	4620      	mov	r0, r4
 801690e:	f7ff fd15 	bl	801633c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8016912:	e7e6      	b.n	80168e2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8016914:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 8016918:	2b00      	cmp	r3, #0
 801691a:	d0e3      	beq.n	80168e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 801691c:	f640 1302 	movw	r3, #2306	@ 0x902
 8016920:	429d      	cmp	r5, r3
 8016922:	d1df      	bne.n	80168e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8016924:	4601      	mov	r1, r0
 8016926:	4620      	mov	r0, r4
 8016928:	f7ff fcd8 	bl	80162dc <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 801692c:	e7d9      	b.n	80168e2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0801692e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 801692e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8016932:	461e      	mov	r6, r3
 8016934:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8016936:	4604      	mov	r4, r0
 8016938:	4617      	mov	r7, r2
 801693a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801693e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8016942:	f7f8 f99b 	bl	800ec7c <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8016946:	4605      	mov	r5, r0
 8016948:	b918      	cbnz	r0, 8016952 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801694a:	6030      	str	r0, [r6, #0]
 801694c:	4628      	mov	r0, r5
 801694e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8016952:	683b      	ldr	r3, [r7, #0]
 8016954:	4601      	mov	r1, r0
 8016956:	4638      	mov	r0, r7
 8016958:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801695c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8016960:	47c8      	blx	r9
 8016962:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 8016966:	4602      	mov	r2, r0
 8016968:	6030      	str	r0, [r6, #0]
 801696a:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 801696e:	d213      	bcs.n	8016998 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8016970:	4643      	mov	r3, r8
 8016972:	4639      	mov	r1, r7
 8016974:	4620      	mov	r0, r4
 8016976:	f7ff fded 	bl	8016554 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801697a:	6030      	str	r0, [r6, #0]
 801697c:	6833      	ldr	r3, [r6, #0]
 801697e:	b143      	cbz	r3, 8016992 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8016980:	7b5a      	ldrb	r2, [r3, #13]
 8016982:	7a9b      	ldrb	r3, [r3, #10]
 8016984:	0052      	lsls	r2, r2, #1
 8016986:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 801698a:	4313      	orrs	r3, r2
 801698c:	bf0c      	ite	eq
 801698e:	2301      	moveq	r3, #1
 8016990:	2300      	movne	r3, #0
 8016992:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 8016996:	e7d9      	b.n	801694c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8016998:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 801699c:	b29b      	uxth	r3, r3
 801699e:	2b7f      	cmp	r3, #127	@ 0x7f
 80169a0:	d804      	bhi.n	80169ac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 80169a2:	4639      	mov	r1, r7
 80169a4:	4620      	mov	r0, r4
 80169a6:	f7ff fcc9 	bl	801633c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80169aa:	e7e6      	b.n	801697a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 80169ac:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 80169b0:	2b00      	cmp	r3, #0
 80169b2:	d0e3      	beq.n	801697c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80169b4:	f640 1302 	movw	r3, #2306	@ 0x902
 80169b8:	429d      	cmp	r5, r3
 80169ba:	d1df      	bne.n	801697c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80169bc:	4601      	mov	r1, r0
 80169be:	4620      	mov	r0, r4
 80169c0:	f7ff fc8c 	bl	80162dc <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80169c4:	e7d9      	b.n	801697a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

080169c6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 80169c6:	b510      	push	{r4, lr}
 80169c8:	4604      	mov	r4, r0
 80169ca:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 80169ce:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 80169d0:	b1e1      	cbz	r1, 8016a0c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 80169d2:	2b0a      	cmp	r3, #10
 80169d4:	d02d      	beq.n	8016a32 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 80169d6:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 80169d8:	3901      	subs	r1, #1
 80169da:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80169de:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 80169e0:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 80169e4:	1c51      	adds	r1, r2, #1
 80169e6:	b289      	uxth	r1, r1
 80169e8:	2901      	cmp	r1, #1
 80169ea:	bf8a      	itet	hi
 80169ec:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80169f0:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 80169f2:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 80169f4:	1c5a      	adds	r2, r3, #1
 80169f6:	8722      	strh	r2, [r4, #56]	@ 0x38
 80169f8:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 80169fa:	4413      	add	r3, r2
 80169fc:	b29b      	uxth	r3, r3
 80169fe:	2b09      	cmp	r3, #9
 8016a00:	bf88      	it	hi
 8016a02:	3b0a      	subhi	r3, #10
 8016a04:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016a08:	8458      	strh	r0, [r3, #34]	@ 0x22
 8016a0a:	e7de      	b.n	80169ca <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8016a0c:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8016a0e:	2b0a      	cmp	r3, #10
 8016a10:	d00f      	beq.n	8016a32 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x6c>
 8016a12:	4620      	mov	r0, r4
 8016a14:	f7ff fc21 	bl	801625a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8016a18:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8016a1a:	1c5a      	adds	r2, r3, #1
 8016a1c:	8722      	strh	r2, [r4, #56]	@ 0x38
 8016a1e:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8016a20:	4413      	add	r3, r2
 8016a22:	b29b      	uxth	r3, r3
 8016a24:	2b09      	cmp	r3, #9
 8016a26:	bf88      	it	hi
 8016a28:	3b0a      	subhi	r3, #10
 8016a2a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016a2e:	8458      	strh	r0, [r3, #34]	@ 0x22
 8016a30:	e7ec      	b.n	8016a0c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x46>
 8016a32:	bd10      	pop	{r4, pc}

08016a34 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8016a34:	b538      	push	{r3, r4, r5, lr}
 8016a36:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8016a38:	4604      	mov	r4, r0
 8016a3a:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8016a3e:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 8016a40:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 8016a42:	3a01      	subs	r2, #1
 8016a44:	8702      	strh	r2, [r0, #56]	@ 0x38
 8016a46:	1c5a      	adds	r2, r3, #1
 8016a48:	b292      	uxth	r2, r2
 8016a4a:	2a09      	cmp	r2, #9
 8016a4c:	bf8a      	itet	hi
 8016a4e:	3b09      	subhi	r3, #9
 8016a50:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 8016a52:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 8016a54:	f7ff ffb7 	bl	80169c6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8016a58:	8c23      	ldrh	r3, [r4, #32]
 8016a5a:	2b01      	cmp	r3, #1
 8016a5c:	bf9c      	itt	ls
 8016a5e:	3301      	addls	r3, #1
 8016a60:	8423      	strhls	r3, [r4, #32]
 8016a62:	8be3      	ldrh	r3, [r4, #30]
 8016a64:	b90b      	cbnz	r3, 8016a6a <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8016a66:	2302      	movs	r3, #2
 8016a68:	83e3      	strh	r3, [r4, #30]
 8016a6a:	8be3      	ldrh	r3, [r4, #30]
 8016a6c:	4628      	mov	r0, r5
 8016a6e:	3b01      	subs	r3, #1
 8016a70:	b29b      	uxth	r3, r3
 8016a72:	83e3      	strh	r3, [r4, #30]
 8016a74:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016a78:	8365      	strh	r5, [r4, #26]
 8016a7a:	bd38      	pop	{r3, r4, r5, pc}

08016a7c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8016a7c:	428a      	cmp	r2, r1
 8016a7e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016a82:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 8016a84:	d932      	bls.n	8016aec <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x70>
 8016a86:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 8016a88:	1a54      	subs	r4, r2, r1
 8016a8a:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 8016a8e:	19ee      	adds	r6, r5, r7
 8016a90:	fa1f fe84 	uxth.w	lr, r4
 8016a94:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 8016a98:	3e01      	subs	r6, #1
 8016a9a:	b2b4      	uxth	r4, r6
 8016a9c:	eba4 090e 	sub.w	r9, r4, lr
 8016aa0:	fa1f f989 	uxth.w	r9, r9
 8016aa4:	2c09      	cmp	r4, #9
 8016aa6:	4626      	mov	r6, r4
 8016aa8:	bf88      	it	hi
 8016aaa:	f1a4 060a 	subhi.w	r6, r4, #10
 8016aae:	f1bc 0f00 	cmp.w	ip, #0
 8016ab2:	f104 34ff 	add.w	r4, r4, #4294967295
 8016ab6:	bf08      	it	eq
 8016ab8:	f04f 0c02 	moveq.w	ip, #2
 8016abc:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8016ac0:	b2a4      	uxth	r4, r4
 8016ac2:	f10c 3cff 	add.w	ip, ip, #4294967295
 8016ac6:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 8016aca:	454c      	cmp	r4, r9
 8016acc:	fa1f fc8c 	uxth.w	ip, ip
 8016ad0:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8016ad4:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 8016ad8:	d1e4      	bne.n	8016aa4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8016ada:	eba5 050e 	sub.w	r5, r5, lr
 8016ade:	eb0e 0408 	add.w	r4, lr, r8
 8016ae2:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 8016ae6:	8705      	strh	r5, [r0, #56]	@ 0x38
 8016ae8:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 8016aec:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 8016aee:	250a      	movs	r5, #10
 8016af0:	1a64      	subs	r4, r4, r1
 8016af2:	4439      	add	r1, r7
 8016af4:	b289      	uxth	r1, r1
 8016af6:	8704      	strh	r4, [r0, #56]	@ 0x38
 8016af8:	2909      	cmp	r1, #9
 8016afa:	bf88      	it	hi
 8016afc:	390a      	subhi	r1, #10
 8016afe:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8016b00:	b18a      	cbz	r2, 8016b26 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
 8016b02:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 8016b04:	3a01      	subs	r2, #1
 8016b06:	3101      	adds	r1, #1
 8016b08:	b292      	uxth	r2, r2
 8016b0a:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8016b0e:	8701      	strh	r1, [r0, #56]	@ 0x38
 8016b10:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8016b12:	b901      	cbnz	r1, 8016b16 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9a>
 8016b14:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8016b16:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8016b18:	3901      	subs	r1, #1
 8016b1a:	b289      	uxth	r1, r1
 8016b1c:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8016b1e:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8016b22:	844c      	strh	r4, [r1, #34]	@ 0x22
 8016b24:	e7ec      	b.n	8016b00 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>
 8016b26:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016b2a:	f7ff bf4c 	b.w	80169c6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08016b2e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8016b2e:	b570      	push	{r4, r5, r6, lr}
 8016b30:	2500      	movs	r5, #0
 8016b32:	4295      	cmp	r5, r2
 8016b34:	d011      	beq.n	8016b5a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8016b36:	8bc4      	ldrh	r4, [r0, #30]
 8016b38:	f831 6b02 	ldrh.w	r6, [r1], #2
 8016b3c:	4414      	add	r4, r2
 8016b3e:	3c01      	subs	r4, #1
 8016b40:	1b64      	subs	r4, r4, r5
 8016b42:	b2a4      	uxth	r4, r4
 8016b44:	2c01      	cmp	r4, #1
 8016b46:	bf88      	it	hi
 8016b48:	3c02      	subhi	r4, #2
 8016b4a:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016b4e:	8b64      	ldrh	r4, [r4, #26]
 8016b50:	42b4      	cmp	r4, r6
 8016b52:	d117      	bne.n	8016b84 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8016b54:	3501      	adds	r5, #1
 8016b56:	b2ad      	uxth	r5, r5
 8016b58:	e7eb      	b.n	8016b32 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8016b5a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8016b5e:	2400      	movs	r4, #0
 8016b60:	4413      	add	r3, r2
 8016b62:	b2a2      	uxth	r2, r4
 8016b64:	429a      	cmp	r2, r3
 8016b66:	da0f      	bge.n	8016b88 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8016b68:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 8016b6a:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8016b6e:	3401      	adds	r4, #1
 8016b70:	4432      	add	r2, r6
 8016b72:	b292      	uxth	r2, r2
 8016b74:	2a09      	cmp	r2, #9
 8016b76:	bf88      	it	hi
 8016b78:	3a0a      	subhi	r2, #10
 8016b7a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8016b7e:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 8016b80:	42aa      	cmp	r2, r5
 8016b82:	d0ee      	beq.n	8016b62 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8016b84:	2000      	movs	r0, #0
 8016b86:	bd70      	pop	{r4, r5, r6, pc}
 8016b88:	2001      	movs	r0, #1
 8016b8a:	e7fc      	b.n	8016b86 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08016b8c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8016b8c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016b90:	4605      	mov	r5, r0
 8016b92:	4616      	mov	r6, r2
 8016b94:	1c8c      	adds	r4, r1, #2
 8016b96:	8809      	ldrh	r1, [r1, #0]
 8016b98:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8016b9c:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8016ba0:	42b3      	cmp	r3, r6
 8016ba2:	d124      	bne.n	8016bee <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8016ba4:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8016ba8:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8016bac:	f001 070f 	and.w	r7, r1, #15
 8016bb0:	4652      	mov	r2, sl
 8016bb2:	f8cd 8000 	str.w	r8, [sp]
 8016bb6:	464b      	mov	r3, r9
 8016bb8:	4621      	mov	r1, r4
 8016bba:	4628      	mov	r0, r5
 8016bbc:	f7ff ffb7 	bl	8016b2e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8016bc0:	4683      	mov	fp, r0
 8016bc2:	b168      	cbz	r0, 8016be0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8016bc4:	eb0a 0109 	add.w	r1, sl, r9
 8016bc8:	463a      	mov	r2, r7
 8016bca:	4628      	mov	r0, r5
 8016bcc:	4441      	add	r1, r8
 8016bce:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8016bd2:	4649      	mov	r1, r9
 8016bd4:	f7ff ff52 	bl	8016a7c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8016bd8:	4658      	mov	r0, fp
 8016bda:	b003      	add	sp, #12
 8016bdc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016be0:	eb07 010a 	add.w	r1, r7, sl
 8016be4:	4449      	add	r1, r9
 8016be6:	4441      	add	r1, r8
 8016be8:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8016bec:	e7d2      	b.n	8016b94 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8016bee:	f04f 0b00 	mov.w	fp, #0
 8016bf2:	e7f1      	b.n	8016bd8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08016bf4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8016bf4:	b570      	push	{r4, r5, r6, lr}
 8016bf6:	8810      	ldrh	r0, [r2, #0]
 8016bf8:	4298      	cmp	r0, r3
 8016bfa:	d817      	bhi.n	8016c2c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8016bfc:	1e48      	subs	r0, r1, #1
 8016bfe:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8016c02:	4298      	cmp	r0, r3
 8016c04:	d312      	bcc.n	8016c2c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8016c06:	2400      	movs	r4, #0
 8016c08:	428c      	cmp	r4, r1
 8016c0a:	d20f      	bcs.n	8016c2c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8016c0c:	1860      	adds	r0, r4, r1
 8016c0e:	1040      	asrs	r0, r0, #1
 8016c10:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8016c14:	0085      	lsls	r5, r0, #2
 8016c16:	42b3      	cmp	r3, r6
 8016c18:	d902      	bls.n	8016c20 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8016c1a:	3001      	adds	r0, #1
 8016c1c:	b284      	uxth	r4, r0
 8016c1e:	e7f3      	b.n	8016c08 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8016c20:	d201      	bcs.n	8016c26 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8016c22:	b281      	uxth	r1, r0
 8016c24:	e7f0      	b.n	8016c08 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8016c26:	442a      	add	r2, r5
 8016c28:	8850      	ldrh	r0, [r2, #2]
 8016c2a:	bd70      	pop	{r4, r5, r6, pc}
 8016c2c:	2000      	movs	r0, #0
 8016c2e:	e7fc      	b.n	8016c2a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08016c30 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8016c30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016c34:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 8016c36:	4604      	mov	r4, r0
 8016c38:	260b      	movs	r6, #11
 8016c3a:	886f      	ldrh	r7, [r5, #2]
 8016c3c:	087f      	lsrs	r7, r7, #1
 8016c3e:	3e01      	subs	r6, #1
 8016c40:	d013      	beq.n	8016c6a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8016c42:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8016c44:	462a      	mov	r2, r5
 8016c46:	4639      	mov	r1, r7
 8016c48:	4620      	mov	r0, r4
 8016c4a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016c4e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8016c52:	4643      	mov	r3, r8
 8016c54:	f7ff ffce 	bl	8016bf4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8016c58:	b138      	cbz	r0, 8016c6a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8016c5a:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8016c5e:	4642      	mov	r2, r8
 8016c60:	4620      	mov	r0, r4
 8016c62:	f7ff ff93 	bl	8016b8c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8016c66:	2800      	cmp	r0, #0
 8016c68:	d1e9      	bne.n	8016c3e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8016c6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08016c70 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8016c70:	b570      	push	{r4, r5, r6, lr}
 8016c72:	694a      	ldr	r2, [r1, #20]
 8016c74:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 8016c76:	684b      	ldr	r3, [r1, #4]
 8016c78:	1b54      	subs	r4, r2, r5
 8016c7a:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 8016c7c:	f000 8106 	beq.w	8016e8c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8016c80:	1b9b      	subs	r3, r3, r6
 8016c82:	d003      	beq.n	8016c8c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8016c84:	4363      	muls	r3, r4
 8016c86:	2210      	movs	r2, #16
 8016c88:	fb93 f3f2 	sdiv	r3, r3, r2
 8016c8c:	680c      	ldr	r4, [r1, #0]
 8016c8e:	698a      	ldr	r2, [r1, #24]
 8016c90:	1b65      	subs	r5, r4, r5
 8016c92:	f000 80fd 	beq.w	8016e90 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8016c96:	1b92      	subs	r2, r2, r6
 8016c98:	d003      	beq.n	8016ca2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8016c9a:	436a      	muls	r2, r5
 8016c9c:	2410      	movs	r4, #16
 8016c9e:	fb92 f2f4 	sdiv	r2, r2, r4
 8016ca2:	1a9b      	subs	r3, r3, r2
 8016ca4:	ed9f 4a89 	vldr	s8, [pc, #548]	@ 8016ecc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8016ca8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8016cac:	460a      	mov	r2, r1
 8016cae:	ee07 3a90 	vmov	s15, r3
 8016cb2:	f100 040c 	add.w	r4, r0, #12
 8016cb6:	4603      	mov	r3, r0
 8016cb8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016cbc:	ee67 7a84 	vmul.f32	s15, s15, s8
 8016cc0:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8016cc4:	eeb1 6a43 	vneg.f32	s12, s6
 8016cc8:	edd2 7a02 	vldr	s15, [r2, #8]
 8016ccc:	3214      	adds	r2, #20
 8016cce:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8016cd2:	ece3 6a01 	vstmia	r3!, {s13}
 8016cd6:	429c      	cmp	r4, r3
 8016cd8:	ed52 7a02 	vldr	s15, [r2, #-8]
 8016cdc:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8016ce0:	edc3 7a02 	vstr	s15, [r3, #8]
 8016ce4:	ed52 7a01 	vldr	s15, [r2, #-4]
 8016ce8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8016cec:	edc3 7a05 	vstr	s15, [r3, #20]
 8016cf0:	d1ea      	bne.n	8016cc8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8016cf2:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8016cf4:	698b      	ldr	r3, [r1, #24]
 8016cf6:	edd0 4a02 	vldr	s9, [r0, #8]
 8016cfa:	1a9b      	subs	r3, r3, r2
 8016cfc:	edd0 3a00 	vldr	s7, [r0]
 8016d00:	edd0 6a01 	vldr	s13, [r0, #4]
 8016d04:	ee07 3a90 	vmov	s15, r3
 8016d08:	684b      	ldr	r3, [r1, #4]
 8016d0a:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8016d0e:	ed90 5a05 	vldr	s10, [r0, #20]
 8016d12:	1a9b      	subs	r3, r3, r2
 8016d14:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016d18:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8016d1c:	ed90 2a03 	vldr	s4, [r0, #12]
 8016d20:	ee07 3a10 	vmov	s14, r3
 8016d24:	edd0 5a04 	vldr	s11, [r0, #16]
 8016d28:	ee67 7a84 	vmul.f32	s15, s15, s8
 8016d2c:	ed90 1a07 	vldr	s2, [r0, #28]
 8016d30:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016d34:	edd0 2a06 	vldr	s5, [r0, #24]
 8016d38:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8016d3c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8016d40:	ee27 7a04 	vmul.f32	s14, s14, s8
 8016d44:	ee32 5a45 	vsub.f32	s10, s4, s10
 8016d48:	eee6 7a87 	vfma.f32	s15, s13, s14
 8016d4c:	ee67 7a83 	vmul.f32	s15, s15, s6
 8016d50:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 8016d54:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8016d56:	694a      	ldr	r2, [r1, #20]
 8016d58:	1b13      	subs	r3, r2, r4
 8016d5a:	ee07 3a10 	vmov	s14, r3
 8016d5e:	680b      	ldr	r3, [r1, #0]
 8016d60:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016d64:	1b1b      	subs	r3, r3, r4
 8016d66:	ee27 7a04 	vmul.f32	s14, s14, s8
 8016d6a:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8016d6e:	ee07 3a10 	vmov	s14, r3
 8016d72:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016d76:	ee27 7a04 	vmul.f32	s14, s14, s8
 8016d7a:	eee6 4a87 	vfma.f32	s9, s13, s14
 8016d7e:	ee64 4a86 	vmul.f32	s9, s9, s12
 8016d82:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 8016d86:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8016d88:	698b      	ldr	r3, [r1, #24]
 8016d8a:	1a9b      	subs	r3, r3, r2
 8016d8c:	ee06 3a90 	vmov	s13, r3
 8016d90:	684b      	ldr	r3, [r1, #4]
 8016d92:	1a9b      	subs	r3, r3, r2
 8016d94:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8016d98:	ee07 3a10 	vmov	s14, r3
 8016d9c:	ee66 6a84 	vmul.f32	s13, s13, s8
 8016da0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016da4:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8016da8:	ee27 7a04 	vmul.f32	s14, s14, s8
 8016dac:	eee5 6a87 	vfma.f32	s13, s11, s14
 8016db0:	ee66 6a83 	vmul.f32	s13, s13, s6
 8016db4:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 8016db8:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8016dba:	694a      	ldr	r2, [r1, #20]
 8016dbc:	1b13      	subs	r3, r2, r4
 8016dbe:	ee07 3a10 	vmov	s14, r3
 8016dc2:	680b      	ldr	r3, [r1, #0]
 8016dc4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016dc8:	1b1b      	subs	r3, r3, r4
 8016dca:	ee27 7a04 	vmul.f32	s14, s14, s8
 8016dce:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8016dd2:	ee07 3a10 	vmov	s14, r3
 8016dd6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016dda:	ee27 7a04 	vmul.f32	s14, s14, s8
 8016dde:	eea5 5a87 	vfma.f32	s10, s11, s14
 8016de2:	edd0 5a08 	vldr	s11, [r0, #32]
 8016de6:	ee31 1a65 	vsub.f32	s2, s2, s11
 8016dea:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8016dee:	ee25 5a06 	vmul.f32	s10, s10, s12
 8016df2:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 8016df6:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8016df8:	698b      	ldr	r3, [r1, #24]
 8016dfa:	1a9b      	subs	r3, r3, r2
 8016dfc:	ee07 3a10 	vmov	s14, r3
 8016e00:	684b      	ldr	r3, [r1, #4]
 8016e02:	1a9b      	subs	r3, r3, r2
 8016e04:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016e08:	ee01 3a90 	vmov	s3, r3
 8016e0c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8016e10:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8016e14:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8016e18:	ee61 1a84 	vmul.f32	s3, s3, s8
 8016e1c:	eea1 7a21 	vfma.f32	s14, s2, s3
 8016e20:	ee27 7a03 	vmul.f32	s14, s14, s6
 8016e24:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8016e28:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 8016e2a:	694a      	ldr	r2, [r1, #20]
 8016e2c:	1b13      	subs	r3, r2, r4
 8016e2e:	ee03 3a10 	vmov	s6, r3
 8016e32:	680b      	ldr	r3, [r1, #0]
 8016e34:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8016e38:	1b1b      	subs	r3, r3, r4
 8016e3a:	ee23 3a04 	vmul.f32	s6, s6, s8
 8016e3e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8016e42:	ee03 3a10 	vmov	s6, r3
 8016e46:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8016e4a:	ee23 4a04 	vmul.f32	s8, s6, s8
 8016e4e:	eee1 5a04 	vfma.f32	s11, s2, s8
 8016e52:	ee25 6a86 	vmul.f32	s12, s11, s12
 8016e56:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8016e5a:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 8016e5e:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8016e62:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8016e66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e6a:	dd13      	ble.n	8016e94 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8016e6c:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8016e70:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8016e74:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8016e76:	eee3 7a87 	vfma.f32	s15, s7, s14
 8016e7a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8016e7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016e82:	dd15      	ble.n	8016eb0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8016e84:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8016e88:	6403      	str	r3, [r0, #64]	@ 0x40
 8016e8a:	bd70      	pop	{r4, r5, r6, pc}
 8016e8c:	4623      	mov	r3, r4
 8016e8e:	e6fd      	b.n	8016c8c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8016e90:	462a      	mov	r2, r5
 8016e92:	e706      	b.n	8016ca2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8016e94:	d502      	bpl.n	8016e9c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8016e96:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8016e9a:	e7e9      	b.n	8016e70 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8016e9c:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8016ea0:	eea3 2a85 	vfma.f32	s4, s7, s10
 8016ea4:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8016ea8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016eac:	dade      	bge.n	8016e6c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8016eae:	e7f2      	b.n	8016e96 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8016eb0:	d502      	bpl.n	8016eb8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8016eb2:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 8016eb6:	e7e7      	b.n	8016e88 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8016eb8:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8016ebc:	eee3 4a86 	vfma.f32	s9, s7, s12
 8016ec0:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8016ec4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8016ec8:	dadc      	bge.n	8016e84 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8016eca:	e7f2      	b.n	8016eb2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8016ecc:	3d800000 	.word	0x3d800000

08016ed0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8016ed0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016ed4:	2714      	movs	r7, #20
 8016ed6:	435f      	muls	r7, r3
 8016ed8:	eb02 0c07 	add.w	ip, r2, r7
 8016edc:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8016ee0:	f115 0e0f 	adds.w	lr, r5, #15
 8016ee4:	f100 80a2 	bmi.w	801702c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8016ee8:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8016eec:	9c08      	ldr	r4, [sp, #32]
 8016eee:	2614      	movs	r6, #20
 8016ef0:	f8c0 e014 	str.w	lr, [r0, #20]
 8016ef4:	4366      	muls	r6, r4
 8016ef6:	eb02 0806 	add.w	r8, r2, r6
 8016efa:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8016efe:	f115 040f 	adds.w	r4, r5, #15
 8016f02:	f100 809f 	bmi.w	8017044 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8016f06:	1124      	asrs	r4, r4, #4
 8016f08:	eba4 040e 	sub.w	r4, r4, lr
 8016f0c:	6184      	str	r4, [r0, #24]
 8016f0e:	2c00      	cmp	r4, #0
 8016f10:	f000 808a 	beq.w	8017028 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8016f14:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8016f18:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8016f1c:	5995      	ldr	r5, [r2, r6]
 8016f1e:	eba4 0809 	sub.w	r8, r4, r9
 8016f22:	59d4      	ldr	r4, [r2, r7]
 8016f24:	eba5 0a04 	sub.w	sl, r5, r4
 8016f28:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8016f2c:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8016f30:	fb0e fe05 	mul.w	lr, lr, r5
 8016f34:	fb0a ee19 	mls	lr, sl, r9, lr
 8016f38:	fb08 e404 	mla	r4, r8, r4, lr
 8016f3c:	3c01      	subs	r4, #1
 8016f3e:	19a4      	adds	r4, r4, r6
 8016f40:	f100 808c 	bmi.w	801705c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8016f44:	fb94 fef6 	sdiv	lr, r4, r6
 8016f48:	fb06 441e 	mls	r4, r6, lr, r4
 8016f4c:	f8c0 e000 	str.w	lr, [r0]
 8016f50:	6104      	str	r4, [r0, #16]
 8016f52:	2d00      	cmp	r5, #0
 8016f54:	f2c0 8095 	blt.w	8017082 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8016f58:	fb95 f4f6 	sdiv	r4, r5, r6
 8016f5c:	fb06 5514 	mls	r5, r6, r4, r5
 8016f60:	6044      	str	r4, [r0, #4]
 8016f62:	6085      	str	r5, [r0, #8]
 8016f64:	60c6      	str	r6, [r0, #12]
 8016f66:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8016f6a:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8016f6e:	6945      	ldr	r5, [r0, #20]
 8016f70:	59d2      	ldr	r2, [r2, r7]
 8016f72:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8016f76:	eddf 6a4b 	vldr	s13, [pc, #300]	@ 80170a4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8016f7a:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8016f7e:	ee07 4a10 	vmov	s14, r4
 8016f82:	6804      	ldr	r4, [r0, #0]
 8016f84:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8016f88:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8016f8c:	ee07 2a90 	vmov	s15, r2
 8016f90:	ee27 7a26 	vmul.f32	s14, s14, s13
 8016f94:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8016f98:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8016f9c:	edd3 6a00 	vldr	s13, [r3]
 8016fa0:	eee6 6a07 	vfma.f32	s13, s12, s14
 8016fa4:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 8016fa8:	eee6 6a27 	vfma.f32	s13, s12, s15
 8016fac:	edc0 6a07 	vstr	s13, [r0, #28]
 8016fb0:	edd0 6a01 	vldr	s13, [r0, #4]
 8016fb4:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 8016fb8:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8016fbc:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8016fc0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8016fc4:	ed80 6a08 	vstr	s12, [r0, #32]
 8016fc8:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 8016fca:	6242      	str	r2, [r0, #36]	@ 0x24
 8016fcc:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 8016fd0:	ed93 6a03 	vldr	s12, [r3, #12]
 8016fd4:	eea5 6a87 	vfma.f32	s12, s11, s14
 8016fd8:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8016fdc:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8016fe0:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 8016fe4:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8016fe8:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 8016fec:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8016ff0:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 8016ff4:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8016ff6:	6302      	str	r2, [r0, #48]	@ 0x30
 8016ff8:	ed93 6a06 	vldr	s12, [r3, #24]
 8016ffc:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 8017000:	eea5 6a87 	vfma.f32	s12, s11, s14
 8017004:	eeb0 7a46 	vmov.f32	s14, s12
 8017008:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 801700c:	eea6 7a27 	vfma.f32	s14, s12, s15
 8017010:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8017014:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 8017018:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 801701c:	eee6 7a87 	vfma.f32	s15, s13, s14
 8017020:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 8017024:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 8017026:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8017028:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801702c:	2410      	movs	r4, #16
 801702e:	f1c5 0501 	rsb	r5, r5, #1
 8017032:	fb9e fef4 	sdiv	lr, lr, r4
 8017036:	f015 050f 	ands.w	r5, r5, #15
 801703a:	bf18      	it	ne
 801703c:	2501      	movne	r5, #1
 801703e:	ebae 0e05 	sub.w	lr, lr, r5
 8017042:	e753      	b.n	8016eec <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8017044:	f04f 0910 	mov.w	r9, #16
 8017048:	f1c5 0501 	rsb	r5, r5, #1
 801704c:	fb94 f4f9 	sdiv	r4, r4, r9
 8017050:	f015 050f 	ands.w	r5, r5, #15
 8017054:	bf18      	it	ne
 8017056:	2501      	movne	r5, #1
 8017058:	1b64      	subs	r4, r4, r5
 801705a:	e755      	b.n	8016f08 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 801705c:	4264      	negs	r4, r4
 801705e:	fb94 fef6 	sdiv	lr, r4, r6
 8017062:	f1ce 0800 	rsb	r8, lr, #0
 8017066:	fb06 441e 	mls	r4, r6, lr, r4
 801706a:	f8c0 8000 	str.w	r8, [r0]
 801706e:	6104      	str	r4, [r0, #16]
 8017070:	2c00      	cmp	r4, #0
 8017072:	f43f af6e 	beq.w	8016f52 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8017076:	ea6f 0e0e 	mvn.w	lr, lr
 801707a:	1b34      	subs	r4, r6, r4
 801707c:	f8c0 e000 	str.w	lr, [r0]
 8017080:	e766      	b.n	8016f50 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8017082:	426d      	negs	r5, r5
 8017084:	fb95 f4f6 	sdiv	r4, r5, r6
 8017088:	f1c4 0e00 	rsb	lr, r4, #0
 801708c:	fb06 5514 	mls	r5, r6, r4, r5
 8017090:	f8c0 e004 	str.w	lr, [r0, #4]
 8017094:	6085      	str	r5, [r0, #8]
 8017096:	2d00      	cmp	r5, #0
 8017098:	f43f af64 	beq.w	8016f64 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 801709c:	43e4      	mvns	r4, r4
 801709e:	1b75      	subs	r5, r6, r5
 80170a0:	6044      	str	r4, [r0, #4]
 80170a2:	e75e      	b.n	8016f62 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 80170a4:	3d800000 	.word	0x3d800000

080170a8 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 80170a8:	4b01      	ldr	r3, [pc, #4]	@ (80170b0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 80170aa:	6018      	str	r0, [r3, #0]
 80170ac:	4770      	bx	lr
 80170ae:	bf00      	nop
 80170b0:	24001a90 	.word	0x24001a90

080170b4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 80170b4:	4b06      	ldr	r3, [pc, #24]	@ (80170d0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 80170b6:	881a      	ldrh	r2, [r3, #0]
 80170b8:	4282      	cmp	r2, r0
 80170ba:	d807      	bhi.n	80170cc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 80170bc:	4b05      	ldr	r3, [pc, #20]	@ (80170d4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 80170be:	881b      	ldrh	r3, [r3, #0]
 80170c0:	4413      	add	r3, r2
 80170c2:	4298      	cmp	r0, r3
 80170c4:	bfac      	ite	ge
 80170c6:	2000      	movge	r0, #0
 80170c8:	2001      	movlt	r0, #1
 80170ca:	4770      	bx	lr
 80170cc:	2000      	movs	r0, #0
 80170ce:	4770      	bx	lr
 80170d0:	24001ab0 	.word	0x24001ab0
 80170d4:	24001ab4 	.word	0x24001ab4

080170d8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 80170d8:	b508      	push	{r3, lr}
 80170da:	4601      	mov	r1, r0
 80170dc:	f7ff ffea 	bl	80170b4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 80170e0:	b118      	cbz	r0, 80170ea <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 80170e2:	4b02      	ldr	r3, [pc, #8]	@ (80170ec <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 80170e4:	681b      	ldr	r3, [r3, #0]
 80170e6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80170ea:	bd08      	pop	{r3, pc}
 80170ec:	24001a94 	.word	0x24001a94

080170f0 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 80170f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80170f2:	4c24      	ldr	r4, [pc, #144]	@ (8017184 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 80170f4:	6823      	ldr	r3, [r4, #0]
 80170f6:	2b00      	cmp	r3, #0
 80170f8:	d042      	beq.n	8017180 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80170fa:	4a23      	ldr	r2, [pc, #140]	@ (8017188 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 80170fc:	4d23      	ldr	r5, [pc, #140]	@ (801718c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 80170fe:	8811      	ldrh	r1, [r2, #0]
 8017100:	f8b5 c000 	ldrh.w	ip, [r5]
 8017104:	4822      	ldr	r0, [pc, #136]	@ (8017190 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8017106:	4461      	add	r1, ip
 8017108:	1c4a      	adds	r2, r1, #1
 801710a:	008f      	lsls	r7, r1, #2
 801710c:	f022 0201 	bic.w	r2, r2, #1
 8017110:	19de      	adds	r6, r3, r7
 8017112:	0412      	lsls	r2, r2, #16
 8017114:	6006      	str	r6, [r0, #0]
 8017116:	4e1f      	ldr	r6, [pc, #124]	@ (8017194 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8017118:	0c12      	lsrs	r2, r2, #16
 801711a:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801711e:	19da      	adds	r2, r3, r7
 8017120:	6032      	str	r2, [r6, #0]
 8017122:	220e      	movs	r2, #14
 8017124:	fb02 f20c 	mul.w	r2, r2, ip
 8017128:	3203      	adds	r2, #3
 801712a:	f022 0203 	bic.w	r2, r2, #3
 801712e:	443a      	add	r2, r7
 8017130:	4f19      	ldr	r7, [pc, #100]	@ (8017198 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8017132:	4413      	add	r3, r2
 8017134:	603b      	str	r3, [r7, #0]
 8017136:	2300      	movs	r3, #0
 8017138:	4f18      	ldr	r7, [pc, #96]	@ (801719c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 801713a:	469c      	mov	ip, r3
 801713c:	803b      	strh	r3, [r7, #0]
 801713e:	4f18      	ldr	r7, [pc, #96]	@ (80171a0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8017140:	683f      	ldr	r7, [r7, #0]
 8017142:	1aba      	subs	r2, r7, r2
 8017144:	4f17      	ldr	r7, [pc, #92]	@ (80171a4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8017146:	603a      	str	r2, [r7, #0]
 8017148:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 801714c:	4a16      	ldr	r2, [pc, #88]	@ (80171a8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 801714e:	8013      	strh	r3, [r2, #0]
 8017150:	428b      	cmp	r3, r1
 8017152:	d10d      	bne.n	8017170 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8017154:	882d      	ldrh	r5, [r5, #0]
 8017156:	2300      	movs	r3, #0
 8017158:	6830      	ldr	r0, [r6, #0]
 801715a:	240e      	movs	r4, #14
 801715c:	429d      	cmp	r5, r3
 801715e:	d90f      	bls.n	8017180 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8017160:	fb04 0203 	mla	r2, r4, r3, r0
 8017164:	3301      	adds	r3, #1
 8017166:	7b11      	ldrb	r1, [r2, #12]
 8017168:	f36f 1145 	bfc	r1, #5, #1
 801716c:	7311      	strb	r1, [r2, #12]
 801716e:	e7f5      	b.n	801715c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8017170:	6822      	ldr	r2, [r4, #0]
 8017172:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8017176:	6802      	ldr	r2, [r0, #0]
 8017178:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801717c:	3301      	adds	r3, #1
 801717e:	e7e7      	b.n	8017150 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8017180:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017182:	bf00      	nop
 8017184:	24001a94 	.word	0x24001a94
 8017188:	24001ab0 	.word	0x24001ab0
 801718c:	24001ab4 	.word	0x24001ab4
 8017190:	24001aa8 	.word	0x24001aa8
 8017194:	24001a98 	.word	0x24001a98
 8017198:	24001aa0 	.word	0x24001aa0
 801719c:	24001ab2 	.word	0x24001ab2
 80171a0:	24001a9c 	.word	0x24001a9c
 80171a4:	24001aac 	.word	0x24001aac
 80171a8:	24001aa4 	.word	0x24001aa4

080171ac <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 80171ac:	4b06      	ldr	r3, [pc, #24]	@ (80171c8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 80171ae:	681b      	ldr	r3, [r3, #0]
 80171b0:	b943      	cbnz	r3, 80171c4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80171b2:	b139      	cbz	r1, 80171c4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80171b4:	4b05      	ldr	r3, [pc, #20]	@ (80171cc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 80171b6:	801a      	strh	r2, [r3, #0]
 80171b8:	4b05      	ldr	r3, [pc, #20]	@ (80171d0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 80171ba:	6019      	str	r1, [r3, #0]
 80171bc:	4b05      	ldr	r3, [pc, #20]	@ (80171d4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 80171be:	6018      	str	r0, [r3, #0]
 80171c0:	f7ff bf96 	b.w	80170f0 <_ZN8touchgfx6Bitmap10clearCacheEv>
 80171c4:	4770      	bx	lr
 80171c6:	bf00      	nop
 80171c8:	24001aa0 	.word	0x24001aa0
 80171cc:	24001ab4 	.word	0x24001ab4
 80171d0:	24001a9c 	.word	0x24001a9c
 80171d4:	24001a94 	.word	0x24001a94

080171d8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 80171d8:	b470      	push	{r4, r5, r6}
 80171da:	4c07      	ldr	r4, [pc, #28]	@ (80171f8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 80171dc:	4605      	mov	r5, r0
 80171de:	4610      	mov	r0, r2
 80171e0:	9a03      	ldr	r2, [sp, #12]
 80171e2:	6826      	ldr	r6, [r4, #0]
 80171e4:	b936      	cbnz	r6, 80171f4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 80171e6:	6025      	str	r5, [r4, #0]
 80171e8:	4c04      	ldr	r4, [pc, #16]	@ (80171fc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 80171ea:	8021      	strh	r1, [r4, #0]
 80171ec:	4619      	mov	r1, r3
 80171ee:	bc70      	pop	{r4, r5, r6}
 80171f0:	f7ff bfdc 	b.w	80171ac <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 80171f4:	bc70      	pop	{r4, r5, r6}
 80171f6:	4770      	bx	lr
 80171f8:	24001ab8 	.word	0x24001ab8
 80171fc:	24001ab0 	.word	0x24001ab0

08017200 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8017200:	4a12      	ldr	r2, [pc, #72]	@ (801724c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8017202:	8803      	ldrh	r3, [r0, #0]
 8017204:	8812      	ldrh	r2, [r2, #0]
 8017206:	4293      	cmp	r3, r2
 8017208:	d207      	bcs.n	801721a <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 801720a:	4a11      	ldr	r2, [pc, #68]	@ (8017250 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 801720c:	2114      	movs	r1, #20
 801720e:	6812      	ldr	r2, [r2, #0]
 8017210:	fb01 2303 	mla	r3, r1, r3, r2
 8017214:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8017218:	4770      	bx	lr
 801721a:	490e      	ldr	r1, [pc, #56]	@ (8017254 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801721c:	8809      	ldrh	r1, [r1, #0]
 801721e:	4411      	add	r1, r2
 8017220:	428b      	cmp	r3, r1
 8017222:	da04      	bge.n	801722e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8017224:	1a9b      	subs	r3, r3, r2
 8017226:	4a0c      	ldr	r2, [pc, #48]	@ (8017258 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8017228:	210e      	movs	r1, #14
 801722a:	6812      	ldr	r2, [r2, #0]
 801722c:	e7f0      	b.n	8017210 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801722e:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8017232:	4293      	cmp	r3, r2
 8017234:	d108      	bne.n	8017248 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8017236:	4b09      	ldr	r3, [pc, #36]	@ (801725c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8017238:	781b      	ldrb	r3, [r3, #0]
 801723a:	b91b      	cbnz	r3, 8017244 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801723c:	4b08      	ldr	r3, [pc, #32]	@ (8017260 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801723e:	f9b3 0000 	ldrsh.w	r0, [r3]
 8017242:	4770      	bx	lr
 8017244:	4b07      	ldr	r3, [pc, #28]	@ (8017264 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8017246:	e7fa      	b.n	801723e <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8017248:	2000      	movs	r0, #0
 801724a:	4770      	bx	lr
 801724c:	24001ab0 	.word	0x24001ab0
 8017250:	24001ab8 	.word	0x24001ab8
 8017254:	24001ab4 	.word	0x24001ab4
 8017258:	24001a98 	.word	0x24001a98
 801725c:	24001a28 	.word	0x24001a28
 8017260:	24001a2a 	.word	0x24001a2a
 8017264:	24001a2c 	.word	0x24001a2c

08017268 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8017268:	4a12      	ldr	r2, [pc, #72]	@ (80172b4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801726a:	8803      	ldrh	r3, [r0, #0]
 801726c:	8812      	ldrh	r2, [r2, #0]
 801726e:	4293      	cmp	r3, r2
 8017270:	d207      	bcs.n	8017282 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8017272:	4a11      	ldr	r2, [pc, #68]	@ (80172b8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8017274:	2114      	movs	r1, #20
 8017276:	6812      	ldr	r2, [r2, #0]
 8017278:	fb01 2303 	mla	r3, r1, r3, r2
 801727c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8017280:	4770      	bx	lr
 8017282:	490e      	ldr	r1, [pc, #56]	@ (80172bc <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8017284:	8809      	ldrh	r1, [r1, #0]
 8017286:	4411      	add	r1, r2
 8017288:	428b      	cmp	r3, r1
 801728a:	da04      	bge.n	8017296 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801728c:	1a9b      	subs	r3, r3, r2
 801728e:	4a0c      	ldr	r2, [pc, #48]	@ (80172c0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8017290:	210e      	movs	r1, #14
 8017292:	6812      	ldr	r2, [r2, #0]
 8017294:	e7f0      	b.n	8017278 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8017296:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801729a:	4293      	cmp	r3, r2
 801729c:	d108      	bne.n	80172b0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801729e:	4b09      	ldr	r3, [pc, #36]	@ (80172c4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 80172a0:	781b      	ldrb	r3, [r3, #0]
 80172a2:	b91b      	cbnz	r3, 80172ac <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 80172a4:	4b08      	ldr	r3, [pc, #32]	@ (80172c8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 80172a6:	f9b3 0000 	ldrsh.w	r0, [r3]
 80172aa:	4770      	bx	lr
 80172ac:	4b07      	ldr	r3, [pc, #28]	@ (80172cc <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 80172ae:	e7fa      	b.n	80172a6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 80172b0:	2000      	movs	r0, #0
 80172b2:	4770      	bx	lr
 80172b4:	24001ab0 	.word	0x24001ab0
 80172b8:	24001ab8 	.word	0x24001ab8
 80172bc:	24001ab4 	.word	0x24001ab4
 80172c0:	24001a98 	.word	0x24001a98
 80172c4:	24001a28 	.word	0x24001a28
 80172c8:	24001a2c 	.word	0x24001a2c
 80172cc:	24001a2a 	.word	0x24001a2a

080172d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 80172d0:	4a22      	ldr	r2, [pc, #136]	@ (801735c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 80172d2:	b530      	push	{r4, r5, lr}
 80172d4:	880b      	ldrh	r3, [r1, #0]
 80172d6:	8812      	ldrh	r2, [r2, #0]
 80172d8:	4293      	cmp	r3, r2
 80172da:	d213      	bcs.n	8017304 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 80172dc:	4a20      	ldr	r2, [pc, #128]	@ (8017360 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80172de:	2114      	movs	r1, #20
 80172e0:	6812      	ldr	r2, [r2, #0]
 80172e2:	fb01 2303 	mla	r3, r1, r3, r2
 80172e6:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 80172ea:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80172ee:	8a1a      	ldrh	r2, [r3, #16]
 80172f0:	8a5b      	ldrh	r3, [r3, #18]
 80172f2:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80172f6:	8004      	strh	r4, [r0, #0]
 80172f8:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80172fc:	8041      	strh	r1, [r0, #2]
 80172fe:	8082      	strh	r2, [r0, #4]
 8017300:	80c3      	strh	r3, [r0, #6]
 8017302:	e024      	b.n	801734e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 8017304:	4917      	ldr	r1, [pc, #92]	@ (8017364 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8017306:	8809      	ldrh	r1, [r1, #0]
 8017308:	4411      	add	r1, r2
 801730a:	428b      	cmp	r3, r1
 801730c:	da10      	bge.n	8017330 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 801730e:	1a9b      	subs	r3, r3, r2
 8017310:	220e      	movs	r2, #14
 8017312:	4353      	muls	r3, r2
 8017314:	4a14      	ldr	r2, [pc, #80]	@ (8017368 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8017316:	6811      	ldr	r1, [r2, #0]
 8017318:	18ca      	adds	r2, r1, r3
 801731a:	5ecd      	ldrsh	r5, [r1, r3]
 801731c:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 8017320:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 8017324:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 8017328:	8005      	strh	r5, [r0, #0]
 801732a:	8044      	strh	r4, [r0, #2]
 801732c:	8081      	strh	r1, [r0, #4]
 801732e:	e7e7      	b.n	8017300 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8017330:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8017334:	4293      	cmp	r3, r2
 8017336:	d10b      	bne.n	8017350 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 8017338:	4b0c      	ldr	r3, [pc, #48]	@ (801736c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 801733a:	f9b3 1000 	ldrsh.w	r1, [r3]
 801733e:	4b0c      	ldr	r3, [pc, #48]	@ (8017370 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 8017340:	8081      	strh	r1, [r0, #4]
 8017342:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017346:	2300      	movs	r3, #0
 8017348:	80c2      	strh	r2, [r0, #6]
 801734a:	8003      	strh	r3, [r0, #0]
 801734c:	8043      	strh	r3, [r0, #2]
 801734e:	bd30      	pop	{r4, r5, pc}
 8017350:	2300      	movs	r3, #0
 8017352:	8003      	strh	r3, [r0, #0]
 8017354:	8043      	strh	r3, [r0, #2]
 8017356:	8083      	strh	r3, [r0, #4]
 8017358:	e7d2      	b.n	8017300 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801735a:	bf00      	nop
 801735c:	24001ab0 	.word	0x24001ab0
 8017360:	24001ab8 	.word	0x24001ab8
 8017364:	24001ab4 	.word	0x24001ab4
 8017368:	24001a98 	.word	0x24001a98
 801736c:	24001a24 	.word	0x24001a24
 8017370:	24001a26 	.word	0x24001a26

08017374 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8017374:	4a17      	ldr	r2, [pc, #92]	@ (80173d4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8017376:	8803      	ldrh	r3, [r0, #0]
 8017378:	8812      	ldrh	r2, [r2, #0]
 801737a:	4293      	cmp	r3, r2
 801737c:	d213      	bcs.n	80173a6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 801737e:	4a16      	ldr	r2, [pc, #88]	@ (80173d8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8017380:	2114      	movs	r1, #20
 8017382:	6812      	ldr	r2, [r2, #0]
 8017384:	fb01 2303 	mla	r3, r1, r3, r2
 8017388:	8a1a      	ldrh	r2, [r3, #16]
 801738a:	8919      	ldrh	r1, [r3, #8]
 801738c:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8017390:	428a      	cmp	r2, r1
 8017392:	db1d      	blt.n	80173d0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8017394:	8a58      	ldrh	r0, [r3, #18]
 8017396:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801739a:	895b      	ldrh	r3, [r3, #10]
 801739c:	4298      	cmp	r0, r3
 801739e:	bfac      	ite	ge
 80173a0:	2000      	movge	r0, #0
 80173a2:	2001      	movlt	r0, #1
 80173a4:	4770      	bx	lr
 80173a6:	490d      	ldr	r1, [pc, #52]	@ (80173dc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 80173a8:	8809      	ldrh	r1, [r1, #0]
 80173aa:	4411      	add	r1, r2
 80173ac:	428b      	cmp	r3, r1
 80173ae:	da0d      	bge.n	80173cc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 80173b0:	1a9b      	subs	r3, r3, r2
 80173b2:	4a0b      	ldr	r2, [pc, #44]	@ (80173e0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 80173b4:	210e      	movs	r1, #14
 80173b6:	6812      	ldr	r2, [r2, #0]
 80173b8:	fb01 2303 	mla	r3, r1, r3, r2
 80173bc:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 80173c0:	891a      	ldrh	r2, [r3, #8]
 80173c2:	4291      	cmp	r1, r2
 80173c4:	db04      	blt.n	80173d0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80173c6:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 80173ca:	e7e6      	b.n	801739a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 80173cc:	2000      	movs	r0, #0
 80173ce:	4770      	bx	lr
 80173d0:	2001      	movs	r0, #1
 80173d2:	4770      	bx	lr
 80173d4:	24001ab0 	.word	0x24001ab0
 80173d8:	24001ab8 	.word	0x24001ab8
 80173dc:	24001ab4 	.word	0x24001ab4
 80173e0:	24001a98 	.word	0x24001a98

080173e4 <_ZNK8touchgfx6Bitmap7getDataEv>:
 80173e4:	4a12      	ldr	r2, [pc, #72]	@ (8017430 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 80173e6:	8803      	ldrh	r3, [r0, #0]
 80173e8:	8811      	ldrh	r1, [r2, #0]
 80173ea:	428b      	cmp	r3, r1
 80173ec:	d20b      	bcs.n	8017406 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 80173ee:	4a11      	ldr	r2, [pc, #68]	@ (8017434 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80173f0:	6812      	ldr	r2, [r2, #0]
 80173f2:	b112      	cbz	r2, 80173fa <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80173f4:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80173f8:	b9c0      	cbnz	r0, 801742c <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 80173fa:	4a0f      	ldr	r2, [pc, #60]	@ (8017438 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80173fc:	6811      	ldr	r1, [r2, #0]
 80173fe:	2214      	movs	r2, #20
 8017400:	4353      	muls	r3, r2
 8017402:	58c8      	ldr	r0, [r1, r3]
 8017404:	4770      	bx	lr
 8017406:	4a0d      	ldr	r2, [pc, #52]	@ (801743c <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8017408:	8812      	ldrh	r2, [r2, #0]
 801740a:	440a      	add	r2, r1
 801740c:	4293      	cmp	r3, r2
 801740e:	da04      	bge.n	801741a <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8017410:	4a08      	ldr	r2, [pc, #32]	@ (8017434 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8017412:	6812      	ldr	r2, [r2, #0]
 8017414:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8017418:	4770      	bx	lr
 801741a:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801741e:	4293      	cmp	r3, r2
 8017420:	d103      	bne.n	801742a <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8017422:	4b07      	ldr	r3, [pc, #28]	@ (8017440 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8017424:	681b      	ldr	r3, [r3, #0]
 8017426:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 8017428:	4770      	bx	lr
 801742a:	2000      	movs	r0, #0
 801742c:	4770      	bx	lr
 801742e:	bf00      	nop
 8017430:	24001ab0 	.word	0x24001ab0
 8017434:	24001a94 	.word	0x24001a94
 8017438:	24001ab8 	.word	0x24001ab8
 801743c:	24001ab4 	.word	0x24001ab4
 8017440:	24001a30 	.word	0x24001a30

08017444 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8017444:	4b24      	ldr	r3, [pc, #144]	@ (80174d8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8017446:	8802      	ldrh	r2, [r0, #0]
 8017448:	8818      	ldrh	r0, [r3, #0]
 801744a:	4282      	cmp	r2, r0
 801744c:	d221      	bcs.n	8017492 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801744e:	4b23      	ldr	r3, [pc, #140]	@ (80174dc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8017450:	6819      	ldr	r1, [r3, #0]
 8017452:	2314      	movs	r3, #20
 8017454:	fb03 1302 	mla	r3, r3, r2, r1
 8017458:	6858      	ldr	r0, [r3, #4]
 801745a:	2800      	cmp	r0, #0
 801745c:	d03a      	beq.n	80174d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801745e:	4920      	ldr	r1, [pc, #128]	@ (80174e0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8017460:	6809      	ldr	r1, [r1, #0]
 8017462:	2900      	cmp	r1, #0
 8017464:	d036      	beq.n	80174d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8017466:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801746a:	2900      	cmp	r1, #0
 801746c:	d032      	beq.n	80174d4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801746e:	891a      	ldrh	r2, [r3, #8]
 8017470:	8958      	ldrh	r0, [r3, #10]
 8017472:	4350      	muls	r0, r2
 8017474:	7c5a      	ldrb	r2, [r3, #17]
 8017476:	7cdb      	ldrb	r3, [r3, #19]
 8017478:	0952      	lsrs	r2, r2, #5
 801747a:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801747e:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8017482:	2b0b      	cmp	r3, #11
 8017484:	bf18      	it	ne
 8017486:	0040      	lslne	r0, r0, #1
 8017488:	3003      	adds	r0, #3
 801748a:	f020 0003 	bic.w	r0, r0, #3
 801748e:	4408      	add	r0, r1
 8017490:	4770      	bx	lr
 8017492:	4b14      	ldr	r3, [pc, #80]	@ (80174e4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8017494:	881b      	ldrh	r3, [r3, #0]
 8017496:	4403      	add	r3, r0
 8017498:	429a      	cmp	r2, r3
 801749a:	da1a      	bge.n	80174d2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 801749c:	4b12      	ldr	r3, [pc, #72]	@ (80174e8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 801749e:	1a10      	subs	r0, r2, r0
 80174a0:	210e      	movs	r1, #14
 80174a2:	681b      	ldr	r3, [r3, #0]
 80174a4:	fb01 3000 	mla	r0, r1, r0, r3
 80174a8:	7b03      	ldrb	r3, [r0, #12]
 80174aa:	f003 031f 	and.w	r3, r3, #31
 80174ae:	2b0b      	cmp	r3, #11
 80174b0:	d10b      	bne.n	80174ca <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 80174b2:	8903      	ldrh	r3, [r0, #8]
 80174b4:	8940      	ldrh	r0, [r0, #10]
 80174b6:	4358      	muls	r0, r3
 80174b8:	4b09      	ldr	r3, [pc, #36]	@ (80174e0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80174ba:	3003      	adds	r0, #3
 80174bc:	6819      	ldr	r1, [r3, #0]
 80174be:	f020 0303 	bic.w	r3, r0, #3
 80174c2:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 80174c6:	4418      	add	r0, r3
 80174c8:	4770      	bx	lr
 80174ca:	2b0d      	cmp	r3, #13
 80174cc:	d101      	bne.n	80174d2 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80174ce:	300d      	adds	r0, #13
 80174d0:	4770      	bx	lr
 80174d2:	2000      	movs	r0, #0
 80174d4:	4770      	bx	lr
 80174d6:	bf00      	nop
 80174d8:	24001ab0 	.word	0x24001ab0
 80174dc:	24001ab8 	.word	0x24001ab8
 80174e0:	24001a94 	.word	0x24001a94
 80174e4:	24001ab4 	.word	0x24001ab4
 80174e8:	24001a98 	.word	0x24001a98

080174ec <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80174ec:	4b1f      	ldr	r3, [pc, #124]	@ (801756c <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
 80174ee:	b510      	push	{r4, lr}
 80174f0:	8802      	ldrh	r2, [r0, #0]
 80174f2:	881b      	ldrh	r3, [r3, #0]
 80174f4:	429a      	cmp	r2, r3
 80174f6:	d21a      	bcs.n	801752e <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 80174f8:	4b1d      	ldr	r3, [pc, #116]	@ (8017570 <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
 80174fa:	2114      	movs	r1, #20
 80174fc:	681b      	ldr	r3, [r3, #0]
 80174fe:	fb01 3102 	mla	r1, r1, r2, r3
 8017502:	7c4b      	ldrb	r3, [r1, #17]
 8017504:	0958      	lsrs	r0, r3, #5
 8017506:	7ccb      	ldrb	r3, [r1, #19]
 8017508:	491a      	ldr	r1, [pc, #104]	@ (8017574 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
 801750a:	f3c3 1342 	ubfx	r3, r3, #5, #3
 801750e:	6809      	ldr	r1, [r1, #0]
 8017510:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
 8017514:	b2d8      	uxtb	r0, r3
 8017516:	b149      	cbz	r1, 801752c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8017518:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 801751c:	b132      	cbz	r2, 801752c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801751e:	2b0e      	cmp	r3, #14
 8017520:	d021      	beq.n	8017566 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 8017522:	280f      	cmp	r0, #15
 8017524:	d01d      	beq.n	8017562 <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
 8017526:	2810      	cmp	r0, #16
 8017528:	bf08      	it	eq
 801752a:	2002      	moveq	r0, #2
 801752c:	bd10      	pop	{r4, pc}
 801752e:	4912      	ldr	r1, [pc, #72]	@ (8017578 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
 8017530:	8809      	ldrh	r1, [r1, #0]
 8017532:	4419      	add	r1, r3
 8017534:	428a      	cmp	r2, r1
 8017536:	da09      	bge.n	801754c <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
 8017538:	1ad3      	subs	r3, r2, r3
 801753a:	4a10      	ldr	r2, [pc, #64]	@ (801757c <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
 801753c:	210e      	movs	r1, #14
 801753e:	6812      	ldr	r2, [r2, #0]
 8017540:	fb01 2303 	mla	r3, r1, r3, r2
 8017544:	7b18      	ldrb	r0, [r3, #12]
 8017546:	f000 001f 	and.w	r0, r0, #31
 801754a:	e7ef      	b.n	801752c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801754c:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
 8017550:	429a      	cmp	r2, r3
 8017552:	d108      	bne.n	8017566 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 8017554:	f7f5 faf2 	bl	800cb3c <_ZN8touchgfx3HAL3lcdEv>
 8017558:	6803      	ldr	r3, [r0, #0]
 801755a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801755e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017560:	4718      	bx	r3
 8017562:	2001      	movs	r0, #1
 8017564:	e7e2      	b.n	801752c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8017566:	2000      	movs	r0, #0
 8017568:	e7e0      	b.n	801752c <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 801756a:	bf00      	nop
 801756c:	24001ab0 	.word	0x24001ab0
 8017570:	24001ab8 	.word	0x24001ab8
 8017574:	24001a94 	.word	0x24001a94
 8017578:	24001ab4 	.word	0x24001ab4
 801757c:	24001a98 	.word	0x24001a98

08017580 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8017580:	2010      	movs	r0, #16
 8017582:	4770      	bx	lr

08017584 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8017584:	2000      	movs	r0, #0
 8017586:	4770      	bx	lr

08017588 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8017588:	4b02      	ldr	r3, [pc, #8]	@ (8017594 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801758a:	8818      	ldrh	r0, [r3, #0]
 801758c:	0040      	lsls	r0, r0, #1
 801758e:	b280      	uxth	r0, r0
 8017590:	4770      	bx	lr
 8017592:	bf00      	nop
 8017594:	24001a2a 	.word	0x24001a2a

08017598 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8017598:	2bff      	cmp	r3, #255	@ 0xff
 801759a:	d05e      	beq.n	801765a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
 801759c:	2a0b      	cmp	r2, #11
 801759e:	d058      	beq.n	8017652 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 80175a0:	d80e      	bhi.n	80175c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 80175a2:	2a03      	cmp	r2, #3
 80175a4:	d04d      	beq.n	8017642 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
 80175a6:	d804      	bhi.n	80175b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 80175a8:	2a01      	cmp	r2, #1
 80175aa:	d04c      	beq.n	8017646 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
 80175ac:	d94d      	bls.n	801764a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
 80175ae:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 80175b0:	e031      	b.n	8017616 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80175b2:	2a09      	cmp	r2, #9
 80175b4:	d04d      	beq.n	8017652 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 80175b6:	d84a      	bhi.n	801764e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 80175b8:	2a08      	cmp	r2, #8
 80175ba:	d048      	beq.n	801764e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 80175bc:	2300      	movs	r3, #0
 80175be:	e02a      	b.n	8017616 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80175c0:	2a2f      	cmp	r2, #47	@ 0x2f
 80175c2:	d02c      	beq.n	801761e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
 80175c4:	d811      	bhi.n	80175ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 80175c6:	2a2d      	cmp	r2, #45	@ 0x2d
 80175c8:	d018      	beq.n	80175fc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
 80175ca:	d831      	bhi.n	8017630 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
 80175cc:	2a2c      	cmp	r2, #44	@ 0x2c
 80175ce:	d1f5      	bne.n	80175bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80175d0:	684a      	ldr	r2, [r1, #4]
 80175d2:	7813      	ldrb	r3, [r2, #0]
 80175d4:	7852      	ldrb	r2, [r2, #1]
 80175d6:	2a00      	cmp	r2, #0
 80175d8:	d1f0      	bne.n	80175bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80175da:	2b01      	cmp	r3, #1
 80175dc:	d01d      	beq.n	801761a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 80175de:	2b00      	cmp	r3, #0
 80175e0:	d02d      	beq.n	801763e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 80175e2:	2b02      	cmp	r3, #2
 80175e4:	d1ea      	bne.n	80175bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80175e6:	68c3      	ldr	r3, [r0, #12]
 80175e8:	e015      	b.n	8017616 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80175ea:	2a31      	cmp	r2, #49	@ 0x31
 80175ec:	d004      	beq.n	80175f8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 80175ee:	d332      	bcc.n	8017656 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 80175f0:	2a32      	cmp	r2, #50	@ 0x32
 80175f2:	d030      	beq.n	8017656 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 80175f4:	2a33      	cmp	r2, #51	@ 0x33
 80175f6:	d1e1      	bne.n	80175bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80175f8:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 80175fa:	e00c      	b.n	8017616 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80175fc:	684a      	ldr	r2, [r1, #4]
 80175fe:	7813      	ldrb	r3, [r2, #0]
 8017600:	7852      	ldrb	r2, [r2, #1]
 8017602:	2a00      	cmp	r2, #0
 8017604:	d1da      	bne.n	80175bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017606:	2b01      	cmp	r3, #1
 8017608:	d004      	beq.n	8017614 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
 801760a:	d30f      	bcc.n	801762c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
 801760c:	2b02      	cmp	r3, #2
 801760e:	d1d5      	bne.n	80175bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017610:	6943      	ldr	r3, [r0, #20]
 8017612:	e000      	b.n	8017616 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017614:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8017616:	4618      	mov	r0, r3
 8017618:	4770      	bx	lr
 801761a:	69c3      	ldr	r3, [r0, #28]
 801761c:	e7fb      	b.n	8017616 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801761e:	684b      	ldr	r3, [r1, #4]
 8017620:	781a      	ldrb	r2, [r3, #0]
 8017622:	785b      	ldrb	r3, [r3, #1]
 8017624:	2b00      	cmp	r3, #0
 8017626:	d1c9      	bne.n	80175bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017628:	2a00      	cmp	r2, #0
 801762a:	d1f4      	bne.n	8017616 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801762c:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 801762e:	e7f2      	b.n	8017616 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017630:	684b      	ldr	r3, [r1, #4]
 8017632:	781a      	ldrb	r2, [r3, #0]
 8017634:	785b      	ldrb	r3, [r3, #1]
 8017636:	2b00      	cmp	r3, #0
 8017638:	d1c0      	bne.n	80175bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801763a:	2a00      	cmp	r2, #0
 801763c:	d1eb      	bne.n	8017616 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801763e:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8017640:	e7e9      	b.n	8017616 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017642:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 8017644:	e7e7      	b.n	8017616 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017646:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8017648:	e7e5      	b.n	8017616 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801764a:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 801764c:	e7e3      	b.n	8017616 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801764e:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
 8017650:	e7e1      	b.n	8017616 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017652:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 8017654:	e7df      	b.n	8017616 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017656:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
 8017658:	e7dd      	b.n	8017616 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801765a:	2a0b      	cmp	r2, #11
 801765c:	d059      	beq.n	8017712 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 801765e:	d80e      	bhi.n	801767e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
 8017660:	2a03      	cmp	r2, #3
 8017662:	d050      	beq.n	8017706 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
 8017664:	d804      	bhi.n	8017670 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 8017666:	2a01      	cmp	r2, #1
 8017668:	d04f      	beq.n	801770a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
 801766a:	d950      	bls.n	801770e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 801766c:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 801766e:	e7d2      	b.n	8017616 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017670:	2a09      	cmp	r2, #9
 8017672:	d04e      	beq.n	8017712 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 8017674:	d801      	bhi.n	801767a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 8017676:	2a08      	cmp	r2, #8
 8017678:	d1a0      	bne.n	80175bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801767a:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 801767c:	e7cb      	b.n	8017616 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801767e:	2a2f      	cmp	r2, #47	@ 0x2f
 8017680:	d02d      	beq.n	80176de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
 8017682:	d811      	bhi.n	80176a8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8017684:	2a2d      	cmp	r2, #45	@ 0x2d
 8017686:	d018      	beq.n	80176ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
 8017688:	d833      	bhi.n	80176f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
 801768a:	2a2c      	cmp	r2, #44	@ 0x2c
 801768c:	d196      	bne.n	80175bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801768e:	684a      	ldr	r2, [r1, #4]
 8017690:	7813      	ldrb	r3, [r2, #0]
 8017692:	7852      	ldrb	r2, [r2, #1]
 8017694:	2a00      	cmp	r2, #0
 8017696:	d191      	bne.n	80175bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017698:	2b01      	cmp	r3, #1
 801769a:	d01e      	beq.n	80176da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801769c:	2b00      	cmp	r3, #0
 801769e:	d030      	beq.n	8017702 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
 80176a0:	2b02      	cmp	r3, #2
 80176a2:	d18b      	bne.n	80175bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80176a4:	6903      	ldr	r3, [r0, #16]
 80176a6:	e7b6      	b.n	8017616 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80176a8:	2a31      	cmp	r2, #49	@ 0x31
 80176aa:	d004      	beq.n	80176b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
 80176ac:	d333      	bcc.n	8017716 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 80176ae:	2a32      	cmp	r2, #50	@ 0x32
 80176b0:	d031      	beq.n	8017716 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 80176b2:	2a33      	cmp	r2, #51	@ 0x33
 80176b4:	d182      	bne.n	80175bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80176b6:	6f83      	ldr	r3, [r0, #120]	@ 0x78
 80176b8:	e7ad      	b.n	8017616 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80176ba:	684a      	ldr	r2, [r1, #4]
 80176bc:	7813      	ldrb	r3, [r2, #0]
 80176be:	7852      	ldrb	r2, [r2, #1]
 80176c0:	2a00      	cmp	r2, #0
 80176c2:	f47f af7b 	bne.w	80175bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80176c6:	2b01      	cmp	r3, #1
 80176c8:	d005      	beq.n	80176d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80176ca:	d310      	bcc.n	80176ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
 80176cc:	2b02      	cmp	r3, #2
 80176ce:	f47f af75 	bne.w	80175bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80176d2:	6983      	ldr	r3, [r0, #24]
 80176d4:	e79f      	b.n	8017616 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80176d6:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80176d8:	e79d      	b.n	8017616 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80176da:	6a03      	ldr	r3, [r0, #32]
 80176dc:	e79b      	b.n	8017616 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80176de:	684b      	ldr	r3, [r1, #4]
 80176e0:	781a      	ldrb	r2, [r3, #0]
 80176e2:	785b      	ldrb	r3, [r3, #1]
 80176e4:	2b00      	cmp	r3, #0
 80176e6:	f47f af69 	bne.w	80175bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80176ea:	2a00      	cmp	r2, #0
 80176ec:	d193      	bne.n	8017616 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80176ee:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 80176f0:	e791      	b.n	8017616 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80176f2:	684b      	ldr	r3, [r1, #4]
 80176f4:	781a      	ldrb	r2, [r3, #0]
 80176f6:	785b      	ldrb	r3, [r3, #1]
 80176f8:	2b00      	cmp	r3, #0
 80176fa:	f47f af5f 	bne.w	80175bc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80176fe:	2a00      	cmp	r2, #0
 8017700:	d189      	bne.n	8017616 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017702:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8017704:	e787      	b.n	8017616 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017706:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 8017708:	e785      	b.n	8017616 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801770a:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 801770c:	e783      	b.n	8017616 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801770e:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 8017710:	e781      	b.n	8017616 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017712:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 8017714:	e77f      	b.n	8017616 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017716:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 8017718:	e77d      	b.n	8017616 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

0801771a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801771a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801771e:	b087      	sub	sp, #28
 8017720:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8017722:	9205      	str	r2, [sp, #20]
 8017724:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8017728:	9101      	str	r1, [sp, #4]
 801772a:	9202      	str	r2, [sp, #8]
 801772c:	6841      	ldr	r1, [r0, #4]
 801772e:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8017732:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8017736:	fb01 2404 	mla	r4, r1, r4, r2
 801773a:	6802      	ldr	r2, [r0, #0]
 801773c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017740:	f8de 2000 	ldr.w	r2, [lr]
 8017744:	9203      	str	r2, [sp, #12]
 8017746:	f8de 2004 	ldr.w	r2, [lr, #4]
 801774a:	3204      	adds	r2, #4
 801774c:	9204      	str	r2, [sp, #16]
 801774e:	9a02      	ldr	r2, [sp, #8]
 8017750:	43d6      	mvns	r6, r2
 8017752:	b2f6      	uxtb	r6, r6
 8017754:	9a01      	ldr	r2, [sp, #4]
 8017756:	2a00      	cmp	r2, #0
 8017758:	dc03      	bgt.n	8017762 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801775a:	9a05      	ldr	r2, [sp, #20]
 801775c:	2a00      	cmp	r2, #0
 801775e:	f340 8129 	ble.w	80179b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8017762:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8017764:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8017768:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801776c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801776e:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8017772:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8017776:	2b00      	cmp	r3, #0
 8017778:	dd0e      	ble.n	8017798 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801777a:	1408      	asrs	r0, r1, #16
 801777c:	d405      	bmi.n	801778a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801777e:	4560      	cmp	r0, ip
 8017780:	da03      	bge.n	801778a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017782:	1410      	asrs	r0, r2, #16
 8017784:	d401      	bmi.n	801778a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017786:	42b8      	cmp	r0, r7
 8017788:	db07      	blt.n	801779a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801778a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801778c:	3b01      	subs	r3, #1
 801778e:	3402      	adds	r4, #2
 8017790:	4401      	add	r1, r0
 8017792:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8017794:	4402      	add	r2, r0
 8017796:	e7ee      	b.n	8017776 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8017798:	d071      	beq.n	801787e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801779a:	1e58      	subs	r0, r3, #1
 801779c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801779e:	fb05 1500 	mla	r5, r5, r0, r1
 80177a2:	142d      	asrs	r5, r5, #16
 80177a4:	d45f      	bmi.n	8017866 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80177a6:	4565      	cmp	r5, ip
 80177a8:	da5d      	bge.n	8017866 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80177aa:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80177ac:	fb05 2000 	mla	r0, r5, r0, r2
 80177b0:	1400      	asrs	r0, r0, #16
 80177b2:	d458      	bmi.n	8017866 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80177b4:	42b8      	cmp	r0, r7
 80177b6:	da56      	bge.n	8017866 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80177b8:	4699      	mov	r9, r3
 80177ba:	46a2      	mov	sl, r4
 80177bc:	f8bd b008 	ldrh.w	fp, [sp, #8]
 80177c0:	f1b9 0f00 	cmp.w	r9, #0
 80177c4:	dd57      	ble.n	8017876 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80177c6:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80177ca:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80177ce:	9803      	ldr	r0, [sp, #12]
 80177d0:	140d      	asrs	r5, r1, #16
 80177d2:	f109 39ff 	add.w	r9, r9, #4294967295
 80177d6:	fb07 000c 	mla	r0, r7, ip, r0
 80177da:	5d40      	ldrb	r0, [r0, r5]
 80177dc:	9d04      	ldr	r5, [sp, #16]
 80177de:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80177e2:	f8ba 5000 	ldrh.w	r5, [sl]
 80177e6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80177ea:	122f      	asrs	r7, r5, #8
 80177ec:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80177f0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80177f4:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80177f8:	00ed      	lsls	r5, r5, #3
 80177fa:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 80177fe:	fb17 f706 	smulbb	r7, r7, r6
 8017802:	b2ed      	uxtb	r5, r5
 8017804:	fb18 f806 	smulbb	r8, r8, r6
 8017808:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801780c:	10c7      	asrs	r7, r0, #3
 801780e:	fb15 f506 	smulbb	r5, r5, r6
 8017812:	00c0      	lsls	r0, r0, #3
 8017814:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8017818:	fa1f fc8c 	uxth.w	ip, ip
 801781c:	b2c0      	uxtb	r0, r0
 801781e:	fb07 870b 	mla	r7, r7, fp, r8
 8017822:	fb00 500b 	mla	r0, r0, fp, r5
 8017826:	f10c 0501 	add.w	r5, ip, #1
 801782a:	b2bf      	uxth	r7, r7
 801782c:	b280      	uxth	r0, r0
 801782e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8017832:	f107 0801 	add.w	r8, r7, #1
 8017836:	1c45      	adds	r5, r0, #1
 8017838:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801783c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8017840:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8017844:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8017846:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801784a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801784e:	4401      	add	r1, r0
 8017850:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8017854:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8017856:	ea45 0c0c 	orr.w	ip, r5, ip
 801785a:	4402      	add	r2, r0
 801785c:	ea4c 0c08 	orr.w	ip, ip, r8
 8017860:	f82a cb02 	strh.w	ip, [sl], #2
 8017864:	e7ac      	b.n	80177c0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8017866:	f04f 0800 	mov.w	r8, #0
 801786a:	f8bd a008 	ldrh.w	sl, [sp, #8]
 801786e:	eb03 0008 	add.w	r0, r3, r8
 8017872:	2800      	cmp	r0, #0
 8017874:	dc41      	bgt.n	80178fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8017876:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801787a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801787e:	9b01      	ldr	r3, [sp, #4]
 8017880:	2b00      	cmp	r3, #0
 8017882:	f340 8097 	ble.w	80179b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8017886:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801788a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801788c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017890:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017894:	eef0 6a62 	vmov.f32	s13, s5
 8017898:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801789c:	ee31 1a05 	vadd.f32	s2, s2, s10
 80178a0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80178a4:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 80178a8:	eef0 6a43 	vmov.f32	s13, s6
 80178ac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80178b0:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 80178b4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80178b8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80178bc:	ee77 2a62 	vsub.f32	s5, s14, s5
 80178c0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80178c4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80178c8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80178cc:	ee12 2a90 	vmov	r2, s5
 80178d0:	eef0 2a47 	vmov.f32	s5, s14
 80178d4:	fb92 f3f3 	sdiv	r3, r2, r3
 80178d8:	ee13 2a10 	vmov	r2, s6
 80178dc:	9313      	str	r3, [sp, #76]	@ 0x4c
 80178de:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80178e0:	eeb0 3a67 	vmov.f32	s6, s15
 80178e4:	fb92 f3f3 	sdiv	r3, r2, r3
 80178e8:	9314      	str	r3, [sp, #80]	@ 0x50
 80178ea:	9b01      	ldr	r3, [sp, #4]
 80178ec:	9a05      	ldr	r2, [sp, #20]
 80178ee:	3b01      	subs	r3, #1
 80178f0:	9301      	str	r3, [sp, #4]
 80178f2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80178f4:	bf08      	it	eq
 80178f6:	4613      	moveq	r3, r2
 80178f8:	e72c      	b.n	8017754 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80178fa:	140f      	asrs	r7, r1, #16
 80178fc:	d453      	bmi.n	80179a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80178fe:	f8de 5008 	ldr.w	r5, [lr, #8]
 8017902:	42bd      	cmp	r5, r7
 8017904:	dd4f      	ble.n	80179a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8017906:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801790a:	d44c      	bmi.n	80179a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801790c:	f8de 000c 	ldr.w	r0, [lr, #12]
 8017910:	4560      	cmp	r0, ip
 8017912:	dd48      	ble.n	80179a6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8017914:	9803      	ldr	r0, [sp, #12]
 8017916:	b22d      	sxth	r5, r5
 8017918:	fb0c 0505 	mla	r5, ip, r5, r0
 801791c:	5de8      	ldrb	r0, [r5, r7]
 801791e:	9d04      	ldr	r5, [sp, #16]
 8017920:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8017924:	f06f 0501 	mvn.w	r5, #1
 8017928:	fb05 fb08 	mul.w	fp, r5, r8
 801792c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8017930:	f834 500b 	ldrh.w	r5, [r4, fp]
 8017934:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8017938:	122f      	asrs	r7, r5, #8
 801793a:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801793e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8017942:	00ed      	lsls	r5, r5, #3
 8017944:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8017948:	fb17 f706 	smulbb	r7, r7, r6
 801794c:	b2ed      	uxtb	r5, r5
 801794e:	fb19 f906 	smulbb	r9, r9, r6
 8017952:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8017956:	10c7      	asrs	r7, r0, #3
 8017958:	fb15 f506 	smulbb	r5, r5, r6
 801795c:	00c0      	lsls	r0, r0, #3
 801795e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8017962:	fa1f fc8c 	uxth.w	ip, ip
 8017966:	b2c0      	uxtb	r0, r0
 8017968:	fb07 970a 	mla	r7, r7, sl, r9
 801796c:	fb00 500a 	mla	r0, r0, sl, r5
 8017970:	f10c 0501 	add.w	r5, ip, #1
 8017974:	b2bf      	uxth	r7, r7
 8017976:	b280      	uxth	r0, r0
 8017978:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801797c:	f107 0901 	add.w	r9, r7, #1
 8017980:	1c45      	adds	r5, r0, #1
 8017982:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8017986:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801798a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801798e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8017992:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8017996:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801799a:	ea45 0c0c 	orr.w	ip, r5, ip
 801799e:	ea4c 0c09 	orr.w	ip, ip, r9
 80179a2:	f824 c00b 	strh.w	ip, [r4, fp]
 80179a6:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80179a8:	f108 38ff 	add.w	r8, r8, #4294967295
 80179ac:	4401      	add	r1, r0
 80179ae:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80179b0:	4402      	add	r2, r0
 80179b2:	e75c      	b.n	801786e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80179b4:	b007      	add	sp, #28
 80179b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080179ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80179ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80179be:	b085      	sub	sp, #20
 80179c0:	4693      	mov	fp, r2
 80179c2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80179c6:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80179c8:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80179ca:	6870      	ldr	r0, [r6, #4]
 80179cc:	9100      	str	r1, [sp, #0]
 80179ce:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80179d2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 80179d6:	fb00 2404 	mla	r4, r0, r4, r2
 80179da:	6832      	ldr	r2, [r6, #0]
 80179dc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80179e0:	682a      	ldr	r2, [r5, #0]
 80179e2:	9201      	str	r2, [sp, #4]
 80179e4:	686a      	ldr	r2, [r5, #4]
 80179e6:	3204      	adds	r2, #4
 80179e8:	9202      	str	r2, [sp, #8]
 80179ea:	9a00      	ldr	r2, [sp, #0]
 80179ec:	2a00      	cmp	r2, #0
 80179ee:	dc03      	bgt.n	80179f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80179f0:	f1bb 0f00 	cmp.w	fp, #0
 80179f4:	f340 80a0 	ble.w	8017b38 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80179f8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80179fa:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80179fe:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8017a02:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8017a04:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8017a08:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8017a0c:	2b00      	cmp	r3, #0
 8017a0e:	dd0c      	ble.n	8017a2a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017a10:	1406      	asrs	r6, r0, #16
 8017a12:	d405      	bmi.n	8017a20 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8017a14:	454e      	cmp	r6, r9
 8017a16:	da03      	bge.n	8017a20 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8017a18:	1416      	asrs	r6, r2, #16
 8017a1a:	d401      	bmi.n	8017a20 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8017a1c:	4546      	cmp	r6, r8
 8017a1e:	db05      	blt.n	8017a2c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017a20:	4470      	add	r0, lr
 8017a22:	4462      	add	r2, ip
 8017a24:	3b01      	subs	r3, #1
 8017a26:	3402      	adds	r4, #2
 8017a28:	e7f0      	b.n	8017a0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8017a2a:	d00f      	beq.n	8017a4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017a2c:	1e5e      	subs	r6, r3, #1
 8017a2e:	fb0e 0706 	mla	r7, lr, r6, r0
 8017a32:	143f      	asrs	r7, r7, #16
 8017a34:	d541      	bpl.n	8017aba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8017a36:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8017a3a:	4698      	mov	r8, r3
 8017a3c:	9603      	str	r6, [sp, #12]
 8017a3e:	f1b8 0f00 	cmp.w	r8, #0
 8017a42:	dc59      	bgt.n	8017af8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8017a44:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017a48:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017a4c:	9b00      	ldr	r3, [sp, #0]
 8017a4e:	2b00      	cmp	r3, #0
 8017a50:	dd72      	ble.n	8017b38 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8017a52:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017a56:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017a58:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017a5c:	eeb0 6a62 	vmov.f32	s12, s5
 8017a60:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017a64:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017a68:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017a6c:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8017a70:	eeb0 6a43 	vmov.f32	s12, s6
 8017a74:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017a78:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8017a7c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017a80:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017a84:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017a88:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017a8c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017a90:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017a94:	ee12 2a90 	vmov	r2, s5
 8017a98:	eef0 2a47 	vmov.f32	s5, s14
 8017a9c:	fb92 fef3 	sdiv	lr, r2, r3
 8017aa0:	ee13 2a10 	vmov	r2, s6
 8017aa4:	eeb0 3a67 	vmov.f32	s6, s15
 8017aa8:	fb92 fcf3 	sdiv	ip, r2, r3
 8017aac:	9b00      	ldr	r3, [sp, #0]
 8017aae:	3b01      	subs	r3, #1
 8017ab0:	9300      	str	r3, [sp, #0]
 8017ab2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017ab4:	bf08      	it	eq
 8017ab6:	465b      	moveq	r3, fp
 8017ab8:	e797      	b.n	80179ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8017aba:	454f      	cmp	r7, r9
 8017abc:	dabb      	bge.n	8017a36 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8017abe:	fb0c 2606 	mla	r6, ip, r6, r2
 8017ac2:	1436      	asrs	r6, r6, #16
 8017ac4:	d4b7      	bmi.n	8017a36 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8017ac6:	4546      	cmp	r6, r8
 8017ac8:	dab5      	bge.n	8017a36 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8017aca:	461e      	mov	r6, r3
 8017acc:	46a0      	mov	r8, r4
 8017ace:	2e00      	cmp	r6, #0
 8017ad0:	ddb8      	ble.n	8017a44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8017ad2:	1417      	asrs	r7, r2, #16
 8017ad4:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8017ad8:	9901      	ldr	r1, [sp, #4]
 8017ada:	ea4f 4920 	mov.w	r9, r0, asr #16
 8017ade:	4462      	add	r2, ip
 8017ae0:	4470      	add	r0, lr
 8017ae2:	fb0a 1707 	mla	r7, sl, r7, r1
 8017ae6:	9902      	ldr	r1, [sp, #8]
 8017ae8:	3e01      	subs	r6, #1
 8017aea:	f817 7009 	ldrb.w	r7, [r7, r9]
 8017aee:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8017af2:	f828 7b02 	strh.w	r7, [r8], #2
 8017af6:	e7ea      	b.n	8017ace <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8017af8:	ea5f 4920 	movs.w	r9, r0, asr #16
 8017afc:	d417      	bmi.n	8017b2e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8017afe:	68ae      	ldr	r6, [r5, #8]
 8017b00:	454e      	cmp	r6, r9
 8017b02:	dd14      	ble.n	8017b2e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8017b04:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8017b08:	d411      	bmi.n	8017b2e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8017b0a:	68ef      	ldr	r7, [r5, #12]
 8017b0c:	4557      	cmp	r7, sl
 8017b0e:	dd0e      	ble.n	8017b2e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8017b10:	9f01      	ldr	r7, [sp, #4]
 8017b12:	b236      	sxth	r6, r6
 8017b14:	f06f 0101 	mvn.w	r1, #1
 8017b18:	fb0a 7606 	mla	r6, sl, r6, r7
 8017b1c:	9f02      	ldr	r7, [sp, #8]
 8017b1e:	f816 6009 	ldrb.w	r6, [r6, r9]
 8017b22:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8017b26:	fb01 f608 	mul.w	r6, r1, r8
 8017b2a:	9903      	ldr	r1, [sp, #12]
 8017b2c:	538f      	strh	r7, [r1, r6]
 8017b2e:	4470      	add	r0, lr
 8017b30:	4462      	add	r2, ip
 8017b32:	f108 38ff 	add.w	r8, r8, #4294967295
 8017b36:	e782      	b.n	8017a3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8017b38:	b005      	add	sp, #20
 8017b3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017b3e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017b3e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017b42:	b087      	sub	sp, #28
 8017b44:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8017b46:	9205      	str	r2, [sp, #20]
 8017b48:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8017b4c:	9102      	str	r1, [sp, #8]
 8017b4e:	9203      	str	r2, [sp, #12]
 8017b50:	6861      	ldr	r1, [r4, #4]
 8017b52:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8017b56:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8017b5a:	fb01 2000 	mla	r0, r1, r0, r2
 8017b5e:	6822      	ldr	r2, [r4, #0]
 8017b60:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8017b64:	9200      	str	r2, [sp, #0]
 8017b66:	f8dc 2000 	ldr.w	r2, [ip]
 8017b6a:	9204      	str	r2, [sp, #16]
 8017b6c:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8017b70:	3204      	adds	r2, #4
 8017b72:	9201      	str	r2, [sp, #4]
 8017b74:	9a03      	ldr	r2, [sp, #12]
 8017b76:	43d5      	mvns	r5, r2
 8017b78:	b2ed      	uxtb	r5, r5
 8017b7a:	9a02      	ldr	r2, [sp, #8]
 8017b7c:	2a00      	cmp	r2, #0
 8017b7e:	dc03      	bgt.n	8017b88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8017b80:	9a05      	ldr	r2, [sp, #20]
 8017b82:	2a00      	cmp	r2, #0
 8017b84:	f340 812c 	ble.w	8017de0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8017b88:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8017b8a:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8017b8e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8017b92:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8017b94:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8017b98:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8017b9c:	2b00      	cmp	r3, #0
 8017b9e:	dd10      	ble.n	8017bc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8017ba0:	140c      	asrs	r4, r1, #16
 8017ba2:	d405      	bmi.n	8017bb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017ba4:	4574      	cmp	r4, lr
 8017ba6:	da03      	bge.n	8017bb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017ba8:	1414      	asrs	r4, r2, #16
 8017baa:	d401      	bmi.n	8017bb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017bac:	42bc      	cmp	r4, r7
 8017bae:	db09      	blt.n	8017bc4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8017bb0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8017bb2:	3b01      	subs	r3, #1
 8017bb4:	9800      	ldr	r0, [sp, #0]
 8017bb6:	4421      	add	r1, r4
 8017bb8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8017bba:	3002      	adds	r0, #2
 8017bbc:	4422      	add	r2, r4
 8017bbe:	9000      	str	r0, [sp, #0]
 8017bc0:	e7ec      	b.n	8017b9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8017bc2:	d071      	beq.n	8017ca8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8017bc4:	1e5c      	subs	r4, r3, #1
 8017bc6:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8017bc8:	fb06 1604 	mla	r6, r6, r4, r1
 8017bcc:	1436      	asrs	r6, r6, #16
 8017bce:	d45d      	bmi.n	8017c8c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8017bd0:	4576      	cmp	r6, lr
 8017bd2:	da5b      	bge.n	8017c8c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8017bd4:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 8017bd6:	fb06 2404 	mla	r4, r6, r4, r2
 8017bda:	1424      	asrs	r4, r4, #16
 8017bdc:	d456      	bmi.n	8017c8c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8017bde:	42bc      	cmp	r4, r7
 8017be0:	da54      	bge.n	8017c8c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8017be2:	4698      	mov	r8, r3
 8017be4:	f8dd 9000 	ldr.w	r9, [sp]
 8017be8:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8017bec:	f1b8 0f00 	cmp.w	r8, #0
 8017bf0:	dd54      	ble.n	8017c9c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8017bf2:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8017bf6:	1414      	asrs	r4, r2, #16
 8017bf8:	9804      	ldr	r0, [sp, #16]
 8017bfa:	140e      	asrs	r6, r1, #16
 8017bfc:	f108 38ff 	add.w	r8, r8, #4294967295
 8017c00:	fb07 0404 	mla	r4, r7, r4, r0
 8017c04:	9801      	ldr	r0, [sp, #4]
 8017c06:	f814 e006 	ldrb.w	lr, [r4, r6]
 8017c0a:	f8b9 4000 	ldrh.w	r4, [r9]
 8017c0e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8017c12:	1227      	asrs	r7, r4, #8
 8017c14:	eb00 0b0e 	add.w	fp, r0, lr
 8017c18:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8017c1c:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8017c20:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8017c22:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8017c26:	f89b b001 	ldrb.w	fp, [fp, #1]
 8017c2a:	4401      	add	r1, r0
 8017c2c:	fb16 f60a 	smulbb	r6, r6, sl
 8017c30:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8017c32:	fb1b fb0a 	smulbb	fp, fp, sl
 8017c36:	fb07 6705 	mla	r7, r7, r5, r6
 8017c3a:	10e6      	asrs	r6, r4, #3
 8017c3c:	00e4      	lsls	r4, r4, #3
 8017c3e:	4402      	add	r2, r0
 8017c40:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8017c44:	b2bf      	uxth	r7, r7
 8017c46:	b2e4      	uxtb	r4, r4
 8017c48:	fb06 b605 	mla	r6, r6, r5, fp
 8017c4c:	fb14 f405 	smulbb	r4, r4, r5
 8017c50:	b2b6      	uxth	r6, r6
 8017c52:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8017c56:	1c7c      	adds	r4, r7, #1
 8017c58:	f106 0b01 	add.w	fp, r6, #1
 8017c5c:	fa1f fe8e 	uxth.w	lr, lr
 8017c60:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8017c64:	f10e 0401 	add.w	r4, lr, #1
 8017c68:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8017c6c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8017c70:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8017c74:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8017c78:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8017c7c:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8017c80:	4327      	orrs	r7, r4
 8017c82:	ea47 070b 	orr.w	r7, r7, fp
 8017c86:	f829 7b02 	strh.w	r7, [r9], #2
 8017c8a:	e7af      	b.n	8017bec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8017c8c:	f04f 0e00 	mov.w	lr, #0
 8017c90:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8017c94:	eb03 040e 	add.w	r4, r3, lr
 8017c98:	2c00      	cmp	r4, #0
 8017c9a:	dc43      	bgt.n	8017d24 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8017c9c:	9a00      	ldr	r2, [sp, #0]
 8017c9e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017ca2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017ca6:	9300      	str	r3, [sp, #0]
 8017ca8:	9b02      	ldr	r3, [sp, #8]
 8017caa:	2b00      	cmp	r3, #0
 8017cac:	f340 8098 	ble.w	8017de0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8017cb0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8017cb4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017cb6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017cba:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017cbe:	eef0 6a62 	vmov.f32	s13, s5
 8017cc2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8017cc6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017cca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017cce:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8017cd2:	eef0 6a43 	vmov.f32	s13, s6
 8017cd6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017cda:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8017cde:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017ce2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017ce6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017cea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017cee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017cf2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017cf6:	ee12 2a90 	vmov	r2, s5
 8017cfa:	eef0 2a47 	vmov.f32	s5, s14
 8017cfe:	fb92 f3f3 	sdiv	r3, r2, r3
 8017d02:	ee13 2a10 	vmov	r2, s6
 8017d06:	9313      	str	r3, [sp, #76]	@ 0x4c
 8017d08:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017d0a:	eeb0 3a67 	vmov.f32	s6, s15
 8017d0e:	fb92 f3f3 	sdiv	r3, r2, r3
 8017d12:	9314      	str	r3, [sp, #80]	@ 0x50
 8017d14:	9b02      	ldr	r3, [sp, #8]
 8017d16:	9a05      	ldr	r2, [sp, #20]
 8017d18:	3b01      	subs	r3, #1
 8017d1a:	9302      	str	r3, [sp, #8]
 8017d1c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017d1e:	bf08      	it	eq
 8017d20:	4613      	moveq	r3, r2
 8017d22:	e72a      	b.n	8017b7a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8017d24:	140f      	asrs	r7, r1, #16
 8017d26:	d454      	bmi.n	8017dd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8017d28:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8017d2c:	42be      	cmp	r6, r7
 8017d2e:	dd50      	ble.n	8017dd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8017d30:	ea5f 4822 	movs.w	r8, r2, asr #16
 8017d34:	d44d      	bmi.n	8017dd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8017d36:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8017d3a:	4544      	cmp	r4, r8
 8017d3c:	dd49      	ble.n	8017dd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8017d3e:	9c04      	ldr	r4, [sp, #16]
 8017d40:	b236      	sxth	r6, r6
 8017d42:	f06f 0001 	mvn.w	r0, #1
 8017d46:	fb08 4606 	mla	r6, r8, r6, r4
 8017d4a:	9c01      	ldr	r4, [sp, #4]
 8017d4c:	fb00 fa0e 	mul.w	sl, r0, lr
 8017d50:	9800      	ldr	r0, [sp, #0]
 8017d52:	f816 8007 	ldrb.w	r8, [r6, r7]
 8017d56:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8017d5a:	eb04 0b08 	add.w	fp, r4, r8
 8017d5e:	f830 400a 	ldrh.w	r4, [r0, sl]
 8017d62:	9801      	ldr	r0, [sp, #4]
 8017d64:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8017d68:	1227      	asrs	r7, r4, #8
 8017d6a:	f89b b001 	ldrb.w	fp, [fp, #1]
 8017d6e:	fb16 f609 	smulbb	r6, r6, r9
 8017d72:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8017d76:	f810 8008 	ldrb.w	r8, [r0, r8]
 8017d7a:	fb1b fb09 	smulbb	fp, fp, r9
 8017d7e:	fb07 6705 	mla	r7, r7, r5, r6
 8017d82:	10e6      	asrs	r6, r4, #3
 8017d84:	00e4      	lsls	r4, r4, #3
 8017d86:	9800      	ldr	r0, [sp, #0]
 8017d88:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8017d8c:	b2bf      	uxth	r7, r7
 8017d8e:	b2e4      	uxtb	r4, r4
 8017d90:	fb06 b605 	mla	r6, r6, r5, fp
 8017d94:	fb14 f405 	smulbb	r4, r4, r5
 8017d98:	b2b6      	uxth	r6, r6
 8017d9a:	fb08 4809 	mla	r8, r8, r9, r4
 8017d9e:	1c7c      	adds	r4, r7, #1
 8017da0:	f106 0b01 	add.w	fp, r6, #1
 8017da4:	fa1f f888 	uxth.w	r8, r8
 8017da8:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8017dac:	f108 0401 	add.w	r4, r8, #1
 8017db0:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8017db4:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8017db8:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8017dbc:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8017dc0:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8017dc4:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8017dc8:	4327      	orrs	r7, r4
 8017dca:	ea47 070b 	orr.w	r7, r7, fp
 8017dce:	f820 700a 	strh.w	r7, [r0, sl]
 8017dd2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8017dd4:	f10e 3eff 	add.w	lr, lr, #4294967295
 8017dd8:	4401      	add	r1, r0
 8017dda:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8017ddc:	4402      	add	r2, r0
 8017dde:	e759      	b.n	8017c94 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8017de0:	b007      	add	sp, #28
 8017de2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08017de8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017de8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017dec:	b085      	sub	sp, #20
 8017dee:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8017df2:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8017df4:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8017df6:	9203      	str	r2, [sp, #12]
 8017df8:	6870      	ldr	r0, [r6, #4]
 8017dfa:	686f      	ldr	r7, [r5, #4]
 8017dfc:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 8017e00:	3704      	adds	r7, #4
 8017e02:	9101      	str	r1, [sp, #4]
 8017e04:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8017e08:	fb00 2404 	mla	r4, r0, r4, r2
 8017e0c:	6832      	ldr	r2, [r6, #0]
 8017e0e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017e12:	682a      	ldr	r2, [r5, #0]
 8017e14:	9202      	str	r2, [sp, #8]
 8017e16:	9a01      	ldr	r2, [sp, #4]
 8017e18:	2a00      	cmp	r2, #0
 8017e1a:	dc03      	bgt.n	8017e24 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8017e1c:	9a03      	ldr	r2, [sp, #12]
 8017e1e:	2a00      	cmp	r2, #0
 8017e20:	f340 80cc 	ble.w	8017fbc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8017e24:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8017e26:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8017e2a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8017e2e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8017e30:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8017e34:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8017e38:	2b00      	cmp	r3, #0
 8017e3a:	dd0d      	ble.n	8017e58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017e3c:	1406      	asrs	r6, r0, #16
 8017e3e:	d405      	bmi.n	8017e4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8017e40:	454e      	cmp	r6, r9
 8017e42:	da03      	bge.n	8017e4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8017e44:	1416      	asrs	r6, r2, #16
 8017e46:	d401      	bmi.n	8017e4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8017e48:	4546      	cmp	r6, r8
 8017e4a:	db06      	blt.n	8017e5a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017e4c:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 8017e4e:	4460      	add	r0, ip
 8017e50:	3b01      	subs	r3, #1
 8017e52:	3402      	adds	r4, #2
 8017e54:	4432      	add	r2, r6
 8017e56:	e7ef      	b.n	8017e38 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8017e58:	d00f      	beq.n	8017e7a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017e5a:	1e5e      	subs	r6, r3, #1
 8017e5c:	fb0c 0e06 	mla	lr, ip, r6, r0
 8017e60:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8017e64:	d543      	bpl.n	8017eee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8017e66:	4698      	mov	r8, r3
 8017e68:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8017e6c:	f1b8 0f00 	cmp.w	r8, #0
 8017e70:	dc71      	bgt.n	8017f56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8017e72:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017e76:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017e7a:	9b01      	ldr	r3, [sp, #4]
 8017e7c:	2b00      	cmp	r3, #0
 8017e7e:	f340 809d 	ble.w	8017fbc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8017e82:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017e86:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017e88:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017e8c:	eeb0 6a62 	vmov.f32	s12, s5
 8017e90:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017e94:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017e98:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017e9c:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8017ea0:	eeb0 6a43 	vmov.f32	s12, s6
 8017ea4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017ea8:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8017eac:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017eb0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017eb4:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017eb8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017ebc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017ec0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017ec4:	ee12 2a90 	vmov	r2, s5
 8017ec8:	eef0 2a47 	vmov.f32	s5, s14
 8017ecc:	fb92 fcf3 	sdiv	ip, r2, r3
 8017ed0:	ee13 2a10 	vmov	r2, s6
 8017ed4:	eeb0 3a67 	vmov.f32	s6, s15
 8017ed8:	fb92 f3f3 	sdiv	r3, r2, r3
 8017edc:	9312      	str	r3, [sp, #72]	@ 0x48
 8017ede:	9b01      	ldr	r3, [sp, #4]
 8017ee0:	9a03      	ldr	r2, [sp, #12]
 8017ee2:	3b01      	subs	r3, #1
 8017ee4:	9301      	str	r3, [sp, #4]
 8017ee6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017ee8:	bf08      	it	eq
 8017eea:	4613      	moveq	r3, r2
 8017eec:	e793      	b.n	8017e16 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8017eee:	45ce      	cmp	lr, r9
 8017ef0:	dab9      	bge.n	8017e66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8017ef2:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8017ef4:	fb01 2606 	mla	r6, r1, r6, r2
 8017ef8:	1436      	asrs	r6, r6, #16
 8017efa:	d4b4      	bmi.n	8017e66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8017efc:	4546      	cmp	r6, r8
 8017efe:	dab2      	bge.n	8017e66 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8017f00:	4698      	mov	r8, r3
 8017f02:	46a2      	mov	sl, r4
 8017f04:	f1b8 0f00 	cmp.w	r8, #0
 8017f08:	ddb3      	ble.n	8017e72 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8017f0a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8017f0e:	1416      	asrs	r6, r2, #16
 8017f10:	9902      	ldr	r1, [sp, #8]
 8017f12:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8017f16:	f108 38ff 	add.w	r8, r8, #4294967295
 8017f1a:	4460      	add	r0, ip
 8017f1c:	fb09 1606 	mla	r6, r9, r6, r1
 8017f20:	4928      	ldr	r1, [pc, #160]	@ (8017fc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8017f22:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8017f26:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8017f2a:	eb07 0b0e 	add.w	fp, r7, lr
 8017f2e:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8017f32:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8017f36:	00f6      	lsls	r6, r6, #3
 8017f38:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8017f3c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8017f3e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8017f42:	440a      	add	r2, r1
 8017f44:	ea49 0606 	orr.w	r6, r9, r6
 8017f48:	f817 900e 	ldrb.w	r9, [r7, lr]
 8017f4c:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8017f50:	f82a 6b02 	strh.w	r6, [sl], #2
 8017f54:	e7d6      	b.n	8017f04 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8017f56:	ea5f 4920 	movs.w	r9, r0, asr #16
 8017f5a:	d429      	bmi.n	8017fb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8017f5c:	68ae      	ldr	r6, [r5, #8]
 8017f5e:	454e      	cmp	r6, r9
 8017f60:	dd26      	ble.n	8017fb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8017f62:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8017f66:	d423      	bmi.n	8017fb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8017f68:	68e9      	ldr	r1, [r5, #12]
 8017f6a:	4559      	cmp	r1, fp
 8017f6c:	dd20      	ble.n	8017fb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8017f6e:	fa0f fe86 	sxth.w	lr, r6
 8017f72:	9902      	ldr	r1, [sp, #8]
 8017f74:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8017f78:	f06f 0101 	mvn.w	r1, #1
 8017f7c:	f81e e009 	ldrb.w	lr, [lr, r9]
 8017f80:	fb01 f908 	mul.w	r9, r1, r8
 8017f84:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 8017f88:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8017f8c:	eb07 060e 	add.w	r6, r7, lr
 8017f90:	f896 b002 	ldrb.w	fp, [r6, #2]
 8017f94:	7876      	ldrb	r6, [r6, #1]
 8017f96:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8017f9a:	00f6      	lsls	r6, r6, #3
 8017f9c:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8017fa0:	ea4b 0606 	orr.w	r6, fp, r6
 8017fa4:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8017fa8:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8017fac:	f82a 6009 	strh.w	r6, [sl, r9]
 8017fb0:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8017fb2:	4460      	add	r0, ip
 8017fb4:	f108 38ff 	add.w	r8, r8, #4294967295
 8017fb8:	440a      	add	r2, r1
 8017fba:	e757      	b.n	8017e6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8017fbc:	b005      	add	sp, #20
 8017fbe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017fc2:	bf00      	nop
 8017fc4:	fffff800 	.word	0xfffff800

08017fc8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017fc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017fcc:	b087      	sub	sp, #28
 8017fce:	468b      	mov	fp, r1
 8017fd0:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8017fd4:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8017fd6:	9204      	str	r2, [sp, #16]
 8017fd8:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8017fdc:	6841      	ldr	r1, [r0, #4]
 8017fde:	9205      	str	r2, [sp, #20]
 8017fe0:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8017fe4:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8017fe8:	fb01 2404 	mla	r4, r1, r4, r2
 8017fec:	6802      	ldr	r2, [r0, #0]
 8017fee:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017ff2:	f8dc 2000 	ldr.w	r2, [ip]
 8017ff6:	9201      	str	r2, [sp, #4]
 8017ff8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8017ffc:	3204      	adds	r2, #4
 8017ffe:	9202      	str	r2, [sp, #8]
 8018000:	f1bb 0f00 	cmp.w	fp, #0
 8018004:	dc03      	bgt.n	801800e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8018006:	9a04      	ldr	r2, [sp, #16]
 8018008:	2a00      	cmp	r2, #0
 801800a:	f340 8138 	ble.w	801827e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801800e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8018010:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8018014:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8018018:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801801a:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801801e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8018022:	2b00      	cmp	r3, #0
 8018024:	dd0e      	ble.n	8018044 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018026:	1402      	asrs	r2, r0, #16
 8018028:	d405      	bmi.n	8018036 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801802a:	42ba      	cmp	r2, r7
 801802c:	da03      	bge.n	8018036 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801802e:	140a      	asrs	r2, r1, #16
 8018030:	d401      	bmi.n	8018036 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018032:	42b2      	cmp	r2, r6
 8018034:	db07      	blt.n	8018046 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018036:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8018038:	3b01      	subs	r3, #1
 801803a:	3402      	adds	r4, #2
 801803c:	4410      	add	r0, r2
 801803e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8018040:	4411      	add	r1, r2
 8018042:	e7ee      	b.n	8018022 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8018044:	d019      	beq.n	801807a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8018046:	1e5a      	subs	r2, r3, #1
 8018048:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801804a:	fb05 0502 	mla	r5, r5, r2, r0
 801804e:	142d      	asrs	r5, r5, #16
 8018050:	d409      	bmi.n	8018066 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018052:	42bd      	cmp	r5, r7
 8018054:	da07      	bge.n	8018066 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018056:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8018058:	fb05 1202 	mla	r2, r5, r2, r1
 801805c:	1412      	asrs	r2, r2, #16
 801805e:	d402      	bmi.n	8018066 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018060:	42b2      	cmp	r2, r6
 8018062:	f2c0 80ac 	blt.w	80181be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8018066:	f04f 0e00 	mov.w	lr, #0
 801806a:	eb03 020e 	add.w	r2, r3, lr
 801806e:	2a00      	cmp	r2, #0
 8018070:	dc3e      	bgt.n	80180f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8018072:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018076:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801807a:	f1bb 0f00 	cmp.w	fp, #0
 801807e:	f340 80fe 	ble.w	801827e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8018082:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018086:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018088:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801808c:	f1bb 0b01 	subs.w	fp, fp, #1
 8018090:	eeb0 6a62 	vmov.f32	s12, s5
 8018094:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018098:	ee31 1a05 	vadd.f32	s2, s2, s10
 801809c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80180a0:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80180a4:	eeb0 6a43 	vmov.f32	s12, s6
 80180a8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80180ac:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80180b0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80180b4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80180b8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80180bc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80180c0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80180c4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80180c8:	ee12 2a90 	vmov	r2, s5
 80180cc:	eef0 2a47 	vmov.f32	s5, s14
 80180d0:	fb92 f3f3 	sdiv	r3, r2, r3
 80180d4:	ee13 2a10 	vmov	r2, s6
 80180d8:	9313      	str	r3, [sp, #76]	@ 0x4c
 80180da:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80180dc:	eeb0 3a67 	vmov.f32	s6, s15
 80180e0:	fb92 f3f3 	sdiv	r3, r2, r3
 80180e4:	9a04      	ldr	r2, [sp, #16]
 80180e6:	9314      	str	r3, [sp, #80]	@ 0x50
 80180e8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80180ea:	bf08      	it	eq
 80180ec:	4613      	moveq	r3, r2
 80180ee:	e787      	b.n	8018000 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80180f0:	1406      	asrs	r6, r0, #16
 80180f2:	d45d      	bmi.n	80181b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80180f4:	f8dc 5008 	ldr.w	r5, [ip, #8]
 80180f8:	42b5      	cmp	r5, r6
 80180fa:	dd59      	ble.n	80181b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80180fc:	140f      	asrs	r7, r1, #16
 80180fe:	d457      	bmi.n	80181b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018100:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8018104:	42ba      	cmp	r2, r7
 8018106:	dd53      	ble.n	80181b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018108:	9a01      	ldr	r2, [sp, #4]
 801810a:	b22d      	sxth	r5, r5
 801810c:	fb07 2505 	mla	r5, r7, r5, r2
 8018110:	5daa      	ldrb	r2, [r5, r6]
 8018112:	9d02      	ldr	r5, [sp, #8]
 8018114:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8018118:	0e2e      	lsrs	r6, r5, #24
 801811a:	d049      	beq.n	80181b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801811c:	f06f 0201 	mvn.w	r2, #1
 8018120:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8018124:	fb02 f20e 	mul.w	r2, r2, lr
 8018128:	f834 8002 	ldrh.w	r8, [r4, r2]
 801812c:	9203      	str	r2, [sp, #12]
 801812e:	9a05      	ldr	r2, [sp, #20]
 8018130:	ea4f 2728 	mov.w	r7, r8, asr #8
 8018134:	4356      	muls	r6, r2
 8018136:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801813a:	1c72      	adds	r2, r6, #1
 801813c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8018140:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8018144:	b2ed      	uxtb	r5, r5
 8018146:	1212      	asrs	r2, r2, #8
 8018148:	fa1f f982 	uxth.w	r9, r2
 801814c:	43d2      	mvns	r2, r2
 801814e:	fb16 f609 	smulbb	r6, r6, r9
 8018152:	b2d2      	uxtb	r2, r2
 8018154:	fb15 f509 	smulbb	r5, r5, r9
 8018158:	fb07 6702 	mla	r7, r7, r2, r6
 801815c:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8018160:	fb1a fa09 	smulbb	sl, sl, r9
 8018164:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8018168:	b2bf      	uxth	r7, r7
 801816a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801816e:	fa5f f888 	uxtb.w	r8, r8
 8018172:	fb06 a602 	mla	r6, r6, r2, sl
 8018176:	fb08 5502 	mla	r5, r8, r2, r5
 801817a:	1c7a      	adds	r2, r7, #1
 801817c:	b2b6      	uxth	r6, r6
 801817e:	b2ad      	uxth	r5, r5
 8018180:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8018184:	9a03      	ldr	r2, [sp, #12]
 8018186:	f105 0a01 	add.w	sl, r5, #1
 801818a:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801818e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018192:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018196:	ea4a 0707 	orr.w	r7, sl, r7
 801819a:	f106 0a01 	add.w	sl, r6, #1
 801819e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80181a2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80181a6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80181aa:	ea47 070a 	orr.w	r7, r7, sl
 80181ae:	52a7      	strh	r7, [r4, r2]
 80181b0:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80181b2:	f10e 3eff 	add.w	lr, lr, #4294967295
 80181b6:	4410      	add	r0, r2
 80181b8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80181ba:	4411      	add	r1, r2
 80181bc:	e755      	b.n	801806a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80181be:	f04f 0800 	mov.w	r8, #0
 80181c2:	eba3 0208 	sub.w	r2, r3, r8
 80181c6:	2a00      	cmp	r2, #0
 80181c8:	f77f af53 	ble.w	8018072 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80181cc:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 80181d0:	140a      	asrs	r2, r1, #16
 80181d2:	9f01      	ldr	r7, [sp, #4]
 80181d4:	1405      	asrs	r5, r0, #16
 80181d6:	fb06 7202 	mla	r2, r6, r2, r7
 80181da:	5d52      	ldrb	r2, [r2, r5]
 80181dc:	9d02      	ldr	r5, [sp, #8]
 80181de:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80181e2:	0e2e      	lsrs	r6, r5, #24
 80181e4:	d044      	beq.n	8018270 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 80181e6:	9a05      	ldr	r2, [sp, #20]
 80181e8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80181ec:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80181f0:	4356      	muls	r6, r2
 80181f2:	ea4f 272e 	mov.w	r7, lr, asr #8
 80181f6:	1c72      	adds	r2, r6, #1
 80181f8:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80181fc:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8018200:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8018204:	b2ed      	uxtb	r5, r5
 8018206:	1212      	asrs	r2, r2, #8
 8018208:	fa1f f982 	uxth.w	r9, r2
 801820c:	43d2      	mvns	r2, r2
 801820e:	fb16 f609 	smulbb	r6, r6, r9
 8018212:	b2d2      	uxtb	r2, r2
 8018214:	fb15 f509 	smulbb	r5, r5, r9
 8018218:	fb07 6702 	mla	r7, r7, r2, r6
 801821c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8018220:	fb1a fa09 	smulbb	sl, sl, r9
 8018224:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018228:	b2bf      	uxth	r7, r7
 801822a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801822e:	fa5f fe8e 	uxtb.w	lr, lr
 8018232:	fb06 a602 	mla	r6, r6, r2, sl
 8018236:	fb0e 5502 	mla	r5, lr, r2, r5
 801823a:	1c7a      	adds	r2, r7, #1
 801823c:	b2b6      	uxth	r6, r6
 801823e:	b2ad      	uxth	r5, r5
 8018240:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8018244:	f105 0a01 	add.w	sl, r5, #1
 8018248:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801824c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018250:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018254:	ea4a 0707 	orr.w	r7, sl, r7
 8018258:	f106 0a01 	add.w	sl, r6, #1
 801825c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018260:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018264:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8018268:	ea47 070a 	orr.w	r7, r7, sl
 801826c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8018270:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8018272:	f108 0801 	add.w	r8, r8, #1
 8018276:	4410      	add	r0, r2
 8018278:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801827a:	4411      	add	r1, r2
 801827c:	e7a1      	b.n	80181c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801827e:	b007      	add	sp, #28
 8018280:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018284 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018284:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018288:	b085      	sub	sp, #20
 801828a:	468b      	mov	fp, r1
 801828c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8018290:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8018292:	9203      	str	r2, [sp, #12]
 8018294:	6841      	ldr	r1, [r0, #4]
 8018296:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 801829a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 801829e:	fb01 2404 	mla	r4, r1, r4, r2
 80182a2:	6802      	ldr	r2, [r0, #0]
 80182a4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80182a8:	f8de 2000 	ldr.w	r2, [lr]
 80182ac:	9200      	str	r2, [sp, #0]
 80182ae:	f8de 2004 	ldr.w	r2, [lr, #4]
 80182b2:	3204      	adds	r2, #4
 80182b4:	9201      	str	r2, [sp, #4]
 80182b6:	f1bb 0f00 	cmp.w	fp, #0
 80182ba:	dc03      	bgt.n	80182c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80182bc:	9a03      	ldr	r2, [sp, #12]
 80182be:	2a00      	cmp	r2, #0
 80182c0:	f340 8153 	ble.w	801856a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80182c4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80182c6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80182ca:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80182ce:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80182d0:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80182d4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80182d8:	2b00      	cmp	r3, #0
 80182da:	dd0e      	ble.n	80182fa <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80182dc:	1408      	asrs	r0, r1, #16
 80182de:	d405      	bmi.n	80182ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80182e0:	42b8      	cmp	r0, r7
 80182e2:	da03      	bge.n	80182ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80182e4:	1410      	asrs	r0, r2, #16
 80182e6:	d401      	bmi.n	80182ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80182e8:	42b0      	cmp	r0, r6
 80182ea:	db07      	blt.n	80182fc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80182ec:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80182ee:	3b01      	subs	r3, #1
 80182f0:	3402      	adds	r4, #2
 80182f2:	4401      	add	r1, r0
 80182f4:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80182f6:	4402      	add	r2, r0
 80182f8:	e7ee      	b.n	80182d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80182fa:	d017      	beq.n	801832c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80182fc:	1e58      	subs	r0, r3, #1
 80182fe:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8018300:	fb05 1500 	mla	r5, r5, r0, r1
 8018304:	142d      	asrs	r5, r5, #16
 8018306:	d409      	bmi.n	801831c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018308:	42bd      	cmp	r5, r7
 801830a:	da07      	bge.n	801831c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801830c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801830e:	fb05 2000 	mla	r0, r5, r0, r2
 8018312:	1400      	asrs	r0, r0, #16
 8018314:	d402      	bmi.n	801831c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018316:	42b0      	cmp	r0, r6
 8018318:	f2c0 80bc 	blt.w	8018494 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 801831c:	2600      	movs	r6, #0
 801831e:	1998      	adds	r0, r3, r6
 8018320:	2800      	cmp	r0, #0
 8018322:	dc3e      	bgt.n	80183a2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8018324:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018328:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801832c:	f1bb 0f00 	cmp.w	fp, #0
 8018330:	f340 811b 	ble.w	801856a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8018334:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018338:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801833a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801833e:	f1bb 0b01 	subs.w	fp, fp, #1
 8018342:	eeb0 6a62 	vmov.f32	s12, s5
 8018346:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801834a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801834e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018352:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8018356:	eeb0 6a43 	vmov.f32	s12, s6
 801835a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801835e:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8018362:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018366:	ee61 7a27 	vmul.f32	s15, s2, s15
 801836a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801836e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018372:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018376:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801837a:	ee12 2a90 	vmov	r2, s5
 801837e:	eef0 2a47 	vmov.f32	s5, s14
 8018382:	fb92 f3f3 	sdiv	r3, r2, r3
 8018386:	ee13 2a10 	vmov	r2, s6
 801838a:	9311      	str	r3, [sp, #68]	@ 0x44
 801838c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801838e:	eeb0 3a67 	vmov.f32	s6, s15
 8018392:	fb92 f3f3 	sdiv	r3, r2, r3
 8018396:	9a03      	ldr	r2, [sp, #12]
 8018398:	9312      	str	r3, [sp, #72]	@ 0x48
 801839a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801839c:	bf08      	it	eq
 801839e:	4613      	moveq	r3, r2
 80183a0:	e789      	b.n	80182b6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80183a2:	140f      	asrs	r7, r1, #16
 80183a4:	d426      	bmi.n	80183f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80183a6:	f8de 5008 	ldr.w	r5, [lr, #8]
 80183aa:	42bd      	cmp	r5, r7
 80183ac:	dd22      	ble.n	80183f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80183ae:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80183b2:	d41f      	bmi.n	80183f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80183b4:	f8de 000c 	ldr.w	r0, [lr, #12]
 80183b8:	4560      	cmp	r0, ip
 80183ba:	dd1b      	ble.n	80183f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80183bc:	9800      	ldr	r0, [sp, #0]
 80183be:	b22d      	sxth	r5, r5
 80183c0:	fb0c 0505 	mla	r5, ip, r5, r0
 80183c4:	5de8      	ldrb	r0, [r5, r7]
 80183c6:	9d01      	ldr	r5, [sp, #4]
 80183c8:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 80183cc:	0e07      	lsrs	r7, r0, #24
 80183ce:	2fff      	cmp	r7, #255	@ 0xff
 80183d0:	d116      	bne.n	8018400 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80183d2:	f06f 0501 	mvn.w	r5, #1
 80183d6:	fb05 f706 	mul.w	r7, r5, r6
 80183da:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 80183de:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80183e2:	0945      	lsrs	r5, r0, #5
 80183e4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80183e8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80183ec:	ea4c 0505 	orr.w	r5, ip, r5
 80183f0:	4305      	orrs	r5, r0
 80183f2:	53e5      	strh	r5, [r4, r7]
 80183f4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80183f6:	3e01      	subs	r6, #1
 80183f8:	4401      	add	r1, r0
 80183fa:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80183fc:	4402      	add	r2, r0
 80183fe:	e78e      	b.n	801831e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8018400:	b2fd      	uxtb	r5, r7
 8018402:	2f00      	cmp	r7, #0
 8018404:	d0f6      	beq.n	80183f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8018406:	f06f 0701 	mvn.w	r7, #1
 801840a:	fa1f f985 	uxth.w	r9, r5
 801840e:	43ed      	mvns	r5, r5
 8018410:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8018414:	4377      	muls	r7, r6
 8018416:	fb1a fa09 	smulbb	sl, sl, r9
 801841a:	b2ed      	uxtb	r5, r5
 801841c:	f834 8007 	ldrh.w	r8, [r4, r7]
 8018420:	9702      	str	r7, [sp, #8]
 8018422:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8018426:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801842a:	fb17 f709 	smulbb	r7, r7, r9
 801842e:	b2c0      	uxtb	r0, r0
 8018430:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8018434:	fb10 f009 	smulbb	r0, r0, r9
 8018438:	fb0c 7c05 	mla	ip, ip, r5, r7
 801843c:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8018440:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8018444:	fa1f fc8c 	uxth.w	ip, ip
 8018448:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801844c:	fa5f f888 	uxtb.w	r8, r8
 8018450:	fb07 a705 	mla	r7, r7, r5, sl
 8018454:	fb08 0005 	mla	r0, r8, r5, r0
 8018458:	f10c 0501 	add.w	r5, ip, #1
 801845c:	b2bf      	uxth	r7, r7
 801845e:	b280      	uxth	r0, r0
 8018460:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018464:	f100 0a01 	add.w	sl, r0, #1
 8018468:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801846c:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8018470:	9802      	ldr	r0, [sp, #8]
 8018472:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018476:	ea4a 0c0c 	orr.w	ip, sl, ip
 801847a:	f107 0a01 	add.w	sl, r7, #1
 801847e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8018482:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018486:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801848a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801848e:	f824 c000 	strh.w	ip, [r4, r0]
 8018492:	e7af      	b.n	80183f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8018494:	f04f 0800 	mov.w	r8, #0
 8018498:	eba3 0008 	sub.w	r0, r3, r8
 801849c:	2800      	cmp	r0, #0
 801849e:	f77f af41 	ble.w	8018324 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80184a2:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80184a6:	1410      	asrs	r0, r2, #16
 80184a8:	9f00      	ldr	r7, [sp, #0]
 80184aa:	140d      	asrs	r5, r1, #16
 80184ac:	fb06 7000 	mla	r0, r6, r0, r7
 80184b0:	5d40      	ldrb	r0, [r0, r5]
 80184b2:	9d01      	ldr	r5, [sp, #4]
 80184b4:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80184b8:	0e2e      	lsrs	r6, r5, #24
 80184ba:	2eff      	cmp	r6, #255	@ 0xff
 80184bc:	d112      	bne.n	80184e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 80184be:	482c      	ldr	r0, [pc, #176]	@ (8018570 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 80184c0:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80184c4:	0968      	lsrs	r0, r5, #5
 80184c6:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80184ca:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80184ce:	4330      	orrs	r0, r6
 80184d0:	4328      	orrs	r0, r5
 80184d2:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 80184d6:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80184d8:	f108 0801 	add.w	r8, r8, #1
 80184dc:	4401      	add	r1, r0
 80184de:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80184e0:	4402      	add	r2, r0
 80184e2:	e7d9      	b.n	8018498 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80184e4:	b2f0      	uxtb	r0, r6
 80184e6:	2e00      	cmp	r6, #0
 80184e8:	d0f5      	beq.n	80184d6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80184ea:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 80184ee:	fa1f f980 	uxth.w	r9, r0
 80184f2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80184f6:	43c0      	mvns	r0, r0
 80184f8:	ea4f 272c 	mov.w	r7, ip, asr #8
 80184fc:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8018500:	fb16 f609 	smulbb	r6, r6, r9
 8018504:	b2c0      	uxtb	r0, r0
 8018506:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801850a:	b2ed      	uxtb	r5, r5
 801850c:	fb1a fa09 	smulbb	sl, sl, r9
 8018510:	fb07 6700 	mla	r7, r7, r0, r6
 8018514:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8018518:	fb15 f509 	smulbb	r5, r5, r9
 801851c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018520:	b2bf      	uxth	r7, r7
 8018522:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018526:	fa5f fc8c 	uxtb.w	ip, ip
 801852a:	fb06 a600 	mla	r6, r6, r0, sl
 801852e:	fb0c 5500 	mla	r5, ip, r0, r5
 8018532:	1c78      	adds	r0, r7, #1
 8018534:	b2b6      	uxth	r6, r6
 8018536:	b2ad      	uxth	r5, r5
 8018538:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801853c:	f105 0a01 	add.w	sl, r5, #1
 8018540:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8018544:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018548:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801854c:	ea4a 0707 	orr.w	r7, sl, r7
 8018550:	f106 0a01 	add.w	sl, r6, #1
 8018554:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018558:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801855c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8018560:	ea47 070a 	orr.w	r7, r7, sl
 8018564:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8018568:	e7b5      	b.n	80184d6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801856a:	b005      	add	sp, #20
 801856c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018570:	fffff800 	.word	0xfffff800

08018574 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018574:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018578:	b087      	sub	sp, #28
 801857a:	468b      	mov	fp, r1
 801857c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8018580:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8018582:	9204      	str	r2, [sp, #16]
 8018584:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8018588:	6861      	ldr	r1, [r4, #4]
 801858a:	9205      	str	r2, [sp, #20]
 801858c:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8018590:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8018594:	fb01 2000 	mla	r0, r1, r0, r2
 8018598:	6822      	ldr	r2, [r4, #0]
 801859a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801859e:	f8de 2000 	ldr.w	r2, [lr]
 80185a2:	9201      	str	r2, [sp, #4]
 80185a4:	f8de 2004 	ldr.w	r2, [lr, #4]
 80185a8:	9202      	str	r2, [sp, #8]
 80185aa:	f1bb 0f00 	cmp.w	fp, #0
 80185ae:	dc03      	bgt.n	80185b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 80185b0:	9a04      	ldr	r2, [sp, #16]
 80185b2:	2a00      	cmp	r2, #0
 80185b4:	f340 8142 	ble.w	801883c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80185b8:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80185ba:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80185be:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80185c2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80185c4:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 80185c8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80185cc:	2b00      	cmp	r3, #0
 80185ce:	dd0e      	ble.n	80185ee <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80185d0:	140c      	asrs	r4, r1, #16
 80185d2:	d405      	bmi.n	80185e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80185d4:	42bc      	cmp	r4, r7
 80185d6:	da03      	bge.n	80185e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80185d8:	1414      	asrs	r4, r2, #16
 80185da:	d401      	bmi.n	80185e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80185dc:	42b4      	cmp	r4, r6
 80185de:	db07      	blt.n	80185f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80185e0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80185e2:	3b01      	subs	r3, #1
 80185e4:	3002      	adds	r0, #2
 80185e6:	4421      	add	r1, r4
 80185e8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80185ea:	4422      	add	r2, r4
 80185ec:	e7ee      	b.n	80185cc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80185ee:	d019      	beq.n	8018624 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80185f0:	1e5c      	subs	r4, r3, #1
 80185f2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80185f4:	fb05 1504 	mla	r5, r5, r4, r1
 80185f8:	142d      	asrs	r5, r5, #16
 80185fa:	d409      	bmi.n	8018610 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 80185fc:	42bd      	cmp	r5, r7
 80185fe:	da07      	bge.n	8018610 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8018600:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8018602:	fb05 2404 	mla	r4, r5, r4, r2
 8018606:	1424      	asrs	r4, r4, #16
 8018608:	d402      	bmi.n	8018610 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801860a:	42b4      	cmp	r4, r6
 801860c:	f2c0 80b1 	blt.w	8018772 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8018610:	f04f 0800 	mov.w	r8, #0
 8018614:	eb03 0408 	add.w	r4, r3, r8
 8018618:	2c00      	cmp	r4, #0
 801861a:	dc3e      	bgt.n	801869a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801861c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018620:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018624:	f1bb 0f00 	cmp.w	fp, #0
 8018628:	f340 8108 	ble.w	801883c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801862c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018630:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018632:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018636:	f1bb 0b01 	subs.w	fp, fp, #1
 801863a:	eeb0 6a62 	vmov.f32	s12, s5
 801863e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018642:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018646:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801864a:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801864e:	eeb0 6a43 	vmov.f32	s12, s6
 8018652:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018656:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801865a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801865e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018662:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018666:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801866a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801866e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018672:	ee12 2a90 	vmov	r2, s5
 8018676:	eef0 2a47 	vmov.f32	s5, s14
 801867a:	fb92 f3f3 	sdiv	r3, r2, r3
 801867e:	ee13 2a10 	vmov	r2, s6
 8018682:	9313      	str	r3, [sp, #76]	@ 0x4c
 8018684:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018686:	eeb0 3a67 	vmov.f32	s6, s15
 801868a:	fb92 f3f3 	sdiv	r3, r2, r3
 801868e:	9a04      	ldr	r2, [sp, #16]
 8018690:	9314      	str	r3, [sp, #80]	@ 0x50
 8018692:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018694:	bf08      	it	eq
 8018696:	4613      	moveq	r3, r2
 8018698:	e787      	b.n	80185aa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 801869a:	140e      	asrs	r6, r1, #16
 801869c:	d462      	bmi.n	8018764 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801869e:	f8de 5008 	ldr.w	r5, [lr, #8]
 80186a2:	42b5      	cmp	r5, r6
 80186a4:	dd5e      	ble.n	8018764 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80186a6:	1417      	asrs	r7, r2, #16
 80186a8:	d45c      	bmi.n	8018764 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80186aa:	f8de 400c 	ldr.w	r4, [lr, #12]
 80186ae:	42bc      	cmp	r4, r7
 80186b0:	dd58      	ble.n	8018764 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80186b2:	b22d      	sxth	r5, r5
 80186b4:	9c02      	ldr	r4, [sp, #8]
 80186b6:	fb07 6505 	mla	r5, r7, r5, r6
 80186ba:	5d66      	ldrb	r6, [r4, r5]
 80186bc:	2e00      	cmp	r6, #0
 80186be:	d051      	beq.n	8018764 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80186c0:	9c01      	ldr	r4, [sp, #4]
 80186c2:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 80186c6:	f06f 0401 	mvn.w	r4, #1
 80186ca:	fb04 f408 	mul.w	r4, r4, r8
 80186ce:	ea4f 2c29 	mov.w	ip, r9, asr #8
 80186d2:	5b05      	ldrh	r5, [r0, r4]
 80186d4:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80186d8:	9403      	str	r4, [sp, #12]
 80186da:	9c05      	ldr	r4, [sp, #20]
 80186dc:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80186e0:	4366      	muls	r6, r4
 80186e2:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80186e6:	1c74      	adds	r4, r6, #1
 80186e8:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80186ec:	122e      	asrs	r6, r5, #8
 80186ee:	1224      	asrs	r4, r4, #8
 80186f0:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80186f4:	00ed      	lsls	r5, r5, #3
 80186f6:	b2a7      	uxth	r7, r4
 80186f8:	43e4      	mvns	r4, r4
 80186fa:	b2ed      	uxtb	r5, r5
 80186fc:	b2e4      	uxtb	r4, r4
 80186fe:	fb16 f604 	smulbb	r6, r6, r4
 8018702:	fb15 f504 	smulbb	r5, r5, r4
 8018706:	fb0c 6c07 	mla	ip, ip, r7, r6
 801870a:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801870e:	fb1a fa04 	smulbb	sl, sl, r4
 8018712:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8018716:	fa1f fc8c 	uxth.w	ip, ip
 801871a:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801871e:	fa5f f989 	uxtb.w	r9, r9
 8018722:	fb06 a607 	mla	r6, r6, r7, sl
 8018726:	f10c 0401 	add.w	r4, ip, #1
 801872a:	fb09 5507 	mla	r5, r9, r7, r5
 801872e:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8018732:	9c03      	ldr	r4, [sp, #12]
 8018734:	b2ad      	uxth	r5, r5
 8018736:	b2b6      	uxth	r6, r6
 8018738:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801873c:	f105 0a01 	add.w	sl, r5, #1
 8018740:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018744:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018748:	ea4a 0c0c 	orr.w	ip, sl, ip
 801874c:	f106 0a01 	add.w	sl, r6, #1
 8018750:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018754:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018758:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801875c:	ea4c 0c0a 	orr.w	ip, ip, sl
 8018760:	f820 c004 	strh.w	ip, [r0, r4]
 8018764:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8018766:	f108 38ff 	add.w	r8, r8, #4294967295
 801876a:	4421      	add	r1, r4
 801876c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801876e:	4422      	add	r2, r4
 8018770:	e750      	b.n	8018614 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018772:	f04f 0900 	mov.w	r9, #0
 8018776:	eba3 0409 	sub.w	r4, r3, r9
 801877a:	2c00      	cmp	r4, #0
 801877c:	f77f af4e 	ble.w	801861c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8018780:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8018784:	140d      	asrs	r5, r1, #16
 8018786:	1414      	asrs	r4, r2, #16
 8018788:	fb06 5404 	mla	r4, r6, r4, r5
 801878c:	9d02      	ldr	r5, [sp, #8]
 801878e:	5d2e      	ldrb	r6, [r5, r4]
 8018790:	2e00      	cmp	r6, #0
 8018792:	d04c      	beq.n	801882e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8018794:	9d01      	ldr	r5, [sp, #4]
 8018796:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 801879a:	9c05      	ldr	r4, [sp, #20]
 801879c:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80187a0:	ea4f 2c28 	mov.w	ip, r8, asr #8
 80187a4:	4366      	muls	r6, r4
 80187a6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80187aa:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80187ae:	1c74      	adds	r4, r6, #1
 80187b0:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80187b4:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80187b8:	122e      	asrs	r6, r5, #8
 80187ba:	1224      	asrs	r4, r4, #8
 80187bc:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 80187c0:	00ed      	lsls	r5, r5, #3
 80187c2:	b2a7      	uxth	r7, r4
 80187c4:	43e4      	mvns	r4, r4
 80187c6:	b2ed      	uxtb	r5, r5
 80187c8:	b2e4      	uxtb	r4, r4
 80187ca:	fb16 f604 	smulbb	r6, r6, r4
 80187ce:	fb15 f504 	smulbb	r5, r5, r4
 80187d2:	fb0c 6c07 	mla	ip, ip, r7, r6
 80187d6:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80187da:	fb1a fa04 	smulbb	sl, sl, r4
 80187de:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80187e2:	fa1f fc8c 	uxth.w	ip, ip
 80187e6:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80187ea:	fa5f f888 	uxtb.w	r8, r8
 80187ee:	fb06 a607 	mla	r6, r6, r7, sl
 80187f2:	f10c 0401 	add.w	r4, ip, #1
 80187f6:	fb08 5507 	mla	r5, r8, r7, r5
 80187fa:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80187fe:	b2ad      	uxth	r5, r5
 8018800:	b2b6      	uxth	r6, r6
 8018802:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8018806:	f105 0a01 	add.w	sl, r5, #1
 801880a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801880e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018812:	ea4a 0c0c 	orr.w	ip, sl, ip
 8018816:	f106 0a01 	add.w	sl, r6, #1
 801881a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801881e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018822:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8018826:	ea4c 0c0a 	orr.w	ip, ip, sl
 801882a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801882e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8018830:	f109 0901 	add.w	r9, r9, #1
 8018834:	4421      	add	r1, r4
 8018836:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8018838:	4422      	add	r2, r4
 801883a:	e79c      	b.n	8018776 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 801883c:	b007      	add	sp, #28
 801883e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018842 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018842:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018846:	b085      	sub	sp, #20
 8018848:	468b      	mov	fp, r1
 801884a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801884e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8018850:	9203      	str	r2, [sp, #12]
 8018852:	6861      	ldr	r1, [r4, #4]
 8018854:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8018858:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 801885c:	fb01 2000 	mla	r0, r1, r0, r2
 8018860:	6822      	ldr	r2, [r4, #0]
 8018862:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8018866:	f8d8 2000 	ldr.w	r2, [r8]
 801886a:	9200      	str	r2, [sp, #0]
 801886c:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8018870:	9201      	str	r2, [sp, #4]
 8018872:	f1bb 0f00 	cmp.w	fp, #0
 8018876:	dc03      	bgt.n	8018880 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018878:	9a03      	ldr	r2, [sp, #12]
 801887a:	2a00      	cmp	r2, #0
 801887c:	f340 8146 	ble.w	8018b0c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8018880:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8018882:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8018886:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801888a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801888c:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8018890:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8018894:	2b00      	cmp	r3, #0
 8018896:	dd0e      	ble.n	80188b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8018898:	140c      	asrs	r4, r1, #16
 801889a:	d405      	bmi.n	80188a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801889c:	42bc      	cmp	r4, r7
 801889e:	da03      	bge.n	80188a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80188a0:	1414      	asrs	r4, r2, #16
 80188a2:	d401      	bmi.n	80188a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80188a4:	42b4      	cmp	r4, r6
 80188a6:	db07      	blt.n	80188b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80188a8:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80188aa:	3b01      	subs	r3, #1
 80188ac:	3002      	adds	r0, #2
 80188ae:	4421      	add	r1, r4
 80188b0:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80188b2:	4422      	add	r2, r4
 80188b4:	e7ee      	b.n	8018894 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80188b6:	d017      	beq.n	80188e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80188b8:	1e5c      	subs	r4, r3, #1
 80188ba:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80188bc:	fb05 1504 	mla	r5, r5, r4, r1
 80188c0:	142d      	asrs	r5, r5, #16
 80188c2:	d409      	bmi.n	80188d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80188c4:	42bd      	cmp	r5, r7
 80188c6:	da07      	bge.n	80188d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80188c8:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80188ca:	fb05 2404 	mla	r4, r5, r4, r2
 80188ce:	1424      	asrs	r4, r4, #16
 80188d0:	d402      	bmi.n	80188d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80188d2:	42b4      	cmp	r4, r6
 80188d4:	f2c0 80b3 	blt.w	8018a3e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80188d8:	2600      	movs	r6, #0
 80188da:	199c      	adds	r4, r3, r6
 80188dc:	2c00      	cmp	r4, #0
 80188de:	dc3e      	bgt.n	801895e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80188e0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80188e4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80188e8:	f1bb 0f00 	cmp.w	fp, #0
 80188ec:	f340 810e 	ble.w	8018b0c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80188f0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80188f4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80188f6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80188fa:	f1bb 0b01 	subs.w	fp, fp, #1
 80188fe:	eeb0 6a62 	vmov.f32	s12, s5
 8018902:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018906:	ee31 1a05 	vadd.f32	s2, s2, s10
 801890a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801890e:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8018912:	eeb0 6a43 	vmov.f32	s12, s6
 8018916:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801891a:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801891e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018922:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018926:	ee77 2a62 	vsub.f32	s5, s14, s5
 801892a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801892e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018932:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018936:	ee12 2a90 	vmov	r2, s5
 801893a:	eef0 2a47 	vmov.f32	s5, s14
 801893e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018942:	ee13 2a10 	vmov	r2, s6
 8018946:	9311      	str	r3, [sp, #68]	@ 0x44
 8018948:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801894a:	eeb0 3a67 	vmov.f32	s6, s15
 801894e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018952:	9a03      	ldr	r2, [sp, #12]
 8018954:	9312      	str	r3, [sp, #72]	@ 0x48
 8018956:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018958:	bf08      	it	eq
 801895a:	4613      	moveq	r3, r2
 801895c:	e789      	b.n	8018872 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801895e:	140f      	asrs	r7, r1, #16
 8018960:	d418      	bmi.n	8018994 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8018962:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8018966:	42bd      	cmp	r5, r7
 8018968:	dd14      	ble.n	8018994 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801896a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801896e:	d411      	bmi.n	8018994 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8018970:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8018974:	4564      	cmp	r4, ip
 8018976:	dd0d      	ble.n	8018994 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8018978:	b22d      	sxth	r5, r5
 801897a:	9c01      	ldr	r4, [sp, #4]
 801897c:	fb0c 7505 	mla	r5, ip, r5, r7
 8018980:	5d64      	ldrb	r4, [r4, r5]
 8018982:	2cff      	cmp	r4, #255	@ 0xff
 8018984:	d10c      	bne.n	80189a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8018986:	9c00      	ldr	r4, [sp, #0]
 8018988:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801898c:	f06f 0401 	mvn.w	r4, #1
 8018990:	4374      	muls	r4, r6
 8018992:	5305      	strh	r5, [r0, r4]
 8018994:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8018996:	3e01      	subs	r6, #1
 8018998:	4421      	add	r1, r4
 801899a:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801899c:	4422      	add	r2, r4
 801899e:	e79c      	b.n	80188da <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80189a0:	2c00      	cmp	r4, #0
 80189a2:	d0f7      	beq.n	8018994 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80189a4:	9f00      	ldr	r7, [sp, #0]
 80189a6:	fa1f fc84 	uxth.w	ip, r4
 80189aa:	43e4      	mvns	r4, r4
 80189ac:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 80189b0:	f06f 0501 	mvn.w	r5, #1
 80189b4:	b2e4      	uxtb	r4, r4
 80189b6:	4375      	muls	r5, r6
 80189b8:	ea4f 2e29 	mov.w	lr, r9, asr #8
 80189bc:	9502      	str	r5, [sp, #8]
 80189be:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80189c2:	5b45      	ldrh	r5, [r0, r5]
 80189c4:	122f      	asrs	r7, r5, #8
 80189c6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80189ca:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80189ce:	00ed      	lsls	r5, r5, #3
 80189d0:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 80189d4:	fb17 f704 	smulbb	r7, r7, r4
 80189d8:	b2ed      	uxtb	r5, r5
 80189da:	fb1a fa04 	smulbb	sl, sl, r4
 80189de:	fb0e 7e0c 	mla	lr, lr, ip, r7
 80189e2:	ea4f 07e9 	mov.w	r7, r9, asr #3
 80189e6:	fb15 f504 	smulbb	r5, r5, r4
 80189ea:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80189ee:	fa1f fe8e 	uxth.w	lr, lr
 80189f2:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80189f6:	fa5f f989 	uxtb.w	r9, r9
 80189fa:	fb07 a70c 	mla	r7, r7, ip, sl
 80189fe:	f10e 0401 	add.w	r4, lr, #1
 8018a02:	fb09 550c 	mla	r5, r9, ip, r5
 8018a06:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8018a0a:	9c02      	ldr	r4, [sp, #8]
 8018a0c:	b2ad      	uxth	r5, r5
 8018a0e:	b2bf      	uxth	r7, r7
 8018a10:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8018a14:	f105 0a01 	add.w	sl, r5, #1
 8018a18:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018a1c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018a20:	ea4a 0e0e 	orr.w	lr, sl, lr
 8018a24:	f107 0a01 	add.w	sl, r7, #1
 8018a28:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8018a2c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018a30:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8018a34:	ea4e 0e0a 	orr.w	lr, lr, sl
 8018a38:	f820 e004 	strh.w	lr, [r0, r4]
 8018a3c:	e7aa      	b.n	8018994 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8018a3e:	f04f 0900 	mov.w	r9, #0
 8018a42:	eba3 0409 	sub.w	r4, r3, r9
 8018a46:	2c00      	cmp	r4, #0
 8018a48:	f77f af4a 	ble.w	80188e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018a4c:	1414      	asrs	r4, r2, #16
 8018a4e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8018a52:	140d      	asrs	r5, r1, #16
 8018a54:	fb06 5504 	mla	r5, r6, r4, r5
 8018a58:	9c01      	ldr	r4, [sp, #4]
 8018a5a:	5d64      	ldrb	r4, [r4, r5]
 8018a5c:	2cff      	cmp	r4, #255	@ 0xff
 8018a5e:	d10b      	bne.n	8018a78 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8018a60:	9c00      	ldr	r4, [sp, #0]
 8018a62:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8018a66:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8018a6a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8018a6c:	f109 0901 	add.w	r9, r9, #1
 8018a70:	4421      	add	r1, r4
 8018a72:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8018a74:	4422      	add	r2, r4
 8018a76:	e7e4      	b.n	8018a42 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8018a78:	2c00      	cmp	r4, #0
 8018a7a:	d0f6      	beq.n	8018a6a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8018a7c:	9e00      	ldr	r6, [sp, #0]
 8018a7e:	b2a7      	uxth	r7, r4
 8018a80:	43e4      	mvns	r4, r4
 8018a82:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8018a86:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8018a8a:	b2e4      	uxtb	r4, r4
 8018a8c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8018a90:	122e      	asrs	r6, r5, #8
 8018a92:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8018a96:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8018a9a:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8018a9e:	00ed      	lsls	r5, r5, #3
 8018aa0:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8018aa4:	fb16 f604 	smulbb	r6, r6, r4
 8018aa8:	b2ed      	uxtb	r5, r5
 8018aaa:	fb1a fa04 	smulbb	sl, sl, r4
 8018aae:	fb0c 6c07 	mla	ip, ip, r7, r6
 8018ab2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8018ab6:	fb15 f504 	smulbb	r5, r5, r4
 8018aba:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018abe:	fa1f fc8c 	uxth.w	ip, ip
 8018ac2:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018ac6:	fa5f fe8e 	uxtb.w	lr, lr
 8018aca:	fb06 a607 	mla	r6, r6, r7, sl
 8018ace:	f10c 0401 	add.w	r4, ip, #1
 8018ad2:	fb0e 5507 	mla	r5, lr, r7, r5
 8018ad6:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8018ada:	b2ad      	uxth	r5, r5
 8018adc:	b2b6      	uxth	r6, r6
 8018ade:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8018ae2:	f105 0a01 	add.w	sl, r5, #1
 8018ae6:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018aea:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018aee:	ea4a 0c0c 	orr.w	ip, sl, ip
 8018af2:	f106 0a01 	add.w	sl, r6, #1
 8018af6:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018afa:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018afe:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8018b02:	ea4c 0c0a 	orr.w	ip, ip, sl
 8018b06:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8018b0a:	e7ae      	b.n	8018a6a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8018b0c:	b005      	add	sp, #20
 8018b0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018b12 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018b12:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018b16:	b085      	sub	sp, #20
 8018b18:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8018b1a:	9203      	str	r2, [sp, #12]
 8018b1c:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 8018b20:	9100      	str	r1, [sp, #0]
 8018b22:	9201      	str	r2, [sp, #4]
 8018b24:	6841      	ldr	r1, [r0, #4]
 8018b26:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 8018b2a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8018b2e:	fb01 2404 	mla	r4, r1, r4, r2
 8018b32:	6802      	ldr	r2, [r0, #0]
 8018b34:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018b38:	f8de 2000 	ldr.w	r2, [lr]
 8018b3c:	9202      	str	r2, [sp, #8]
 8018b3e:	9a01      	ldr	r2, [sp, #4]
 8018b40:	43d6      	mvns	r6, r2
 8018b42:	b2f6      	uxtb	r6, r6
 8018b44:	9a00      	ldr	r2, [sp, #0]
 8018b46:	2a00      	cmp	r2, #0
 8018b48:	dc03      	bgt.n	8018b52 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8018b4a:	9a03      	ldr	r2, [sp, #12]
 8018b4c:	2a00      	cmp	r2, #0
 8018b4e:	f340 8124 	ble.w	8018d9a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8018b52:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8018b54:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8018b58:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8018b5c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8018b5e:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8018b62:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8018b66:	2b00      	cmp	r3, #0
 8018b68:	dd0e      	ble.n	8018b88 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018b6a:	1408      	asrs	r0, r1, #16
 8018b6c:	d405      	bmi.n	8018b7a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018b6e:	4560      	cmp	r0, ip
 8018b70:	da03      	bge.n	8018b7a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018b72:	1410      	asrs	r0, r2, #16
 8018b74:	d401      	bmi.n	8018b7a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018b76:	42b8      	cmp	r0, r7
 8018b78:	db07      	blt.n	8018b8a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8018b7a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8018b7c:	3b01      	subs	r3, #1
 8018b7e:	3402      	adds	r4, #2
 8018b80:	4401      	add	r1, r0
 8018b82:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8018b84:	4402      	add	r2, r0
 8018b86:	e7ee      	b.n	8018b66 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8018b88:	d06e      	beq.n	8018c68 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8018b8a:	1e58      	subs	r0, r3, #1
 8018b8c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8018b8e:	fb05 1500 	mla	r5, r5, r0, r1
 8018b92:	142d      	asrs	r5, r5, #16
 8018b94:	d45c      	bmi.n	8018c50 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018b96:	4565      	cmp	r5, ip
 8018b98:	da5a      	bge.n	8018c50 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018b9a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8018b9c:	fb05 2000 	mla	r0, r5, r0, r2
 8018ba0:	1400      	asrs	r0, r0, #16
 8018ba2:	d455      	bmi.n	8018c50 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018ba4:	42b8      	cmp	r0, r7
 8018ba6:	da53      	bge.n	8018c50 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8018ba8:	4699      	mov	r9, r3
 8018baa:	46a2      	mov	sl, r4
 8018bac:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8018bb0:	f1b9 0f00 	cmp.w	r9, #0
 8018bb4:	dd54      	ble.n	8018c60 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018bb6:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8018bba:	140d      	asrs	r5, r1, #16
 8018bbc:	1410      	asrs	r0, r2, #16
 8018bbe:	f109 39ff 	add.w	r9, r9, #4294967295
 8018bc2:	fb07 5000 	mla	r0, r7, r0, r5
 8018bc6:	9d02      	ldr	r5, [sp, #8]
 8018bc8:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8018bcc:	f8ba 5000 	ldrh.w	r5, [sl]
 8018bd0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8018bd4:	122f      	asrs	r7, r5, #8
 8018bd6:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8018bda:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8018bde:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018be2:	00ed      	lsls	r5, r5, #3
 8018be4:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8018be8:	fb17 f706 	smulbb	r7, r7, r6
 8018bec:	b2ed      	uxtb	r5, r5
 8018bee:	fb18 f806 	smulbb	r8, r8, r6
 8018bf2:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8018bf6:	10c7      	asrs	r7, r0, #3
 8018bf8:	fb15 f506 	smulbb	r5, r5, r6
 8018bfc:	00c0      	lsls	r0, r0, #3
 8018bfe:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8018c02:	fa1f fc8c 	uxth.w	ip, ip
 8018c06:	b2c0      	uxtb	r0, r0
 8018c08:	fb07 870b 	mla	r7, r7, fp, r8
 8018c0c:	fb00 500b 	mla	r0, r0, fp, r5
 8018c10:	f10c 0501 	add.w	r5, ip, #1
 8018c14:	b2bf      	uxth	r7, r7
 8018c16:	b280      	uxth	r0, r0
 8018c18:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018c1c:	f107 0801 	add.w	r8, r7, #1
 8018c20:	1c45      	adds	r5, r0, #1
 8018c22:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8018c26:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8018c2a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018c2e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8018c30:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8018c34:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018c38:	4401      	add	r1, r0
 8018c3a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8018c3e:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8018c40:	ea45 0c0c 	orr.w	ip, r5, ip
 8018c44:	4402      	add	r2, r0
 8018c46:	ea4c 0c08 	orr.w	ip, ip, r8
 8018c4a:	f82a cb02 	strh.w	ip, [sl], #2
 8018c4e:	e7af      	b.n	8018bb0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018c50:	f04f 0800 	mov.w	r8, #0
 8018c54:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8018c58:	eb03 0008 	add.w	r0, r3, r8
 8018c5c:	2800      	cmp	r0, #0
 8018c5e:	dc41      	bgt.n	8018ce4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8018c60:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018c64:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018c68:	9b00      	ldr	r3, [sp, #0]
 8018c6a:	2b00      	cmp	r3, #0
 8018c6c:	f340 8095 	ble.w	8018d9a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8018c70:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8018c74:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018c76:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018c7a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018c7e:	eef0 6a62 	vmov.f32	s13, s5
 8018c82:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018c86:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018c8a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018c8e:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 8018c92:	eef0 6a43 	vmov.f32	s13, s6
 8018c96:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018c9a:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 8018c9e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018ca2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018ca6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018caa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018cae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018cb2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018cb6:	ee12 2a90 	vmov	r2, s5
 8018cba:	eef0 2a47 	vmov.f32	s5, s14
 8018cbe:	fb92 f3f3 	sdiv	r3, r2, r3
 8018cc2:	ee13 2a10 	vmov	r2, s6
 8018cc6:	9311      	str	r3, [sp, #68]	@ 0x44
 8018cc8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018cca:	eeb0 3a67 	vmov.f32	s6, s15
 8018cce:	fb92 f3f3 	sdiv	r3, r2, r3
 8018cd2:	9312      	str	r3, [sp, #72]	@ 0x48
 8018cd4:	9b00      	ldr	r3, [sp, #0]
 8018cd6:	9a03      	ldr	r2, [sp, #12]
 8018cd8:	3b01      	subs	r3, #1
 8018cda:	9300      	str	r3, [sp, #0]
 8018cdc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018cde:	bf08      	it	eq
 8018ce0:	4613      	moveq	r3, r2
 8018ce2:	e72f      	b.n	8018b44 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8018ce4:	140f      	asrs	r7, r1, #16
 8018ce6:	d451      	bmi.n	8018d8c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8018ce8:	f8de 5008 	ldr.w	r5, [lr, #8]
 8018cec:	42bd      	cmp	r5, r7
 8018cee:	dd4d      	ble.n	8018d8c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8018cf0:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8018cf4:	d44a      	bmi.n	8018d8c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8018cf6:	f8de 000c 	ldr.w	r0, [lr, #12]
 8018cfa:	4560      	cmp	r0, ip
 8018cfc:	dd46      	ble.n	8018d8c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8018cfe:	b22d      	sxth	r5, r5
 8018d00:	9802      	ldr	r0, [sp, #8]
 8018d02:	fb0c 7505 	mla	r5, ip, r5, r7
 8018d06:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8018d0a:	f06f 0501 	mvn.w	r5, #1
 8018d0e:	fb05 fb08 	mul.w	fp, r5, r8
 8018d12:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8018d16:	f834 500b 	ldrh.w	r5, [r4, fp]
 8018d1a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8018d1e:	122f      	asrs	r7, r5, #8
 8018d20:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8018d24:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018d28:	00ed      	lsls	r5, r5, #3
 8018d2a:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8018d2e:	fb17 f706 	smulbb	r7, r7, r6
 8018d32:	b2ed      	uxtb	r5, r5
 8018d34:	fb19 f906 	smulbb	r9, r9, r6
 8018d38:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8018d3c:	10c7      	asrs	r7, r0, #3
 8018d3e:	fb15 f506 	smulbb	r5, r5, r6
 8018d42:	00c0      	lsls	r0, r0, #3
 8018d44:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8018d48:	fa1f fc8c 	uxth.w	ip, ip
 8018d4c:	b2c0      	uxtb	r0, r0
 8018d4e:	fb07 970a 	mla	r7, r7, sl, r9
 8018d52:	fb00 500a 	mla	r0, r0, sl, r5
 8018d56:	f10c 0501 	add.w	r5, ip, #1
 8018d5a:	b2bf      	uxth	r7, r7
 8018d5c:	b280      	uxth	r0, r0
 8018d5e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8018d62:	f107 0901 	add.w	r9, r7, #1
 8018d66:	1c45      	adds	r5, r0, #1
 8018d68:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8018d6c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8018d70:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8018d74:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018d78:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018d7c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8018d80:	ea45 0c0c 	orr.w	ip, r5, ip
 8018d84:	ea4c 0c09 	orr.w	ip, ip, r9
 8018d88:	f824 c00b 	strh.w	ip, [r4, fp]
 8018d8c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8018d8e:	f108 38ff 	add.w	r8, r8, #4294967295
 8018d92:	4401      	add	r1, r0
 8018d94:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8018d96:	4402      	add	r2, r0
 8018d98:	e75e      	b.n	8018c58 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8018d9a:	b005      	add	sp, #20
 8018d9c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018da0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018da0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018da4:	b085      	sub	sp, #20
 8018da6:	4693      	mov	fp, r2
 8018da8:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8018dac:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8018dae:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8018db0:	6870      	ldr	r0, [r6, #4]
 8018db2:	9101      	str	r1, [sp, #4]
 8018db4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8018db8:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8018dbc:	fb00 2404 	mla	r4, r0, r4, r2
 8018dc0:	6832      	ldr	r2, [r6, #0]
 8018dc2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8018dc6:	682a      	ldr	r2, [r5, #0]
 8018dc8:	9202      	str	r2, [sp, #8]
 8018dca:	9a01      	ldr	r2, [sp, #4]
 8018dcc:	2a00      	cmp	r2, #0
 8018dce:	dc03      	bgt.n	8018dd8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8018dd0:	f1bb 0f00 	cmp.w	fp, #0
 8018dd4:	f340 809a 	ble.w	8018f0c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8018dd8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8018dda:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018dde:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8018de2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8018de4:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8018de8:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8018dec:	2b00      	cmp	r3, #0
 8018dee:	dd0c      	ble.n	8018e0a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8018df0:	1406      	asrs	r6, r0, #16
 8018df2:	d405      	bmi.n	8018e00 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8018df4:	454e      	cmp	r6, r9
 8018df6:	da03      	bge.n	8018e00 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8018df8:	1416      	asrs	r6, r2, #16
 8018dfa:	d401      	bmi.n	8018e00 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8018dfc:	4546      	cmp	r6, r8
 8018dfe:	db05      	blt.n	8018e0c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018e00:	4470      	add	r0, lr
 8018e02:	4462      	add	r2, ip
 8018e04:	3b01      	subs	r3, #1
 8018e06:	3402      	adds	r4, #2
 8018e08:	e7f0      	b.n	8018dec <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8018e0a:	d00f      	beq.n	8018e2c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8018e0c:	1e5e      	subs	r6, r3, #1
 8018e0e:	fb0e 0706 	mla	r7, lr, r6, r0
 8018e12:	143f      	asrs	r7, r7, #16
 8018e14:	d541      	bpl.n	8018e9a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8018e16:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8018e1a:	4698      	mov	r8, r3
 8018e1c:	9603      	str	r6, [sp, #12]
 8018e1e:	f1b8 0f00 	cmp.w	r8, #0
 8018e22:	dc56      	bgt.n	8018ed2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8018e24:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018e28:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018e2c:	9b01      	ldr	r3, [sp, #4]
 8018e2e:	2b00      	cmp	r3, #0
 8018e30:	dd6c      	ble.n	8018f0c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8018e32:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018e36:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018e38:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018e3c:	eeb0 6a62 	vmov.f32	s12, s5
 8018e40:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018e44:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018e48:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018e4c:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8018e50:	eeb0 6a43 	vmov.f32	s12, s6
 8018e54:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018e58:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8018e5c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018e60:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018e64:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018e68:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018e6c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018e70:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018e74:	ee12 2a90 	vmov	r2, s5
 8018e78:	eef0 2a47 	vmov.f32	s5, s14
 8018e7c:	fb92 fef3 	sdiv	lr, r2, r3
 8018e80:	ee13 2a10 	vmov	r2, s6
 8018e84:	eeb0 3a67 	vmov.f32	s6, s15
 8018e88:	fb92 fcf3 	sdiv	ip, r2, r3
 8018e8c:	9b01      	ldr	r3, [sp, #4]
 8018e8e:	3b01      	subs	r3, #1
 8018e90:	9301      	str	r3, [sp, #4]
 8018e92:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018e94:	bf08      	it	eq
 8018e96:	465b      	moveq	r3, fp
 8018e98:	e797      	b.n	8018dca <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8018e9a:	454f      	cmp	r7, r9
 8018e9c:	dabb      	bge.n	8018e16 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018e9e:	fb0c 2606 	mla	r6, ip, r6, r2
 8018ea2:	1436      	asrs	r6, r6, #16
 8018ea4:	d4b7      	bmi.n	8018e16 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018ea6:	4546      	cmp	r6, r8
 8018ea8:	dab5      	bge.n	8018e16 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018eaa:	461e      	mov	r6, r3
 8018eac:	46a0      	mov	r8, r4
 8018eae:	2e00      	cmp	r6, #0
 8018eb0:	ddb8      	ble.n	8018e24 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018eb2:	1417      	asrs	r7, r2, #16
 8018eb4:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8018eb8:	ea4f 4920 	mov.w	r9, r0, asr #16
 8018ebc:	9902      	ldr	r1, [sp, #8]
 8018ebe:	4470      	add	r0, lr
 8018ec0:	4462      	add	r2, ip
 8018ec2:	fb0a 9707 	mla	r7, sl, r7, r9
 8018ec6:	3e01      	subs	r6, #1
 8018ec8:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8018ecc:	f828 7b02 	strh.w	r7, [r8], #2
 8018ed0:	e7ed      	b.n	8018eae <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8018ed2:	ea5f 4920 	movs.w	r9, r0, asr #16
 8018ed6:	d414      	bmi.n	8018f02 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8018ed8:	68ae      	ldr	r6, [r5, #8]
 8018eda:	454e      	cmp	r6, r9
 8018edc:	dd11      	ble.n	8018f02 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8018ede:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8018ee2:	d40e      	bmi.n	8018f02 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8018ee4:	68ef      	ldr	r7, [r5, #12]
 8018ee6:	4557      	cmp	r7, sl
 8018ee8:	dd0b      	ble.n	8018f02 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8018eea:	b236      	sxth	r6, r6
 8018eec:	f06f 0101 	mvn.w	r1, #1
 8018ef0:	9f02      	ldr	r7, [sp, #8]
 8018ef2:	fb0a 9606 	mla	r6, sl, r6, r9
 8018ef6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8018efa:	fb01 f608 	mul.w	r6, r1, r8
 8018efe:	9903      	ldr	r1, [sp, #12]
 8018f00:	538f      	strh	r7, [r1, r6]
 8018f02:	4470      	add	r0, lr
 8018f04:	4462      	add	r2, ip
 8018f06:	f108 38ff 	add.w	r8, r8, #4294967295
 8018f0a:	e788      	b.n	8018e1e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018f0c:	b005      	add	sp, #20
 8018f0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018f12 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018f12:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018f16:	b087      	sub	sp, #28
 8018f18:	468b      	mov	fp, r1
 8018f1a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8018f1e:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8018f20:	9203      	str	r2, [sp, #12]
 8018f22:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8018f26:	6841      	ldr	r1, [r0, #4]
 8018f28:	9204      	str	r2, [sp, #16]
 8018f2a:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8018f2e:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 8018f32:	fb01 2505 	mla	r5, r1, r5, r2
 8018f36:	6802      	ldr	r2, [r0, #0]
 8018f38:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8018f3c:	f8d9 2000 	ldr.w	r2, [r9]
 8018f40:	9201      	str	r2, [sp, #4]
 8018f42:	f1bb 0f00 	cmp.w	fp, #0
 8018f46:	dc03      	bgt.n	8018f50 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018f48:	9a03      	ldr	r2, [sp, #12]
 8018f4a:	2a00      	cmp	r2, #0
 8018f4c:	f340 8158 	ble.w	8019200 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8018f50:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8018f52:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8018f56:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8018f5a:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8018f5c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8018f60:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8018f64:	2b00      	cmp	r3, #0
 8018f66:	dd0e      	ble.n	8018f86 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8018f68:	1402      	asrs	r2, r0, #16
 8018f6a:	d405      	bmi.n	8018f78 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018f6c:	42ba      	cmp	r2, r7
 8018f6e:	da03      	bge.n	8018f78 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018f70:	140a      	asrs	r2, r1, #16
 8018f72:	d401      	bmi.n	8018f78 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018f74:	42b2      	cmp	r2, r6
 8018f76:	db07      	blt.n	8018f88 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018f78:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8018f7a:	3b01      	subs	r3, #1
 8018f7c:	3502      	adds	r5, #2
 8018f7e:	4410      	add	r0, r2
 8018f80:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8018f82:	4411      	add	r1, r2
 8018f84:	e7ee      	b.n	8018f64 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8018f86:	d017      	beq.n	8018fb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8018f88:	1e5a      	subs	r2, r3, #1
 8018f8a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8018f8c:	fb04 0402 	mla	r4, r4, r2, r0
 8018f90:	1424      	asrs	r4, r4, #16
 8018f92:	d409      	bmi.n	8018fa8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018f94:	42bc      	cmp	r4, r7
 8018f96:	da07      	bge.n	8018fa8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018f98:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8018f9a:	fb04 1202 	mla	r2, r4, r2, r1
 8018f9e:	1412      	asrs	r2, r2, #16
 8018fa0:	d402      	bmi.n	8018fa8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018fa2:	42b2      	cmp	r2, r6
 8018fa4:	f2c0 80bf 	blt.w	8019126 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8018fa8:	2700      	movs	r7, #0
 8018faa:	19da      	adds	r2, r3, r7
 8018fac:	2a00      	cmp	r2, #0
 8018fae:	dc3e      	bgt.n	801902e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8018fb0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018fb4:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8018fb8:	f1bb 0f00 	cmp.w	fp, #0
 8018fbc:	f340 8120 	ble.w	8019200 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ee>
 8018fc0:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018fc4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018fc6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018fca:	f1bb 0b01 	subs.w	fp, fp, #1
 8018fce:	eeb0 6a62 	vmov.f32	s12, s5
 8018fd2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018fd6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018fda:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018fde:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8018fe2:	eeb0 6a43 	vmov.f32	s12, s6
 8018fe6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018fea:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8018fee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018ff2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018ff6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018ffa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018ffe:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019002:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019006:	ee12 2a90 	vmov	r2, s5
 801900a:	eef0 2a47 	vmov.f32	s5, s14
 801900e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019012:	ee13 2a10 	vmov	r2, s6
 8019016:	9313      	str	r3, [sp, #76]	@ 0x4c
 8019018:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801901a:	eeb0 3a67 	vmov.f32	s6, s15
 801901e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019022:	9a03      	ldr	r2, [sp, #12]
 8019024:	9314      	str	r3, [sp, #80]	@ 0x50
 8019026:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019028:	bf08      	it	eq
 801902a:	4613      	moveq	r3, r2
 801902c:	e789      	b.n	8018f42 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801902e:	1406      	asrs	r6, r0, #16
 8019030:	d42d      	bmi.n	801908e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019032:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8019036:	42b4      	cmp	r4, r6
 8019038:	dd29      	ble.n	801908e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801903a:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801903e:	d426      	bmi.n	801908e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019040:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8019044:	4562      	cmp	r2, ip
 8019046:	dd22      	ble.n	801908e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019048:	b224      	sxth	r4, r4
 801904a:	9a01      	ldr	r2, [sp, #4]
 801904c:	fb0c 6404 	mla	r4, ip, r4, r6
 8019050:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8019054:	0e22      	lsrs	r2, r4, #24
 8019056:	d01a      	beq.n	801908e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019058:	9e04      	ldr	r6, [sp, #16]
 801905a:	4372      	muls	r2, r6
 801905c:	1c56      	adds	r6, r2, #1
 801905e:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8019062:	0a26      	lsrs	r6, r4, #8
 8019064:	1212      	asrs	r2, r2, #8
 8019066:	9605      	str	r6, [sp, #20]
 8019068:	2aff      	cmp	r2, #255	@ 0xff
 801906a:	d116      	bne.n	801909a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 801906c:	f06f 0201 	mvn.w	r2, #1
 8019070:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8019074:	fb02 fc07 	mul.w	ip, r2, r7
 8019078:	0962      	lsrs	r2, r4, #5
 801907a:	f026 0607 	bic.w	r6, r6, #7
 801907e:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8019082:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019086:	4316      	orrs	r6, r2
 8019088:	4326      	orrs	r6, r4
 801908a:	f825 600c 	strh.w	r6, [r5, ip]
 801908e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019090:	3f01      	subs	r7, #1
 8019092:	4410      	add	r0, r2
 8019094:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019096:	4411      	add	r1, r2
 8019098:	e787      	b.n	8018faa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801909a:	f06f 0601 	mvn.w	r6, #1
 801909e:	fa1f fa82 	uxth.w	sl, r2
 80190a2:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 80190a6:	43d2      	mvns	r2, r2
 80190a8:	437e      	muls	r6, r7
 80190aa:	b2e4      	uxtb	r4, r4
 80190ac:	fb1c fc0a 	smulbb	ip, ip, sl
 80190b0:	b2d2      	uxtb	r2, r2
 80190b2:	f835 8006 	ldrh.w	r8, [r5, r6]
 80190b6:	fb14 f40a 	smulbb	r4, r4, sl
 80190ba:	9602      	str	r6, [sp, #8]
 80190bc:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80190c0:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80190c4:	fb16 f60a 	smulbb	r6, r6, sl
 80190c8:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80190cc:	fb0e ce02 	mla	lr, lr, r2, ip
 80190d0:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80190d4:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80190d8:	fa1f fe8e 	uxth.w	lr, lr
 80190dc:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 80190e0:	fa5f f888 	uxtb.w	r8, r8
 80190e4:	fb0c 6c02 	mla	ip, ip, r2, r6
 80190e8:	fb08 4402 	mla	r4, r8, r2, r4
 80190ec:	f10e 0201 	add.w	r2, lr, #1
 80190f0:	fa1f fc8c 	uxth.w	ip, ip
 80190f4:	b2a4      	uxth	r4, r4
 80190f6:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 80190fa:	9a02      	ldr	r2, [sp, #8]
 80190fc:	1c66      	adds	r6, r4, #1
 80190fe:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8019102:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8019106:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801910a:	ea46 0e0e 	orr.w	lr, r6, lr
 801910e:	f10c 0601 	add.w	r6, ip, #1
 8019112:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8019116:	0976      	lsrs	r6, r6, #5
 8019118:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801911c:	ea4e 0e06 	orr.w	lr, lr, r6
 8019120:	f825 e002 	strh.w	lr, [r5, r2]
 8019124:	e7b3      	b.n	801908e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019126:	f04f 0800 	mov.w	r8, #0
 801912a:	eba3 0208 	sub.w	r2, r3, r8
 801912e:	2a00      	cmp	r2, #0
 8019130:	f77f af3e 	ble.w	8018fb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019134:	1404      	asrs	r4, r0, #16
 8019136:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801913a:	140a      	asrs	r2, r1, #16
 801913c:	fb06 4202 	mla	r2, r6, r2, r4
 8019140:	9c01      	ldr	r4, [sp, #4]
 8019142:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8019146:	0e22      	lsrs	r2, r4, #24
 8019148:	d015      	beq.n	8019176 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 801914a:	9e04      	ldr	r6, [sp, #16]
 801914c:	4372      	muls	r2, r6
 801914e:	1c56      	adds	r6, r2, #1
 8019150:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8019154:	0a26      	lsrs	r6, r4, #8
 8019156:	1212      	asrs	r2, r2, #8
 8019158:	2aff      	cmp	r2, #255	@ 0xff
 801915a:	d113      	bne.n	8019184 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801915c:	0962      	lsrs	r2, r4, #5
 801915e:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8019162:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8019166:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801916a:	f026 0607 	bic.w	r6, r6, #7
 801916e:	4316      	orrs	r6, r2
 8019170:	4326      	orrs	r6, r4
 8019172:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8019176:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019178:	f108 0801 	add.w	r8, r8, #1
 801917c:	4410      	add	r0, r2
 801917e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019180:	4411      	add	r1, r2
 8019182:	e7d2      	b.n	801912a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8019184:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8019188:	fa1f fa82 	uxth.w	sl, r2
 801918c:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8019190:	43d2      	mvns	r2, r2
 8019192:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019196:	fb17 f70a 	smulbb	r7, r7, sl
 801919a:	b2d2      	uxtb	r2, r2
 801919c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80191a0:	b2e4      	uxtb	r4, r4
 80191a2:	b2f6      	uxtb	r6, r6
 80191a4:	fb0c 7c02 	mla	ip, ip, r2, r7
 80191a8:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80191ac:	fb14 f40a 	smulbb	r4, r4, sl
 80191b0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80191b4:	fa1f fc8c 	uxth.w	ip, ip
 80191b8:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80191bc:	fb16 f60a 	smulbb	r6, r6, sl
 80191c0:	fa5f fe8e 	uxtb.w	lr, lr
 80191c4:	fb0e 4402 	mla	r4, lr, r2, r4
 80191c8:	fb07 6702 	mla	r7, r7, r2, r6
 80191cc:	f10c 0201 	add.w	r2, ip, #1
 80191d0:	b2a4      	uxth	r4, r4
 80191d2:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80191d6:	1c66      	adds	r6, r4, #1
 80191d8:	b2bf      	uxth	r7, r7
 80191da:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80191de:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80191e2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80191e6:	ea46 0c0c 	orr.w	ip, r6, ip
 80191ea:	1c7e      	adds	r6, r7, #1
 80191ec:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80191f0:	0976      	lsrs	r6, r6, #5
 80191f2:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80191f6:	ea4c 0c06 	orr.w	ip, ip, r6
 80191fa:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 80191fe:	e7ba      	b.n	8019176 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8019200:	b007      	add	sp, #28
 8019202:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08019208 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019208:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801920c:	b085      	sub	sp, #20
 801920e:	468b      	mov	fp, r1
 8019210:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8019214:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8019216:	9203      	str	r2, [sp, #12]
 8019218:	6841      	ldr	r1, [r0, #4]
 801921a:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 801921e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8019222:	fb01 2404 	mla	r4, r1, r4, r2
 8019226:	6802      	ldr	r2, [r0, #0]
 8019228:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801922c:	f8d8 2000 	ldr.w	r2, [r8]
 8019230:	9201      	str	r2, [sp, #4]
 8019232:	f1bb 0f00 	cmp.w	fp, #0
 8019236:	dc03      	bgt.n	8019240 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8019238:	9a03      	ldr	r2, [sp, #12]
 801923a:	2a00      	cmp	r2, #0
 801923c:	f340 814f 	ble.w	80194de <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8019240:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8019242:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8019246:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801924a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801924c:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8019250:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8019254:	2b00      	cmp	r3, #0
 8019256:	dd0e      	ble.n	8019276 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8019258:	1408      	asrs	r0, r1, #16
 801925a:	d405      	bmi.n	8019268 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801925c:	42b8      	cmp	r0, r7
 801925e:	da03      	bge.n	8019268 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019260:	1410      	asrs	r0, r2, #16
 8019262:	d401      	bmi.n	8019268 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019264:	42b0      	cmp	r0, r6
 8019266:	db07      	blt.n	8019278 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019268:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801926a:	3b01      	subs	r3, #1
 801926c:	3402      	adds	r4, #2
 801926e:	4401      	add	r1, r0
 8019270:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8019272:	4402      	add	r2, r0
 8019274:	e7ee      	b.n	8019254 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8019276:	d017      	beq.n	80192a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019278:	1e58      	subs	r0, r3, #1
 801927a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801927c:	fb05 1500 	mla	r5, r5, r0, r1
 8019280:	142d      	asrs	r5, r5, #16
 8019282:	d409      	bmi.n	8019298 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019284:	42bd      	cmp	r5, r7
 8019286:	da07      	bge.n	8019298 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019288:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801928a:	fb05 2000 	mla	r0, r5, r0, r2
 801928e:	1400      	asrs	r0, r0, #16
 8019290:	d402      	bmi.n	8019298 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8019292:	42b0      	cmp	r0, r6
 8019294:	f2c0 80ba 	blt.w	801940c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019298:	2600      	movs	r6, #0
 801929a:	1998      	adds	r0, r3, r6
 801929c:	2800      	cmp	r0, #0
 801929e:	dc3e      	bgt.n	801931e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80192a0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80192a4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80192a8:	f1bb 0f00 	cmp.w	fp, #0
 80192ac:	f340 8117 	ble.w	80194de <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80192b0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80192b4:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80192b6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80192ba:	f1bb 0b01 	subs.w	fp, fp, #1
 80192be:	eeb0 6a62 	vmov.f32	s12, s5
 80192c2:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80192c6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80192ca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80192ce:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80192d2:	eeb0 6a43 	vmov.f32	s12, s6
 80192d6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80192da:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80192de:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80192e2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80192e6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80192ea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80192ee:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80192f2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80192f6:	ee12 2a90 	vmov	r2, s5
 80192fa:	eef0 2a47 	vmov.f32	s5, s14
 80192fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8019302:	ee13 2a10 	vmov	r2, s6
 8019306:	9311      	str	r3, [sp, #68]	@ 0x44
 8019308:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801930a:	eeb0 3a67 	vmov.f32	s6, s15
 801930e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019312:	9a03      	ldr	r2, [sp, #12]
 8019314:	9312      	str	r3, [sp, #72]	@ 0x48
 8019316:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019318:	bf08      	it	eq
 801931a:	4613      	moveq	r3, r2
 801931c:	e789      	b.n	8019232 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801931e:	140f      	asrs	r7, r1, #16
 8019320:	d424      	bmi.n	801936c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019322:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8019326:	42bd      	cmp	r5, r7
 8019328:	dd20      	ble.n	801936c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801932a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801932e:	d41d      	bmi.n	801936c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019330:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8019334:	4560      	cmp	r0, ip
 8019336:	dd19      	ble.n	801936c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019338:	b22d      	sxth	r5, r5
 801933a:	9801      	ldr	r0, [sp, #4]
 801933c:	fb0c 7505 	mla	r5, ip, r5, r7
 8019340:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8019344:	0e07      	lsrs	r7, r0, #24
 8019346:	2fff      	cmp	r7, #255	@ 0xff
 8019348:	d116      	bne.n	8019378 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801934a:	f06f 0501 	mvn.w	r5, #1
 801934e:	fb05 f706 	mul.w	r7, r5, r6
 8019352:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 8019356:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801935a:	0945      	lsrs	r5, r0, #5
 801935c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8019360:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8019364:	ea4c 0505 	orr.w	r5, ip, r5
 8019368:	4305      	orrs	r5, r0
 801936a:	53e5      	strh	r5, [r4, r7]
 801936c:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801936e:	3e01      	subs	r6, #1
 8019370:	4401      	add	r1, r0
 8019372:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8019374:	4402      	add	r2, r0
 8019376:	e790      	b.n	801929a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019378:	b2fd      	uxtb	r5, r7
 801937a:	2f00      	cmp	r7, #0
 801937c:	d0f6      	beq.n	801936c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801937e:	f06f 0701 	mvn.w	r7, #1
 8019382:	fa1f f985 	uxth.w	r9, r5
 8019386:	43ed      	mvns	r5, r5
 8019388:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801938c:	4377      	muls	r7, r6
 801938e:	fb1a fa09 	smulbb	sl, sl, r9
 8019392:	b2ed      	uxtb	r5, r5
 8019394:	f834 e007 	ldrh.w	lr, [r4, r7]
 8019398:	9702      	str	r7, [sp, #8]
 801939a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801939e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80193a2:	fb17 f709 	smulbb	r7, r7, r9
 80193a6:	b2c0      	uxtb	r0, r0
 80193a8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80193ac:	fb10 f009 	smulbb	r0, r0, r9
 80193b0:	fb0c 7c05 	mla	ip, ip, r5, r7
 80193b4:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80193b8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80193bc:	fa1f fc8c 	uxth.w	ip, ip
 80193c0:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80193c4:	fa5f fe8e 	uxtb.w	lr, lr
 80193c8:	fb07 a705 	mla	r7, r7, r5, sl
 80193cc:	fb0e 0005 	mla	r0, lr, r5, r0
 80193d0:	f10c 0501 	add.w	r5, ip, #1
 80193d4:	b2bf      	uxth	r7, r7
 80193d6:	b280      	uxth	r0, r0
 80193d8:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80193dc:	f100 0a01 	add.w	sl, r0, #1
 80193e0:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80193e4:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80193e8:	9802      	ldr	r0, [sp, #8]
 80193ea:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80193ee:	ea4a 0c0c 	orr.w	ip, sl, ip
 80193f2:	f107 0a01 	add.w	sl, r7, #1
 80193f6:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80193fa:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80193fe:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8019402:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019406:	f824 c000 	strh.w	ip, [r4, r0]
 801940a:	e7af      	b.n	801936c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801940c:	f04f 0e00 	mov.w	lr, #0
 8019410:	eba3 000e 	sub.w	r0, r3, lr
 8019414:	2800      	cmp	r0, #0
 8019416:	f77f af43 	ble.w	80192a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801941a:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801941e:	140d      	asrs	r5, r1, #16
 8019420:	1410      	asrs	r0, r2, #16
 8019422:	fb06 5000 	mla	r0, r6, r0, r5
 8019426:	9d01      	ldr	r5, [sp, #4]
 8019428:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801942c:	0e2e      	lsrs	r6, r5, #24
 801942e:	2eff      	cmp	r6, #255	@ 0xff
 8019430:	d112      	bne.n	8019458 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8019432:	482c      	ldr	r0, [pc, #176]	@ (80194e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8019434:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8019438:	0968      	lsrs	r0, r5, #5
 801943a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801943e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8019442:	4330      	orrs	r0, r6
 8019444:	4328      	orrs	r0, r5
 8019446:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801944a:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801944c:	f10e 0e01 	add.w	lr, lr, #1
 8019450:	4401      	add	r1, r0
 8019452:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8019454:	4402      	add	r2, r0
 8019456:	e7db      	b.n	8019410 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8019458:	b2f0      	uxtb	r0, r6
 801945a:	2e00      	cmp	r6, #0
 801945c:	d0f5      	beq.n	801944a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801945e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8019462:	fa1f f980 	uxth.w	r9, r0
 8019466:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801946a:	43c0      	mvns	r0, r0
 801946c:	ea4f 272c 	mov.w	r7, ip, asr #8
 8019470:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8019474:	fb16 f609 	smulbb	r6, r6, r9
 8019478:	b2c0      	uxtb	r0, r0
 801947a:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801947e:	b2ed      	uxtb	r5, r5
 8019480:	fb1a fa09 	smulbb	sl, sl, r9
 8019484:	fb07 6700 	mla	r7, r7, r0, r6
 8019488:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801948c:	fb15 f509 	smulbb	r5, r5, r9
 8019490:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019494:	b2bf      	uxth	r7, r7
 8019496:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801949a:	fa5f fc8c 	uxtb.w	ip, ip
 801949e:	fb06 a600 	mla	r6, r6, r0, sl
 80194a2:	fb0c 5500 	mla	r5, ip, r0, r5
 80194a6:	1c78      	adds	r0, r7, #1
 80194a8:	b2b6      	uxth	r6, r6
 80194aa:	b2ad      	uxth	r5, r5
 80194ac:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80194b0:	f105 0a01 	add.w	sl, r5, #1
 80194b4:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80194b8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80194bc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80194c0:	ea4a 0707 	orr.w	r7, sl, r7
 80194c4:	f106 0a01 	add.w	sl, r6, #1
 80194c8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80194cc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80194d0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80194d4:	ea47 070a 	orr.w	r7, r7, sl
 80194d8:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 80194dc:	e7b5      	b.n	801944a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80194de:	b005      	add	sp, #20
 80194e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80194e4:	fffff800 	.word	0xfffff800

080194e8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80194e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80194ec:	b087      	sub	sp, #28
 80194ee:	468b      	mov	fp, r1
 80194f0:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 80194f4:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80194f6:	9203      	str	r2, [sp, #12]
 80194f8:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 80194fc:	6841      	ldr	r1, [r0, #4]
 80194fe:	9204      	str	r2, [sp, #16]
 8019500:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8019504:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8019508:	fb01 2404 	mla	r4, r1, r4, r2
 801950c:	6802      	ldr	r2, [r0, #0]
 801950e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019512:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8019516:	3201      	adds	r2, #1
 8019518:	f022 0201 	bic.w	r2, r2, #1
 801951c:	9200      	str	r2, [sp, #0]
 801951e:	f8d9 2000 	ldr.w	r2, [r9]
 8019522:	9201      	str	r2, [sp, #4]
 8019524:	f1bb 0f00 	cmp.w	fp, #0
 8019528:	dc03      	bgt.n	8019532 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801952a:	9a03      	ldr	r2, [sp, #12]
 801952c:	2a00      	cmp	r2, #0
 801952e:	f340 816a 	ble.w	8019806 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8019532:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8019534:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8019538:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801953c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801953e:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8019542:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8019546:	2b00      	cmp	r3, #0
 8019548:	dd0e      	ble.n	8019568 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801954a:	1402      	asrs	r2, r0, #16
 801954c:	d405      	bmi.n	801955a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801954e:	42ba      	cmp	r2, r7
 8019550:	da03      	bge.n	801955a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019552:	140a      	asrs	r2, r1, #16
 8019554:	d401      	bmi.n	801955a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019556:	42b2      	cmp	r2, r6
 8019558:	db07      	blt.n	801956a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801955a:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801955c:	3b01      	subs	r3, #1
 801955e:	3402      	adds	r4, #2
 8019560:	4410      	add	r0, r2
 8019562:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019564:	4411      	add	r1, r2
 8019566:	e7ee      	b.n	8019546 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8019568:	d017      	beq.n	801959a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801956a:	1e5a      	subs	r2, r3, #1
 801956c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 801956e:	fb05 0502 	mla	r5, r5, r2, r0
 8019572:	142d      	asrs	r5, r5, #16
 8019574:	d409      	bmi.n	801958a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8019576:	42bd      	cmp	r5, r7
 8019578:	da07      	bge.n	801958a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801957a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 801957c:	fb05 1202 	mla	r2, r5, r2, r1
 8019580:	1412      	asrs	r2, r2, #16
 8019582:	d402      	bmi.n	801958a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8019584:	42b2      	cmp	r2, r6
 8019586:	f2c0 80c8 	blt.w	801971a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 801958a:	2700      	movs	r7, #0
 801958c:	19da      	adds	r2, r3, r7
 801958e:	2a00      	cmp	r2, #0
 8019590:	dc3e      	bgt.n	8019610 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8019592:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019596:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801959a:	f1bb 0f00 	cmp.w	fp, #0
 801959e:	f340 8132 	ble.w	8019806 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 80195a2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80195a6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80195a8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80195ac:	f1bb 0b01 	subs.w	fp, fp, #1
 80195b0:	eeb0 6a62 	vmov.f32	s12, s5
 80195b4:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80195b8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80195bc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80195c0:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80195c4:	eeb0 6a43 	vmov.f32	s12, s6
 80195c8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80195cc:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80195d0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80195d4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80195d8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80195dc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80195e0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80195e4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80195e8:	ee12 2a90 	vmov	r2, s5
 80195ec:	eef0 2a47 	vmov.f32	s5, s14
 80195f0:	fb92 f3f3 	sdiv	r3, r2, r3
 80195f4:	ee13 2a10 	vmov	r2, s6
 80195f8:	9313      	str	r3, [sp, #76]	@ 0x4c
 80195fa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80195fc:	eeb0 3a67 	vmov.f32	s6, s15
 8019600:	fb92 f3f3 	sdiv	r3, r2, r3
 8019604:	9a03      	ldr	r2, [sp, #12]
 8019606:	9314      	str	r3, [sp, #80]	@ 0x50
 8019608:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801960a:	bf08      	it	eq
 801960c:	4613      	moveq	r3, r2
 801960e:	e789      	b.n	8019524 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019610:	1405      	asrs	r5, r0, #16
 8019612:	d436      	bmi.n	8019682 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8019614:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8019618:	42aa      	cmp	r2, r5
 801961a:	dd32      	ble.n	8019682 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801961c:	140e      	asrs	r6, r1, #16
 801961e:	d430      	bmi.n	8019682 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8019620:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8019624:	42b2      	cmp	r2, r6
 8019626:	dd2c      	ble.n	8019682 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8019628:	9a00      	ldr	r2, [sp, #0]
 801962a:	fb06 5502 	mla	r5, r6, r2, r5
 801962e:	9e01      	ldr	r6, [sp, #4]
 8019630:	086a      	lsrs	r2, r5, #1
 8019632:	5cb2      	ldrb	r2, [r6, r2]
 8019634:	07ee      	lsls	r6, r5, #31
 8019636:	bf54      	ite	pl
 8019638:	f002 020f 	andpl.w	r2, r2, #15
 801963c:	1112      	asrmi	r2, r2, #4
 801963e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019642:	b2d2      	uxtb	r2, r2
 8019644:	b1ea      	cbz	r2, 8019682 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8019646:	9d04      	ldr	r5, [sp, #16]
 8019648:	436a      	muls	r2, r5
 801964a:	1c55      	adds	r5, r2, #1
 801964c:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8019650:	4d6e      	ldr	r5, [pc, #440]	@ (801980c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8019652:	1212      	asrs	r2, r2, #8
 8019654:	682d      	ldr	r5, [r5, #0]
 8019656:	2aff      	cmp	r2, #255	@ 0xff
 8019658:	ea4f 2615 	mov.w	r6, r5, lsr #8
 801965c:	9605      	str	r6, [sp, #20]
 801965e:	d116      	bne.n	801968e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a6>
 8019660:	f06f 0201 	mvn.w	r2, #1
 8019664:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8019668:	fb02 fc07 	mul.w	ip, r2, r7
 801966c:	096a      	lsrs	r2, r5, #5
 801966e:	f026 0607 	bic.w	r6, r6, #7
 8019672:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8019676:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801967a:	4316      	orrs	r6, r2
 801967c:	432e      	orrs	r6, r5
 801967e:	f824 600c 	strh.w	r6, [r4, ip]
 8019682:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019684:	3f01      	subs	r7, #1
 8019686:	4410      	add	r0, r2
 8019688:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801968a:	4411      	add	r1, r2
 801968c:	e77e      	b.n	801958c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 801968e:	f06f 0601 	mvn.w	r6, #1
 8019692:	fa1f fa82 	uxth.w	sl, r2
 8019696:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 801969a:	43d2      	mvns	r2, r2
 801969c:	437e      	muls	r6, r7
 801969e:	b2ed      	uxtb	r5, r5
 80196a0:	fb1c fc0a 	smulbb	ip, ip, sl
 80196a4:	b2d2      	uxtb	r2, r2
 80196a6:	f834 8006 	ldrh.w	r8, [r4, r6]
 80196aa:	fb15 f50a 	smulbb	r5, r5, sl
 80196ae:	9602      	str	r6, [sp, #8]
 80196b0:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80196b4:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80196b8:	fb16 f60a 	smulbb	r6, r6, sl
 80196bc:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 80196c0:	fb0e ce02 	mla	lr, lr, r2, ip
 80196c4:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80196c8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80196cc:	fa1f fe8e 	uxth.w	lr, lr
 80196d0:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 80196d4:	fa5f f888 	uxtb.w	r8, r8
 80196d8:	fb0c 6c02 	mla	ip, ip, r2, r6
 80196dc:	fb08 5502 	mla	r5, r8, r2, r5
 80196e0:	f10e 0201 	add.w	r2, lr, #1
 80196e4:	fa1f fc8c 	uxth.w	ip, ip
 80196e8:	b2ad      	uxth	r5, r5
 80196ea:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 80196ee:	9a02      	ldr	r2, [sp, #8]
 80196f0:	1c6e      	adds	r6, r5, #1
 80196f2:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 80196f6:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 80196fa:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80196fe:	ea46 0e0e 	orr.w	lr, r6, lr
 8019702:	f10c 0601 	add.w	r6, ip, #1
 8019706:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801970a:	0976      	lsrs	r6, r6, #5
 801970c:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8019710:	ea4e 0e06 	orr.w	lr, lr, r6
 8019714:	f824 e002 	strh.w	lr, [r4, r2]
 8019718:	e7b3      	b.n	8019682 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801971a:	f04f 0800 	mov.w	r8, #0
 801971e:	eba3 0208 	sub.w	r2, r3, r8
 8019722:	2a00      	cmp	r2, #0
 8019724:	f77f af35 	ble.w	8019592 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8019728:	1402      	asrs	r2, r0, #16
 801972a:	9e00      	ldr	r6, [sp, #0]
 801972c:	140d      	asrs	r5, r1, #16
 801972e:	fb06 2505 	mla	r5, r6, r5, r2
 8019732:	9e01      	ldr	r6, [sp, #4]
 8019734:	086a      	lsrs	r2, r5, #1
 8019736:	07ed      	lsls	r5, r5, #31
 8019738:	5cb2      	ldrb	r2, [r6, r2]
 801973a:	bf54      	ite	pl
 801973c:	f002 020f 	andpl.w	r2, r2, #15
 8019740:	1112      	asrmi	r2, r2, #4
 8019742:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019746:	b2d2      	uxtb	r2, r2
 8019748:	b1c2      	cbz	r2, 801977c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801974a:	9d04      	ldr	r5, [sp, #16]
 801974c:	436a      	muls	r2, r5
 801974e:	1c55      	adds	r5, r2, #1
 8019750:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8019754:	4d2d      	ldr	r5, [pc, #180]	@ (801980c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8019756:	1212      	asrs	r2, r2, #8
 8019758:	682e      	ldr	r6, [r5, #0]
 801975a:	2aff      	cmp	r2, #255	@ 0xff
 801975c:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8019760:	d113      	bne.n	801978a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8019762:	0972      	lsrs	r2, r6, #5
 8019764:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8019768:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801976c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019770:	f025 0507 	bic.w	r5, r5, #7
 8019774:	4315      	orrs	r5, r2
 8019776:	4335      	orrs	r5, r6
 8019778:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 801977c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801977e:	f108 0801 	add.w	r8, r8, #1
 8019782:	4410      	add	r0, r2
 8019784:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019786:	4411      	add	r1, r2
 8019788:	e7c9      	b.n	801971e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801978a:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 801978e:	fa1f fa82 	uxth.w	sl, r2
 8019792:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8019796:	43d2      	mvns	r2, r2
 8019798:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801979c:	fb17 f70a 	smulbb	r7, r7, sl
 80197a0:	b2d2      	uxtb	r2, r2
 80197a2:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80197a6:	b2f6      	uxtb	r6, r6
 80197a8:	b2ed      	uxtb	r5, r5
 80197aa:	fb0c 7c02 	mla	ip, ip, r2, r7
 80197ae:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80197b2:	fb16 f60a 	smulbb	r6, r6, sl
 80197b6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80197ba:	fa1f fc8c 	uxth.w	ip, ip
 80197be:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80197c2:	fb15 f50a 	smulbb	r5, r5, sl
 80197c6:	fa5f fe8e 	uxtb.w	lr, lr
 80197ca:	fb0e 6602 	mla	r6, lr, r2, r6
 80197ce:	fb07 5702 	mla	r7, r7, r2, r5
 80197d2:	f10c 0201 	add.w	r2, ip, #1
 80197d6:	b2b6      	uxth	r6, r6
 80197d8:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80197dc:	1c75      	adds	r5, r6, #1
 80197de:	b2bf      	uxth	r7, r7
 80197e0:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80197e4:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 80197e8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80197ec:	ea45 0c0c 	orr.w	ip, r5, ip
 80197f0:	1c7d      	adds	r5, r7, #1
 80197f2:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 80197f6:	096d      	lsrs	r5, r5, #5
 80197f8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80197fc:	ea4c 0c05 	orr.w	ip, ip, r5
 8019800:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8019804:	e7ba      	b.n	801977c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8019806:	b007      	add	sp, #28
 8019808:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801980c:	24001a38 	.word	0x24001a38

08019810 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019810:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019814:	b087      	sub	sp, #28
 8019816:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801981a:	f8df 8308 	ldr.w	r8, [pc, #776]	@ 8019b24 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801981e:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8019820:	9101      	str	r1, [sp, #4]
 8019822:	9205      	str	r2, [sp, #20]
 8019824:	6841      	ldr	r1, [r0, #4]
 8019826:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 801982a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801982e:	fb01 2404 	mla	r4, r1, r4, r2
 8019832:	6802      	ldr	r2, [r0, #0]
 8019834:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019838:	f8db 2008 	ldr.w	r2, [fp, #8]
 801983c:	3201      	adds	r2, #1
 801983e:	f022 0201 	bic.w	r2, r2, #1
 8019842:	9202      	str	r2, [sp, #8]
 8019844:	f8db 2000 	ldr.w	r2, [fp]
 8019848:	9203      	str	r2, [sp, #12]
 801984a:	9a01      	ldr	r2, [sp, #4]
 801984c:	2a00      	cmp	r2, #0
 801984e:	dc03      	bgt.n	8019858 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8019850:	9a05      	ldr	r2, [sp, #20]
 8019852:	2a00      	cmp	r2, #0
 8019854:	f340 8162 	ble.w	8019b1c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8019858:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801985a:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 801985e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8019862:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8019864:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8019868:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801986c:	2b00      	cmp	r3, #0
 801986e:	dd0e      	ble.n	801988e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019870:	1402      	asrs	r2, r0, #16
 8019872:	d405      	bmi.n	8019880 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019874:	42ba      	cmp	r2, r7
 8019876:	da03      	bge.n	8019880 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019878:	140a      	asrs	r2, r1, #16
 801987a:	d401      	bmi.n	8019880 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801987c:	42b2      	cmp	r2, r6
 801987e:	db07      	blt.n	8019890 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8019880:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019882:	3b01      	subs	r3, #1
 8019884:	3402      	adds	r4, #2
 8019886:	4410      	add	r0, r2
 8019888:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801988a:	4411      	add	r1, r2
 801988c:	e7ee      	b.n	801986c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 801988e:	d017      	beq.n	80198c0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8019890:	1e5a      	subs	r2, r3, #1
 8019892:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8019894:	fb05 0502 	mla	r5, r5, r2, r0
 8019898:	142d      	asrs	r5, r5, #16
 801989a:	d409      	bmi.n	80198b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801989c:	42bd      	cmp	r5, r7
 801989e:	da07      	bge.n	80198b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80198a0:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80198a2:	fb05 1202 	mla	r2, r5, r2, r1
 80198a6:	1412      	asrs	r2, r2, #16
 80198a8:	d402      	bmi.n	80198b0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80198aa:	42b2      	cmp	r2, r6
 80198ac:	f2c0 80c3 	blt.w	8019a36 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 80198b0:	2500      	movs	r5, #0
 80198b2:	195a      	adds	r2, r3, r5
 80198b4:	2a00      	cmp	r2, #0
 80198b6:	dc3f      	bgt.n	8019938 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80198b8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80198bc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80198c0:	9b01      	ldr	r3, [sp, #4]
 80198c2:	2b00      	cmp	r3, #0
 80198c4:	f340 812a 	ble.w	8019b1c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80198c8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80198cc:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80198ce:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80198d2:	eeb0 6a62 	vmov.f32	s12, s5
 80198d6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80198da:	ee31 1a05 	vadd.f32	s2, s2, s10
 80198de:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80198e2:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80198e6:	eeb0 6a43 	vmov.f32	s12, s6
 80198ea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80198ee:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 80198f2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80198f6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80198fa:	ee77 2a62 	vsub.f32	s5, s14, s5
 80198fe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019902:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019906:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801990a:	ee12 2a90 	vmov	r2, s5
 801990e:	eef0 2a47 	vmov.f32	s5, s14
 8019912:	fb92 f3f3 	sdiv	r3, r2, r3
 8019916:	ee13 2a10 	vmov	r2, s6
 801991a:	9313      	str	r3, [sp, #76]	@ 0x4c
 801991c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801991e:	eeb0 3a67 	vmov.f32	s6, s15
 8019922:	fb92 f3f3 	sdiv	r3, r2, r3
 8019926:	9314      	str	r3, [sp, #80]	@ 0x50
 8019928:	9b01      	ldr	r3, [sp, #4]
 801992a:	9a05      	ldr	r2, [sp, #20]
 801992c:	3b01      	subs	r3, #1
 801992e:	9301      	str	r3, [sp, #4]
 8019930:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019932:	bf08      	it	eq
 8019934:	4613      	moveq	r3, r2
 8019936:	e788      	b.n	801984a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8019938:	1406      	asrs	r6, r0, #16
 801993a:	d42c      	bmi.n	8019996 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801993c:	f8db 2008 	ldr.w	r2, [fp, #8]
 8019940:	42b2      	cmp	r2, r6
 8019942:	dd28      	ble.n	8019996 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019944:	140f      	asrs	r7, r1, #16
 8019946:	d426      	bmi.n	8019996 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019948:	f8db 200c 	ldr.w	r2, [fp, #12]
 801994c:	42ba      	cmp	r2, r7
 801994e:	dd22      	ble.n	8019996 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019950:	9a02      	ldr	r2, [sp, #8]
 8019952:	fb07 6602 	mla	r6, r7, r2, r6
 8019956:	9f03      	ldr	r7, [sp, #12]
 8019958:	0872      	lsrs	r2, r6, #1
 801995a:	07f6      	lsls	r6, r6, #31
 801995c:	5cba      	ldrb	r2, [r7, r2]
 801995e:	bf54      	ite	pl
 8019960:	f002 020f 	andpl.w	r2, r2, #15
 8019964:	1112      	asrmi	r2, r2, #4
 8019966:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801996a:	b2d2      	uxtb	r2, r2
 801996c:	2aff      	cmp	r2, #255	@ 0xff
 801996e:	d118      	bne.n	80199a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8019970:	f06f 0601 	mvn.w	r6, #1
 8019974:	f8d8 2000 	ldr.w	r2, [r8]
 8019978:	fb06 f705 	mul.w	r7, r6, r5
 801997c:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 8019980:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8019984:	0956      	lsrs	r6, r2, #5
 8019986:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801998a:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801998e:	ea4c 0606 	orr.w	r6, ip, r6
 8019992:	4316      	orrs	r6, r2
 8019994:	53e6      	strh	r6, [r4, r7]
 8019996:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019998:	3d01      	subs	r5, #1
 801999a:	4410      	add	r0, r2
 801999c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801999e:	4411      	add	r1, r2
 80199a0:	e787      	b.n	80198b2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80199a2:	2a00      	cmp	r2, #0
 80199a4:	d0f7      	beq.n	8019996 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80199a6:	f06f 0601 	mvn.w	r6, #1
 80199aa:	f8d8 c000 	ldr.w	ip, [r8]
 80199ae:	fa1f f982 	uxth.w	r9, r2
 80199b2:	43d2      	mvns	r2, r2
 80199b4:	436e      	muls	r6, r5
 80199b6:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 80199ba:	b2d2      	uxtb	r2, r2
 80199bc:	f834 e006 	ldrh.w	lr, [r4, r6]
 80199c0:	fb1a fa09 	smulbb	sl, sl, r9
 80199c4:	9604      	str	r6, [sp, #16]
 80199c6:	f3cc 4607 	ubfx	r6, ip, #16, #8
 80199ca:	ea4f 272e 	mov.w	r7, lr, asr #8
 80199ce:	fb16 f609 	smulbb	r6, r6, r9
 80199d2:	fa5f fc8c 	uxtb.w	ip, ip
 80199d6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80199da:	fb1c fc09 	smulbb	ip, ip, r9
 80199de:	fb07 6702 	mla	r7, r7, r2, r6
 80199e2:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80199e6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80199ea:	b2bf      	uxth	r7, r7
 80199ec:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80199f0:	fa5f fe8e 	uxtb.w	lr, lr
 80199f4:	fb06 a602 	mla	r6, r6, r2, sl
 80199f8:	fb0e cc02 	mla	ip, lr, r2, ip
 80199fc:	1c7a      	adds	r2, r7, #1
 80199fe:	b2b6      	uxth	r6, r6
 8019a00:	fa1f fc8c 	uxth.w	ip, ip
 8019a04:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8019a08:	9a04      	ldr	r2, [sp, #16]
 8019a0a:	f10c 0a01 	add.w	sl, ip, #1
 8019a0e:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8019a12:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8019a16:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019a1a:	ea4a 0707 	orr.w	r7, sl, r7
 8019a1e:	f106 0a01 	add.w	sl, r6, #1
 8019a22:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019a26:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019a2a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8019a2e:	ea47 070a 	orr.w	r7, r7, sl
 8019a32:	52a7      	strh	r7, [r4, r2]
 8019a34:	e7af      	b.n	8019996 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019a36:	f04f 0e00 	mov.w	lr, #0
 8019a3a:	eba3 020e 	sub.w	r2, r3, lr
 8019a3e:	2a00      	cmp	r2, #0
 8019a40:	f77f af3a 	ble.w	80198b8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019a44:	1402      	asrs	r2, r0, #16
 8019a46:	9e02      	ldr	r6, [sp, #8]
 8019a48:	140d      	asrs	r5, r1, #16
 8019a4a:	fb06 2505 	mla	r5, r6, r5, r2
 8019a4e:	9e03      	ldr	r6, [sp, #12]
 8019a50:	086a      	lsrs	r2, r5, #1
 8019a52:	07ed      	lsls	r5, r5, #31
 8019a54:	5cb2      	ldrb	r2, [r6, r2]
 8019a56:	bf54      	ite	pl
 8019a58:	f002 020f 	andpl.w	r2, r2, #15
 8019a5c:	1112      	asrmi	r2, r2, #4
 8019a5e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019a62:	b2d2      	uxtb	r2, r2
 8019a64:	2aff      	cmp	r2, #255	@ 0xff
 8019a66:	d115      	bne.n	8019a94 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8019a68:	f8d8 5000 	ldr.w	r5, [r8]
 8019a6c:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 8019a70:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8019a74:	096a      	lsrs	r2, r5, #5
 8019a76:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8019a7a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019a7e:	4332      	orrs	r2, r6
 8019a80:	432a      	orrs	r2, r5
 8019a82:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8019a86:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019a88:	f10e 0e01 	add.w	lr, lr, #1
 8019a8c:	4410      	add	r0, r2
 8019a8e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019a90:	4411      	add	r1, r2
 8019a92:	e7d2      	b.n	8019a3a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8019a94:	2a00      	cmp	r2, #0
 8019a96:	d0f6      	beq.n	8019a86 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8019a98:	f8d8 7000 	ldr.w	r7, [r8]
 8019a9c:	fa1f f982 	uxth.w	r9, r2
 8019aa0:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8019aa4:	43d2      	mvns	r2, r2
 8019aa6:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8019aaa:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8019aae:	ea4f 262c 	mov.w	r6, ip, asr #8
 8019ab2:	fb15 f509 	smulbb	r5, r5, r9
 8019ab6:	b2d2      	uxtb	r2, r2
 8019ab8:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8019abc:	b2ff      	uxtb	r7, r7
 8019abe:	fb1a fa09 	smulbb	sl, sl, r9
 8019ac2:	fb06 5602 	mla	r6, r6, r2, r5
 8019ac6:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8019aca:	fb17 f709 	smulbb	r7, r7, r9
 8019ace:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8019ad2:	b2b6      	uxth	r6, r6
 8019ad4:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8019ad8:	fa5f fc8c 	uxtb.w	ip, ip
 8019adc:	fb05 a502 	mla	r5, r5, r2, sl
 8019ae0:	fb0c 7702 	mla	r7, ip, r2, r7
 8019ae4:	1c72      	adds	r2, r6, #1
 8019ae6:	b2ad      	uxth	r5, r5
 8019ae8:	b2bf      	uxth	r7, r7
 8019aea:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8019aee:	f107 0a01 	add.w	sl, r7, #1
 8019af2:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 8019af6:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8019afa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019afe:	ea4a 0606 	orr.w	r6, sl, r6
 8019b02:	f105 0a01 	add.w	sl, r5, #1
 8019b06:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019b0a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019b0e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8019b12:	ea46 060a 	orr.w	r6, r6, sl
 8019b16:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8019b1a:	e7b4      	b.n	8019a86 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8019b1c:	b007      	add	sp, #28
 8019b1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019b22:	bf00      	nop
 8019b24:	24001a38 	.word	0x24001a38

08019b28 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
 8019b28:	4770      	bx	lr

08019b2a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 8019b2a:	4770      	bx	lr

08019b2c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 8019b2c:	4770      	bx	lr

08019b2e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 8019b2e:	4770      	bx	lr

08019b30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8019b30:	4770      	bx	lr

08019b32 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8019b32:	4770      	bx	lr

08019b34 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8019b34:	4770      	bx	lr

08019b36 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8019b36:	4770      	bx	lr

08019b38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8019b38:	4770      	bx	lr

08019b3a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8019b3a:	4770      	bx	lr

08019b3c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8019b3c:	4770      	bx	lr

08019b3e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8019b3e:	4770      	bx	lr

08019b40 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8019b40:	4770      	bx	lr

08019b42 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8019b42:	4770      	bx	lr

08019b44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8019b44:	4770      	bx	lr

08019b46 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8019b46:	4770      	bx	lr

08019b48 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8019b48:	4770      	bx	lr

08019b4a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8019b4a:	4770      	bx	lr

08019b4c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8019b4c:	4770      	bx	lr

08019b4e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8019b4e:	4770      	bx	lr

08019b50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8019b50:	4770      	bx	lr

08019b52 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8019b52:	4770      	bx	lr

08019b54 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8019b54:	4770      	bx	lr

08019b56 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8019b56:	4770      	bx	lr

08019b58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8019b58:	4770      	bx	lr

08019b5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8019b5a:	4770      	bx	lr

08019b5c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8019b5c:	4770      	bx	lr

08019b5e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8019b5e:	4770      	bx	lr

08019b60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8019b60:	4770      	bx	lr

08019b62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8019b62:	4770      	bx	lr

08019b64 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8019b64:	4770      	bx	lr

08019b66 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8019b66:	4770      	bx	lr

08019b68 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8019b68:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019b6c:	b088      	sub	sp, #32
 8019b6e:	4606      	mov	r6, r0
 8019b70:	4688      	mov	r8, r1
 8019b72:	4691      	mov	r9, r2
 8019b74:	ac08      	add	r4, sp, #32
 8019b76:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8019b7a:	4620      	mov	r0, r4
 8019b7c:	f7fd fc32 	bl	80173e4 <_ZNK8touchgfx6Bitmap7getDataEv>
 8019b80:	6833      	ldr	r3, [r6, #0]
 8019b82:	4605      	mov	r5, r0
 8019b84:	4620      	mov	r0, r4
 8019b86:	699f      	ldr	r7, [r3, #24]
 8019b88:	f7fd fb3a 	bl	8017200 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8019b8c:	4682      	mov	sl, r0
 8019b8e:	4620      	mov	r0, r4
 8019b90:	f7fd fb6a 	bl	8017268 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8019b94:	9500      	str	r5, [sp, #0]
 8019b96:	464b      	mov	r3, r9
 8019b98:	4642      	mov	r2, r8
 8019b9a:	4631      	mov	r1, r6
 8019b9c:	e9cd a001 	strd	sl, r0, [sp, #4]
 8019ba0:	a806      	add	r0, sp, #24
 8019ba2:	47b8      	blx	r7
 8019ba4:	4628      	mov	r0, r5
 8019ba6:	b008      	add	sp, #32
 8019ba8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08019bac <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8019bac:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8019bb0:	2300      	movs	r3, #0
 8019bb2:	9300      	str	r3, [sp, #0]
 8019bb4:	4b3d      	ldr	r3, [pc, #244]	@ (8019cac <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8019bb6:	781b      	ldrb	r3, [r3, #0]
 8019bb8:	2b00      	cmp	r3, #0
 8019bba:	d137      	bne.n	8019c2c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8019bbc:	4a3c      	ldr	r2, [pc, #240]	@ (8019cb0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8019bbe:	f9b2 2000 	ldrsh.w	r2, [r2]
 8019bc2:	f8ad 2004 	strh.w	r2, [sp, #4]
 8019bc6:	2b00      	cmp	r3, #0
 8019bc8:	d132      	bne.n	8019c30 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8019bca:	4b3a      	ldr	r3, [pc, #232]	@ (8019cb4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8019bcc:	f9b3 3000 	ldrsh.w	r3, [r3]
 8019bd0:	ac02      	add	r4, sp, #8
 8019bd2:	6808      	ldr	r0, [r1, #0]
 8019bd4:	f8ad 3006 	strh.w	r3, [sp, #6]
 8019bd8:	ab02      	add	r3, sp, #8
 8019bda:	6849      	ldr	r1, [r1, #4]
 8019bdc:	4d36      	ldr	r5, [pc, #216]	@ (8019cb8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8019bde:	c303      	stmia	r3!, {r0, r1}
 8019be0:	4669      	mov	r1, sp
 8019be2:	4620      	mov	r0, r4
 8019be4:	f7fa fc98 	bl	8014518 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019be8:	4668      	mov	r0, sp
 8019bea:	f7fa fc6d 	bl	80144c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019bee:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8019bf2:	f8bd 2000 	ldrh.w	r2, [sp]
 8019bf6:	462f      	mov	r7, r5
 8019bf8:	6828      	ldr	r0, [r5, #0]
 8019bfa:	4413      	add	r3, r2
 8019bfc:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8019c00:	f8ad 3008 	strh.w	r3, [sp, #8]
 8019c04:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8019c08:	4413      	add	r3, r2
 8019c0a:	f8ad 300a 	strh.w	r3, [sp, #10]
 8019c0e:	6803      	ldr	r3, [r0, #0]
 8019c10:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8019c12:	4798      	blx	r3
 8019c14:	f010 0f01 	tst.w	r0, #1
 8019c18:	d00c      	beq.n	8019c34 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8019c1a:	6828      	ldr	r0, [r5, #0]
 8019c1c:	6803      	ldr	r3, [r0, #0]
 8019c1e:	e894 0006 	ldmia.w	r4, {r1, r2}
 8019c22:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8019c24:	4798      	blx	r3
 8019c26:	b004      	add	sp, #16
 8019c28:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019c2c:	4a21      	ldr	r2, [pc, #132]	@ (8019cb4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8019c2e:	e7c6      	b.n	8019bbe <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8019c30:	4b1f      	ldr	r3, [pc, #124]	@ (8019cb0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8019c32:	e7cb      	b.n	8019bcc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8019c34:	6838      	ldr	r0, [r7, #0]
 8019c36:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8019c3a:	6803      	ldr	r3, [r0, #0]
 8019c3c:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8019c40:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8019c44:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8019c46:	4798      	blx	r3
 8019c48:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8019c4c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8019c50:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8019c54:	fb16 3602 	smlabb	r6, r6, r2, r3
 8019c58:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8019c5c:	6838      	ldr	r0, [r7, #0]
 8019c5e:	6803      	ldr	r3, [r0, #0]
 8019c60:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8019c62:	4798      	blx	r3
 8019c64:	4a12      	ldr	r2, [pc, #72]	@ (8019cb0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8019c66:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8019c6a:	8813      	ldrh	r3, [r2, #0]
 8019c6c:	4691      	mov	r9, r2
 8019c6e:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8019c72:	435d      	muls	r5, r3
 8019c74:	fb03 1404 	mla	r4, r3, r4, r1
 8019c78:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8019c7c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8019c80:	6838      	ldr	r0, [r7, #0]
 8019c82:	42ac      	cmp	r4, r5
 8019c84:	6803      	ldr	r3, [r0, #0]
 8019c86:	d20e      	bcs.n	8019ca6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8019c88:	f8d3 a034 	ldr.w	sl, [r3, #52]	@ 0x34
 8019c8c:	4632      	mov	r2, r6
 8019c8e:	4643      	mov	r3, r8
 8019c90:	4621      	mov	r1, r4
 8019c92:	47d0      	blx	sl
 8019c94:	f8b9 3000 	ldrh.w	r3, [r9]
 8019c98:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019c9c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8019ca0:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8019ca4:	e7ec      	b.n	8019c80 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8019ca6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019ca8:	4798      	blx	r3
 8019caa:	e7bc      	b.n	8019c26 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8019cac:	24001a28 	.word	0x24001a28
 8019cb0:	24001a2a 	.word	0x24001a2a
 8019cb4:	24001a2c 	.word	0x24001a2c
 8019cb8:	24001a30 	.word	0x24001a30

08019cbc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8019cbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019cc0:	b08b      	sub	sp, #44	@ 0x2c
 8019cc2:	460f      	mov	r7, r1
 8019cc4:	4616      	mov	r6, r2
 8019cc6:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 8019cca:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 8019cce:	f1bb 0f00 	cmp.w	fp, #0
 8019cd2:	d04a      	beq.n	8019d6a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8019cd4:	6810      	ldr	r0, [r2, #0]
 8019cd6:	ad06      	add	r5, sp, #24
 8019cd8:	6851      	ldr	r1, [r2, #4]
 8019cda:	c503      	stmia	r5!, {r0, r1}
 8019cdc:	6818      	ldr	r0, [r3, #0]
 8019cde:	ad08      	add	r5, sp, #32
 8019ce0:	6859      	ldr	r1, [r3, #4]
 8019ce2:	c503      	stmia	r5!, {r0, r1}
 8019ce4:	a806      	add	r0, sp, #24
 8019ce6:	f7fa fbef 	bl	80144c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8019cea:	4631      	mov	r1, r6
 8019cec:	a808      	add	r0, sp, #32
 8019cee:	f7fa fc13 	bl	8014518 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8019cf2:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8019cf6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 8019cfa:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8019cfe:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 8019d02:	fb16 2103 	smlabb	r1, r6, r3, r2
 8019d06:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 8019d0a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8019d0e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8019d12:	4f5f      	ldr	r7, [pc, #380]	@ (8019e90 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8019d14:	440a      	add	r2, r1
 8019d16:	6838      	ldr	r0, [r7, #0]
 8019d18:	46b9      	mov	r9, r7
 8019d1a:	f8ad 2020 	strh.w	r2, [sp, #32]
 8019d1e:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8019d22:	4413      	add	r3, r2
 8019d24:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8019d28:	6803      	ldr	r3, [r0, #0]
 8019d2a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8019d2c:	4798      	blx	r3
 8019d2e:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8019d32:	d11d      	bne.n	8019d70 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8019d34:	b9fc      	cbnz	r4, 8019d76 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8019d36:	f010 0f01 	tst.w	r0, #1
 8019d3a:	d01c      	beq.n	8019d76 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8019d3c:	f8d9 0000 	ldr.w	r0, [r9]
 8019d40:	2700      	movs	r7, #0
 8019d42:	b2ad      	uxth	r5, r5
 8019d44:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8019d48:	6801      	ldr	r1, [r0, #0]
 8019d4a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8019d4e:	f8cd b00c 	str.w	fp, [sp, #12]
 8019d52:	9501      	str	r5, [sp, #4]
 8019d54:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8019d58:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8019d5c:	9402      	str	r4, [sp, #8]
 8019d5e:	fa1f f488 	uxth.w	r4, r8
 8019d62:	9400      	str	r4, [sp, #0]
 8019d64:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
 8019d66:	4631      	mov	r1, r6
 8019d68:	47a0      	blx	r4
 8019d6a:	b00b      	add	sp, #44	@ 0x2c
 8019d6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019d70:	f010 0f04 	tst.w	r0, #4
 8019d74:	e7e1      	b.n	8019d3a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 8019d76:	f8d9 0000 	ldr.w	r0, [r9]
 8019d7a:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8019d7e:	6803      	ldr	r3, [r0, #0]
 8019d80:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8019d82:	4798      	blx	r3
 8019d84:	4b43      	ldr	r3, [pc, #268]	@ (8019e94 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8019d86:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 8019d8a:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 8019d8e:	881a      	ldrh	r2, [r3, #0]
 8019d90:	469a      	mov	sl, r3
 8019d92:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8019d96:	fb05 f502 	mul.w	r5, r5, r2
 8019d9a:	fb02 1404 	mla	r4, r2, r4, r1
 8019d9e:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8019da2:	d059      	beq.n	8019e58 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8019da4:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 8019da8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8019dac:	fa1f f28b 	uxth.w	r2, fp
 8019db0:	469e      	mov	lr, r3
 8019db2:	fa1f f989 	uxth.w	r9, r9
 8019db6:	42ac      	cmp	r4, r5
 8019db8:	d264      	bcs.n	8019e84 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8019dba:	eb04 0a07 	add.w	sl, r4, r7
 8019dbe:	4554      	cmp	r4, sl
 8019dc0:	d23d      	bcs.n	8019e3e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8019dc2:	8821      	ldrh	r1, [r4, #0]
 8019dc4:	f836 3b02 	ldrh.w	r3, [r6], #2
 8019dc8:	1208      	asrs	r0, r1, #8
 8019dca:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8019dce:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8019dd2:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8019dd6:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8019dda:	00c9      	lsls	r1, r1, #3
 8019ddc:	fb10 f009 	smulbb	r0, r0, r9
 8019de0:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 8019de4:	b2c9      	uxtb	r1, r1
 8019de6:	fb0c 0c02 	mla	ip, ip, r2, r0
 8019dea:	10d8      	asrs	r0, r3, #3
 8019dec:	fb1b fb09 	smulbb	fp, fp, r9
 8019df0:	00db      	lsls	r3, r3, #3
 8019df2:	fa1f fc8c 	uxth.w	ip, ip
 8019df6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8019dfa:	fb11 f109 	smulbb	r1, r1, r9
 8019dfe:	b2db      	uxtb	r3, r3
 8019e00:	fb00 b002 	mla	r0, r0, r2, fp
 8019e04:	f10c 0b01 	add.w	fp, ip, #1
 8019e08:	fb03 1302 	mla	r3, r3, r2, r1
 8019e0c:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8019e10:	b29b      	uxth	r3, r3
 8019e12:	b280      	uxth	r0, r0
 8019e14:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 8019e18:	f103 0c01 	add.w	ip, r3, #1
 8019e1c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8019e20:	1c43      	adds	r3, r0, #1
 8019e22:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8019e26:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8019e2a:	0940      	lsrs	r0, r0, #5
 8019e2c:	ea4c 0c0b 	orr.w	ip, ip, fp
 8019e30:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8019e34:	ea4c 0c00 	orr.w	ip, ip, r0
 8019e38:	f824 cb02 	strh.w	ip, [r4], #2
 8019e3c:	e7bf      	b.n	8019dbe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8019e3e:	f8be 3000 	ldrh.w	r3, [lr]
 8019e42:	eba3 0308 	sub.w	r3, r3, r8
 8019e46:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019e4a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8019e4e:	eba3 0308 	sub.w	r3, r3, r8
 8019e52:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8019e56:	e7ae      	b.n	8019db6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8019e58:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8019e5c:	f8d9 0000 	ldr.w	r0, [r9]
 8019e60:	42ac      	cmp	r4, r5
 8019e62:	6803      	ldr	r3, [r0, #0]
 8019e64:	d20e      	bcs.n	8019e84 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8019e66:	f8d3 8034 	ldr.w	r8, [r3, #52]	@ 0x34
 8019e6a:	4632      	mov	r2, r6
 8019e6c:	463b      	mov	r3, r7
 8019e6e:	4621      	mov	r1, r4
 8019e70:	47c0      	blx	r8
 8019e72:	f8ba 3000 	ldrh.w	r3, [sl]
 8019e76:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019e7a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8019e7e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8019e82:	e7eb      	b.n	8019e5c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8019e84:	4b02      	ldr	r3, [pc, #8]	@ (8019e90 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8019e86:	6818      	ldr	r0, [r3, #0]
 8019e88:	6803      	ldr	r3, [r0, #0]
 8019e8a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8019e8c:	4798      	blx	r3
 8019e8e:	e76c      	b.n	8019d6a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 8019e90:	24001a30 	.word	0x24001a30
 8019e94:	24001a2a 	.word	0x24001a2a

08019e98 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 8019e98:	b510      	push	{r4, lr}
 8019e9a:	4604      	mov	r4, r0
 8019e9c:	2104      	movs	r1, #4
 8019e9e:	f00b fc96 	bl	80257ce <_ZdlPvj>
 8019ea2:	4620      	mov	r0, r4
 8019ea4:	bd10      	pop	{r4, pc}

08019ea6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 8019ea6:	b510      	push	{r4, lr}
 8019ea8:	4604      	mov	r4, r0
 8019eaa:	2104      	movs	r1, #4
 8019eac:	f00b fc8f 	bl	80257ce <_ZdlPvj>
 8019eb0:	4620      	mov	r0, r4
 8019eb2:	bd10      	pop	{r4, pc}

08019eb4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 8019eb4:	b510      	push	{r4, lr}
 8019eb6:	4604      	mov	r4, r0
 8019eb8:	f640 0144 	movw	r1, #2116	@ 0x844
 8019ebc:	f00b fc87 	bl	80257ce <_ZdlPvj>
 8019ec0:	4620      	mov	r0, r4
 8019ec2:	bd10      	pop	{r4, pc}

08019ec4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
 8019ec4:	b510      	push	{r4, lr}
 8019ec6:	4604      	mov	r4, r0
 8019ec8:	f44f 7182 	mov.w	r1, #260	@ 0x104
 8019ecc:	f00b fc7f 	bl	80257ce <_ZdlPvj>
 8019ed0:	4620      	mov	r0, r4
 8019ed2:	bd10      	pop	{r4, pc}

08019ed4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8019ed4:	b510      	push	{r4, lr}
 8019ed6:	4604      	mov	r4, r0
 8019ed8:	2104      	movs	r1, #4
 8019eda:	f00b fc78 	bl	80257ce <_ZdlPvj>
 8019ede:	4620      	mov	r0, r4
 8019ee0:	bd10      	pop	{r4, pc}

08019ee2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8019ee2:	b510      	push	{r4, lr}
 8019ee4:	4604      	mov	r4, r0
 8019ee6:	2104      	movs	r1, #4
 8019ee8:	f00b fc71 	bl	80257ce <_ZdlPvj>
 8019eec:	4620      	mov	r0, r4
 8019eee:	bd10      	pop	{r4, pc}

08019ef0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8019ef0:	b510      	push	{r4, lr}
 8019ef2:	4604      	mov	r4, r0
 8019ef4:	2104      	movs	r1, #4
 8019ef6:	f00b fc6a 	bl	80257ce <_ZdlPvj>
 8019efa:	4620      	mov	r0, r4
 8019efc:	bd10      	pop	{r4, pc}

08019efe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8019efe:	b510      	push	{r4, lr}
 8019f00:	4604      	mov	r4, r0
 8019f02:	2104      	movs	r1, #4
 8019f04:	f00b fc63 	bl	80257ce <_ZdlPvj>
 8019f08:	4620      	mov	r0, r4
 8019f0a:	bd10      	pop	{r4, pc}

08019f0c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8019f0c:	b510      	push	{r4, lr}
 8019f0e:	4604      	mov	r4, r0
 8019f10:	2104      	movs	r1, #4
 8019f12:	f00b fc5c 	bl	80257ce <_ZdlPvj>
 8019f16:	4620      	mov	r0, r4
 8019f18:	bd10      	pop	{r4, pc}

08019f1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8019f1a:	b510      	push	{r4, lr}
 8019f1c:	4604      	mov	r4, r0
 8019f1e:	2104      	movs	r1, #4
 8019f20:	f00b fc55 	bl	80257ce <_ZdlPvj>
 8019f24:	4620      	mov	r0, r4
 8019f26:	bd10      	pop	{r4, pc}

08019f28 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8019f28:	b510      	push	{r4, lr}
 8019f2a:	4604      	mov	r4, r0
 8019f2c:	2104      	movs	r1, #4
 8019f2e:	f00b fc4e 	bl	80257ce <_ZdlPvj>
 8019f32:	4620      	mov	r0, r4
 8019f34:	bd10      	pop	{r4, pc}

08019f36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8019f36:	b510      	push	{r4, lr}
 8019f38:	4604      	mov	r4, r0
 8019f3a:	2104      	movs	r1, #4
 8019f3c:	f00b fc47 	bl	80257ce <_ZdlPvj>
 8019f40:	4620      	mov	r0, r4
 8019f42:	bd10      	pop	{r4, pc}

08019f44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8019f44:	b510      	push	{r4, lr}
 8019f46:	4604      	mov	r4, r0
 8019f48:	2104      	movs	r1, #4
 8019f4a:	f00b fc40 	bl	80257ce <_ZdlPvj>
 8019f4e:	4620      	mov	r0, r4
 8019f50:	bd10      	pop	{r4, pc}

08019f52 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8019f52:	b510      	push	{r4, lr}
 8019f54:	4604      	mov	r4, r0
 8019f56:	2104      	movs	r1, #4
 8019f58:	f00b fc39 	bl	80257ce <_ZdlPvj>
 8019f5c:	4620      	mov	r0, r4
 8019f5e:	bd10      	pop	{r4, pc}

08019f60 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8019f60:	b510      	push	{r4, lr}
 8019f62:	4604      	mov	r4, r0
 8019f64:	2104      	movs	r1, #4
 8019f66:	f00b fc32 	bl	80257ce <_ZdlPvj>
 8019f6a:	4620      	mov	r0, r4
 8019f6c:	bd10      	pop	{r4, pc}

08019f6e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8019f6e:	b510      	push	{r4, lr}
 8019f70:	4604      	mov	r4, r0
 8019f72:	2104      	movs	r1, #4
 8019f74:	f00b fc2b 	bl	80257ce <_ZdlPvj>
 8019f78:	4620      	mov	r0, r4
 8019f7a:	bd10      	pop	{r4, pc}

08019f7c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8019f7c:	b510      	push	{r4, lr}
 8019f7e:	4604      	mov	r4, r0
 8019f80:	2104      	movs	r1, #4
 8019f82:	f00b fc24 	bl	80257ce <_ZdlPvj>
 8019f86:	4620      	mov	r0, r4
 8019f88:	bd10      	pop	{r4, pc}

08019f8a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8019f8a:	b510      	push	{r4, lr}
 8019f8c:	4604      	mov	r4, r0
 8019f8e:	2104      	movs	r1, #4
 8019f90:	f00b fc1d 	bl	80257ce <_ZdlPvj>
 8019f94:	4620      	mov	r0, r4
 8019f96:	bd10      	pop	{r4, pc}

08019f98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8019f98:	b510      	push	{r4, lr}
 8019f9a:	4604      	mov	r4, r0
 8019f9c:	2104      	movs	r1, #4
 8019f9e:	f00b fc16 	bl	80257ce <_ZdlPvj>
 8019fa2:	4620      	mov	r0, r4
 8019fa4:	bd10      	pop	{r4, pc}

08019fa6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8019fa6:	b510      	push	{r4, lr}
 8019fa8:	4604      	mov	r4, r0
 8019faa:	2104      	movs	r1, #4
 8019fac:	f00b fc0f 	bl	80257ce <_ZdlPvj>
 8019fb0:	4620      	mov	r0, r4
 8019fb2:	bd10      	pop	{r4, pc}

08019fb4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8019fb4:	b510      	push	{r4, lr}
 8019fb6:	4604      	mov	r4, r0
 8019fb8:	2104      	movs	r1, #4
 8019fba:	f00b fc08 	bl	80257ce <_ZdlPvj>
 8019fbe:	4620      	mov	r0, r4
 8019fc0:	bd10      	pop	{r4, pc}

08019fc2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8019fc2:	b510      	push	{r4, lr}
 8019fc4:	4604      	mov	r4, r0
 8019fc6:	2104      	movs	r1, #4
 8019fc8:	f00b fc01 	bl	80257ce <_ZdlPvj>
 8019fcc:	4620      	mov	r0, r4
 8019fce:	bd10      	pop	{r4, pc}

08019fd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8019fd0:	b510      	push	{r4, lr}
 8019fd2:	4604      	mov	r4, r0
 8019fd4:	2104      	movs	r1, #4
 8019fd6:	f00b fbfa 	bl	80257ce <_ZdlPvj>
 8019fda:	4620      	mov	r0, r4
 8019fdc:	bd10      	pop	{r4, pc}

08019fde <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8019fde:	b510      	push	{r4, lr}
 8019fe0:	4604      	mov	r4, r0
 8019fe2:	2104      	movs	r1, #4
 8019fe4:	f00b fbf3 	bl	80257ce <_ZdlPvj>
 8019fe8:	4620      	mov	r0, r4
 8019fea:	bd10      	pop	{r4, pc}

08019fec <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8019fec:	b510      	push	{r4, lr}
 8019fee:	4604      	mov	r4, r0
 8019ff0:	2104      	movs	r1, #4
 8019ff2:	f00b fbec 	bl	80257ce <_ZdlPvj>
 8019ff6:	4620      	mov	r0, r4
 8019ff8:	bd10      	pop	{r4, pc}

08019ffa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8019ffa:	b510      	push	{r4, lr}
 8019ffc:	4604      	mov	r4, r0
 8019ffe:	2104      	movs	r1, #4
 801a000:	f00b fbe5 	bl	80257ce <_ZdlPvj>
 801a004:	4620      	mov	r0, r4
 801a006:	bd10      	pop	{r4, pc}

0801a008 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801a008:	b510      	push	{r4, lr}
 801a00a:	4604      	mov	r4, r0
 801a00c:	2104      	movs	r1, #4
 801a00e:	f00b fbde 	bl	80257ce <_ZdlPvj>
 801a012:	4620      	mov	r0, r4
 801a014:	bd10      	pop	{r4, pc}

0801a016 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801a016:	b510      	push	{r4, lr}
 801a018:	4604      	mov	r4, r0
 801a01a:	2104      	movs	r1, #4
 801a01c:	f00b fbd7 	bl	80257ce <_ZdlPvj>
 801a020:	4620      	mov	r0, r4
 801a022:	bd10      	pop	{r4, pc}

0801a024 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801a024:	b510      	push	{r4, lr}
 801a026:	4604      	mov	r4, r0
 801a028:	2104      	movs	r1, #4
 801a02a:	f00b fbd0 	bl	80257ce <_ZdlPvj>
 801a02e:	4620      	mov	r0, r4
 801a030:	bd10      	pop	{r4, pc}

0801a032 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801a032:	b510      	push	{r4, lr}
 801a034:	4604      	mov	r4, r0
 801a036:	2104      	movs	r1, #4
 801a038:	f00b fbc9 	bl	80257ce <_ZdlPvj>
 801a03c:	4620      	mov	r0, r4
 801a03e:	bd10      	pop	{r4, pc}

0801a040 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801a040:	b510      	push	{r4, lr}
 801a042:	4604      	mov	r4, r0
 801a044:	2104      	movs	r1, #4
 801a046:	f00b fbc2 	bl	80257ce <_ZdlPvj>
 801a04a:	4620      	mov	r0, r4
 801a04c:	bd10      	pop	{r4, pc}

0801a04e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801a04e:	b510      	push	{r4, lr}
 801a050:	4604      	mov	r4, r0
 801a052:	2104      	movs	r1, #4
 801a054:	f00b fbbb 	bl	80257ce <_ZdlPvj>
 801a058:	4620      	mov	r0, r4
 801a05a:	bd10      	pop	{r4, pc}

0801a05c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
 801a05c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a060:	b08f      	sub	sp, #60	@ 0x3c
 801a062:	4616      	mov	r6, r2
 801a064:	4682      	mov	sl, r0
 801a066:	460d      	mov	r5, r1
 801a068:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 801a06c:	9205      	str	r2, [sp, #20]
 801a06e:	2a00      	cmp	r2, #0
 801a070:	f000 82b7 	beq.w	801a5e2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
 801a074:	6830      	ldr	r0, [r6, #0]
 801a076:	ac0a      	add	r4, sp, #40	@ 0x28
 801a078:	6871      	ldr	r1, [r6, #4]
 801a07a:	c403      	stmia	r4!, {r0, r1}
 801a07c:	6818      	ldr	r0, [r3, #0]
 801a07e:	ac0c      	add	r4, sp, #48	@ 0x30
 801a080:	6859      	ldr	r1, [r3, #4]
 801a082:	c403      	stmia	r4!, {r0, r1}
 801a084:	a80a      	add	r0, sp, #40	@ 0x28
 801a086:	f7fa fa1f 	bl	80144c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a08a:	4631      	mov	r1, r6
 801a08c:	a80c      	add	r0, sp, #48	@ 0x30
 801a08e:	f7fa fa43 	bl	8014518 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a092:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801a096:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 801a09a:	bfdb      	ittet	le
 801a09c:	b293      	uxthle	r3, r2
 801a09e:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801a0a2:	2301      	movgt	r3, #1
 801a0a4:	fb91 f3f3 	sdivle	r3, r1, r3
 801a0a8:	9300      	str	r3, [sp, #0]
 801a0aa:	f105 0308 	add.w	r3, r5, #8
 801a0ae:	9900      	ldr	r1, [sp, #0]
 801a0b0:	9306      	str	r3, [sp, #24]
 801a0b2:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 801a0b6:	440b      	add	r3, r1
 801a0b8:	3b01      	subs	r3, #1
 801a0ba:	fb93 f3f1 	sdiv	r3, r3, r1
 801a0be:	3b01      	subs	r3, #1
 801a0c0:	9906      	ldr	r1, [sp, #24]
 801a0c2:	b29b      	uxth	r3, r3
 801a0c4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801a0c8:	9900      	ldr	r1, [sp, #0]
 801a0ca:	9307      	str	r3, [sp, #28]
 801a0cc:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801a0d0:	fb93 f0f1 	sdiv	r0, r3, r1
 801a0d4:	b284      	uxth	r4, r0
 801a0d6:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801a0da:	9402      	str	r4, [sp, #8]
 801a0dc:	9d02      	ldr	r5, [sp, #8]
 801a0de:	9c00      	ldr	r4, [sp, #0]
 801a0e0:	fb05 3414 	mls	r4, r5, r4, r3
 801a0e4:	fb14 f402 	smulbb	r4, r4, r2
 801a0e8:	440c      	add	r4, r1
 801a0ea:	b2a4      	uxth	r4, r4
 801a0ec:	2d00      	cmp	r5, #0
 801a0ee:	d06c      	beq.n	801a1ca <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
 801a0f0:	1e6a      	subs	r2, r5, #1
 801a0f2:	9806      	ldr	r0, [sp, #24]
 801a0f4:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
 801a0f8:	9a07      	ldr	r2, [sp, #28]
 801a0fa:	ba36      	rev	r6, r6
 801a0fc:	4416      	add	r6, r2
 801a0fe:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801a102:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 801a106:	4411      	add	r1, r2
 801a108:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 801a10c:	f8df 932c 	ldr.w	r9, [pc, #812]	@ 801a43c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
 801a110:	4413      	add	r3, r2
 801a112:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 801a116:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801a11a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801a11e:	9301      	str	r3, [sp, #4]
 801a120:	4bc4      	ldr	r3, [pc, #784]	@ (801a434 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
 801a122:	6818      	ldr	r0, [r3, #0]
 801a124:	6803      	ldr	r3, [r0, #0]
 801a126:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801a128:	4798      	blx	r3
 801a12a:	4bc3      	ldr	r3, [pc, #780]	@ (801a438 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
 801a12c:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801a130:	881b      	ldrh	r3, [r3, #0]
 801a132:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
 801a136:	fb03 2808 	mla	r8, r3, r8, r2
 801a13a:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801a13e:	436b      	muls	r3, r5
 801a140:	2500      	movs	r5, #0
 801a142:	eb00 0848 	add.w	r8, r0, r8, lsl #1
 801a146:	4629      	mov	r1, r5
 801a148:	eb08 0343 	add.w	r3, r8, r3, lsl #1
 801a14c:	9309      	str	r3, [sp, #36]	@ 0x24
 801a14e:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801a152:	fb94 f3f3 	sdiv	r3, r4, r3
 801a156:	9304      	str	r3, [sp, #16]
 801a158:	f10a 0304 	add.w	r3, sl, #4
 801a15c:	4618      	mov	r0, r3
 801a15e:	9308      	str	r3, [sp, #32]
 801a160:	f00b fe70 	bl	8025e44 <memset>
 801a164:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a166:	4543      	cmp	r3, r8
 801a168:	f240 8236 	bls.w	801a5d8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
 801a16c:	2203      	movs	r2, #3
 801a16e:	2107      	movs	r1, #7
 801a170:	200b      	movs	r0, #11
 801a172:	2c00      	cmp	r4, #0
 801a174:	f000 8131 	beq.w	801a3da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
 801a178:	7833      	ldrb	r3, [r6, #0]
 801a17a:	b2db      	uxtb	r3, r3
 801a17c:	2bfe      	cmp	r3, #254	@ 0xfe
 801a17e:	d126      	bne.n	801a1ce <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
 801a180:	f896 e001 	ldrb.w	lr, [r6, #1]
 801a184:	3c01      	subs	r4, #1
 801a186:	f896 c002 	ldrb.w	ip, [r6, #2]
 801a18a:	1d37      	adds	r7, r6, #4
 801a18c:	fa5f fe8e 	uxtb.w	lr, lr
 801a190:	f896 b003 	ldrb.w	fp, [r6, #3]
 801a194:	fa5f fc8c 	uxtb.w	ip, ip
 801a198:	f36e 0507 	bfi	r5, lr, #0, #8
 801a19c:	fa5f fb8b 	uxtb.w	fp, fp
 801a1a0:	b2a4      	uxth	r4, r4
 801a1a2:	f36c 250f 	bfi	r5, ip, #8, #8
 801a1a6:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 801a1aa:	fb12 cc0b 	smlabb	ip, r2, fp, ip
 801a1ae:	f36b 4517 	bfi	r5, fp, #16, #8
 801a1b2:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 801a1b6:	0e2b      	lsrs	r3, r5, #24
 801a1b8:	fb10 c303 	smlabb	r3, r0, r3, ip
 801a1bc:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801a1c0:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801a1c4:	605d      	str	r5, [r3, #4]
 801a1c6:	463e      	mov	r6, r7
 801a1c8:	e7d3      	b.n	801a172 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
 801a1ca:	9e07      	ldr	r6, [sp, #28]
 801a1cc:	e797      	b.n	801a0fe <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
 801a1ce:	2bff      	cmp	r3, #255	@ 0xff
 801a1d0:	d127      	bne.n	801a222 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
 801a1d2:	f896 c001 	ldrb.w	ip, [r6, #1]
 801a1d6:	3c01      	subs	r4, #1
 801a1d8:	78b3      	ldrb	r3, [r6, #2]
 801a1da:	1d77      	adds	r7, r6, #5
 801a1dc:	fa5f fc8c 	uxtb.w	ip, ip
 801a1e0:	f896 e003 	ldrb.w	lr, [r6, #3]
 801a1e4:	b2db      	uxtb	r3, r3
 801a1e6:	f896 b004 	ldrb.w	fp, [r6, #4]
 801a1ea:	f36c 0507 	bfi	r5, ip, #0, #8
 801a1ee:	fa5f fe8e 	uxtb.w	lr, lr
 801a1f2:	fa5f fb8b 	uxtb.w	fp, fp
 801a1f6:	f363 250f 	bfi	r5, r3, #8, #8
 801a1fa:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 801a1fe:	b2a4      	uxth	r4, r4
 801a200:	fb12 330e 	smlabb	r3, r2, lr, r3
 801a204:	f36e 4517 	bfi	r5, lr, #16, #8
 801a208:	fb11 330c 	smlabb	r3, r1, ip, r3
 801a20c:	f36b 651f 	bfi	r5, fp, #24, #8
 801a210:	fb10 3b0b 	smlabb	fp, r0, fp, r3
 801a214:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
 801a218:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
 801a21c:	f8cb 5004 	str.w	r5, [fp, #4]
 801a220:	e7d1      	b.n	801a1c6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801a222:	ea5f 1ca3 	movs.w	ip, r3, asr #6
 801a226:	f106 0701 	add.w	r7, r6, #1
 801a22a:	d107      	bne.n	801a23c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
 801a22c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801a230:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801a234:	685d      	ldr	r5, [r3, #4]
 801a236:	3c01      	subs	r4, #1
 801a238:	b2a4      	uxth	r4, r4
 801a23a:	e7c4      	b.n	801a1c6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801a23c:	f1bc 0f01 	cmp.w	ip, #1
 801a240:	d12c      	bne.n	801a29c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
 801a242:	f003 0e03 	and.w	lr, r3, #3
 801a246:	f003 0c0c 	and.w	ip, r3, #12
 801a24a:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801a24e:	f1ae 0e02 	sub.w	lr, lr, #2
 801a252:	f1ac 0c08 	sub.w	ip, ip, #8
 801a256:	3b02      	subs	r3, #2
 801a258:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
 801a25c:	fa5f fe8e 	uxtb.w	lr, lr
 801a260:	f36e 0507 	bfi	r5, lr, #0, #8
 801a264:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801a268:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
 801a26c:	f36c 250f 	bfi	r5, ip, #8, #8
 801a270:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 801a274:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a278:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 801a27c:	b2db      	uxtb	r3, r3
 801a27e:	fb12 cc03 	smlabb	ip, r2, r3, ip
 801a282:	f363 4517 	bfi	r5, r3, #16, #8
 801a286:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 801a28a:	0e2e      	lsrs	r6, r5, #24
 801a28c:	fb10 c606 	smlabb	r6, r0, r6, ip
 801a290:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
 801a294:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
 801a298:	6075      	str	r5, [r6, #4]
 801a29a:	e7cc      	b.n	801a236 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
 801a29c:	f1bc 0f02 	cmp.w	ip, #2
 801a2a0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801a2a4:	d12a      	bne.n	801a2fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
 801a2a6:	1cb7      	adds	r7, r6, #2
 801a2a8:	7876      	ldrb	r6, [r6, #1]
 801a2aa:	3b20      	subs	r3, #32
 801a2ac:	b2f6      	uxtb	r6, r6
 801a2ae:	f006 0c0f 	and.w	ip, r6, #15
 801a2b2:	1136      	asrs	r6, r6, #4
 801a2b4:	f1ac 0c08 	sub.w	ip, ip, #8
 801a2b8:	3e08      	subs	r6, #8
 801a2ba:	449c      	add	ip, r3
 801a2bc:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
 801a2c0:	fa5f fc8c 	uxtb.w	ip, ip
 801a2c4:	f36c 0507 	bfi	r5, ip, #0, #8
 801a2c8:	f3c5 2e07 	ubfx	lr, r5, #8, #8
 801a2cc:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
 801a2d0:	4433      	add	r3, r6
 801a2d2:	fa5f fe8e 	uxtb.w	lr, lr
 801a2d6:	f36e 250f 	bfi	r5, lr, #8, #8
 801a2da:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
 801a2de:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a2e2:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 801a2e6:	b2db      	uxtb	r3, r3
 801a2e8:	fb12 ee03 	smlabb	lr, r2, r3, lr
 801a2ec:	f363 4517 	bfi	r5, r3, #16, #8
 801a2f0:	fb11 ee0c 	smlabb	lr, r1, ip, lr
 801a2f4:	0e2e      	lsrs	r6, r5, #24
 801a2f6:	fb10 e606 	smlabb	r6, r0, r6, lr
 801a2fa:	e7c9      	b.n	801a290 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
 801a2fc:	1c5e      	adds	r6, r3, #1
 801a2fe:	42a6      	cmp	r6, r4
 801a300:	dd4e      	ble.n	801a3a0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
 801a302:	1b36      	subs	r6, r6, r4
 801a304:	2e00      	cmp	r6, #0
 801a306:	dc4e      	bgt.n	801a3a6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
 801a308:	f8dd b004 	ldr.w	fp, [sp, #4]
 801a30c:	2400      	movs	r4, #0
 801a30e:	f1bb 0f00 	cmp.w	fp, #0
 801a312:	f340 8122 	ble.w	801a55a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
 801a316:	1c7b      	adds	r3, r7, #1
 801a318:	9303      	str	r3, [sp, #12]
 801a31a:	783b      	ldrb	r3, [r7, #0]
 801a31c:	b2db      	uxtb	r3, r3
 801a31e:	2bfe      	cmp	r3, #254	@ 0xfe
 801a320:	d160      	bne.n	801a3e4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
 801a322:	7879      	ldrb	r1, [r7, #1]
 801a324:	1d3b      	adds	r3, r7, #4
 801a326:	78ba      	ldrb	r2, [r7, #2]
 801a328:	b2c9      	uxtb	r1, r1
 801a32a:	78f8      	ldrb	r0, [r7, #3]
 801a32c:	b2d2      	uxtb	r2, r2
 801a32e:	9303      	str	r3, [sp, #12]
 801a330:	f361 0507 	bfi	r5, r1, #0, #8
 801a334:	b2c0      	uxtb	r0, r0
 801a336:	2303      	movs	r3, #3
 801a338:	f362 250f 	bfi	r5, r2, #8, #8
 801a33c:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801a340:	fb13 2200 	smlabb	r2, r3, r0, r2
 801a344:	f360 4517 	bfi	r5, r0, #16, #8
 801a348:	2307      	movs	r3, #7
 801a34a:	0e2e      	lsrs	r6, r5, #24
 801a34c:	fb13 2101 	smlabb	r1, r3, r1, r2
 801a350:	230b      	movs	r3, #11
 801a352:	fb13 1306 	smlabb	r3, r3, r6, r1
 801a356:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801a35a:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801a35e:	605d      	str	r5, [r3, #4]
 801a360:	2601      	movs	r6, #1
 801a362:	4637      	mov	r7, r6
 801a364:	0e2b      	lsrs	r3, r5, #24
 801a366:	ebab 0b07 	sub.w	fp, fp, r7
 801a36a:	eba6 0607 	sub.w	r6, r6, r7
 801a36e:	f040 80d3 	bne.w	801a518 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
 801a372:	b18c      	cbz	r4, 801a398 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
 801a374:	4648      	mov	r0, r9
 801a376:	00a1      	lsls	r1, r4, #2
 801a378:	f7f5 ffda 	bl	8010330 <_ZN8touchgfx5paint9flushLineEPmi>
 801a37c:	9b05      	ldr	r3, [sp, #20]
 801a37e:	4622      	mov	r2, r4
 801a380:	4649      	mov	r1, r9
 801a382:	4640      	mov	r0, r8
 801a384:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801a388:	f7f6 f85c 	bl	8010444 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801a38c:	4b2b      	ldr	r3, [pc, #172]	@ (801a43c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
 801a38e:	4a2c      	ldr	r2, [pc, #176]	@ (801a440 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
 801a390:	4599      	cmp	r9, r3
 801a392:	bf08      	it	eq
 801a394:	4613      	moveq	r3, r2
 801a396:	4699      	mov	r9, r3
 801a398:	eb08 0847 	add.w	r8, r8, r7, lsl #1
 801a39c:	2400      	movs	r4, #0
 801a39e:	e0da      	b.n	801a556 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
 801a3a0:	1ba6      	subs	r6, r4, r6
 801a3a2:	b2b4      	uxth	r4, r6
 801a3a4:	e70f      	b.n	801a1c6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801a3a6:	9b01      	ldr	r3, [sp, #4]
 801a3a8:	9a01      	ldr	r2, [sp, #4]
 801a3aa:	42b3      	cmp	r3, r6
 801a3ac:	bfa8      	it	ge
 801a3ae:	4633      	movge	r3, r6
 801a3b0:	0e2c      	lsrs	r4, r5, #24
 801a3b2:	eba2 0b03 	sub.w	fp, r2, r3
 801a3b6:	eba6 0603 	sub.w	r6, r6, r3
 801a3ba:	d00b      	beq.n	801a3d4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
 801a3bc:	f1a9 0104 	sub.w	r1, r9, #4
 801a3c0:	461a      	mov	r2, r3
 801a3c2:	2a00      	cmp	r2, #0
 801a3c4:	dc02      	bgt.n	801a3cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
 801a3c6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801a3ca:	e7a0      	b.n	801a30e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801a3cc:	f841 5f04 	str.w	r5, [r1, #4]!
 801a3d0:	3a01      	subs	r2, #1
 801a3d2:	e7f6      	b.n	801a3c2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
 801a3d4:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 801a3d8:	e799      	b.n	801a30e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801a3da:	4637      	mov	r7, r6
 801a3dc:	f8dd b004 	ldr.w	fp, [sp, #4]
 801a3e0:	4626      	mov	r6, r4
 801a3e2:	e794      	b.n	801a30e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801a3e4:	2bff      	cmp	r3, #255	@ 0xff
 801a3e6:	d11d      	bne.n	801a424 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
 801a3e8:	7878      	ldrb	r0, [r7, #1]
 801a3ea:	1d7b      	adds	r3, r7, #5
 801a3ec:	78ba      	ldrb	r2, [r7, #2]
 801a3ee:	b2c0      	uxtb	r0, r0
 801a3f0:	78fe      	ldrb	r6, [r7, #3]
 801a3f2:	b2d2      	uxtb	r2, r2
 801a3f4:	9303      	str	r3, [sp, #12]
 801a3f6:	f360 0507 	bfi	r5, r0, #0, #8
 801a3fa:	793b      	ldrb	r3, [r7, #4]
 801a3fc:	b2f6      	uxtb	r6, r6
 801a3fe:	b2d9      	uxtb	r1, r3
 801a400:	f362 250f 	bfi	r5, r2, #8, #8
 801a404:	2303      	movs	r3, #3
 801a406:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801a40a:	f366 4517 	bfi	r5, r6, #16, #8
 801a40e:	fb13 2206 	smlabb	r2, r3, r6, r2
 801a412:	2307      	movs	r3, #7
 801a414:	f361 651f 	bfi	r5, r1, #24, #8
 801a418:	fb13 2000 	smlabb	r0, r3, r0, r2
 801a41c:	230b      	movs	r3, #11
 801a41e:	fb13 0301 	smlabb	r3, r3, r1, r0
 801a422:	e798      	b.n	801a356 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
 801a424:	119e      	asrs	r6, r3, #6
 801a426:	d10d      	bne.n	801a444 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
 801a428:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801a42c:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801a430:	685d      	ldr	r5, [r3, #4]
 801a432:	e795      	b.n	801a360 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 801a434:	24001a30 	.word	0x24001a30
 801a438:	24001a2a 	.word	0x24001a2a
 801a43c:	24000100 	.word	0x24000100
 801a440:	24000200 	.word	0x24000200
 801a444:	2e01      	cmp	r6, #1
 801a446:	ea4f 6115 	mov.w	r1, r5, lsr #24
 801a44a:	d12b      	bne.n	801a4a4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
 801a44c:	f003 0003 	and.w	r0, r3, #3
 801a450:	f003 020c 	and.w	r2, r3, #12
 801a454:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801a458:	3802      	subs	r0, #2
 801a45a:	3a08      	subs	r2, #8
 801a45c:	1e9f      	subs	r7, r3, #2
 801a45e:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
 801a462:	b2c0      	uxtb	r0, r0
 801a464:	f360 0507 	bfi	r5, r0, #0, #8
 801a468:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 801a46c:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 801a470:	f362 250f 	bfi	r5, r2, #8, #8
 801a474:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801a478:	f3c5 4307 	ubfx	r3, r5, #16, #8
 801a47c:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 801a480:	2703      	movs	r7, #3
 801a482:	b2db      	uxtb	r3, r3
 801a484:	fb17 2203 	smlabb	r2, r7, r3, r2
 801a488:	2707      	movs	r7, #7
 801a48a:	f363 4517 	bfi	r5, r3, #16, #8
 801a48e:	230b      	movs	r3, #11
 801a490:	fb17 2000 	smlabb	r0, r7, r0, r2
 801a494:	fb13 0101 	smlabb	r1, r3, r1, r0
 801a498:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 801a49c:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 801a4a0:	604d      	str	r5, [r1, #4]
 801a4a2:	e75e      	b.n	801a362 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
 801a4a4:	2e02      	cmp	r6, #2
 801a4a6:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801a4aa:	d12f      	bne.n	801a50c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
 801a4ac:	7878      	ldrb	r0, [r7, #1]
 801a4ae:	1cba      	adds	r2, r7, #2
 801a4b0:	3b20      	subs	r3, #32
 801a4b2:	b2c0      	uxtb	r0, r0
 801a4b4:	9203      	str	r2, [sp, #12]
 801a4b6:	f000 020f 	and.w	r2, r0, #15
 801a4ba:	1100      	asrs	r0, r0, #4
 801a4bc:	3a08      	subs	r2, #8
 801a4be:	3808      	subs	r0, #8
 801a4c0:	441a      	add	r2, r3
 801a4c2:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 801a4c6:	b2d2      	uxtb	r2, r2
 801a4c8:	f362 0507 	bfi	r5, r2, #0, #8
 801a4cc:	f3c5 2607 	ubfx	r6, r5, #8, #8
 801a4d0:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 801a4d4:	4403      	add	r3, r0
 801a4d6:	b2f6      	uxtb	r6, r6
 801a4d8:	f366 250f 	bfi	r5, r6, #8, #8
 801a4dc:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 801a4e0:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801a4e4:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801a4e8:	2003      	movs	r0, #3
 801a4ea:	b2db      	uxtb	r3, r3
 801a4ec:	fb10 6603 	smlabb	r6, r0, r3, r6
 801a4f0:	2007      	movs	r0, #7
 801a4f2:	f363 4517 	bfi	r5, r3, #16, #8
 801a4f6:	230b      	movs	r3, #11
 801a4f8:	fb10 6202 	smlabb	r2, r0, r2, r6
 801a4fc:	fb13 2101 	smlabb	r1, r3, r1, r2
 801a500:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 801a504:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 801a508:	604d      	str	r5, [r1, #4]
 801a50a:	e729      	b.n	801a360 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 801a50c:	1c5e      	adds	r6, r3, #1
 801a50e:	465f      	mov	r7, fp
 801a510:	45b3      	cmp	fp, r6
 801a512:	bfa8      	it	ge
 801a514:	4637      	movge	r7, r6
 801a516:	e725      	b.n	801a364 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
 801a518:	193b      	adds	r3, r7, r4
 801a51a:	2b40      	cmp	r3, #64	@ 0x40
 801a51c:	dd13      	ble.n	801a546 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
 801a51e:	4648      	mov	r0, r9
 801a520:	00a1      	lsls	r1, r4, #2
 801a522:	f7f5 ff05 	bl	8010330 <_ZN8touchgfx5paint9flushLineEPmi>
 801a526:	4649      	mov	r1, r9
 801a528:	9b05      	ldr	r3, [sp, #20]
 801a52a:	4622      	mov	r2, r4
 801a52c:	4640      	mov	r0, r8
 801a52e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801a532:	f7f5 ff87 	bl	8010444 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801a536:	4b2c      	ldr	r3, [pc, #176]	@ (801a5e8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
 801a538:	2400      	movs	r4, #0
 801a53a:	4599      	cmp	r9, r3
 801a53c:	bf0c      	ite	eq
 801a53e:	f8df 90b4 	ldreq.w	r9, [pc, #180]	@ 801a5f4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
 801a542:	f8df 90a4 	ldrne.w	r9, [pc, #164]	@ 801a5e8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
 801a546:	eb09 0284 	add.w	r2, r9, r4, lsl #2
 801a54a:	463b      	mov	r3, r7
 801a54c:	3b01      	subs	r3, #1
 801a54e:	f842 5b04 	str.w	r5, [r2], #4
 801a552:	d1fb      	bne.n	801a54c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
 801a554:	443c      	add	r4, r7
 801a556:	9f03      	ldr	r7, [sp, #12]
 801a558:	e6d9      	b.n	801a30e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801a55a:	b15c      	cbz	r4, 801a574 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
 801a55c:	00a1      	lsls	r1, r4, #2
 801a55e:	4648      	mov	r0, r9
 801a560:	f7f5 fee6 	bl	8010330 <_ZN8touchgfx5paint9flushLineEPmi>
 801a564:	4640      	mov	r0, r8
 801a566:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801a56a:	9b05      	ldr	r3, [sp, #20]
 801a56c:	4622      	mov	r2, r4
 801a56e:	4649      	mov	r1, r9
 801a570:	f7f5 ff68 	bl	8010444 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801a574:	4b1d      	ldr	r3, [pc, #116]	@ (801a5ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
 801a576:	9a01      	ldr	r2, [sp, #4]
 801a578:	881b      	ldrh	r3, [r3, #0]
 801a57a:	1a9b      	subs	r3, r3, r2
 801a57c:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 801a580:	9b04      	ldr	r3, [sp, #16]
 801a582:	3301      	adds	r3, #1
 801a584:	9304      	str	r3, [sp, #16]
 801a586:	9a04      	ldr	r2, [sp, #16]
 801a588:	9b00      	ldr	r3, [sp, #0]
 801a58a:	4293      	cmp	r3, r2
 801a58c:	d11d      	bne.n	801a5ca <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
 801a58e:	9b02      	ldr	r3, [sp, #8]
 801a590:	2500      	movs	r5, #0
 801a592:	9a02      	ldr	r2, [sp, #8]
 801a594:	f103 0b01 	add.w	fp, r3, #1
 801a598:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
 801a59c:	9b06      	ldr	r3, [sp, #24]
 801a59e:	4629      	mov	r1, r5
 801a5a0:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 801a5a4:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 801a5a8:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801a5ac:	1ba4      	subs	r4, r4, r6
 801a5ae:	9b07      	ldr	r3, [sp, #28]
 801a5b0:	ba3f      	rev	r7, r7
 801a5b2:	9808      	ldr	r0, [sp, #32]
 801a5b4:	b2a4      	uxth	r4, r4
 801a5b6:	441f      	add	r7, r3
 801a5b8:	f00b fc44 	bl	8025e44 <memset>
 801a5bc:	f8cd b008 	str.w	fp, [sp, #8]
 801a5c0:	9504      	str	r5, [sp, #16]
 801a5c2:	f7f5 fe9d 	bl	8010300 <_ZN8touchgfx5paint8tearDownEv>
 801a5c6:	463e      	mov	r6, r7
 801a5c8:	e5cc      	b.n	801a164 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
 801a5ca:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801a5ce:	9b01      	ldr	r3, [sp, #4]
 801a5d0:	1ae4      	subs	r4, r4, r3
 801a5d2:	1ba4      	subs	r4, r4, r6
 801a5d4:	b2a4      	uxth	r4, r4
 801a5d6:	e7f4      	b.n	801a5c2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
 801a5d8:	4b05      	ldr	r3, [pc, #20]	@ (801a5f0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
 801a5da:	6818      	ldr	r0, [r3, #0]
 801a5dc:	6803      	ldr	r3, [r0, #0]
 801a5de:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801a5e0:	4798      	blx	r3
 801a5e2:	b00f      	add	sp, #60	@ 0x3c
 801a5e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a5e8:	24000100 	.word	0x24000100
 801a5ec:	24001a2a 	.word	0x24001a2a
 801a5f0:	24001a30 	.word	0x24001a30
 801a5f4:	24000200 	.word	0x24000200

0801a5f8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801a5f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a5fc:	b08f      	sub	sp, #60	@ 0x3c
 801a5fe:	461c      	mov	r4, r3
 801a600:	9205      	str	r2, [sp, #20]
 801a602:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801a606:	9100      	str	r1, [sp, #0]
 801a608:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801a60a:	9201      	str	r2, [sp, #4]
 801a60c:	2a00      	cmp	r2, #0
 801a60e:	f000 8116 	beq.w	801a83e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x246>
 801a612:	6820      	ldr	r0, [r4, #0]
 801a614:	aa0a      	add	r2, sp, #40	@ 0x28
 801a616:	6861      	ldr	r1, [r4, #4]
 801a618:	c203      	stmia	r2!, {r0, r1}
 801a61a:	6818      	ldr	r0, [r3, #0]
 801a61c:	aa0c      	add	r2, sp, #48	@ 0x30
 801a61e:	6859      	ldr	r1, [r3, #4]
 801a620:	c203      	stmia	r2!, {r0, r1}
 801a622:	a80a      	add	r0, sp, #40	@ 0x28
 801a624:	f7f9 ff50 	bl	80144c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a628:	4621      	mov	r1, r4
 801a62a:	a80c      	add	r0, sp, #48	@ 0x30
 801a62c:	f7f9 ff74 	bl	8014518 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a630:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801a634:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 801a638:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801a63c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 801a640:	bfdb      	ittet	le
 801a642:	b2b3      	uxthle	r3, r6
 801a644:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801a648:	2301      	movgt	r3, #1
 801a64a:	fb92 f3f3 	sdivle	r3, r2, r3
 801a64e:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801a652:	441d      	add	r5, r3
 801a654:	fb92 f1f3 	sdiv	r1, r2, r3
 801a658:	fa1f fc81 	uxth.w	ip, r1
 801a65c:	3d01      	subs	r5, #1
 801a65e:	fb0c 2413 	mls	r4, ip, r3, r2
 801a662:	4661      	mov	r1, ip
 801a664:	fb14 f406 	smulbb	r4, r4, r6
 801a668:	4404      	add	r4, r0
 801a66a:	fb95 f5f3 	sdiv	r5, r5, r3
 801a66e:	b2a4      	uxth	r4, r4
 801a670:	b131      	cbz	r1, 801a680 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x88>
 801a672:	9b05      	ldr	r3, [sp, #20]
 801a674:	9900      	ldr	r1, [sp, #0]
 801a676:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801a67a:	ba1b      	rev	r3, r3
 801a67c:	4419      	add	r1, r3
 801a67e:	9100      	str	r1, [sp, #0]
 801a680:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801a684:	b2ad      	uxth	r5, r5
 801a686:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 801a68a:	4418      	add	r0, r3
 801a68c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801a690:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801a694:	00ad      	lsls	r5, r5, #2
 801a696:	441a      	add	r2, r3
 801a698:	4b6a      	ldr	r3, [pc, #424]	@ (801a844 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801a69a:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 801a69e:	6818      	ldr	r0, [r3, #0]
 801a6a0:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801a6a4:	6803      	ldr	r3, [r0, #0]
 801a6a6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801a6a8:	4798      	blx	r3
 801a6aa:	4967      	ldr	r1, [pc, #412]	@ (801a848 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801a6ac:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801a6b0:	2c00      	cmp	r4, #0
 801a6b2:	880b      	ldrh	r3, [r1, #0]
 801a6b4:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 801a6b8:	bf0c      	ite	eq
 801a6ba:	46c6      	moveq	lr, r8
 801a6bc:	f04f 0e00 	movne.w	lr, #0
 801a6c0:	9109      	str	r1, [sp, #36]	@ 0x24
 801a6c2:	fb03 c202 	mla	r2, r3, r2, ip
 801a6c6:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801a6ca:	4373      	muls	r3, r6
 801a6cc:	fa1f fe8e 	uxth.w	lr, lr
 801a6d0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801a6d4:	9103      	str	r1, [sp, #12]
 801a6d6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801a6da:	9306      	str	r3, [sp, #24]
 801a6dc:	1d2b      	adds	r3, r5, #4
 801a6de:	9307      	str	r3, [sp, #28]
 801a6e0:	9b01      	ldr	r3, [sp, #4]
 801a6e2:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 801a6e6:	2300      	movs	r3, #0
 801a6e8:	b292      	uxth	r2, r2
 801a6ea:	9302      	str	r3, [sp, #8]
 801a6ec:	9204      	str	r2, [sp, #16]
 801a6ee:	9a06      	ldr	r2, [sp, #24]
 801a6f0:	4282      	cmp	r2, r0
 801a6f2:	f240 809f 	bls.w	801a834 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23c>
 801a6f6:	b963      	cbnz	r3, 801a712 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 801a6f8:	9b00      	ldr	r3, [sp, #0]
 801a6fa:	781a      	ldrb	r2, [r3, #0]
 801a6fc:	0993      	lsrs	r3, r2, #6
 801a6fe:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801a702:	9202      	str	r2, [sp, #8]
 801a704:	1e5a      	subs	r2, r3, #1
 801a706:	2a02      	cmp	r2, #2
 801a708:	d815      	bhi.n	801a736 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 801a70a:	9a00      	ldr	r2, [sp, #0]
 801a70c:	b29b      	uxth	r3, r3
 801a70e:	3201      	adds	r2, #1
 801a710:	9200      	str	r2, [sp, #0]
 801a712:	b1b4      	cbz	r4, 801a742 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14a>
 801a714:	429c      	cmp	r4, r3
 801a716:	bf91      	iteee	ls
 801a718:	1b1c      	subls	r4, r3, r4
 801a71a:	1ae4      	subhi	r4, r4, r3
 801a71c:	4671      	movhi	r1, lr
 801a71e:	f04f 0a00 	movhi.w	sl, #0
 801a722:	bf9b      	ittet	ls
 801a724:	fa1f fa84 	uxthls.w	sl, r4
 801a728:	2400      	movls	r4, #0
 801a72a:	b2a4      	uxthhi	r4, r4
 801a72c:	fa1f f188 	uxthls.w	r1, r8
 801a730:	4653      	mov	r3, sl
 801a732:	468e      	mov	lr, r1
 801a734:	e7db      	b.n	801a6ee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf6>
 801a736:	9a00      	ldr	r2, [sp, #0]
 801a738:	9b00      	ldr	r3, [sp, #0]
 801a73a:	3202      	adds	r2, #2
 801a73c:	785b      	ldrb	r3, [r3, #1]
 801a73e:	9200      	str	r2, [sp, #0]
 801a740:	e7e7      	b.n	801a712 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11a>
 801a742:	2202      	movs	r2, #2
 801a744:	9907      	ldr	r1, [sp, #28]
 801a746:	4573      	cmp	r3, lr
 801a748:	4615      	mov	r5, r2
 801a74a:	9a02      	ldr	r2, [sp, #8]
 801a74c:	bf24      	itt	cs
 801a74e:	eba3 0a0e 	subcs.w	sl, r3, lr
 801a752:	46f1      	movcs	r9, lr
 801a754:	fb15 1202 	smlabb	r2, r5, r2, r1
 801a758:	9905      	ldr	r1, [sp, #20]
 801a75a:	bf34      	ite	cc
 801a75c:	4699      	movcc	r9, r3
 801a75e:	fa1f fa8a 	uxthcs.w	sl, sl
 801a762:	f831 c002 	ldrh.w	ip, [r1, r2]
 801a766:	bf38      	it	cc
 801a768:	ebae 0103 	subcc.w	r1, lr, r3
 801a76c:	9a01      	ldr	r2, [sp, #4]
 801a76e:	bf2e      	itee	cs
 801a770:	4621      	movcs	r1, r4
 801a772:	b289      	uxthcc	r1, r1
 801a774:	46a2      	movcc	sl, r4
 801a776:	2aff      	cmp	r2, #255	@ 0xff
 801a778:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801a77c:	d105      	bne.n	801a78a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x192>
 801a77e:	4481      	add	r9, r0
 801a780:	4581      	cmp	r9, r0
 801a782:	d045      	beq.n	801a810 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 801a784:	f820 cb02 	strh.w	ip, [r0], #2
 801a788:	e7fa      	b.n	801a780 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x188>
 801a78a:	ea4f 222c 	mov.w	r2, ip, asr #8
 801a78e:	9d03      	ldr	r5, [sp, #12]
 801a790:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801a794:	4481      	add	r9, r0
 801a796:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a79a:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801a79e:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801a7a2:	fa5f fc8c 	uxtb.w	ip, ip
 801a7a6:	436a      	muls	r2, r5
 801a7a8:	fb0b fb05 	mul.w	fp, fp, r5
 801a7ac:	fb0c fc05 	mul.w	ip, ip, r5
 801a7b0:	9208      	str	r2, [sp, #32]
 801a7b2:	4581      	cmp	r9, r0
 801a7b4:	d02c      	beq.n	801a810 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x218>
 801a7b6:	8802      	ldrh	r2, [r0, #0]
 801a7b8:	9d04      	ldr	r5, [sp, #16]
 801a7ba:	1216      	asrs	r6, r2, #8
 801a7bc:	9f04      	ldr	r7, [sp, #16]
 801a7be:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801a7c2:	fb16 f605 	smulbb	r6, r6, r5
 801a7c6:	9d08      	ldr	r5, [sp, #32]
 801a7c8:	442e      	add	r6, r5
 801a7ca:	10d5      	asrs	r5, r2, #3
 801a7cc:	00d2      	lsls	r2, r2, #3
 801a7ce:	b2b6      	uxth	r6, r6
 801a7d0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801a7d4:	b2d2      	uxtb	r2, r2
 801a7d6:	fb15 f507 	smulbb	r5, r5, r7
 801a7da:	fb12 f207 	smulbb	r2, r2, r7
 801a7de:	1c77      	adds	r7, r6, #1
 801a7e0:	445d      	add	r5, fp
 801a7e2:	4462      	add	r2, ip
 801a7e4:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801a7e8:	b2ad      	uxth	r5, r5
 801a7ea:	b292      	uxth	r2, r2
 801a7ec:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801a7f0:	1c57      	adds	r7, r2, #1
 801a7f2:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801a7f6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a7fa:	4316      	orrs	r6, r2
 801a7fc:	1c6a      	adds	r2, r5, #1
 801a7fe:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801a802:	096d      	lsrs	r5, r5, #5
 801a804:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801a808:	432e      	orrs	r6, r5
 801a80a:	f820 6b02 	strh.w	r6, [r0], #2
 801a80e:	e7d0      	b.n	801a7b2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ba>
 801a810:	4573      	cmp	r3, lr
 801a812:	d38d      	bcc.n	801a730 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 801a814:	fa1f f188 	uxth.w	r1, r8
 801a818:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801a81c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a81e:	1a64      	subs	r4, r4, r1
 801a820:	881b      	ldrh	r3, [r3, #0]
 801a822:	b2a4      	uxth	r4, r4
 801a824:	eba3 0308 	sub.w	r3, r3, r8
 801a828:	2c00      	cmp	r4, #0
 801a82a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801a82e:	bf18      	it	ne
 801a830:	2100      	movne	r1, #0
 801a832:	e77d      	b.n	801a730 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x138>
 801a834:	4b03      	ldr	r3, [pc, #12]	@ (801a844 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801a836:	6818      	ldr	r0, [r3, #0]
 801a838:	6803      	ldr	r3, [r0, #0]
 801a83a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801a83c:	4798      	blx	r3
 801a83e:	b00f      	add	sp, #60	@ 0x3c
 801a840:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a844:	24001a30 	.word	0x24001a30
 801a848:	24001a2a 	.word	0x24001a2a

0801a84c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801a84c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a850:	b09f      	sub	sp, #124	@ 0x7c
 801a852:	461d      	mov	r5, r3
 801a854:	4604      	mov	r4, r0
 801a856:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801a858:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 801a85c:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 801a860:	9209      	str	r2, [sp, #36]	@ 0x24
 801a862:	2a00      	cmp	r2, #0
 801a864:	f000 81ed 	beq.w	801ac42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f6>
 801a868:	6828      	ldr	r0, [r5, #0]
 801a86a:	aa1a      	add	r2, sp, #104	@ 0x68
 801a86c:	6869      	ldr	r1, [r5, #4]
 801a86e:	c203      	stmia	r2!, {r0, r1}
 801a870:	6818      	ldr	r0, [r3, #0]
 801a872:	aa1c      	add	r2, sp, #112	@ 0x70
 801a874:	6859      	ldr	r1, [r3, #4]
 801a876:	c203      	stmia	r2!, {r0, r1}
 801a878:	a81a      	add	r0, sp, #104	@ 0x68
 801a87a:	f7f9 fe25 	bl	80144c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a87e:	4629      	mov	r1, r5
 801a880:	a81c      	add	r0, sp, #112	@ 0x70
 801a882:	f7f9 fe49 	bl	8014518 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a886:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801a88a:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 801a88e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801a892:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 801a896:	bfdb      	ittet	le
 801a898:	b29a      	uxthle	r2, r3
 801a89a:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801a89e:	2201      	movgt	r2, #1
 801a8a0:	fb91 f2f2 	sdivle	r2, r1, r2
 801a8a4:	9202      	str	r2, [sp, #8]
 801a8a6:	9802      	ldr	r0, [sp, #8]
 801a8a8:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 801a8ac:	9902      	ldr	r1, [sp, #8]
 801a8ae:	fb92 f0f0 	sdiv	r0, r2, r0
 801a8b2:	b280      	uxth	r0, r0
 801a8b4:	4488      	add	r8, r1
 801a8b6:	9010      	str	r0, [sp, #64]	@ 0x40
 801a8b8:	f108 38ff 	add.w	r8, r8, #4294967295
 801a8bc:	9802      	ldr	r0, [sp, #8]
 801a8be:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801a8c0:	fb05 2510 	mls	r5, r5, r0, r2
 801a8c4:	fb98 f8f1 	sdiv	r8, r8, r1
 801a8c8:	fb15 f503 	smulbb	r5, r5, r3
 801a8cc:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 801a8d0:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801a8d4:	f108 0801 	add.w	r8, r8, #1
 801a8d8:	440d      	add	r5, r1
 801a8da:	4419      	add	r1, r3
 801a8dc:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 801a8e0:	fa1f f888 	uxth.w	r8, r8
 801a8e4:	441a      	add	r2, r3
 801a8e6:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 801a8ea:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 801a8ee:	b2ad      	uxth	r5, r5
 801a8f0:	9304      	str	r3, [sp, #16]
 801a8f2:	4b94      	ldr	r3, [pc, #592]	@ (801ab44 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801a8f4:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 801a8f8:	6818      	ldr	r0, [r3, #0]
 801a8fa:	6803      	ldr	r3, [r0, #0]
 801a8fc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801a8fe:	4798      	blx	r3
 801a900:	4b91      	ldr	r3, [pc, #580]	@ (801ab48 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801a902:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 801a906:	2d00      	cmp	r5, #0
 801a908:	881a      	ldrh	r2, [r3, #0]
 801a90a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801a90e:	fb02 f606 	mul.w	r6, r2, r6
 801a912:	fb02 7101 	mla	r1, r2, r1, r7
 801a916:	9318      	str	r3, [sp, #96]	@ 0x60
 801a918:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801a91c:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 801a920:	f04f 0100 	mov.w	r1, #0
 801a924:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801a928:	930f      	str	r3, [sp, #60]	@ 0x3c
 801a92a:	4b88      	ldr	r3, [pc, #544]	@ (801ab4c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>)
 801a92c:	920a      	str	r2, [sp, #40]	@ 0x28
 801a92e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801a930:	eba3 0304 	sub.w	r3, r3, r4
 801a934:	910d      	str	r1, [sp, #52]	@ 0x34
 801a936:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801a93a:	9319      	str	r3, [sp, #100]	@ 0x64
 801a93c:	f108 0204 	add.w	r2, r8, #4
 801a940:	9211      	str	r2, [sp, #68]	@ 0x44
 801a942:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801a944:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 801a948:	9215      	str	r2, [sp, #84]	@ 0x54
 801a94a:	9a04      	ldr	r2, [sp, #16]
 801a94c:	bf18      	it	ne
 801a94e:	2200      	movne	r2, #0
 801a950:	b292      	uxth	r2, r2
 801a952:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801a954:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801a956:	fa11 f383 	uxtah	r3, r1, r3
 801a95a:	9914      	ldr	r1, [sp, #80]	@ 0x50
 801a95c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801a960:	3304      	adds	r3, #4
 801a962:	9306      	str	r3, [sp, #24]
 801a964:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a966:	4283      	cmp	r3, r0
 801a968:	f240 8166 	bls.w	801ac38 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3ec>
 801a96c:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 801a970:	f04f 0a01 	mov.w	sl, #1
 801a974:	9902      	ldr	r1, [sp, #8]
 801a976:	9e06      	ldr	r6, [sp, #24]
 801a978:	46d3      	mov	fp, sl
 801a97a:	4657      	mov	r7, sl
 801a97c:	7836      	ldrb	r6, [r6, #0]
 801a97e:	fbb5 f3f3 	udiv	r3, r5, r3
 801a982:	1acb      	subs	r3, r1, r3
 801a984:	9612      	str	r6, [sp, #72]	@ 0x48
 801a986:	3601      	adds	r6, #1
 801a988:	b29b      	uxth	r3, r3
 801a98a:	9605      	str	r6, [sp, #20]
 801a98c:	9316      	str	r3, [sp, #88]	@ 0x58
 801a98e:	9b06      	ldr	r3, [sp, #24]
 801a990:	7859      	ldrb	r1, [r3, #1]
 801a992:	789b      	ldrb	r3, [r3, #2]
 801a994:	021b      	lsls	r3, r3, #8
 801a996:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801a99a:	9906      	ldr	r1, [sp, #24]
 801a99c:	78c9      	ldrb	r1, [r1, #3]
 801a99e:	430b      	orrs	r3, r1
 801a9a0:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 801a9a2:	4419      	add	r1, r3
 801a9a4:	1c4e      	adds	r6, r1, #1
 801a9a6:	7849      	ldrb	r1, [r1, #1]
 801a9a8:	9603      	str	r6, [sp, #12]
 801a9aa:	0209      	lsls	r1, r1, #8
 801a9ac:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801a9ae:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 801a9b2:	5cf3      	ldrb	r3, [r6, r3]
 801a9b4:	4319      	orrs	r1, r3
 801a9b6:	b28b      	uxth	r3, r1
 801a9b8:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 801a9bc:	930c      	str	r3, [sp, #48]	@ 0x30
 801a9be:	2300      	movs	r3, #0
 801a9c0:	9307      	str	r3, [sp, #28]
 801a9c2:	469c      	mov	ip, r3
 801a9c4:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 801a9c8:	930e      	str	r3, [sp, #56]	@ 0x38
 801a9ca:	2d00      	cmp	r5, #0
 801a9cc:	d07e      	beq.n	801aacc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x280>
 801a9ce:	42af      	cmp	r7, r5
 801a9d0:	d26e      	bcs.n	801aab0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x264>
 801a9d2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801a9d4:	1bed      	subs	r5, r5, r7
 801a9d6:	9201      	str	r2, [sp, #4]
 801a9d8:	4283      	cmp	r3, r0
 801a9da:	b2ad      	uxth	r5, r5
 801a9dc:	d802      	bhi.n	801a9e4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x198>
 801a9de:	e073      	b.n	801aac8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801a9e0:	2b00      	cmp	r3, #0
 801a9e2:	d15f      	bne.n	801aaa4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x258>
 801a9e4:	9b03      	ldr	r3, [sp, #12]
 801a9e6:	f1cb 0207 	rsb	r2, fp, #7
 801a9ea:	785b      	ldrb	r3, [r3, #1]
 801a9ec:	4093      	lsls	r3, r2
 801a9ee:	005b      	lsls	r3, r3, #1
 801a9f0:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801a9f4:	9b03      	ldr	r3, [sp, #12]
 801a9f6:	781b      	ldrb	r3, [r3, #0]
 801a9f8:	fa43 f30b 	asr.w	r3, r3, fp
 801a9fc:	b2db      	uxtb	r3, r3
 801a9fe:	4313      	orrs	r3, r2
 801aa00:	f10b 0201 	add.w	r2, fp, #1
 801aa04:	fa5f fb82 	uxtb.w	fp, r2
 801aa08:	9a03      	ldr	r2, [sp, #12]
 801aa0a:	b29f      	uxth	r7, r3
 801aa0c:	f1bb 0f08 	cmp.w	fp, #8
 801aa10:	bf13      	iteet	ne
 801aa12:	3201      	addne	r2, #1
 801aa14:	3202      	addeq	r2, #2
 801aa16:	f04f 0b00 	moveq.w	fp, #0
 801aa1a:	9203      	strne	r2, [sp, #12]
 801aa1c:	bf08      	it	eq
 801aa1e:	9203      	streq	r2, [sp, #12]
 801aa20:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801aa22:	42ba      	cmp	r2, r7
 801aa24:	d309      	bcc.n	801aa3a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ee>
 801aa26:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 801aa2a:	2301      	movs	r3, #1
 801aa2c:	9a05      	ldr	r2, [sp, #20]
 801aa2e:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 801aa32:	d30e      	bcc.n	801aa52 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 801aa34:	469a      	mov	sl, r3
 801aa36:	2600      	movs	r6, #0
 801aa38:	e035      	b.n	801aaa6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x25a>
 801aa3a:	9b05      	ldr	r3, [sp, #20]
 801aa3c:	429f      	cmp	r7, r3
 801aa3e:	d318      	bcc.n	801aa72 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x226>
 801aa40:	eb04 030a 	add.w	r3, r4, sl
 801aa44:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 801aa48:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 801aa4c:	f10a 0301 	add.w	r3, sl, #1
 801aa50:	b29b      	uxth	r3, r3
 801aa52:	9a05      	ldr	r2, [sp, #20]
 801aa54:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 801aa58:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801aa5c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801aa5e:	7116      	strb	r6, [r2, #4]
 801aa60:	f10a 0601 	add.w	r6, sl, #1
 801aa64:	80d1      	strh	r1, [r2, #6]
 801aa66:	7156      	strb	r6, [r2, #5]
 801aa68:	9a05      	ldr	r2, [sp, #20]
 801aa6a:	3201      	adds	r2, #1
 801aa6c:	b292      	uxth	r2, r2
 801aa6e:	9205      	str	r2, [sp, #20]
 801aa70:	e7e0      	b.n	801aa34 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e8>
 801aa72:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801aa76:	463a      	mov	r2, r7
 801aa78:	795b      	ldrb	r3, [r3, #5]
 801aa7a:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801aa7e:	4426      	add	r6, r4
 801aa80:	9919      	ldr	r1, [sp, #100]	@ 0x64
 801aa82:	eb01 0c06 	add.w	ip, r1, r6
 801aa86:	f1bc 0f00 	cmp.w	ip, #0
 801aa8a:	dd07      	ble.n	801aa9c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>
 801aa8c:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801aa90:	f892 c004 	ldrb.w	ip, [r2, #4]
 801aa94:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801aa98:	88d2      	ldrh	r2, [r2, #6]
 801aa9a:	e7f1      	b.n	801aa80 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x234>
 801aa9c:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 801aaa0:	b29b      	uxth	r3, r3
 801aaa2:	e7c3      	b.n	801aa2c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e0>
 801aaa4:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801aaa6:	970c      	str	r7, [sp, #48]	@ 0x30
 801aaa8:	46b4      	mov	ip, r6
 801aaaa:	9a01      	ldr	r2, [sp, #4]
 801aaac:	461f      	mov	r7, r3
 801aaae:	e78c      	b.n	801a9ca <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17e>
 801aab0:	1b7b      	subs	r3, r7, r5
 801aab2:	eb0c 0605 	add.w	r6, ip, r5
 801aab6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801aaba:	b29b      	uxth	r3, r3
 801aabc:	b2b6      	uxth	r6, r6
 801aabe:	9201      	str	r2, [sp, #4]
 801aac0:	2500      	movs	r5, #0
 801aac2:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801aac4:	4282      	cmp	r2, r0
 801aac6:	d88b      	bhi.n	801a9e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801aac8:	9a01      	ldr	r2, [sp, #4]
 801aaca:	e74b      	b.n	801a964 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x118>
 801aacc:	4297      	cmp	r7, r2
 801aace:	d332      	bcc.n	801ab36 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2ea>
 801aad0:	1abb      	subs	r3, r7, r2
 801aad2:	9208      	str	r2, [sp, #32]
 801aad4:	9501      	str	r5, [sp, #4]
 801aad6:	b29b      	uxth	r3, r3
 801aad8:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801aada:	29ff      	cmp	r1, #255	@ 0xff
 801aadc:	9908      	ldr	r1, [sp, #32]
 801aade:	eb0c 0601 	add.w	r6, ip, r1
 801aae2:	d135      	bne.n	801ab50 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801aae4:	f1a0 0e02 	sub.w	lr, r0, #2
 801aae8:	b2b6      	uxth	r6, r6
 801aaea:	45b4      	cmp	ip, r6
 801aaec:	f040 808c 	bne.w	801ac08 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3bc>
 801aaf0:	9908      	ldr	r1, [sp, #32]
 801aaf2:	4297      	cmp	r7, r2
 801aaf4:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801aaf8:	d3e2      	bcc.n	801aac0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x274>
 801aafa:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801aafc:	9904      	ldr	r1, [sp, #16]
 801aafe:	8812      	ldrh	r2, [r2, #0]
 801ab00:	1a52      	subs	r2, r2, r1
 801ab02:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801ab04:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ab08:	9a07      	ldr	r2, [sp, #28]
 801ab0a:	3201      	adds	r2, #1
 801ab0c:	428a      	cmp	r2, r1
 801ab0e:	9207      	str	r2, [sp, #28]
 801ab10:	f040 8087 	bne.w	801ac22 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d6>
 801ab14:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 801ab18:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 801ab1c:	9b04      	ldr	r3, [sp, #16]
 801ab1e:	1bed      	subs	r5, r5, r7
 801ab20:	b2ad      	uxth	r5, r5
 801ab22:	2d00      	cmp	r5, #0
 801ab24:	bf08      	it	eq
 801ab26:	461a      	moveq	r2, r3
 801ab28:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801ab2a:	bf18      	it	ne
 801ab2c:	2200      	movne	r2, #0
 801ab2e:	3301      	adds	r3, #1
 801ab30:	b292      	uxth	r2, r2
 801ab32:	930d      	str	r3, [sp, #52]	@ 0x34
 801ab34:	e70d      	b.n	801a952 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x106>
 801ab36:	1bd1      	subs	r1, r2, r7
 801ab38:	9708      	str	r7, [sp, #32]
 801ab3a:	b28b      	uxth	r3, r1
 801ab3c:	9301      	str	r3, [sp, #4]
 801ab3e:	462b      	mov	r3, r5
 801ab40:	e7ca      	b.n	801aad8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x28c>
 801ab42:	bf00      	nop
 801ab44:	24001a30 	.word	0x24001a30
 801ab48:	24001a2a 	.word	0x24001a2a
 801ab4c:	fffff7fb 	.word	0xfffff7fb
 801ab50:	b2b6      	uxth	r6, r6
 801ab52:	900b      	str	r0, [sp, #44]	@ 0x2c
 801ab54:	45b4      	cmp	ip, r6
 801ab56:	d0cb      	beq.n	801aaf0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a4>
 801ab58:	f10c 0101 	add.w	r1, ip, #1
 801ab5c:	44a4      	add	ip, r4
 801ab5e:	9117      	str	r1, [sp, #92]	@ 0x5c
 801ab60:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 801ab64:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801ab66:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801ab6a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801ab6c:	ea4f 2825 	mov.w	r8, r5, asr #8
 801ab70:	f8b1 c000 	ldrh.w	ip, [r1]
 801ab74:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801ab76:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 801ab7a:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801ab7e:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801ab82:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801ab86:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ab8a:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801ab8e:	fb1e fe01 	smulbb	lr, lr, r1
 801ab92:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801ab94:	fa5f fc8c 	uxtb.w	ip, ip
 801ab98:	fb08 e801 	mla	r8, r8, r1, lr
 801ab9c:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801aba0:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801aba2:	00ed      	lsls	r5, r5, #3
 801aba4:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801aba8:	fa1f f888 	uxth.w	r8, r8
 801abac:	fb19 f901 	smulbb	r9, r9, r1
 801abb0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801abb2:	b2ed      	uxtb	r5, r5
 801abb4:	fb0e 9e01 	mla	lr, lr, r1, r9
 801abb8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801abba:	fb1c fc01 	smulbb	ip, ip, r1
 801abbe:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801abc0:	fa1f fe8e 	uxth.w	lr, lr
 801abc4:	fb05 c501 	mla	r5, r5, r1, ip
 801abc8:	f108 0c01 	add.w	ip, r8, #1
 801abcc:	f10e 0901 	add.w	r9, lr, #1
 801abd0:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801abd2:	b2ad      	uxth	r5, r5
 801abd4:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801abd8:	f105 0c01 	add.w	ip, r5, #1
 801abdc:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801abe0:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 801abe4:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801abe8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801abec:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801abf0:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801abf4:	ea4c 0808 	orr.w	r8, ip, r8
 801abf8:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 801abfc:	ea48 0809 	orr.w	r8, r8, r9
 801ac00:	f821 8b02 	strh.w	r8, [r1], #2
 801ac04:	910b      	str	r1, [sp, #44]	@ 0x2c
 801ac06:	e7a5      	b.n	801ab54 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x308>
 801ac08:	f10c 0801 	add.w	r8, ip, #1
 801ac0c:	44a4      	add	ip, r4
 801ac0e:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801ac10:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 801ac14:	fa1f fc88 	uxth.w	ip, r8
 801ac18:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801ac1c:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801ac20:	e763      	b.n	801aaea <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29e>
 801ac22:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801ac26:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801ac2a:	1aad      	subs	r5, r5, r2
 801ac2c:	b2ad      	uxth	r5, r5
 801ac2e:	2d00      	cmp	r5, #0
 801ac30:	bf18      	it	ne
 801ac32:	2200      	movne	r2, #0
 801ac34:	9201      	str	r2, [sp, #4]
 801ac36:	e744      	b.n	801aac2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x276>
 801ac38:	4b03      	ldr	r3, [pc, #12]	@ (801ac48 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3fc>)
 801ac3a:	6818      	ldr	r0, [r3, #0]
 801ac3c:	6803      	ldr	r3, [r0, #0]
 801ac3e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801ac40:	4798      	blx	r3
 801ac42:	b01f      	add	sp, #124	@ 0x7c
 801ac44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ac48:	24001a30 	.word	0x24001a30

0801ac4c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
 801ac4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ac50:	b093      	sub	sp, #76	@ 0x4c
 801ac52:	4616      	mov	r6, r2
 801ac54:	460d      	mov	r5, r1
 801ac56:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
 801ac5a:	9003      	str	r0, [sp, #12]
 801ac5c:	9201      	str	r2, [sp, #4]
 801ac5e:	2a00      	cmp	r2, #0
 801ac60:	f000 8303 	beq.w	801b26a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x61e>
 801ac64:	6830      	ldr	r0, [r6, #0]
 801ac66:	ac0e      	add	r4, sp, #56	@ 0x38
 801ac68:	6871      	ldr	r1, [r6, #4]
 801ac6a:	c403      	stmia	r4!, {r0, r1}
 801ac6c:	6818      	ldr	r0, [r3, #0]
 801ac6e:	ac10      	add	r4, sp, #64	@ 0x40
 801ac70:	6859      	ldr	r1, [r3, #4]
 801ac72:	c403      	stmia	r4!, {r0, r1}
 801ac74:	a80e      	add	r0, sp, #56	@ 0x38
 801ac76:	f7f9 fc27 	bl	80144c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ac7a:	4631      	mov	r1, r6
 801ac7c:	a810      	add	r0, sp, #64	@ 0x40
 801ac7e:	f7f9 fc4b 	bl	8014518 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ac82:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 801ac86:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 801ac8a:	bfdb      	ittet	le
 801ac8c:	b293      	uxthle	r3, r2
 801ac8e:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801ac92:	2301      	movgt	r3, #1
 801ac94:	fb91 f3f3 	sdivle	r3, r1, r3
 801ac98:	9304      	str	r3, [sp, #16]
 801ac9a:	f105 0308 	add.w	r3, r5, #8
 801ac9e:	9904      	ldr	r1, [sp, #16]
 801aca0:	9308      	str	r3, [sp, #32]
 801aca2:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 801aca6:	440b      	add	r3, r1
 801aca8:	3b01      	subs	r3, #1
 801acaa:	fb93 f3f1 	sdiv	r3, r3, r1
 801acae:	3b01      	subs	r3, #1
 801acb0:	9908      	ldr	r1, [sp, #32]
 801acb2:	b29b      	uxth	r3, r3
 801acb4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801acb8:	9904      	ldr	r1, [sp, #16]
 801acba:	9309      	str	r3, [sp, #36]	@ 0x24
 801acbc:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 801acc0:	fb93 f0f1 	sdiv	r0, r3, r1
 801acc4:	b284      	uxth	r4, r0
 801acc6:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
 801acca:	9405      	str	r4, [sp, #20]
 801accc:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 801acd0:	fb05 3914 	mls	r9, r5, r4, r3
 801acd4:	fb19 f902 	smulbb	r9, r9, r2
 801acd8:	4489      	add	r9, r1
 801acda:	fa1f f989 	uxth.w	r9, r9
 801acde:	2d00      	cmp	r5, #0
 801ace0:	d05d      	beq.n	801ad9e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
 801ace2:	1e6a      	subs	r2, r5, #1
 801ace4:	9808      	ldr	r0, [sp, #32]
 801ace6:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
 801acea:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801acec:	fa9a fa8a 	rev.w	sl, sl
 801acf0:	4492      	add	sl, r2
 801acf2:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 801acf6:	f04f 0600 	mov.w	r6, #0
 801acfa:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 801acfe:	4411      	add	r1, r2
 801ad00:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801ad04:	4413      	add	r3, r2
 801ad06:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
 801ad0a:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 801ad0e:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 801ad12:	9302      	str	r3, [sp, #8]
 801ad14:	4bca      	ldr	r3, [pc, #808]	@ (801b040 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
 801ad16:	6818      	ldr	r0, [r3, #0]
 801ad18:	6803      	ldr	r3, [r0, #0]
 801ad1a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801ad1c:	4798      	blx	r3
 801ad1e:	4bc9      	ldr	r3, [pc, #804]	@ (801b044 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
 801ad20:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 801ad24:	2100      	movs	r1, #0
 801ad26:	881b      	ldrh	r3, [r3, #0]
 801ad28:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
 801ad2c:	fb03 2404 	mla	r4, r3, r4, r2
 801ad30:	2280      	movs	r2, #128	@ 0x80
 801ad32:	436b      	muls	r3, r5
 801ad34:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801ad38:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801ad3c:	930d      	str	r3, [sp, #52]	@ 0x34
 801ad3e:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 801ad42:	fb99 f3f3 	sdiv	r3, r9, r3
 801ad46:	9306      	str	r3, [sp, #24]
 801ad48:	9b01      	ldr	r3, [sp, #4]
 801ad4a:	43db      	mvns	r3, r3
 801ad4c:	b2db      	uxtb	r3, r3
 801ad4e:	930a      	str	r3, [sp, #40]	@ 0x28
 801ad50:	9b03      	ldr	r3, [sp, #12]
 801ad52:	3304      	adds	r3, #4
 801ad54:	4618      	mov	r0, r3
 801ad56:	930b      	str	r3, [sp, #44]	@ 0x2c
 801ad58:	f00b f874 	bl	8025e44 <memset>
 801ad5c:	4bba      	ldr	r3, [pc, #744]	@ (801b048 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
 801ad5e:	9300      	str	r3, [sp, #0]
 801ad60:	2300      	movs	r3, #0
 801ad62:	9307      	str	r3, [sp, #28]
 801ad64:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801ad66:	42a3      	cmp	r3, r4
 801ad68:	f240 827a 	bls.w	801b260 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x614>
 801ad6c:	f04f 0e07 	mov.w	lr, #7
 801ad70:	f1b9 0f00 	cmp.w	r9, #0
 801ad74:	f000 8159 	beq.w	801b02a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
 801ad78:	f89a 5000 	ldrb.w	r5, [sl]
 801ad7c:	f10a 0701 	add.w	r7, sl, #1
 801ad80:	b2ed      	uxtb	r5, r5
 801ad82:	11aa      	asrs	r2, r5, #6
 801ad84:	d10e      	bne.n	801ada4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
 801ad86:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 801ad8a:	9b03      	ldr	r3, [sp, #12]
 801ad8c:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801ad90:	88ae      	ldrh	r6, [r5, #4]
 801ad92:	f109 39ff 	add.w	r9, r9, #4294967295
 801ad96:	fa1f f989 	uxth.w	r9, r9
 801ad9a:	46ba      	mov	sl, r7
 801ad9c:	e7e8      	b.n	801ad70 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
 801ad9e:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 801ada2:	e7a6      	b.n	801acf2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
 801ada4:	2a01      	cmp	r2, #1
 801ada6:	d129      	bne.n	801adfc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
 801ada8:	f3c6 0304 	ubfx	r3, r6, #0, #5
 801adac:	f005 0203 	and.w	r2, r5, #3
 801adb0:	2103      	movs	r1, #3
 801adb2:	3b02      	subs	r3, #2
 801adb4:	4413      	add	r3, r2
 801adb6:	f3c5 0281 	ubfx	r2, r5, #2, #2
 801adba:	f3c5 1501 	ubfx	r5, r5, #4, #2
 801adbe:	f003 031f 	and.w	r3, r3, #31
 801adc2:	3a02      	subs	r2, #2
 801adc4:	3d02      	subs	r5, #2
 801adc6:	f363 0604 	bfi	r6, r3, #0, #5
 801adca:	eb02 1256 	add.w	r2, r2, r6, lsr #5
 801adce:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801add2:	f362 164a 	bfi	r6, r2, #5, #6
 801add6:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801adda:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
 801adde:	f005 051f 	and.w	r5, r5, #31
 801ade2:	fb11 2205 	smlabb	r2, r1, r5, r2
 801ade6:	f365 26cf 	bfi	r6, r5, #11, #5
 801adea:	fb1e 2303 	smlabb	r3, lr, r3, r2
 801adee:	9a03      	ldr	r2, [sp, #12]
 801adf0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801adf4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801adf8:	809e      	strh	r6, [r3, #4]
 801adfa:	e7ca      	b.n	801ad92 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
 801adfc:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 801ae00:	2a02      	cmp	r2, #2
 801ae02:	b2ab      	uxth	r3, r5
 801ae04:	d136      	bne.n	801ae74 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
 801ae06:	2101      	movs	r1, #1
 801ae08:	fb12 1205 	smlabb	r2, r2, r5, r1
 801ae0c:	4492      	add	sl, r2
 801ae0e:	463a      	mov	r2, r7
 801ae10:	4552      	cmp	r2, sl
 801ae12:	d01c      	beq.n	801ae4e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
 801ae14:	4694      	mov	ip, r2
 801ae16:	f04f 0b03 	mov.w	fp, #3
 801ae1a:	f81c 1b02 	ldrb.w	r1, [ip], #2
 801ae1e:	7852      	ldrb	r2, [r2, #1]
 801ae20:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 801ae24:	f3c1 1045 	ubfx	r0, r1, #5, #6
 801ae28:	ea4f 28d1 	mov.w	r8, r1, lsr #11
 801ae2c:	f001 021f 	and.w	r2, r1, #31
 801ae30:	460e      	mov	r6, r1
 801ae32:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801ae36:	fb1b 0008 	smlabb	r0, fp, r8, r0
 801ae3a:	fb1e 0002 	smlabb	r0, lr, r2, r0
 801ae3e:	9a03      	ldr	r2, [sp, #12]
 801ae40:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801ae44:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801ae48:	4662      	mov	r2, ip
 801ae4a:	8081      	strh	r1, [r0, #4]
 801ae4c:	e7e0      	b.n	801ae10 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
 801ae4e:	4599      	cmp	r9, r3
 801ae50:	d20b      	bcs.n	801ae6a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
 801ae52:	eba5 0509 	sub.w	r5, r5, r9
 801ae56:	eb07 0749 	add.w	r7, r7, r9, lsl #1
 801ae5a:	2d00      	cmp	r5, #0
 801ae5c:	f300 8208 	bgt.w	801b270 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x624>
 801ae60:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801ae64:	2301      	movs	r3, #1
 801ae66:	9307      	str	r3, [sp, #28]
 801ae68:	e00c      	b.n	801ae84 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801ae6a:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801ae6e:	eba9 0903 	sub.w	r9, r9, r3
 801ae72:	e790      	b.n	801ad96 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
 801ae74:	4599      	cmp	r9, r3
 801ae76:	d2fa      	bcs.n	801ae6e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
 801ae78:	eba5 0509 	sub.w	r5, r5, r9
 801ae7c:	2d00      	cmp	r5, #0
 801ae7e:	dc1d      	bgt.n	801aebc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
 801ae80:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801ae84:	f04f 0b00 	mov.w	fp, #0
 801ae88:	f1b8 0f00 	cmp.w	r8, #0
 801ae8c:	f340 81a0 	ble.w	801b1d0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x584>
 801ae90:	783b      	ldrb	r3, [r7, #0]
 801ae92:	f107 0a01 	add.w	sl, r7, #1
 801ae96:	b2db      	uxtb	r3, r3
 801ae98:	119a      	asrs	r2, r3, #6
 801ae9a:	f040 80d7 	bne.w	801b04c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
 801ae9e:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801aea2:	9a03      	ldr	r2, [sp, #12]
 801aea4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801aea8:	889e      	ldrh	r6, [r3, #4]
 801aeaa:	9b01      	ldr	r3, [sp, #4]
 801aeac:	2bff      	cmp	r3, #255	@ 0xff
 801aeae:	f040 81e8 	bne.w	801b282 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x636>
 801aeb2:	8026      	strh	r6, [r4, #0]
 801aeb4:	f108 38ff 	add.w	r8, r8, #4294967295
 801aeb8:	3402      	adds	r4, #2
 801aeba:	e0be      	b.n	801b03a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 801aebc:	9b02      	ldr	r3, [sp, #8]
 801aebe:	9a02      	ldr	r2, [sp, #8]
 801aec0:	42ab      	cmp	r3, r5
 801aec2:	bfa8      	it	ge
 801aec4:	462b      	movge	r3, r5
 801aec6:	eba2 0803 	sub.w	r8, r2, r3
 801aeca:	9a07      	ldr	r2, [sp, #28]
 801aecc:	1aed      	subs	r5, r5, r3
 801aece:	2a00      	cmp	r2, #0
 801aed0:	d05a      	beq.n	801af88 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
 801aed2:	9a01      	ldr	r2, [sp, #4]
 801aed4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801aed8:	2aff      	cmp	r2, #255	@ 0xff
 801aeda:	d049      	beq.n	801af70 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 801aedc:	f8bd e004 	ldrh.w	lr, [sp, #4]
 801aee0:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 801aee4:	42a3      	cmp	r3, r4
 801aee6:	f240 80a5 	bls.w	801b034 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 801aeea:	46bc      	mov	ip, r7
 801aeec:	8820      	ldrh	r0, [r4, #0]
 801aeee:	f81c 2b02 	ldrb.w	r2, [ip], #2
 801aef2:	ea4f 2a20 	mov.w	sl, r0, asr #8
 801aef6:	7879      	ldrb	r1, [r7, #1]
 801aef8:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801aefc:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 801af00:	fb1a fa09 	smulbb	sl, sl, r9
 801af04:	b212      	sxth	r2, r2
 801af06:	b291      	uxth	r1, r2
 801af08:	00d2      	lsls	r2, r2, #3
 801af0a:	120f      	asrs	r7, r1, #8
 801af0c:	10c9      	asrs	r1, r1, #3
 801af0e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801af12:	b2d2      	uxtb	r2, r2
 801af14:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801af18:	fb07 a70e 	mla	r7, r7, lr, sl
 801af1c:	ea4f 0ae0 	mov.w	sl, r0, asr #3
 801af20:	00c0      	lsls	r0, r0, #3
 801af22:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801af26:	b2bf      	uxth	r7, r7
 801af28:	b2c0      	uxtb	r0, r0
 801af2a:	fb1a fa09 	smulbb	sl, sl, r9
 801af2e:	fb10 f009 	smulbb	r0, r0, r9
 801af32:	fb01 a10e 	mla	r1, r1, lr, sl
 801af36:	fb02 020e 	mla	r2, r2, lr, r0
 801af3a:	1c78      	adds	r0, r7, #1
 801af3c:	b289      	uxth	r1, r1
 801af3e:	b292      	uxth	r2, r2
 801af40:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801af44:	f101 0a01 	add.w	sl, r1, #1
 801af48:	1c50      	adds	r0, r2, #1
 801af4a:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
 801af4e:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801af52:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801af56:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801af5a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801af5e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801af62:	4307      	orrs	r7, r0
 801af64:	ea47 070a 	orr.w	r7, r7, sl
 801af68:	f824 7b02 	strh.w	r7, [r4], #2
 801af6c:	4667      	mov	r7, ip
 801af6e:	e7b9      	b.n	801aee4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
 801af70:	42a3      	cmp	r3, r4
 801af72:	d95f      	bls.n	801b034 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 801af74:	463a      	mov	r2, r7
 801af76:	f812 1b02 	ldrb.w	r1, [r2], #2
 801af7a:	7878      	ldrb	r0, [r7, #1]
 801af7c:	4617      	mov	r7, r2
 801af7e:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 801af82:	f824 1b02 	strh.w	r1, [r4], #2
 801af86:	e7f3      	b.n	801af70 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 801af88:	9901      	ldr	r1, [sp, #4]
 801af8a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801af8e:	b2b2      	uxth	r2, r6
 801af90:	29ff      	cmp	r1, #255	@ 0xff
 801af92:	d044      	beq.n	801b01e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 801af94:	ea4f 2922 	mov.w	r9, r2, asr #8
 801af98:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801af9c:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801afa0:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
 801afa4:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
 801afa8:	4608      	mov	r0, r1
 801afaa:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801afae:	fb09 f901 	mul.w	r9, r9, r1
 801afb2:	fb0e fe01 	mul.w	lr, lr, r1
 801afb6:	00d1      	lsls	r1, r2, #3
 801afb8:	b2c9      	uxtb	r1, r1
 801afba:	4341      	muls	r1, r0
 801afbc:	429c      	cmp	r4, r3
 801afbe:	f4bf af61 	bcs.w	801ae84 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801afc2:	8822      	ldrh	r2, [r4, #0]
 801afc4:	1210      	asrs	r0, r2, #8
 801afc6:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801afca:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801afce:	00d2      	lsls	r2, r2, #3
 801afd0:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801afd4:	fb00 900a 	mla	r0, r0, sl, r9
 801afd8:	b2d2      	uxtb	r2, r2
 801afda:	fb0c ec0a 	mla	ip, ip, sl, lr
 801afde:	b280      	uxth	r0, r0
 801afe0:	fb02 120a 	mla	r2, r2, sl, r1
 801afe4:	fa1f fc8c 	uxth.w	ip, ip
 801afe8:	b292      	uxth	r2, r2
 801afea:	f100 0b01 	add.w	fp, r0, #1
 801afee:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801aff2:	1c50      	adds	r0, r2, #1
 801aff4:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801aff8:	f10c 0201 	add.w	r2, ip, #1
 801affc:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 801b000:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801b004:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801b008:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801b00c:	ea40 0b0b 	orr.w	fp, r0, fp
 801b010:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801b014:	ea4b 0b0c 	orr.w	fp, fp, ip
 801b018:	f824 bb02 	strh.w	fp, [r4], #2
 801b01c:	e7ce      	b.n	801afbc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
 801b01e:	429c      	cmp	r4, r3
 801b020:	f4bf af30 	bcs.w	801ae84 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801b024:	f824 2b02 	strh.w	r2, [r4], #2
 801b028:	e7f9      	b.n	801b01e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 801b02a:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801b02e:	4657      	mov	r7, sl
 801b030:	464d      	mov	r5, r9
 801b032:	e727      	b.n	801ae84 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801b034:	2300      	movs	r3, #0
 801b036:	e716      	b.n	801ae66 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
 801b038:	44bb      	add	fp, r7
 801b03a:	4657      	mov	r7, sl
 801b03c:	e724      	b.n	801ae88 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
 801b03e:	bf00      	nop
 801b040:	24001a30 	.word	0x24001a30
 801b044:	24001a2a 	.word	0x24001a2a
 801b048:	24000100 	.word	0x24000100
 801b04c:	2a01      	cmp	r2, #1
 801b04e:	d12a      	bne.n	801b0a6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
 801b050:	f3c6 0104 	ubfx	r1, r6, #0, #5
 801b054:	f003 0203 	and.w	r2, r3, #3
 801b058:	f3c3 0081 	ubfx	r0, r3, #2, #2
 801b05c:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801b060:	3902      	subs	r1, #2
 801b062:	3802      	subs	r0, #2
 801b064:	3b02      	subs	r3, #2
 801b066:	4411      	add	r1, r2
 801b068:	f001 011f 	and.w	r1, r1, #31
 801b06c:	f361 0604 	bfi	r6, r1, #0, #5
 801b070:	eb00 1056 	add.w	r0, r0, r6, lsr #5
 801b074:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801b078:	f360 164a 	bfi	r6, r0, #5, #6
 801b07c:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801b080:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
 801b084:	f002 031f 	and.w	r3, r2, #31
 801b088:	2203      	movs	r2, #3
 801b08a:	f363 26cf 	bfi	r6, r3, #11, #5
 801b08e:	fb12 0303 	smlabb	r3, r2, r3, r0
 801b092:	2207      	movs	r2, #7
 801b094:	fb12 3301 	smlabb	r3, r2, r1, r3
 801b098:	9a03      	ldr	r2, [sp, #12]
 801b09a:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801b09e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b0a2:	809e      	strh	r6, [r3, #4]
 801b0a4:	e701      	b.n	801aeaa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
 801b0a6:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
 801b0aa:	4647      	mov	r7, r8
 801b0ac:	45a8      	cmp	r8, r5
 801b0ae:	bfa8      	it	ge
 801b0b0:	462f      	movge	r7, r5
 801b0b2:	2a02      	cmp	r2, #2
 801b0b4:	d154      	bne.n	801b160 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
 801b0b6:	9b01      	ldr	r3, [sp, #4]
 801b0b8:	2bff      	cmp	r3, #255	@ 0xff
 801b0ba:	d01a      	beq.n	801b0f2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 801b0bc:	eb0b 0307 	add.w	r3, fp, r7
 801b0c0:	2b40      	cmp	r3, #64	@ 0x40
 801b0c2:	dd16      	ble.n	801b0f2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 801b0c4:	ea4f 094b 	mov.w	r9, fp, lsl #1
 801b0c8:	9800      	ldr	r0, [sp, #0]
 801b0ca:	4649      	mov	r1, r9
 801b0cc:	f7f5 f930 	bl	8010330 <_ZN8touchgfx5paint9flushLineEPmi>
 801b0d0:	465a      	mov	r2, fp
 801b0d2:	9b01      	ldr	r3, [sp, #4]
 801b0d4:	4620      	mov	r0, r4
 801b0d6:	9900      	ldr	r1, [sp, #0]
 801b0d8:	444c      	add	r4, r9
 801b0da:	f7f5 f967 	bl	80103ac <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801b0de:	9b00      	ldr	r3, [sp, #0]
 801b0e0:	f04f 0b00 	mov.w	fp, #0
 801b0e4:	461a      	mov	r2, r3
 801b0e6:	4b6a      	ldr	r3, [pc, #424]	@ (801b290 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
 801b0e8:	429a      	cmp	r2, r3
 801b0ea:	bf0c      	ite	eq
 801b0ec:	4b69      	ldreq	r3, [pc, #420]	@ (801b294 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801b0ee:	4b68      	ldrne	r3, [pc, #416]	@ (801b290 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
 801b0f0:	9300      	str	r3, [sp, #0]
 801b0f2:	4652      	mov	r2, sl
 801b0f4:	2100      	movs	r1, #0
 801b0f6:	42a9      	cmp	r1, r5
 801b0f8:	da2c      	bge.n	801b154 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
 801b0fa:	4694      	mov	ip, r2
 801b0fc:	f04f 0903 	mov.w	r9, #3
 801b100:	42b9      	cmp	r1, r7
 801b102:	f81c 3b02 	ldrb.w	r3, [ip], #2
 801b106:	7852      	ldrb	r2, [r2, #1]
 801b108:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 801b10c:	f3c3 1045 	ubfx	r0, r3, #5, #6
 801b110:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
 801b114:	f003 021f 	and.w	r2, r3, #31
 801b118:	461e      	mov	r6, r3
 801b11a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801b11e:	fb19 000e 	smlabb	r0, r9, lr, r0
 801b122:	f04f 0e07 	mov.w	lr, #7
 801b126:	fb1e 0002 	smlabb	r0, lr, r2, r0
 801b12a:	9a03      	ldr	r2, [sp, #12]
 801b12c:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801b130:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801b134:	8083      	strh	r3, [r0, #4]
 801b136:	da0a      	bge.n	801b14e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
 801b138:	9a01      	ldr	r2, [sp, #4]
 801b13a:	2aff      	cmp	r2, #255	@ 0xff
 801b13c:	bf13      	iteet	ne
 801b13e:	9a00      	ldrne	r2, [sp, #0]
 801b140:	8023      	strheq	r3, [r4, #0]
 801b142:	3402      	addeq	r4, #2
 801b144:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
 801b148:	bf18      	it	ne
 801b14a:	f10b 0b01 	addne.w	fp, fp, #1
 801b14e:	3101      	adds	r1, #1
 801b150:	4662      	mov	r2, ip
 801b152:	e7d0      	b.n	801b0f6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
 801b154:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 801b158:	eba8 0807 	sub.w	r8, r8, r7
 801b15c:	1bed      	subs	r5, r5, r7
 801b15e:	e76c      	b.n	801b03a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 801b160:	9b01      	ldr	r3, [sp, #4]
 801b162:	eba8 0807 	sub.w	r8, r8, r7
 801b166:	1bed      	subs	r5, r5, r7
 801b168:	fa1f f986 	uxth.w	r9, r6
 801b16c:	2bff      	cmp	r3, #255	@ 0xff
 801b16e:	d027      	beq.n	801b1c0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x574>
 801b170:	eb0b 0307 	add.w	r3, fp, r7
 801b174:	2b40      	cmp	r3, #64	@ 0x40
 801b176:	dd18      	ble.n	801b1aa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x55e>
 801b178:	ea4f 034b 	mov.w	r3, fp, lsl #1
 801b17c:	9800      	ldr	r0, [sp, #0]
 801b17e:	4619      	mov	r1, r3
 801b180:	930c      	str	r3, [sp, #48]	@ 0x30
 801b182:	f7f5 f8d5 	bl	8010330 <_ZN8touchgfx5paint9flushLineEPmi>
 801b186:	465a      	mov	r2, fp
 801b188:	9b01      	ldr	r3, [sp, #4]
 801b18a:	4620      	mov	r0, r4
 801b18c:	9900      	ldr	r1, [sp, #0]
 801b18e:	f04f 0b00 	mov.w	fp, #0
 801b192:	f7f5 f90b 	bl	80103ac <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801b196:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b198:	441c      	add	r4, r3
 801b19a:	9b00      	ldr	r3, [sp, #0]
 801b19c:	461a      	mov	r2, r3
 801b19e:	4b3c      	ldr	r3, [pc, #240]	@ (801b290 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
 801b1a0:	429a      	cmp	r2, r3
 801b1a2:	bf0c      	ite	eq
 801b1a4:	4b3b      	ldreq	r3, [pc, #236]	@ (801b294 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801b1a6:	4b3a      	ldrne	r3, [pc, #232]	@ (801b290 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x644>)
 801b1a8:	9300      	str	r3, [sp, #0]
 801b1aa:	9b00      	ldr	r3, [sp, #0]
 801b1ac:	eb03 024b 	add.w	r2, r3, fp, lsl #1
 801b1b0:	463b      	mov	r3, r7
 801b1b2:	2b00      	cmp	r3, #0
 801b1b4:	f43f af40 	beq.w	801b038 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
 801b1b8:	f822 9b02 	strh.w	r9, [r2], #2
 801b1bc:	3b01      	subs	r3, #1
 801b1be:	e7f8      	b.n	801b1b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x566>
 801b1c0:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 801b1c4:	42a7      	cmp	r7, r4
 801b1c6:	f67f af38 	bls.w	801b03a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 801b1ca:	f824 9b02 	strh.w	r9, [r4], #2
 801b1ce:	e7f9      	b.n	801b1c4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x578>
 801b1d0:	f1bb 0f00 	cmp.w	fp, #0
 801b1d4:	d00c      	beq.n	801b1f0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a4>
 801b1d6:	ea4f 084b 	mov.w	r8, fp, lsl #1
 801b1da:	9800      	ldr	r0, [sp, #0]
 801b1dc:	4641      	mov	r1, r8
 801b1de:	f7f5 f8a7 	bl	8010330 <_ZN8touchgfx5paint9flushLineEPmi>
 801b1e2:	4620      	mov	r0, r4
 801b1e4:	4444      	add	r4, r8
 801b1e6:	9b01      	ldr	r3, [sp, #4]
 801b1e8:	465a      	mov	r2, fp
 801b1ea:	9900      	ldr	r1, [sp, #0]
 801b1ec:	f7f5 f8de 	bl	80103ac <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801b1f0:	4b29      	ldr	r3, [pc, #164]	@ (801b298 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 801b1f2:	9a02      	ldr	r2, [sp, #8]
 801b1f4:	881b      	ldrh	r3, [r3, #0]
 801b1f6:	1a9b      	subs	r3, r3, r2
 801b1f8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b1fc:	9b06      	ldr	r3, [sp, #24]
 801b1fe:	3301      	adds	r3, #1
 801b200:	9306      	str	r3, [sp, #24]
 801b202:	9a06      	ldr	r2, [sp, #24]
 801b204:	9b04      	ldr	r3, [sp, #16]
 801b206:	4293      	cmp	r3, r2
 801b208:	d120      	bne.n	801b24c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x600>
 801b20a:	9b05      	ldr	r3, [sp, #20]
 801b20c:	2100      	movs	r1, #0
 801b20e:	9a05      	ldr	r2, [sp, #20]
 801b210:	f04f 0600 	mov.w	r6, #0
 801b214:	f103 0801 	add.w	r8, r3, #1
 801b218:	9b08      	ldr	r3, [sp, #32]
 801b21a:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
 801b21e:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 801b222:	2280      	movs	r2, #128	@ 0x80
 801b224:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 801b228:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b22a:	ba3f      	rev	r7, r7
 801b22c:	eba9 0905 	sub.w	r9, r9, r5
 801b230:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801b232:	441f      	add	r7, r3
 801b234:	f00a fe06 	bl	8025e44 <memset>
 801b238:	fa1f f989 	uxth.w	r9, r9
 801b23c:	2300      	movs	r3, #0
 801b23e:	f8cd 8014 	str.w	r8, [sp, #20]
 801b242:	9306      	str	r3, [sp, #24]
 801b244:	f7f5 f85c 	bl	8010300 <_ZN8touchgfx5paint8tearDownEv>
 801b248:	46ba      	mov	sl, r7
 801b24a:	e58b      	b.n	801ad64 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
 801b24c:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
 801b250:	9b02      	ldr	r3, [sp, #8]
 801b252:	eba9 0903 	sub.w	r9, r9, r3
 801b256:	eba9 0505 	sub.w	r5, r9, r5
 801b25a:	fa1f f985 	uxth.w	r9, r5
 801b25e:	e7f1      	b.n	801b244 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5f8>
 801b260:	4b0e      	ldr	r3, [pc, #56]	@ (801b29c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
 801b262:	6818      	ldr	r0, [r3, #0]
 801b264:	6803      	ldr	r3, [r0, #0]
 801b266:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b268:	4798      	blx	r3
 801b26a:	b013      	add	sp, #76	@ 0x4c
 801b26c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b270:	9b02      	ldr	r3, [sp, #8]
 801b272:	9a02      	ldr	r2, [sp, #8]
 801b274:	42ab      	cmp	r3, r5
 801b276:	bfa8      	it	ge
 801b278:	462b      	movge	r3, r5
 801b27a:	eba2 0803 	sub.w	r8, r2, r3
 801b27e:	1aed      	subs	r5, r5, r3
 801b280:	e627      	b.n	801aed2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
 801b282:	f108 38ff 	add.w	r8, r8, #4294967295
 801b286:	fa1f f986 	uxth.w	r9, r6
 801b28a:	2500      	movs	r5, #0
 801b28c:	2701      	movs	r7, #1
 801b28e:	e76f      	b.n	801b170 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x524>
 801b290:	24000100 	.word	0x24000100
 801b294:	24000200 	.word	0x24000200
 801b298:	24001a2a 	.word	0x24001a2a
 801b29c:	24001a30 	.word	0x24001a30

0801b2a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801b2a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b2a4:	b08f      	sub	sp, #60	@ 0x3c
 801b2a6:	461c      	mov	r4, r3
 801b2a8:	460f      	mov	r7, r1
 801b2aa:	9203      	str	r2, [sp, #12]
 801b2ac:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801b2b0:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801b2b2:	9202      	str	r2, [sp, #8]
 801b2b4:	2a00      	cmp	r2, #0
 801b2b6:	f000 8128 	beq.w	801b50a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801b2ba:	6820      	ldr	r0, [r4, #0]
 801b2bc:	aa0a      	add	r2, sp, #40	@ 0x28
 801b2be:	6861      	ldr	r1, [r4, #4]
 801b2c0:	c203      	stmia	r2!, {r0, r1}
 801b2c2:	6818      	ldr	r0, [r3, #0]
 801b2c4:	aa0c      	add	r2, sp, #48	@ 0x30
 801b2c6:	6859      	ldr	r1, [r3, #4]
 801b2c8:	c203      	stmia	r2!, {r0, r1}
 801b2ca:	a80a      	add	r0, sp, #40	@ 0x28
 801b2cc:	f7f9 f8fc 	bl	80144c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b2d0:	4621      	mov	r1, r4
 801b2d2:	a80c      	add	r0, sp, #48	@ 0x30
 801b2d4:	f7f9 f920 	bl	8014518 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b2d8:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801b2dc:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 801b2e0:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801b2e4:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 801b2e8:	bfdb      	ittet	le
 801b2ea:	b2b3      	uxthle	r3, r6
 801b2ec:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801b2f0:	2301      	movgt	r3, #1
 801b2f2:	fb92 f3f3 	sdivle	r3, r2, r3
 801b2f6:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801b2fa:	441d      	add	r5, r3
 801b2fc:	fb92 f1f3 	sdiv	r1, r2, r3
 801b300:	fa1f fc81 	uxth.w	ip, r1
 801b304:	3d01      	subs	r5, #1
 801b306:	fb0c 2413 	mls	r4, ip, r3, r2
 801b30a:	4661      	mov	r1, ip
 801b30c:	fb14 f406 	smulbb	r4, r4, r6
 801b310:	4404      	add	r4, r0
 801b312:	fb95 f5f3 	sdiv	r5, r5, r3
 801b316:	b2a4      	uxth	r4, r4
 801b318:	b121      	cbz	r1, 801b324 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x84>
 801b31a:	9b03      	ldr	r3, [sp, #12]
 801b31c:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801b320:	ba1b      	rev	r3, r3
 801b322:	441f      	add	r7, r3
 801b324:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801b328:	b2ad      	uxth	r5, r5
 801b32a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801b32e:	4418      	add	r0, r3
 801b330:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801b334:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801b338:	00ad      	lsls	r5, r5, #2
 801b33a:	441a      	add	r2, r3
 801b33c:	4b74      	ldr	r3, [pc, #464]	@ (801b510 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801b33e:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 801b342:	6818      	ldr	r0, [r3, #0]
 801b344:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801b348:	6803      	ldr	r3, [r0, #0]
 801b34a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801b34c:	4798      	blx	r3
 801b34e:	4a71      	ldr	r2, [pc, #452]	@ (801b514 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801b350:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 801b354:	2c00      	cmp	r4, #0
 801b356:	8813      	ldrh	r3, [r2, #0]
 801b358:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 801b35c:	bf0c      	ite	eq
 801b35e:	46c8      	moveq	r8, r9
 801b360:	f04f 0800 	movne.w	r8, #0
 801b364:	9209      	str	r2, [sp, #36]	@ 0x24
 801b366:	fb03 c101 	mla	r1, r3, r1, ip
 801b36a:	4373      	muls	r3, r6
 801b36c:	fa1f f888 	uxth.w	r8, r8
 801b370:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b374:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b378:	9304      	str	r3, [sp, #16]
 801b37a:	1d2b      	adds	r3, r5, #4
 801b37c:	9305      	str	r3, [sp, #20]
 801b37e:	2300      	movs	r3, #0
 801b380:	9301      	str	r3, [sp, #4]
 801b382:	9a04      	ldr	r2, [sp, #16]
 801b384:	4282      	cmp	r2, r0
 801b386:	f240 80bb 	bls.w	801b500 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801b38a:	b95b      	cbnz	r3, 801b3a4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x104>
 801b38c:	783a      	ldrb	r2, [r7, #0]
 801b38e:	0993      	lsrs	r3, r2, #6
 801b390:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801b394:	9201      	str	r2, [sp, #4]
 801b396:	1e5a      	subs	r2, r3, #1
 801b398:	2a02      	cmp	r2, #2
 801b39a:	bf8d      	iteet	hi
 801b39c:	787b      	ldrbhi	r3, [r7, #1]
 801b39e:	3701      	addls	r7, #1
 801b3a0:	b29b      	uxthls	r3, r3
 801b3a2:	3702      	addhi	r7, #2
 801b3a4:	b184      	cbz	r4, 801b3c8 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x128>
 801b3a6:	429c      	cmp	r4, r3
 801b3a8:	bf91      	iteee	ls
 801b3aa:	1b1c      	subls	r4, r3, r4
 801b3ac:	1ae4      	subhi	r4, r4, r3
 801b3ae:	46c4      	movhi	ip, r8
 801b3b0:	f04f 0a00 	movhi.w	sl, #0
 801b3b4:	bf9b      	ittet	ls
 801b3b6:	fa1f fa84 	uxthls.w	sl, r4
 801b3ba:	2400      	movls	r4, #0
 801b3bc:	b2a4      	uxthhi	r4, r4
 801b3be:	fa1f fc89 	uxthls.w	ip, r9
 801b3c2:	4653      	mov	r3, sl
 801b3c4:	46e0      	mov	r8, ip
 801b3c6:	e7dc      	b.n	801b382 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe2>
 801b3c8:	2204      	movs	r2, #4
 801b3ca:	9905      	ldr	r1, [sp, #20]
 801b3cc:	4543      	cmp	r3, r8
 801b3ce:	4615      	mov	r5, r2
 801b3d0:	9a01      	ldr	r2, [sp, #4]
 801b3d2:	bf24      	itt	cs
 801b3d4:	eba3 0a08 	subcs.w	sl, r3, r8
 801b3d8:	46c6      	movcs	lr, r8
 801b3da:	fb15 1202 	smlabb	r2, r5, r2, r1
 801b3de:	9903      	ldr	r1, [sp, #12]
 801b3e0:	bf3c      	itt	cc
 801b3e2:	eba8 0c03 	subcc.w	ip, r8, r3
 801b3e6:	469e      	movcc	lr, r3
 801b3e8:	588a      	ldr	r2, [r1, r2]
 801b3ea:	bf26      	itte	cs
 801b3ec:	fa1f fa8a 	uxthcs.w	sl, sl
 801b3f0:	46a4      	movcs	ip, r4
 801b3f2:	fa1f fc8c 	uxthcc.w	ip, ip
 801b3f6:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801b3fa:	bf38      	it	cc
 801b3fc:	46a2      	movcc	sl, r4
 801b3fe:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801b402:	2900      	cmp	r1, #0
 801b404:	d066      	beq.n	801b4d4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801b406:	29ff      	cmp	r1, #255	@ 0xff
 801b408:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801b40c:	d114      	bne.n	801b438 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801b40e:	9d02      	ldr	r5, [sp, #8]
 801b410:	2dff      	cmp	r5, #255	@ 0xff
 801b412:	d111      	bne.n	801b438 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801b414:	0951      	lsrs	r1, r2, #5
 801b416:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801b41a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b41e:	4486      	add	lr, r0
 801b420:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801b424:	f026 0607 	bic.w	r6, r6, #7
 801b428:	430e      	orrs	r6, r1
 801b42a:	4316      	orrs	r6, r2
 801b42c:	b2b6      	uxth	r6, r6
 801b42e:	4586      	cmp	lr, r0
 801b430:	d051      	beq.n	801b4d6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801b432:	f820 6b02 	strh.w	r6, [r0], #2
 801b436:	e7fa      	b.n	801b42e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801b438:	9d02      	ldr	r5, [sp, #8]
 801b43a:	b2f6      	uxtb	r6, r6
 801b43c:	4486      	add	lr, r0
 801b43e:	4369      	muls	r1, r5
 801b440:	1c4d      	adds	r5, r1, #1
 801b442:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801b446:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801b44a:	b2d2      	uxtb	r2, r2
 801b44c:	122d      	asrs	r5, r5, #8
 801b44e:	ea6f 0b05 	mvn.w	fp, r5
 801b452:	b2ad      	uxth	r5, r5
 801b454:	fb11 f105 	smulbb	r1, r1, r5
 801b458:	fa5f fb8b 	uxtb.w	fp, fp
 801b45c:	fb16 f605 	smulbb	r6, r6, r5
 801b460:	fb12 f205 	smulbb	r2, r2, r5
 801b464:	b289      	uxth	r1, r1
 801b466:	b2b6      	uxth	r6, r6
 801b468:	b292      	uxth	r2, r2
 801b46a:	9106      	str	r1, [sp, #24]
 801b46c:	9607      	str	r6, [sp, #28]
 801b46e:	9208      	str	r2, [sp, #32]
 801b470:	4586      	cmp	lr, r0
 801b472:	d030      	beq.n	801b4d6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801b474:	8802      	ldrh	r2, [r0, #0]
 801b476:	9906      	ldr	r1, [sp, #24]
 801b478:	1216      	asrs	r6, r2, #8
 801b47a:	10d5      	asrs	r5, r2, #3
 801b47c:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801b480:	00d2      	lsls	r2, r2, #3
 801b482:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801b486:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801b48a:	b2d2      	uxtb	r2, r2
 801b48c:	fb06 160b 	mla	r6, r6, fp, r1
 801b490:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801b494:	9907      	ldr	r1, [sp, #28]
 801b496:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801b49a:	b2b6      	uxth	r6, r6
 801b49c:	fb05 150b 	mla	r5, r5, fp, r1
 801b4a0:	9908      	ldr	r1, [sp, #32]
 801b4a2:	fb02 120b 	mla	r2, r2, fp, r1
 801b4a6:	1c71      	adds	r1, r6, #1
 801b4a8:	b2ad      	uxth	r5, r5
 801b4aa:	b292      	uxth	r2, r2
 801b4ac:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801b4b0:	1c51      	adds	r1, r2, #1
 801b4b2:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801b4b6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b4ba:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b4be:	4316      	orrs	r6, r2
 801b4c0:	1c6a      	adds	r2, r5, #1
 801b4c2:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801b4c6:	096d      	lsrs	r5, r5, #5
 801b4c8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801b4cc:	432e      	orrs	r6, r5
 801b4ce:	f820 6b02 	strh.w	r6, [r0], #2
 801b4d2:	e7cd      	b.n	801b470 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801b4d4:	4470      	add	r0, lr
 801b4d6:	4543      	cmp	r3, r8
 801b4d8:	f4ff af73 	bcc.w	801b3c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 801b4dc:	fa1f fc89 	uxth.w	ip, r9
 801b4e0:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801b4e4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b4e6:	eba4 040c 	sub.w	r4, r4, ip
 801b4ea:	881b      	ldrh	r3, [r3, #0]
 801b4ec:	b2a4      	uxth	r4, r4
 801b4ee:	eba3 0309 	sub.w	r3, r3, r9
 801b4f2:	2c00      	cmp	r4, #0
 801b4f4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b4f8:	bf18      	it	ne
 801b4fa:	f04f 0c00 	movne.w	ip, #0
 801b4fe:	e760      	b.n	801b3c2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 801b500:	4b03      	ldr	r3, [pc, #12]	@ (801b510 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801b502:	6818      	ldr	r0, [r3, #0]
 801b504:	6803      	ldr	r3, [r0, #0]
 801b506:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b508:	4798      	blx	r3
 801b50a:	b00f      	add	sp, #60	@ 0x3c
 801b50c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b510:	24001a30 	.word	0x24001a30
 801b514:	24001a2a 	.word	0x24001a2a

0801b518 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801b518:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b51c:	b093      	sub	sp, #76	@ 0x4c
 801b51e:	461c      	mov	r4, r3
 801b520:	9205      	str	r2, [sp, #20]
 801b522:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 801b526:	9101      	str	r1, [sp, #4]
 801b528:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801b52a:	9202      	str	r2, [sp, #8]
 801b52c:	2a00      	cmp	r2, #0
 801b52e:	f000 812e 	beq.w	801b78e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 801b532:	6820      	ldr	r0, [r4, #0]
 801b534:	aa0e      	add	r2, sp, #56	@ 0x38
 801b536:	6861      	ldr	r1, [r4, #4]
 801b538:	c203      	stmia	r2!, {r0, r1}
 801b53a:	6818      	ldr	r0, [r3, #0]
 801b53c:	aa10      	add	r2, sp, #64	@ 0x40
 801b53e:	6859      	ldr	r1, [r3, #4]
 801b540:	c203      	stmia	r2!, {r0, r1}
 801b542:	a80e      	add	r0, sp, #56	@ 0x38
 801b544:	f7f8 ffc0 	bl	80144c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b548:	4621      	mov	r1, r4
 801b54a:	a810      	add	r0, sp, #64	@ 0x40
 801b54c:	f7f8 ffe4 	bl	8014518 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b550:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 801b554:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 801b558:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801b55c:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 801b560:	bfdb      	ittet	le
 801b562:	b2b3      	uxthle	r3, r6
 801b564:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801b568:	2301      	movgt	r3, #1
 801b56a:	fb92 f3f3 	sdivle	r3, r2, r3
 801b56e:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801b572:	441d      	add	r5, r3
 801b574:	fb92 f1f3 	sdiv	r1, r2, r3
 801b578:	fa1f fc81 	uxth.w	ip, r1
 801b57c:	3d01      	subs	r5, #1
 801b57e:	fb0c 2413 	mls	r4, ip, r3, r2
 801b582:	4661      	mov	r1, ip
 801b584:	fb14 f406 	smulbb	r4, r4, r6
 801b588:	4404      	add	r4, r0
 801b58a:	fb95 f5f3 	sdiv	r5, r5, r3
 801b58e:	b2a4      	uxth	r4, r4
 801b590:	b131      	cbz	r1, 801b5a0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x88>
 801b592:	9b05      	ldr	r3, [sp, #20]
 801b594:	9901      	ldr	r1, [sp, #4]
 801b596:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801b59a:	ba1b      	rev	r3, r3
 801b59c:	4419      	add	r1, r3
 801b59e:	9101      	str	r1, [sp, #4]
 801b5a0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801b5a4:	b2ad      	uxth	r5, r5
 801b5a6:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801b5aa:	4418      	add	r0, r3
 801b5ac:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 801b5b0:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 801b5b4:	00ad      	lsls	r5, r5, #2
 801b5b6:	441a      	add	r2, r3
 801b5b8:	4b76      	ldr	r3, [pc, #472]	@ (801b794 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801b5ba:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 801b5be:	6818      	ldr	r0, [r3, #0]
 801b5c0:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 801b5c4:	6803      	ldr	r3, [r0, #0]
 801b5c6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801b5c8:	4798      	blx	r3
 801b5ca:	4973      	ldr	r1, [pc, #460]	@ (801b798 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801b5cc:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 801b5d0:	2c00      	cmp	r4, #0
 801b5d2:	880b      	ldrh	r3, [r1, #0]
 801b5d4:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801b5d8:	910d      	str	r1, [sp, #52]	@ 0x34
 801b5da:	fb03 c202 	mla	r2, r3, r2, ip
 801b5de:	bf08      	it	eq
 801b5e0:	46dc      	moveq	ip, fp
 801b5e2:	fb03 f306 	mul.w	r3, r3, r6
 801b5e6:	bf18      	it	ne
 801b5e8:	f04f 0c00 	movne.w	ip, #0
 801b5ec:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b5f0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801b5f4:	fa1f fc8c 	uxth.w	ip, ip
 801b5f8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b5fc:	9106      	str	r1, [sp, #24]
 801b5fe:	9308      	str	r3, [sp, #32]
 801b600:	1d2b      	adds	r3, r5, #4
 801b602:	9309      	str	r3, [sp, #36]	@ 0x24
 801b604:	9b02      	ldr	r3, [sp, #8]
 801b606:	43da      	mvns	r2, r3
 801b608:	2300      	movs	r3, #0
 801b60a:	b2d2      	uxtb	r2, r2
 801b60c:	9303      	str	r3, [sp, #12]
 801b60e:	9207      	str	r2, [sp, #28]
 801b610:	9a08      	ldr	r2, [sp, #32]
 801b612:	4282      	cmp	r2, r0
 801b614:	f240 80b6 	bls.w	801b784 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26c>
 801b618:	b963      	cbnz	r3, 801b634 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 801b61a:	9b01      	ldr	r3, [sp, #4]
 801b61c:	781a      	ldrb	r2, [r3, #0]
 801b61e:	0993      	lsrs	r3, r2, #6
 801b620:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801b624:	9203      	str	r2, [sp, #12]
 801b626:	1e5a      	subs	r2, r3, #1
 801b628:	2a02      	cmp	r2, #2
 801b62a:	d815      	bhi.n	801b658 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x140>
 801b62c:	9a01      	ldr	r2, [sp, #4]
 801b62e:	b29b      	uxth	r3, r3
 801b630:	3201      	adds	r2, #1
 801b632:	9201      	str	r2, [sp, #4]
 801b634:	b1b4      	cbz	r4, 801b664 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14c>
 801b636:	429c      	cmp	r4, r3
 801b638:	bf91      	iteee	ls
 801b63a:	1b1c      	subls	r4, r3, r4
 801b63c:	1ae4      	subhi	r4, r4, r3
 801b63e:	4666      	movhi	r6, ip
 801b640:	f04f 0800 	movhi.w	r8, #0
 801b644:	bf9b      	ittet	ls
 801b646:	fa1f f884 	uxthls.w	r8, r4
 801b64a:	2400      	movls	r4, #0
 801b64c:	b2a4      	uxthhi	r4, r4
 801b64e:	fa1f f68b 	uxthls.w	r6, fp
 801b652:	4643      	mov	r3, r8
 801b654:	46b4      	mov	ip, r6
 801b656:	e7db      	b.n	801b610 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf8>
 801b658:	9a01      	ldr	r2, [sp, #4]
 801b65a:	9b01      	ldr	r3, [sp, #4]
 801b65c:	3202      	adds	r2, #2
 801b65e:	785b      	ldrb	r3, [r3, #1]
 801b660:	9201      	str	r2, [sp, #4]
 801b662:	e7e7      	b.n	801b634 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11c>
 801b664:	2203      	movs	r2, #3
 801b666:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801b668:	4563      	cmp	r3, ip
 801b66a:	4615      	mov	r5, r2
 801b66c:	9a03      	ldr	r2, [sp, #12]
 801b66e:	bf2c      	ite	cs
 801b670:	eba3 080c 	subcs.w	r8, r3, ip
 801b674:	ebac 0603 	subcc.w	r6, ip, r3
 801b678:	fb15 1202 	smlabb	r2, r5, r2, r1
 801b67c:	9905      	ldr	r1, [sp, #20]
 801b67e:	bf24      	itt	cs
 801b680:	fa1f f888 	uxthcs.w	r8, r8
 801b684:	46e1      	movcs	r9, ip
 801b686:	eb01 0502 	add.w	r5, r1, r2
 801b68a:	9902      	ldr	r1, [sp, #8]
 801b68c:	bf2f      	iteee	cs
 801b68e:	4626      	movcs	r6, r4
 801b690:	b2b6      	uxthcc	r6, r6
 801b692:	4699      	movcc	r9, r3
 801b694:	46a0      	movcc	r8, r4
 801b696:	29ff      	cmp	r1, #255	@ 0xff
 801b698:	d04a      	beq.n	801b730 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801b69a:	9f06      	ldr	r7, [sp, #24]
 801b69c:	46ca      	mov	sl, r9
 801b69e:	78a9      	ldrb	r1, [r5, #2]
 801b6a0:	9004      	str	r0, [sp, #16]
 801b6a2:	4379      	muls	r1, r7
 801b6a4:	910a      	str	r1, [sp, #40]	@ 0x28
 801b6a6:	7869      	ldrb	r1, [r5, #1]
 801b6a8:	4379      	muls	r1, r7
 801b6aa:	910b      	str	r1, [sp, #44]	@ 0x2c
 801b6ac:	9905      	ldr	r1, [sp, #20]
 801b6ae:	5c8a      	ldrb	r2, [r1, r2]
 801b6b0:	437a      	muls	r2, r7
 801b6b2:	920c      	str	r2, [sp, #48]	@ 0x30
 801b6b4:	f1ba 0f00 	cmp.w	sl, #0
 801b6b8:	d03d      	beq.n	801b736 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801b6ba:	9a04      	ldr	r2, [sp, #16]
 801b6bc:	f10a 3aff 	add.w	sl, sl, #4294967295
 801b6c0:	9f07      	ldr	r7, [sp, #28]
 801b6c2:	8812      	ldrh	r2, [r2, #0]
 801b6c4:	fa1f fa8a 	uxth.w	sl, sl
 801b6c8:	46be      	mov	lr, r7
 801b6ca:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801b6cc:	1215      	asrs	r5, r2, #8
 801b6ce:	10d1      	asrs	r1, r2, #3
 801b6d0:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801b6d4:	00d2      	lsls	r2, r2, #3
 801b6d6:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801b6da:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801b6de:	b2d2      	uxtb	r2, r2
 801b6e0:	fb05 750e 	mla	r5, r5, lr, r7
 801b6e4:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801b6e8:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801b6ea:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801b6ee:	b2ad      	uxth	r5, r5
 801b6f0:	fb01 710e 	mla	r1, r1, lr, r7
 801b6f4:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801b6f6:	fb02 720e 	mla	r2, r2, lr, r7
 801b6fa:	f105 0e01 	add.w	lr, r5, #1
 801b6fe:	b289      	uxth	r1, r1
 801b700:	b292      	uxth	r2, r2
 801b702:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801b706:	f102 0e01 	add.w	lr, r2, #1
 801b70a:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801b70e:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801b712:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b716:	4315      	orrs	r5, r2
 801b718:	1c4a      	adds	r2, r1, #1
 801b71a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b71e:	9a04      	ldr	r2, [sp, #16]
 801b720:	0949      	lsrs	r1, r1, #5
 801b722:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801b726:	430d      	orrs	r5, r1
 801b728:	f822 5b02 	strh.w	r5, [r2], #2
 801b72c:	9204      	str	r2, [sp, #16]
 801b72e:	e7c1      	b.n	801b6b4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19c>
 801b730:	4649      	mov	r1, r9
 801b732:	4686      	mov	lr, r0
 801b734:	b999      	cbnz	r1, 801b75e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x246>
 801b736:	4563      	cmp	r3, ip
 801b738:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801b73c:	d389      	bcc.n	801b652 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 801b73e:	fa1f f68b 	uxth.w	r6, fp
 801b742:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 801b746:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801b748:	1ba4      	subs	r4, r4, r6
 801b74a:	881b      	ldrh	r3, [r3, #0]
 801b74c:	b2a4      	uxth	r4, r4
 801b74e:	eba3 030b 	sub.w	r3, r3, fp
 801b752:	2c00      	cmp	r4, #0
 801b754:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801b758:	bf18      	it	ne
 801b75a:	2600      	movne	r6, #0
 801b75c:	e779      	b.n	801b652 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13a>
 801b75e:	78aa      	ldrb	r2, [r5, #2]
 801b760:	3901      	subs	r1, #1
 801b762:	4f0e      	ldr	r7, [pc, #56]	@ (801b79c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x284>)
 801b764:	b289      	uxth	r1, r1
 801b766:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801b76a:	786a      	ldrb	r2, [r5, #1]
 801b76c:	00d2      	lsls	r2, r2, #3
 801b76e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801b772:	ea4a 0202 	orr.w	r2, sl, r2
 801b776:	f895 a000 	ldrb.w	sl, [r5]
 801b77a:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801b77e:	f82e 2b02 	strh.w	r2, [lr], #2
 801b782:	e7d7      	b.n	801b734 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21c>
 801b784:	4b03      	ldr	r3, [pc, #12]	@ (801b794 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801b786:	6818      	ldr	r0, [r3, #0]
 801b788:	6803      	ldr	r3, [r0, #0]
 801b78a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b78c:	4798      	blx	r3
 801b78e:	b013      	add	sp, #76	@ 0x4c
 801b790:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b794:	24001a30 	.word	0x24001a30
 801b798:	24001a2a 	.word	0x24001a2a
 801b79c:	fffff800 	.word	0xfffff800

0801b7a0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801b7a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b7a4:	b09d      	sub	sp, #116	@ 0x74
 801b7a6:	461c      	mov	r4, r3
 801b7a8:	4683      	mov	fp, r0
 801b7aa:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801b7ac:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 801b7b0:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 801b7b4:	920e      	str	r2, [sp, #56]	@ 0x38
 801b7b6:	2a00      	cmp	r2, #0
 801b7b8:	f000 81e4 	beq.w	801bb84 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>
 801b7bc:	6820      	ldr	r0, [r4, #0]
 801b7be:	aa18      	add	r2, sp, #96	@ 0x60
 801b7c0:	6861      	ldr	r1, [r4, #4]
 801b7c2:	c203      	stmia	r2!, {r0, r1}
 801b7c4:	6818      	ldr	r0, [r3, #0]
 801b7c6:	aa1a      	add	r2, sp, #104	@ 0x68
 801b7c8:	6859      	ldr	r1, [r3, #4]
 801b7ca:	c203      	stmia	r2!, {r0, r1}
 801b7cc:	a818      	add	r0, sp, #96	@ 0x60
 801b7ce:	f7f8 fe7b 	bl	80144c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b7d2:	4621      	mov	r1, r4
 801b7d4:	a81a      	add	r0, sp, #104	@ 0x68
 801b7d6:	f7f8 fe9f 	bl	8014518 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b7da:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 801b7de:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 801b7e2:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801b7e6:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 801b7ea:	bfdb      	ittet	le
 801b7ec:	b29a      	uxthle	r2, r3
 801b7ee:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801b7f2:	2201      	movgt	r2, #1
 801b7f4:	fb91 f2f2 	sdivle	r2, r1, r2
 801b7f8:	9202      	str	r2, [sp, #8]
 801b7fa:	9802      	ldr	r0, [sp, #8]
 801b7fc:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 801b800:	9902      	ldr	r1, [sp, #8]
 801b802:	fb92 f0f0 	sdiv	r0, r2, r0
 801b806:	b280      	uxth	r0, r0
 801b808:	440c      	add	r4, r1
 801b80a:	900f      	str	r0, [sp, #60]	@ 0x3c
 801b80c:	3c01      	subs	r4, #1
 801b80e:	9802      	ldr	r0, [sp, #8]
 801b810:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801b812:	fb05 2510 	mls	r5, r5, r0, r2
 801b816:	fb94 f4f1 	sdiv	r4, r4, r1
 801b81a:	fb15 f503 	smulbb	r5, r5, r3
 801b81e:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 801b822:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 801b826:	3401      	adds	r4, #1
 801b828:	440d      	add	r5, r1
 801b82a:	4419      	add	r1, r3
 801b82c:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 801b830:	b2a4      	uxth	r4, r4
 801b832:	441a      	add	r2, r3
 801b834:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801b838:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 801b83c:	00a4      	lsls	r4, r4, #2
 801b83e:	9306      	str	r3, [sp, #24]
 801b840:	b2ad      	uxth	r5, r5
 801b842:	4bb3      	ldr	r3, [pc, #716]	@ (801bb10 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801b844:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 801b848:	6818      	ldr	r0, [r3, #0]
 801b84a:	6803      	ldr	r3, [r0, #0]
 801b84c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801b84e:	4798      	blx	r3
 801b850:	4bb0      	ldr	r3, [pc, #704]	@ (801bb14 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>)
 801b852:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 801b856:	2d00      	cmp	r5, #0
 801b858:	881a      	ldrh	r2, [r3, #0]
 801b85a:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 801b85e:	fb02 f606 	mul.w	r6, r2, r6
 801b862:	fb02 7101 	mla	r1, r2, r1, r7
 801b866:	9316      	str	r3, [sp, #88]	@ 0x58
 801b868:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801b86c:	4baa      	ldr	r3, [pc, #680]	@ (801bb18 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x378>)
 801b86e:	bf18      	it	ne
 801b870:	2100      	movne	r1, #0
 801b872:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801b876:	eba3 030b 	sub.w	r3, r3, fp
 801b87a:	920a      	str	r2, [sp, #40]	@ 0x28
 801b87c:	f104 0204 	add.w	r2, r4, #4
 801b880:	9317      	str	r3, [sp, #92]	@ 0x5c
 801b882:	9213      	str	r2, [sp, #76]	@ 0x4c
 801b884:	9a06      	ldr	r2, [sp, #24]
 801b886:	bf08      	it	eq
 801b888:	4611      	moveq	r1, r2
 801b88a:	2200      	movs	r2, #0
 801b88c:	b289      	uxth	r1, r1
 801b88e:	920d      	str	r2, [sp, #52]	@ 0x34
 801b890:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801b892:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801b894:	fa12 f383 	uxtah	r3, r2, r3
 801b898:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801b89a:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801b89e:	3304      	adds	r3, #4
 801b8a0:	9308      	str	r3, [sp, #32]
 801b8a2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b8a4:	4543      	cmp	r3, r8
 801b8a6:	f240 8168 	bls.w	801bb7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3da>
 801b8aa:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 801b8ae:	f04f 0e01 	mov.w	lr, #1
 801b8b2:	9a02      	ldr	r2, [sp, #8]
 801b8b4:	9808      	ldr	r0, [sp, #32]
 801b8b6:	fbb5 f3f3 	udiv	r3, r5, r3
 801b8ba:	1ad3      	subs	r3, r2, r3
 801b8bc:	7800      	ldrb	r0, [r0, #0]
 801b8be:	b29b      	uxth	r3, r3
 801b8c0:	9010      	str	r0, [sp, #64]	@ 0x40
 801b8c2:	3001      	adds	r0, #1
 801b8c4:	9314      	str	r3, [sp, #80]	@ 0x50
 801b8c6:	9b08      	ldr	r3, [sp, #32]
 801b8c8:	9007      	str	r0, [sp, #28]
 801b8ca:	785a      	ldrb	r2, [r3, #1]
 801b8cc:	789b      	ldrb	r3, [r3, #2]
 801b8ce:	021b      	lsls	r3, r3, #8
 801b8d0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801b8d4:	9a08      	ldr	r2, [sp, #32]
 801b8d6:	78d2      	ldrb	r2, [r2, #3]
 801b8d8:	4313      	orrs	r3, r2
 801b8da:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801b8dc:	441a      	add	r2, r3
 801b8de:	1c50      	adds	r0, r2, #1
 801b8e0:	7852      	ldrb	r2, [r2, #1]
 801b8e2:	9005      	str	r0, [sp, #20]
 801b8e4:	0212      	lsls	r2, r2, #8
 801b8e6:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801b8e8:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801b8ec:	5cc3      	ldrb	r3, [r0, r3]
 801b8ee:	431a      	orrs	r2, r3
 801b8f0:	b293      	uxth	r3, r2
 801b8f2:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 801b8f6:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b8f8:	2300      	movs	r3, #0
 801b8fa:	9309      	str	r3, [sp, #36]	@ 0x24
 801b8fc:	2301      	movs	r3, #1
 801b8fe:	9301      	str	r3, [sp, #4]
 801b900:	9304      	str	r3, [sp, #16]
 801b902:	2300      	movs	r3, #0
 801b904:	9303      	str	r3, [sp, #12]
 801b906:	2d00      	cmp	r5, #0
 801b908:	d07d      	beq.n	801ba06 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x266>
 801b90a:	45ae      	cmp	lr, r5
 801b90c:	d26c      	bcs.n	801b9e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x248>
 801b90e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801b910:	eba5 050e 	sub.w	r5, r5, lr
 801b914:	460c      	mov	r4, r1
 801b916:	4543      	cmp	r3, r8
 801b918:	b2ad      	uxth	r5, r5
 801b91a:	d802      	bhi.n	801b922 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x182>
 801b91c:	e071      	b.n	801ba02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x262>
 801b91e:	2b00      	cmp	r3, #0
 801b920:	d15d      	bne.n	801b9de <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x23e>
 801b922:	9b05      	ldr	r3, [sp, #20]
 801b924:	9a04      	ldr	r2, [sp, #16]
 801b926:	785b      	ldrb	r3, [r3, #1]
 801b928:	f1c2 0207 	rsb	r2, r2, #7
 801b92c:	9904      	ldr	r1, [sp, #16]
 801b92e:	4093      	lsls	r3, r2
 801b930:	005b      	lsls	r3, r3, #1
 801b932:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801b936:	9b05      	ldr	r3, [sp, #20]
 801b938:	781b      	ldrb	r3, [r3, #0]
 801b93a:	410b      	asrs	r3, r1
 801b93c:	3101      	adds	r1, #1
 801b93e:	b2c9      	uxtb	r1, r1
 801b940:	b2db      	uxtb	r3, r3
 801b942:	2908      	cmp	r1, #8
 801b944:	9104      	str	r1, [sp, #16]
 801b946:	9905      	ldr	r1, [sp, #20]
 801b948:	ea43 0302 	orr.w	r3, r3, r2
 801b94c:	bf0c      	ite	eq
 801b94e:	3102      	addeq	r1, #2
 801b950:	3101      	addne	r1, #1
 801b952:	b29a      	uxth	r2, r3
 801b954:	bf05      	ittet	eq
 801b956:	9105      	streq	r1, [sp, #20]
 801b958:	2100      	moveq	r1, #0
 801b95a:	9105      	strne	r1, [sp, #20]
 801b95c:	9104      	streq	r1, [sp, #16]
 801b95e:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801b960:	4291      	cmp	r1, r2
 801b962:	d30a      	bcc.n	801b97a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1da>
 801b964:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 801b968:	2301      	movs	r3, #1
 801b96a:	9907      	ldr	r1, [sp, #28]
 801b96c:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801b970:	d30f      	bcc.n	801b992 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1f2>
 801b972:	2100      	movs	r1, #0
 801b974:	9301      	str	r3, [sp, #4]
 801b976:	9103      	str	r1, [sp, #12]
 801b978:	e032      	b.n	801b9e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801b97a:	9b07      	ldr	r3, [sp, #28]
 801b97c:	429a      	cmp	r2, r3
 801b97e:	d318      	bcc.n	801b9b2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x212>
 801b980:	9b01      	ldr	r3, [sp, #4]
 801b982:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 801b986:	445b      	add	r3, fp
 801b988:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 801b98c:	9b01      	ldr	r3, [sp, #4]
 801b98e:	3301      	adds	r3, #1
 801b990:	b29b      	uxth	r3, r3
 801b992:	9907      	ldr	r1, [sp, #28]
 801b994:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 801b998:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801b99c:	7108      	strb	r0, [r1, #4]
 801b99e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801b9a0:	80c8      	strh	r0, [r1, #6]
 801b9a2:	9801      	ldr	r0, [sp, #4]
 801b9a4:	3001      	adds	r0, #1
 801b9a6:	7148      	strb	r0, [r1, #5]
 801b9a8:	9907      	ldr	r1, [sp, #28]
 801b9aa:	3101      	adds	r1, #1
 801b9ac:	b289      	uxth	r1, r1
 801b9ae:	9107      	str	r1, [sp, #28]
 801b9b0:	e7df      	b.n	801b972 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801b9b2:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801b9b6:	4611      	mov	r1, r2
 801b9b8:	795b      	ldrb	r3, [r3, #5]
 801b9ba:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 801b9be:	4458      	add	r0, fp
 801b9c0:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 801b9c2:	4406      	add	r6, r0
 801b9c4:	2e00      	cmp	r6, #0
 801b9c6:	dd06      	ble.n	801b9d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801b9c8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801b9cc:	790e      	ldrb	r6, [r1, #4]
 801b9ce:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801b9d2:	88c9      	ldrh	r1, [r1, #6]
 801b9d4:	e7f4      	b.n	801b9c0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x220>
 801b9d6:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 801b9da:	b29b      	uxth	r3, r3
 801b9dc:	e7c5      	b.n	801b96a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801b9de:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801b9e0:	4621      	mov	r1, r4
 801b9e2:	920b      	str	r2, [sp, #44]	@ 0x2c
 801b9e4:	469e      	mov	lr, r3
 801b9e6:	e78e      	b.n	801b906 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x166>
 801b9e8:	9a03      	ldr	r2, [sp, #12]
 801b9ea:	ebae 0305 	sub.w	r3, lr, r5
 801b9ee:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801b9f2:	442a      	add	r2, r5
 801b9f4:	b29b      	uxth	r3, r3
 801b9f6:	b292      	uxth	r2, r2
 801b9f8:	9203      	str	r2, [sp, #12]
 801b9fa:	2500      	movs	r5, #0
 801b9fc:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801b9fe:	4542      	cmp	r2, r8
 801ba00:	d88d      	bhi.n	801b91e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17e>
 801ba02:	4621      	mov	r1, r4
 801ba04:	e74d      	b.n	801b8a2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x102>
 801ba06:	458e      	cmp	lr, r1
 801ba08:	f04f 0900 	mov.w	r9, #0
 801ba0c:	bf2b      	itete	cs
 801ba0e:	ebae 0301 	subcs.w	r3, lr, r1
 801ba12:	eba1 040e 	subcc.w	r4, r1, lr
 801ba16:	462c      	movcs	r4, r5
 801ba18:	462b      	movcc	r3, r5
 801ba1a:	bf27      	ittee	cs
 801ba1c:	b29b      	uxthcs	r3, r3
 801ba1e:	910c      	strcs	r1, [sp, #48]	@ 0x30
 801ba20:	b2a4      	uxthcc	r4, r4
 801ba22:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 801ba26:	9a03      	ldr	r2, [sp, #12]
 801ba28:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801ba2a:	444a      	add	r2, r9
 801ba2c:	4548      	cmp	r0, r9
 801ba2e:	b292      	uxth	r2, r2
 801ba30:	d074      	beq.n	801bb1c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x37c>
 801ba32:	2004      	movs	r0, #4
 801ba34:	445a      	add	r2, fp
 801ba36:	4605      	mov	r5, r0
 801ba38:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 801ba3c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801ba3e:	fb15 0202 	smlabb	r2, r5, r2, r0
 801ba42:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801ba44:	5880      	ldr	r0, [r0, r2]
 801ba46:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801ba4a:	d014      	beq.n	801ba76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 801ba4c:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801ba50:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801ba54:	d112      	bne.n	801ba7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 801ba56:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801ba58:	2aff      	cmp	r2, #255	@ 0xff
 801ba5a:	d10f      	bne.n	801ba7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2dc>
 801ba5c:	0942      	lsrs	r2, r0, #5
 801ba5e:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 801ba62:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801ba66:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801ba6a:	f025 0507 	bic.w	r5, r5, #7
 801ba6e:	4315      	orrs	r5, r2
 801ba70:	4305      	orrs	r5, r0
 801ba72:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801ba76:	f109 0901 	add.w	r9, r9, #1
 801ba7a:	e7d4      	b.n	801ba26 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x286>
 801ba7c:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801ba80:	b2ed      	uxtb	r5, r5
 801ba82:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801ba86:	ea4f 272c 	mov.w	r7, ip, asr #8
 801ba8a:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 801ba8e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ba92:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801ba96:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801ba9a:	9215      	str	r2, [sp, #84]	@ 0x54
 801ba9c:	fa5f fc8c 	uxtb.w	ip, ip
 801baa0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801baa2:	b2c0      	uxtb	r0, r0
 801baa4:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801baa8:	fb02 fa0a 	mul.w	sl, r2, sl
 801baac:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801bab0:	f10a 0201 	add.w	r2, sl, #1
 801bab4:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801bab8:	1212      	asrs	r2, r2, #8
 801baba:	fa1f fa82 	uxth.w	sl, r2
 801babe:	43d2      	mvns	r2, r2
 801bac0:	fb16 f60a 	smulbb	r6, r6, sl
 801bac4:	b2d2      	uxtb	r2, r2
 801bac6:	fb10 f00a 	smulbb	r0, r0, sl
 801baca:	fb07 6702 	mla	r7, r7, r2, r6
 801bace:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 801bad0:	fb0c 0002 	mla	r0, ip, r2, r0
 801bad4:	fb15 f50a 	smulbb	r5, r5, sl
 801bad8:	b2bf      	uxth	r7, r7
 801bada:	b280      	uxth	r0, r0
 801badc:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801bae0:	fb06 5602 	mla	r6, r6, r2, r5
 801bae4:	1c7a      	adds	r2, r7, #1
 801bae6:	1c45      	adds	r5, r0, #1
 801bae8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801baec:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801baf0:	b2b6      	uxth	r6, r6
 801baf2:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801baf6:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801bafa:	432f      	orrs	r7, r5
 801bafc:	1c75      	adds	r5, r6, #1
 801bafe:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801bb02:	096d      	lsrs	r5, r5, #5
 801bb04:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801bb08:	432f      	orrs	r7, r5
 801bb0a:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801bb0e:	e7b2      	b.n	801ba76 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d6>
 801bb10:	24001a30 	.word	0x24001a30
 801bb14:	24001a2a 	.word	0x24001a2a
 801bb18:	fffff7fb 	.word	0xfffff7fb
 801bb1c:	9203      	str	r2, [sp, #12]
 801bb1e:	458e      	cmp	lr, r1
 801bb20:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801bb22:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801bb26:	f4ff af68 	bcc.w	801b9fa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801bb2a:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 801bb2c:	9906      	ldr	r1, [sp, #24]
 801bb2e:	8812      	ldrh	r2, [r2, #0]
 801bb30:	1a52      	subs	r2, r2, r1
 801bb32:	9914      	ldr	r1, [sp, #80]	@ 0x50
 801bb34:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801bb38:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801bb3a:	3201      	adds	r2, #1
 801bb3c:	428a      	cmp	r2, r1
 801bb3e:	9209      	str	r2, [sp, #36]	@ 0x24
 801bb40:	d111      	bne.n	801bb66 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3c6>
 801bb42:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 801bb46:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 801bb4a:	9b06      	ldr	r3, [sp, #24]
 801bb4c:	eba5 0509 	sub.w	r5, r5, r9
 801bb50:	b2ad      	uxth	r5, r5
 801bb52:	2d00      	cmp	r5, #0
 801bb54:	bf08      	it	eq
 801bb56:	4619      	moveq	r1, r3
 801bb58:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801bb5a:	bf18      	it	ne
 801bb5c:	2100      	movne	r1, #0
 801bb5e:	3301      	adds	r3, #1
 801bb60:	b289      	uxth	r1, r1
 801bb62:	930d      	str	r3, [sp, #52]	@ 0x34
 801bb64:	e694      	b.n	801b890 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf0>
 801bb66:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801bb6a:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 801bb6e:	1b2d      	subs	r5, r5, r4
 801bb70:	b2ad      	uxth	r5, r5
 801bb72:	2d00      	cmp	r5, #0
 801bb74:	bf18      	it	ne
 801bb76:	2400      	movne	r4, #0
 801bb78:	e740      	b.n	801b9fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25c>
 801bb7a:	4b04      	ldr	r3, [pc, #16]	@ (801bb8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3ec>)
 801bb7c:	6818      	ldr	r0, [r3, #0]
 801bb7e:	6803      	ldr	r3, [r0, #0]
 801bb80:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801bb82:	4798      	blx	r3
 801bb84:	b01d      	add	sp, #116	@ 0x74
 801bb86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bb8a:	bf00      	nop
 801bb8c:	24001a30 	.word	0x24001a30

0801bb90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801bb90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bb94:	b09f      	sub	sp, #124	@ 0x7c
 801bb96:	461d      	mov	r5, r3
 801bb98:	4604      	mov	r4, r0
 801bb9a:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801bb9c:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 801bba0:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 801bba4:	920a      	str	r2, [sp, #40]	@ 0x28
 801bba6:	2a00      	cmp	r2, #0
 801bba8:	f000 81fe 	beq.w	801bfa8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>
 801bbac:	6828      	ldr	r0, [r5, #0]
 801bbae:	aa1a      	add	r2, sp, #104	@ 0x68
 801bbb0:	6869      	ldr	r1, [r5, #4]
 801bbb2:	c203      	stmia	r2!, {r0, r1}
 801bbb4:	6818      	ldr	r0, [r3, #0]
 801bbb6:	aa1c      	add	r2, sp, #112	@ 0x70
 801bbb8:	6859      	ldr	r1, [r3, #4]
 801bbba:	c203      	stmia	r2!, {r0, r1}
 801bbbc:	a81a      	add	r0, sp, #104	@ 0x68
 801bbbe:	f7f8 fc83 	bl	80144c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bbc2:	4629      	mov	r1, r5
 801bbc4:	a81c      	add	r0, sp, #112	@ 0x70
 801bbc6:	f7f8 fca7 	bl	8014518 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bbca:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801bbce:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 801bbd2:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801bbd6:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 801bbda:	bfdb      	ittet	le
 801bbdc:	b29a      	uxthle	r2, r3
 801bbde:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801bbe2:	2201      	movgt	r2, #1
 801bbe4:	fb91 f2f2 	sdivle	r2, r1, r2
 801bbe8:	9201      	str	r2, [sp, #4]
 801bbea:	9801      	ldr	r0, [sp, #4]
 801bbec:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 801bbf0:	9901      	ldr	r1, [sp, #4]
 801bbf2:	fb92 f0f0 	sdiv	r0, r2, r0
 801bbf6:	b280      	uxth	r0, r0
 801bbf8:	440e      	add	r6, r1
 801bbfa:	9010      	str	r0, [sp, #64]	@ 0x40
 801bbfc:	3e01      	subs	r6, #1
 801bbfe:	9801      	ldr	r0, [sp, #4]
 801bc00:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801bc02:	fb05 2510 	mls	r5, r5, r0, r2
 801bc06:	fb96 f6f1 	sdiv	r6, r6, r1
 801bc0a:	fb15 f503 	smulbb	r5, r5, r3
 801bc0e:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 801bc12:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801bc16:	3601      	adds	r6, #1
 801bc18:	440d      	add	r5, r1
 801bc1a:	4419      	add	r1, r3
 801bc1c:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 801bc20:	b2b6      	uxth	r6, r6
 801bc22:	441a      	add	r2, r3
 801bc24:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 801bc28:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 801bc2c:	b2ad      	uxth	r5, r5
 801bc2e:	9304      	str	r3, [sp, #16]
 801bc30:	4b96      	ldr	r3, [pc, #600]	@ (801be8c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801bc32:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 801bc36:	6818      	ldr	r0, [r3, #0]
 801bc38:	6803      	ldr	r3, [r0, #0]
 801bc3a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801bc3c:	4798      	blx	r3
 801bc3e:	4b94      	ldr	r3, [pc, #592]	@ (801be90 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>)
 801bc40:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 801bc44:	2d00      	cmp	r5, #0
 801bc46:	881a      	ldrh	r2, [r3, #0]
 801bc48:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 801bc4c:	fb02 f707 	mul.w	r7, r2, r7
 801bc50:	fb02 c101 	mla	r1, r2, r1, ip
 801bc54:	9318      	str	r3, [sp, #96]	@ 0x60
 801bc56:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801bc5a:	4b8e      	ldr	r3, [pc, #568]	@ (801be94 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x304>)
 801bc5c:	bf18      	it	ne
 801bc5e:	2100      	movne	r1, #0
 801bc60:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801bc64:	eba3 0304 	sub.w	r3, r3, r4
 801bc68:	920b      	str	r2, [sp, #44]	@ 0x2c
 801bc6a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801bc6c:	9319      	str	r3, [sp, #100]	@ 0x64
 801bc6e:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801bc72:	f106 0204 	add.w	r2, r6, #4
 801bc76:	9206      	str	r2, [sp, #24]
 801bc78:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801bc7a:	ea6f 0202 	mvn.w	r2, r2
 801bc7e:	b2d2      	uxtb	r2, r2
 801bc80:	9215      	str	r2, [sp, #84]	@ 0x54
 801bc82:	9a04      	ldr	r2, [sp, #16]
 801bc84:	bf08      	it	eq
 801bc86:	4611      	moveq	r1, r2
 801bc88:	2200      	movs	r2, #0
 801bc8a:	b289      	uxth	r1, r1
 801bc8c:	920d      	str	r2, [sp, #52]	@ 0x34
 801bc8e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801bc90:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801bc92:	fa12 f383 	uxtah	r3, r2, r3
 801bc96:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801bc98:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801bc9c:	3304      	adds	r3, #4
 801bc9e:	9307      	str	r3, [sp, #28]
 801bca0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801bca2:	455b      	cmp	r3, fp
 801bca4:	f240 817b 	bls.w	801bf9e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x40e>
 801bca8:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 801bcac:	f04f 0801 	mov.w	r8, #1
 801bcb0:	9a01      	ldr	r2, [sp, #4]
 801bcb2:	9807      	ldr	r0, [sp, #28]
 801bcb4:	46c4      	mov	ip, r8
 801bcb6:	f8cd 8008 	str.w	r8, [sp, #8]
 801bcba:	7800      	ldrb	r0, [r0, #0]
 801bcbc:	fbb5 f3f3 	udiv	r3, r5, r3
 801bcc0:	1ad3      	subs	r3, r2, r3
 801bcc2:	9011      	str	r0, [sp, #68]	@ 0x44
 801bcc4:	3001      	adds	r0, #1
 801bcc6:	b29b      	uxth	r3, r3
 801bcc8:	9005      	str	r0, [sp, #20]
 801bcca:	9316      	str	r3, [sp, #88]	@ 0x58
 801bccc:	9b07      	ldr	r3, [sp, #28]
 801bcce:	785a      	ldrb	r2, [r3, #1]
 801bcd0:	789b      	ldrb	r3, [r3, #2]
 801bcd2:	021b      	lsls	r3, r3, #8
 801bcd4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801bcd8:	9a07      	ldr	r2, [sp, #28]
 801bcda:	78d2      	ldrb	r2, [r2, #3]
 801bcdc:	4313      	orrs	r3, r2
 801bcde:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801bce0:	441a      	add	r2, r3
 801bce2:	1c50      	adds	r0, r2, #1
 801bce4:	7852      	ldrb	r2, [r2, #1]
 801bce6:	9003      	str	r0, [sp, #12]
 801bce8:	0212      	lsls	r2, r2, #8
 801bcea:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801bcec:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801bcf0:	5cc3      	ldrb	r3, [r0, r3]
 801bcf2:	431a      	orrs	r2, r3
 801bcf4:	b293      	uxth	r3, r2
 801bcf6:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 801bcfa:	930c      	str	r3, [sp, #48]	@ 0x30
 801bcfc:	2300      	movs	r3, #0
 801bcfe:	9308      	str	r3, [sp, #32]
 801bd00:	461a      	mov	r2, r3
 801bd02:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801bd06:	930e      	str	r3, [sp, #56]	@ 0x38
 801bd08:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 801bd0c:	930f      	str	r3, [sp, #60]	@ 0x3c
 801bd0e:	2d00      	cmp	r5, #0
 801bd10:	d07d      	beq.n	801be0e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27e>
 801bd12:	45ac      	cmp	ip, r5
 801bd14:	d26d      	bcs.n	801bdf2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x262>
 801bd16:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801bd18:	eba5 050c 	sub.w	r5, r5, ip
 801bd1c:	4608      	mov	r0, r1
 801bd1e:	455b      	cmp	r3, fp
 801bd20:	b2ad      	uxth	r5, r5
 801bd22:	d802      	bhi.n	801bd2a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x19a>
 801bd24:	e071      	b.n	801be0a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27a>
 801bd26:	2b00      	cmp	r3, #0
 801bd28:	d15d      	bne.n	801bde6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801bd2a:	9b03      	ldr	r3, [sp, #12]
 801bd2c:	9a02      	ldr	r2, [sp, #8]
 801bd2e:	785b      	ldrb	r3, [r3, #1]
 801bd30:	f1c2 0207 	rsb	r2, r2, #7
 801bd34:	9902      	ldr	r1, [sp, #8]
 801bd36:	4093      	lsls	r3, r2
 801bd38:	005b      	lsls	r3, r3, #1
 801bd3a:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801bd3e:	9b03      	ldr	r3, [sp, #12]
 801bd40:	781b      	ldrb	r3, [r3, #0]
 801bd42:	410b      	asrs	r3, r1
 801bd44:	3101      	adds	r1, #1
 801bd46:	b2c9      	uxtb	r1, r1
 801bd48:	b2db      	uxtb	r3, r3
 801bd4a:	2908      	cmp	r1, #8
 801bd4c:	9102      	str	r1, [sp, #8]
 801bd4e:	9903      	ldr	r1, [sp, #12]
 801bd50:	ea43 0302 	orr.w	r3, r3, r2
 801bd54:	bf0c      	ite	eq
 801bd56:	3102      	addeq	r1, #2
 801bd58:	3101      	addne	r1, #1
 801bd5a:	b29a      	uxth	r2, r3
 801bd5c:	bf05      	ittet	eq
 801bd5e:	9103      	streq	r1, [sp, #12]
 801bd60:	2100      	moveq	r1, #0
 801bd62:	9103      	strne	r1, [sp, #12]
 801bd64:	9102      	streq	r1, [sp, #8]
 801bd66:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801bd68:	4291      	cmp	r1, r2
 801bd6a:	d30a      	bcc.n	801bd82 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1f2>
 801bd6c:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 801bd70:	2301      	movs	r3, #1
 801bd72:	9905      	ldr	r1, [sp, #20]
 801bd74:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801bd78:	d30f      	bcc.n	801bd9a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x20a>
 801bd7a:	2100      	movs	r1, #0
 801bd7c:	4698      	mov	r8, r3
 801bd7e:	9100      	str	r1, [sp, #0]
 801bd80:	e032      	b.n	801bde8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x258>
 801bd82:	9b05      	ldr	r3, [sp, #20]
 801bd84:	429a      	cmp	r2, r3
 801bd86:	d318      	bcc.n	801bdba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22a>
 801bd88:	eb04 0308 	add.w	r3, r4, r8
 801bd8c:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 801bd90:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 801bd94:	f108 0301 	add.w	r3, r8, #1
 801bd98:	b29b      	uxth	r3, r3
 801bd9a:	9905      	ldr	r1, [sp, #20]
 801bd9c:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 801bda0:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801bda4:	710e      	strb	r6, [r1, #4]
 801bda6:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801bda8:	80ce      	strh	r6, [r1, #6]
 801bdaa:	f108 0601 	add.w	r6, r8, #1
 801bdae:	714e      	strb	r6, [r1, #5]
 801bdb0:	9905      	ldr	r1, [sp, #20]
 801bdb2:	3101      	adds	r1, #1
 801bdb4:	b289      	uxth	r1, r1
 801bdb6:	9105      	str	r1, [sp, #20]
 801bdb8:	e7df      	b.n	801bd7a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801bdba:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801bdbe:	4611      	mov	r1, r2
 801bdc0:	795b      	ldrb	r3, [r3, #5]
 801bdc2:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801bdc6:	4426      	add	r6, r4
 801bdc8:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 801bdca:	4437      	add	r7, r6
 801bdcc:	2f00      	cmp	r7, #0
 801bdce:	dd06      	ble.n	801bdde <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24e>
 801bdd0:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801bdd4:	790f      	ldrb	r7, [r1, #4]
 801bdd6:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801bdda:	88c9      	ldrh	r1, [r1, #6]
 801bddc:	e7f4      	b.n	801bdc8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x238>
 801bdde:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 801bde2:	b29b      	uxth	r3, r3
 801bde4:	e7c5      	b.n	801bd72 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e2>
 801bde6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801bde8:	920c      	str	r2, [sp, #48]	@ 0x30
 801bdea:	4601      	mov	r1, r0
 801bdec:	9a00      	ldr	r2, [sp, #0]
 801bdee:	469c      	mov	ip, r3
 801bdf0:	e78d      	b.n	801bd0e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x17e>
 801bdf2:	ebac 0305 	sub.w	r3, ip, r5
 801bdf6:	1957      	adds	r7, r2, r5
 801bdf8:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801bdfc:	b2ba      	uxth	r2, r7
 801bdfe:	b29b      	uxth	r3, r3
 801be00:	9200      	str	r2, [sp, #0]
 801be02:	2500      	movs	r5, #0
 801be04:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801be06:	455a      	cmp	r2, fp
 801be08:	d88d      	bhi.n	801bd26 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 801be0a:	4601      	mov	r1, r0
 801be0c:	e748      	b.n	801bca0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x110>
 801be0e:	458c      	cmp	ip, r1
 801be10:	bf27      	ittee	cs
 801be12:	ebac 0301 	subcs.w	r3, ip, r1
 801be16:	4628      	movcs	r0, r5
 801be18:	eba1 000c 	subcc.w	r0, r1, ip
 801be1c:	462b      	movcc	r3, r5
 801be1e:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801be20:	bf27      	ittee	cs
 801be22:	b29b      	uxthcs	r3, r3
 801be24:	9109      	strcs	r1, [sp, #36]	@ 0x24
 801be26:	b280      	uxthcc	r0, r0
 801be28:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 801be2c:	2dff      	cmp	r5, #255	@ 0xff
 801be2e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801be30:	eb02 0705 	add.w	r7, r2, r5
 801be34:	b2bd      	uxth	r5, r7
 801be36:	9500      	str	r5, [sp, #0]
 801be38:	d12e      	bne.n	801be98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x308>
 801be3a:	465e      	mov	r6, fp
 801be3c:	9d00      	ldr	r5, [sp, #0]
 801be3e:	42aa      	cmp	r2, r5
 801be40:	f040 8083 	bne.w	801bf4a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3ba>
 801be44:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801be46:	458c      	cmp	ip, r1
 801be48:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801be4c:	d3d9      	bcc.n	801be02 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801be4e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801be50:	9904      	ldr	r1, [sp, #16]
 801be52:	8812      	ldrh	r2, [r2, #0]
 801be54:	1a52      	subs	r2, r2, r1
 801be56:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801be58:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801be5c:	9a08      	ldr	r2, [sp, #32]
 801be5e:	3201      	adds	r2, #1
 801be60:	428a      	cmp	r2, r1
 801be62:	9208      	str	r2, [sp, #32]
 801be64:	f040 8091 	bne.w	801bf8a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3fa>
 801be68:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 801be6c:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 801be70:	9b04      	ldr	r3, [sp, #16]
 801be72:	eba5 050c 	sub.w	r5, r5, ip
 801be76:	b2ad      	uxth	r5, r5
 801be78:	2d00      	cmp	r5, #0
 801be7a:	bf08      	it	eq
 801be7c:	4619      	moveq	r1, r3
 801be7e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801be80:	bf18      	it	ne
 801be82:	2100      	movne	r1, #0
 801be84:	3301      	adds	r3, #1
 801be86:	b289      	uxth	r1, r1
 801be88:	930d      	str	r3, [sp, #52]	@ 0x34
 801be8a:	e700      	b.n	801bc8e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xfe>
 801be8c:	24001a30 	.word	0x24001a30
 801be90:	24001a2a 	.word	0x24001a2a
 801be94:	fffff7fb 	.word	0xfffff7fb
 801be98:	46d9      	mov	r9, fp
 801be9a:	9d00      	ldr	r5, [sp, #0]
 801be9c:	42aa      	cmp	r2, r5
 801be9e:	d0d1      	beq.n	801be44 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2b4>
 801bea0:	1c55      	adds	r5, r2, #1
 801bea2:	4422      	add	r2, r4
 801bea4:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 801bea8:	9a06      	ldr	r2, [sp, #24]
 801beaa:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801beae:	9517      	str	r5, [sp, #92]	@ 0x5c
 801beb0:	4472      	add	r2, lr
 801beb2:	9212      	str	r2, [sp, #72]	@ 0x48
 801beb4:	f8b9 2000 	ldrh.w	r2, [r9]
 801beb8:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801beba:	1216      	asrs	r6, r2, #8
 801bebc:	f897 a002 	ldrb.w	sl, [r7, #2]
 801bec0:	10d5      	asrs	r5, r2, #3
 801bec2:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801bec4:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801bec8:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801becc:	00d2      	lsls	r2, r2, #3
 801bece:	fb1a fa07 	smulbb	sl, sl, r7
 801bed2:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801bed6:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801bed8:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801bedc:	b2d2      	uxtb	r2, r2
 801bede:	fb06 a607 	mla	r6, r6, r7, sl
 801bee2:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801bee4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801bee8:	f897 a001 	ldrb.w	sl, [r7, #1]
 801beec:	b2b6      	uxth	r6, r6
 801beee:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801bef0:	fb1a fa07 	smulbb	sl, sl, r7
 801bef4:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801bef6:	fb05 a507 	mla	r5, r5, r7, sl
 801befa:	9f06      	ldr	r7, [sp, #24]
 801befc:	f106 0a01 	add.w	sl, r6, #1
 801bf00:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801bf04:	b2ad      	uxth	r5, r5
 801bf06:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801bf08:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801bf0c:	f105 0a01 	add.w	sl, r5, #1
 801bf10:	fb1e fe07 	smulbb	lr, lr, r7
 801bf14:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801bf16:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801bf1a:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801bf1e:	fb02 e207 	mla	r2, r2, r7, lr
 801bf22:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801bf26:	b292      	uxth	r2, r2
 801bf28:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801bf2c:	f102 0e01 	add.w	lr, r2, #1
 801bf30:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801bf34:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801bf38:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801bf3c:	ea4e 0606 	orr.w	r6, lr, r6
 801bf40:	ea46 060a 	orr.w	r6, r6, sl
 801bf44:	f829 6b02 	strh.w	r6, [r9], #2
 801bf48:	e7a7      	b.n	801be9a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x30a>
 801bf4a:	f102 0e01 	add.w	lr, r2, #1
 801bf4e:	4422      	add	r2, r4
 801bf50:	9f06      	ldr	r7, [sp, #24]
 801bf52:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 801bf56:	9a06      	ldr	r2, [sp, #24]
 801bf58:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801bf5c:	eb02 0a05 	add.w	sl, r2, r5
 801bf60:	4a13      	ldr	r2, [pc, #76]	@ (801bfb0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x420>)
 801bf62:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801bf66:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801bf6a:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801bf6e:	00d2      	lsls	r2, r2, #3
 801bf70:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801bf74:	ea49 0202 	orr.w	r2, r9, r2
 801bf78:	f817 9005 	ldrb.w	r9, [r7, r5]
 801bf7c:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801bf80:	f826 2b02 	strh.w	r2, [r6], #2
 801bf84:	fa1f f28e 	uxth.w	r2, lr
 801bf88:	e758      	b.n	801be3c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>
 801bf8a:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801bf8e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801bf92:	1a2d      	subs	r5, r5, r0
 801bf94:	b2ad      	uxth	r5, r5
 801bf96:	2d00      	cmp	r5, #0
 801bf98:	bf18      	it	ne
 801bf9a:	2000      	movne	r0, #0
 801bf9c:	e732      	b.n	801be04 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x274>
 801bf9e:	4b05      	ldr	r3, [pc, #20]	@ (801bfb4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x424>)
 801bfa0:	6818      	ldr	r0, [r3, #0]
 801bfa2:	6803      	ldr	r3, [r0, #0]
 801bfa4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801bfa6:	4798      	blx	r3
 801bfa8:	b01f      	add	sp, #124	@ 0x7c
 801bfaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bfae:	bf00      	nop
 801bfb0:	fffff800 	.word	0xfffff800
 801bfb4:	24001a30 	.word	0x24001a30

0801bfb8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801bfb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bfbc:	b091      	sub	sp, #68	@ 0x44
 801bfbe:	469b      	mov	fp, r3
 801bfc0:	4616      	mov	r6, r2
 801bfc2:	f9b3 2000 	ldrsh.w	r2, [r3]
 801bfc6:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 801bfca:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801bfce:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 801bfd2:	4604      	mov	r4, r0
 801bfd4:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801bfd8:	4640      	mov	r0, r8
 801bfda:	460d      	mov	r5, r1
 801bfdc:	4659      	mov	r1, fp
 801bfde:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801bfe2:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801bfe6:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 801bfea:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 801bfee:	f7f5 fb6f 	bl	80116d0 <_ZN8touchgfx4RectaNERKS0_>
 801bff2:	4631      	mov	r1, r6
 801bff4:	4640      	mov	r0, r8
 801bff6:	f7f5 fb6b 	bl	80116d0 <_ZN8touchgfx4RectaNERKS0_>
 801bffa:	4b74      	ldr	r3, [pc, #464]	@ (801c1cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801bffc:	8818      	ldrh	r0, [r3, #0]
 801bffe:	4b74      	ldr	r3, [pc, #464]	@ (801c1d0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801c000:	b202      	sxth	r2, r0
 801c002:	8819      	ldrh	r1, [r3, #0]
 801c004:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801c008:	b20e      	sxth	r6, r1
 801c00a:	2b00      	cmp	r3, #0
 801c00c:	da07      	bge.n	801c01e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801c00e:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 801c012:	4463      	add	r3, ip
 801c014:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 801c018:	2300      	movs	r3, #0
 801c01a:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 801c01e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801c022:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801c026:	1ad2      	subs	r2, r2, r3
 801c028:	4594      	cmp	ip, r2
 801c02a:	bfc4      	itt	gt
 801c02c:	1ac2      	subgt	r2, r0, r3
 801c02e:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 801c032:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801c036:	2a00      	cmp	r2, #0
 801c038:	da07      	bge.n	801c04a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801c03a:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 801c03e:	4462      	add	r2, ip
 801c040:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 801c044:	2200      	movs	r2, #0
 801c046:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 801c04a:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 801c04e:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801c052:	eba6 060a 	sub.w	r6, r6, sl
 801c056:	42b2      	cmp	r2, r6
 801c058:	bfc4      	itt	gt
 801c05a:	eba1 020a 	subgt.w	r2, r1, sl
 801c05e:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 801c062:	4a5c      	ldr	r2, [pc, #368]	@ (801c1d4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801c064:	7812      	ldrb	r2, [r2, #0]
 801c066:	b9a2      	cbnz	r2, 801c092 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801c068:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801c06c:	4286      	cmp	r6, r0
 801c06e:	4640      	mov	r0, r8
 801c070:	9303      	str	r3, [sp, #12]
 801c072:	bf14      	ite	ne
 801c074:	2600      	movne	r6, #0
 801c076:	2601      	moveq	r6, #1
 801c078:	f7f5 fb6d 	bl	8011756 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c07c:	9b03      	ldr	r3, [sp, #12]
 801c07e:	b160      	cbz	r0, 801c09a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801c080:	2300      	movs	r3, #0
 801c082:	8023      	strh	r3, [r4, #0]
 801c084:	8063      	strh	r3, [r4, #2]
 801c086:	80a3      	strh	r3, [r4, #4]
 801c088:	4620      	mov	r0, r4
 801c08a:	80e3      	strh	r3, [r4, #6]
 801c08c:	b011      	add	sp, #68	@ 0x44
 801c08e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c092:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801c096:	428e      	cmp	r6, r1
 801c098:	e7e9      	b.n	801c06e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801c09a:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801c09e:	a90e      	add	r1, sp, #56	@ 0x38
 801c0a0:	900e      	str	r0, [sp, #56]	@ 0x38
 801c0a2:	a80c      	add	r0, sp, #48	@ 0x30
 801c0a4:	9205      	str	r2, [sp, #20]
 801c0a6:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801c0aa:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 801c0ae:	9206      	str	r2, [sp, #24]
 801c0b0:	f8bb 2000 	ldrh.w	r2, [fp]
 801c0b4:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 801c0b8:	1a9b      	subs	r3, r3, r2
 801c0ba:	b21b      	sxth	r3, r3
 801c0bc:	9303      	str	r3, [sp, #12]
 801c0be:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801c0c2:	f8df b118 	ldr.w	fp, [pc, #280]	@ 801c1dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801c0c6:	ebaa 0a03 	sub.w	sl, sl, r3
 801c0ca:	fa0f f38a 	sxth.w	r3, sl
 801c0ce:	9304      	str	r3, [sp, #16]
 801c0d0:	9b03      	ldr	r3, [sp, #12]
 801c0d2:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 801c0d6:	9b04      	ldr	r3, [sp, #16]
 801c0d8:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801c0dc:	9b05      	ldr	r3, [sp, #20]
 801c0de:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 801c0e2:	9b06      	ldr	r3, [sp, #24]
 801c0e4:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801c0e8:	f7f8 fa16 	bl	8014518 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c0ec:	4640      	mov	r0, r8
 801c0ee:	f7f8 f9eb 	bl	80144c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c0f2:	a80e      	add	r0, sp, #56	@ 0x38
 801c0f4:	f7f8 f9e8 	bl	80144c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c0f8:	4b37      	ldr	r3, [pc, #220]	@ (801c1d8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801c0fa:	4628      	mov	r0, r5
 801c0fc:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 801c100:	881b      	ldrh	r3, [r3, #0]
 801c102:	9307      	str	r3, [sp, #28]
 801c104:	682b      	ldr	r3, [r5, #0]
 801c106:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801c108:	4798      	blx	r3
 801c10a:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 801c10e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 801c112:	4681      	mov	r9, r0
 801c114:	f8db 0000 	ldr.w	r0, [fp]
 801c118:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801c11c:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801c11e:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801c122:	6803      	ldr	r3, [r0, #0]
 801c124:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801c126:	4798      	blx	r3
 801c128:	4607      	mov	r7, r0
 801c12a:	f8db 0000 	ldr.w	r0, [fp]
 801c12e:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 801c132:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801c136:	6803      	ldr	r3, [r0, #0]
 801c138:	9109      	str	r1, [sp, #36]	@ 0x24
 801c13a:	9208      	str	r2, [sp, #32]
 801c13c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801c13e:	4798      	blx	r3
 801c140:	f010 0f01 	tst.w	r0, #1
 801c144:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801c148:	d012      	beq.n	801c170 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801c14a:	f8db 0000 	ldr.w	r0, [fp]
 801c14e:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 801c152:	6803      	ldr	r3, [r0, #0]
 801c154:	9200      	str	r2, [sp, #0]
 801c156:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 801c158:	462b      	mov	r3, r5
 801c15a:	e898 0006 	ldmia.w	r8, {r1, r2}
 801c15e:	47b0      	blx	r6
 801c160:	9b03      	ldr	r3, [sp, #12]
 801c162:	8023      	strh	r3, [r4, #0]
 801c164:	9b04      	ldr	r3, [sp, #16]
 801c166:	8063      	strh	r3, [r4, #2]
 801c168:	9b05      	ldr	r3, [sp, #20]
 801c16a:	80a3      	strh	r3, [r4, #4]
 801c16c:	9b06      	ldr	r3, [sp, #24]
 801c16e:	e78b      	b.n	801c088 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801c170:	fb09 f202 	mul.w	r2, r9, r2
 801c174:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 801c178:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801c17c:	440f      	add	r7, r1
 801c17e:	b166      	cbz	r6, 801c19a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801c180:	9a07      	ldr	r2, [sp, #28]
 801c182:	4592      	cmp	sl, r2
 801c184:	d109      	bne.n	801c19a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801c186:	f8db 0000 	ldr.w	r0, [fp]
 801c18a:	fb09 f303 	mul.w	r3, r9, r3
 801c18e:	4629      	mov	r1, r5
 801c190:	6802      	ldr	r2, [r0, #0]
 801c192:	6b56      	ldr	r6, [r2, #52]	@ 0x34
 801c194:	463a      	mov	r2, r7
 801c196:	47b0      	blx	r6
 801c198:	e7e2      	b.n	801c160 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801c19a:	fb0a f303 	mul.w	r3, sl, r3
 801c19e:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801c1a2:	f8df b038 	ldr.w	fp, [pc, #56]	@ 801c1dc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801c1a6:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801c1aa:	4545      	cmp	r5, r8
 801c1ac:	d2d8      	bcs.n	801c160 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801c1ae:	f8db 0000 	ldr.w	r0, [fp]
 801c1b2:	4629      	mov	r1, r5
 801c1b4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801c1b8:	4435      	add	r5, r6
 801c1ba:	6802      	ldr	r2, [r0, #0]
 801c1bc:	005b      	lsls	r3, r3, #1
 801c1be:	f8d2 a034 	ldr.w	sl, [r2, #52]	@ 0x34
 801c1c2:	463a      	mov	r2, r7
 801c1c4:	47d0      	blx	sl
 801c1c6:	444f      	add	r7, r9
 801c1c8:	e7ef      	b.n	801c1aa <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801c1ca:	bf00      	nop
 801c1cc:	24001a24 	.word	0x24001a24
 801c1d0:	24001a26 	.word	0x24001a26
 801c1d4:	24001a28 	.word	0x24001a28
 801c1d8:	24001a2a 	.word	0x24001a2a
 801c1dc:	24001a30 	.word	0x24001a30

0801c1e0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801c1e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c1e2:	4606      	mov	r6, r0
 801c1e4:	b087      	sub	sp, #28
 801c1e6:	460c      	mov	r4, r1
 801c1e8:	4617      	mov	r7, r2
 801c1ea:	461d      	mov	r5, r3
 801c1ec:	b333      	cbz	r3, 801c23c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c1ee:	4608      	mov	r0, r1
 801c1f0:	f7f5 fab1 	bl	8011756 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c1f4:	bb10      	cbnz	r0, 801c23c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c1f6:	6820      	ldr	r0, [r4, #0]
 801c1f8:	ab04      	add	r3, sp, #16
 801c1fa:	6861      	ldr	r1, [r4, #4]
 801c1fc:	4c1b      	ldr	r4, [pc, #108]	@ (801c26c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801c1fe:	c303      	stmia	r3!, {r0, r1}
 801c200:	a804      	add	r0, sp, #16
 801c202:	f7f8 f961 	bl	80144c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c206:	6820      	ldr	r0, [r4, #0]
 801c208:	6803      	ldr	r3, [r0, #0]
 801c20a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801c20c:	4798      	blx	r3
 801c20e:	2dff      	cmp	r5, #255	@ 0xff
 801c210:	d016      	beq.n	801c240 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801c212:	f010 0f08 	tst.w	r0, #8
 801c216:	6820      	ldr	r0, [r4, #0]
 801c218:	d015      	beq.n	801c246 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801c21a:	2400      	movs	r4, #0
 801c21c:	6801      	ldr	r1, [r0, #0]
 801c21e:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801c222:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c226:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801c22a:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801c22e:	9401      	str	r4, [sp, #4]
 801c230:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801c234:	9400      	str	r4, [sp, #0]
 801c236:	6e0c      	ldr	r4, [r1, #96]	@ 0x60
 801c238:	4639      	mov	r1, r7
 801c23a:	47a0      	blx	r4
 801c23c:	b007      	add	sp, #28
 801c23e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c240:	f010 0f02 	tst.w	r0, #2
 801c244:	e7e7      	b.n	801c216 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801c246:	6803      	ldr	r3, [r0, #0]
 801c248:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c24a:	4798      	blx	r3
 801c24c:	4b08      	ldr	r3, [pc, #32]	@ (801c270 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801c24e:	4601      	mov	r1, r0
 801c250:	4630      	mov	r0, r6
 801c252:	881a      	ldrh	r2, [r3, #0]
 801c254:	6833      	ldr	r3, [r6, #0]
 801c256:	e9cd 7500 	strd	r7, r5, [sp]
 801c25a:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 801c25c:	ab04      	add	r3, sp, #16
 801c25e:	47a8      	blx	r5
 801c260:	6820      	ldr	r0, [r4, #0]
 801c262:	6803      	ldr	r3, [r0, #0]
 801c264:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c266:	4798      	blx	r3
 801c268:	e7e8      	b.n	801c23c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c26a:	bf00      	nop
 801c26c:	24001a30 	.word	0x24001a30
 801c270:	24001a2a 	.word	0x24001a2a

0801c274 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801c274:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c278:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 801c27c:	4688      	mov	r8, r1
 801c27e:	4614      	mov	r4, r2
 801c280:	461d      	mov	r5, r3
 801c282:	9e08      	ldr	r6, [sp, #32]
 801c284:	2f00      	cmp	r7, #0
 801c286:	f000 80ab 	beq.w	801c3e0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801c28a:	4618      	mov	r0, r3
 801c28c:	f7f5 fa63 	bl	8011756 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c290:	2800      	cmp	r0, #0
 801c292:	f040 80a5 	bne.w	801c3e0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801c296:	f9b5 1000 	ldrsh.w	r1, [r5]
 801c29a:	2fff      	cmp	r7, #255	@ 0xff
 801c29c:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801c2a0:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801c2a4:	fb04 1303 	mla	r3, r4, r3, r1
 801c2a8:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801c2ac:	eba4 0200 	sub.w	r2, r4, r0
 801c2b0:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801c2b4:	fb04 f505 	mul.w	r5, r4, r5
 801c2b8:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801c2bc:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801c2c0:	d04a      	beq.n	801c358 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe4>
 801c2c2:	b2bc      	uxth	r4, r7
 801c2c4:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 801c2c8:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801c2cc:	fa5f f788 	uxtb.w	r7, r8
 801c2d0:	b2f3      	uxtb	r3, r6
 801c2d2:	0040      	lsls	r0, r0, #1
 801c2d4:	fb0e fe04 	mul.w	lr, lr, r4
 801c2d8:	4367      	muls	r7, r4
 801c2da:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801c2de:	4363      	muls	r3, r4
 801c2e0:	fa1f fc8c 	uxth.w	ip, ip
 801c2e4:	42a9      	cmp	r1, r5
 801c2e6:	d27b      	bcs.n	801c3e0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801c2e8:	eb01 0900 	add.w	r9, r1, r0
 801c2ec:	4549      	cmp	r1, r9
 801c2ee:	d231      	bcs.n	801c354 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe0>
 801c2f0:	880a      	ldrh	r2, [r1, #0]
 801c2f2:	1214      	asrs	r4, r2, #8
 801c2f4:	10d6      	asrs	r6, r2, #3
 801c2f6:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801c2fa:	00d2      	lsls	r2, r2, #3
 801c2fc:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801c300:	b2d2      	uxtb	r2, r2
 801c302:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801c306:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c30a:	fb14 f40c 	smulbb	r4, r4, ip
 801c30e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801c312:	fb12 f20c 	smulbb	r2, r2, ip
 801c316:	fb16 f60c 	smulbb	r6, r6, ip
 801c31a:	4474      	add	r4, lr
 801c31c:	441a      	add	r2, r3
 801c31e:	b2a4      	uxth	r4, r4
 801c320:	443e      	add	r6, r7
 801c322:	b292      	uxth	r2, r2
 801c324:	f104 0a01 	add.w	sl, r4, #1
 801c328:	b2b6      	uxth	r6, r6
 801c32a:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801c32e:	f102 0a01 	add.w	sl, r2, #1
 801c332:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801c336:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801c33a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c33e:	4322      	orrs	r2, r4
 801c340:	1c74      	adds	r4, r6, #1
 801c342:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801c346:	0976      	lsrs	r6, r6, #5
 801c348:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801c34c:	4332      	orrs	r2, r6
 801c34e:	f821 2b02 	strh.w	r2, [r1], #2
 801c352:	e7cb      	b.n	801c2ec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x78>
 801c354:	4441      	add	r1, r8
 801c356:	e7c5      	b.n	801c2e4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x70>
 801c358:	0973      	lsrs	r3, r6, #5
 801c35a:	4f22      	ldr	r7, [pc, #136]	@ (801c3e4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x170>)
 801c35c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801c360:	ea08 0707 	and.w	r7, r8, r7
 801c364:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c368:	433b      	orrs	r3, r7
 801c36a:	07e7      	lsls	r7, r4, #31
 801c36c:	ea43 0306 	orr.w	r3, r3, r6
 801c370:	b29b      	uxth	r3, r3
 801c372:	d50b      	bpl.n	801c38c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x118>
 801c374:	0040      	lsls	r0, r0, #1
 801c376:	0052      	lsls	r2, r2, #1
 801c378:	42a9      	cmp	r1, r5
 801c37a:	d231      	bcs.n	801c3e0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801c37c:	180c      	adds	r4, r1, r0
 801c37e:	42a1      	cmp	r1, r4
 801c380:	d202      	bcs.n	801c388 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801c382:	f821 3b02 	strh.w	r3, [r1], #2
 801c386:	e7fa      	b.n	801c37e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
 801c388:	4411      	add	r1, r2
 801c38a:	e7f5      	b.n	801c378 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x104>
 801c38c:	078e      	lsls	r6, r1, #30
 801c38e:	d008      	beq.n	801c3a2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12e>
 801c390:	0066      	lsls	r6, r4, #1
 801c392:	460a      	mov	r2, r1
 801c394:	42aa      	cmp	r2, r5
 801c396:	d202      	bcs.n	801c39e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801c398:	8013      	strh	r3, [r2, #0]
 801c39a:	4432      	add	r2, r6
 801c39c:	e7fa      	b.n	801c394 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x120>
 801c39e:	3102      	adds	r1, #2
 801c3a0:	3801      	subs	r0, #1
 801c3a2:	07c2      	lsls	r2, r0, #31
 801c3a4:	d50b      	bpl.n	801c3be <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14a>
 801c3a6:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 801c3aa:	0066      	lsls	r6, r4, #1
 801c3ac:	3a01      	subs	r2, #1
 801c3ae:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801c3b2:	42aa      	cmp	r2, r5
 801c3b4:	d202      	bcs.n	801c3bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x148>
 801c3b6:	8013      	strh	r3, [r2, #0]
 801c3b8:	4432      	add	r2, r6
 801c3ba:	e7fa      	b.n	801c3b2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13e>
 801c3bc:	3801      	subs	r0, #1
 801c3be:	b178      	cbz	r0, 801c3e0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801c3c0:	1040      	asrs	r0, r0, #1
 801c3c2:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801c3c6:	0080      	lsls	r0, r0, #2
 801c3c8:	0064      	lsls	r4, r4, #1
 801c3ca:	42a9      	cmp	r1, r5
 801c3cc:	d208      	bcs.n	801c3e0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>
 801c3ce:	180e      	adds	r6, r1, r0
 801c3d0:	460a      	mov	r2, r1
 801c3d2:	42b2      	cmp	r2, r6
 801c3d4:	d202      	bcs.n	801c3dc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c3d6:	f842 3b04 	str.w	r3, [r2], #4
 801c3da:	e7fa      	b.n	801c3d2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15e>
 801c3dc:	4421      	add	r1, r4
 801c3de:	e7f4      	b.n	801c3ca <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x156>
 801c3e0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c3e4:	00fff800 	.word	0x00fff800

0801c3e8 <_ZN8touchgfx8LCD16bppC1Ev>:
 801c3e8:	2200      	movs	r2, #0
 801c3ea:	4912      	ldr	r1, [pc, #72]	@ (801c434 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801c3ec:	e9c0 2201 	strd	r2, r2, [r0, #4]
 801c3f0:	6001      	str	r1, [r0, #0]
 801c3f2:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801c3f6:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801c3fa:	e9c0 2207 	strd	r2, r2, [r0, #28]
 801c3fe:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 801c402:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 801c406:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 801c40a:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 801c40e:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 801c412:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 801c416:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 801c41a:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 801c41e:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 801c422:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 801c426:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 801c42a:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 801c42e:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
 801c432:	4770      	bx	lr
 801c434:	08028b6c 	.word	0x08028b6c

0801c438 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801c438:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c43c:	b08d      	sub	sp, #52	@ 0x34
 801c43e:	460d      	mov	r5, r1
 801c440:	4604      	mov	r4, r0
 801c442:	4699      	mov	r9, r3
 801c444:	6808      	ldr	r0, [r1, #0]
 801c446:	ab08      	add	r3, sp, #32
 801c448:	6849      	ldr	r1, [r1, #4]
 801c44a:	c303      	stmia	r3!, {r0, r1}
 801c44c:	6810      	ldr	r0, [r2, #0]
 801c44e:	ab0a      	add	r3, sp, #40	@ 0x28
 801c450:	6851      	ldr	r1, [r2, #4]
 801c452:	c303      	stmia	r3!, {r0, r1}
 801c454:	a808      	add	r0, sp, #32
 801c456:	f7f8 f837 	bl	80144c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c45a:	4629      	mov	r1, r5
 801c45c:	a80a      	add	r0, sp, #40	@ 0x28
 801c45e:	4d67      	ldr	r5, [pc, #412]	@ (801c5fc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801c460:	f7f8 f85a 	bl	8014518 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c464:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 801c468:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 801c46c:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 801c470:	6828      	ldr	r0, [r5, #0]
 801c472:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c476:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 801c47a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801c47e:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801c482:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801c486:	440a      	add	r2, r1
 801c488:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801c48c:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 801c490:	4413      	add	r3, r2
 801c492:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801c496:	6803      	ldr	r3, [r0, #0]
 801c498:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801c49a:	4798      	blx	r3
 801c49c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801c4a0:	d119      	bne.n	801c4d6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801c4a2:	f010 0f20 	tst.w	r0, #32
 801c4a6:	6828      	ldr	r0, [r5, #0]
 801c4a8:	d018      	beq.n	801c4dc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801c4aa:	2500      	movs	r5, #0
 801c4ac:	6801      	ldr	r1, [r0, #0]
 801c4ae:	b2b6      	uxth	r6, r6
 801c4b0:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801c4b4:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801c4b8:	9601      	str	r6, [sp, #4]
 801c4ba:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801c4be:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 801c4c2:	9502      	str	r5, [sp, #8]
 801c4c4:	fa1f f588 	uxth.w	r5, r8
 801c4c8:	9500      	str	r5, [sp, #0]
 801c4ca:	6d0d      	ldr	r5, [r1, #80]	@ 0x50
 801c4cc:	4621      	mov	r1, r4
 801c4ce:	47a8      	blx	r5
 801c4d0:	b00d      	add	sp, #52	@ 0x34
 801c4d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c4d6:	f010 0f40 	tst.w	r0, #64	@ 0x40
 801c4da:	e7e4      	b.n	801c4a6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801c4dc:	6803      	ldr	r3, [r0, #0]
 801c4de:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c4e0:	4798      	blx	r3
 801c4e2:	4947      	ldr	r1, [pc, #284]	@ (801c600 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801c4e4:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801c4e8:	880b      	ldrh	r3, [r1, #0]
 801c4ea:	468a      	mov	sl, r1
 801c4ec:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 801c4f0:	fb03 5202 	mla	r2, r3, r2, r5
 801c4f4:	4373      	muls	r3, r6
 801c4f6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c4fa:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c4fe:	9307      	str	r3, [sp, #28]
 801c500:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801c504:	9306      	str	r3, [sp, #24]
 801c506:	9b07      	ldr	r3, [sp, #28]
 801c508:	4298      	cmp	r0, r3
 801c50a:	d270      	bcs.n	801c5ee <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801c50c:	9b06      	ldr	r3, [sp, #24]
 801c50e:	4621      	mov	r1, r4
 801c510:	eb00 0b03 	add.w	fp, r0, r3
 801c514:	4558      	cmp	r0, fp
 801c516:	d25d      	bcs.n	801c5d4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801c518:	f851 4b04 	ldr.w	r4, [r1], #4
 801c51c:	0e23      	lsrs	r3, r4, #24
 801c51e:	d014      	beq.n	801c54a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801c520:	2bff      	cmp	r3, #255	@ 0xff
 801c522:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801c526:	d112      	bne.n	801c54e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801c528:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801c52c:	d10f      	bne.n	801c54e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801c52e:	0963      	lsrs	r3, r4, #5
 801c530:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801c534:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801c538:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c53c:	f02c 0c07 	bic.w	ip, ip, #7
 801c540:	ea43 0c0c 	orr.w	ip, r3, ip
 801c544:	ea4c 0404 	orr.w	r4, ip, r4
 801c548:	8004      	strh	r4, [r0, #0]
 801c54a:	3002      	adds	r0, #2
 801c54c:	e7e2      	b.n	801c514 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801c54e:	fb09 f303 	mul.w	r3, r9, r3
 801c552:	8807      	ldrh	r7, [r0, #0]
 801c554:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801c558:	fa5f fc8c 	uxtb.w	ip, ip
 801c55c:	1c5a      	adds	r2, r3, #1
 801c55e:	123e      	asrs	r6, r7, #8
 801c560:	10fd      	asrs	r5, r7, #3
 801c562:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801c566:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801c56a:	00ff      	lsls	r7, r7, #3
 801c56c:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801c570:	1212      	asrs	r2, r2, #8
 801c572:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801c576:	b293      	uxth	r3, r2
 801c578:	43d2      	mvns	r2, r2
 801c57a:	b2ff      	uxtb	r7, r7
 801c57c:	fb1e fe03 	smulbb	lr, lr, r3
 801c580:	b2d2      	uxtb	r2, r2
 801c582:	fb1c fc03 	smulbb	ip, ip, r3
 801c586:	b2e4      	uxtb	r4, r4
 801c588:	fb06 e602 	mla	r6, r6, r2, lr
 801c58c:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801c590:	fb14 f403 	smulbb	r4, r4, r3
 801c594:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801c598:	b2b6      	uxth	r6, r6
 801c59a:	fb05 c502 	mla	r5, r5, r2, ip
 801c59e:	fb07 4702 	mla	r7, r7, r2, r4
 801c5a2:	f106 0e01 	add.w	lr, r6, #1
 801c5a6:	b2ad      	uxth	r5, r5
 801c5a8:	b2bf      	uxth	r7, r7
 801c5aa:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801c5ae:	f105 0c01 	add.w	ip, r5, #1
 801c5b2:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 801c5b6:	1c7e      	adds	r6, r7, #1
 801c5b8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801c5bc:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801c5c0:	096d      	lsrs	r5, r5, #5
 801c5c2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801c5c6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c5ca:	ea46 060e 	orr.w	r6, r6, lr
 801c5ce:	432e      	orrs	r6, r5
 801c5d0:	8006      	strh	r6, [r0, #0]
 801c5d2:	e7ba      	b.n	801c54a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801c5d4:	f8ba 3000 	ldrh.w	r3, [sl]
 801c5d8:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 801c5dc:	eba3 0308 	sub.w	r3, r3, r8
 801c5e0:	eba4 0408 	sub.w	r4, r4, r8
 801c5e4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801c5e8:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801c5ec:	e78b      	b.n	801c506 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801c5ee:	4b03      	ldr	r3, [pc, #12]	@ (801c5fc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801c5f0:	6818      	ldr	r0, [r3, #0]
 801c5f2:	6803      	ldr	r3, [r0, #0]
 801c5f4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c5f6:	4798      	blx	r3
 801c5f8:	e76a      	b.n	801c4d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801c5fa:	bf00      	nop
 801c5fc:	24001a30 	.word	0x24001a30
 801c600:	24001a2a 	.word	0x24001a2a

0801c604 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801c604:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801c608:	b085      	sub	sp, #20
 801c60a:	6810      	ldr	r0, [r2, #0]
 801c60c:	460c      	mov	r4, r1
 801c60e:	6851      	ldr	r1, [r2, #4]
 801c610:	466d      	mov	r5, sp
 801c612:	4616      	mov	r6, r2
 801c614:	c503      	stmia	r5!, {r0, r1}
 801c616:	6818      	ldr	r0, [r3, #0]
 801c618:	6859      	ldr	r1, [r3, #4]
 801c61a:	c503      	stmia	r5!, {r0, r1}
 801c61c:	4668      	mov	r0, sp
 801c61e:	4d2e      	ldr	r5, [pc, #184]	@ (801c6d8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801c620:	f7f7 ff52 	bl	80144c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c624:	4631      	mov	r1, r6
 801c626:	a802      	add	r0, sp, #8
 801c628:	4e2c      	ldr	r6, [pc, #176]	@ (801c6dc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801c62a:	f7f7 ff75 	bl	8014518 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c62e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801c632:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801c636:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801c63a:	6828      	ldr	r0, [r5, #0]
 801c63c:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c640:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801c644:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801c648:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801c64c:	f8bd 1000 	ldrh.w	r1, [sp]
 801c650:	440a      	add	r2, r1
 801c652:	f8ad 2008 	strh.w	r2, [sp, #8]
 801c656:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801c65a:	4413      	add	r3, r2
 801c65c:	f8ad 300a 	strh.w	r3, [sp, #10]
 801c660:	6803      	ldr	r3, [r0, #0]
 801c662:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c664:	4798      	blx	r3
 801c666:	8833      	ldrh	r3, [r6, #0]
 801c668:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801c66c:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801c670:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801c674:	f8df e068 	ldr.w	lr, [pc, #104]	@ 801c6e0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801c678:	fb03 1202 	mla	r2, r3, r2, r1
 801c67c:	fb08 f303 	mul.w	r3, r8, r3
 801c680:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c684:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801c688:	4298      	cmp	r0, r3
 801c68a:	d21d      	bcs.n	801c6c8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801c68c:	eb00 080c 	add.w	r8, r0, ip
 801c690:	4540      	cmp	r0, r8
 801c692:	d20f      	bcs.n	801c6b4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801c694:	f854 1b04 	ldr.w	r1, [r4], #4
 801c698:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801c69c:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801c6a0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801c6a4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801c6a8:	ea42 0209 	orr.w	r2, r2, r9
 801c6ac:	430a      	orrs	r2, r1
 801c6ae:	f820 2b02 	strh.w	r2, [r0], #2
 801c6b2:	e7ed      	b.n	801c690 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801c6b4:	8832      	ldrh	r2, [r6, #0]
 801c6b6:	1bd2      	subs	r2, r2, r7
 801c6b8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c6bc:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801c6c0:	1bd2      	subs	r2, r2, r7
 801c6c2:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801c6c6:	e7df      	b.n	801c688 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801c6c8:	6828      	ldr	r0, [r5, #0]
 801c6ca:	6803      	ldr	r3, [r0, #0]
 801c6cc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c6ce:	4798      	blx	r3
 801c6d0:	b005      	add	sp, #20
 801c6d2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801c6d6:	bf00      	nop
 801c6d8:	24001a30 	.word	0x24001a30
 801c6dc:	24001a2a 	.word	0x24001a2a
 801c6e0:	fffff800 	.word	0xfffff800

0801c6e4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801c6e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c6e8:	b08e      	sub	sp, #56	@ 0x38
 801c6ea:	460e      	mov	r6, r1
 801c6ec:	4604      	mov	r4, r0
 801c6ee:	461d      	mov	r5, r3
 801c6f0:	6808      	ldr	r0, [r1, #0]
 801c6f2:	ab0a      	add	r3, sp, #40	@ 0x28
 801c6f4:	6849      	ldr	r1, [r1, #4]
 801c6f6:	f8df 81d4 	ldr.w	r8, [pc, #468]	@ 801c8cc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801c6fa:	f8df 91d4 	ldr.w	r9, [pc, #468]	@ 801c8d0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801c6fe:	c303      	stmia	r3!, {r0, r1}
 801c700:	6810      	ldr	r0, [r2, #0]
 801c702:	ab0c      	add	r3, sp, #48	@ 0x30
 801c704:	6851      	ldr	r1, [r2, #4]
 801c706:	c303      	stmia	r3!, {r0, r1}
 801c708:	a80a      	add	r0, sp, #40	@ 0x28
 801c70a:	f7f7 fedd 	bl	80144c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c70e:	4631      	mov	r1, r6
 801c710:	a80c      	add	r0, sp, #48	@ 0x30
 801c712:	f7f7 ff01 	bl	8014518 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c716:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801c71a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801c71e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801c722:	f8d8 0000 	ldr.w	r0, [r8]
 801c726:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c72a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 801c72e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801c732:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801c736:	440c      	add	r4, r1
 801c738:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 801c73c:	440a      	add	r2, r1
 801c73e:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801c742:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 801c746:	4413      	add	r3, r2
 801c748:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801c74c:	6803      	ldr	r3, [r0, #0]
 801c74e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801c750:	4798      	blx	r3
 801c752:	2dff      	cmp	r5, #255	@ 0xff
 801c754:	d124      	bne.n	801c7a0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801c756:	f010 0f01 	tst.w	r0, #1
 801c75a:	f8d8 0000 	ldr.w	r0, [r8]
 801c75e:	d022      	beq.n	801c7a6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801c760:	2100      	movs	r1, #0
 801c762:	f04f 0e01 	mov.w	lr, #1
 801c766:	f8d0 c000 	ldr.w	ip, [r0]
 801c76a:	b2b6      	uxth	r6, r6
 801c76c:	f8cd e018 	str.w	lr, [sp, #24]
 801c770:	b2bf      	uxth	r7, r7
 801c772:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801c776:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 801c77a:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801c77e:	f8b9 e000 	ldrh.w	lr, [r9]
 801c782:	9503      	str	r5, [sp, #12]
 801c784:	9601      	str	r6, [sp, #4]
 801c786:	9700      	str	r7, [sp, #0]
 801c788:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801c78c:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801c790:	9102      	str	r1, [sp, #8]
 801c792:	4621      	mov	r1, r4
 801c794:	f8dc 5040 	ldr.w	r5, [ip, #64]	@ 0x40
 801c798:	47a8      	blx	r5
 801c79a:	b00e      	add	sp, #56	@ 0x38
 801c79c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c7a0:	f010 0f04 	tst.w	r0, #4
 801c7a4:	e7d9      	b.n	801c75a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801c7a6:	6803      	ldr	r3, [r0, #0]
 801c7a8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c7aa:	4798      	blx	r3
 801c7ac:	f8b9 3000 	ldrh.w	r3, [r9]
 801c7b0:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801c7b4:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801c7b8:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 801c7bc:	435e      	muls	r6, r3
 801c7be:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801c7c2:	2dff      	cmp	r5, #255	@ 0xff
 801c7c4:	fb03 1202 	mla	r2, r3, r2, r1
 801c7c8:	ebac 0c07 	sub.w	ip, ip, r7
 801c7cc:	eba3 0707 	sub.w	r7, r3, r7
 801c7d0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c7d4:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801c7d8:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801c7dc:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801c7e0:	d049      	beq.n	801c876 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801c7e2:	43eb      	mvns	r3, r5
 801c7e4:	fa1f f985 	uxth.w	r9, r5
 801c7e8:	b2db      	uxtb	r3, r3
 801c7ea:	42b0      	cmp	r0, r6
 801c7ec:	d266      	bcs.n	801c8bc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801c7ee:	eb00 0a0e 	add.w	sl, r0, lr
 801c7f2:	4550      	cmp	r0, sl
 801c7f4:	4621      	mov	r1, r4
 801c7f6:	f104 0403 	add.w	r4, r4, #3
 801c7fa:	d25b      	bcs.n	801c8b4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801c7fc:	8802      	ldrh	r2, [r0, #0]
 801c7fe:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801c802:	ea4f 2822 	mov.w	r8, r2, asr #8
 801c806:	fb11 f109 	smulbb	r1, r1, r9
 801c80a:	10d5      	asrs	r5, r2, #3
 801c80c:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 801c810:	00d2      	lsls	r2, r2, #3
 801c812:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801c816:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801c81a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801c81e:	fb08 1803 	mla	r8, r8, r3, r1
 801c822:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801c826:	b2d2      	uxtb	r2, r2
 801c828:	fb11 f109 	smulbb	r1, r1, r9
 801c82c:	fa1f f888 	uxth.w	r8, r8
 801c830:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c834:	fb05 1503 	mla	r5, r5, r3, r1
 801c838:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801c83c:	fb11 f109 	smulbb	r1, r1, r9
 801c840:	b2ad      	uxth	r5, r5
 801c842:	fb02 1203 	mla	r2, r2, r3, r1
 801c846:	f108 0101 	add.w	r1, r8, #1
 801c84a:	b292      	uxth	r2, r2
 801c84c:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801c850:	1c51      	adds	r1, r2, #1
 801c852:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 801c856:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801c85a:	1c69      	adds	r1, r5, #1
 801c85c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801c860:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c864:	096d      	lsrs	r5, r5, #5
 801c866:	ea42 0208 	orr.w	r2, r2, r8
 801c86a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c86e:	432a      	orrs	r2, r5
 801c870:	f820 2b02 	strh.w	r2, [r0], #2
 801c874:	e7bd      	b.n	801c7f2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801c876:	4a14      	ldr	r2, [pc, #80]	@ (801c8c8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801c878:	42b0      	cmp	r0, r6
 801c87a:	d21f      	bcs.n	801c8bc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801c87c:	eb00 050e 	add.w	r5, r0, lr
 801c880:	42a8      	cmp	r0, r5
 801c882:	4621      	mov	r1, r4
 801c884:	f104 0403 	add.w	r4, r4, #3
 801c888:	d210      	bcs.n	801c8ac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801c88a:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801c88e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801c892:	00db      	lsls	r3, r3, #3
 801c894:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801c898:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c89c:	430b      	orrs	r3, r1
 801c89e:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801c8a2:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801c8a6:	f820 3b02 	strh.w	r3, [r0], #2
 801c8aa:	e7e9      	b.n	801c880 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801c8ac:	4438      	add	r0, r7
 801c8ae:	eb01 040c 	add.w	r4, r1, ip
 801c8b2:	e7e1      	b.n	801c878 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801c8b4:	4438      	add	r0, r7
 801c8b6:	eb01 040c 	add.w	r4, r1, ip
 801c8ba:	e796      	b.n	801c7ea <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801c8bc:	4b03      	ldr	r3, [pc, #12]	@ (801c8cc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801c8be:	6818      	ldr	r0, [r3, #0]
 801c8c0:	6803      	ldr	r3, [r0, #0]
 801c8c2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c8c4:	4798      	blx	r3
 801c8c6:	e768      	b.n	801c79a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801c8c8:	fffff800 	.word	0xfffff800
 801c8cc:	24001a30 	.word	0x24001a30
 801c8d0:	24001a2a 	.word	0x24001a2a

0801c8d4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801c8d4:	b4f0      	push	{r4, r5, r6, r7}
 801c8d6:	4616      	mov	r6, r2
 801c8d8:	461c      	mov	r4, r3
 801c8da:	460d      	mov	r5, r1
 801c8dc:	9a04      	ldr	r2, [sp, #16]
 801c8de:	2e01      	cmp	r6, #1
 801c8e0:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801c8e4:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801c8e8:	d012      	beq.n	801c910 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801c8ea:	d303      	bcc.n	801c8f4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801c8ec:	2e02      	cmp	r6, #2
 801c8ee:	d00a      	beq.n	801c906 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801c8f0:	bcf0      	pop	{r4, r5, r6, r7}
 801c8f2:	4770      	bx	lr
 801c8f4:	6805      	ldr	r5, [r0, #0]
 801c8f6:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801c8fa:	68ed      	ldr	r5, [r5, #12]
 801c8fc:	4613      	mov	r3, r2
 801c8fe:	4622      	mov	r2, r4
 801c900:	46ac      	mov	ip, r5
 801c902:	bcf0      	pop	{r4, r5, r6, r7}
 801c904:	4760      	bx	ip
 801c906:	4621      	mov	r1, r4
 801c908:	4628      	mov	r0, r5
 801c90a:	bcf0      	pop	{r4, r5, r6, r7}
 801c90c:	f7ff bd94 	b.w	801c438 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801c910:	4621      	mov	r1, r4
 801c912:	4628      	mov	r0, r5
 801c914:	bcf0      	pop	{r4, r5, r6, r7}
 801c916:	f7ff bee5 	b.w	801c6e4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801c91c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801c91c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c920:	b093      	sub	sp, #76	@ 0x4c
 801c922:	4681      	mov	r9, r0
 801c924:	4688      	mov	r8, r1
 801c926:	6810      	ldr	r0, [r2, #0]
 801c928:	6851      	ldr	r1, [r2, #4]
 801c92a:	ac0e      	add	r4, sp, #56	@ 0x38
 801c92c:	4616      	mov	r6, r2
 801c92e:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 801c932:	4f6b      	ldr	r7, [pc, #428]	@ (801cae0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801c934:	c403      	stmia	r4!, {r0, r1}
 801c936:	6818      	ldr	r0, [r3, #0]
 801c938:	ac10      	add	r4, sp, #64	@ 0x40
 801c93a:	6859      	ldr	r1, [r3, #4]
 801c93c:	c403      	stmia	r4!, {r0, r1}
 801c93e:	a80e      	add	r0, sp, #56	@ 0x38
 801c940:	f7f7 fdc2 	bl	80144c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c944:	4631      	mov	r1, r6
 801c946:	a810      	add	r0, sp, #64	@ 0x40
 801c948:	4e66      	ldr	r6, [pc, #408]	@ (801cae4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801c94a:	f7f7 fde5 	bl	8014518 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c94e:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 801c952:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 801c956:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 801c95a:	6830      	ldr	r0, [r6, #0]
 801c95c:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c960:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 801c964:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 801c968:	4489      	add	r9, r1
 801c96a:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 801c96e:	440a      	add	r2, r1
 801c970:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 801c974:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801c978:	4413      	add	r3, r2
 801c97a:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 801c97e:	6803      	ldr	r3, [r0, #0]
 801c980:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801c982:	4798      	blx	r3
 801c984:	f010 0f80 	tst.w	r0, #128	@ 0x80
 801c988:	6830      	ldr	r0, [r6, #0]
 801c98a:	d01d      	beq.n	801c9c8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801c98c:	2200      	movs	r2, #0
 801c98e:	6801      	ldr	r1, [r0, #0]
 801c990:	b2a4      	uxth	r4, r4
 801c992:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 801c996:	b2ad      	uxth	r5, r5
 801c998:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801c99c:	220b      	movs	r2, #11
 801c99e:	9207      	str	r2, [sp, #28]
 801c9a0:	883a      	ldrh	r2, [r7, #0]
 801c9a2:	9502      	str	r5, [sp, #8]
 801c9a4:	9206      	str	r2, [sp, #24]
 801c9a6:	2201      	movs	r2, #1
 801c9a8:	9401      	str	r4, [sp, #4]
 801c9aa:	e9cd a204 	strd	sl, r2, [sp, #16]
 801c9ae:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 801c9b2:	9203      	str	r2, [sp, #12]
 801c9b4:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 801c9b8:	9200      	str	r2, [sp, #0]
 801c9ba:	4642      	mov	r2, r8
 801c9bc:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
 801c9be:	4649      	mov	r1, r9
 801c9c0:	47a0      	blx	r4
 801c9c2:	b013      	add	sp, #76	@ 0x4c
 801c9c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c9c8:	6803      	ldr	r3, [r0, #0]
 801c9ca:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c9cc:	4798      	blx	r3
 801c9ce:	883b      	ldrh	r3, [r7, #0]
 801c9d0:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801c9d4:	f04f 0e04 	mov.w	lr, #4
 801c9d8:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 801c9dc:	435d      	muls	r5, r3
 801c9de:	fb03 1202 	mla	r2, r3, r2, r1
 801c9e2:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801c9e6:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801c9ea:	920c      	str	r2, [sp, #48]	@ 0x30
 801c9ec:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 801c9f0:	1b12      	subs	r2, r2, r4
 801c9f2:	920d      	str	r2, [sp, #52]	@ 0x34
 801c9f4:	0062      	lsls	r2, r4, #1
 801c9f6:	1b1c      	subs	r4, r3, r4
 801c9f8:	920a      	str	r2, [sp, #40]	@ 0x28
 801c9fa:	0063      	lsls	r3, r4, #1
 801c9fc:	930b      	str	r3, [sp, #44]	@ 0x2c
 801c9fe:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ca00:	4298      	cmp	r0, r3
 801ca02:	d266      	bcs.n	801cad2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801ca04:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ca06:	eb00 0b03 	add.w	fp, r0, r3
 801ca0a:	4558      	cmp	r0, fp
 801ca0c:	d25c      	bcs.n	801cac8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801ca0e:	f819 3b01 	ldrb.w	r3, [r9], #1
 801ca12:	fb1e e303 	smlabb	r3, lr, r3, lr
 801ca16:	f858 2003 	ldr.w	r2, [r8, r3]
 801ca1a:	0e11      	lsrs	r1, r2, #24
 801ca1c:	d012      	beq.n	801ca44 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801ca1e:	29ff      	cmp	r1, #255	@ 0xff
 801ca20:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801ca24:	d110      	bne.n	801ca48 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801ca26:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801ca2a:	d10d      	bne.n	801ca48 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801ca2c:	0953      	lsrs	r3, r2, #5
 801ca2e:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 801ca32:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ca36:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ca3a:	f027 0707 	bic.w	r7, r7, #7
 801ca3e:	431f      	orrs	r7, r3
 801ca40:	433a      	orrs	r2, r7
 801ca42:	8002      	strh	r2, [r0, #0]
 801ca44:	3002      	adds	r0, #2
 801ca46:	e7e0      	b.n	801ca0a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801ca48:	fb0a f101 	mul.w	r1, sl, r1
 801ca4c:	8806      	ldrh	r6, [r0, #0]
 801ca4e:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801ca52:	b2d2      	uxtb	r2, r2
 801ca54:	1c4b      	adds	r3, r1, #1
 801ca56:	1235      	asrs	r5, r6, #8
 801ca58:	10f4      	asrs	r4, r6, #3
 801ca5a:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801ca5e:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801ca62:	00f6      	lsls	r6, r6, #3
 801ca64:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801ca68:	121b      	asrs	r3, r3, #8
 801ca6a:	b2f6      	uxtb	r6, r6
 801ca6c:	b299      	uxth	r1, r3
 801ca6e:	43db      	mvns	r3, r3
 801ca70:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801ca74:	fb1c fc01 	smulbb	ip, ip, r1
 801ca78:	b2db      	uxtb	r3, r3
 801ca7a:	fb12 f201 	smulbb	r2, r2, r1
 801ca7e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801ca82:	fb05 c503 	mla	r5, r5, r3, ip
 801ca86:	b2ff      	uxtb	r7, r7
 801ca88:	fb06 2203 	mla	r2, r6, r3, r2
 801ca8c:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801ca90:	fb17 f701 	smulbb	r7, r7, r1
 801ca94:	b2ad      	uxth	r5, r5
 801ca96:	b292      	uxth	r2, r2
 801ca98:	fb04 7403 	mla	r4, r4, r3, r7
 801ca9c:	f105 0c01 	add.w	ip, r5, #1
 801caa0:	1c57      	adds	r7, r2, #1
 801caa2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801caa6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801caaa:	b2a4      	uxth	r4, r4
 801caac:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801cab0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801cab4:	433d      	orrs	r5, r7
 801cab6:	1c67      	adds	r7, r4, #1
 801cab8:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801cabc:	0964      	lsrs	r4, r4, #5
 801cabe:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801cac2:	4325      	orrs	r5, r4
 801cac4:	8005      	strh	r5, [r0, #0]
 801cac6:	e7bd      	b.n	801ca44 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801cac8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801caca:	4418      	add	r0, r3
 801cacc:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801cace:	4499      	add	r9, r3
 801cad0:	e795      	b.n	801c9fe <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801cad2:	4b04      	ldr	r3, [pc, #16]	@ (801cae4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801cad4:	6818      	ldr	r0, [r3, #0]
 801cad6:	6803      	ldr	r3, [r0, #0]
 801cad8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801cada:	4798      	blx	r3
 801cadc:	e771      	b.n	801c9c2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801cade:	bf00      	nop
 801cae0:	24001a2a 	.word	0x24001a2a
 801cae4:	24001a30 	.word	0x24001a30

0801cae8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801cae8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801caec:	b087      	sub	sp, #28
 801caee:	4680      	mov	r8, r0
 801caf0:	460d      	mov	r5, r1
 801caf2:	4614      	mov	r4, r2
 801caf4:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 801caf8:	2e00      	cmp	r6, #0
 801cafa:	f000 80b9 	beq.w	801cc70 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801cafe:	6810      	ldr	r0, [r2, #0]
 801cb00:	af02      	add	r7, sp, #8
 801cb02:	6851      	ldr	r1, [r2, #4]
 801cb04:	c703      	stmia	r7!, {r0, r1}
 801cb06:	6818      	ldr	r0, [r3, #0]
 801cb08:	af04      	add	r7, sp, #16
 801cb0a:	6859      	ldr	r1, [r3, #4]
 801cb0c:	c703      	stmia	r7!, {r0, r1}
 801cb0e:	a802      	add	r0, sp, #8
 801cb10:	f7f7 fcda 	bl	80144c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cb14:	4621      	mov	r1, r4
 801cb16:	a804      	add	r0, sp, #16
 801cb18:	f7f7 fcfe 	bl	8014518 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cb1c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801cb20:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801cb24:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801cb28:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801cb2c:	fb14 2103 	smlabb	r1, r4, r3, r2
 801cb30:	eb08 0401 	add.w	r4, r8, r1
 801cb34:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801cb38:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801cb3c:	440a      	add	r2, r1
 801cb3e:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801cb42:	f8ad 2010 	strh.w	r2, [sp, #16]
 801cb46:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801cb4a:	4413      	add	r3, r2
 801cb4c:	f8ad 3012 	strh.w	r3, [sp, #18]
 801cb50:	4b49      	ldr	r3, [pc, #292]	@ (801cc78 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801cb52:	6818      	ldr	r0, [r3, #0]
 801cb54:	6803      	ldr	r3, [r0, #0]
 801cb56:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801cb58:	4798      	blx	r3
 801cb5a:	4b48      	ldr	r3, [pc, #288]	@ (801cc7c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801cb5c:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801cb60:	2eff      	cmp	r6, #255	@ 0xff
 801cb62:	881a      	ldrh	r2, [r3, #0]
 801cb64:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801cb68:	fb02 c101 	mla	r1, r2, r1, ip
 801cb6c:	fb02 f207 	mul.w	r2, r2, r7
 801cb70:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801cb74:	f105 0104 	add.w	r1, r5, #4
 801cb78:	461d      	mov	r5, r3
 801cb7a:	d05a      	beq.n	801cc32 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801cb7c:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 801cb80:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801cb84:	b2b6      	uxth	r6, r6
 801cb86:	9301      	str	r3, [sp, #4]
 801cb88:	fa1f fe8e 	uxth.w	lr, lr
 801cb8c:	4282      	cmp	r2, r0
 801cb8e:	d96a      	bls.n	801cc66 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801cb90:	eb00 0b0a 	add.w	fp, r0, sl
 801cb94:	4583      	cmp	fp, r0
 801cb96:	d940      	bls.n	801cc1a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801cb98:	8805      	ldrh	r5, [r0, #0]
 801cb9a:	f814 3b01 	ldrb.w	r3, [r4], #1
 801cb9e:	122f      	asrs	r7, r5, #8
 801cba0:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801cba4:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801cba8:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801cbac:	00ed      	lsls	r5, r5, #3
 801cbae:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801cbb2:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801cbb6:	fb17 f70e 	smulbb	r7, r7, lr
 801cbba:	b2ed      	uxtb	r5, r5
 801cbbc:	fb19 f90e 	smulbb	r9, r9, lr
 801cbc0:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801cbc4:	fb15 f50e 	smulbb	r5, r5, lr
 801cbc8:	fb0c 7c06 	mla	ip, ip, r6, r7
 801cbcc:	10df      	asrs	r7, r3, #3
 801cbce:	00db      	lsls	r3, r3, #3
 801cbd0:	fa1f fc8c 	uxth.w	ip, ip
 801cbd4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801cbd8:	b2db      	uxtb	r3, r3
 801cbda:	fb07 9706 	mla	r7, r7, r6, r9
 801cbde:	f10c 0901 	add.w	r9, ip, #1
 801cbe2:	fb03 5306 	mla	r3, r3, r6, r5
 801cbe6:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801cbea:	b29b      	uxth	r3, r3
 801cbec:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 801cbf0:	b2bf      	uxth	r7, r7
 801cbf2:	f103 0c01 	add.w	ip, r3, #1
 801cbf6:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801cbfa:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801cbfe:	ea4c 0c09 	orr.w	ip, ip, r9
 801cc02:	f107 0901 	add.w	r9, r7, #1
 801cc06:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801cc0a:	097f      	lsrs	r7, r7, #5
 801cc0c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801cc10:	ea4c 0c07 	orr.w	ip, ip, r7
 801cc14:	f820 cb02 	strh.w	ip, [r0], #2
 801cc18:	e7bc      	b.n	801cb94 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801cc1a:	9b01      	ldr	r3, [sp, #4]
 801cc1c:	881b      	ldrh	r3, [r3, #0]
 801cc1e:	eba3 0308 	sub.w	r3, r3, r8
 801cc22:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cc26:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801cc2a:	eba3 0308 	sub.w	r3, r3, r8
 801cc2e:	441c      	add	r4, r3
 801cc30:	e7ac      	b.n	801cb8c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801cc32:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801cc36:	4282      	cmp	r2, r0
 801cc38:	d915      	bls.n	801cc66 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801cc3a:	eb00 060a 	add.w	r6, r0, sl
 801cc3e:	4286      	cmp	r6, r0
 801cc40:	d906      	bls.n	801cc50 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801cc42:	f814 3b01 	ldrb.w	r3, [r4], #1
 801cc46:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801cc4a:	f820 3b02 	strh.w	r3, [r0], #2
 801cc4e:	e7f6      	b.n	801cc3e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801cc50:	882b      	ldrh	r3, [r5, #0]
 801cc52:	eba3 0308 	sub.w	r3, r3, r8
 801cc56:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cc5a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801cc5e:	eba3 0308 	sub.w	r3, r3, r8
 801cc62:	441c      	add	r4, r3
 801cc64:	e7e7      	b.n	801cc36 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801cc66:	4b04      	ldr	r3, [pc, #16]	@ (801cc78 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801cc68:	6818      	ldr	r0, [r3, #0]
 801cc6a:	6803      	ldr	r3, [r0, #0]
 801cc6c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801cc6e:	4798      	blx	r3
 801cc70:	b007      	add	sp, #28
 801cc72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cc76:	bf00      	nop
 801cc78:	24001a30 	.word	0x24001a30
 801cc7c:	24001a2a 	.word	0x24001a2a

0801cc80 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801cc80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cc84:	b091      	sub	sp, #68	@ 0x44
 801cc86:	4680      	mov	r8, r0
 801cc88:	460f      	mov	r7, r1
 801cc8a:	4614      	mov	r4, r2
 801cc8c:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 801cc90:	2d00      	cmp	r5, #0
 801cc92:	d051      	beq.n	801cd38 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801cc94:	6810      	ldr	r0, [r2, #0]
 801cc96:	ae0c      	add	r6, sp, #48	@ 0x30
 801cc98:	6851      	ldr	r1, [r2, #4]
 801cc9a:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 801ce9c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801cc9e:	c603      	stmia	r6!, {r0, r1}
 801cca0:	6818      	ldr	r0, [r3, #0]
 801cca2:	ae0e      	add	r6, sp, #56	@ 0x38
 801cca4:	6859      	ldr	r1, [r3, #4]
 801cca6:	c603      	stmia	r6!, {r0, r1}
 801cca8:	a80c      	add	r0, sp, #48	@ 0x30
 801ccaa:	f7f7 fc0d 	bl	80144c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ccae:	4621      	mov	r1, r4
 801ccb0:	a80e      	add	r0, sp, #56	@ 0x38
 801ccb2:	f7f7 fc31 	bl	8014518 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ccb6:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 801ccba:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 801ccbe:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 801ccc2:	f8d9 0000 	ldr.w	r0, [r9]
 801ccc6:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ccca:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 801ccce:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 801ccd2:	eb08 0401 	add.w	r4, r8, r1
 801ccd6:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801ccda:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 801cea0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801ccde:	440a      	add	r2, r1
 801cce0:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 801cce4:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 801cce8:	4413      	add	r3, r2
 801ccea:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 801ccee:	6803      	ldr	r3, [r0, #0]
 801ccf0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801ccf2:	4798      	blx	r3
 801ccf4:	f010 0f80 	tst.w	r0, #128	@ 0x80
 801ccf8:	f8d9 0000 	ldr.w	r0, [r9]
 801ccfc:	d01f      	beq.n	801cd3e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801ccfe:	2200      	movs	r2, #0
 801cd00:	6801      	ldr	r1, [r0, #0]
 801cd02:	b2b6      	uxth	r6, r6
 801cd04:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801cd08:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801cd0c:	220b      	movs	r2, #11
 801cd0e:	9207      	str	r2, [sp, #28]
 801cd10:	f8b8 2000 	ldrh.w	r2, [r8]
 801cd14:	9601      	str	r6, [sp, #4]
 801cd16:	9206      	str	r2, [sp, #24]
 801cd18:	2201      	movs	r2, #1
 801cd1a:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801cd1e:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 801cd22:	9203      	str	r2, [sp, #12]
 801cd24:	fa1f f28a 	uxth.w	r2, sl
 801cd28:	9202      	str	r2, [sp, #8]
 801cd2a:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801cd2e:	9200      	str	r2, [sp, #0]
 801cd30:	463a      	mov	r2, r7
 801cd32:	6bcd      	ldr	r5, [r1, #60]	@ 0x3c
 801cd34:	4621      	mov	r1, r4
 801cd36:	47a8      	blx	r5
 801cd38:	b011      	add	sp, #68	@ 0x44
 801cd3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cd3e:	6803      	ldr	r3, [r0, #0]
 801cd40:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801cd44:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801cd46:	4798      	blx	r3
 801cd48:	f8b8 2000 	ldrh.w	r2, [r8]
 801cd4c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 801cd50:	2dff      	cmp	r5, #255	@ 0xff
 801cd52:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 801cd56:	fb0a fa02 	mul.w	sl, sl, r2
 801cd5a:	fb02 1303 	mla	r3, r2, r3, r1
 801cd5e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cd62:	d062      	beq.n	801ce2a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801cd64:	ea6f 0c05 	mvn.w	ip, r5
 801cd68:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801cd6c:	b2ad      	uxth	r5, r5
 801cd6e:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 801cd72:	fa5f fc8c 	uxtb.w	ip, ip
 801cd76:	930a      	str	r3, [sp, #40]	@ 0x28
 801cd78:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801cd7a:	4298      	cmp	r0, r3
 801cd7c:	f080 8085 	bcs.w	801ce8a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801cd80:	eb00 0b09 	add.w	fp, r0, r9
 801cd84:	4558      	cmp	r0, fp
 801cd86:	d246      	bcs.n	801ce16 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801cd88:	f814 eb01 	ldrb.w	lr, [r4], #1
 801cd8c:	2303      	movs	r3, #3
 801cd8e:	2204      	movs	r2, #4
 801cd90:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801cd94:	8803      	ldrh	r3, [r0, #0]
 801cd96:	eb07 0a0e 	add.w	sl, r7, lr
 801cd9a:	1219      	asrs	r1, r3, #8
 801cd9c:	10da      	asrs	r2, r3, #3
 801cd9e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801cda2:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801cda6:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801cdaa:	00db      	lsls	r3, r3, #3
 801cdac:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801cdb0:	fb18 f805 	smulbb	r8, r8, r5
 801cdb4:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801cdb8:	fb1e fe05 	smulbb	lr, lr, r5
 801cdbc:	b2db      	uxtb	r3, r3
 801cdbe:	fb01 810c 	mla	r1, r1, ip, r8
 801cdc2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801cdc6:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801cdca:	fb18 f805 	smulbb	r8, r8, r5
 801cdce:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801cdd2:	b289      	uxth	r1, r1
 801cdd4:	fb02 820c 	mla	r2, r2, ip, r8
 801cdd8:	fb03 e30c 	mla	r3, r3, ip, lr
 801cddc:	f101 0801 	add.w	r8, r1, #1
 801cde0:	b292      	uxth	r2, r2
 801cde2:	b29b      	uxth	r3, r3
 801cde4:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801cde8:	f102 0801 	add.w	r8, r2, #1
 801cdec:	f103 0e01 	add.w	lr, r3, #1
 801cdf0:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801cdf4:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801cdf8:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801cdfc:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801ce00:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801ce04:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801ce08:	ea4e 0101 	orr.w	r1, lr, r1
 801ce0c:	ea41 0108 	orr.w	r1, r1, r8
 801ce10:	f820 1b02 	strh.w	r1, [r0], #2
 801ce14:	e7b6      	b.n	801cd84 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801ce16:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ce18:	881b      	ldrh	r3, [r3, #0]
 801ce1a:	1b9b      	subs	r3, r3, r6
 801ce1c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ce20:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801ce24:	1b9b      	subs	r3, r3, r6
 801ce26:	441c      	add	r4, r3
 801ce28:	e7a6      	b.n	801cd78 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801ce2a:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801ce2e:	2203      	movs	r2, #3
 801ce30:	2504      	movs	r5, #4
 801ce32:	4919      	ldr	r1, [pc, #100]	@ (801ce98 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801ce34:	4550      	cmp	r0, sl
 801ce36:	d228      	bcs.n	801ce8a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801ce38:	eb00 0c09 	add.w	ip, r0, r9
 801ce3c:	4560      	cmp	r0, ip
 801ce3e:	4623      	mov	r3, r4
 801ce40:	d219      	bcs.n	801ce76 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801ce42:	f893 e000 	ldrb.w	lr, [r3]
 801ce46:	3401      	adds	r4, #1
 801ce48:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801ce4c:	eb07 0b0e 	add.w	fp, r7, lr
 801ce50:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801ce54:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801ce58:	f89b b001 	ldrb.w	fp, [fp, #1]
 801ce5c:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801ce60:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801ce64:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801ce68:	ea43 030b 	orr.w	r3, r3, fp
 801ce6c:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801ce70:	f820 3b02 	strh.w	r3, [r0], #2
 801ce74:	e7e2      	b.n	801ce3c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801ce76:	f8b8 3000 	ldrh.w	r3, [r8]
 801ce7a:	1b9b      	subs	r3, r3, r6
 801ce7c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ce80:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801ce84:	1b9b      	subs	r3, r3, r6
 801ce86:	441c      	add	r4, r3
 801ce88:	e7d4      	b.n	801ce34 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801ce8a:	4b04      	ldr	r3, [pc, #16]	@ (801ce9c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801ce8c:	6818      	ldr	r0, [r3, #0]
 801ce8e:	6803      	ldr	r3, [r0, #0]
 801ce90:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801ce92:	4798      	blx	r3
 801ce94:	e750      	b.n	801cd38 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801ce96:	bf00      	nop
 801ce98:	fffff800 	.word	0xfffff800
 801ce9c:	24001a30 	.word	0x24001a30
 801cea0:	24001a2a 	.word	0x24001a2a

0801cea4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801cea4:	b4f0      	push	{r4, r5, r6, r7}
 801cea6:	460c      	mov	r4, r1
 801cea8:	4611      	mov	r1, r2
 801ceaa:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801ceae:	461a      	mov	r2, r3
 801ceb0:	780f      	ldrb	r7, [r1, #0]
 801ceb2:	9b04      	ldr	r3, [sp, #16]
 801ceb4:	2f01      	cmp	r7, #1
 801ceb6:	784e      	ldrb	r6, [r1, #1]
 801ceb8:	d038      	beq.n	801cf2c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 801ceba:	d31f      	bcc.n	801cefc <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 801cebc:	2f02      	cmp	r7, #2
 801cebe:	d14d      	bne.n	801cf5c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801cec0:	2e03      	cmp	r6, #3
 801cec2:	d84b      	bhi.n	801cf5c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801cec4:	e8df f006 	tbb	[pc, r6]
 801cec8:	17140702 	.word	0x17140702
 801cecc:	9504      	str	r5, [sp, #16]
 801cece:	4620      	mov	r0, r4
 801ced0:	bcf0      	pop	{r4, r5, r6, r7}
 801ced2:	f7ff be09 	b.w	801cae8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801ced6:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801ced8:	2800      	cmp	r0, #0
 801ceda:	d03f      	beq.n	801cf5c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801cedc:	6806      	ldr	r6, [r0, #0]
 801cede:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801cee2:	68b5      	ldr	r5, [r6, #8]
 801cee4:	4613      	mov	r3, r2
 801cee6:	46ac      	mov	ip, r5
 801cee8:	460a      	mov	r2, r1
 801ceea:	4621      	mov	r1, r4
 801ceec:	bcf0      	pop	{r4, r5, r6, r7}
 801ceee:	4760      	bx	ip
 801cef0:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801cef4:	e7f0      	b.n	801ced8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801cef6:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801cefa:	e7ed      	b.n	801ced8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801cefc:	2e03      	cmp	r6, #3
 801cefe:	d82d      	bhi.n	801cf5c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801cf00:	e8df f006 	tbb	[pc, r6]
 801cf04:	110e0702 	.word	0x110e0702
 801cf08:	9504      	str	r5, [sp, #16]
 801cf0a:	4620      	mov	r0, r4
 801cf0c:	bcf0      	pop	{r4, r5, r6, r7}
 801cf0e:	f7ff bd05 	b.w	801c91c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801cf12:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801cf14:	b310      	cbz	r0, 801cf5c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801cf16:	6806      	ldr	r6, [r0, #0]
 801cf18:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801cf1c:	68f5      	ldr	r5, [r6, #12]
 801cf1e:	e7e1      	b.n	801cee4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801cf20:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801cf24:	e7f6      	b.n	801cf14 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801cf26:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801cf2a:	e7f3      	b.n	801cf14 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801cf2c:	2e03      	cmp	r6, #3
 801cf2e:	d815      	bhi.n	801cf5c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801cf30:	e8df f006 	tbb	[pc, r6]
 801cf34:	110e0702 	.word	0x110e0702
 801cf38:	9504      	str	r5, [sp, #16]
 801cf3a:	4620      	mov	r0, r4
 801cf3c:	bcf0      	pop	{r4, r5, r6, r7}
 801cf3e:	f7ff be9f 	b.w	801cc80 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801cf42:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801cf44:	b150      	cbz	r0, 801cf5c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801cf46:	6806      	ldr	r6, [r0, #0]
 801cf48:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801cf4c:	6935      	ldr	r5, [r6, #16]
 801cf4e:	e7c9      	b.n	801cee4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801cf50:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801cf54:	e7f6      	b.n	801cf44 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 801cf56:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801cf5a:	e7f3      	b.n	801cf44 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 801cf5c:	bcf0      	pop	{r4, r5, r6, r7}
 801cf5e:	4770      	bx	lr

0801cf60 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801cf60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cf64:	b087      	sub	sp, #28
 801cf66:	4604      	mov	r4, r0
 801cf68:	460e      	mov	r6, r1
 801cf6a:	6810      	ldr	r0, [r2, #0]
 801cf6c:	6851      	ldr	r1, [r2, #4]
 801cf6e:	ad02      	add	r5, sp, #8
 801cf70:	4617      	mov	r7, r2
 801cf72:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 801cf76:	f8df 9230 	ldr.w	r9, [pc, #560]	@ 801d1a8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801cf7a:	c503      	stmia	r5!, {r0, r1}
 801cf7c:	6818      	ldr	r0, [r3, #0]
 801cf7e:	ad04      	add	r5, sp, #16
 801cf80:	6859      	ldr	r1, [r3, #4]
 801cf82:	c503      	stmia	r5!, {r0, r1}
 801cf84:	a802      	add	r0, sp, #8
 801cf86:	f7f7 fa9f 	bl	80144c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cf8a:	4639      	mov	r1, r7
 801cf8c:	a804      	add	r0, sp, #16
 801cf8e:	f7f7 fac3 	bl	8014518 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cf92:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801cf96:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801cf9a:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801cf9e:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801cfa2:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cfa6:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801cfaa:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801cfae:	440e      	add	r6, r1
 801cfb0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801cfb4:	440a      	add	r2, r1
 801cfb6:	f8ad 2010 	strh.w	r2, [sp, #16]
 801cfba:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801cfbe:	4413      	add	r3, r2
 801cfc0:	f8ad 3012 	strh.w	r3, [sp, #18]
 801cfc4:	4b77      	ldr	r3, [pc, #476]	@ (801d1a4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801cfc6:	6818      	ldr	r0, [r3, #0]
 801cfc8:	6803      	ldr	r3, [r0, #0]
 801cfca:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801cfcc:	4798      	blx	r3
 801cfce:	f8b9 b000 	ldrh.w	fp, [r9]
 801cfd2:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801cfd6:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801cfda:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801cfde:	fb05 f50b 	mul.w	r5, r5, fp
 801cfe2:	fb0b 2303 	mla	r3, fp, r3, r2
 801cfe6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cfea:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801cfee:	9300      	str	r3, [sp, #0]
 801cff0:	d069      	beq.n	801d0c6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801cff2:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801cff6:	4558      	cmp	r0, fp
 801cff8:	f080 80cc 	bcs.w	801d194 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801cffc:	9b00      	ldr	r3, [sp, #0]
 801cffe:	4631      	mov	r1, r6
 801d000:	18c3      	adds	r3, r0, r3
 801d002:	9301      	str	r3, [sp, #4]
 801d004:	9b01      	ldr	r3, [sp, #4]
 801d006:	4298      	cmp	r0, r3
 801d008:	d24f      	bcs.n	801d0aa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801d00a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801d00e:	2a00      	cmp	r2, #0
 801d010:	d048      	beq.n	801d0a4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d012:	fb0a f202 	mul.w	r2, sl, r2
 801d016:	1c53      	adds	r3, r2, #1
 801d018:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d01c:	121b      	asrs	r3, r3, #8
 801d01e:	d041      	beq.n	801d0a4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d020:	8802      	ldrh	r2, [r0, #0]
 801d022:	b29e      	uxth	r6, r3
 801d024:	f8b4 c000 	ldrh.w	ip, [r4]
 801d028:	43db      	mvns	r3, r3
 801d02a:	1215      	asrs	r5, r2, #8
 801d02c:	b2db      	uxtb	r3, r3
 801d02e:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d032:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801d036:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801d03a:	fb15 f503 	smulbb	r5, r5, r3
 801d03e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801d042:	00d2      	lsls	r2, r2, #3
 801d044:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801d048:	fb07 5706 	mla	r7, r7, r6, r5
 801d04c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801d050:	b2d2      	uxtb	r2, r2
 801d052:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d056:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801d05a:	fb1e fe03 	smulbb	lr, lr, r3
 801d05e:	b2bf      	uxth	r7, r7
 801d060:	fb12 f203 	smulbb	r2, r2, r3
 801d064:	fa5f fc8c 	uxtb.w	ip, ip
 801d068:	fb05 e506 	mla	r5, r5, r6, lr
 801d06c:	f107 0e01 	add.w	lr, r7, #1
 801d070:	fb0c 2c06 	mla	ip, ip, r6, r2
 801d074:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801d078:	fa1f fc8c 	uxth.w	ip, ip
 801d07c:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 801d080:	b2ad      	uxth	r5, r5
 801d082:	f10c 0701 	add.w	r7, ip, #1
 801d086:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801d08a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d08e:	ea47 070e 	orr.w	r7, r7, lr
 801d092:	f105 0e01 	add.w	lr, r5, #1
 801d096:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801d09a:	096d      	lsrs	r5, r5, #5
 801d09c:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d0a0:	432f      	orrs	r7, r5
 801d0a2:	8007      	strh	r7, [r0, #0]
 801d0a4:	3002      	adds	r0, #2
 801d0a6:	3402      	adds	r4, #2
 801d0a8:	e7ac      	b.n	801d004 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801d0aa:	f8b9 3000 	ldrh.w	r3, [r9]
 801d0ae:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d0b2:	eba3 0308 	sub.w	r3, r3, r8
 801d0b6:	eba6 0608 	sub.w	r6, r6, r8
 801d0ba:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d0be:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d0c2:	440e      	add	r6, r1
 801d0c4:	e797      	b.n	801cff6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801d0c6:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801d0ca:	42a8      	cmp	r0, r5
 801d0cc:	d262      	bcs.n	801d194 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d0ce:	9b00      	ldr	r3, [sp, #0]
 801d0d0:	4631      	mov	r1, r6
 801d0d2:	eb00 0b03 	add.w	fp, r0, r3
 801d0d6:	4558      	cmp	r0, fp
 801d0d8:	d24e      	bcs.n	801d178 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801d0da:	f811 3b01 	ldrb.w	r3, [r1], #1
 801d0de:	b12b      	cbz	r3, 801d0ec <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d0e0:	2bff      	cmp	r3, #255	@ 0xff
 801d0e2:	f8b4 e000 	ldrh.w	lr, [r4]
 801d0e6:	d104      	bne.n	801d0f2 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801d0e8:	f8a0 e000 	strh.w	lr, [r0]
 801d0ec:	3002      	adds	r0, #2
 801d0ee:	3402      	adds	r4, #2
 801d0f0:	e7f1      	b.n	801d0d6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801d0f2:	8802      	ldrh	r2, [r0, #0]
 801d0f4:	b29f      	uxth	r7, r3
 801d0f6:	43db      	mvns	r3, r3
 801d0f8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801d0fc:	1216      	asrs	r6, r2, #8
 801d0fe:	b2db      	uxtb	r3, r3
 801d100:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801d104:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801d108:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801d10c:	00d2      	lsls	r2, r2, #3
 801d10e:	fb16 f603 	smulbb	r6, r6, r3
 801d112:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801d116:	b2d2      	uxtb	r2, r2
 801d118:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d11c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801d120:	fb1a fa03 	smulbb	sl, sl, r3
 801d124:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d128:	fa1f fc8c 	uxth.w	ip, ip
 801d12c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801d130:	fb12 f303 	smulbb	r3, r2, r3
 801d134:	fa5f fe8e 	uxtb.w	lr, lr
 801d138:	fb06 a607 	mla	r6, r6, r7, sl
 801d13c:	f10c 0201 	add.w	r2, ip, #1
 801d140:	fb0e 3307 	mla	r3, lr, r7, r3
 801d144:	b2b6      	uxth	r6, r6
 801d146:	b29b      	uxth	r3, r3
 801d148:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801d14c:	f106 0a01 	add.w	sl, r6, #1
 801d150:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 801d154:	f103 0c01 	add.w	ip, r3, #1
 801d158:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801d15c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d160:	0976      	lsrs	r6, r6, #5
 801d162:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d166:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801d16a:	ea4c 0c02 	orr.w	ip, ip, r2
 801d16e:	ea4c 0c06 	orr.w	ip, ip, r6
 801d172:	f8a0 c000 	strh.w	ip, [r0]
 801d176:	e7b9      	b.n	801d0ec <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d178:	f8b9 3000 	ldrh.w	r3, [r9]
 801d17c:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d180:	eba3 0308 	sub.w	r3, r3, r8
 801d184:	eba6 0608 	sub.w	r6, r6, r8
 801d188:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d18c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d190:	440e      	add	r6, r1
 801d192:	e79a      	b.n	801d0ca <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801d194:	4b03      	ldr	r3, [pc, #12]	@ (801d1a4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d196:	6818      	ldr	r0, [r3, #0]
 801d198:	6803      	ldr	r3, [r0, #0]
 801d19a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d19c:	4798      	blx	r3
 801d19e:	b007      	add	sp, #28
 801d1a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d1a4:	24001a30 	.word	0x24001a30
 801d1a8:	24001a2a 	.word	0x24001a2a

0801d1ac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801d1ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d1b0:	b089      	sub	sp, #36	@ 0x24
 801d1b2:	4607      	mov	r7, r0
 801d1b4:	4688      	mov	r8, r1
 801d1b6:	4692      	mov	sl, r2
 801d1b8:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 801d1bc:	4699      	mov	r9, r3
 801d1be:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801d1c0:	2e00      	cmp	r6, #0
 801d1c2:	d048      	beq.n	801d256 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d1c4:	4608      	mov	r0, r1
 801d1c6:	f7fa f81b 	bl	8017200 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801d1ca:	4605      	mov	r5, r0
 801d1cc:	4640      	mov	r0, r8
 801d1ce:	f7fa f84b 	bl	8017268 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801d1d2:	f8ad 000e 	strh.w	r0, [sp, #14]
 801d1d6:	4640      	mov	r0, r8
 801d1d8:	f8ad a008 	strh.w	sl, [sp, #8]
 801d1dc:	f8ad 500c 	strh.w	r5, [sp, #12]
 801d1e0:	f8ad 900a 	strh.w	r9, [sp, #10]
 801d1e4:	f7fa f8fe 	bl	80173e4 <_ZNK8touchgfx6Bitmap7getDataEv>
 801d1e8:	4605      	mov	r5, r0
 801d1ea:	4640      	mov	r0, r8
 801d1ec:	f7fa f92a 	bl	8017444 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801d1f0:	4682      	mov	sl, r0
 801d1f2:	4640      	mov	r0, r8
 801d1f4:	f7fa f97a 	bl	80174ec <_ZNK8touchgfx6Bitmap9getFormatEv>
 801d1f8:	2810      	cmp	r0, #16
 801d1fa:	d82c      	bhi.n	801d256 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d1fc:	e8df f010 	tbh	[pc, r0, lsl #1]
 801d200:	00ba00ca 	.word	0x00ba00ca
 801d204:	002b0011 	.word	0x002b0011
 801d208:	002b002b 	.word	0x002b002b
 801d20c:	002b002b 	.word	0x002b002b
 801d210:	002b002b 	.word	0x002b002b
 801d214:	00c1002b 	.word	0x00c1002b
 801d218:	002b002b 	.word	0x002b002b
 801d21c:	002b0180 	.word	0x002b0180
 801d220:	0173      	.short	0x0173
 801d222:	4bbc      	ldr	r3, [pc, #752]	@ (801d514 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
 801d224:	6818      	ldr	r0, [r3, #0]
 801d226:	6803      	ldr	r3, [r0, #0]
 801d228:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801d22a:	4798      	blx	r3
 801d22c:	2eff      	cmp	r6, #255	@ 0xff
 801d22e:	d101      	bne.n	801d234 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 801d230:	0683      	lsls	r3, r0, #26
 801d232:	d506      	bpl.n	801d242 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
 801d234:	4633      	mov	r3, r6
 801d236:	4622      	mov	r2, r4
 801d238:	a902      	add	r1, sp, #8
 801d23a:	4628      	mov	r0, r5
 801d23c:	f7ff f8fc 	bl	801c438 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d240:	e009      	b.n	801d256 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d242:	4640      	mov	r0, r8
 801d244:	f7fa f896 	bl	8017374 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801d248:	b940      	cbnz	r0, 801d25c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
 801d24a:	4623      	mov	r3, r4
 801d24c:	aa02      	add	r2, sp, #8
 801d24e:	4629      	mov	r1, r5
 801d250:	4638      	mov	r0, r7
 801d252:	f7ff f9d7 	bl	801c604 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801d256:	b009      	add	sp, #36	@ 0x24
 801d258:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d25c:	f10d 0918 	add.w	r9, sp, #24
 801d260:	4641      	mov	r1, r8
 801d262:	f10d 0810 	add.w	r8, sp, #16
 801d266:	4648      	mov	r0, r9
 801d268:	f7fa f832 	bl	80172d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801d26c:	e899 0003 	ldmia.w	r9, {r0, r1}
 801d270:	e888 0003 	stmia.w	r8, {r0, r1}
 801d274:	4640      	mov	r0, r8
 801d276:	4621      	mov	r1, r4
 801d278:	f7f4 fa2a 	bl	80116d0 <_ZN8touchgfx4RectaNERKS0_>
 801d27c:	4640      	mov	r0, r8
 801d27e:	f7f4 fa6a 	bl	8011756 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d282:	2800      	cmp	r0, #0
 801d284:	d1d6      	bne.n	801d234 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 801d286:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d28a:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801d28e:	4293      	cmp	r3, r2
 801d290:	dd12      	ble.n	801d2b8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
 801d292:	1a9b      	subs	r3, r3, r2
 801d294:	f9b4 0000 	ldrsh.w	r0, [r4]
 801d298:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d29c:	f8ad 0018 	strh.w	r0, [sp, #24]
 801d2a0:	4628      	mov	r0, r5
 801d2a2:	f8ad 201a 	strh.w	r2, [sp, #26]
 801d2a6:	464a      	mov	r2, r9
 801d2a8:	f8ad 101c 	strh.w	r1, [sp, #28]
 801d2ac:	a902      	add	r1, sp, #8
 801d2ae:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d2b2:	4633      	mov	r3, r6
 801d2b4:	f7ff f8c0 	bl	801c438 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d2b8:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801d2bc:	f9b4 2000 	ldrsh.w	r2, [r4]
 801d2c0:	4293      	cmp	r3, r2
 801d2c2:	dd12      	ble.n	801d2ea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
 801d2c4:	1a9b      	subs	r3, r3, r2
 801d2c6:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801d2ca:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801d2ce:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d2d2:	464a      	mov	r2, r9
 801d2d4:	f8ad 001a 	strh.w	r0, [sp, #26]
 801d2d8:	4628      	mov	r0, r5
 801d2da:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d2de:	23ff      	movs	r3, #255	@ 0xff
 801d2e0:	f8ad 101e 	strh.w	r1, [sp, #30]
 801d2e4:	a902      	add	r1, sp, #8
 801d2e6:	f7ff f8a7 	bl	801c438 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d2ea:	4643      	mov	r3, r8
 801d2ec:	aa02      	add	r2, sp, #8
 801d2ee:	4629      	mov	r1, r5
 801d2f0:	4638      	mov	r0, r7
 801d2f2:	f7ff f987 	bl	801c604 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801d2f6:	88a2      	ldrh	r2, [r4, #4]
 801d2f8:	8823      	ldrh	r3, [r4, #0]
 801d2fa:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801d2fe:	4413      	add	r3, r2
 801d300:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d304:	440a      	add	r2, r1
 801d306:	b29b      	uxth	r3, r3
 801d308:	b292      	uxth	r2, r2
 801d30a:	b218      	sxth	r0, r3
 801d30c:	b211      	sxth	r1, r2
 801d30e:	4288      	cmp	r0, r1
 801d310:	dd12      	ble.n	801d338 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
 801d312:	1a9b      	subs	r3, r3, r2
 801d314:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801d318:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801d31c:	464a      	mov	r2, r9
 801d31e:	f8ad 1018 	strh.w	r1, [sp, #24]
 801d322:	a902      	add	r1, sp, #8
 801d324:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d328:	23ff      	movs	r3, #255	@ 0xff
 801d32a:	f8ad 001e 	strh.w	r0, [sp, #30]
 801d32e:	4628      	mov	r0, r5
 801d330:	f8ad 601a 	strh.w	r6, [sp, #26]
 801d334:	f7ff f880 	bl	801c438 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d338:	88e2      	ldrh	r2, [r4, #6]
 801d33a:	8863      	ldrh	r3, [r4, #2]
 801d33c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801d340:	4413      	add	r3, r2
 801d342:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801d346:	440a      	add	r2, r1
 801d348:	b29b      	uxth	r3, r3
 801d34a:	b292      	uxth	r2, r2
 801d34c:	b218      	sxth	r0, r3
 801d34e:	b211      	sxth	r1, r2
 801d350:	4288      	cmp	r0, r1
 801d352:	dd80      	ble.n	801d256 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d354:	1a9b      	subs	r3, r3, r2
 801d356:	f9b4 6000 	ldrsh.w	r6, [r4]
 801d35a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801d35e:	464a      	mov	r2, r9
 801d360:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d364:	23ff      	movs	r3, #255	@ 0xff
 801d366:	f8ad 6018 	strh.w	r6, [sp, #24]
 801d36a:	f8ad 101a 	strh.w	r1, [sp, #26]
 801d36e:	f8ad 001c 	strh.w	r0, [sp, #28]
 801d372:	e761      	b.n	801d238 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 801d374:	4633      	mov	r3, r6
 801d376:	4622      	mov	r2, r4
 801d378:	a902      	add	r1, sp, #8
 801d37a:	4628      	mov	r0, r5
 801d37c:	f7ff f9b2 	bl	801c6e4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801d380:	e769      	b.n	801d256 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d382:	e9cd 4600 	strd	r4, r6, [sp]
 801d386:	ab02      	add	r3, sp, #8
 801d388:	4652      	mov	r2, sl
 801d38a:	4629      	mov	r1, r5
 801d38c:	4638      	mov	r0, r7
 801d38e:	f7ff fd89 	bl	801cea4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801d392:	e760      	b.n	801d256 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d394:	4640      	mov	r0, r8
 801d396:	f7f9 ffed 	bl	8017374 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801d39a:	b948      	cbnz	r0, 801d3b0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
 801d39c:	683b      	ldr	r3, [r7, #0]
 801d39e:	aa02      	add	r2, sp, #8
 801d3a0:	4629      	mov	r1, r5
 801d3a2:	e9cd 6000 	strd	r6, r0, [sp]
 801d3a6:	4638      	mov	r0, r7
 801d3a8:	68de      	ldr	r6, [r3, #12]
 801d3aa:	4623      	mov	r3, r4
 801d3ac:	47b0      	blx	r6
 801d3ae:	e752      	b.n	801d256 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d3b0:	f10d 0918 	add.w	r9, sp, #24
 801d3b4:	4641      	mov	r1, r8
 801d3b6:	f10d 0810 	add.w	r8, sp, #16
 801d3ba:	4648      	mov	r0, r9
 801d3bc:	f7f9 ff88 	bl	80172d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801d3c0:	e899 0003 	ldmia.w	r9, {r0, r1}
 801d3c4:	e888 0003 	stmia.w	r8, {r0, r1}
 801d3c8:	4640      	mov	r0, r8
 801d3ca:	4621      	mov	r1, r4
 801d3cc:	f7f4 f980 	bl	80116d0 <_ZN8touchgfx4RectaNERKS0_>
 801d3d0:	4640      	mov	r0, r8
 801d3d2:	f7f4 f9c0 	bl	8011756 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d3d6:	b138      	cbz	r0, 801d3e8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
 801d3d8:	4623      	mov	r3, r4
 801d3da:	9600      	str	r6, [sp, #0]
 801d3dc:	aa02      	add	r2, sp, #8
 801d3de:	4651      	mov	r1, sl
 801d3e0:	4628      	mov	r0, r5
 801d3e2:	f7ff fdbd 	bl	801cf60 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d3e6:	e736      	b.n	801d256 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d3e8:	683b      	ldr	r3, [r7, #0]
 801d3ea:	aa02      	add	r2, sp, #8
 801d3ec:	4629      	mov	r1, r5
 801d3ee:	e9cd 6000 	strd	r6, r0, [sp]
 801d3f2:	4638      	mov	r0, r7
 801d3f4:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801d3f8:	4643      	mov	r3, r8
 801d3fa:	47d8      	blx	fp
 801d3fc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d400:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801d404:	4293      	cmp	r3, r2
 801d406:	dd13      	ble.n	801d430 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
 801d408:	f9b4 0000 	ldrsh.w	r0, [r4]
 801d40c:	1a9b      	subs	r3, r3, r2
 801d40e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d412:	f8ad 0018 	strh.w	r0, [sp, #24]
 801d416:	4628      	mov	r0, r5
 801d418:	f8ad 201a 	strh.w	r2, [sp, #26]
 801d41c:	aa02      	add	r2, sp, #8
 801d41e:	f8ad 101c 	strh.w	r1, [sp, #28]
 801d422:	4651      	mov	r1, sl
 801d424:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d428:	464b      	mov	r3, r9
 801d42a:	9600      	str	r6, [sp, #0]
 801d42c:	f7ff fd98 	bl	801cf60 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d430:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801d434:	f9b4 2000 	ldrsh.w	r2, [r4]
 801d438:	4293      	cmp	r3, r2
 801d43a:	dd13      	ble.n	801d464 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
 801d43c:	1a9b      	subs	r3, r3, r2
 801d43e:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801d442:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801d446:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d44a:	aa02      	add	r2, sp, #8
 801d44c:	f8ad 001a 	strh.w	r0, [sp, #26]
 801d450:	4628      	mov	r0, r5
 801d452:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d456:	464b      	mov	r3, r9
 801d458:	f8ad 101e 	strh.w	r1, [sp, #30]
 801d45c:	4651      	mov	r1, sl
 801d45e:	9600      	str	r6, [sp, #0]
 801d460:	f7ff fd7e 	bl	801cf60 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d464:	88a2      	ldrh	r2, [r4, #4]
 801d466:	8823      	ldrh	r3, [r4, #0]
 801d468:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801d46c:	4413      	add	r3, r2
 801d46e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d472:	440a      	add	r2, r1
 801d474:	b29b      	uxth	r3, r3
 801d476:	b292      	uxth	r2, r2
 801d478:	b218      	sxth	r0, r3
 801d47a:	b211      	sxth	r1, r2
 801d47c:	4288      	cmp	r0, r1
 801d47e:	dd13      	ble.n	801d4a8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
 801d480:	1a9b      	subs	r3, r3, r2
 801d482:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801d486:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801d48a:	aa02      	add	r2, sp, #8
 801d48c:	f8ad 1018 	strh.w	r1, [sp, #24]
 801d490:	4651      	mov	r1, sl
 801d492:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d496:	464b      	mov	r3, r9
 801d498:	f8ad 001e 	strh.w	r0, [sp, #30]
 801d49c:	4628      	mov	r0, r5
 801d49e:	9600      	str	r6, [sp, #0]
 801d4a0:	f8ad 701a 	strh.w	r7, [sp, #26]
 801d4a4:	f7ff fd5c 	bl	801cf60 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d4a8:	88e2      	ldrh	r2, [r4, #6]
 801d4aa:	8863      	ldrh	r3, [r4, #2]
 801d4ac:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801d4b0:	4413      	add	r3, r2
 801d4b2:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801d4b6:	440a      	add	r2, r1
 801d4b8:	b29b      	uxth	r3, r3
 801d4ba:	b292      	uxth	r2, r2
 801d4bc:	b218      	sxth	r0, r3
 801d4be:	b211      	sxth	r1, r2
 801d4c0:	4288      	cmp	r0, r1
 801d4c2:	f77f aec8 	ble.w	801d256 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d4c6:	f9b4 7000 	ldrsh.w	r7, [r4]
 801d4ca:	1a9b      	subs	r3, r3, r2
 801d4cc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801d4d0:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d4d4:	464b      	mov	r3, r9
 801d4d6:	f8ad 7018 	strh.w	r7, [sp, #24]
 801d4da:	f8ad 101a 	strh.w	r1, [sp, #26]
 801d4de:	f8ad 001c 	strh.w	r0, [sp, #28]
 801d4e2:	9600      	str	r6, [sp, #0]
 801d4e4:	e77a      	b.n	801d3dc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 801d4e6:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 801d4ea:	2800      	cmp	r0, #0
 801d4ec:	f43f aeb3 	beq.w	801d256 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d4f0:	6803      	ldr	r3, [r0, #0]
 801d4f2:	9600      	str	r6, [sp, #0]
 801d4f4:	68de      	ldr	r6, [r3, #12]
 801d4f6:	4623      	mov	r3, r4
 801d4f8:	aa02      	add	r2, sp, #8
 801d4fa:	4629      	mov	r1, r5
 801d4fc:	47b0      	blx	r6
 801d4fe:	e6aa      	b.n	801d256 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d500:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 801d504:	2800      	cmp	r0, #0
 801d506:	f43f aea6 	beq.w	801d256 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d50a:	6803      	ldr	r3, [r0, #0]
 801d50c:	9600      	str	r6, [sp, #0]
 801d50e:	689e      	ldr	r6, [r3, #8]
 801d510:	e7f1      	b.n	801d4f6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
 801d512:	bf00      	nop
 801d514:	24001a30 	.word	0x24001a30

0801d518 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801d518:	b180      	cbz	r0, 801d53c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801d51a:	2903      	cmp	r1, #3
 801d51c:	d81c      	bhi.n	801d558 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801d51e:	e8df f001 	tbb	[pc, r1]
 801d522:	1d02      	.short	0x1d02
 801d524:	1f08      	.short	0x1f08
 801d526:	4b10      	ldr	r3, [pc, #64]	@ (801d568 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801d528:	8818      	ldrh	r0, [r3, #0]
 801d52a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d52e:	4240      	negs	r0, r0
 801d530:	4770      	bx	lr
 801d532:	4b0d      	ldr	r3, [pc, #52]	@ (801d568 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801d534:	8818      	ldrh	r0, [r3, #0]
 801d536:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d53a:	4770      	bx	lr
 801d53c:	2903      	cmp	r1, #3
 801d53e:	d80b      	bhi.n	801d558 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801d540:	a301      	add	r3, pc, #4	@ (adr r3, 801d548 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801d542:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801d546:	bf00      	nop
 801d548:	0801d55d 	.word	0x0801d55d
 801d54c:	0801d533 	.word	0x0801d533
 801d550:	0801d561 	.word	0x0801d561
 801d554:	0801d527 	.word	0x0801d527
 801d558:	2000      	movs	r0, #0
 801d55a:	4770      	bx	lr
 801d55c:	2001      	movs	r0, #1
 801d55e:	4770      	bx	lr
 801d560:	f04f 30ff 	mov.w	r0, #4294967295
 801d564:	4770      	bx	lr
 801d566:	bf00      	nop
 801d568:	24001a2a 	.word	0x24001a2a

0801d56c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801d56c:	b180      	cbz	r0, 801d590 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801d56e:	2903      	cmp	r1, #3
 801d570:	d81c      	bhi.n	801d5ac <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801d572:	e8df f001 	tbb	[pc, r1]
 801d576:	021d      	.short	0x021d
 801d578:	071f      	.short	0x071f
 801d57a:	4b10      	ldr	r3, [pc, #64]	@ (801d5bc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801d57c:	8818      	ldrh	r0, [r3, #0]
 801d57e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d582:	4770      	bx	lr
 801d584:	4b0d      	ldr	r3, [pc, #52]	@ (801d5bc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801d586:	8818      	ldrh	r0, [r3, #0]
 801d588:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801d58c:	4240      	negs	r0, r0
 801d58e:	4770      	bx	lr
 801d590:	2903      	cmp	r1, #3
 801d592:	d80b      	bhi.n	801d5ac <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801d594:	a301      	add	r3, pc, #4	@ (adr r3, 801d59c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801d596:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801d59a:	bf00      	nop
 801d59c:	0801d57b 	.word	0x0801d57b
 801d5a0:	0801d5b5 	.word	0x0801d5b5
 801d5a4:	0801d585 	.word	0x0801d585
 801d5a8:	0801d5b1 	.word	0x0801d5b1
 801d5ac:	2000      	movs	r0, #0
 801d5ae:	4770      	bx	lr
 801d5b0:	2001      	movs	r0, #1
 801d5b2:	4770      	bx	lr
 801d5b4:	f04f 30ff 	mov.w	r0, #4294967295
 801d5b8:	4770      	bx	lr
 801d5ba:	bf00      	nop
 801d5bc:	24001a2a 	.word	0x24001a2a

0801d5c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801d5c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d5c4:	b099      	sub	sp, #100	@ 0x64
 801d5c6:	910b      	str	r1, [sp, #44]	@ 0x2c
 801d5c8:	a914      	add	r1, sp, #80	@ 0x50
 801d5ca:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 801d5ce:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 801d5d2:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 801d5d6:	f89d 80ac 	ldrb.w	r8, [sp, #172]	@ 0xac
 801d5da:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 801d5de:	e881 000c 	stmia.w	r1, {r2, r3}
 801d5e2:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 801d5e6:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 801d5ea:	9309      	str	r3, [sp, #36]	@ 0x24
 801d5ec:	f891 900d 	ldrb.w	r9, [r1, #13]
 801d5f0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801d5f4:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801d5f8:	9310      	str	r3, [sp, #64]	@ 0x40
 801d5fa:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 801d5fe:	930c      	str	r3, [sp, #48]	@ 0x30
 801d600:	f407 7380 	and.w	r3, r7, #256	@ 0x100
 801d604:	798f      	ldrb	r7, [r1, #6]
 801d606:	431f      	orrs	r7, r3
 801d608:	f000 8195 	beq.w	801d936 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d60c:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801d610:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 801d614:	f891 9007 	ldrb.w	r9, [r1, #7]
 801d618:	ea59 0903 	orrs.w	r9, r9, r3
 801d61c:	f000 818b 	beq.w	801d936 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d620:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801d624:	b29b      	uxth	r3, r3
 801d626:	2d00      	cmp	r5, #0
 801d628:	f000 812e 	beq.w	801d888 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801d62c:	1aed      	subs	r5, r5, r3
 801d62e:	b2ad      	uxth	r5, r5
 801d630:	042b      	lsls	r3, r5, #16
 801d632:	d502      	bpl.n	801d63a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801d634:	1b64      	subs	r4, r4, r5
 801d636:	2500      	movs	r5, #0
 801d638:	b224      	sxth	r4, r4
 801d63a:	f9b2 1000 	ldrsh.w	r1, [r2]
 801d63e:	a814      	add	r0, sp, #80	@ 0x50
 801d640:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 801d644:	428c      	cmp	r4, r1
 801d646:	b28b      	uxth	r3, r1
 801d648:	bfbf      	itttt	lt
 801d64a:	18ed      	addlt	r5, r5, r3
 801d64c:	1b2c      	sublt	r4, r5, r4
 801d64e:	b2a5      	uxthlt	r5, r4
 801d650:	460c      	movlt	r4, r1
 801d652:	8891      	ldrh	r1, [r2, #4]
 801d654:	440b      	add	r3, r1
 801d656:	4621      	mov	r1, r4
 801d658:	b21b      	sxth	r3, r3
 801d65a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d65c:	88d3      	ldrh	r3, [r2, #6]
 801d65e:	8852      	ldrh	r2, [r2, #2]
 801d660:	4413      	add	r3, r2
 801d662:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801d664:	b21b      	sxth	r3, r3
 801d666:	930d      	str	r3, [sp, #52]	@ 0x34
 801d668:	4bbd      	ldr	r3, [pc, #756]	@ (801d960 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801d66a:	f893 b000 	ldrb.w	fp, [r3]
 801d66e:	f10b 3cff 	add.w	ip, fp, #4294967295
 801d672:	f1dc 0300 	rsbs	r3, ip, #0
 801d676:	eb43 030c 	adc.w	r3, r3, ip
 801d67a:	930e      	str	r3, [sp, #56]	@ 0x38
 801d67c:	4653      	mov	r3, sl
 801d67e:	f7f6 fd98 	bl	80141b2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801d682:	4621      	mov	r1, r4
 801d684:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 801d688:	4653      	mov	r3, sl
 801d68a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801d68c:	a814      	add	r0, sp, #80	@ 0x50
 801d68e:	f7f6 fdad 	bl	80141ec <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801d692:	a918      	add	r1, sp, #96	@ 0x60
 801d694:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801d698:	a817      	add	r0, sp, #92	@ 0x5c
 801d69a:	f7f6 fed3 	bl	8014444 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801d69e:	f1ba 0f00 	cmp.w	sl, #0
 801d6a2:	f040 80f4 	bne.w	801d88e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801d6a6:	f1bb 0f01 	cmp.w	fp, #1
 801d6aa:	f040 80f8 	bne.w	801d89e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801d6ae:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d6b0:	2b00      	cmp	r3, #0
 801d6b2:	f040 8145 	bne.w	801d940 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801d6b6:	b2ba      	uxth	r2, r7
 801d6b8:	b905      	cbnz	r5, 801d6bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801d6ba:	b16e      	cbz	r6, 801d6d8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801d6bc:	fb06 5302 	mla	r3, r6, r2, r5
 801d6c0:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 801d6c2:	4631      	mov	r1, r6
 801d6c4:	fb08 f303 	mul.w	r3, r8, r3
 801d6c8:	f003 0607 	and.w	r6, r3, #7
 801d6cc:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801d6d0:	9328      	str	r3, [sp, #160]	@ 0xa0
 801d6d2:	eba9 0301 	sub.w	r3, r9, r1
 801d6d6:	930a      	str	r3, [sp, #40]	@ 0x28
 801d6d8:	4651      	mov	r1, sl
 801d6da:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801d6dc:	f7ff ff1c 	bl	801d518 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801d6e0:	4681      	mov	r9, r0
 801d6e2:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801d6e4:	f7ff ff42 	bl	801d56c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801d6e8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801d6ea:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801d6ec:	4683      	mov	fp, r0
 801d6ee:	eba3 0a01 	sub.w	sl, r3, r1
 801d6f2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d6f4:	459a      	cmp	sl, r3
 801d6f6:	bfa8      	it	ge
 801d6f8:	469a      	movge	sl, r3
 801d6fa:	f1ba 0f00 	cmp.w	sl, #0
 801d6fe:	f340 811a 	ble.w	801d936 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d702:	1b64      	subs	r4, r4, r5
 801d704:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d706:	1b1c      	subs	r4, r3, r4
 801d708:	42bc      	cmp	r4, r7
 801d70a:	bfd4      	ite	le
 801d70c:	ebc5 0504 	rsble	r5, r5, r4
 801d710:	ebc5 0507 	rsbgt	r5, r5, r7
 801d714:	2d00      	cmp	r5, #0
 801d716:	f340 810e 	ble.w	801d936 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d71a:	1b52      	subs	r2, r2, r5
 801d71c:	fb08 f302 	mul.w	r3, r8, r2
 801d720:	930f      	str	r3, [sp, #60]	@ 0x3c
 801d722:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d724:	2b00      	cmp	r3, #0
 801d726:	f040 8116 	bne.w	801d956 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801d72a:	4b8e      	ldr	r3, [pc, #568]	@ (801d964 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801d72c:	6818      	ldr	r0, [r3, #0]
 801d72e:	6803      	ldr	r3, [r0, #0]
 801d730:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d732:	4798      	blx	r3
 801d734:	2301      	movs	r3, #1
 801d736:	4a8c      	ldr	r2, [pc, #560]	@ (801d968 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801d738:	fa03 f308 	lsl.w	r3, r3, r8
 801d73c:	8811      	ldrh	r1, [r2, #0]
 801d73e:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	@ 0x5c
 801d742:	3b01      	subs	r3, #1
 801d744:	b2db      	uxtb	r3, r3
 801d746:	930e      	str	r3, [sp, #56]	@ 0x38
 801d748:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	@ 0x5e
 801d74c:	fb01 2303 	mla	r3, r1, r3, r2
 801d750:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801d754:	930a      	str	r3, [sp, #40]	@ 0x28
 801d756:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801d758:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801d75c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801d75e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801d760:	0a19      	lsrs	r1, r3, #8
 801d762:	b2cb      	uxtb	r3, r1
 801d764:	9312      	str	r3, [sp, #72]	@ 0x48
 801d766:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801d768:	b2db      	uxtb	r3, r3
 801d76a:	9311      	str	r3, [sp, #68]	@ 0x44
 801d76c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801d76e:	095a      	lsrs	r2, r3, #5
 801d770:	4b7e      	ldr	r3, [pc, #504]	@ (801d96c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>)
 801d772:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801d776:	400b      	ands	r3, r1
 801d778:	4313      	orrs	r3, r2
 801d77a:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 801d77c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d780:	4313      	orrs	r3, r2
 801d782:	b29b      	uxth	r3, r3
 801d784:	9310      	str	r3, [sp, #64]	@ 0x40
 801d786:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d788:	781a      	ldrb	r2, [r3, #0]
 801d78a:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801d78e:	fb05 b919 	mls	r9, r5, r9, fp
 801d792:	4132      	asrs	r2, r6
 801d794:	fb03 fb05 	mul.w	fp, r3, r5
 801d798:	930d      	str	r3, [sp, #52]	@ 0x34
 801d79a:	b2d2      	uxtb	r2, r2
 801d79c:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801d7a0:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801d7a4:	f0c0 80f5 	bcc.w	801d992 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801d7a8:	46ae      	mov	lr, r5
 801d7aa:	f8dd c028 	ldr.w	ip, [sp, #40]	@ 0x28
 801d7ae:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801d7b2:	f0c0 80dd 	bcc.w	801d970 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801d7b6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801d7b8:	4013      	ands	r3, r2
 801d7ba:	d055      	beq.n	801d868 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801d7bc:	20ff      	movs	r0, #255	@ 0xff
 801d7be:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801d7c0:	fb90 f1f1 	sdiv	r1, r0, r1
 801d7c4:	434b      	muls	r3, r1
 801d7c6:	2bfe      	cmp	r3, #254	@ 0xfe
 801d7c8:	dd03      	ble.n	801d7d2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801d7ca:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801d7cc:	4281      	cmp	r1, r0
 801d7ce:	f000 80c4 	beq.w	801d95a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39a>
 801d7d2:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801d7d4:	f8bc 4000 	ldrh.w	r4, [ip]
 801d7d8:	fb11 f303 	smulbb	r3, r1, r3
 801d7dc:	1220      	asrs	r0, r4, #8
 801d7de:	b29b      	uxth	r3, r3
 801d7e0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801d7e4:	1c59      	adds	r1, r3, #1
 801d7e6:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801d7ea:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801d7ee:	10e1      	asrs	r1, r4, #3
 801d7f0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d7f4:	00e4      	lsls	r4, r4, #3
 801d7f6:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801d7fa:	b29f      	uxth	r7, r3
 801d7fc:	43db      	mvns	r3, r3
 801d7fe:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801d802:	b2db      	uxtb	r3, r3
 801d804:	b2e4      	uxtb	r4, r4
 801d806:	9309      	str	r3, [sp, #36]	@ 0x24
 801d808:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801d80a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801d80e:	fb13 f907 	smulbb	r9, r3, r7
 801d812:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d814:	fb00 9003 	mla	r0, r0, r3, r9
 801d818:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801d81a:	fb13 f907 	smulbb	r9, r3, r7
 801d81e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d820:	b280      	uxth	r0, r0
 801d822:	fb01 9103 	mla	r1, r1, r3, r9
 801d826:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801d828:	fb13 f707 	smulbb	r7, r3, r7
 801d82c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d82e:	b289      	uxth	r1, r1
 801d830:	fb04 7403 	mla	r4, r4, r3, r7
 801d834:	1c43      	adds	r3, r0, #1
 801d836:	b2a4      	uxth	r4, r4
 801d838:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801d83c:	f104 0901 	add.w	r9, r4, #1
 801d840:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801d844:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801d848:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801d84c:	ea49 0000 	orr.w	r0, r9, r0
 801d850:	f101 0901 	add.w	r9, r1, #1
 801d854:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801d858:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d85c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801d860:	ea40 0009 	orr.w	r0, r0, r9
 801d864:	f8ac 0000 	strh.w	r0, [ip]
 801d868:	4446      	add	r6, r8
 801d86a:	b2b6      	uxth	r6, r6
 801d86c:	2e07      	cmp	r6, #7
 801d86e:	bf89      	itett	hi
 801d870:	9b28      	ldrhi	r3, [sp, #160]	@ 0xa0
 801d872:	fa42 f208 	asrls.w	r2, r2, r8
 801d876:	2600      	movhi	r6, #0
 801d878:	785a      	ldrbhi	r2, [r3, #1]
 801d87a:	bf8a      	itet	hi
 801d87c:	3301      	addhi	r3, #1
 801d87e:	b2d2      	uxtbls	r2, r2
 801d880:	9328      	strhi	r3, [sp, #160]	@ 0xa0
 801d882:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801d884:	449c      	add	ip, r3
 801d886:	e792      	b.n	801d7ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801d888:	441c      	add	r4, r3
 801d88a:	b224      	sxth	r4, r4
 801d88c:	e6d5      	b.n	801d63a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801d88e:	f1ba 0f01 	cmp.w	sl, #1
 801d892:	f47f af0c 	bne.w	801d6ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801d896:	f1bb 0f01 	cmp.w	fp, #1
 801d89a:	f47f af08 	bne.w	801d6ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801d89e:	f8df b0c4 	ldr.w	fp, [pc, #196]	@ 801d964 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>
 801d8a2:	f8db 0000 	ldr.w	r0, [fp]
 801d8a6:	6803      	ldr	r3, [r0, #0]
 801d8a8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801d8aa:	4798      	blx	r3
 801d8ac:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 801d8b0:	465a      	mov	r2, fp
 801d8b2:	d006      	beq.n	801d8c2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801d8b4:	f1b8 0f04 	cmp.w	r8, #4
 801d8b8:	d140      	bne.n	801d93c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801d8ba:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801d8bc:	3300      	adds	r3, #0
 801d8be:	bf18      	it	ne
 801d8c0:	2301      	movne	r3, #1
 801d8c2:	0580      	lsls	r0, r0, #22
 801d8c4:	d56e      	bpl.n	801d9a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801d8c6:	f1b8 0f08 	cmp.w	r8, #8
 801d8ca:	d16b      	bne.n	801d9a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801d8cc:	2b00      	cmp	r3, #0
 801d8ce:	bf0c      	ite	eq
 801d8d0:	f44f 7100 	moveq.w	r1, #512	@ 0x200
 801d8d4:	f44f 7180 	movne.w	r1, #256	@ 0x100
 801d8d8:	2d00      	cmp	r5, #0
 801d8da:	f47f aee8 	bne.w	801d6ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801d8de:	2e00      	cmp	r6, #0
 801d8e0:	f47f aee5 	bne.w	801d6ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801d8e4:	19e3      	adds	r3, r4, r7
 801d8e6:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801d8e8:	4283      	cmp	r3, r0
 801d8ea:	f73f aee0 	bgt.w	801d6ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801d8ee:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801d8f0:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801d8f2:	444b      	add	r3, r9
 801d8f4:	4283      	cmp	r3, r0
 801d8f6:	f73f aeda 	bgt.w	801d6ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801d8fa:	b2bf      	uxth	r7, r7
 801d8fc:	f1b8 0f08 	cmp.w	r8, #8
 801d900:	6810      	ldr	r0, [r2, #0]
 801d902:	f04f 0500 	mov.w	r5, #0
 801d906:	bf18      	it	ne
 801d908:	3701      	addne	r7, #1
 801d90a:	f8bd 305e 	ldrh.w	r3, [sp, #94]	@ 0x5e
 801d90e:	6804      	ldr	r4, [r0, #0]
 801d910:	bf18      	it	ne
 801d912:	f027 0701 	bicne.w	r7, r7, #1
 801d916:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801d91a:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801d91e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801d920:	bf18      	it	ne
 801d922:	b2bf      	uxthne	r7, r7
 801d924:	9104      	str	r1, [sp, #16]
 801d926:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801d928:	e9cd 7900 	strd	r7, r9, [sp]
 801d92c:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801d930:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801d932:	6d64      	ldr	r4, [r4, #84]	@ 0x54
 801d934:	47a0      	blx	r4
 801d936:	b019      	add	sp, #100	@ 0x64
 801d938:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d93c:	2300      	movs	r3, #0
 801d93e:	e7c0      	b.n	801d8c2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801d940:	2208      	movs	r2, #8
 801d942:	fb92 f3f8 	sdiv	r3, r2, r8
 801d946:	1e5a      	subs	r2, r3, #1
 801d948:	443a      	add	r2, r7
 801d94a:	fb92 f2f3 	sdiv	r2, r2, r3
 801d94e:	fb12 f203 	smulbb	r2, r2, r3
 801d952:	b292      	uxth	r2, r2
 801d954:	e6b0      	b.n	801d6b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801d956:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801d958:	e6ec      	b.n	801d734 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801d95a:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801d95c:	e782      	b.n	801d864 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801d95e:	bf00      	nop
 801d960:	24001a28 	.word	0x24001a28
 801d964:	24001a30 	.word	0x24001a30
 801d968:	24001a2a 	.word	0x24001a2a
 801d96c:	00fff800 	.word	0x00fff800
 801d970:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801d972:	b153      	cbz	r3, 801d98a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801d974:	441e      	add	r6, r3
 801d976:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801d978:	b2b6      	uxth	r6, r6
 801d97a:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801d97e:	f006 0607 	and.w	r6, r6, #7
 801d982:	781a      	ldrb	r2, [r3, #0]
 801d984:	9328      	str	r3, [sp, #160]	@ 0xa0
 801d986:	4132      	asrs	r2, r6
 801d988:	b2d2      	uxtb	r2, r2
 801d98a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d98c:	445b      	add	r3, fp
 801d98e:	930a      	str	r3, [sp, #40]	@ 0x28
 801d990:	e706      	b.n	801d7a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801d992:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d994:	2b00      	cmp	r3, #0
 801d996:	d1ce      	bne.n	801d936 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d998:	4b05      	ldr	r3, [pc, #20]	@ (801d9b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801d99a:	6818      	ldr	r0, [r3, #0]
 801d99c:	6803      	ldr	r3, [r0, #0]
 801d99e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d9a0:	4798      	blx	r3
 801d9a2:	e7c8      	b.n	801d936 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801d9a4:	2b00      	cmp	r3, #0
 801d9a6:	f43f ae82 	beq.w	801d6ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801d9aa:	f44f 7180 	mov.w	r1, #256	@ 0x100
 801d9ae:	e793      	b.n	801d8d8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801d9b0:	24001a30 	.word	0x24001a30

0801d9b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801d9b4:	b538      	push	{r3, r4, r5, lr}
 801d9b6:	4c15      	ldr	r4, [pc, #84]	@ (801da0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801d9b8:	4605      	mov	r5, r0
 801d9ba:	7823      	ldrb	r3, [r4, #0]
 801d9bc:	f3bf 8f5b 	dmb	ish
 801d9c0:	07da      	lsls	r2, r3, #31
 801d9c2:	d40b      	bmi.n	801d9dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801d9c4:	4620      	mov	r0, r4
 801d9c6:	f007 ff04 	bl	80257d2 <__cxa_guard_acquire>
 801d9ca:	b138      	cbz	r0, 801d9dc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801d9cc:	4620      	mov	r0, r4
 801d9ce:	f007 ff0c 	bl	80257ea <__cxa_guard_release>
 801d9d2:	4a0f      	ldr	r2, [pc, #60]	@ (801da10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801d9d4:	490f      	ldr	r1, [pc, #60]	@ (801da14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801d9d6:	4810      	ldr	r0, [pc, #64]	@ (801da18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801d9d8:	f007 fef4 	bl	80257c4 <__aeabi_atexit>
 801d9dc:	4c0f      	ldr	r4, [pc, #60]	@ (801da1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801d9de:	7823      	ldrb	r3, [r4, #0]
 801d9e0:	f3bf 8f5b 	dmb	ish
 801d9e4:	07db      	lsls	r3, r3, #31
 801d9e6:	d40b      	bmi.n	801da00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801d9e8:	4620      	mov	r0, r4
 801d9ea:	f007 fef2 	bl	80257d2 <__cxa_guard_acquire>
 801d9ee:	b138      	cbz	r0, 801da00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801d9f0:	4620      	mov	r0, r4
 801d9f2:	f007 fefa 	bl	80257ea <__cxa_guard_release>
 801d9f6:	4a06      	ldr	r2, [pc, #24]	@ (801da10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801d9f8:	4909      	ldr	r1, [pc, #36]	@ (801da20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801d9fa:	480a      	ldr	r0, [pc, #40]	@ (801da24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801d9fc:	f007 fee2 	bl	80257c4 <__aeabi_atexit>
 801da00:	4b05      	ldr	r3, [pc, #20]	@ (801da18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801da02:	616b      	str	r3, [r5, #20]
 801da04:	4b07      	ldr	r3, [pc, #28]	@ (801da24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801da06:	61ab      	str	r3, [r5, #24]
 801da08:	bd38      	pop	{r3, r4, r5, pc}
 801da0a:	bf00      	nop
 801da0c:	24001b0c 	.word	0x24001b0c
 801da10:	24000000 	.word	0x24000000
 801da14:	08019b63 	.word	0x08019b63
 801da18:	24000068 	.word	0x24000068
 801da1c:	24001b10 	.word	0x24001b10
 801da20:	08019b61 	.word	0x08019b61
 801da24:	2400006c 	.word	0x2400006c

0801da28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801da28:	b538      	push	{r3, r4, r5, lr}
 801da2a:	4c15      	ldr	r4, [pc, #84]	@ (801da80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801da2c:	4605      	mov	r5, r0
 801da2e:	7823      	ldrb	r3, [r4, #0]
 801da30:	f3bf 8f5b 	dmb	ish
 801da34:	07da      	lsls	r2, r3, #31
 801da36:	d40b      	bmi.n	801da50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801da38:	4620      	mov	r0, r4
 801da3a:	f007 feca 	bl	80257d2 <__cxa_guard_acquire>
 801da3e:	b138      	cbz	r0, 801da50 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801da40:	4620      	mov	r0, r4
 801da42:	f007 fed2 	bl	80257ea <__cxa_guard_release>
 801da46:	4a0f      	ldr	r2, [pc, #60]	@ (801da84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801da48:	490f      	ldr	r1, [pc, #60]	@ (801da88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801da4a:	4810      	ldr	r0, [pc, #64]	@ (801da8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801da4c:	f007 feba 	bl	80257c4 <__aeabi_atexit>
 801da50:	4c0f      	ldr	r4, [pc, #60]	@ (801da90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801da52:	7823      	ldrb	r3, [r4, #0]
 801da54:	f3bf 8f5b 	dmb	ish
 801da58:	07db      	lsls	r3, r3, #31
 801da5a:	d40b      	bmi.n	801da74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801da5c:	4620      	mov	r0, r4
 801da5e:	f007 feb8 	bl	80257d2 <__cxa_guard_acquire>
 801da62:	b138      	cbz	r0, 801da74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801da64:	4620      	mov	r0, r4
 801da66:	f007 fec0 	bl	80257ea <__cxa_guard_release>
 801da6a:	4a06      	ldr	r2, [pc, #24]	@ (801da84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801da6c:	4909      	ldr	r1, [pc, #36]	@ (801da94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801da6e:	480a      	ldr	r0, [pc, #40]	@ (801da98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801da70:	f007 fea8 	bl	80257c4 <__aeabi_atexit>
 801da74:	4b05      	ldr	r3, [pc, #20]	@ (801da8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801da76:	60eb      	str	r3, [r5, #12]
 801da78:	4b07      	ldr	r3, [pc, #28]	@ (801da98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801da7a:	612b      	str	r3, [r5, #16]
 801da7c:	bd38      	pop	{r3, r4, r5, pc}
 801da7e:	bf00      	nop
 801da80:	24001ae4 	.word	0x24001ae4
 801da84:	24000000 	.word	0x24000000
 801da88:	08019b67 	.word	0x08019b67
 801da8c:	24000040 	.word	0x24000040
 801da90:	24001ae8 	.word	0x24001ae8
 801da94:	08019b65 	.word	0x08019b65
 801da98:	24000044 	.word	0x24000044

0801da9c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801da9c:	b510      	push	{r4, lr}
 801da9e:	4604      	mov	r4, r0
 801daa0:	f7ff ff88 	bl	801d9b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801daa4:	4620      	mov	r0, r4
 801daa6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801daaa:	f7ff bfbd 	b.w	801da28 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801dab0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801dab0:	b538      	push	{r3, r4, r5, lr}
 801dab2:	4c15      	ldr	r4, [pc, #84]	@ (801db08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801dab4:	4605      	mov	r5, r0
 801dab6:	7823      	ldrb	r3, [r4, #0]
 801dab8:	f3bf 8f5b 	dmb	ish
 801dabc:	07da      	lsls	r2, r3, #31
 801dabe:	d40b      	bmi.n	801dad8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801dac0:	4620      	mov	r0, r4
 801dac2:	f007 fe86 	bl	80257d2 <__cxa_guard_acquire>
 801dac6:	b138      	cbz	r0, 801dad8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801dac8:	4620      	mov	r0, r4
 801daca:	f007 fe8e 	bl	80257ea <__cxa_guard_release>
 801dace:	4a0f      	ldr	r2, [pc, #60]	@ (801db0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801dad0:	490f      	ldr	r1, [pc, #60]	@ (801db10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801dad2:	4810      	ldr	r0, [pc, #64]	@ (801db14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801dad4:	f007 fe76 	bl	80257c4 <__aeabi_atexit>
 801dad8:	4c0f      	ldr	r4, [pc, #60]	@ (801db18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801dada:	7823      	ldrb	r3, [r4, #0]
 801dadc:	f3bf 8f5b 	dmb	ish
 801dae0:	07db      	lsls	r3, r3, #31
 801dae2:	d40b      	bmi.n	801dafc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801dae4:	4620      	mov	r0, r4
 801dae6:	f007 fe74 	bl	80257d2 <__cxa_guard_acquire>
 801daea:	b138      	cbz	r0, 801dafc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801daec:	4620      	mov	r0, r4
 801daee:	f007 fe7c 	bl	80257ea <__cxa_guard_release>
 801daf2:	4a06      	ldr	r2, [pc, #24]	@ (801db0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801daf4:	4909      	ldr	r1, [pc, #36]	@ (801db1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801daf6:	480a      	ldr	r0, [pc, #40]	@ (801db20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801daf8:	f007 fe64 	bl	80257c4 <__aeabi_atexit>
 801dafc:	4b05      	ldr	r3, [pc, #20]	@ (801db14 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801dafe:	626b      	str	r3, [r5, #36]	@ 0x24
 801db00:	4b07      	ldr	r3, [pc, #28]	@ (801db20 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801db02:	62ab      	str	r3, [r5, #40]	@ 0x28
 801db04:	bd38      	pop	{r3, r4, r5, pc}
 801db06:	bf00      	nop
 801db08:	24001b14 	.word	0x24001b14
 801db0c:	24000000 	.word	0x24000000
 801db10:	08019b5b 	.word	0x08019b5b
 801db14:	24000070 	.word	0x24000070
 801db18:	24001b18 	.word	0x24001b18
 801db1c:	08019b59 	.word	0x08019b59
 801db20:	24000074 	.word	0x24000074

0801db24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801db24:	b538      	push	{r3, r4, r5, lr}
 801db26:	4c15      	ldr	r4, [pc, #84]	@ (801db7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801db28:	4605      	mov	r5, r0
 801db2a:	7823      	ldrb	r3, [r4, #0]
 801db2c:	f3bf 8f5b 	dmb	ish
 801db30:	07da      	lsls	r2, r3, #31
 801db32:	d40b      	bmi.n	801db4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801db34:	4620      	mov	r0, r4
 801db36:	f007 fe4c 	bl	80257d2 <__cxa_guard_acquire>
 801db3a:	b138      	cbz	r0, 801db4c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801db3c:	4620      	mov	r0, r4
 801db3e:	f007 fe54 	bl	80257ea <__cxa_guard_release>
 801db42:	4a0f      	ldr	r2, [pc, #60]	@ (801db80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801db44:	490f      	ldr	r1, [pc, #60]	@ (801db84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801db46:	4810      	ldr	r0, [pc, #64]	@ (801db88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801db48:	f007 fe3c 	bl	80257c4 <__aeabi_atexit>
 801db4c:	4c0f      	ldr	r4, [pc, #60]	@ (801db8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801db4e:	7823      	ldrb	r3, [r4, #0]
 801db50:	f3bf 8f5b 	dmb	ish
 801db54:	07db      	lsls	r3, r3, #31
 801db56:	d40b      	bmi.n	801db70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801db58:	4620      	mov	r0, r4
 801db5a:	f007 fe3a 	bl	80257d2 <__cxa_guard_acquire>
 801db5e:	b138      	cbz	r0, 801db70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801db60:	4620      	mov	r0, r4
 801db62:	f007 fe42 	bl	80257ea <__cxa_guard_release>
 801db66:	4a06      	ldr	r2, [pc, #24]	@ (801db80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801db68:	4909      	ldr	r1, [pc, #36]	@ (801db90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801db6a:	480a      	ldr	r0, [pc, #40]	@ (801db94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801db6c:	f007 fe2a 	bl	80257c4 <__aeabi_atexit>
 801db70:	4b05      	ldr	r3, [pc, #20]	@ (801db88 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801db72:	61eb      	str	r3, [r5, #28]
 801db74:	4b07      	ldr	r3, [pc, #28]	@ (801db94 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801db76:	622b      	str	r3, [r5, #32]
 801db78:	bd38      	pop	{r3, r4, r5, pc}
 801db7a:	bf00      	nop
 801db7c:	24001aec 	.word	0x24001aec
 801db80:	24000000 	.word	0x24000000
 801db84:	08019b5f 	.word	0x08019b5f
 801db88:	24000048 	.word	0x24000048
 801db8c:	24001af0 	.word	0x24001af0
 801db90:	08019b5d 	.word	0x08019b5d
 801db94:	2400004c 	.word	0x2400004c

0801db98 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801db98:	b510      	push	{r4, lr}
 801db9a:	4604      	mov	r4, r0
 801db9c:	f7ff ff88 	bl	801dab0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801dba0:	4620      	mov	r0, r4
 801dba2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801dba6:	f7ff bfbd 	b.w	801db24 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801dbac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801dbac:	b538      	push	{r3, r4, r5, lr}
 801dbae:	4c15      	ldr	r4, [pc, #84]	@ (801dc04 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801dbb0:	4605      	mov	r5, r0
 801dbb2:	7823      	ldrb	r3, [r4, #0]
 801dbb4:	f3bf 8f5b 	dmb	ish
 801dbb8:	07da      	lsls	r2, r3, #31
 801dbba:	d40b      	bmi.n	801dbd4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801dbbc:	4620      	mov	r0, r4
 801dbbe:	f007 fe08 	bl	80257d2 <__cxa_guard_acquire>
 801dbc2:	b138      	cbz	r0, 801dbd4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801dbc4:	4620      	mov	r0, r4
 801dbc6:	f007 fe10 	bl	80257ea <__cxa_guard_release>
 801dbca:	4a0f      	ldr	r2, [pc, #60]	@ (801dc08 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801dbcc:	490f      	ldr	r1, [pc, #60]	@ (801dc0c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801dbce:	4810      	ldr	r0, [pc, #64]	@ (801dc10 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801dbd0:	f007 fdf8 	bl	80257c4 <__aeabi_atexit>
 801dbd4:	4c0f      	ldr	r4, [pc, #60]	@ (801dc14 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801dbd6:	7823      	ldrb	r3, [r4, #0]
 801dbd8:	f3bf 8f5b 	dmb	ish
 801dbdc:	07db      	lsls	r3, r3, #31
 801dbde:	d40b      	bmi.n	801dbf8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801dbe0:	4620      	mov	r0, r4
 801dbe2:	f007 fdf6 	bl	80257d2 <__cxa_guard_acquire>
 801dbe6:	b138      	cbz	r0, 801dbf8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801dbe8:	4620      	mov	r0, r4
 801dbea:	f007 fdfe 	bl	80257ea <__cxa_guard_release>
 801dbee:	4a06      	ldr	r2, [pc, #24]	@ (801dc08 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801dbf0:	4909      	ldr	r1, [pc, #36]	@ (801dc18 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801dbf2:	480a      	ldr	r0, [pc, #40]	@ (801dc1c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801dbf4:	f007 fde6 	bl	80257c4 <__aeabi_atexit>
 801dbf8:	4b05      	ldr	r3, [pc, #20]	@ (801dc10 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801dbfa:	636b      	str	r3, [r5, #52]	@ 0x34
 801dbfc:	4b07      	ldr	r3, [pc, #28]	@ (801dc1c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801dbfe:	63ab      	str	r3, [r5, #56]	@ 0x38
 801dc00:	bd38      	pop	{r3, r4, r5, pc}
 801dc02:	bf00      	nop
 801dc04:	24001b24 	.word	0x24001b24
 801dc08:	24000000 	.word	0x24000000
 801dc0c:	08019b53 	.word	0x08019b53
 801dc10:	24000080 	.word	0x24000080
 801dc14:	24001b28 	.word	0x24001b28
 801dc18:	08019b51 	.word	0x08019b51
 801dc1c:	24000084 	.word	0x24000084

0801dc20 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801dc20:	b538      	push	{r3, r4, r5, lr}
 801dc22:	4c15      	ldr	r4, [pc, #84]	@ (801dc78 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801dc24:	4605      	mov	r5, r0
 801dc26:	7823      	ldrb	r3, [r4, #0]
 801dc28:	f3bf 8f5b 	dmb	ish
 801dc2c:	07da      	lsls	r2, r3, #31
 801dc2e:	d40b      	bmi.n	801dc48 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801dc30:	4620      	mov	r0, r4
 801dc32:	f007 fdce 	bl	80257d2 <__cxa_guard_acquire>
 801dc36:	b138      	cbz	r0, 801dc48 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801dc38:	4620      	mov	r0, r4
 801dc3a:	f007 fdd6 	bl	80257ea <__cxa_guard_release>
 801dc3e:	4a0f      	ldr	r2, [pc, #60]	@ (801dc7c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801dc40:	490f      	ldr	r1, [pc, #60]	@ (801dc80 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801dc42:	4810      	ldr	r0, [pc, #64]	@ (801dc84 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801dc44:	f007 fdbe 	bl	80257c4 <__aeabi_atexit>
 801dc48:	4c0f      	ldr	r4, [pc, #60]	@ (801dc88 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801dc4a:	7823      	ldrb	r3, [r4, #0]
 801dc4c:	f3bf 8f5b 	dmb	ish
 801dc50:	07db      	lsls	r3, r3, #31
 801dc52:	d40b      	bmi.n	801dc6c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801dc54:	4620      	mov	r0, r4
 801dc56:	f007 fdbc 	bl	80257d2 <__cxa_guard_acquire>
 801dc5a:	b138      	cbz	r0, 801dc6c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801dc5c:	4620      	mov	r0, r4
 801dc5e:	f007 fdc4 	bl	80257ea <__cxa_guard_release>
 801dc62:	4a06      	ldr	r2, [pc, #24]	@ (801dc7c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801dc64:	4909      	ldr	r1, [pc, #36]	@ (801dc8c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801dc66:	480a      	ldr	r0, [pc, #40]	@ (801dc90 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801dc68:	f007 fdac 	bl	80257c4 <__aeabi_atexit>
 801dc6c:	4b05      	ldr	r3, [pc, #20]	@ (801dc84 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801dc6e:	62eb      	str	r3, [r5, #44]	@ 0x2c
 801dc70:	4b07      	ldr	r3, [pc, #28]	@ (801dc90 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801dc72:	632b      	str	r3, [r5, #48]	@ 0x30
 801dc74:	bd38      	pop	{r3, r4, r5, pc}
 801dc76:	bf00      	nop
 801dc78:	24001af4 	.word	0x24001af4
 801dc7c:	24000000 	.word	0x24000000
 801dc80:	08019b57 	.word	0x08019b57
 801dc84:	24000050 	.word	0x24000050
 801dc88:	24001af8 	.word	0x24001af8
 801dc8c:	08019b55 	.word	0x08019b55
 801dc90:	24000054 	.word	0x24000054

0801dc94 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801dc94:	b510      	push	{r4, lr}
 801dc96:	4604      	mov	r4, r0
 801dc98:	f7ff ff88 	bl	801dbac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801dc9c:	4620      	mov	r0, r4
 801dc9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801dca2:	f7ff bfbd 	b.w	801dc20 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801dca8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801dca8:	b538      	push	{r3, r4, r5, lr}
 801dcaa:	4c15      	ldr	r4, [pc, #84]	@ (801dd00 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801dcac:	4605      	mov	r5, r0
 801dcae:	7823      	ldrb	r3, [r4, #0]
 801dcb0:	f3bf 8f5b 	dmb	ish
 801dcb4:	07da      	lsls	r2, r3, #31
 801dcb6:	d40b      	bmi.n	801dcd0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801dcb8:	4620      	mov	r0, r4
 801dcba:	f007 fd8a 	bl	80257d2 <__cxa_guard_acquire>
 801dcbe:	b138      	cbz	r0, 801dcd0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801dcc0:	4620      	mov	r0, r4
 801dcc2:	f007 fd92 	bl	80257ea <__cxa_guard_release>
 801dcc6:	4a0f      	ldr	r2, [pc, #60]	@ (801dd04 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801dcc8:	490f      	ldr	r1, [pc, #60]	@ (801dd08 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801dcca:	4810      	ldr	r0, [pc, #64]	@ (801dd0c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801dccc:	f007 fd7a 	bl	80257c4 <__aeabi_atexit>
 801dcd0:	4c0f      	ldr	r4, [pc, #60]	@ (801dd10 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801dcd2:	7823      	ldrb	r3, [r4, #0]
 801dcd4:	f3bf 8f5b 	dmb	ish
 801dcd8:	07db      	lsls	r3, r3, #31
 801dcda:	d40b      	bmi.n	801dcf4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801dcdc:	4620      	mov	r0, r4
 801dcde:	f007 fd78 	bl	80257d2 <__cxa_guard_acquire>
 801dce2:	b138      	cbz	r0, 801dcf4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801dce4:	4620      	mov	r0, r4
 801dce6:	f007 fd80 	bl	80257ea <__cxa_guard_release>
 801dcea:	4a06      	ldr	r2, [pc, #24]	@ (801dd04 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801dcec:	4909      	ldr	r1, [pc, #36]	@ (801dd14 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801dcee:	480a      	ldr	r0, [pc, #40]	@ (801dd18 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801dcf0:	f007 fd68 	bl	80257c4 <__aeabi_atexit>
 801dcf4:	4b05      	ldr	r3, [pc, #20]	@ (801dd0c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801dcf6:	656b      	str	r3, [r5, #84]	@ 0x54
 801dcf8:	4b07      	ldr	r3, [pc, #28]	@ (801dd18 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801dcfa:	65ab      	str	r3, [r5, #88]	@ 0x58
 801dcfc:	bd38      	pop	{r3, r4, r5, pc}
 801dcfe:	bf00      	nop
 801dd00:	24001b2c 	.word	0x24001b2c
 801dd04:	24000000 	.word	0x24000000
 801dd08:	08019b43 	.word	0x08019b43
 801dd0c:	24000088 	.word	0x24000088
 801dd10:	24001b30 	.word	0x24001b30
 801dd14:	08019b41 	.word	0x08019b41
 801dd18:	2400008c 	.word	0x2400008c

0801dd1c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801dd1c:	b538      	push	{r3, r4, r5, lr}
 801dd1e:	4c15      	ldr	r4, [pc, #84]	@ (801dd74 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801dd20:	4605      	mov	r5, r0
 801dd22:	7823      	ldrb	r3, [r4, #0]
 801dd24:	f3bf 8f5b 	dmb	ish
 801dd28:	07da      	lsls	r2, r3, #31
 801dd2a:	d40b      	bmi.n	801dd44 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801dd2c:	4620      	mov	r0, r4
 801dd2e:	f007 fd50 	bl	80257d2 <__cxa_guard_acquire>
 801dd32:	b138      	cbz	r0, 801dd44 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801dd34:	4620      	mov	r0, r4
 801dd36:	f007 fd58 	bl	80257ea <__cxa_guard_release>
 801dd3a:	4a0f      	ldr	r2, [pc, #60]	@ (801dd78 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801dd3c:	490f      	ldr	r1, [pc, #60]	@ (801dd7c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801dd3e:	4810      	ldr	r0, [pc, #64]	@ (801dd80 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801dd40:	f007 fd40 	bl	80257c4 <__aeabi_atexit>
 801dd44:	4c0f      	ldr	r4, [pc, #60]	@ (801dd84 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801dd46:	7823      	ldrb	r3, [r4, #0]
 801dd48:	f3bf 8f5b 	dmb	ish
 801dd4c:	07db      	lsls	r3, r3, #31
 801dd4e:	d40b      	bmi.n	801dd68 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801dd50:	4620      	mov	r0, r4
 801dd52:	f007 fd3e 	bl	80257d2 <__cxa_guard_acquire>
 801dd56:	b138      	cbz	r0, 801dd68 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801dd58:	4620      	mov	r0, r4
 801dd5a:	f007 fd46 	bl	80257ea <__cxa_guard_release>
 801dd5e:	4a06      	ldr	r2, [pc, #24]	@ (801dd78 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801dd60:	4909      	ldr	r1, [pc, #36]	@ (801dd88 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801dd62:	480a      	ldr	r0, [pc, #40]	@ (801dd8c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801dd64:	f007 fd2e 	bl	80257c4 <__aeabi_atexit>
 801dd68:	4b05      	ldr	r3, [pc, #20]	@ (801dd80 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801dd6a:	64eb      	str	r3, [r5, #76]	@ 0x4c
 801dd6c:	4b07      	ldr	r3, [pc, #28]	@ (801dd8c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801dd6e:	652b      	str	r3, [r5, #80]	@ 0x50
 801dd70:	bd38      	pop	{r3, r4, r5, pc}
 801dd72:	bf00      	nop
 801dd74:	24001b34 	.word	0x24001b34
 801dd78:	24000000 	.word	0x24000000
 801dd7c:	08019b47 	.word	0x08019b47
 801dd80:	24000090 	.word	0x24000090
 801dd84:	24001b38 	.word	0x24001b38
 801dd88:	08019b45 	.word	0x08019b45
 801dd8c:	24000094 	.word	0x24000094

0801dd90 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801dd90:	b538      	push	{r3, r4, r5, lr}
 801dd92:	4c15      	ldr	r4, [pc, #84]	@ (801dde8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801dd94:	4605      	mov	r5, r0
 801dd96:	7823      	ldrb	r3, [r4, #0]
 801dd98:	f3bf 8f5b 	dmb	ish
 801dd9c:	07da      	lsls	r2, r3, #31
 801dd9e:	d40b      	bmi.n	801ddb8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801dda0:	4620      	mov	r0, r4
 801dda2:	f007 fd16 	bl	80257d2 <__cxa_guard_acquire>
 801dda6:	b138      	cbz	r0, 801ddb8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801dda8:	4620      	mov	r0, r4
 801ddaa:	f007 fd1e 	bl	80257ea <__cxa_guard_release>
 801ddae:	4a0f      	ldr	r2, [pc, #60]	@ (801ddec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801ddb0:	490f      	ldr	r1, [pc, #60]	@ (801ddf0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801ddb2:	4810      	ldr	r0, [pc, #64]	@ (801ddf4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801ddb4:	f007 fd06 	bl	80257c4 <__aeabi_atexit>
 801ddb8:	4c0f      	ldr	r4, [pc, #60]	@ (801ddf8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801ddba:	7823      	ldrb	r3, [r4, #0]
 801ddbc:	f3bf 8f5b 	dmb	ish
 801ddc0:	07db      	lsls	r3, r3, #31
 801ddc2:	d40b      	bmi.n	801dddc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801ddc4:	4620      	mov	r0, r4
 801ddc6:	f007 fd04 	bl	80257d2 <__cxa_guard_acquire>
 801ddca:	b138      	cbz	r0, 801dddc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801ddcc:	4620      	mov	r0, r4
 801ddce:	f007 fd0c 	bl	80257ea <__cxa_guard_release>
 801ddd2:	4a06      	ldr	r2, [pc, #24]	@ (801ddec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801ddd4:	4909      	ldr	r1, [pc, #36]	@ (801ddfc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801ddd6:	480a      	ldr	r0, [pc, #40]	@ (801de00 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801ddd8:	f007 fcf4 	bl	80257c4 <__aeabi_atexit>
 801dddc:	4b05      	ldr	r3, [pc, #20]	@ (801ddf4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801ddde:	646b      	str	r3, [r5, #68]	@ 0x44
 801dde0:	4b07      	ldr	r3, [pc, #28]	@ (801de00 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801dde2:	64ab      	str	r3, [r5, #72]	@ 0x48
 801dde4:	bd38      	pop	{r3, r4, r5, pc}
 801dde6:	bf00      	nop
 801dde8:	24001afc 	.word	0x24001afc
 801ddec:	24000000 	.word	0x24000000
 801ddf0:	08019b4b 	.word	0x08019b4b
 801ddf4:	24000058 	.word	0x24000058
 801ddf8:	24001b00 	.word	0x24001b00
 801ddfc:	08019b49 	.word	0x08019b49
 801de00:	2400005c 	.word	0x2400005c

0801de04 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801de04:	b538      	push	{r3, r4, r5, lr}
 801de06:	4c15      	ldr	r4, [pc, #84]	@ (801de5c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801de08:	4605      	mov	r5, r0
 801de0a:	7823      	ldrb	r3, [r4, #0]
 801de0c:	f3bf 8f5b 	dmb	ish
 801de10:	07da      	lsls	r2, r3, #31
 801de12:	d40b      	bmi.n	801de2c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801de14:	4620      	mov	r0, r4
 801de16:	f007 fcdc 	bl	80257d2 <__cxa_guard_acquire>
 801de1a:	b138      	cbz	r0, 801de2c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801de1c:	4620      	mov	r0, r4
 801de1e:	f007 fce4 	bl	80257ea <__cxa_guard_release>
 801de22:	4a0f      	ldr	r2, [pc, #60]	@ (801de60 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801de24:	490f      	ldr	r1, [pc, #60]	@ (801de64 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801de26:	4810      	ldr	r0, [pc, #64]	@ (801de68 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801de28:	f007 fccc 	bl	80257c4 <__aeabi_atexit>
 801de2c:	4c0f      	ldr	r4, [pc, #60]	@ (801de6c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801de2e:	7823      	ldrb	r3, [r4, #0]
 801de30:	f3bf 8f5b 	dmb	ish
 801de34:	07db      	lsls	r3, r3, #31
 801de36:	d40b      	bmi.n	801de50 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801de38:	4620      	mov	r0, r4
 801de3a:	f007 fcca 	bl	80257d2 <__cxa_guard_acquire>
 801de3e:	b138      	cbz	r0, 801de50 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801de40:	4620      	mov	r0, r4
 801de42:	f007 fcd2 	bl	80257ea <__cxa_guard_release>
 801de46:	4a06      	ldr	r2, [pc, #24]	@ (801de60 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801de48:	4909      	ldr	r1, [pc, #36]	@ (801de70 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801de4a:	480a      	ldr	r0, [pc, #40]	@ (801de74 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801de4c:	f007 fcba 	bl	80257c4 <__aeabi_atexit>
 801de50:	4b05      	ldr	r3, [pc, #20]	@ (801de68 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801de52:	63eb      	str	r3, [r5, #60]	@ 0x3c
 801de54:	4b07      	ldr	r3, [pc, #28]	@ (801de74 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801de56:	642b      	str	r3, [r5, #64]	@ 0x40
 801de58:	bd38      	pop	{r3, r4, r5, pc}
 801de5a:	bf00      	nop
 801de5c:	24001b1c 	.word	0x24001b1c
 801de60:	24000000 	.word	0x24000000
 801de64:	08019b4f 	.word	0x08019b4f
 801de68:	24000078 	.word	0x24000078
 801de6c:	24001b20 	.word	0x24001b20
 801de70:	08019b4d 	.word	0x08019b4d
 801de74:	2400007c 	.word	0x2400007c

0801de78 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801de78:	b510      	push	{r4, lr}
 801de7a:	4604      	mov	r4, r0
 801de7c:	f7ff ff14 	bl	801dca8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801de80:	4620      	mov	r0, r4
 801de82:	f7ff ff85 	bl	801dd90 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801de86:	4620      	mov	r0, r4
 801de88:	f7ff ff48 	bl	801dd1c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801de8c:	4620      	mov	r0, r4
 801de8e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801de92:	f7ff bfb7 	b.w	801de04 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801de98 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801de98:	b538      	push	{r3, r4, r5, lr}
 801de9a:	4c15      	ldr	r4, [pc, #84]	@ (801def0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801de9c:	4605      	mov	r5, r0
 801de9e:	7823      	ldrb	r3, [r4, #0]
 801dea0:	f3bf 8f5b 	dmb	ish
 801dea4:	07da      	lsls	r2, r3, #31
 801dea6:	d40b      	bmi.n	801dec0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801dea8:	4620      	mov	r0, r4
 801deaa:	f007 fc92 	bl	80257d2 <__cxa_guard_acquire>
 801deae:	b138      	cbz	r0, 801dec0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801deb0:	4620      	mov	r0, r4
 801deb2:	f007 fc9a 	bl	80257ea <__cxa_guard_release>
 801deb6:	4a0f      	ldr	r2, [pc, #60]	@ (801def4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801deb8:	490f      	ldr	r1, [pc, #60]	@ (801def8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801deba:	4810      	ldr	r0, [pc, #64]	@ (801defc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801debc:	f007 fc82 	bl	80257c4 <__aeabi_atexit>
 801dec0:	4c0f      	ldr	r4, [pc, #60]	@ (801df00 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801dec2:	7823      	ldrb	r3, [r4, #0]
 801dec4:	f3bf 8f5b 	dmb	ish
 801dec8:	07db      	lsls	r3, r3, #31
 801deca:	d40b      	bmi.n	801dee4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801decc:	4620      	mov	r0, r4
 801dece:	f007 fc80 	bl	80257d2 <__cxa_guard_acquire>
 801ded2:	b138      	cbz	r0, 801dee4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801ded4:	4620      	mov	r0, r4
 801ded6:	f007 fc88 	bl	80257ea <__cxa_guard_release>
 801deda:	4a06      	ldr	r2, [pc, #24]	@ (801def4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801dedc:	4909      	ldr	r1, [pc, #36]	@ (801df04 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801dede:	480a      	ldr	r0, [pc, #40]	@ (801df08 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801dee0:	f007 fc70 	bl	80257c4 <__aeabi_atexit>
 801dee4:	4b05      	ldr	r3, [pc, #20]	@ (801defc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801dee6:	666b      	str	r3, [r5, #100]	@ 0x64
 801dee8:	4b07      	ldr	r3, [pc, #28]	@ (801df08 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801deea:	66ab      	str	r3, [r5, #104]	@ 0x68
 801deec:	bd38      	pop	{r3, r4, r5, pc}
 801deee:	bf00      	nop
 801def0:	24001b04 	.word	0x24001b04
 801def4:	24000000 	.word	0x24000000
 801def8:	08019b3b 	.word	0x08019b3b
 801defc:	24000060 	.word	0x24000060
 801df00:	24001b08 	.word	0x24001b08
 801df04:	08019b39 	.word	0x08019b39
 801df08:	24000064 	.word	0x24000064

0801df0c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801df0c:	b538      	push	{r3, r4, r5, lr}
 801df0e:	4c15      	ldr	r4, [pc, #84]	@ (801df64 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801df10:	4605      	mov	r5, r0
 801df12:	7823      	ldrb	r3, [r4, #0]
 801df14:	f3bf 8f5b 	dmb	ish
 801df18:	07da      	lsls	r2, r3, #31
 801df1a:	d40b      	bmi.n	801df34 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801df1c:	4620      	mov	r0, r4
 801df1e:	f007 fc58 	bl	80257d2 <__cxa_guard_acquire>
 801df22:	b138      	cbz	r0, 801df34 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801df24:	4620      	mov	r0, r4
 801df26:	f007 fc60 	bl	80257ea <__cxa_guard_release>
 801df2a:	4a0f      	ldr	r2, [pc, #60]	@ (801df68 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801df2c:	490f      	ldr	r1, [pc, #60]	@ (801df6c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801df2e:	4810      	ldr	r0, [pc, #64]	@ (801df70 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801df30:	f007 fc48 	bl	80257c4 <__aeabi_atexit>
 801df34:	4c0f      	ldr	r4, [pc, #60]	@ (801df74 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801df36:	7823      	ldrb	r3, [r4, #0]
 801df38:	f3bf 8f5b 	dmb	ish
 801df3c:	07db      	lsls	r3, r3, #31
 801df3e:	d40b      	bmi.n	801df58 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801df40:	4620      	mov	r0, r4
 801df42:	f007 fc46 	bl	80257d2 <__cxa_guard_acquire>
 801df46:	b138      	cbz	r0, 801df58 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801df48:	4620      	mov	r0, r4
 801df4a:	f007 fc4e 	bl	80257ea <__cxa_guard_release>
 801df4e:	4a06      	ldr	r2, [pc, #24]	@ (801df68 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801df50:	4909      	ldr	r1, [pc, #36]	@ (801df78 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801df52:	480a      	ldr	r0, [pc, #40]	@ (801df7c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801df54:	f007 fc36 	bl	80257c4 <__aeabi_atexit>
 801df58:	4b05      	ldr	r3, [pc, #20]	@ (801df70 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801df5a:	65eb      	str	r3, [r5, #92]	@ 0x5c
 801df5c:	4b07      	ldr	r3, [pc, #28]	@ (801df7c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801df5e:	662b      	str	r3, [r5, #96]	@ 0x60
 801df60:	bd38      	pop	{r3, r4, r5, pc}
 801df62:	bf00      	nop
 801df64:	24001adc 	.word	0x24001adc
 801df68:	24000000 	.word	0x24000000
 801df6c:	08019b3f 	.word	0x08019b3f
 801df70:	24000038 	.word	0x24000038
 801df74:	24001ae0 	.word	0x24001ae0
 801df78:	08019b3d 	.word	0x08019b3d
 801df7c:	2400003c 	.word	0x2400003c

0801df80 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801df80:	b510      	push	{r4, lr}
 801df82:	4604      	mov	r4, r0
 801df84:	f7ff ff88 	bl	801de98 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801df88:	4620      	mov	r0, r4
 801df8a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801df8e:	f7ff bfbd 	b.w	801df0c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801df94 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801df94:	b538      	push	{r3, r4, r5, lr}
 801df96:	4c15      	ldr	r4, [pc, #84]	@ (801dfec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801df98:	4605      	mov	r5, r0
 801df9a:	7823      	ldrb	r3, [r4, #0]
 801df9c:	f3bf 8f5b 	dmb	ish
 801dfa0:	07da      	lsls	r2, r3, #31
 801dfa2:	d40b      	bmi.n	801dfbc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801dfa4:	4620      	mov	r0, r4
 801dfa6:	f007 fc14 	bl	80257d2 <__cxa_guard_acquire>
 801dfaa:	b138      	cbz	r0, 801dfbc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801dfac:	4620      	mov	r0, r4
 801dfae:	f007 fc1c 	bl	80257ea <__cxa_guard_release>
 801dfb2:	4a0f      	ldr	r2, [pc, #60]	@ (801dff0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801dfb4:	490f      	ldr	r1, [pc, #60]	@ (801dff4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801dfb6:	4810      	ldr	r0, [pc, #64]	@ (801dff8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801dfb8:	f007 fc04 	bl	80257c4 <__aeabi_atexit>
 801dfbc:	4c0f      	ldr	r4, [pc, #60]	@ (801dffc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801dfbe:	7823      	ldrb	r3, [r4, #0]
 801dfc0:	f3bf 8f5b 	dmb	ish
 801dfc4:	07db      	lsls	r3, r3, #31
 801dfc6:	d40b      	bmi.n	801dfe0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801dfc8:	4620      	mov	r0, r4
 801dfca:	f007 fc02 	bl	80257d2 <__cxa_guard_acquire>
 801dfce:	b138      	cbz	r0, 801dfe0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801dfd0:	4620      	mov	r0, r4
 801dfd2:	f007 fc0a 	bl	80257ea <__cxa_guard_release>
 801dfd6:	4a06      	ldr	r2, [pc, #24]	@ (801dff0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801dfd8:	4909      	ldr	r1, [pc, #36]	@ (801e000 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801dfda:	480a      	ldr	r0, [pc, #40]	@ (801e004 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801dfdc:	f007 fbf2 	bl	80257c4 <__aeabi_atexit>
 801dfe0:	4b05      	ldr	r3, [pc, #20]	@ (801dff8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801dfe2:	676b      	str	r3, [r5, #116]	@ 0x74
 801dfe4:	4b07      	ldr	r3, [pc, #28]	@ (801e004 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801dfe6:	67ab      	str	r3, [r5, #120]	@ 0x78
 801dfe8:	bd38      	pop	{r3, r4, r5, pc}
 801dfea:	bf00      	nop
 801dfec:	24001ad4 	.word	0x24001ad4
 801dff0:	24000000 	.word	0x24000000
 801dff4:	08019b33 	.word	0x08019b33
 801dff8:	24000030 	.word	0x24000030
 801dffc:	24001ad8 	.word	0x24001ad8
 801e000:	08019b31 	.word	0x08019b31
 801e004:	24000034 	.word	0x24000034

0801e008 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801e008:	b538      	push	{r3, r4, r5, lr}
 801e00a:	4c15      	ldr	r4, [pc, #84]	@ (801e060 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801e00c:	4605      	mov	r5, r0
 801e00e:	7823      	ldrb	r3, [r4, #0]
 801e010:	f3bf 8f5b 	dmb	ish
 801e014:	07da      	lsls	r2, r3, #31
 801e016:	d40b      	bmi.n	801e030 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e018:	4620      	mov	r0, r4
 801e01a:	f007 fbda 	bl	80257d2 <__cxa_guard_acquire>
 801e01e:	b138      	cbz	r0, 801e030 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e020:	4620      	mov	r0, r4
 801e022:	f007 fbe2 	bl	80257ea <__cxa_guard_release>
 801e026:	4a0f      	ldr	r2, [pc, #60]	@ (801e064 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e028:	490f      	ldr	r1, [pc, #60]	@ (801e068 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801e02a:	4810      	ldr	r0, [pc, #64]	@ (801e06c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e02c:	f007 fbca 	bl	80257c4 <__aeabi_atexit>
 801e030:	4c0f      	ldr	r4, [pc, #60]	@ (801e070 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801e032:	7823      	ldrb	r3, [r4, #0]
 801e034:	f3bf 8f5b 	dmb	ish
 801e038:	07db      	lsls	r3, r3, #31
 801e03a:	d40b      	bmi.n	801e054 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e03c:	4620      	mov	r0, r4
 801e03e:	f007 fbc8 	bl	80257d2 <__cxa_guard_acquire>
 801e042:	b138      	cbz	r0, 801e054 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e044:	4620      	mov	r0, r4
 801e046:	f007 fbd0 	bl	80257ea <__cxa_guard_release>
 801e04a:	4a06      	ldr	r2, [pc, #24]	@ (801e064 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e04c:	4909      	ldr	r1, [pc, #36]	@ (801e074 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801e04e:	480a      	ldr	r0, [pc, #40]	@ (801e078 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e050:	f007 fbb8 	bl	80257c4 <__aeabi_atexit>
 801e054:	4b05      	ldr	r3, [pc, #20]	@ (801e06c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e056:	66eb      	str	r3, [r5, #108]	@ 0x6c
 801e058:	4b07      	ldr	r3, [pc, #28]	@ (801e078 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e05a:	672b      	str	r3, [r5, #112]	@ 0x70
 801e05c:	bd38      	pop	{r3, r4, r5, pc}
 801e05e:	bf00      	nop
 801e060:	24001acc 	.word	0x24001acc
 801e064:	24000000 	.word	0x24000000
 801e068:	08019b37 	.word	0x08019b37
 801e06c:	24000028 	.word	0x24000028
 801e070:	24001ad0 	.word	0x24001ad0
 801e074:	08019b35 	.word	0x08019b35
 801e078:	2400002c 	.word	0x2400002c

0801e07c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801e07c:	b510      	push	{r4, lr}
 801e07e:	4604      	mov	r4, r0
 801e080:	f7ff ff88 	bl	801df94 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801e084:	4620      	mov	r0, r4
 801e086:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e08a:	f7ff bfbd 	b.w	801e008 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801e08e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801e08e:	b510      	push	{r4, lr}
 801e090:	4604      	mov	r4, r0
 801e092:	f7ff fff3 	bl	801e07c <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801e096:	4620      	mov	r0, r4
 801e098:	f7ff ff72 	bl	801df80 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801e09c:	4620      	mov	r0, r4
 801e09e:	f7ff fdf9 	bl	801dc94 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801e0a2:	4620      	mov	r0, r4
 801e0a4:	f7ff fcfa 	bl	801da9c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801e0a8:	4620      	mov	r0, r4
 801e0aa:	f7ff fd75 	bl	801db98 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801e0ae:	4620      	mov	r0, r4
 801e0b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e0b4:	f7ff bee0 	b.w	801de78 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801e0b8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801e0b8:	b538      	push	{r3, r4, r5, lr}
 801e0ba:	4c0b      	ldr	r4, [pc, #44]	@ (801e0e8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801e0bc:	4605      	mov	r5, r0
 801e0be:	7823      	ldrb	r3, [r4, #0]
 801e0c0:	f3bf 8f5b 	dmb	ish
 801e0c4:	07db      	lsls	r3, r3, #31
 801e0c6:	d40b      	bmi.n	801e0e0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801e0c8:	4620      	mov	r0, r4
 801e0ca:	f007 fb82 	bl	80257d2 <__cxa_guard_acquire>
 801e0ce:	b138      	cbz	r0, 801e0e0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801e0d0:	4620      	mov	r0, r4
 801e0d2:	f007 fb8a 	bl	80257ea <__cxa_guard_release>
 801e0d6:	4a05      	ldr	r2, [pc, #20]	@ (801e0ec <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801e0d8:	4905      	ldr	r1, [pc, #20]	@ (801e0f0 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801e0da:	4806      	ldr	r0, [pc, #24]	@ (801e0f4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801e0dc:	f007 fb72 	bl	80257c4 <__aeabi_atexit>
 801e0e0:	4b04      	ldr	r3, [pc, #16]	@ (801e0f4 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801e0e2:	67eb      	str	r3, [r5, #124]	@ 0x7c
 801e0e4:	bd38      	pop	{r3, r4, r5, pc}
 801e0e6:	bf00      	nop
 801e0e8:	24001ac0 	.word	0x24001ac0
 801e0ec:	24000000 	.word	0x24000000
 801e0f0:	08019b2f 	.word	0x08019b2f
 801e0f4:	24000020 	.word	0x24000020

0801e0f8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801e0f8:	b538      	push	{r3, r4, r5, lr}
 801e0fa:	4c0b      	ldr	r4, [pc, #44]	@ (801e128 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801e0fc:	4605      	mov	r5, r0
 801e0fe:	7823      	ldrb	r3, [r4, #0]
 801e100:	f3bf 8f5b 	dmb	ish
 801e104:	07db      	lsls	r3, r3, #31
 801e106:	d40b      	bmi.n	801e120 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801e108:	4620      	mov	r0, r4
 801e10a:	f007 fb62 	bl	80257d2 <__cxa_guard_acquire>
 801e10e:	b138      	cbz	r0, 801e120 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801e110:	4620      	mov	r0, r4
 801e112:	f007 fb6a 	bl	80257ea <__cxa_guard_release>
 801e116:	4a05      	ldr	r2, [pc, #20]	@ (801e12c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801e118:	4905      	ldr	r1, [pc, #20]	@ (801e130 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801e11a:	4806      	ldr	r0, [pc, #24]	@ (801e134 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801e11c:	f007 fb52 	bl	80257c4 <__aeabi_atexit>
 801e120:	4b04      	ldr	r3, [pc, #16]	@ (801e134 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801e122:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 801e126:	bd38      	pop	{r3, r4, r5, pc}
 801e128:	24001ac4 	.word	0x24001ac4
 801e12c:	24000000 	.word	0x24000000
 801e130:	08019b2d 	.word	0x08019b2d
 801e134:	24000024 	.word	0x24000024

0801e138 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801e138:	b570      	push	{r4, r5, r6, lr}
 801e13a:	4d0d      	ldr	r5, [pc, #52]	@ (801e170 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801e13c:	4606      	mov	r6, r0
 801e13e:	4c0d      	ldr	r4, [pc, #52]	@ (801e174 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801e140:	782b      	ldrb	r3, [r5, #0]
 801e142:	f3bf 8f5b 	dmb	ish
 801e146:	f013 0f01 	tst.w	r3, #1
 801e14a:	d10d      	bne.n	801e168 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801e14c:	4628      	mov	r0, r5
 801e14e:	f007 fb40 	bl	80257d2 <__cxa_guard_acquire>
 801e152:	b148      	cbz	r0, 801e168 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801e154:	4b08      	ldr	r3, [pc, #32]	@ (801e178 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801e156:	4628      	mov	r0, r5
 801e158:	6023      	str	r3, [r4, #0]
 801e15a:	f007 fb46 	bl	80257ea <__cxa_guard_release>
 801e15e:	4a07      	ldr	r2, [pc, #28]	@ (801e17c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801e160:	4620      	mov	r0, r4
 801e162:	4907      	ldr	r1, [pc, #28]	@ (801e180 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801e164:	f007 fb2e 	bl	80257c4 <__aeabi_atexit>
 801e168:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 801e16c:	bd70      	pop	{r4, r5, r6, pc}
 801e16e:	bf00      	nop
 801e170:	24001ac8 	.word	0x24001ac8
 801e174:	24001c40 	.word	0x24001c40
 801e178:	08028908 	.word	0x08028908
 801e17c:	24000000 	.word	0x24000000
 801e180:	08019b2b 	.word	0x08019b2b

0801e184 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801e184:	b510      	push	{r4, lr}
 801e186:	4604      	mov	r4, r0
 801e188:	f7ff ff96 	bl	801e0b8 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801e18c:	4620      	mov	r0, r4
 801e18e:	f7ff ffb3 	bl	801e0f8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801e192:	4620      	mov	r0, r4
 801e194:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e198:	f7ff bfce 	b.w	801e138 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801e19c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
 801e19c:	b570      	push	{r4, r5, r6, lr}
 801e19e:	4d0d      	ldr	r5, [pc, #52]	@ (801e1d4 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
 801e1a0:	4606      	mov	r6, r0
 801e1a2:	4c0d      	ldr	r4, [pc, #52]	@ (801e1d8 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
 801e1a4:	782b      	ldrb	r3, [r5, #0]
 801e1a6:	f3bf 8f5b 	dmb	ish
 801e1aa:	f013 0f01 	tst.w	r3, #1
 801e1ae:	d10d      	bne.n	801e1cc <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 801e1b0:	4628      	mov	r0, r5
 801e1b2:	f007 fb0e 	bl	80257d2 <__cxa_guard_acquire>
 801e1b6:	b148      	cbz	r0, 801e1cc <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 801e1b8:	4b08      	ldr	r3, [pc, #32]	@ (801e1dc <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
 801e1ba:	4628      	mov	r0, r5
 801e1bc:	6023      	str	r3, [r4, #0]
 801e1be:	f007 fb14 	bl	80257ea <__cxa_guard_release>
 801e1c2:	4a07      	ldr	r2, [pc, #28]	@ (801e1e0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
 801e1c4:	4620      	mov	r0, r4
 801e1c6:	4907      	ldr	r1, [pc, #28]	@ (801e1e4 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
 801e1c8:	f007 fafc 	bl	80257c4 <__aeabi_atexit>
 801e1cc:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
 801e1d0:	bd70      	pop	{r4, r5, r6, pc}
 801e1d2:	bf00      	nop
 801e1d4:	24001abc 	.word	0x24001abc
 801e1d8:	24001b3c 	.word	0x24001b3c
 801e1dc:	08028924 	.word	0x08028924
 801e1e0:	24000000 	.word	0x24000000
 801e1e4:	08019b29 	.word	0x08019b29

0801e1e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801e1e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e1ec:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 801e1f0:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 801e1f4:	2d00      	cmp	r5, #0
 801e1f6:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 801e1fa:	fb05 4c0e 	mla	ip, r5, lr, r4
 801e1fe:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 801e202:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 801e206:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 801e20a:	eb02 0a0c 	add.w	sl, r2, ip
 801e20e:	8808      	ldrh	r0, [r1, #0]
 801e210:	f2c0 80b0 	blt.w	801e374 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801e214:	45ab      	cmp	fp, r5
 801e216:	f340 80ad 	ble.w	801e374 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801e21a:	2c00      	cmp	r4, #0
 801e21c:	f2c0 80a8 	blt.w	801e370 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801e220:	45a6      	cmp	lr, r4
 801e222:	f340 80a5 	ble.w	801e370 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801e226:	f812 200c 	ldrb.w	r2, [r2, ip]
 801e22a:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801e22e:	1c62      	adds	r2, r4, #1
 801e230:	f100 80a3 	bmi.w	801e37a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e234:	4596      	cmp	lr, r2
 801e236:	f340 80a0 	ble.w	801e37a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e23a:	f1b9 0f00 	cmp.w	r9, #0
 801e23e:	f000 809c 	beq.w	801e37a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e242:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801e246:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801e24a:	3501      	adds	r5, #1
 801e24c:	f100 8099 	bmi.w	801e382 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e250:	45ab      	cmp	fp, r5
 801e252:	f340 8096 	ble.w	801e382 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e256:	2f00      	cmp	r7, #0
 801e258:	f000 8093 	beq.w	801e382 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e25c:	2c00      	cmp	r4, #0
 801e25e:	f2c0 808e 	blt.w	801e37e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801e262:	45a6      	cmp	lr, r4
 801e264:	f340 808b 	ble.w	801e37e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801e268:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801e26c:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801e270:	3401      	adds	r4, #1
 801e272:	f100 8089 	bmi.w	801e388 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e276:	45a6      	cmp	lr, r4
 801e278:	f340 8086 	ble.w	801e388 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e27c:	f1b9 0f00 	cmp.w	r9, #0
 801e280:	f000 8082 	beq.w	801e388 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e284:	44d6      	add	lr, sl
 801e286:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801e28a:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801e28e:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801e292:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801e296:	fb19 fe07 	smulbb	lr, r9, r7
 801e29a:	f1c7 0210 	rsb	r2, r7, #16
 801e29e:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801e2a2:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801e2a6:	eba2 0209 	sub.w	r2, r2, r9
 801e2aa:	ea44 0808 	orr.w	r8, r4, r8
 801e2ae:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801e2b2:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801e2b6:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801e2ba:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801e2be:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801e2c2:	ea44 0c0c 	orr.w	ip, r4, ip
 801e2c6:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801e2ca:	fb04 f40c 	mul.w	r4, r4, ip
 801e2ce:	fb02 4808 	mla	r8, r2, r8, r4
 801e2d2:	041a      	lsls	r2, r3, #16
 801e2d4:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801e2d8:	b2b4      	uxth	r4, r6
 801e2da:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e2de:	43f6      	mvns	r6, r6
 801e2e0:	4313      	orrs	r3, r2
 801e2e2:	042a      	lsls	r2, r5, #16
 801e2e4:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801e2e8:	b2f6      	uxtb	r6, r6
 801e2ea:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e2ee:	fb0e 8303 	mla	r3, lr, r3, r8
 801e2f2:	432a      	orrs	r2, r5
 801e2f4:	fb07 3202 	mla	r2, r7, r2, r3
 801e2f8:	10c7      	asrs	r7, r0, #3
 801e2fa:	0d53      	lsrs	r3, r2, #21
 801e2fc:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801e300:	0952      	lsrs	r2, r2, #5
 801e302:	fb17 f706 	smulbb	r7, r7, r6
 801e306:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e30a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e30e:	431a      	orrs	r2, r3
 801e310:	b293      	uxth	r3, r2
 801e312:	1202      	asrs	r2, r0, #8
 801e314:	121d      	asrs	r5, r3, #8
 801e316:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801e31a:	00c0      	lsls	r0, r0, #3
 801e31c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801e320:	fb12 f206 	smulbb	r2, r2, r6
 801e324:	b2c0      	uxtb	r0, r0
 801e326:	fb05 2504 	mla	r5, r5, r4, r2
 801e32a:	10da      	asrs	r2, r3, #3
 801e32c:	fb10 f006 	smulbb	r0, r0, r6
 801e330:	00db      	lsls	r3, r3, #3
 801e332:	b2ad      	uxth	r5, r5
 801e334:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801e338:	b2db      	uxtb	r3, r3
 801e33a:	fb02 7204 	mla	r2, r2, r4, r7
 801e33e:	fb03 0004 	mla	r0, r3, r4, r0
 801e342:	1c6b      	adds	r3, r5, #1
 801e344:	b292      	uxth	r2, r2
 801e346:	b280      	uxth	r0, r0
 801e348:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e34c:	1c43      	adds	r3, r0, #1
 801e34e:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801e352:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801e356:	1c50      	adds	r0, r2, #1
 801e358:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801e35c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e360:	0952      	lsrs	r2, r2, #5
 801e362:	432b      	orrs	r3, r5
 801e364:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e368:	4313      	orrs	r3, r2
 801e36a:	800b      	strh	r3, [r1, #0]
 801e36c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e370:	4680      	mov	r8, r0
 801e372:	e75c      	b.n	801e22e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801e374:	4684      	mov	ip, r0
 801e376:	4680      	mov	r8, r0
 801e378:	e767      	b.n	801e24a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801e37a:	4684      	mov	ip, r0
 801e37c:	e765      	b.n	801e24a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801e37e:	4605      	mov	r5, r0
 801e380:	e776      	b.n	801e270 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801e382:	4603      	mov	r3, r0
 801e384:	4605      	mov	r5, r0
 801e386:	e782      	b.n	801e28e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801e388:	4603      	mov	r3, r0
 801e38a:	e780      	b.n	801e28e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801e38c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e38c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e390:	b099      	sub	sp, #100	@ 0x64
 801e392:	9215      	str	r2, [sp, #84]	@ 0x54
 801e394:	9309      	str	r3, [sp, #36]	@ 0x24
 801e396:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 801e398:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 801e39c:	9016      	str	r0, [sp, #88]	@ 0x58
 801e39e:	930d      	str	r3, [sp, #52]	@ 0x34
 801e3a0:	6850      	ldr	r0, [r2, #4]
 801e3a2:	910c      	str	r1, [sp, #48]	@ 0x30
 801e3a4:	6812      	ldr	r2, [r2, #0]
 801e3a6:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 801e3aa:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 801e3ae:	fb00 1303 	mla	r3, r0, r3, r1
 801e3b2:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801e3b6:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e3b8:	681b      	ldr	r3, [r3, #0]
 801e3ba:	930b      	str	r3, [sp, #44]	@ 0x2c
 801e3bc:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e3be:	685e      	ldr	r6, [r3, #4]
 801e3c0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e3c2:	3604      	adds	r6, #4
 801e3c4:	43db      	mvns	r3, r3
 801e3c6:	b2db      	uxtb	r3, r3
 801e3c8:	930a      	str	r3, [sp, #40]	@ 0x28
 801e3ca:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e3cc:	2b00      	cmp	r3, #0
 801e3ce:	dc03      	bgt.n	801e3d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801e3d0:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 801e3d2:	2b00      	cmp	r3, #0
 801e3d4:	f340 8225 	ble.w	801e822 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801e3d8:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e3da:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e3de:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e3e2:	1e48      	subs	r0, r1, #1
 801e3e4:	1e57      	subs	r7, r2, #1
 801e3e6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e3e8:	2b00      	cmp	r3, #0
 801e3ea:	f340 80e3 	ble.w	801e5b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801e3ee:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801e3f2:	ea4f 4325 	mov.w	r3, r5, asr #16
 801e3f6:	d406      	bmi.n	801e406 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e3f8:	4584      	cmp	ip, r0
 801e3fa:	da04      	bge.n	801e406 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e3fc:	2b00      	cmp	r3, #0
 801e3fe:	db02      	blt.n	801e406 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e400:	42bb      	cmp	r3, r7
 801e402:	f2c0 80d8 	blt.w	801e5b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801e406:	f11c 0c01 	adds.w	ip, ip, #1
 801e40a:	f100 80c9 	bmi.w	801e5a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e40e:	4561      	cmp	r1, ip
 801e410:	f2c0 80c6 	blt.w	801e5a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e414:	3301      	adds	r3, #1
 801e416:	f100 80c3 	bmi.w	801e5a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e41a:	429a      	cmp	r2, r3
 801e41c:	f2c0 80c0 	blt.w	801e5a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e420:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801e424:	4647      	mov	r7, r8
 801e426:	f1bb 0f00 	cmp.w	fp, #0
 801e42a:	f340 80e3 	ble.w	801e5f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801e42e:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 801e430:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801e434:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e436:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801e43a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e43e:	ea5f 422a 	movs.w	r2, sl, asr #16
 801e442:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801e446:	689b      	ldr	r3, [r3, #8]
 801e448:	f100 8121 	bmi.w	801e68e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e44c:	f103 39ff 	add.w	r9, r3, #4294967295
 801e450:	454a      	cmp	r2, r9
 801e452:	f280 811c 	bge.w	801e68e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e456:	f1bc 0f00 	cmp.w	ip, #0
 801e45a:	f2c0 8118 	blt.w	801e68e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e45e:	f10e 39ff 	add.w	r9, lr, #4294967295
 801e462:	45cc      	cmp	ip, r9
 801e464:	f280 8113 	bge.w	801e68e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e468:	b21b      	sxth	r3, r3
 801e46a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e46c:	fb0c 2203 	mla	r2, ip, r3, r2
 801e470:	eb04 0902 	add.w	r9, r4, r2
 801e474:	5ca2      	ldrb	r2, [r4, r2]
 801e476:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801e47a:	2800      	cmp	r0, #0
 801e47c:	f000 80fe 	beq.w	801e67c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801e480:	f899 2001 	ldrb.w	r2, [r9, #1]
 801e484:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801e488:	9211      	str	r2, [sp, #68]	@ 0x44
 801e48a:	b151      	cbz	r1, 801e4a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e48c:	eb09 0203 	add.w	r2, r9, r3
 801e490:	f819 3003 	ldrb.w	r3, [r9, r3]
 801e494:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e498:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e49a:	7853      	ldrb	r3, [r2, #1]
 801e49c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e4a0:	9312      	str	r3, [sp, #72]	@ 0x48
 801e4a2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801e4a4:	fb10 f201 	smulbb	r2, r0, r1
 801e4a8:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801e4aa:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801e4ae:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801e4b2:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801e4b6:	10d2      	asrs	r2, r2, #3
 801e4b8:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801e4bc:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801e4c0:	ea4c 0c03 	orr.w	ip, ip, r3
 801e4c4:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801e4c6:	041b      	lsls	r3, r3, #16
 801e4c8:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801e4cc:	4323      	orrs	r3, r4
 801e4ce:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801e4d0:	4353      	muls	r3, r2
 801e4d2:	fb09 330c 	mla	r3, r9, ip, r3
 801e4d6:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801e4da:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801e4de:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801e4e2:	ea4c 0e0e 	orr.w	lr, ip, lr
 801e4e6:	f1c1 0c10 	rsb	ip, r1, #16
 801e4ea:	ebac 0c00 	sub.w	ip, ip, r0
 801e4ee:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801e4f2:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801e4f6:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801e4fa:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801e4fc:	0418      	lsls	r0, r3, #16
 801e4fe:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801e502:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801e506:	4318      	orrs	r0, r3
 801e508:	fb02 c200 	mla	r2, r2, r0, ip
 801e50c:	8838      	ldrh	r0, [r7, #0]
 801e50e:	0d53      	lsrs	r3, r2, #21
 801e510:	0952      	lsrs	r2, r2, #5
 801e512:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e516:	1201      	asrs	r1, r0, #8
 801e518:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e51c:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801e520:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801e524:	00c0      	lsls	r0, r0, #3
 801e526:	431a      	orrs	r2, r3
 801e528:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 801e52c:	fb11 f104 	smulbb	r1, r1, r4
 801e530:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801e534:	b292      	uxth	r2, r2
 801e536:	fb1e fe04 	smulbb	lr, lr, r4
 801e53a:	b2c0      	uxtb	r0, r0
 801e53c:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801e540:	fb10 f004 	smulbb	r0, r0, r4
 801e544:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801e548:	fb0c 1c03 	mla	ip, ip, r3, r1
 801e54c:	10d1      	asrs	r1, r2, #3
 801e54e:	00d2      	lsls	r2, r2, #3
 801e550:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801e554:	fa1f fc8c 	uxth.w	ip, ip
 801e558:	b2d2      	uxtb	r2, r2
 801e55a:	fb01 e103 	mla	r1, r1, r3, lr
 801e55e:	fb02 0303 	mla	r3, r2, r3, r0
 801e562:	b289      	uxth	r1, r1
 801e564:	b29a      	uxth	r2, r3
 801e566:	f10c 0301 	add.w	r3, ip, #1
 801e56a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801e56e:	1c53      	adds	r3, r2, #1
 801e570:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e574:	1c4a      	adds	r2, r1, #1
 801e576:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801e57a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e57e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e582:	0949      	lsrs	r1, r1, #5
 801e584:	ea43 030c 	orr.w	r3, r3, ip
 801e588:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801e58c:	430b      	orrs	r3, r1
 801e58e:	803b      	strh	r3, [r7, #0]
 801e590:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801e592:	3702      	adds	r7, #2
 801e594:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e598:	449a      	add	sl, r3
 801e59a:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801e59c:	441d      	add	r5, r3
 801e59e:	e742      	b.n	801e426 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801e5a0:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801e5a2:	f108 0802 	add.w	r8, r8, #2
 801e5a6:	449a      	add	sl, r3
 801e5a8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801e5aa:	441d      	add	r5, r3
 801e5ac:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e5ae:	3b01      	subs	r3, #1
 801e5b0:	9309      	str	r3, [sp, #36]	@ 0x24
 801e5b2:	e718      	b.n	801e3e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801e5b4:	d023      	beq.n	801e5fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801e5b6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e5b8:	9825      	ldr	r0, [sp, #148]	@ 0x94
 801e5ba:	3b01      	subs	r3, #1
 801e5bc:	fb00 a003 	mla	r0, r0, r3, sl
 801e5c0:	1400      	asrs	r0, r0, #16
 801e5c2:	f53f af2d 	bmi.w	801e420 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e5c6:	3901      	subs	r1, #1
 801e5c8:	4288      	cmp	r0, r1
 801e5ca:	f6bf af29 	bge.w	801e420 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e5ce:	9926      	ldr	r1, [sp, #152]	@ 0x98
 801e5d0:	fb01 5303 	mla	r3, r1, r3, r5
 801e5d4:	141b      	asrs	r3, r3, #16
 801e5d6:	f53f af23 	bmi.w	801e420 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e5da:	3a01      	subs	r2, #1
 801e5dc:	4293      	cmp	r3, r2
 801e5de:	f6bf af1f 	bge.w	801e420 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e5e2:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801e5e6:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 801e5ea:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 801e5ee:	f1be 0f00 	cmp.w	lr, #0
 801e5f2:	dc6c      	bgt.n	801e6ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801e5f4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e5f6:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801e5fa:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801e5fe:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e600:	2b00      	cmp	r3, #0
 801e602:	f340 810e 	ble.w	801e822 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801e606:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801e60a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801e60c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e610:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e614:	eef0 6a62 	vmov.f32	s13, s5
 801e618:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e61c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e620:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e624:	ee16 aa90 	vmov	sl, s13
 801e628:	eef0 6a43 	vmov.f32	s13, s6
 801e62c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e630:	ee16 5a90 	vmov	r5, s13
 801e634:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e638:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e63c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e640:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e644:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e648:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e64c:	ee12 2a90 	vmov	r2, s5
 801e650:	eef0 2a47 	vmov.f32	s5, s14
 801e654:	fb92 f3f3 	sdiv	r3, r2, r3
 801e658:	ee13 2a10 	vmov	r2, s6
 801e65c:	9325      	str	r3, [sp, #148]	@ 0x94
 801e65e:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801e660:	eeb0 3a67 	vmov.f32	s6, s15
 801e664:	fb92 f3f3 	sdiv	r3, r2, r3
 801e668:	9326      	str	r3, [sp, #152]	@ 0x98
 801e66a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e66c:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 801e66e:	3b01      	subs	r3, #1
 801e670:	930c      	str	r3, [sp, #48]	@ 0x30
 801e672:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801e674:	bf08      	it	eq
 801e676:	4613      	moveq	r3, r2
 801e678:	9309      	str	r3, [sp, #36]	@ 0x24
 801e67a:	e6a6      	b.n	801e3ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801e67c:	2900      	cmp	r1, #0
 801e67e:	f43f af10 	beq.w	801e4a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e682:	f819 3003 	ldrb.w	r3, [r9, r3]
 801e686:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e68a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e68c:	e709      	b.n	801e4a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e68e:	f112 0901 	adds.w	r9, r2, #1
 801e692:	f53f af7d 	bmi.w	801e590 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e696:	454b      	cmp	r3, r9
 801e698:	f6ff af7a 	blt.w	801e590 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e69c:	f11c 0901 	adds.w	r9, ip, #1
 801e6a0:	f53f af76 	bmi.w	801e590 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e6a4:	45ce      	cmp	lr, r9
 801e6a6:	f6ff af73 	blt.w	801e590 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e6aa:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801e6ac:	b21b      	sxth	r3, r3
 801e6ae:	9202      	str	r2, [sp, #8]
 801e6b0:	fa0f f28e 	sxth.w	r2, lr
 801e6b4:	9300      	str	r3, [sp, #0]
 801e6b6:	4633      	mov	r3, r6
 801e6b8:	9201      	str	r2, [sp, #4]
 801e6ba:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801e6bc:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801e6c0:	e9cd c003 	strd	ip, r0, [sp, #12]
 801e6c4:	4639      	mov	r1, r7
 801e6c6:	9816      	ldr	r0, [sp, #88]	@ 0x58
 801e6c8:	f7ff fd8e 	bl	801e1e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801e6cc:	e760      	b.n	801e590 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801e6ce:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e6d0:	ea4f 422a 	mov.w	r2, sl, asr #16
 801e6d4:	1429      	asrs	r1, r5, #16
 801e6d6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e6d8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801e6dc:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801e6e0:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801e6e4:	fb03 2101 	mla	r1, r3, r1, r2
 801e6e8:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801e6ea:	440a      	add	r2, r1
 801e6ec:	5c61      	ldrb	r1, [r4, r1]
 801e6ee:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801e6f2:	f1bc 0f00 	cmp.w	ip, #0
 801e6f6:	f000 808c 	beq.w	801e812 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801e6fa:	7857      	ldrb	r7, [r2, #1]
 801e6fc:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801e700:	9413      	str	r4, [sp, #76]	@ 0x4c
 801e702:	b140      	cbz	r0, 801e716 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801e704:	18d7      	adds	r7, r2, r3
 801e706:	5cd3      	ldrb	r3, [r2, r3]
 801e708:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e70c:	9310      	str	r3, [sp, #64]	@ 0x40
 801e70e:	787b      	ldrb	r3, [r7, #1]
 801e710:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e714:	9314      	str	r3, [sp, #80]	@ 0x50
 801e716:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801e718:	fb1c f200 	smulbb	r2, ip, r0
 801e71c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801e71e:	f10e 3eff 	add.w	lr, lr, #4294967295
 801e722:	041f      	lsls	r7, r3, #16
 801e724:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801e728:	10d2      	asrs	r2, r2, #3
 801e72a:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 801e72e:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 801e732:	431f      	orrs	r7, r3
 801e734:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801e738:	9317      	str	r3, [sp, #92]	@ 0x5c
 801e73a:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801e73c:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801e73e:	041b      	lsls	r3, r3, #16
 801e740:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801e744:	ea43 030b 	orr.w	r3, r3, fp
 801e748:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801e74c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801e750:	4353      	muls	r3, r2
 801e752:	fb04 3707 	mla	r7, r4, r7, r3
 801e756:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801e75a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801e75c:	ea43 0b01 	orr.w	fp, r3, r1
 801e760:	f1c0 0110 	rsb	r1, r0, #16
 801e764:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801e766:	eba1 0c0c 	sub.w	ip, r1, ip
 801e76a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801e76e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801e772:	fb0c 770b 	mla	r7, ip, fp, r7
 801e776:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801e77a:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 801e77e:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801e782:	ea4c 0c0b 	orr.w	ip, ip, fp
 801e786:	fb02 770c 	mla	r7, r2, ip, r7
 801e78a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801e78c:	0d79      	lsrs	r1, r7, #21
 801e78e:	8812      	ldrh	r2, [r2, #0]
 801e790:	097f      	lsrs	r7, r7, #5
 801e792:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801e796:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801e79a:	430f      	orrs	r7, r1
 801e79c:	1211      	asrs	r1, r2, #8
 801e79e:	b2bb      	uxth	r3, r7
 801e7a0:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801e7a4:	10d7      	asrs	r7, r2, #3
 801e7a6:	fb11 f104 	smulbb	r1, r1, r4
 801e7aa:	1218      	asrs	r0, r3, #8
 801e7ac:	00d2      	lsls	r2, r2, #3
 801e7ae:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801e7b2:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801e7b6:	fb17 f704 	smulbb	r7, r7, r4
 801e7ba:	b2d2      	uxtb	r2, r2
 801e7bc:	fb00 1009 	mla	r0, r0, r9, r1
 801e7c0:	10d9      	asrs	r1, r3, #3
 801e7c2:	fb12 f204 	smulbb	r2, r2, r4
 801e7c6:	00db      	lsls	r3, r3, #3
 801e7c8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801e7cc:	b280      	uxth	r0, r0
 801e7ce:	b2db      	uxtb	r3, r3
 801e7d0:	fb01 7109 	mla	r1, r1, r9, r7
 801e7d4:	fb03 2309 	mla	r3, r3, r9, r2
 801e7d8:	1c42      	adds	r2, r0, #1
 801e7da:	b289      	uxth	r1, r1
 801e7dc:	b29b      	uxth	r3, r3
 801e7de:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e7e2:	1c4f      	adds	r7, r1, #1
 801e7e4:	1c5a      	adds	r2, r3, #1
 801e7e6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801e7ea:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801e7ee:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801e7f2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801e7f4:	0949      	lsrs	r1, r1, #5
 801e7f6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e7fa:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801e7fe:	4310      	orrs	r0, r2
 801e800:	4308      	orrs	r0, r1
 801e802:	f823 0b02 	strh.w	r0, [r3], #2
 801e806:	930e      	str	r3, [sp, #56]	@ 0x38
 801e808:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801e80a:	449a      	add	sl, r3
 801e80c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801e80e:	441d      	add	r5, r3
 801e810:	e6ed      	b.n	801e5ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801e812:	2800      	cmp	r0, #0
 801e814:	f43f af7f 	beq.w	801e716 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801e818:	5cd3      	ldrb	r3, [r2, r3]
 801e81a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e81e:	9310      	str	r3, [sp, #64]	@ 0x40
 801e820:	e779      	b.n	801e716 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801e822:	b019      	add	sp, #100	@ 0x64
 801e824:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e828 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801e828:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801e82c:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 801e830:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801e834:	f1b8 0f00 	cmp.w	r8, #0
 801e838:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 801e83c:	fb08 470e 	mla	r7, r8, lr, r4
 801e840:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 801e844:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801e848:	eb02 0907 	add.w	r9, r2, r7
 801e84c:	8808      	ldrh	r0, [r1, #0]
 801e84e:	db67      	blt.n	801e920 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801e850:	45c2      	cmp	sl, r8
 801e852:	dd65      	ble.n	801e920 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801e854:	2c00      	cmp	r4, #0
 801e856:	db61      	blt.n	801e91c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801e858:	45a6      	cmp	lr, r4
 801e85a:	dd5f      	ble.n	801e91c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801e85c:	5dd2      	ldrb	r2, [r2, r7]
 801e85e:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801e862:	1c62      	adds	r2, r4, #1
 801e864:	d45f      	bmi.n	801e926 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801e866:	4596      	cmp	lr, r2
 801e868:	dd5d      	ble.n	801e926 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801e86a:	2d00      	cmp	r5, #0
 801e86c:	d05b      	beq.n	801e926 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801e86e:	f899 2001 	ldrb.w	r2, [r9, #1]
 801e872:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801e876:	f118 0801 	adds.w	r8, r8, #1
 801e87a:	d458      	bmi.n	801e92e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801e87c:	45c2      	cmp	sl, r8
 801e87e:	dd56      	ble.n	801e92e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801e880:	2e00      	cmp	r6, #0
 801e882:	d054      	beq.n	801e92e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801e884:	2c00      	cmp	r4, #0
 801e886:	db50      	blt.n	801e92a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801e888:	45a6      	cmp	lr, r4
 801e88a:	dd4e      	ble.n	801e92a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801e88c:	f819 200e 	ldrb.w	r2, [r9, lr]
 801e890:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801e894:	3401      	adds	r4, #1
 801e896:	d407      	bmi.n	801e8a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801e898:	45a6      	cmp	lr, r4
 801e89a:	dd05      	ble.n	801e8a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801e89c:	b125      	cbz	r5, 801e8a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801e89e:	44ce      	add	lr, r9
 801e8a0:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801e8a4:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801e8a8:	fb15 f406 	smulbb	r4, r5, r6
 801e8ac:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801e8b0:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801e8b4:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801e8b8:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801e8bc:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801e8c0:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801e8c4:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801e8c8:	ea43 0c0c 	orr.w	ip, r3, ip
 801e8cc:	f1c6 0310 	rsb	r3, r6, #16
 801e8d0:	ea4e 0707 	orr.w	r7, lr, r7
 801e8d4:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801e8d8:	1b5b      	subs	r3, r3, r5
 801e8da:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801e8de:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801e8e2:	437d      	muls	r5, r7
 801e8e4:	fb03 5c0c 	mla	ip, r3, ip, r5
 801e8e8:	0403      	lsls	r3, r0, #16
 801e8ea:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e8ee:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801e8f2:	4318      	orrs	r0, r3
 801e8f4:	0413      	lsls	r3, r2, #16
 801e8f6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e8fa:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801e8fe:	fb04 c000 	mla	r0, r4, r0, ip
 801e902:	4313      	orrs	r3, r2
 801e904:	fb06 0003 	mla	r0, r6, r3, r0
 801e908:	0d43      	lsrs	r3, r0, #21
 801e90a:	0940      	lsrs	r0, r0, #5
 801e90c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e910:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801e914:	4318      	orrs	r0, r3
 801e916:	8008      	strh	r0, [r1, #0]
 801e918:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801e91c:	4684      	mov	ip, r0
 801e91e:	e7a0      	b.n	801e862 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801e920:	4607      	mov	r7, r0
 801e922:	4684      	mov	ip, r0
 801e924:	e7a7      	b.n	801e876 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801e926:	4607      	mov	r7, r0
 801e928:	e7a5      	b.n	801e876 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801e92a:	4602      	mov	r2, r0
 801e92c:	e7b2      	b.n	801e894 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801e92e:	4602      	mov	r2, r0
 801e930:	e7ba      	b.n	801e8a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801e932 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e932:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e936:	b093      	sub	sp, #76	@ 0x4c
 801e938:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801e93c:	920f      	str	r2, [sp, #60]	@ 0x3c
 801e93e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801e940:	9010      	str	r0, [sp, #64]	@ 0x40
 801e942:	9108      	str	r1, [sp, #32]
 801e944:	6850      	ldr	r0, [r2, #4]
 801e946:	9306      	str	r3, [sp, #24]
 801e948:	6812      	ldr	r2, [r2, #0]
 801e94a:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801e94e:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801e952:	fb00 1303 	mla	r3, r0, r3, r1
 801e956:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801e95a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e95c:	681b      	ldr	r3, [r3, #0]
 801e95e:	9307      	str	r3, [sp, #28]
 801e960:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e962:	685f      	ldr	r7, [r3, #4]
 801e964:	3704      	adds	r7, #4
 801e966:	9b08      	ldr	r3, [sp, #32]
 801e968:	2b00      	cmp	r3, #0
 801e96a:	dc03      	bgt.n	801e974 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801e96c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801e96e:	2b00      	cmp	r3, #0
 801e970:	f340 81b2 	ble.w	801ecd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801e974:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e976:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e97a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e97e:	1e48      	subs	r0, r1, #1
 801e980:	f102 3cff 	add.w	ip, r2, #4294967295
 801e984:	9b06      	ldr	r3, [sp, #24]
 801e986:	2b00      	cmp	r3, #0
 801e988:	f340 80a9 	ble.w	801eade <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801e98c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801e990:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e994:	d406      	bmi.n	801e9a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e996:	4586      	cmp	lr, r0
 801e998:	da04      	bge.n	801e9a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e99a:	2b00      	cmp	r3, #0
 801e99c:	db02      	blt.n	801e9a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801e99e:	4563      	cmp	r3, ip
 801e9a0:	f2c0 809e 	blt.w	801eae0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801e9a4:	f11e 0e01 	adds.w	lr, lr, #1
 801e9a8:	f100 808f 	bmi.w	801eaca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e9ac:	4571      	cmp	r1, lr
 801e9ae:	f2c0 808c 	blt.w	801eaca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e9b2:	3301      	adds	r3, #1
 801e9b4:	f100 8089 	bmi.w	801eaca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e9b8:	429a      	cmp	r2, r3
 801e9ba:	f2c0 8086 	blt.w	801eaca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801e9be:	f8dd b018 	ldr.w	fp, [sp, #24]
 801e9c2:	46c8      	mov	r8, r9
 801e9c4:	f1bb 0f00 	cmp.w	fp, #0
 801e9c8:	f340 80a6 	ble.w	801eb18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801e9cc:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 801e9ce:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801e9d2:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801e9d4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801e9d8:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e9dc:	1422      	asrs	r2, r4, #16
 801e9de:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801e9e2:	689b      	ldr	r3, [r3, #8]
 801e9e4:	f100 80e3 	bmi.w	801ebae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801e9e8:	f103 3aff 	add.w	sl, r3, #4294967295
 801e9ec:	4552      	cmp	r2, sl
 801e9ee:	f280 80de 	bge.w	801ebae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801e9f2:	f1bc 0f00 	cmp.w	ip, #0
 801e9f6:	f2c0 80da 	blt.w	801ebae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801e9fa:	f10e 3aff 	add.w	sl, lr, #4294967295
 801e9fe:	45d4      	cmp	ip, sl
 801ea00:	f280 80d5 	bge.w	801ebae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ea04:	b21b      	sxth	r3, r3
 801ea06:	9d07      	ldr	r5, [sp, #28]
 801ea08:	fb0c 2203 	mla	r2, ip, r3, r2
 801ea0c:	eb05 0a02 	add.w	sl, r5, r2
 801ea10:	5caa      	ldrb	r2, [r5, r2]
 801ea12:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801ea16:	2800      	cmp	r0, #0
 801ea18:	f000 80c0 	beq.w	801eb9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801ea1c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801ea20:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801ea24:	920b      	str	r2, [sp, #44]	@ 0x2c
 801ea26:	b151      	cbz	r1, 801ea3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801ea28:	eb0a 0203 	add.w	r2, sl, r3
 801ea2c:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801ea30:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ea34:	9309      	str	r3, [sp, #36]	@ 0x24
 801ea36:	7853      	ldrb	r3, [r2, #1]
 801ea38:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ea3c:	930c      	str	r3, [sp, #48]	@ 0x30
 801ea3e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ea40:	fb10 f201 	smulbb	r2, r0, r1
 801ea44:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801ea46:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ea4a:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801ea4e:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801ea52:	10d2      	asrs	r2, r2, #3
 801ea54:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801ea58:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801ea5c:	ea4c 0c03 	orr.w	ip, ip, r3
 801ea60:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ea62:	041b      	lsls	r3, r3, #16
 801ea64:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801ea68:	432b      	orrs	r3, r5
 801ea6a:	4353      	muls	r3, r2
 801ea6c:	fb0a 330c 	mla	r3, sl, ip, r3
 801ea70:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801ea74:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801ea78:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801ea7c:	ea4c 0e0e 	orr.w	lr, ip, lr
 801ea80:	f1c1 0c10 	rsb	ip, r1, #16
 801ea84:	ebac 0c00 	sub.w	ip, ip, r0
 801ea88:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ea8c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801ea90:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801ea94:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ea96:	0418      	lsls	r0, r3, #16
 801ea98:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801ea9c:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801eaa0:	4318      	orrs	r0, r3
 801eaa2:	fb02 c200 	mla	r2, r2, r0, ip
 801eaa6:	0d53      	lsrs	r3, r2, #21
 801eaa8:	0952      	lsrs	r2, r2, #5
 801eaaa:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801eaae:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801eab2:	431a      	orrs	r2, r3
 801eab4:	f8a8 2000 	strh.w	r2, [r8]
 801eab8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801eaba:	f108 0802 	add.w	r8, r8, #2
 801eabe:	f10b 3bff 	add.w	fp, fp, #4294967295
 801eac2:	441c      	add	r4, r3
 801eac4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801eac6:	441e      	add	r6, r3
 801eac8:	e77c      	b.n	801e9c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801eaca:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801eacc:	f109 0902 	add.w	r9, r9, #2
 801ead0:	441c      	add	r4, r3
 801ead2:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ead4:	441e      	add	r6, r3
 801ead6:	9b06      	ldr	r3, [sp, #24]
 801ead8:	3b01      	subs	r3, #1
 801eada:	9306      	str	r3, [sp, #24]
 801eadc:	e752      	b.n	801e984 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801eade:	d020      	beq.n	801eb22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801eae0:	9b06      	ldr	r3, [sp, #24]
 801eae2:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801eae4:	3b01      	subs	r3, #1
 801eae6:	fb00 4003 	mla	r0, r0, r3, r4
 801eaea:	1400      	asrs	r0, r0, #16
 801eaec:	f53f af67 	bmi.w	801e9be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801eaf0:	3901      	subs	r1, #1
 801eaf2:	4288      	cmp	r0, r1
 801eaf4:	f6bf af63 	bge.w	801e9be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801eaf8:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801eafa:	fb01 6303 	mla	r3, r1, r3, r6
 801eafe:	141b      	asrs	r3, r3, #16
 801eb00:	f53f af5d 	bmi.w	801e9be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801eb04:	3a01      	subs	r2, #1
 801eb06:	4293      	cmp	r3, r2
 801eb08:	f6bf af59 	bge.w	801e9be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801eb0c:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801eb10:	46ca      	mov	sl, r9
 801eb12:	f1b8 0f00 	cmp.w	r8, #0
 801eb16:	dc67      	bgt.n	801ebe8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801eb18:	9b06      	ldr	r3, [sp, #24]
 801eb1a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801eb1e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801eb22:	9b08      	ldr	r3, [sp, #32]
 801eb24:	2b00      	cmp	r3, #0
 801eb26:	f340 80d7 	ble.w	801ecd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801eb2a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801eb2e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801eb30:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801eb34:	eeb0 6a62 	vmov.f32	s12, s5
 801eb38:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801eb3c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801eb40:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801eb44:	ee16 4a10 	vmov	r4, s12
 801eb48:	eeb0 6a43 	vmov.f32	s12, s6
 801eb4c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801eb50:	ee16 6a10 	vmov	r6, s12
 801eb54:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801eb58:	ee61 7a27 	vmul.f32	s15, s2, s15
 801eb5c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801eb60:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801eb64:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801eb68:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801eb6c:	ee12 2a90 	vmov	r2, s5
 801eb70:	eef0 2a47 	vmov.f32	s5, s14
 801eb74:	fb92 f3f3 	sdiv	r3, r2, r3
 801eb78:	ee13 2a10 	vmov	r2, s6
 801eb7c:	931f      	str	r3, [sp, #124]	@ 0x7c
 801eb7e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801eb80:	eeb0 3a67 	vmov.f32	s6, s15
 801eb84:	fb92 f3f3 	sdiv	r3, r2, r3
 801eb88:	9320      	str	r3, [sp, #128]	@ 0x80
 801eb8a:	9b08      	ldr	r3, [sp, #32]
 801eb8c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801eb8e:	3b01      	subs	r3, #1
 801eb90:	9308      	str	r3, [sp, #32]
 801eb92:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801eb94:	bf08      	it	eq
 801eb96:	4613      	moveq	r3, r2
 801eb98:	9306      	str	r3, [sp, #24]
 801eb9a:	e6e4      	b.n	801e966 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801eb9c:	2900      	cmp	r1, #0
 801eb9e:	f43f af4e 	beq.w	801ea3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801eba2:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801eba6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ebaa:	9309      	str	r3, [sp, #36]	@ 0x24
 801ebac:	e747      	b.n	801ea3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801ebae:	f112 0a01 	adds.w	sl, r2, #1
 801ebb2:	d481      	bmi.n	801eab8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ebb4:	4553      	cmp	r3, sl
 801ebb6:	f6ff af7f 	blt.w	801eab8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ebba:	f11c 0a01 	adds.w	sl, ip, #1
 801ebbe:	f53f af7b 	bmi.w	801eab8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ebc2:	45d6      	cmp	lr, sl
 801ebc4:	f6ff af78 	blt.w	801eab8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ebc8:	b21b      	sxth	r3, r3
 801ebca:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801ebce:	fa0f f28e 	sxth.w	r2, lr
 801ebd2:	9300      	str	r3, [sp, #0]
 801ebd4:	463b      	mov	r3, r7
 801ebd6:	9201      	str	r2, [sp, #4]
 801ebd8:	9a07      	ldr	r2, [sp, #28]
 801ebda:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801ebde:	4641      	mov	r1, r8
 801ebe0:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801ebe2:	f7ff fe21 	bl	801e828 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801ebe6:	e767      	b.n	801eab8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801ebe8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ebea:	1422      	asrs	r2, r4, #16
 801ebec:	1431      	asrs	r1, r6, #16
 801ebee:	9d07      	ldr	r5, [sp, #28]
 801ebf0:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801ebf4:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801ebf8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ebfc:	fb03 2101 	mla	r1, r3, r1, r2
 801ec00:	9a07      	ldr	r2, [sp, #28]
 801ec02:	440a      	add	r2, r1
 801ec04:	5c69      	ldrb	r1, [r5, r1]
 801ec06:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801ec0a:	f1be 0f00 	cmp.w	lr, #0
 801ec0e:	d05c      	beq.n	801ecca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801ec10:	f892 c001 	ldrb.w	ip, [r2, #1]
 801ec14:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801ec18:	950d      	str	r5, [sp, #52]	@ 0x34
 801ec1a:	b150      	cbz	r0, 801ec32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801ec1c:	eb02 0c03 	add.w	ip, r2, r3
 801ec20:	5cd3      	ldrb	r3, [r2, r3]
 801ec22:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ec26:	930a      	str	r3, [sp, #40]	@ 0x28
 801ec28:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801ec2c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ec30:	930e      	str	r3, [sp, #56]	@ 0x38
 801ec32:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801ec34:	fb1e f200 	smulbb	r2, lr, r0
 801ec38:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801ec3a:	f108 38ff 	add.w	r8, r8, #4294967295
 801ec3e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ec42:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801ec46:	10d2      	asrs	r2, r2, #3
 801ec48:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 801ec4c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801ec50:	ea4c 0c03 	orr.w	ip, ip, r3
 801ec54:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801ec58:	9311      	str	r3, [sp, #68]	@ 0x44
 801ec5a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ec5c:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801ec5e:	041b      	lsls	r3, r3, #16
 801ec60:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801ec64:	ea43 030b 	orr.w	r3, r3, fp
 801ec68:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801ec6c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801ec70:	4353      	muls	r3, r2
 801ec72:	fb05 3c0c 	mla	ip, r5, ip, r3
 801ec76:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801ec7a:	ea43 0b01 	orr.w	fp, r3, r1
 801ec7e:	f1c0 0110 	rsb	r1, r0, #16
 801ec82:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ec84:	eba1 0e0e 	sub.w	lr, r1, lr
 801ec88:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801ec8c:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801ec90:	fb0e cc0b 	mla	ip, lr, fp, ip
 801ec94:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801ec98:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 801ec9c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801eca0:	ea4b 0e0e 	orr.w	lr, fp, lr
 801eca4:	fb02 cc0e 	mla	ip, r2, lr, ip
 801eca8:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801ecac:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801ecb0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ecb4:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801ecb8:	ea43 0c0c 	orr.w	ip, r3, ip
 801ecbc:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801ecbe:	441c      	add	r4, r3
 801ecc0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ecc2:	f82a cb02 	strh.w	ip, [sl], #2
 801ecc6:	441e      	add	r6, r3
 801ecc8:	e723      	b.n	801eb12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801ecca:	2800      	cmp	r0, #0
 801eccc:	d0b1      	beq.n	801ec32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801ecce:	5cd3      	ldrb	r3, [r2, r3]
 801ecd0:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ecd4:	930a      	str	r3, [sp, #40]	@ 0x28
 801ecd6:	e7ac      	b.n	801ec32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801ecd8:	b013      	add	sp, #76	@ 0x4c
 801ecda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ecde <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801ecde:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ece2:	880d      	ldrh	r5, [r1, #0]
 801ece4:	b087      	sub	sp, #28
 801ece6:	10ef      	asrs	r7, r5, #3
 801ece8:	9103      	str	r1, [sp, #12]
 801ecea:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801ecee:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 801ecf2:	00ed      	lsls	r5, r5, #3
 801ecf4:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801ecf8:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801ecfc:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801ed00:	b2ed      	uxtb	r5, r5
 801ed02:	9701      	str	r7, [sp, #4]
 801ed04:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 801ed08:	9502      	str	r5, [sp, #8]
 801ed0a:	9d01      	ldr	r5, [sp, #4]
 801ed0c:	9902      	ldr	r1, [sp, #8]
 801ed0e:	022d      	lsls	r5, r5, #8
 801ed10:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 801ed14:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 801ed18:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801ed1c:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 801ed20:	430d      	orrs	r5, r1
 801ed22:	fb06 0709 	mla	r7, r6, r9, r0
 801ed26:	2e00      	cmp	r6, #0
 801ed28:	9505      	str	r5, [sp, #20]
 801ed2a:	eb02 0c07 	add.w	ip, r2, r7
 801ed2e:	f2c0 80b6 	blt.w	801ee9e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801ed32:	45b3      	cmp	fp, r6
 801ed34:	f340 80b3 	ble.w	801ee9e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801ed38:	2800      	cmp	r0, #0
 801ed3a:	f2c0 80ae 	blt.w	801ee9a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801ed3e:	4581      	cmp	r9, r0
 801ed40:	f340 80ab 	ble.w	801ee9a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801ed44:	5dd7      	ldrb	r7, [r2, r7]
 801ed46:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801ed4a:	441f      	add	r7, r3
 801ed4c:	1c42      	adds	r2, r0, #1
 801ed4e:	f100 80a9 	bmi.w	801eea4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801ed52:	4591      	cmp	r9, r2
 801ed54:	f340 80a6 	ble.w	801eea4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801ed58:	2c00      	cmp	r4, #0
 801ed5a:	f000 80a3 	beq.w	801eea4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801ed5e:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801ed62:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801ed66:	441d      	add	r5, r3
 801ed68:	3601      	adds	r6, #1
 801ed6a:	f100 809f 	bmi.w	801eeac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801ed6e:	45b3      	cmp	fp, r6
 801ed70:	f340 809c 	ble.w	801eeac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801ed74:	f1be 0f00 	cmp.w	lr, #0
 801ed78:	f000 8098 	beq.w	801eeac <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801ed7c:	2800      	cmp	r0, #0
 801ed7e:	f2c0 8093 	blt.w	801eea8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801ed82:	4581      	cmp	r9, r0
 801ed84:	f340 8090 	ble.w	801eea8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801ed88:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801ed8c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801ed90:	441e      	add	r6, r3
 801ed92:	3001      	adds	r0, #1
 801ed94:	f100 808d 	bmi.w	801eeb2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801ed98:	4581      	cmp	r9, r0
 801ed9a:	f340 808a 	ble.w	801eeb2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801ed9e:	2c00      	cmp	r4, #0
 801eda0:	f000 8087 	beq.w	801eeb2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801eda4:	44e1      	add	r9, ip
 801eda6:	f899 2001 	ldrb.w	r2, [r9, #1]
 801edaa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801edae:	4413      	add	r3, r2
 801edb0:	b2a4      	uxth	r4, r4
 801edb2:	f897 c002 	ldrb.w	ip, [r7, #2]
 801edb6:	fa1f fe8e 	uxth.w	lr, lr
 801edba:	9901      	ldr	r1, [sp, #4]
 801edbc:	fb04 fb0e 	mul.w	fp, r4, lr
 801edc0:	0124      	lsls	r4, r4, #4
 801edc2:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801edc6:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 801edca:	eba4 040b 	sub.w	r4, r4, fp
 801edce:	fa1f f08e 	uxth.w	r0, lr
 801edd2:	b2a2      	uxth	r2, r4
 801edd4:	78ac      	ldrb	r4, [r5, #2]
 801edd6:	eba9 0900 	sub.w	r9, r9, r0
 801edda:	fa1f fe88 	uxth.w	lr, r8
 801edde:	4354      	muls	r4, r2
 801ede0:	ea6f 0808 	mvn.w	r8, r8
 801ede4:	fa1f f989 	uxth.w	r9, r9
 801ede8:	fa5f f888 	uxtb.w	r8, r8
 801edec:	fb09 440c 	mla	r4, r9, ip, r4
 801edf0:	f896 c002 	ldrb.w	ip, [r6, #2]
 801edf4:	fb1a fa08 	smulbb	sl, sl, r8
 801edf8:	fb00 440c 	mla	r4, r0, ip, r4
 801edfc:	f893 c002 	ldrb.w	ip, [r3, #2]
 801ee00:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801ee04:	787c      	ldrb	r4, [r7, #1]
 801ee06:	783f      	ldrb	r7, [r7, #0]
 801ee08:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801ee0c:	fb0c ac0e 	mla	ip, ip, lr, sl
 801ee10:	f895 a001 	ldrb.w	sl, [r5, #1]
 801ee14:	782d      	ldrb	r5, [r5, #0]
 801ee16:	fb02 fa0a 	mul.w	sl, r2, sl
 801ee1a:	fa1f fc8c 	uxth.w	ip, ip
 801ee1e:	436a      	muls	r2, r5
 801ee20:	7835      	ldrb	r5, [r6, #0]
 801ee22:	fb09 aa04 	mla	sl, r9, r4, sl
 801ee26:	7874      	ldrb	r4, [r6, #1]
 801ee28:	fb09 2207 	mla	r2, r9, r7, r2
 801ee2c:	fb00 aa04 	mla	sl, r0, r4, sl
 801ee30:	785c      	ldrb	r4, [r3, #1]
 801ee32:	fb00 2005 	mla	r0, r0, r5, r2
 801ee36:	781b      	ldrb	r3, [r3, #0]
 801ee38:	fb0b a404 	mla	r4, fp, r4, sl
 801ee3c:	fb11 fa08 	smulbb	sl, r1, r8
 801ee40:	fb0b 0b03 	mla	fp, fp, r3, r0
 801ee44:	9b02      	ldr	r3, [sp, #8]
 801ee46:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801ee4a:	fb13 f808 	smulbb	r8, r3, r8
 801ee4e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801ee52:	fb04 a40e 	mla	r4, r4, lr, sl
 801ee56:	f10c 0301 	add.w	r3, ip, #1
 801ee5a:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801ee5e:	b2a4      	uxth	r4, r4
 801ee60:	fa1f fe8e 	uxth.w	lr, lr
 801ee64:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801ee68:	f104 0a01 	add.w	sl, r4, #1
 801ee6c:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 801ee70:	f10e 0c01 	add.w	ip, lr, #1
 801ee74:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801ee78:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801ee7c:	0964      	lsrs	r4, r4, #5
 801ee7e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ee82:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801ee86:	ea4c 0c03 	orr.w	ip, ip, r3
 801ee8a:	9b03      	ldr	r3, [sp, #12]
 801ee8c:	ea4c 0c04 	orr.w	ip, ip, r4
 801ee90:	f8a3 c000 	strh.w	ip, [r3]
 801ee94:	b007      	add	sp, #28
 801ee96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ee9a:	af05      	add	r7, sp, #20
 801ee9c:	e756      	b.n	801ed4c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801ee9e:	ad05      	add	r5, sp, #20
 801eea0:	462f      	mov	r7, r5
 801eea2:	e761      	b.n	801ed68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801eea4:	ad05      	add	r5, sp, #20
 801eea6:	e75f      	b.n	801ed68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801eea8:	ae05      	add	r6, sp, #20
 801eeaa:	e772      	b.n	801ed92 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801eeac:	ab05      	add	r3, sp, #20
 801eeae:	461e      	mov	r6, r3
 801eeb0:	e77e      	b.n	801edb0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801eeb2:	ab05      	add	r3, sp, #20
 801eeb4:	e77c      	b.n	801edb0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801eeb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801eeb6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801eeba:	b095      	sub	sp, #84	@ 0x54
 801eebc:	9212      	str	r2, [sp, #72]	@ 0x48
 801eebe:	9309      	str	r3, [sp, #36]	@ 0x24
 801eec0:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801eec2:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 801eec6:	9013      	str	r0, [sp, #76]	@ 0x4c
 801eec8:	930f      	str	r3, [sp, #60]	@ 0x3c
 801eeca:	6850      	ldr	r0, [r2, #4]
 801eecc:	910e      	str	r1, [sp, #56]	@ 0x38
 801eece:	6812      	ldr	r2, [r2, #0]
 801eed0:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 801eed4:	fb00 1303 	mla	r3, r0, r3, r1
 801eed8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801eedc:	930a      	str	r3, [sp, #40]	@ 0x28
 801eede:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801eee0:	681b      	ldr	r3, [r3, #0]
 801eee2:	930d      	str	r3, [sp, #52]	@ 0x34
 801eee4:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801eee6:	685c      	ldr	r4, [r3, #4]
 801eee8:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801eeea:	3404      	adds	r4, #4
 801eeec:	43db      	mvns	r3, r3
 801eeee:	b2db      	uxtb	r3, r3
 801eef0:	930b      	str	r3, [sp, #44]	@ 0x2c
 801eef2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801eef4:	2b00      	cmp	r3, #0
 801eef6:	dc03      	bgt.n	801ef00 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801eef8:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801eefa:	2b00      	cmp	r3, #0
 801eefc:	f340 8255 	ble.w	801f3aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801ef00:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801ef02:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ef06:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ef0a:	1e48      	subs	r0, r1, #1
 801ef0c:	1e55      	subs	r5, r2, #1
 801ef0e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ef10:	2b00      	cmp	r3, #0
 801ef12:	f340 80f9 	ble.w	801f108 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801ef16:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801ef18:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ef1a:	1436      	asrs	r6, r6, #16
 801ef1c:	ea4f 4323 	mov.w	r3, r3, asr #16
 801ef20:	d406      	bmi.n	801ef30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ef22:	4286      	cmp	r6, r0
 801ef24:	da04      	bge.n	801ef30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ef26:	2b00      	cmp	r3, #0
 801ef28:	db02      	blt.n	801ef30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ef2a:	42ab      	cmp	r3, r5
 801ef2c:	f2c0 80ed 	blt.w	801f10a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801ef30:	3601      	adds	r6, #1
 801ef32:	f100 80da 	bmi.w	801f0ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801ef36:	42b1      	cmp	r1, r6
 801ef38:	f2c0 80d7 	blt.w	801f0ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801ef3c:	3301      	adds	r3, #1
 801ef3e:	f100 80d4 	bmi.w	801f0ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801ef42:	429a      	cmp	r2, r3
 801ef44:	f2c0 80d1 	blt.w	801f0ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801ef48:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ef4a:	9311      	str	r3, [sp, #68]	@ 0x44
 801ef4c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801ef4e:	930c      	str	r3, [sp, #48]	@ 0x30
 801ef50:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801ef52:	2b00      	cmp	r3, #0
 801ef54:	f340 80fa 	ble.w	801f14c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801ef58:	9826      	ldr	r0, [sp, #152]	@ 0x98
 801ef5a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801ef5c:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801ef5e:	68c6      	ldr	r6, [r0, #12]
 801ef60:	141d      	asrs	r5, r3, #16
 801ef62:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801ef64:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801ef68:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801ef6a:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801ef6c:	1400      	asrs	r0, r0, #16
 801ef6e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801ef72:	6892      	ldr	r2, [r2, #8]
 801ef74:	f100 813e 	bmi.w	801f1f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801ef78:	1e57      	subs	r7, r2, #1
 801ef7a:	42b8      	cmp	r0, r7
 801ef7c:	f280 813a 	bge.w	801f1f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801ef80:	2d00      	cmp	r5, #0
 801ef82:	f2c0 8137 	blt.w	801f1f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801ef86:	1e77      	subs	r7, r6, #1
 801ef88:	42bd      	cmp	r5, r7
 801ef8a:	f280 8133 	bge.w	801f1f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801ef8e:	b212      	sxth	r2, r2
 801ef90:	fb05 0002 	mla	r0, r5, r2, r0
 801ef94:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801ef96:	f815 a000 	ldrb.w	sl, [r5, r0]
 801ef9a:	182e      	adds	r6, r5, r0
 801ef9c:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801efa0:	eb04 050a 	add.w	r5, r4, sl
 801efa4:	2b00      	cmp	r3, #0
 801efa6:	f000 8117 	beq.w	801f1d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801efaa:	f896 c001 	ldrb.w	ip, [r6, #1]
 801efae:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801efb2:	44a4      	add	ip, r4
 801efb4:	2900      	cmp	r1, #0
 801efb6:	f000 8117 	beq.w	801f1e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801efba:	18b0      	adds	r0, r6, r2
 801efbc:	5cb2      	ldrb	r2, [r6, r2]
 801efbe:	7840      	ldrb	r0, [r0, #1]
 801efc0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801efc4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801efc8:	4422      	add	r2, r4
 801efca:	4420      	add	r0, r4
 801efcc:	b29b      	uxth	r3, r3
 801efce:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801efd2:	b289      	uxth	r1, r1
 801efd4:	f895 b002 	ldrb.w	fp, [r5, #2]
 801efd8:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801efda:	fb03 f901 	mul.w	r9, r3, r1
 801efde:	011b      	lsls	r3, r3, #4
 801efe0:	f8b6 e000 	ldrh.w	lr, [r6]
 801efe4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801efe8:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 801efec:	eba3 0309 	sub.w	r3, r3, r9
 801eff0:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 801eff4:	b289      	uxth	r1, r1
 801eff6:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801effa:	b29b      	uxth	r3, r3
 801effc:	eba8 0801 	sub.w	r8, r8, r1
 801f000:	435f      	muls	r7, r3
 801f002:	fa1f f888 	uxth.w	r8, r8
 801f006:	9310      	str	r3, [sp, #64]	@ 0x40
 801f008:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f00a:	fb08 770b 	mla	r7, r8, fp, r7
 801f00e:	f892 b002 	ldrb.w	fp, [r2, #2]
 801f012:	fb01 770b 	mla	r7, r1, fp, r7
 801f016:	f890 b002 	ldrb.w	fp, [r0, #2]
 801f01a:	fb09 770b 	mla	r7, r9, fp, r7
 801f01e:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801f022:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801f026:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f02a:	fb1b fb03 	smulbb	fp, fp, r3
 801f02e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f030:	fb07 b706 	mla	r7, r7, r6, fp
 801f034:	f895 b001 	ldrb.w	fp, [r5, #1]
 801f038:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f03c:	f89c c000 	ldrb.w	ip, [ip]
 801f040:	b2bf      	uxth	r7, r7
 801f042:	435d      	muls	r5, r3
 801f044:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f046:	fb08 550b 	mla	r5, r8, fp, r5
 801f04a:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f04e:	fb01 550b 	mla	r5, r1, fp, r5
 801f052:	f890 b001 	ldrb.w	fp, [r0, #1]
 801f056:	fb09 550b 	mla	r5, r9, fp, r5
 801f05a:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801f05e:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f062:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801f066:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f06a:	fa5f fe8e 	uxtb.w	lr, lr
 801f06e:	fb1b fb03 	smulbb	fp, fp, r3
 801f072:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f074:	fb03 f30c 	mul.w	r3, r3, ip
 801f078:	f892 c000 	ldrb.w	ip, [r2]
 801f07c:	fb05 b506 	mla	r5, r5, r6, fp
 801f080:	fb08 330a 	mla	r3, r8, sl, r3
 801f084:	b2ad      	uxth	r5, r5
 801f086:	fb01 330c 	mla	r3, r1, ip, r3
 801f08a:	f890 c000 	ldrb.w	ip, [r0]
 801f08e:	f105 0b01 	add.w	fp, r5, #1
 801f092:	fb09 3c0c 	mla	ip, r9, ip, r3
 801f096:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f098:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801f09c:	fb1e fe03 	smulbb	lr, lr, r3
 801f0a0:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f0a4:	1c7b      	adds	r3, r7, #1
 801f0a6:	096d      	lsrs	r5, r5, #5
 801f0a8:	fb0c e606 	mla	r6, ip, r6, lr
 801f0ac:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801f0b0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801f0b4:	b2b6      	uxth	r6, r6
 801f0b6:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 801f0ba:	1c77      	adds	r7, r6, #1
 801f0bc:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801f0c0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f0c4:	431f      	orrs	r7, r3
 801f0c6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801f0c8:	433d      	orrs	r5, r7
 801f0ca:	801d      	strh	r5, [r3, #0]
 801f0cc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801f0ce:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801f0d0:	3302      	adds	r3, #2
 801f0d2:	930c      	str	r3, [sp, #48]	@ 0x30
 801f0d4:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f0d6:	4413      	add	r3, r2
 801f0d8:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801f0da:	931f      	str	r3, [sp, #124]	@ 0x7c
 801f0dc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f0de:	4413      	add	r3, r2
 801f0e0:	9320      	str	r3, [sp, #128]	@ 0x80
 801f0e2:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801f0e4:	3b01      	subs	r3, #1
 801f0e6:	9311      	str	r3, [sp, #68]	@ 0x44
 801f0e8:	e732      	b.n	801ef50 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f0ea:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f0ec:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801f0ee:	4433      	add	r3, r6
 801f0f0:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 801f0f2:	931f      	str	r3, [sp, #124]	@ 0x7c
 801f0f4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f0f6:	4433      	add	r3, r6
 801f0f8:	9320      	str	r3, [sp, #128]	@ 0x80
 801f0fa:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f0fc:	3b01      	subs	r3, #1
 801f0fe:	9309      	str	r3, [sp, #36]	@ 0x24
 801f100:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f102:	3302      	adds	r3, #2
 801f104:	930a      	str	r3, [sp, #40]	@ 0x28
 801f106:	e702      	b.n	801ef0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f108:	d027      	beq.n	801f15a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801f10a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f10c:	9821      	ldr	r0, [sp, #132]	@ 0x84
 801f10e:	3b01      	subs	r3, #1
 801f110:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801f112:	fb00 5003 	mla	r0, r0, r3, r5
 801f116:	1400      	asrs	r0, r0, #16
 801f118:	f53f af16 	bmi.w	801ef48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f11c:	3901      	subs	r1, #1
 801f11e:	4288      	cmp	r0, r1
 801f120:	f6bf af12 	bge.w	801ef48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f124:	9922      	ldr	r1, [sp, #136]	@ 0x88
 801f126:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801f128:	fb01 0303 	mla	r3, r1, r3, r0
 801f12c:	141b      	asrs	r3, r3, #16
 801f12e:	f53f af0b 	bmi.w	801ef48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f132:	3a01      	subs	r2, #1
 801f134:	4293      	cmp	r3, r2
 801f136:	f6bf af07 	bge.w	801ef48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f13a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f13c:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 801f140:	9311      	str	r3, [sp, #68]	@ 0x44
 801f142:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f144:	930c      	str	r3, [sp, #48]	@ 0x30
 801f146:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801f148:	2b00      	cmp	r3, #0
 801f14a:	dc70      	bgt.n	801f22e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801f14c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f14e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801f150:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f154:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f158:	930a      	str	r3, [sp, #40]	@ 0x28
 801f15a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f15c:	2b00      	cmp	r3, #0
 801f15e:	f340 8124 	ble.w	801f3aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801f162:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f166:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801f168:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f16c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f170:	eef0 6a62 	vmov.f32	s13, s5
 801f174:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f178:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f17c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f180:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 801f184:	eef0 6a43 	vmov.f32	s13, s6
 801f188:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f18c:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 801f190:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f194:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f198:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f19c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f1a0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f1a4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f1a8:	ee12 2a90 	vmov	r2, s5
 801f1ac:	eef0 2a47 	vmov.f32	s5, s14
 801f1b0:	fb92 f3f3 	sdiv	r3, r2, r3
 801f1b4:	ee13 2a10 	vmov	r2, s6
 801f1b8:	9321      	str	r3, [sp, #132]	@ 0x84
 801f1ba:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801f1bc:	eeb0 3a67 	vmov.f32	s6, s15
 801f1c0:	fb92 f3f3 	sdiv	r3, r2, r3
 801f1c4:	9322      	str	r3, [sp, #136]	@ 0x88
 801f1c6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f1c8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801f1ca:	3b01      	subs	r3, #1
 801f1cc:	930e      	str	r3, [sp, #56]	@ 0x38
 801f1ce:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801f1d0:	bf08      	it	eq
 801f1d2:	4613      	moveq	r3, r2
 801f1d4:	9309      	str	r3, [sp, #36]	@ 0x24
 801f1d6:	e68c      	b.n	801eef2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801f1d8:	b149      	cbz	r1, 801f1ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801f1da:	5cb2      	ldrb	r2, [r6, r2]
 801f1dc:	4628      	mov	r0, r5
 801f1de:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f1e2:	4422      	add	r2, r4
 801f1e4:	46ac      	mov	ip, r5
 801f1e6:	e6f1      	b.n	801efcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f1e8:	4628      	mov	r0, r5
 801f1ea:	462a      	mov	r2, r5
 801f1ec:	e6ee      	b.n	801efcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f1ee:	4628      	mov	r0, r5
 801f1f0:	462a      	mov	r2, r5
 801f1f2:	e7f7      	b.n	801f1e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801f1f4:	1c47      	adds	r7, r0, #1
 801f1f6:	f53f af69 	bmi.w	801f0cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f1fa:	42ba      	cmp	r2, r7
 801f1fc:	f6ff af66 	blt.w	801f0cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f200:	1c6f      	adds	r7, r5, #1
 801f202:	f53f af63 	bmi.w	801f0cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f206:	42be      	cmp	r6, r7
 801f208:	f6ff af60 	blt.w	801f0cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f20c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801f20e:	b236      	sxth	r6, r6
 801f210:	b212      	sxth	r2, r2
 801f212:	9002      	str	r0, [sp, #8]
 801f214:	9601      	str	r6, [sp, #4]
 801f216:	9200      	str	r2, [sp, #0]
 801f218:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801f21a:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801f21e:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801f222:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 801f226:	4623      	mov	r3, r4
 801f228:	f7ff fd59 	bl	801ecde <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801f22c:	e74e      	b.n	801f0cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f22e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801f230:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801f232:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f236:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801f238:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801f23a:	1400      	asrs	r0, r0, #16
 801f23c:	142d      	asrs	r5, r5, #16
 801f23e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f240:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801f244:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801f248:	fb02 5000 	mla	r0, r2, r0, r5
 801f24c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f24e:	f815 9000 	ldrb.w	r9, [r5, r0]
 801f252:	182e      	adds	r6, r5, r0
 801f254:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801f258:	eb04 0509 	add.w	r5, r4, r9
 801f25c:	2b00      	cmp	r3, #0
 801f25e:	f000 8096 	beq.w	801f38e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801f262:	7877      	ldrb	r7, [r6, #1]
 801f264:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f268:	4427      	add	r7, r4
 801f26a:	2900      	cmp	r1, #0
 801f26c:	f000 8097 	beq.w	801f39e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801f270:	18b0      	adds	r0, r6, r2
 801f272:	5cb2      	ldrb	r2, [r6, r2]
 801f274:	7840      	ldrb	r0, [r0, #1]
 801f276:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f27a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f27e:	4422      	add	r2, r4
 801f280:	4420      	add	r0, r4
 801f282:	b29b      	uxth	r3, r3
 801f284:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801f286:	b289      	uxth	r1, r1
 801f288:	f895 b002 	ldrb.w	fp, [r5, #2]
 801f28c:	f8b6 c000 	ldrh.w	ip, [r6]
 801f290:	fb03 f801 	mul.w	r8, r3, r1
 801f294:	011b      	lsls	r3, r3, #4
 801f296:	78be      	ldrb	r6, [r7, #2]
 801f298:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801f29c:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801f2a0:	eba3 0308 	sub.w	r3, r3, r8
 801f2a4:	f814 9009 	ldrb.w	r9, [r4, r9]
 801f2a8:	b289      	uxth	r1, r1
 801f2aa:	b29b      	uxth	r3, r3
 801f2ac:	ebae 0e01 	sub.w	lr, lr, r1
 801f2b0:	435e      	muls	r6, r3
 801f2b2:	fa1f fe8e 	uxth.w	lr, lr
 801f2b6:	9310      	str	r3, [sp, #64]	@ 0x40
 801f2b8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f2ba:	fb0e 660b 	mla	r6, lr, fp, r6
 801f2be:	f892 b002 	ldrb.w	fp, [r2, #2]
 801f2c2:	fb01 660b 	mla	r6, r1, fp, r6
 801f2c6:	f890 b002 	ldrb.w	fp, [r0, #2]
 801f2ca:	fb08 660b 	mla	r6, r8, fp, r6
 801f2ce:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801f2d2:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801f2d6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801f2da:	fb1b fb03 	smulbb	fp, fp, r3
 801f2de:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f2e0:	fb06 b60a 	mla	r6, r6, sl, fp
 801f2e4:	f895 b001 	ldrb.w	fp, [r5, #1]
 801f2e8:	787d      	ldrb	r5, [r7, #1]
 801f2ea:	783f      	ldrb	r7, [r7, #0]
 801f2ec:	b2b6      	uxth	r6, r6
 801f2ee:	435d      	muls	r5, r3
 801f2f0:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f2f2:	fb0e 550b 	mla	r5, lr, fp, r5
 801f2f6:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f2fa:	fb01 550b 	mla	r5, r1, fp, r5
 801f2fe:	f890 b001 	ldrb.w	fp, [r0, #1]
 801f302:	fb08 550b 	mla	r5, r8, fp, r5
 801f306:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801f30a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f30e:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801f312:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f316:	fa5f fc8c 	uxtb.w	ip, ip
 801f31a:	fb1b fb03 	smulbb	fp, fp, r3
 801f31e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f320:	437b      	muls	r3, r7
 801f322:	7817      	ldrb	r7, [r2, #0]
 801f324:	fb05 b50a 	mla	r5, r5, sl, fp
 801f328:	fb0e 3309 	mla	r3, lr, r9, r3
 801f32c:	b2ad      	uxth	r5, r5
 801f32e:	fb01 3307 	mla	r3, r1, r7, r3
 801f332:	7807      	ldrb	r7, [r0, #0]
 801f334:	f105 0b01 	add.w	fp, r5, #1
 801f338:	fb08 3707 	mla	r7, r8, r7, r3
 801f33c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f33e:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801f342:	fb1c fc03 	smulbb	ip, ip, r3
 801f346:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f34a:	1c73      	adds	r3, r6, #1
 801f34c:	096d      	lsrs	r5, r5, #5
 801f34e:	fb07 c70a 	mla	r7, r7, sl, ip
 801f352:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801f356:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801f35a:	b2bf      	uxth	r7, r7
 801f35c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801f35e:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801f362:	1c7a      	adds	r2, r7, #1
 801f364:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801f368:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f36c:	4316      	orrs	r6, r2
 801f36e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801f370:	432e      	orrs	r6, r5
 801f372:	f823 6b02 	strh.w	r6, [r3], #2
 801f376:	930c      	str	r3, [sp, #48]	@ 0x30
 801f378:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f37a:	4413      	add	r3, r2
 801f37c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801f37e:	931f      	str	r3, [sp, #124]	@ 0x7c
 801f380:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f382:	4413      	add	r3, r2
 801f384:	9320      	str	r3, [sp, #128]	@ 0x80
 801f386:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801f388:	3b01      	subs	r3, #1
 801f38a:	9311      	str	r3, [sp, #68]	@ 0x44
 801f38c:	e6db      	b.n	801f146 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801f38e:	b149      	cbz	r1, 801f3a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801f390:	5cb2      	ldrb	r2, [r6, r2]
 801f392:	4628      	mov	r0, r5
 801f394:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f398:	4422      	add	r2, r4
 801f39a:	462f      	mov	r7, r5
 801f39c:	e771      	b.n	801f282 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801f39e:	4628      	mov	r0, r5
 801f3a0:	462a      	mov	r2, r5
 801f3a2:	e76e      	b.n	801f282 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801f3a4:	4628      	mov	r0, r5
 801f3a6:	462a      	mov	r2, r5
 801f3a8:	e7f7      	b.n	801f39a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f3aa:	b015      	add	sp, #84	@ 0x54
 801f3ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f3b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801f3b0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f3b4:	880f      	ldrh	r7, [r1, #0]
 801f3b6:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 801f3ba:	023c      	lsls	r4, r7, #8
 801f3bc:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801f3c0:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 801f3c4:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 801f3c8:	017c      	lsls	r4, r7, #5
 801f3ca:	00ff      	lsls	r7, r7, #3
 801f3cc:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801f3d0:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 801f3d4:	b2ff      	uxtb	r7, r7
 801f3d6:	ea4b 0404 	orr.w	r4, fp, r4
 801f3da:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 801f3de:	4327      	orrs	r7, r4
 801f3e0:	fb05 ca0e 	mla	sl, r5, lr, ip
 801f3e4:	2d00      	cmp	r5, #0
 801f3e6:	9701      	str	r7, [sp, #4]
 801f3e8:	eb02 080a 	add.w	r8, r2, sl
 801f3ec:	db7e      	blt.n	801f4ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801f3ee:	45a9      	cmp	r9, r5
 801f3f0:	dd7c      	ble.n	801f4ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801f3f2:	f1bc 0f00 	cmp.w	ip, #0
 801f3f6:	db77      	blt.n	801f4e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801f3f8:	45e6      	cmp	lr, ip
 801f3fa:	dd75      	ble.n	801f4e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801f3fc:	f812 700a 	ldrb.w	r7, [r2, sl]
 801f400:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f404:	441f      	add	r7, r3
 801f406:	f11c 0201 	adds.w	r2, ip, #1
 801f40a:	d472      	bmi.n	801f4f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f40c:	4596      	cmp	lr, r2
 801f40e:	dd70      	ble.n	801f4f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f410:	2800      	cmp	r0, #0
 801f412:	d06e      	beq.n	801f4f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f414:	f898 4001 	ldrb.w	r4, [r8, #1]
 801f418:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801f41c:	441c      	add	r4, r3
 801f41e:	3501      	adds	r5, #1
 801f420:	d46b      	bmi.n	801f4fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f422:	45a9      	cmp	r9, r5
 801f424:	dd69      	ble.n	801f4fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f426:	2e00      	cmp	r6, #0
 801f428:	d067      	beq.n	801f4fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f42a:	f1bc 0f00 	cmp.w	ip, #0
 801f42e:	db62      	blt.n	801f4f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801f430:	45e6      	cmp	lr, ip
 801f432:	dd60      	ble.n	801f4f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801f434:	f818 500e 	ldrb.w	r5, [r8, lr]
 801f438:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f43c:	441d      	add	r5, r3
 801f43e:	f11c 0201 	adds.w	r2, ip, #1
 801f442:	d45d      	bmi.n	801f500 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f444:	4596      	cmp	lr, r2
 801f446:	dd5b      	ble.n	801f500 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f448:	2800      	cmp	r0, #0
 801f44a:	d059      	beq.n	801f500 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f44c:	44c6      	add	lr, r8
 801f44e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801f452:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f456:	4413      	add	r3, r2
 801f458:	b280      	uxth	r0, r0
 801f45a:	f897 e002 	ldrb.w	lr, [r7, #2]
 801f45e:	b2b2      	uxth	r2, r6
 801f460:	f897 9000 	ldrb.w	r9, [r7]
 801f464:	787f      	ldrb	r7, [r7, #1]
 801f466:	fb00 f602 	mul.w	r6, r0, r2
 801f46a:	0100      	lsls	r0, r0, #4
 801f46c:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801f470:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 801f474:	1b80      	subs	r0, r0, r6
 801f476:	fa1f fc82 	uxth.w	ip, r2
 801f47a:	b282      	uxth	r2, r0
 801f47c:	78a0      	ldrb	r0, [r4, #2]
 801f47e:	eba8 080c 	sub.w	r8, r8, ip
 801f482:	4350      	muls	r0, r2
 801f484:	fa1f f888 	uxth.w	r8, r8
 801f488:	fb08 0e0e 	mla	lr, r8, lr, r0
 801f48c:	78a8      	ldrb	r0, [r5, #2]
 801f48e:	fb0c e000 	mla	r0, ip, r0, lr
 801f492:	f893 e002 	ldrb.w	lr, [r3, #2]
 801f496:	fb06 0e0e 	mla	lr, r6, lr, r0
 801f49a:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 801f49e:	f894 e000 	ldrb.w	lr, [r4]
 801f4a2:	fb02 fe0e 	mul.w	lr, r2, lr
 801f4a6:	fb08 e909 	mla	r9, r8, r9, lr
 801f4aa:	f895 e000 	ldrb.w	lr, [r5]
 801f4ae:	fb0c 990e 	mla	r9, ip, lr, r9
 801f4b2:	f893 e000 	ldrb.w	lr, [r3]
 801f4b6:	785b      	ldrb	r3, [r3, #1]
 801f4b8:	fb06 9e0e 	mla	lr, r6, lr, r9
 801f4bc:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801f4c0:	ea4e 0e00 	orr.w	lr, lr, r0
 801f4c4:	7860      	ldrb	r0, [r4, #1]
 801f4c6:	4350      	muls	r0, r2
 801f4c8:	786a      	ldrb	r2, [r5, #1]
 801f4ca:	fb08 0007 	mla	r0, r8, r7, r0
 801f4ce:	fb0c 0202 	mla	r2, ip, r2, r0
 801f4d2:	fb06 2303 	mla	r3, r6, r3, r2
 801f4d6:	095b      	lsrs	r3, r3, #5
 801f4d8:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f4dc:	ea4e 0303 	orr.w	r3, lr, r3
 801f4e0:	800b      	strh	r3, [r1, #0]
 801f4e2:	b003      	add	sp, #12
 801f4e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f4e8:	af01      	add	r7, sp, #4
 801f4ea:	e78c      	b.n	801f406 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801f4ec:	ac01      	add	r4, sp, #4
 801f4ee:	4627      	mov	r7, r4
 801f4f0:	e795      	b.n	801f41e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801f4f2:	ac01      	add	r4, sp, #4
 801f4f4:	e793      	b.n	801f41e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801f4f6:	ad01      	add	r5, sp, #4
 801f4f8:	e7a1      	b.n	801f43e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801f4fa:	ab01      	add	r3, sp, #4
 801f4fc:	461d      	mov	r5, r3
 801f4fe:	e7ab      	b.n	801f458 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801f500:	ab01      	add	r3, sp, #4
 801f502:	e7a9      	b.n	801f458 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801f504 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f504:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f508:	b08f      	sub	sp, #60	@ 0x3c
 801f50a:	920c      	str	r2, [sp, #48]	@ 0x30
 801f50c:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 801f50e:	900d      	str	r0, [sp, #52]	@ 0x34
 801f510:	910a      	str	r1, [sp, #40]	@ 0x28
 801f512:	6850      	ldr	r0, [r2, #4]
 801f514:	9306      	str	r3, [sp, #24]
 801f516:	6812      	ldr	r2, [r2, #0]
 801f518:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 801f51c:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 801f520:	fb00 1303 	mla	r3, r0, r3, r1
 801f524:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f528:	9307      	str	r3, [sp, #28]
 801f52a:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f52c:	681b      	ldr	r3, [r3, #0]
 801f52e:	9308      	str	r3, [sp, #32]
 801f530:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f532:	685c      	ldr	r4, [r3, #4]
 801f534:	3404      	adds	r4, #4
 801f536:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f538:	2b00      	cmp	r3, #0
 801f53a:	dc03      	bgt.n	801f544 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801f53c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801f53e:	2b00      	cmp	r3, #0
 801f540:	f340 81d5 	ble.w	801f8ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801f544:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f546:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f54a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f54e:	1e48      	subs	r0, r1, #1
 801f550:	1e56      	subs	r6, r2, #1
 801f552:	9b06      	ldr	r3, [sp, #24]
 801f554:	2b00      	cmp	r3, #0
 801f556:	f340 80b6 	ble.w	801f6c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801f55a:	ea5f 472b 	movs.w	r7, fp, asr #16
 801f55e:	ea4f 4325 	mov.w	r3, r5, asr #16
 801f562:	d406      	bmi.n	801f572 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f564:	4287      	cmp	r7, r0
 801f566:	da04      	bge.n	801f572 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f568:	2b00      	cmp	r3, #0
 801f56a:	db02      	blt.n	801f572 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801f56c:	42b3      	cmp	r3, r6
 801f56e:	f2c0 80ab 	blt.w	801f6c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801f572:	3701      	adds	r7, #1
 801f574:	f100 809c 	bmi.w	801f6b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801f578:	42b9      	cmp	r1, r7
 801f57a:	f2c0 8099 	blt.w	801f6b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801f57e:	3301      	adds	r3, #1
 801f580:	f100 8096 	bmi.w	801f6b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801f584:	429a      	cmp	r2, r3
 801f586:	f2c0 8093 	blt.w	801f6b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801f58a:	9b06      	ldr	r3, [sp, #24]
 801f58c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801f58e:	9b07      	ldr	r3, [sp, #28]
 801f590:	9309      	str	r3, [sp, #36]	@ 0x24
 801f592:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f594:	2b00      	cmp	r3, #0
 801f596:	f340 80b4 	ble.w	801f702 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801f59a:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801f59c:	142e      	asrs	r6, r5, #16
 801f59e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801f5a0:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801f5a4:	68c7      	ldr	r7, [r0, #12]
 801f5a6:	ea5f 402b 	movs.w	r0, fp, asr #16
 801f5aa:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801f5ae:	6892      	ldr	r2, [r2, #8]
 801f5b0:	f100 80fb 	bmi.w	801f7aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801f5b4:	f102 3cff 	add.w	ip, r2, #4294967295
 801f5b8:	4560      	cmp	r0, ip
 801f5ba:	f280 80f6 	bge.w	801f7aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801f5be:	2e00      	cmp	r6, #0
 801f5c0:	f2c0 80f3 	blt.w	801f7aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801f5c4:	f107 3cff 	add.w	ip, r7, #4294967295
 801f5c8:	4566      	cmp	r6, ip
 801f5ca:	f280 80ee 	bge.w	801f7aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 801f5ce:	b212      	sxth	r2, r2
 801f5d0:	fb06 0002 	mla	r0, r6, r2, r0
 801f5d4:	9e08      	ldr	r6, [sp, #32]
 801f5d6:	1837      	adds	r7, r6, r0
 801f5d8:	5c30      	ldrb	r0, [r6, r0]
 801f5da:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801f5de:	eb04 0c08 	add.w	ip, r4, r8
 801f5e2:	2b00      	cmp	r3, #0
 801f5e4:	f000 80d3 	beq.w	801f78e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28a>
 801f5e8:	787e      	ldrb	r6, [r7, #1]
 801f5ea:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801f5ee:	4426      	add	r6, r4
 801f5f0:	2900      	cmp	r1, #0
 801f5f2:	f000 80d4 	beq.w	801f79e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 801f5f6:	18b8      	adds	r0, r7, r2
 801f5f8:	5cba      	ldrb	r2, [r7, r2]
 801f5fa:	7840      	ldrb	r0, [r0, #1]
 801f5fc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f600:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f604:	4422      	add	r2, r4
 801f606:	4420      	add	r0, r4
 801f608:	b29b      	uxth	r3, r3
 801f60a:	78b7      	ldrb	r7, [r6, #2]
 801f60c:	b289      	uxth	r1, r1
 801f60e:	f89c a002 	ldrb.w	sl, [ip, #2]
 801f612:	f89c c001 	ldrb.w	ip, [ip, #1]
 801f616:	fb03 f901 	mul.w	r9, r3, r1
 801f61a:	011b      	lsls	r3, r3, #4
 801f61c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f620:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801f624:	eba3 0309 	sub.w	r3, r3, r9
 801f628:	b289      	uxth	r1, r1
 801f62a:	b29b      	uxth	r3, r3
 801f62c:	ebae 0e01 	sub.w	lr, lr, r1
 801f630:	435f      	muls	r7, r3
 801f632:	fa1f fe8e 	uxth.w	lr, lr
 801f636:	fb0e 770a 	mla	r7, lr, sl, r7
 801f63a:	f892 a002 	ldrb.w	sl, [r2, #2]
 801f63e:	fb01 770a 	mla	r7, r1, sl, r7
 801f642:	f890 a002 	ldrb.w	sl, [r0, #2]
 801f646:	fb09 7a0a 	mla	sl, r9, sl, r7
 801f64a:	f814 7008 	ldrb.w	r7, [r4, r8]
 801f64e:	f896 8000 	ldrb.w	r8, [r6]
 801f652:	7876      	ldrb	r6, [r6, #1]
 801f654:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801f658:	fb03 f808 	mul.w	r8, r3, r8
 801f65c:	4373      	muls	r3, r6
 801f65e:	fb0e 8807 	mla	r8, lr, r7, r8
 801f662:	7817      	ldrb	r7, [r2, #0]
 801f664:	fb0e 330c 	mla	r3, lr, ip, r3
 801f668:	fb01 8807 	mla	r8, r1, r7, r8
 801f66c:	7807      	ldrb	r7, [r0, #0]
 801f66e:	fb09 8707 	mla	r7, r9, r7, r8
 801f672:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f676:	ea47 070a 	orr.w	r7, r7, sl
 801f67a:	f892 a001 	ldrb.w	sl, [r2, #1]
 801f67e:	fb01 310a 	mla	r1, r1, sl, r3
 801f682:	f890 a001 	ldrb.w	sl, [r0, #1]
 801f686:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f688:	fb09 1a0a 	mla	sl, r9, sl, r1
 801f68c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f690:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801f694:	ea47 070a 	orr.w	r7, r7, sl
 801f698:	801f      	strh	r7, [r3, #0]
 801f69a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f69c:	3302      	adds	r3, #2
 801f69e:	9309      	str	r3, [sp, #36]	@ 0x24
 801f6a0:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801f6a2:	449b      	add	fp, r3
 801f6a4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f6a6:	441d      	add	r5, r3
 801f6a8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f6aa:	3b01      	subs	r3, #1
 801f6ac:	930b      	str	r3, [sp, #44]	@ 0x2c
 801f6ae:	e770      	b.n	801f592 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801f6b0:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801f6b2:	449b      	add	fp, r3
 801f6b4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f6b6:	441d      	add	r5, r3
 801f6b8:	9b06      	ldr	r3, [sp, #24]
 801f6ba:	3b01      	subs	r3, #1
 801f6bc:	9306      	str	r3, [sp, #24]
 801f6be:	9b07      	ldr	r3, [sp, #28]
 801f6c0:	3302      	adds	r3, #2
 801f6c2:	9307      	str	r3, [sp, #28]
 801f6c4:	e745      	b.n	801f552 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801f6c6:	d023      	beq.n	801f710 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 801f6c8:	9b06      	ldr	r3, [sp, #24]
 801f6ca:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801f6cc:	3b01      	subs	r3, #1
 801f6ce:	fb00 b003 	mla	r0, r0, r3, fp
 801f6d2:	1400      	asrs	r0, r0, #16
 801f6d4:	f53f af59 	bmi.w	801f58a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801f6d8:	3901      	subs	r1, #1
 801f6da:	4288      	cmp	r0, r1
 801f6dc:	f6bf af55 	bge.w	801f58a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801f6e0:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801f6e2:	fb01 5303 	mla	r3, r1, r3, r5
 801f6e6:	141b      	asrs	r3, r3, #16
 801f6e8:	f53f af4f 	bmi.w	801f58a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801f6ec:	3a01      	subs	r2, #1
 801f6ee:	4293      	cmp	r3, r2
 801f6f0:	f6bf af4b 	bge.w	801f58a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801f6f4:	9b06      	ldr	r3, [sp, #24]
 801f6f6:	9309      	str	r3, [sp, #36]	@ 0x24
 801f6f8:	9b07      	ldr	r3, [sp, #28]
 801f6fa:	930b      	str	r3, [sp, #44]	@ 0x2c
 801f6fc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f6fe:	2b00      	cmp	r3, #0
 801f700:	dc70      	bgt.n	801f7e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801f702:	9b06      	ldr	r3, [sp, #24]
 801f704:	9a07      	ldr	r2, [sp, #28]
 801f706:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f70a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f70e:	9307      	str	r3, [sp, #28]
 801f710:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f712:	2b00      	cmp	r3, #0
 801f714:	f340 80eb 	ble.w	801f8ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801f718:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f71c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801f71e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f722:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f726:	eef0 6a62 	vmov.f32	s13, s5
 801f72a:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f72e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f732:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f736:	ee16 ba90 	vmov	fp, s13
 801f73a:	eef0 6a43 	vmov.f32	s13, s6
 801f73e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f742:	ee16 5a90 	vmov	r5, s13
 801f746:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f74a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f74e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f752:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f756:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f75a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f75e:	ee12 2a90 	vmov	r2, s5
 801f762:	eef0 2a47 	vmov.f32	s5, s14
 801f766:	fb92 f3f3 	sdiv	r3, r2, r3
 801f76a:	ee13 2a10 	vmov	r2, s6
 801f76e:	931b      	str	r3, [sp, #108]	@ 0x6c
 801f770:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801f772:	eeb0 3a67 	vmov.f32	s6, s15
 801f776:	fb92 f3f3 	sdiv	r3, r2, r3
 801f77a:	931c      	str	r3, [sp, #112]	@ 0x70
 801f77c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f77e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801f780:	3b01      	subs	r3, #1
 801f782:	930a      	str	r3, [sp, #40]	@ 0x28
 801f784:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801f786:	bf08      	it	eq
 801f788:	4613      	moveq	r3, r2
 801f78a:	9306      	str	r3, [sp, #24]
 801f78c:	e6d3      	b.n	801f536 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801f78e:	b149      	cbz	r1, 801f7a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 801f790:	5cba      	ldrb	r2, [r7, r2]
 801f792:	4660      	mov	r0, ip
 801f794:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f798:	4422      	add	r2, r4
 801f79a:	4666      	mov	r6, ip
 801f79c:	e734      	b.n	801f608 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 801f79e:	4660      	mov	r0, ip
 801f7a0:	4662      	mov	r2, ip
 801f7a2:	e731      	b.n	801f608 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x104>
 801f7a4:	4660      	mov	r0, ip
 801f7a6:	4662      	mov	r2, ip
 801f7a8:	e7f7      	b.n	801f79a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801f7aa:	f110 0c01 	adds.w	ip, r0, #1
 801f7ae:	f53f af74 	bmi.w	801f69a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801f7b2:	4562      	cmp	r2, ip
 801f7b4:	f6ff af71 	blt.w	801f69a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801f7b8:	f116 0c01 	adds.w	ip, r6, #1
 801f7bc:	f53f af6d 	bmi.w	801f69a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801f7c0:	4567      	cmp	r7, ip
 801f7c2:	f6ff af6a 	blt.w	801f69a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801f7c6:	b23f      	sxth	r7, r7
 801f7c8:	b212      	sxth	r2, r2
 801f7ca:	9701      	str	r7, [sp, #4]
 801f7cc:	9200      	str	r2, [sp, #0]
 801f7ce:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801f7d2:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801f7d6:	4623      	mov	r3, r4
 801f7d8:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801f7da:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801f7de:	f7ff fde7 	bl	801f3b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801f7e2:	e75a      	b.n	801f69a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801f7e4:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801f7e6:	ea4f 462b 	mov.w	r6, fp, asr #16
 801f7ea:	1428      	asrs	r0, r5, #16
 801f7ec:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801f7f0:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801f7f4:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801f7f8:	fb02 6000 	mla	r0, r2, r0, r6
 801f7fc:	9e08      	ldr	r6, [sp, #32]
 801f7fe:	f816 8000 	ldrb.w	r8, [r6, r0]
 801f802:	1837      	adds	r7, r6, r0
 801f804:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801f808:	eb04 0c08 	add.w	ip, r4, r8
 801f80c:	2b00      	cmp	r3, #0
 801f80e:	d060      	beq.n	801f8d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ce>
 801f810:	787e      	ldrb	r6, [r7, #1]
 801f812:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801f816:	4426      	add	r6, r4
 801f818:	2900      	cmp	r1, #0
 801f81a:	d062      	beq.n	801f8e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3de>
 801f81c:	18b8      	adds	r0, r7, r2
 801f81e:	5cba      	ldrb	r2, [r7, r2]
 801f820:	7840      	ldrb	r0, [r0, #1]
 801f822:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f826:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f82a:	4422      	add	r2, r4
 801f82c:	4420      	add	r0, r4
 801f82e:	b29b      	uxth	r3, r3
 801f830:	78b7      	ldrb	r7, [r6, #2]
 801f832:	b289      	uxth	r1, r1
 801f834:	f89c a002 	ldrb.w	sl, [ip, #2]
 801f838:	f89c c001 	ldrb.w	ip, [ip, #1]
 801f83c:	fb03 f901 	mul.w	r9, r3, r1
 801f840:	011b      	lsls	r3, r3, #4
 801f842:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f846:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801f84a:	eba3 0309 	sub.w	r3, r3, r9
 801f84e:	b289      	uxth	r1, r1
 801f850:	b29b      	uxth	r3, r3
 801f852:	ebae 0e01 	sub.w	lr, lr, r1
 801f856:	435f      	muls	r7, r3
 801f858:	fa1f fe8e 	uxth.w	lr, lr
 801f85c:	fb0e 770a 	mla	r7, lr, sl, r7
 801f860:	f892 a002 	ldrb.w	sl, [r2, #2]
 801f864:	fb01 770a 	mla	r7, r1, sl, r7
 801f868:	f890 a002 	ldrb.w	sl, [r0, #2]
 801f86c:	fb09 7a0a 	mla	sl, r9, sl, r7
 801f870:	f814 7008 	ldrb.w	r7, [r4, r8]
 801f874:	f896 8000 	ldrb.w	r8, [r6]
 801f878:	7876      	ldrb	r6, [r6, #1]
 801f87a:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801f87e:	fb03 f808 	mul.w	r8, r3, r8
 801f882:	4373      	muls	r3, r6
 801f884:	7856      	ldrb	r6, [r2, #1]
 801f886:	fb0e 8807 	mla	r8, lr, r7, r8
 801f88a:	7817      	ldrb	r7, [r2, #0]
 801f88c:	fb0e 330c 	mla	r3, lr, ip, r3
 801f890:	fb01 8807 	mla	r8, r1, r7, r8
 801f894:	7807      	ldrb	r7, [r0, #0]
 801f896:	fb01 3306 	mla	r3, r1, r6, r3
 801f89a:	fb09 8707 	mla	r7, r9, r7, r8
 801f89e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f8a2:	ea47 070a 	orr.w	r7, r7, sl
 801f8a6:	f890 a001 	ldrb.w	sl, [r0, #1]
 801f8aa:	fb09 3a0a 	mla	sl, r9, sl, r3
 801f8ae:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f8b0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801f8b4:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801f8b8:	ea47 070a 	orr.w	r7, r7, sl
 801f8bc:	f823 7b02 	strh.w	r7, [r3], #2
 801f8c0:	930b      	str	r3, [sp, #44]	@ 0x2c
 801f8c2:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801f8c4:	449b      	add	fp, r3
 801f8c6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f8c8:	441d      	add	r5, r3
 801f8ca:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f8cc:	3b01      	subs	r3, #1
 801f8ce:	9309      	str	r3, [sp, #36]	@ 0x24
 801f8d0:	e714      	b.n	801f6fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f8>
 801f8d2:	b149      	cbz	r1, 801f8e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 801f8d4:	5cba      	ldrb	r2, [r7, r2]
 801f8d6:	4660      	mov	r0, ip
 801f8d8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f8dc:	4422      	add	r2, r4
 801f8de:	4666      	mov	r6, ip
 801f8e0:	e7a5      	b.n	801f82e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801f8e2:	4660      	mov	r0, ip
 801f8e4:	4662      	mov	r2, ip
 801f8e6:	e7a2      	b.n	801f82e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32a>
 801f8e8:	4660      	mov	r0, ip
 801f8ea:	4662      	mov	r2, ip
 801f8ec:	e7f7      	b.n	801f8de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3da>
 801f8ee:	b00f      	add	sp, #60	@ 0x3c
 801f8f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f8f4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801f8f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f8f8:	b085      	sub	sp, #20
 801f8fa:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 801f8fe:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 801f902:	9102      	str	r1, [sp, #8]
 801f904:	2c00      	cmp	r4, #0
 801f906:	fb04 710c 	mla	r1, r4, ip, r7
 801f90a:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 801f90e:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 801f912:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801f916:	eb02 0e01 	add.w	lr, r2, r1
 801f91a:	f2c0 8122 	blt.w	801fb62 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801f91e:	45a0      	cmp	r8, r4
 801f920:	f340 811f 	ble.w	801fb62 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801f924:	2f00      	cmp	r7, #0
 801f926:	f2c0 811a 	blt.w	801fb5e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801f92a:	45bc      	cmp	ip, r7
 801f92c:	f340 8117 	ble.w	801fb5e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801f930:	5c52      	ldrb	r2, [r2, r1]
 801f932:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801f936:	1c7a      	adds	r2, r7, #1
 801f938:	f100 8116 	bmi.w	801fb68 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801f93c:	4594      	cmp	ip, r2
 801f93e:	f340 8113 	ble.w	801fb68 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801f942:	2e00      	cmp	r6, #0
 801f944:	f000 8112 	beq.w	801fb6c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801f948:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801f94c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801f950:	3401      	adds	r4, #1
 801f952:	f100 810f 	bmi.w	801fb74 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801f956:	45a0      	cmp	r8, r4
 801f958:	f340 810c 	ble.w	801fb74 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801f95c:	2800      	cmp	r0, #0
 801f95e:	f000 810c 	beq.w	801fb7a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801f962:	2f00      	cmp	r7, #0
 801f964:	f2c0 8104 	blt.w	801fb70 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801f968:	45bc      	cmp	ip, r7
 801f96a:	f340 8101 	ble.w	801fb70 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801f96e:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801f972:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801f976:	3701      	adds	r7, #1
 801f978:	f100 8102 	bmi.w	801fb80 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801f97c:	45bc      	cmp	ip, r7
 801f97e:	f340 80ff 	ble.w	801fb80 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801f982:	2e00      	cmp	r6, #0
 801f984:	f000 80fe 	beq.w	801fb84 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801f988:	44f4      	add	ip, lr
 801f98a:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801f98e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801f992:	b2b6      	uxth	r6, r6
 801f994:	b280      	uxth	r0, r0
 801f996:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801f99a:	fb00 fe06 	mul.w	lr, r0, r6
 801f99e:	0136      	lsls	r6, r6, #4
 801f9a0:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801f9a4:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801f9a8:	eba6 070e 	sub.w	r7, r6, lr
 801f9ac:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801f9b0:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801f9b4:	b280      	uxth	r0, r0
 801f9b6:	b2bf      	uxth	r7, r7
 801f9b8:	1a1b      	subs	r3, r3, r0
 801f9ba:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801f9be:	fb0a f607 	mul.w	r6, sl, r7
 801f9c2:	b29b      	uxth	r3, r3
 801f9c4:	fb0b 6603 	mla	r6, fp, r3, r6
 801f9c8:	fb00 6609 	mla	r6, r0, r9, r6
 801f9cc:	fb0e 6608 	mla	r6, lr, r8, r6
 801f9d0:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801f9d4:	9600      	str	r6, [sp, #0]
 801f9d6:	2e00      	cmp	r6, #0
 801f9d8:	f000 80be 	beq.w	801fb58 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801f9dc:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801f9e0:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801f9e4:	9e02      	ldr	r6, [sp, #8]
 801f9e6:	fb0b fc0c 	mul.w	ip, fp, ip
 801f9ea:	fb0b f505 	mul.w	r5, fp, r5
 801f9ee:	8836      	ldrh	r6, [r6, #0]
 801f9f0:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801f9f4:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801f9f8:	9501      	str	r5, [sp, #4]
 801f9fa:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801f9fe:	44dc      	add	ip, fp
 801fa00:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fa04:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801fa08:	9503      	str	r5, [sp, #12]
 801fa0a:	9d01      	ldr	r5, [sp, #4]
 801fa0c:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801fa10:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801fa14:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801fa18:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801fa1c:	fb0a fc0c 	mul.w	ip, sl, ip
 801fa20:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801fa24:	fb0a fa01 	mul.w	sl, sl, r1
 801fa28:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801fa2c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801fa30:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801fa34:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801fa38:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801fa3c:	4465      	add	r5, ip
 801fa3e:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801fa42:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801fa46:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fa4a:	fb09 fc0c 	mul.w	ip, r9, ip
 801fa4e:	0a2d      	lsrs	r5, r5, #8
 801fa50:	fb09 f904 	mul.w	r9, r9, r4
 801fa54:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801fa58:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801fa5c:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801fa60:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801fa64:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801fa68:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801fa6c:	437d      	muls	r5, r7
 801fa6e:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801fa72:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801fa76:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801fa7a:	4461      	add	r1, ip
 801fa7c:	fb08 f404 	mul.w	r4, r8, r4
 801fa80:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801fa84:	fb08 f802 	mul.w	r8, r8, r2
 801fa88:	0a09      	lsrs	r1, r1, #8
 801fa8a:	0a22      	lsrs	r2, r4, #8
 801fa8c:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801fa90:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801fa94:	fb07 f70a 	mul.w	r7, r7, sl
 801fa98:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801fa9c:	4414      	add	r4, r2
 801fa9e:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801faa2:	0a24      	lsrs	r4, r4, #8
 801faa4:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801faa8:	9a03      	ldr	r2, [sp, #12]
 801faaa:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801faae:	fb02 5503 	mla	r5, r2, r3, r5
 801fab2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801fab6:	9a00      	ldr	r2, [sp, #0]
 801fab8:	fb04 540e 	mla	r4, r4, lr, r5
 801fabc:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 801fac0:	1235      	asrs	r5, r6, #8
 801fac2:	fb01 4100 	mla	r1, r1, r0, r4
 801fac6:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801faca:	0a09      	lsrs	r1, r1, #8
 801facc:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801fad0:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801fad4:	fb03 7101 	mla	r1, r3, r1, r7
 801fad8:	fb0e 1e08 	mla	lr, lr, r8, r1
 801fadc:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 801fae0:	fb00 e101 	mla	r1, r0, r1, lr
 801fae4:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 801fae8:	b287      	uxth	r7, r0
 801faea:	0a09      	lsrs	r1, r1, #8
 801faec:	437a      	muls	r2, r7
 801faee:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801faf2:	1c53      	adds	r3, r2, #1
 801faf4:	4321      	orrs	r1, r4
 801faf6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fafa:	0c0a      	lsrs	r2, r1, #16
 801fafc:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801fb00:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801fb04:	b2c8      	uxtb	r0, r1
 801fb06:	fb12 f207 	smulbb	r2, r2, r7
 801fb0a:	fb14 f407 	smulbb	r4, r4, r7
 801fb0e:	b2db      	uxtb	r3, r3
 801fb10:	fb10 f007 	smulbb	r0, r0, r7
 801fb14:	fb05 2503 	mla	r5, r5, r3, r2
 801fb18:	10f2      	asrs	r2, r6, #3
 801fb1a:	00f6      	lsls	r6, r6, #3
 801fb1c:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801fb20:	b2ad      	uxth	r5, r5
 801fb22:	b2f6      	uxtb	r6, r6
 801fb24:	fb02 4203 	mla	r2, r2, r3, r4
 801fb28:	fb06 0303 	mla	r3, r6, r3, r0
 801fb2c:	b294      	uxth	r4, r2
 801fb2e:	b299      	uxth	r1, r3
 801fb30:	1c6b      	adds	r3, r5, #1
 801fb32:	1c62      	adds	r2, r4, #1
 801fb34:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801fb38:	1c4b      	adds	r3, r1, #1
 801fb3a:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801fb3e:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801fb42:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801fb46:	0952      	lsrs	r2, r2, #5
 801fb48:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fb4c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801fb50:	432b      	orrs	r3, r5
 801fb52:	4313      	orrs	r3, r2
 801fb54:	9a02      	ldr	r2, [sp, #8]
 801fb56:	8013      	strh	r3, [r2, #0]
 801fb58:	b005      	add	sp, #20
 801fb5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fb5e:	2500      	movs	r5, #0
 801fb60:	e6e9      	b.n	801f936 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801fb62:	2100      	movs	r1, #0
 801fb64:	460d      	mov	r5, r1
 801fb66:	e6f3      	b.n	801f950 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801fb68:	2100      	movs	r1, #0
 801fb6a:	e6f1      	b.n	801f950 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801fb6c:	4631      	mov	r1, r6
 801fb6e:	e6ef      	b.n	801f950 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801fb70:	2400      	movs	r4, #0
 801fb72:	e700      	b.n	801f976 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801fb74:	2200      	movs	r2, #0
 801fb76:	4614      	mov	r4, r2
 801fb78:	e70b      	b.n	801f992 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801fb7a:	4602      	mov	r2, r0
 801fb7c:	4604      	mov	r4, r0
 801fb7e:	e708      	b.n	801f992 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801fb80:	2200      	movs	r2, #0
 801fb82:	e706      	b.n	801f992 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801fb84:	4632      	mov	r2, r6
 801fb86:	e704      	b.n	801f992 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801fb88 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fb88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fb8c:	b09f      	sub	sp, #124	@ 0x7c
 801fb8e:	921b      	str	r2, [sp, #108]	@ 0x6c
 801fb90:	9309      	str	r3, [sp, #36]	@ 0x24
 801fb92:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 801fb94:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 801fb98:	901d      	str	r0, [sp, #116]	@ 0x74
 801fb9a:	931c      	str	r3, [sp, #112]	@ 0x70
 801fb9c:	6850      	ldr	r0, [r2, #4]
 801fb9e:	9119      	str	r1, [sp, #100]	@ 0x64
 801fba0:	6812      	ldr	r2, [r2, #0]
 801fba2:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 801fba4:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 801fba8:	fb00 1303 	mla	r3, r0, r3, r1
 801fbac:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fbb0:	930c      	str	r3, [sp, #48]	@ 0x30
 801fbb2:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801fbb4:	681b      	ldr	r3, [r3, #0]
 801fbb6:	9312      	str	r3, [sp, #72]	@ 0x48
 801fbb8:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801fbba:	685e      	ldr	r6, [r3, #4]
 801fbbc:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 801fbc0:	3604      	adds	r6, #4
 801fbc2:	930d      	str	r3, [sp, #52]	@ 0x34
 801fbc4:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801fbc6:	2b00      	cmp	r3, #0
 801fbc8:	dc03      	bgt.n	801fbd2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801fbca:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801fbcc:	2b00      	cmp	r3, #0
 801fbce:	f340 8387 	ble.w	80202e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 801fbd2:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801fbd4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fbd8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fbdc:	1e48      	subs	r0, r1, #1
 801fbde:	1e57      	subs	r7, r2, #1
 801fbe0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fbe2:	2b00      	cmp	r3, #0
 801fbe4:	f340 8194 	ble.w	801ff10 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>
 801fbe8:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801fbea:	142b      	asrs	r3, r5, #16
 801fbec:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801fbf0:	d406      	bmi.n	801fc00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801fbf2:	4584      	cmp	ip, r0
 801fbf4:	da04      	bge.n	801fc00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801fbf6:	2b00      	cmp	r3, #0
 801fbf8:	db02      	blt.n	801fc00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801fbfa:	42bb      	cmp	r3, r7
 801fbfc:	f2c0 8189 	blt.w	801ff12 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801fc00:	f11c 0c01 	adds.w	ip, ip, #1
 801fc04:	f100 8177 	bmi.w	801fef6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801fc08:	4561      	cmp	r1, ip
 801fc0a:	f2c0 8174 	blt.w	801fef6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801fc0e:	3301      	adds	r3, #1
 801fc10:	f100 8171 	bmi.w	801fef6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801fc14:	429a      	cmp	r2, r3
 801fc16:	f2c0 816e 	blt.w	801fef6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36e>
 801fc1a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fc1c:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801fc1e:	931a      	str	r3, [sp, #104]	@ 0x68
 801fc20:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801fc22:	2b00      	cmp	r3, #0
 801fc24:	f340 8193 	ble.w	801ff4e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 801fc28:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801fc2a:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801fc2e:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801fc32:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801fc36:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 801fc38:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801fc3c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 801fc3e:	141b      	asrs	r3, r3, #16
 801fc40:	f100 81d6 	bmi.w	801fff0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801fc44:	f100 38ff 	add.w	r8, r0, #4294967295
 801fc48:	4543      	cmp	r3, r8
 801fc4a:	f280 81d1 	bge.w	801fff0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801fc4e:	f1bc 0f00 	cmp.w	ip, #0
 801fc52:	f2c0 81cd 	blt.w	801fff0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801fc56:	f10e 38ff 	add.w	r8, lr, #4294967295
 801fc5a:	45c4      	cmp	ip, r8
 801fc5c:	f280 81c8 	bge.w	801fff0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x468>
 801fc60:	b200      	sxth	r0, r0
 801fc62:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801fc64:	fb0c 3300 	mla	r3, ip, r0, r3
 801fc68:	eb04 0803 	add.w	r8, r4, r3
 801fc6c:	5ce3      	ldrb	r3, [r4, r3]
 801fc6e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801fc72:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801fc76:	2a00      	cmp	r2, #0
 801fc78:	f000 81af 	beq.w	801ffda <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801fc7c:	f898 c001 	ldrb.w	ip, [r8, #1]
 801fc80:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801fc84:	940e      	str	r4, [sp, #56]	@ 0x38
 801fc86:	0e24      	lsrs	r4, r4, #24
 801fc88:	9415      	str	r4, [sp, #84]	@ 0x54
 801fc8a:	b179      	cbz	r1, 801fcac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801fc8c:	eb08 0c00 	add.w	ip, r8, r0
 801fc90:	f818 0000 	ldrb.w	r0, [r8, r0]
 801fc94:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801fc98:	900a      	str	r0, [sp, #40]	@ 0x28
 801fc9a:	0e00      	lsrs	r0, r0, #24
 801fc9c:	9013      	str	r0, [sp, #76]	@ 0x4c
 801fc9e:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801fca2:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801fca6:	900f      	str	r0, [sp, #60]	@ 0x3c
 801fca8:	0e00      	lsrs	r0, r0, #24
 801fcaa:	9016      	str	r0, [sp, #88]	@ 0x58
 801fcac:	b292      	uxth	r2, r2
 801fcae:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801fcb0:	b289      	uxth	r1, r1
 801fcb2:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801fcb4:	fb02 f901 	mul.w	r9, r2, r1
 801fcb8:	0112      	lsls	r2, r2, #4
 801fcba:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801fcbe:	eba2 0809 	sub.w	r8, r2, r9
 801fcc2:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 801fcc6:	b289      	uxth	r1, r1
 801fcc8:	fa1f f888 	uxth.w	r8, r8
 801fccc:	1a52      	subs	r2, r2, r1
 801fcce:	fb08 f000 	mul.w	r0, r8, r0
 801fcd2:	b292      	uxth	r2, r2
 801fcd4:	fb02 000e 	mla	r0, r2, lr, r0
 801fcd8:	fb01 0004 	mla	r0, r1, r4, r0
 801fcdc:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801fcde:	fb09 0004 	mla	r0, r9, r4, r0
 801fce2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801fce6:	2800      	cmp	r0, #0
 801fce8:	f000 80fa 	beq.w	801fee0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801fcec:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 801fcf0:	d01b      	beq.n	801fd2a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 801fcf2:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 801fcf6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801fcfa:	fb0e fa0a 	mul.w	sl, lr, sl
 801fcfe:	fb0e fe03 	mul.w	lr, lr, r3
 801fd02:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801fd06:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 801fd0a:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 801fd0e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801fd12:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801fd16:	4453      	add	r3, sl
 801fd18:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fd1c:	0a1b      	lsrs	r3, r3, #8
 801fd1e:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 801fd22:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 801fd26:	ea43 030c 	orr.w	r3, r3, ip
 801fd2a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801fd2c:	2cff      	cmp	r4, #255	@ 0xff
 801fd2e:	d021      	beq.n	801fd74 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 801fd30:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801fd32:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801fd36:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801fd38:	fb04 fb0b 	mul.w	fp, r4, fp
 801fd3c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801fd3e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801fd42:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 801fd44:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801fd48:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801fd4c:	fb04 fa0a 	mul.w	sl, r4, sl
 801fd50:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801fd54:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801fd58:	44de      	add	lr, fp
 801fd5a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801fd5e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801fd62:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fd66:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801fd6a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801fd6e:	ea4e 040a 	orr.w	r4, lr, sl
 801fd72:	940e      	str	r4, [sp, #56]	@ 0x38
 801fd74:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801fd76:	2cff      	cmp	r4, #255	@ 0xff
 801fd78:	d021      	beq.n	801fdbe <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801fd7a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801fd7c:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801fd80:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801fd82:	fb04 fb0b 	mul.w	fp, r4, fp
 801fd86:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801fd88:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801fd8c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 801fd8e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801fd92:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801fd96:	fb04 fa0a 	mul.w	sl, r4, sl
 801fd9a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801fd9e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801fda2:	44de      	add	lr, fp
 801fda4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801fda8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801fdac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fdb0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801fdb4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801fdb8:	ea4e 040a 	orr.w	r4, lr, sl
 801fdbc:	940a      	str	r4, [sp, #40]	@ 0x28
 801fdbe:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801fdc0:	2cff      	cmp	r4, #255	@ 0xff
 801fdc2:	d021      	beq.n	801fe08 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x280>
 801fdc4:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801fdc6:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 801fdca:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801fdcc:	fb04 fb0b 	mul.w	fp, r4, fp
 801fdd0:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801fdd2:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 801fdd6:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 801fdd8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801fddc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 801fde0:	fb04 fa0a 	mul.w	sl, r4, sl
 801fde4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801fde8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 801fdec:	44de      	add	lr, fp
 801fdee:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801fdf2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801fdf6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fdfa:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 801fdfe:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801fe02:	ea4e 040a 	orr.w	r4, lr, sl
 801fe06:	940f      	str	r4, [sp, #60]	@ 0x3c
 801fe08:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801fe0a:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 801fe0e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 801fe12:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801fe16:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801fe18:	fb08 fc0c 	mul.w	ip, r8, ip
 801fe1c:	fb02 cc0e 	mla	ip, r2, lr, ip
 801fe20:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801fe24:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 801fe26:	fb01 cc0e 	mla	ip, r1, lr, ip
 801fe2a:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 801fe2e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 801fe30:	fb09 cc0e 	mla	ip, r9, lr, ip
 801fe34:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 801fe38:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801fe3a:	fb08 f80e 	mul.w	r8, r8, lr
 801fe3e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fe42:	fb02 8303 	mla	r3, r2, r3, r8
 801fe46:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801fe48:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 801fe4c:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 801fe50:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801fe52:	fb01 330a 	mla	r3, r1, sl, r3
 801fe56:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 801fe5a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801fe5c:	fb09 3901 	mla	r9, r9, r1, r3
 801fe60:	883b      	ldrh	r3, [r7, #0]
 801fe62:	4342      	muls	r2, r0
 801fe64:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801fe68:	1c50      	adds	r0, r2, #1
 801fe6a:	1219      	asrs	r1, r3, #8
 801fe6c:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 801fe70:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801fe74:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801fe78:	ea4c 0c09 	orr.w	ip, ip, r9
 801fe7c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801fe80:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801fe84:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801fe88:	b2c0      	uxtb	r0, r0
 801fe8a:	fb12 f204 	smulbb	r2, r2, r4
 801fe8e:	fa5f fc8c 	uxtb.w	ip, ip
 801fe92:	fb1e fe04 	smulbb	lr, lr, r4
 801fe96:	fb01 2100 	mla	r1, r1, r0, r2
 801fe9a:	10da      	asrs	r2, r3, #3
 801fe9c:	fb1c fc04 	smulbb	ip, ip, r4
 801fea0:	00db      	lsls	r3, r3, #3
 801fea2:	b289      	uxth	r1, r1
 801fea4:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801fea8:	b2db      	uxtb	r3, r3
 801feaa:	fb02 e200 	mla	r2, r2, r0, lr
 801feae:	fb03 c300 	mla	r3, r3, r0, ip
 801feb2:	b292      	uxth	r2, r2
 801feb4:	fa1f fc83 	uxth.w	ip, r3
 801feb8:	1c4b      	adds	r3, r1, #1
 801feba:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801febe:	f10c 0301 	add.w	r3, ip, #1
 801fec2:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801fec6:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801feca:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fece:	430b      	orrs	r3, r1
 801fed0:	1c51      	adds	r1, r2, #1
 801fed2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801fed6:	0952      	lsrs	r2, r2, #5
 801fed8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801fedc:	4313      	orrs	r3, r2
 801fede:	803b      	strh	r3, [r7, #0]
 801fee0:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801fee2:	3702      	adds	r7, #2
 801fee4:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 801fee6:	441a      	add	r2, r3
 801fee8:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801feea:	441d      	add	r5, r3
 801feec:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 801feee:	9229      	str	r2, [sp, #164]	@ 0xa4
 801fef0:	3b01      	subs	r3, #1
 801fef2:	931a      	str	r3, [sp, #104]	@ 0x68
 801fef4:	e694      	b.n	801fc20 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801fef6:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 801fef8:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801fefa:	441c      	add	r4, r3
 801fefc:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 801fefe:	441d      	add	r5, r3
 801ff00:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ff02:	9429      	str	r4, [sp, #164]	@ 0xa4
 801ff04:	3b01      	subs	r3, #1
 801ff06:	9309      	str	r3, [sp, #36]	@ 0x24
 801ff08:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ff0a:	3302      	adds	r3, #2
 801ff0c:	930c      	str	r3, [sp, #48]	@ 0x30
 801ff0e:	e667      	b.n	801fbe0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801ff10:	d024      	beq.n	801ff5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 801ff12:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ff14:	982b      	ldr	r0, [sp, #172]	@ 0xac
 801ff16:	3b01      	subs	r3, #1
 801ff18:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 801ff1a:	fb00 4003 	mla	r0, r0, r3, r4
 801ff1e:	1400      	asrs	r0, r0, #16
 801ff20:	f53f ae7b 	bmi.w	801fc1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ff24:	3901      	subs	r1, #1
 801ff26:	4288      	cmp	r0, r1
 801ff28:	f6bf ae77 	bge.w	801fc1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ff2c:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 801ff2e:	fb01 5303 	mla	r3, r1, r3, r5
 801ff32:	141b      	asrs	r3, r3, #16
 801ff34:	f53f ae71 	bmi.w	801fc1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ff38:	3a01      	subs	r2, #1
 801ff3a:	4293      	cmp	r3, r2
 801ff3c:	f6bf ae6d 	bge.w	801fc1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ff40:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801ff44:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 801ff48:	f1bb 0f00 	cmp.w	fp, #0
 801ff4c:	dc70      	bgt.n	8020030 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 801ff4e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ff50:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ff54:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ff56:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801ff5a:	930c      	str	r3, [sp, #48]	@ 0x30
 801ff5c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801ff5e:	2b00      	cmp	r3, #0
 801ff60:	f340 81be 	ble.w	80202e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x758>
 801ff64:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801ff68:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ff6a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ff6e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ff72:	eef0 6a62 	vmov.f32	s13, s5
 801ff76:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ff7a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ff7e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ff82:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 801ff86:	eef0 6a43 	vmov.f32	s13, s6
 801ff8a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ff8e:	ee16 5a90 	vmov	r5, s13
 801ff92:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ff96:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ff9a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ff9e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ffa2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ffa6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ffaa:	ee12 2a90 	vmov	r2, s5
 801ffae:	eef0 2a47 	vmov.f32	s5, s14
 801ffb2:	fb92 f3f3 	sdiv	r3, r2, r3
 801ffb6:	ee13 2a10 	vmov	r2, s6
 801ffba:	932b      	str	r3, [sp, #172]	@ 0xac
 801ffbc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ffbe:	eeb0 3a67 	vmov.f32	s6, s15
 801ffc2:	fb92 f3f3 	sdiv	r3, r2, r3
 801ffc6:	932c      	str	r3, [sp, #176]	@ 0xb0
 801ffc8:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 801ffca:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 801ffcc:	3b01      	subs	r3, #1
 801ffce:	9319      	str	r3, [sp, #100]	@ 0x64
 801ffd0:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801ffd2:	bf08      	it	eq
 801ffd4:	4613      	moveq	r3, r2
 801ffd6:	9309      	str	r3, [sp, #36]	@ 0x24
 801ffd8:	e5f4      	b.n	801fbc4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ffda:	2900      	cmp	r1, #0
 801ffdc:	f43f ae66 	beq.w	801fcac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801ffe0:	f818 0000 	ldrb.w	r0, [r8, r0]
 801ffe4:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ffe8:	900a      	str	r0, [sp, #40]	@ 0x28
 801ffea:	0e00      	lsrs	r0, r0, #24
 801ffec:	9013      	str	r0, [sp, #76]	@ 0x4c
 801ffee:	e65d      	b.n	801fcac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x124>
 801fff0:	f113 0801 	adds.w	r8, r3, #1
 801fff4:	f53f af74 	bmi.w	801fee0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801fff8:	4540      	cmp	r0, r8
 801fffa:	f6ff af71 	blt.w	801fee0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 801fffe:	f11c 0801 	adds.w	r8, ip, #1
 8020002:	f53f af6d 	bmi.w	801fee0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8020006:	45c6      	cmp	lr, r8
 8020008:	f6ff af6a 	blt.w	801fee0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 802000c:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 802000e:	b200      	sxth	r0, r0
 8020010:	9302      	str	r3, [sp, #8]
 8020012:	fa0f f38e 	sxth.w	r3, lr
 8020016:	9000      	str	r0, [sp, #0]
 8020018:	9301      	str	r3, [sp, #4]
 802001a:	4633      	mov	r3, r6
 802001c:	981d      	ldr	r0, [sp, #116]	@ 0x74
 802001e:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8020022:	e9cd c203 	strd	ip, r2, [sp, #12]
 8020026:	4639      	mov	r1, r7
 8020028:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 802002a:	f7ff fc63 	bl	801f8f4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 802002e:	e757      	b.n	801fee0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8020030:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8020032:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020036:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8020038:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802003c:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 802003e:	1427      	asrs	r7, r4, #16
 8020040:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8020042:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020046:	142b      	asrs	r3, r5, #16
 8020048:	fb01 7303 	mla	r3, r1, r3, r7
 802004c:	18e7      	adds	r7, r4, r3
 802004e:	5ce3      	ldrb	r3, [r4, r3]
 8020050:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020054:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8020058:	2a00      	cmp	r2, #0
 802005a:	f000 8137 	beq.w	80202cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x744>
 802005e:	f897 e001 	ldrb.w	lr, [r7, #1]
 8020062:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8020066:	9410      	str	r4, [sp, #64]	@ 0x40
 8020068:	0e24      	lsrs	r4, r4, #24
 802006a:	9417      	str	r4, [sp, #92]	@ 0x5c
 802006c:	b170      	cbz	r0, 802008c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 802006e:	eb07 0e01 	add.w	lr, r7, r1
 8020072:	5c79      	ldrb	r1, [r7, r1]
 8020074:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020078:	910b      	str	r1, [sp, #44]	@ 0x2c
 802007a:	0e09      	lsrs	r1, r1, #24
 802007c:	9114      	str	r1, [sp, #80]	@ 0x50
 802007e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8020082:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020086:	9111      	str	r1, [sp, #68]	@ 0x44
 8020088:	0e09      	lsrs	r1, r1, #24
 802008a:	9118      	str	r1, [sp, #96]	@ 0x60
 802008c:	b292      	uxth	r2, r2
 802008e:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8020090:	b280      	uxth	r0, r0
 8020092:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8020094:	fb02 f800 	mul.w	r8, r2, r0
 8020098:	0112      	lsls	r2, r2, #4
 802009a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 802009e:	eba2 0e08 	sub.w	lr, r2, r8
 80200a2:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 80200a6:	b280      	uxth	r0, r0
 80200a8:	fa1f fe8e 	uxth.w	lr, lr
 80200ac:	1a12      	subs	r2, r2, r0
 80200ae:	fb0e f101 	mul.w	r1, lr, r1
 80200b2:	b292      	uxth	r2, r2
 80200b4:	fb02 110c 	mla	r1, r2, ip, r1
 80200b8:	fb00 1104 	mla	r1, r0, r4, r1
 80200bc:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 80200be:	fb08 1104 	mla	r1, r8, r4, r1
 80200c2:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80200c6:	2900      	cmp	r1, #0
 80200c8:	f000 80f5 	beq.w	80202b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72e>
 80200cc:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 80200d0:	d019      	beq.n	8020106 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x57e>
 80200d2:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 80200d6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80200da:	fb0c fa0a 	mul.w	sl, ip, sl
 80200de:	fb0c fc03 	mul.w	ip, ip, r3
 80200e2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80200e6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 80200ea:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 80200ee:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80200f2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80200f6:	4453      	add	r3, sl
 80200f8:	0a3f      	lsrs	r7, r7, #8
 80200fa:	0a1b      	lsrs	r3, r3, #8
 80200fc:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8020100:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8020104:	433b      	orrs	r3, r7
 8020106:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8020108:	2cff      	cmp	r4, #255	@ 0xff
 802010a:	d020      	beq.n	802014e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
 802010c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 802010e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8020112:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8020114:	4367      	muls	r7, r4
 8020116:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8020118:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802011c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8020120:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8020122:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8020126:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802012a:	fb04 fa0a 	mul.w	sl, r4, sl
 802012e:	44bc      	add	ip, r7
 8020130:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8020134:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020138:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802013c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020140:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020144:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020148:	ea4c 040a 	orr.w	r4, ip, sl
 802014c:	9410      	str	r4, [sp, #64]	@ 0x40
 802014e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8020150:	2cff      	cmp	r4, #255	@ 0xff
 8020152:	d020      	beq.n	8020196 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60e>
 8020154:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8020156:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 802015a:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 802015c:	4367      	muls	r7, r4
 802015e:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8020160:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020164:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8020168:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 802016a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802016e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020172:	fb04 fa0a 	mul.w	sl, r4, sl
 8020176:	44bc      	add	ip, r7
 8020178:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802017c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020180:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020184:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020188:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802018c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020190:	ea4c 040a 	orr.w	r4, ip, sl
 8020194:	940b      	str	r4, [sp, #44]	@ 0x2c
 8020196:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 8020198:	2cff      	cmp	r4, #255	@ 0xff
 802019a:	d020      	beq.n	80201de <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x656>
 802019c:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 802019e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80201a2:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 80201a4:	4367      	muls	r7, r4
 80201a6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80201a8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80201ac:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80201b0:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 80201b2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80201b6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80201ba:	fb04 fa0a 	mul.w	sl, r4, sl
 80201be:	44bc      	add	ip, r7
 80201c0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80201c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80201c8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80201cc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80201d0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80201d4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80201d8:	ea4c 040a 	orr.w	r4, ip, sl
 80201dc:	9411      	str	r4, [sp, #68]	@ 0x44
 80201de:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 80201e0:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 80201e4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80201e8:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80201ec:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80201ee:	fb0e f707 	mul.w	r7, lr, r7
 80201f2:	fb02 770c 	mla	r7, r2, ip, r7
 80201f6:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 80201fa:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80201fc:	fb00 770c 	mla	r7, r0, ip, r7
 8020200:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8020204:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8020206:	fb08 770c 	mla	r7, r8, ip, r7
 802020a:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 802020e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8020210:	fb0e fe0c 	mul.w	lr, lr, ip
 8020214:	0a3f      	lsrs	r7, r7, #8
 8020216:	fb02 e303 	mla	r3, r2, r3, lr
 802021a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802021c:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8020220:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8020224:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8020226:	fb00 330a 	mla	r3, r0, sl, r3
 802022a:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 802022e:	f8b9 0000 	ldrh.w	r0, [r9]
 8020232:	fb08 3c0c 	mla	ip, r8, ip, r3
 8020236:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8020238:	1202      	asrs	r2, r0, #8
 802023a:	434b      	muls	r3, r1
 802023c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020240:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8020244:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8020248:	1c59      	adds	r1, r3, #1
 802024a:	ea47 070c 	orr.w	r7, r7, ip
 802024e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8020252:	0c3b      	lsrs	r3, r7, #16
 8020254:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8020258:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 802025c:	b2ff      	uxtb	r7, r7
 802025e:	fb13 f304 	smulbb	r3, r3, r4
 8020262:	b2c9      	uxtb	r1, r1
 8020264:	fb1c fc04 	smulbb	ip, ip, r4
 8020268:	fb02 3201 	mla	r2, r2, r1, r3
 802026c:	10c3      	asrs	r3, r0, #3
 802026e:	fb17 f704 	smulbb	r7, r7, r4
 8020272:	00c0      	lsls	r0, r0, #3
 8020274:	b292      	uxth	r2, r2
 8020276:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802027a:	b2c0      	uxtb	r0, r0
 802027c:	fb03 c301 	mla	r3, r3, r1, ip
 8020280:	f102 0c01 	add.w	ip, r2, #1
 8020284:	fb00 7001 	mla	r0, r0, r1, r7
 8020288:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 802028c:	b280      	uxth	r0, r0
 802028e:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 8020292:	b29b      	uxth	r3, r3
 8020294:	1c42      	adds	r2, r0, #1
 8020296:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802029a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 802029e:	ea42 020c 	orr.w	r2, r2, ip
 80202a2:	f103 0c01 	add.w	ip, r3, #1
 80202a6:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80202aa:	095b      	lsrs	r3, r3, #5
 80202ac:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80202b0:	431a      	orrs	r2, r3
 80202b2:	f8a9 2000 	strh.w	r2, [r9]
 80202b6:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 80202b8:	f109 0902 	add.w	r9, r9, #2
 80202bc:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 80202be:	f10b 3bff 	add.w	fp, fp, #4294967295
 80202c2:	441a      	add	r2, r3
 80202c4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80202c6:	9229      	str	r2, [sp, #164]	@ 0xa4
 80202c8:	441d      	add	r5, r3
 80202ca:	e63d      	b.n	801ff48 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 80202cc:	2800      	cmp	r0, #0
 80202ce:	f43f aedd 	beq.w	802008c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 80202d2:	5c79      	ldrb	r1, [r7, r1]
 80202d4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80202d8:	910b      	str	r1, [sp, #44]	@ 0x2c
 80202da:	0e09      	lsrs	r1, r1, #24
 80202dc:	9114      	str	r1, [sp, #80]	@ 0x50
 80202de:	e6d5      	b.n	802008c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x504>
 80202e0:	b01f      	add	sp, #124	@ 0x7c
 80202e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080202e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 80202e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80202ea:	b089      	sub	sp, #36	@ 0x24
 80202ec:	9101      	str	r1, [sp, #4]
 80202ee:	9801      	ldr	r0, [sp, #4]
 80202f0:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 80202f4:	8800      	ldrh	r0, [r0, #0]
 80202f6:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 80202fa:	1206      	asrs	r6, r0, #8
 80202fc:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 8020300:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 8020304:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8020308:	9602      	str	r6, [sp, #8]
 802030a:	10c6      	asrs	r6, r0, #3
 802030c:	00c0      	lsls	r0, r0, #3
 802030e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8020312:	b2c0      	uxtb	r0, r0
 8020314:	9603      	str	r6, [sp, #12]
 8020316:	9004      	str	r0, [sp, #16]
 8020318:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 802031c:	fb07 100c 	mla	r0, r7, ip, r1
 8020320:	2f00      	cmp	r7, #0
 8020322:	eb02 0e00 	add.w	lr, r2, r0
 8020326:	f2c0 810a 	blt.w	802053e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 802032a:	45b8      	cmp	r8, r7
 802032c:	f340 8107 	ble.w	802053e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8020330:	2900      	cmp	r1, #0
 8020332:	f2c0 8102 	blt.w	802053a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8020336:	458c      	cmp	ip, r1
 8020338:	f340 80ff 	ble.w	802053a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 802033c:	5c12      	ldrb	r2, [r2, r0]
 802033e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8020342:	1c4a      	adds	r2, r1, #1
 8020344:	f100 80fe 	bmi.w	8020544 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8020348:	4594      	cmp	ip, r2
 802034a:	f340 80fb 	ble.w	8020544 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 802034e:	2d00      	cmp	r5, #0
 8020350:	f000 80fa 	beq.w	8020548 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8020354:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8020358:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 802035c:	3701      	adds	r7, #1
 802035e:	f100 80f7 	bmi.w	8020550 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8020362:	45b8      	cmp	r8, r7
 8020364:	f340 80f4 	ble.w	8020550 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8020368:	2c00      	cmp	r4, #0
 802036a:	f000 80f4 	beq.w	8020556 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 802036e:	2900      	cmp	r1, #0
 8020370:	eb0e 020c 	add.w	r2, lr, ip
 8020374:	f2c0 80ea 	blt.w	802054c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8020378:	458c      	cmp	ip, r1
 802037a:	f340 80e7 	ble.w	802054c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 802037e:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8020382:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8020386:	3101      	adds	r1, #1
 8020388:	f100 80e8 	bmi.w	802055c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 802038c:	458c      	cmp	ip, r1
 802038e:	f340 80e5 	ble.w	802055c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8020392:	2d00      	cmp	r5, #0
 8020394:	f000 80e4 	beq.w	8020560 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8020398:	7852      	ldrb	r2, [r2, #1]
 802039a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 802039e:	0e0b      	lsrs	r3, r1, #24
 80203a0:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 80203a4:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 80203a8:	9300      	str	r3, [sp, #0]
 80203aa:	b2a4      	uxth	r4, r4
 80203ac:	b2ab      	uxth	r3, r5
 80203ae:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 80203b2:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 80203b6:	fb03 f904 	mul.w	r9, r3, r4
 80203ba:	011b      	lsls	r3, r3, #4
 80203bc:	fb0a f505 	mul.w	r5, sl, r5
 80203c0:	ea4f 6817 	mov.w	r8, r7, lsr #24
 80203c4:	eba3 0e09 	sub.w	lr, r3, r9
 80203c8:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 80203cc:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 80203d0:	0a28      	lsrs	r0, r5, #8
 80203d2:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 80203d6:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 80203da:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 80203de:	fb0a f303 	mul.w	r3, sl, r3
 80203e2:	fb08 f707 	mul.w	r7, r8, r7
 80203e6:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 80203ea:	4405      	add	r5, r0
 80203ec:	fb08 fc0c 	mul.w	ip, r8, ip
 80203f0:	b2a4      	uxth	r4, r4
 80203f2:	0a2d      	lsrs	r5, r5, #8
 80203f4:	fa1f fe8e 	uxth.w	lr, lr
 80203f8:	1b12      	subs	r2, r2, r4
 80203fa:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 80203fe:	b292      	uxth	r2, r2
 8020400:	9005      	str	r0, [sp, #20]
 8020402:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 8020406:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802040a:	ea4f 201c 	mov.w	r0, ip, lsr #8
 802040e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8020412:	0a1b      	lsrs	r3, r3, #8
 8020414:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8020418:	9306      	str	r3, [sp, #24]
 802041a:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 802041e:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 8020422:	4460      	add	r0, ip
 8020424:	fb0b f303 	mul.w	r3, fp, r3
 8020428:	fb0b f606 	mul.w	r6, fp, r6
 802042c:	0a00      	lsrs	r0, r0, #8
 802042e:	0a1d      	lsrs	r5, r3, #8
 8020430:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 8020434:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8020438:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802043c:	441d      	add	r5, r3
 802043e:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 8020442:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8020446:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 802044a:	0a2d      	lsrs	r5, r5, #8
 802044c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8020450:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 8020454:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8020458:	0a36      	lsrs	r6, r6, #8
 802045a:	0a1b      	lsrs	r3, r3, #8
 802045c:	fb05 f50e 	mul.w	r5, r5, lr
 8020460:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 8020464:	9307      	str	r3, [sp, #28]
 8020466:	0e0b      	lsrs	r3, r1, #24
 8020468:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802046c:	fb0e f606 	mul.w	r6, lr, r6
 8020470:	435f      	muls	r7, r3
 8020472:	4359      	muls	r1, r3
 8020474:	9b05      	ldr	r3, [sp, #20]
 8020476:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802047a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802047e:	fb03 5502 	mla	r5, r3, r2, r5
 8020482:	9b06      	ldr	r3, [sp, #24]
 8020484:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020488:	fb0e fe0b 	mul.w	lr, lr, fp
 802048c:	44bc      	add	ip, r7
 802048e:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 8020492:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020496:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 802049a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802049e:	0a09      	lsrs	r1, r1, #8
 80204a0:	fb0c 5509 	mla	r5, ip, r9, r5
 80204a4:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80204a8:	fb00 5504 	mla	r5, r0, r4, r5
 80204ac:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 80204b0:	9b07      	ldr	r3, [sp, #28]
 80204b2:	fb02 6000 	mla	r0, r2, r0, r6
 80204b6:	0a2d      	lsrs	r5, r5, #8
 80204b8:	fb02 e20a 	mla	r2, r2, sl, lr
 80204bc:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80204c0:	fb09 0001 	mla	r0, r9, r1, r0
 80204c4:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80204c8:	fb04 0003 	mla	r0, r4, r3, r0
 80204cc:	9b00      	ldr	r3, [sp, #0]
 80204ce:	fb04 2408 	mla	r4, r4, r8, r2
 80204d2:	9a04      	ldr	r2, [sp, #16]
 80204d4:	0a00      	lsrs	r0, r0, #8
 80204d6:	fb09 4903 	mla	r9, r9, r3, r4
 80204da:	9b02      	ldr	r3, [sp, #8]
 80204dc:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 80204e0:	ea6f 2929 	mvn.w	r9, r9, asr #8
 80204e4:	4305      	orrs	r5, r0
 80204e6:	fa5f f989 	uxtb.w	r9, r9
 80204ea:	fb03 f109 	mul.w	r1, r3, r9
 80204ee:	9b03      	ldr	r3, [sp, #12]
 80204f0:	fb03 f309 	mul.w	r3, r3, r9
 80204f4:	fb02 f909 	mul.w	r9, r2, r9
 80204f8:	1c4a      	adds	r2, r1, #1
 80204fa:	1c58      	adds	r0, r3, #1
 80204fc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020500:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020504:	0c2a      	lsrs	r2, r5, #16
 8020506:	0a2b      	lsrs	r3, r5, #8
 8020508:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 802050c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020510:	0212      	lsls	r2, r2, #8
 8020512:	00db      	lsls	r3, r3, #3
 8020514:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8020518:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802051c:	4313      	orrs	r3, r2
 802051e:	f109 0201 	add.w	r2, r9, #1
 8020522:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8020526:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 802052a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 802052e:	431d      	orrs	r5, r3
 8020530:	9b01      	ldr	r3, [sp, #4]
 8020532:	801d      	strh	r5, [r3, #0]
 8020534:	b009      	add	sp, #36	@ 0x24
 8020536:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802053a:	2000      	movs	r0, #0
 802053c:	e701      	b.n	8020342 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 802053e:	2600      	movs	r6, #0
 8020540:	4630      	mov	r0, r6
 8020542:	e70b      	b.n	802035c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020544:	2600      	movs	r6, #0
 8020546:	e709      	b.n	802035c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020548:	462e      	mov	r6, r5
 802054a:	e707      	b.n	802035c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 802054c:	2700      	movs	r7, #0
 802054e:	e71a      	b.n	8020386 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8020550:	2100      	movs	r1, #0
 8020552:	460f      	mov	r7, r1
 8020554:	e723      	b.n	802039e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020556:	4621      	mov	r1, r4
 8020558:	4627      	mov	r7, r4
 802055a:	e720      	b.n	802039e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 802055c:	2100      	movs	r1, #0
 802055e:	e71e      	b.n	802039e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020560:	4629      	mov	r1, r5
 8020562:	e71c      	b.n	802039e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08020564 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020564:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020568:	b09b      	sub	sp, #108	@ 0x6c
 802056a:	9218      	str	r2, [sp, #96]	@ 0x60
 802056c:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 802056e:	9019      	str	r0, [sp, #100]	@ 0x64
 8020570:	9116      	str	r1, [sp, #88]	@ 0x58
 8020572:	6850      	ldr	r0, [r2, #4]
 8020574:	9307      	str	r3, [sp, #28]
 8020576:	6812      	ldr	r2, [r2, #0]
 8020578:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 802057a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 802057e:	fb00 1303 	mla	r3, r0, r3, r1
 8020582:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020586:	930a      	str	r3, [sp, #40]	@ 0x28
 8020588:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 802058a:	681b      	ldr	r3, [r3, #0]
 802058c:	930f      	str	r3, [sp, #60]	@ 0x3c
 802058e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020590:	685e      	ldr	r6, [r3, #4]
 8020592:	3604      	adds	r6, #4
 8020594:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8020596:	2b00      	cmp	r3, #0
 8020598:	dc03      	bgt.n	80205a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 802059a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802059c:	2b00      	cmp	r3, #0
 802059e:	f340 8373 	ble.w	8020c88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 80205a2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80205a4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80205a8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80205ac:	1e48      	subs	r0, r1, #1
 80205ae:	1e57      	subs	r7, r2, #1
 80205b0:	9b07      	ldr	r3, [sp, #28]
 80205b2:	2b00      	cmp	r3, #0
 80205b4:	f340 818f 	ble.w	80208d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 80205b8:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 80205ba:	142b      	asrs	r3, r5, #16
 80205bc:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80205c0:	d406      	bmi.n	80205d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80205c2:	4584      	cmp	ip, r0
 80205c4:	da04      	bge.n	80205d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80205c6:	2b00      	cmp	r3, #0
 80205c8:	db02      	blt.n	80205d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80205ca:	42bb      	cmp	r3, r7
 80205cc:	f2c0 8184 	blt.w	80208d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 80205d0:	f11c 0c01 	adds.w	ip, ip, #1
 80205d4:	f100 8172 	bmi.w	80208bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 80205d8:	4561      	cmp	r1, ip
 80205da:	f2c0 816f 	blt.w	80208bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 80205de:	3301      	adds	r3, #1
 80205e0:	f100 816c 	bmi.w	80208bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 80205e4:	429a      	cmp	r2, r3
 80205e6:	f2c0 8169 	blt.w	80208bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 80205ea:	9b07      	ldr	r3, [sp, #28]
 80205ec:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 80205ee:	9317      	str	r3, [sp, #92]	@ 0x5c
 80205f0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80205f2:	2b00      	cmp	r3, #0
 80205f4:	f340 818e 	ble.w	8020914 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 80205f8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 80205fa:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80205fe:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020602:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020606:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020608:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 802060c:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 802060e:	141b      	asrs	r3, r3, #16
 8020610:	f100 81d1 	bmi.w	80209b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8020614:	f101 38ff 	add.w	r8, r1, #4294967295
 8020618:	4543      	cmp	r3, r8
 802061a:	f280 81cc 	bge.w	80209b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802061e:	f1bc 0f00 	cmp.w	ip, #0
 8020622:	f2c0 81c8 	blt.w	80209b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8020626:	f10e 38ff 	add.w	r8, lr, #4294967295
 802062a:	45c4      	cmp	ip, r8
 802062c:	f280 81c3 	bge.w	80209b6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8020630:	b209      	sxth	r1, r1
 8020632:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8020634:	fb0c 3301 	mla	r3, ip, r1, r3
 8020638:	eb04 0803 	add.w	r8, r4, r3
 802063c:	5ce3      	ldrb	r3, [r4, r3]
 802063e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020642:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8020646:	2a00      	cmp	r2, #0
 8020648:	f000 81aa 	beq.w	80209a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43c>
 802064c:	f898 c001 	ldrb.w	ip, [r8, #1]
 8020650:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8020654:	940b      	str	r4, [sp, #44]	@ 0x2c
 8020656:	0e24      	lsrs	r4, r4, #24
 8020658:	9412      	str	r4, [sp, #72]	@ 0x48
 802065a:	b178      	cbz	r0, 802067c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 802065c:	eb08 0c01 	add.w	ip, r8, r1
 8020660:	f818 1001 	ldrb.w	r1, [r8, r1]
 8020664:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020668:	9108      	str	r1, [sp, #32]
 802066a:	0e09      	lsrs	r1, r1, #24
 802066c:	9110      	str	r1, [sp, #64]	@ 0x40
 802066e:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8020672:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020676:	910c      	str	r1, [sp, #48]	@ 0x30
 8020678:	0e09      	lsrs	r1, r1, #24
 802067a:	9113      	str	r1, [sp, #76]	@ 0x4c
 802067c:	b292      	uxth	r2, r2
 802067e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8020680:	b280      	uxth	r0, r0
 8020682:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8020684:	fb02 f900 	mul.w	r9, r2, r0
 8020688:	0112      	lsls	r2, r2, #4
 802068a:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802068e:	eba2 0809 	sub.w	r8, r2, r9
 8020692:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8020696:	b280      	uxth	r0, r0
 8020698:	fa1f f888 	uxth.w	r8, r8
 802069c:	1a12      	subs	r2, r2, r0
 802069e:	fb08 f101 	mul.w	r1, r8, r1
 80206a2:	b292      	uxth	r2, r2
 80206a4:	fb02 110e 	mla	r1, r2, lr, r1
 80206a8:	fb00 1104 	mla	r1, r0, r4, r1
 80206ac:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80206ae:	fb09 1104 	mla	r1, r9, r4, r1
 80206b2:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80206b6:	2900      	cmp	r1, #0
 80206b8:	f000 80f5 	beq.w	80208a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 80206bc:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 80206c0:	d01b      	beq.n	80206fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 80206c2:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 80206c6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80206ca:	fb0e fa0a 	mul.w	sl, lr, sl
 80206ce:	fb0e fe03 	mul.w	lr, lr, r3
 80206d2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80206d6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 80206da:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 80206de:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80206e2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80206e6:	4453      	add	r3, sl
 80206e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80206ec:	0a1b      	lsrs	r3, r3, #8
 80206ee:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80206f2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80206f6:	ea43 030c 	orr.w	r3, r3, ip
 80206fa:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80206fc:	2cff      	cmp	r4, #255	@ 0xff
 80206fe:	d021      	beq.n	8020744 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8020700:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8020702:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8020706:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8020708:	fb04 fb0b 	mul.w	fp, r4, fp
 802070c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802070e:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8020712:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8020714:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020718:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802071c:	fb04 fa0a 	mul.w	sl, r4, sl
 8020720:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020724:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8020728:	44de      	add	lr, fp
 802072a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802072e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020732:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020736:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802073a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802073e:	ea4e 040a 	orr.w	r4, lr, sl
 8020742:	940b      	str	r4, [sp, #44]	@ 0x2c
 8020744:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8020746:	2cff      	cmp	r4, #255	@ 0xff
 8020748:	d021      	beq.n	802078e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 802074a:	9c08      	ldr	r4, [sp, #32]
 802074c:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8020750:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8020752:	fb04 fb0b 	mul.w	fp, r4, fp
 8020756:	9c08      	ldr	r4, [sp, #32]
 8020758:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 802075c:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 802075e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020762:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8020766:	fb04 fa0a 	mul.w	sl, r4, sl
 802076a:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802076e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8020772:	44de      	add	lr, fp
 8020774:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020778:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802077c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020780:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020784:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020788:	ea4e 040a 	orr.w	r4, lr, sl
 802078c:	9408      	str	r4, [sp, #32]
 802078e:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8020790:	2cff      	cmp	r4, #255	@ 0xff
 8020792:	d021      	beq.n	80207d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8020794:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8020796:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 802079a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 802079c:	fb04 fb0b 	mul.w	fp, r4, fp
 80207a0:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80207a2:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80207a6:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80207a8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80207ac:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80207b0:	fb04 fa0a 	mul.w	sl, r4, sl
 80207b4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80207b8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80207bc:	44de      	add	lr, fp
 80207be:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80207c2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80207c6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80207ca:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80207ce:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80207d2:	ea4e 040a 	orr.w	r4, lr, sl
 80207d6:	940c      	str	r4, [sp, #48]	@ 0x30
 80207d8:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80207da:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 80207de:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80207e2:	43c9      	mvns	r1, r1
 80207e4:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 80207e8:	9c08      	ldr	r4, [sp, #32]
 80207ea:	fb08 fc0c 	mul.w	ip, r8, ip
 80207ee:	fb02 cc0e 	mla	ip, r2, lr, ip
 80207f2:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 80207f6:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80207f8:	fb00 cc0e 	mla	ip, r0, lr, ip
 80207fc:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8020800:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8020802:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020806:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 802080a:	fb08 f80e 	mul.w	r8, r8, lr
 802080e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020812:	fa5f fe81 	uxtb.w	lr, r1
 8020816:	fb02 8303 	mla	r3, r2, r3, r8
 802081a:	9a08      	ldr	r2, [sp, #32]
 802081c:	f8b7 8000 	ldrh.w	r8, [r7]
 8020820:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020824:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8020828:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 802082a:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 802082e:	fb00 330a 	mla	r3, r0, sl, r3
 8020832:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 8020836:	ea4f 2228 	mov.w	r2, r8, asr #8
 802083a:	fb09 3900 	mla	r9, r9, r0, r3
 802083e:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8020842:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8020846:	b2c9      	uxtb	r1, r1
 8020848:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802084c:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8020850:	fb02 f20e 	mul.w	r2, r2, lr
 8020854:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8020858:	fb00 f00e 	mul.w	r0, r0, lr
 802085c:	1c53      	adds	r3, r2, #1
 802085e:	fb01 f10e 	mul.w	r1, r1, lr
 8020862:	ea4c 0c09 	orr.w	ip, ip, r9
 8020866:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 802086a:	ea4f 431c 	mov.w	r3, ip, lsr #16
 802086e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020872:	4a60      	ldr	r2, [pc, #384]	@ (80209f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8020874:	b2db      	uxtb	r3, r3
 8020876:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 802087a:	1c43      	adds	r3, r0, #1
 802087c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8020880:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8020884:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020888:	00db      	lsls	r3, r3, #3
 802088a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802088e:	4313      	orrs	r3, r2
 8020890:	1c4a      	adds	r2, r1, #1
 8020892:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020896:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 802089a:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 802089e:	ea4c 0c03 	orr.w	ip, ip, r3
 80208a2:	f8a7 c000 	strh.w	ip, [r7]
 80208a6:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 80208a8:	3702      	adds	r7, #2
 80208aa:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 80208ac:	441a      	add	r2, r3
 80208ae:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80208b0:	441d      	add	r5, r3
 80208b2:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80208b4:	9225      	str	r2, [sp, #148]	@ 0x94
 80208b6:	3b01      	subs	r3, #1
 80208b8:	9317      	str	r3, [sp, #92]	@ 0x5c
 80208ba:	e699      	b.n	80205f0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80208bc:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 80208be:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 80208c0:	441c      	add	r4, r3
 80208c2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80208c4:	441d      	add	r5, r3
 80208c6:	9b07      	ldr	r3, [sp, #28]
 80208c8:	9425      	str	r4, [sp, #148]	@ 0x94
 80208ca:	3b01      	subs	r3, #1
 80208cc:	9307      	str	r3, [sp, #28]
 80208ce:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80208d0:	3302      	adds	r3, #2
 80208d2:	930a      	str	r3, [sp, #40]	@ 0x28
 80208d4:	e66c      	b.n	80205b0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80208d6:	d024      	beq.n	8020922 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3be>
 80208d8:	9b07      	ldr	r3, [sp, #28]
 80208da:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 80208dc:	3b01      	subs	r3, #1
 80208de:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 80208e0:	fb00 4003 	mla	r0, r0, r3, r4
 80208e4:	1400      	asrs	r0, r0, #16
 80208e6:	f53f ae80 	bmi.w	80205ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80208ea:	3901      	subs	r1, #1
 80208ec:	4288      	cmp	r0, r1
 80208ee:	f6bf ae7c 	bge.w	80205ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80208f2:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 80208f4:	fb01 5303 	mla	r3, r1, r3, r5
 80208f8:	141b      	asrs	r3, r3, #16
 80208fa:	f53f ae76 	bmi.w	80205ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80208fe:	3a01      	subs	r2, #1
 8020900:	4293      	cmp	r3, r2
 8020902:	f6bf ae72 	bge.w	80205ea <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8020906:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802090a:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 802090e:	f1bb 0f00 	cmp.w	fp, #0
 8020912:	dc71      	bgt.n	80209f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8020914:	9b07      	ldr	r3, [sp, #28]
 8020916:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802091a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802091c:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8020920:	930a      	str	r3, [sp, #40]	@ 0x28
 8020922:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8020924:	2b00      	cmp	r3, #0
 8020926:	f340 81af 	ble.w	8020c88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 802092a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802092e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020930:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020934:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020938:	eef0 6a62 	vmov.f32	s13, s5
 802093c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020940:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020944:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020948:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 802094c:	eef0 6a43 	vmov.f32	s13, s6
 8020950:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020954:	ee16 5a90 	vmov	r5, s13
 8020958:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802095c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020960:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020964:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020968:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802096c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020970:	ee12 2a90 	vmov	r2, s5
 8020974:	eef0 2a47 	vmov.f32	s5, s14
 8020978:	fb92 f3f3 	sdiv	r3, r2, r3
 802097c:	ee13 2a10 	vmov	r2, s6
 8020980:	9327      	str	r3, [sp, #156]	@ 0x9c
 8020982:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020984:	eeb0 3a67 	vmov.f32	s6, s15
 8020988:	fb92 f3f3 	sdiv	r3, r2, r3
 802098c:	9328      	str	r3, [sp, #160]	@ 0xa0
 802098e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8020990:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8020992:	3b01      	subs	r3, #1
 8020994:	9316      	str	r3, [sp, #88]	@ 0x58
 8020996:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020998:	bf08      	it	eq
 802099a:	4613      	moveq	r3, r2
 802099c:	9307      	str	r3, [sp, #28]
 802099e:	e5f9      	b.n	8020594 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80209a0:	2800      	cmp	r0, #0
 80209a2:	f43f ae6b 	beq.w	802067c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 80209a6:	f818 1001 	ldrb.w	r1, [r8, r1]
 80209aa:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80209ae:	9108      	str	r1, [sp, #32]
 80209b0:	0e09      	lsrs	r1, r1, #24
 80209b2:	9110      	str	r1, [sp, #64]	@ 0x40
 80209b4:	e662      	b.n	802067c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x118>
 80209b6:	f113 0801 	adds.w	r8, r3, #1
 80209ba:	f53f af74 	bmi.w	80208a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 80209be:	4541      	cmp	r1, r8
 80209c0:	f6ff af71 	blt.w	80208a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 80209c4:	f11c 0801 	adds.w	r8, ip, #1
 80209c8:	f53f af6d 	bmi.w	80208a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 80209cc:	45c6      	cmp	lr, r8
 80209ce:	f6ff af6a 	blt.w	80208a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 80209d2:	b209      	sxth	r1, r1
 80209d4:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 80209d8:	fa0f f38e 	sxth.w	r3, lr
 80209dc:	9100      	str	r1, [sp, #0]
 80209de:	4639      	mov	r1, r7
 80209e0:	9301      	str	r3, [sp, #4]
 80209e2:	4633      	mov	r3, r6
 80209e4:	e9cd 2004 	strd	r2, r0, [sp, #16]
 80209e8:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80209ea:	9819      	ldr	r0, [sp, #100]	@ 0x64
 80209ec:	f7ff fc7b 	bl	80202e6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 80209f0:	e759      	b.n	80208a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 80209f2:	bf00      	nop
 80209f4:	fffff800 	.word	0xfffff800
 80209f8:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 80209fa:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80209fe:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8020a00:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020a04:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020a06:	1427      	asrs	r7, r4, #16
 8020a08:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8020a0a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020a0e:	142b      	asrs	r3, r5, #16
 8020a10:	fb01 7303 	mla	r3, r1, r3, r7
 8020a14:	18e7      	adds	r7, r4, r3
 8020a16:	5ce3      	ldrb	r3, [r4, r3]
 8020a18:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020a1c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8020a20:	2a00      	cmp	r2, #0
 8020a22:	f000 8127 	beq.w	8020c74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8020a26:	f897 e001 	ldrb.w	lr, [r7, #1]
 8020a2a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8020a2e:	940d      	str	r4, [sp, #52]	@ 0x34
 8020a30:	0e24      	lsrs	r4, r4, #24
 8020a32:	9414      	str	r4, [sp, #80]	@ 0x50
 8020a34:	b170      	cbz	r0, 8020a54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8020a36:	eb07 0e01 	add.w	lr, r7, r1
 8020a3a:	5c79      	ldrb	r1, [r7, r1]
 8020a3c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020a40:	9109      	str	r1, [sp, #36]	@ 0x24
 8020a42:	0e09      	lsrs	r1, r1, #24
 8020a44:	9111      	str	r1, [sp, #68]	@ 0x44
 8020a46:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8020a4a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020a4e:	910e      	str	r1, [sp, #56]	@ 0x38
 8020a50:	0e09      	lsrs	r1, r1, #24
 8020a52:	9115      	str	r1, [sp, #84]	@ 0x54
 8020a54:	b292      	uxth	r2, r2
 8020a56:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8020a58:	b280      	uxth	r0, r0
 8020a5a:	fb02 f800 	mul.w	r8, r2, r0
 8020a5e:	0112      	lsls	r2, r2, #4
 8020a60:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8020a64:	eba2 0e08 	sub.w	lr, r2, r8
 8020a68:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 8020a6c:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8020a6e:	b280      	uxth	r0, r0
 8020a70:	fa1f fe8e 	uxth.w	lr, lr
 8020a74:	1a09      	subs	r1, r1, r0
 8020a76:	fb0e f202 	mul.w	r2, lr, r2
 8020a7a:	b289      	uxth	r1, r1
 8020a7c:	fb01 220c 	mla	r2, r1, ip, r2
 8020a80:	fb00 2204 	mla	r2, r0, r4, r2
 8020a84:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8020a86:	fb08 2204 	mla	r2, r8, r4, r2
 8020a8a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8020a8e:	2a00      	cmp	r2, #0
 8020a90:	f000 80e5 	beq.w	8020c5e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8020a94:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8020a98:	d019      	beq.n	8020ace <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8020a9a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8020a9e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8020aa2:	fb0c fa0a 	mul.w	sl, ip, sl
 8020aa6:	fb0c fc03 	mul.w	ip, ip, r3
 8020aaa:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020aae:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8020ab2:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8020ab6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8020aba:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8020abe:	4453      	add	r3, sl
 8020ac0:	0a3f      	lsrs	r7, r7, #8
 8020ac2:	0a1b      	lsrs	r3, r3, #8
 8020ac4:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8020ac8:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8020acc:	433b      	orrs	r3, r7
 8020ace:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8020ad0:	2cff      	cmp	r4, #255	@ 0xff
 8020ad2:	d020      	beq.n	8020b16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8020ad4:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8020ad6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8020ada:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8020adc:	4367      	muls	r7, r4
 8020ade:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8020ae0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020ae4:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8020ae8:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8020aea:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8020aee:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020af2:	fb04 fa0a 	mul.w	sl, r4, sl
 8020af6:	44bc      	add	ip, r7
 8020af8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8020afc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020b00:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020b04:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020b08:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020b0c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020b10:	ea4c 040a 	orr.w	r4, ip, sl
 8020b14:	940d      	str	r4, [sp, #52]	@ 0x34
 8020b16:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8020b18:	2cff      	cmp	r4, #255	@ 0xff
 8020b1a:	d020      	beq.n	8020b5e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8020b1c:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8020b1e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8020b22:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8020b24:	4367      	muls	r7, r4
 8020b26:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8020b28:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020b2c:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8020b30:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8020b32:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8020b36:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020b3a:	fb04 fa0a 	mul.w	sl, r4, sl
 8020b3e:	44bc      	add	ip, r7
 8020b40:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8020b44:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020b48:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020b4c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020b50:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020b54:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020b58:	ea4c 040a 	orr.w	r4, ip, sl
 8020b5c:	9409      	str	r4, [sp, #36]	@ 0x24
 8020b5e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8020b60:	2cff      	cmp	r4, #255	@ 0xff
 8020b62:	d020      	beq.n	8020ba6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 8020b64:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8020b66:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8020b6a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8020b6c:	4367      	muls	r7, r4
 8020b6e:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8020b70:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020b74:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8020b78:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8020b7a:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8020b7e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020b82:	fb04 fa0a 	mul.w	sl, r4, sl
 8020b86:	44bc      	add	ip, r7
 8020b88:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8020b8c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020b90:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020b94:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020b98:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020b9c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020ba0:	ea4c 040a 	orr.w	r4, ip, sl
 8020ba4:	940e      	str	r4, [sp, #56]	@ 0x38
 8020ba6:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8020ba8:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8020bac:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8020bb0:	43d2      	mvns	r2, r2
 8020bb2:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8020bb6:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8020bb8:	b2d2      	uxtb	r2, r2
 8020bba:	fb0e f707 	mul.w	r7, lr, r7
 8020bbe:	fb01 770c 	mla	r7, r1, ip, r7
 8020bc2:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8020bc6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8020bc8:	fb00 770c 	mla	r7, r0, ip, r7
 8020bcc:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8020bd0:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8020bd2:	fb08 770c 	mla	r7, r8, ip, r7
 8020bd6:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 8020bda:	fb0e fe0c 	mul.w	lr, lr, ip
 8020bde:	0a3f      	lsrs	r7, r7, #8
 8020be0:	fb01 e303 	mla	r3, r1, r3, lr
 8020be4:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8020be6:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8020bea:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8020bee:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8020bf0:	fb00 330a 	mla	r3, r0, sl, r3
 8020bf4:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 8020bf8:	fb08 3c0c 	mla	ip, r8, ip, r3
 8020bfc:	f8b9 3000 	ldrh.w	r3, [r9]
 8020c00:	1218      	asrs	r0, r3, #8
 8020c02:	10d9      	asrs	r1, r3, #3
 8020c04:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020c08:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8020c0c:	00db      	lsls	r3, r3, #3
 8020c0e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8020c12:	4350      	muls	r0, r2
 8020c14:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8020c18:	b2db      	uxtb	r3, r3
 8020c1a:	4351      	muls	r1, r2
 8020c1c:	ea47 070c 	orr.w	r7, r7, ip
 8020c20:	4353      	muls	r3, r2
 8020c22:	1c42      	adds	r2, r0, #1
 8020c24:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020c28:	0c3a      	lsrs	r2, r7, #16
 8020c2a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8020c2e:	4a18      	ldr	r2, [pc, #96]	@ (8020c90 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8020c30:	b2c0      	uxtb	r0, r0
 8020c32:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8020c36:	1c4a      	adds	r2, r1, #1
 8020c38:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020c3c:	0a3a      	lsrs	r2, r7, #8
 8020c3e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020c42:	00c9      	lsls	r1, r1, #3
 8020c44:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8020c48:	4301      	orrs	r1, r0
 8020c4a:	1c58      	adds	r0, r3, #1
 8020c4c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020c50:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8020c54:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8020c58:	4308      	orrs	r0, r1
 8020c5a:	f8a9 0000 	strh.w	r0, [r9]
 8020c5e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8020c60:	f109 0902 	add.w	r9, r9, #2
 8020c64:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8020c66:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020c6a:	441a      	add	r2, r3
 8020c6c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8020c6e:	9225      	str	r2, [sp, #148]	@ 0x94
 8020c70:	441d      	add	r5, r3
 8020c72:	e64c      	b.n	802090e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8020c74:	2800      	cmp	r0, #0
 8020c76:	f43f aeed 	beq.w	8020a54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8020c7a:	5c79      	ldrb	r1, [r7, r1]
 8020c7c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020c80:	9109      	str	r1, [sp, #36]	@ 0x24
 8020c82:	0e09      	lsrs	r1, r1, #24
 8020c84:	9111      	str	r1, [sp, #68]	@ 0x44
 8020c86:	e6e5      	b.n	8020a54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8020c88:	b01b      	add	sp, #108	@ 0x6c
 8020c8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020c8e:	bf00      	nop
 8020c90:	fffff800 	.word	0xfffff800

08020c94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8020c94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020c98:	b085      	sub	sp, #20
 8020c9a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 8020c9e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 8020ca2:	2800      	cmp	r0, #0
 8020ca4:	9103      	str	r1, [sp, #12]
 8020ca6:	fb00 7406 	mla	r4, r0, r6, r7
 8020caa:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 8020cae:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 8020cb2:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8020cb6:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 8020cba:	eb03 0904 	add.w	r9, r3, r4
 8020cbe:	9501      	str	r5, [sp, #4]
 8020cc0:	f2c0 8150 	blt.w	8020f64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8020cc4:	4583      	cmp	fp, r0
 8020cc6:	f340 814d 	ble.w	8020f64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8020cca:	2f00      	cmp	r7, #0
 8020ccc:	f2c0 8146 	blt.w	8020f5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8020cd0:	42be      	cmp	r6, r7
 8020cd2:	f340 8143 	ble.w	8020f5c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8020cd6:	f813 c004 	ldrb.w	ip, [r3, r4]
 8020cda:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8020cde:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 8020ce2:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020ce6:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 8020cea:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8020cee:	4355      	muls	r5, r2
 8020cf0:	fb0c f203 	mul.w	r2, ip, r3
 8020cf4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8020cf8:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 8020cfc:	441d      	add	r5, r3
 8020cfe:	f102 0320 	add.w	r3, r2, #32
 8020d02:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020d06:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8020d0a:	0a1b      	lsrs	r3, r3, #8
 8020d0c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8020d10:	431c      	orrs	r4, r3
 8020d12:	1c7b      	adds	r3, r7, #1
 8020d14:	f100 812b 	bmi.w	8020f6e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8020d18:	429e      	cmp	r6, r3
 8020d1a:	f340 8128 	ble.w	8020f6e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8020d1e:	2900      	cmp	r1, #0
 8020d20:	f000 8128 	beq.w	8020f74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8020d24:	9a01      	ldr	r2, [sp, #4]
 8020d26:	f899 3001 	ldrb.w	r3, [r9, #1]
 8020d2a:	8855      	ldrh	r5, [r2, #2]
 8020d2c:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8020d30:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 8020d34:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8020d38:	fb08 f802 	mul.w	r8, r8, r2
 8020d3c:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 8020d40:	435d      	muls	r5, r3
 8020d42:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8020d46:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8020d4a:	44d0      	add	r8, sl
 8020d4c:	f105 0a20 	add.w	sl, r5, #32
 8020d50:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8020d54:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8020d58:	0a2d      	lsrs	r5, r5, #8
 8020d5a:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8020d5e:	432a      	orrs	r2, r5
 8020d60:	3001      	adds	r0, #1
 8020d62:	f100 810d 	bmi.w	8020f80 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8020d66:	4583      	cmp	fp, r0
 8020d68:	f340 810a 	ble.w	8020f80 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 8020d6c:	f1be 0f00 	cmp.w	lr, #0
 8020d70:	f000 810b 	beq.w	8020f8a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 8020d74:	2f00      	cmp	r7, #0
 8020d76:	f2c0 8100 	blt.w	8020f7a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8020d7a:	42be      	cmp	r6, r7
 8020d7c:	f340 80fd 	ble.w	8020f7a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 8020d80:	9801      	ldr	r0, [sp, #4]
 8020d82:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 8020d86:	f819 5006 	ldrb.w	r5, [r9, r6]
 8020d8a:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8020d8e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8020d92:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 8020d96:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8020d9a:	fb0a fa00 	mul.w	sl, sl, r0
 8020d9e:	fb05 f808 	mul.w	r8, r5, r8
 8020da2:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8020da6:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 8020daa:	4482      	add	sl, r0
 8020dac:	f108 0020 	add.w	r0, r8, #32
 8020db0:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8020db4:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8020db8:	0a00      	lsrs	r0, r0, #8
 8020dba:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8020dbe:	ea4b 0b00 	orr.w	fp, fp, r0
 8020dc2:	3701      	adds	r7, #1
 8020dc4:	f100 80e6 	bmi.w	8020f94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8020dc8:	42be      	cmp	r6, r7
 8020dca:	f340 80e3 	ble.w	8020f94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8020dce:	2900      	cmp	r1, #0
 8020dd0:	f000 80e3 	beq.w	8020f9a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8020dd4:	3601      	adds	r6, #1
 8020dd6:	9801      	ldr	r0, [sp, #4]
 8020dd8:	f819 7006 	ldrb.w	r7, [r9, r6]
 8020ddc:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8020de0:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8020de4:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 8020de8:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8020dec:	fb09 f906 	mul.w	r9, r9, r6
 8020df0:	fb07 f800 	mul.w	r8, r7, r0
 8020df4:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 8020df8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8020dfc:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 8020e00:	44d1      	add	r9, sl
 8020e02:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8020e06:	f108 0020 	add.w	r0, r8, #32
 8020e0a:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8020e0e:	0a00      	lsrs	r0, r0, #8
 8020e10:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8020e14:	4330      	orrs	r0, r6
 8020e16:	b28e      	uxth	r6, r1
 8020e18:	fa1f f98e 	uxth.w	r9, lr
 8020e1c:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8020e20:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8020e24:	fb06 f809 	mul.w	r8, r6, r9
 8020e28:	0136      	lsls	r6, r6, #4
 8020e2a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8020e2e:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8020e32:	9601      	str	r6, [sp, #4]
 8020e34:	ea4a 0404 	orr.w	r4, sl, r4
 8020e38:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8020e3c:	fa1f f689 	uxth.w	r6, r9
 8020e40:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8020e44:	fb11 f90e 	smulbb	r9, r1, lr
 8020e48:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8020e4c:	9602      	str	r6, [sp, #8]
 8020e4e:	4626      	mov	r6, r4
 8020e50:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8020e54:	f1ce 0410 	rsb	r4, lr, #16
 8020e58:	ea4a 0202 	orr.w	r2, sl, r2
 8020e5c:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8020e60:	1a64      	subs	r4, r4, r1
 8020e62:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8020e66:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8020e6a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8020e6e:	434a      	muls	r2, r1
 8020e70:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8020e74:	ea4a 0000 	orr.w	r0, sl, r0
 8020e78:	9903      	ldr	r1, [sp, #12]
 8020e7a:	fb04 2406 	mla	r4, r4, r6, r2
 8020e7e:	9e02      	ldr	r6, [sp, #8]
 8020e80:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8020e84:	fb09 4200 	mla	r2, r9, r0, r4
 8020e88:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8020e8c:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8020e90:	8808      	ldrh	r0, [r1, #0]
 8020e92:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8020e96:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 8020e9a:	ea44 0b0b 	orr.w	fp, r4, fp
 8020e9e:	9c01      	ldr	r4, [sp, #4]
 8020ea0:	b289      	uxth	r1, r1
 8020ea2:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 8020ea6:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8020eaa:	1ba4      	subs	r4, r4, r6
 8020eac:	9e01      	ldr	r6, [sp, #4]
 8020eae:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8020eb2:	eba6 0608 	sub.w	r6, r6, r8
 8020eb6:	b2a4      	uxth	r4, r4
 8020eb8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8020ebc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020ec0:	b2b6      	uxth	r6, r6
 8020ec2:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8020ec6:	4373      	muls	r3, r6
 8020ec8:	ea42 0e0e 	orr.w	lr, r2, lr
 8020ecc:	fb0c 3304 	mla	r3, ip, r4, r3
 8020ed0:	9c02      	ldr	r4, [sp, #8]
 8020ed2:	fa1f f28e 	uxth.w	r2, lr
 8020ed6:	fb04 3505 	mla	r5, r4, r5, r3
 8020eda:	10d4      	asrs	r4, r2, #3
 8020edc:	fb08 5707 	mla	r7, r8, r7, r5
 8020ee0:	1215      	asrs	r5, r2, #8
 8020ee2:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8020ee6:	00d2      	lsls	r2, r2, #3
 8020ee8:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8020eec:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8020ef0:	b2d2      	uxtb	r2, r2
 8020ef2:	434f      	muls	r7, r1
 8020ef4:	1c7b      	adds	r3, r7, #1
 8020ef6:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8020efa:	1203      	asrs	r3, r0, #8
 8020efc:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8020f00:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8020f04:	b2ff      	uxtb	r7, r7
 8020f06:	fb13 f307 	smulbb	r3, r3, r7
 8020f0a:	fb05 3501 	mla	r5, r5, r1, r3
 8020f0e:	10c3      	asrs	r3, r0, #3
 8020f10:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8020f14:	b2ad      	uxth	r5, r5
 8020f16:	fb13 f307 	smulbb	r3, r3, r7
 8020f1a:	fb04 3401 	mla	r4, r4, r1, r3
 8020f1e:	00c3      	lsls	r3, r0, #3
 8020f20:	b2db      	uxtb	r3, r3
 8020f22:	b2a4      	uxth	r4, r4
 8020f24:	fb13 f307 	smulbb	r3, r3, r7
 8020f28:	fb02 3101 	mla	r1, r2, r1, r3
 8020f2c:	1c6b      	adds	r3, r5, #1
 8020f2e:	1c62      	adds	r2, r4, #1
 8020f30:	b289      	uxth	r1, r1
 8020f32:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8020f36:	1c4b      	adds	r3, r1, #1
 8020f38:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8020f3c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8020f40:	9a03      	ldr	r2, [sp, #12]
 8020f42:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8020f46:	0964      	lsrs	r4, r4, #5
 8020f48:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020f4c:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8020f50:	432b      	orrs	r3, r5
 8020f52:	4323      	orrs	r3, r4
 8020f54:	8013      	strh	r3, [r2, #0]
 8020f56:	b005      	add	sp, #20
 8020f58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020f5c:	f04f 0c00 	mov.w	ip, #0
 8020f60:	4664      	mov	r4, ip
 8020f62:	e6d6      	b.n	8020d12 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 8020f64:	2300      	movs	r3, #0
 8020f66:	469c      	mov	ip, r3
 8020f68:	461a      	mov	r2, r3
 8020f6a:	461c      	mov	r4, r3
 8020f6c:	e6f8      	b.n	8020d60 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8020f6e:	2300      	movs	r3, #0
 8020f70:	461a      	mov	r2, r3
 8020f72:	e6f5      	b.n	8020d60 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8020f74:	460b      	mov	r3, r1
 8020f76:	460a      	mov	r2, r1
 8020f78:	e6f2      	b.n	8020d60 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 8020f7a:	2500      	movs	r5, #0
 8020f7c:	46ab      	mov	fp, r5
 8020f7e:	e720      	b.n	8020dc2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 8020f80:	2700      	movs	r7, #0
 8020f82:	463d      	mov	r5, r7
 8020f84:	4638      	mov	r0, r7
 8020f86:	46bb      	mov	fp, r7
 8020f88:	e745      	b.n	8020e16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8020f8a:	4677      	mov	r7, lr
 8020f8c:	4675      	mov	r5, lr
 8020f8e:	4670      	mov	r0, lr
 8020f90:	46f3      	mov	fp, lr
 8020f92:	e740      	b.n	8020e16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8020f94:	2700      	movs	r7, #0
 8020f96:	4638      	mov	r0, r7
 8020f98:	e73d      	b.n	8020e16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 8020f9a:	460f      	mov	r7, r1
 8020f9c:	4608      	mov	r0, r1
 8020f9e:	e73a      	b.n	8020e16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

08020fa0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020fa0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020fa4:	b097      	sub	sp, #92	@ 0x5c
 8020fa6:	9214      	str	r2, [sp, #80]	@ 0x50
 8020fa8:	9308      	str	r3, [sp, #32]
 8020faa:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8020fac:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 8020fb0:	9015      	str	r0, [sp, #84]	@ 0x54
 8020fb2:	9312      	str	r3, [sp, #72]	@ 0x48
 8020fb4:	6850      	ldr	r0, [r2, #4]
 8020fb6:	9111      	str	r1, [sp, #68]	@ 0x44
 8020fb8:	6812      	ldr	r2, [r2, #0]
 8020fba:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 8020fbe:	fb00 1303 	mla	r3, r0, r3, r1
 8020fc2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020fc6:	9309      	str	r3, [sp, #36]	@ 0x24
 8020fc8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8020fca:	681b      	ldr	r3, [r3, #0]
 8020fcc:	930b      	str	r3, [sp, #44]	@ 0x2c
 8020fce:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8020fd0:	685b      	ldr	r3, [r3, #4]
 8020fd2:	930c      	str	r3, [sp, #48]	@ 0x30
 8020fd4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8020fd8:	930a      	str	r3, [sp, #40]	@ 0x28
 8020fda:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8020fdc:	2b00      	cmp	r3, #0
 8020fde:	dc03      	bgt.n	8020fe8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8020fe0:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8020fe2:	2b00      	cmp	r3, #0
 8020fe4:	f340 83cd 	ble.w	8021782 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 8020fe8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8020fea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020fee:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020ff2:	1e48      	subs	r0, r1, #1
 8020ff4:	1e55      	subs	r5, r2, #1
 8020ff6:	9b08      	ldr	r3, [sp, #32]
 8020ff8:	2b00      	cmp	r3, #0
 8020ffa:	f340 81a5 	ble.w	8021348 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a8>
 8020ffe:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 8021000:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8021002:	1436      	asrs	r6, r6, #16
 8021004:	ea4f 4323 	mov.w	r3, r3, asr #16
 8021008:	d406      	bmi.n	8021018 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802100a:	4286      	cmp	r6, r0
 802100c:	da04      	bge.n	8021018 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802100e:	2b00      	cmp	r3, #0
 8021010:	db02      	blt.n	8021018 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021012:	42ab      	cmp	r3, r5
 8021014:	f2c0 8199 	blt.w	802134a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8021018:	3601      	adds	r6, #1
 802101a:	f100 8186 	bmi.w	802132a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 802101e:	42b1      	cmp	r1, r6
 8021020:	f2c0 8183 	blt.w	802132a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8021024:	3301      	adds	r3, #1
 8021026:	f100 8180 	bmi.w	802132a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 802102a:	429a      	cmp	r2, r3
 802102c:	f2c0 817d 	blt.w	802132a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8021030:	9b08      	ldr	r3, [sp, #32]
 8021032:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8021036:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8021038:	9313      	str	r3, [sp, #76]	@ 0x4c
 802103a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 802103c:	2b00      	cmp	r3, #0
 802103e:	f340 81a6 	ble.w	802138e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 8021042:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8021044:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 8021046:	1418      	asrs	r0, r3, #16
 8021048:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 802104a:	142d      	asrs	r5, r5, #16
 802104c:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8021050:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8021052:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8021056:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8021058:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 802105c:	f100 81fa 	bmi.w	8021454 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8021060:	f102 3eff 	add.w	lr, r2, #4294967295
 8021064:	4575      	cmp	r5, lr
 8021066:	f280 81f5 	bge.w	8021454 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 802106a:	2800      	cmp	r0, #0
 802106c:	f2c0 81f2 	blt.w	8021454 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8021070:	f103 3eff 	add.w	lr, r3, #4294967295
 8021074:	4570      	cmp	r0, lr
 8021076:	f280 81ed 	bge.w	8021454 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 802107a:	b212      	sxth	r2, r2
 802107c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802107e:	fa1f fe81 	uxth.w	lr, r1
 8021082:	fb00 5002 	mla	r0, r0, r2, r5
 8021086:	ea4f 150e 	mov.w	r5, lr, lsl #4
 802108a:	eb03 0a00 	add.w	sl, r3, r0
 802108e:	f813 9000 	ldrb.w	r9, [r3, r0]
 8021092:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 8021096:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802109a:	b29b      	uxth	r3, r3
 802109c:	f1bc 0f00 	cmp.w	ip, #0
 80210a0:	f000 81bb 	beq.w	802141a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47a>
 80210a4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80210a8:	eb0a 0b02 	add.w	fp, sl, r2
 80210ac:	fa1f fa8c 	uxth.w	sl, ip
 80210b0:	940d      	str	r4, [sp, #52]	@ 0x34
 80210b2:	fb0a fe0e 	mul.w	lr, sl, lr
 80210b6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80210ba:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80210be:	eba5 050e 	sub.w	r5, r5, lr
 80210c2:	940e      	str	r4, [sp, #56]	@ 0x38
 80210c4:	fa1f fa8a 	uxth.w	sl, sl
 80210c8:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80210ca:	b2ad      	uxth	r5, r5
 80210cc:	eba3 030a 	sub.w	r3, r3, sl
 80210d0:	fb08 f505 	mul.w	r5, r8, r5
 80210d4:	b29b      	uxth	r3, r3
 80210d6:	fb09 5303 	mla	r3, r9, r3, r5
 80210da:	fb0a 3304 	mla	r3, sl, r4, r3
 80210de:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80210e0:	fb0e 3304 	mla	r3, lr, r4, r3
 80210e4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80210e8:	2b00      	cmp	r3, #0
 80210ea:	f000 8111 	beq.w	8021310 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 80210ee:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80210f0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 80210f4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80210f8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80210fc:	f000 8192 	beq.w	8021424 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 8021100:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8021104:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021108:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802110c:	fb0a fe0e 	mul.w	lr, sl, lr
 8021110:	fb09 f000 	mul.w	r0, r9, r0
 8021114:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8021118:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 802111c:	f100 0b20 	add.w	fp, r0, #32
 8021120:	44ce      	add	lr, r9
 8021122:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8021126:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802112a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802112e:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8021132:	ea4e 0909 	orr.w	r9, lr, r9
 8021136:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 802113a:	8868      	ldrh	r0, [r5, #2]
 802113c:	d019      	beq.n	8021172 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 802113e:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8021142:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021146:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802114a:	fb0a fe0e 	mul.w	lr, sl, lr
 802114e:	fb08 f800 	mul.w	r8, r8, r0
 8021152:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8021156:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 802115a:	f108 0b20 	add.w	fp, r8, #32
 802115e:	4486      	add	lr, r0
 8021160:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8021164:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021168:	0a00      	lsrs	r0, r0, #8
 802116a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802116e:	ea4e 0000 	orr.w	r0, lr, r0
 8021172:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8021176:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 802117a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802117e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8021182:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8021186:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 802118a:	ea4e 0909 	orr.w	r9, lr, r9
 802118e:	ea4a 0000 	orr.w	r0, sl, r0
 8021192:	f1bc 0f00 	cmp.w	ip, #0
 8021196:	f000 8147 	beq.w	8021428 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>
 802119a:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 802119e:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80211a0:	3a01      	subs	r2, #1
 80211a2:	2cff      	cmp	r4, #255	@ 0xff
 80211a4:	ea4f 0242 	mov.w	r2, r2, lsl #1
 80211a8:	f102 0202 	add.w	r2, r2, #2
 80211ac:	eb05 0e02 	add.w	lr, r5, r2
 80211b0:	5aaa      	ldrh	r2, [r5, r2]
 80211b2:	d018      	beq.n	80211e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 80211b4:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 80211b8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80211bc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80211c0:	fb04 fa02 	mul.w	sl, r4, r2
 80211c4:	fb08 f805 	mul.w	r8, r8, r5
 80211c8:	f10a 0520 	add.w	r5, sl, #32
 80211cc:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80211d0:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80211d4:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80211d8:	4442      	add	r2, r8
 80211da:	0a2d      	lsrs	r5, r5, #8
 80211dc:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80211e0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80211e4:	432a      	orrs	r2, r5
 80211e6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80211e8:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80211ec:	2cff      	cmp	r4, #255	@ 0xff
 80211ee:	d01a      	beq.n	8021226 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 80211f0:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 80211f4:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80211f8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80211fc:	fb04 fa05 	mul.w	sl, r4, r5
 8021200:	fb08 f80e 	mul.w	r8, r8, lr
 8021204:	f10a 0e20 	add.w	lr, sl, #32
 8021208:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 802120c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8021210:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8021214:	4445      	add	r5, r8
 8021216:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802121a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802121e:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8021222:	ea45 050e 	orr.w	r5, r5, lr
 8021226:	fb1c fe01 	smulbb	lr, ip, r1
 802122a:	f1cc 0810 	rsb	r8, ip, #16
 802122e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021232:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8021236:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802123a:	eba8 0801 	sub.w	r8, r8, r1
 802123e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8021242:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021246:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802124a:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 802124e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8021252:	ea4a 0202 	orr.w	r2, sl, r2
 8021256:	4341      	muls	r1, r0
 8021258:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 802125c:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8021260:	fb09 1108 	mla	r1, r9, r8, r1
 8021264:	ea4b 0505 	orr.w	r5, fp, r5
 8021268:	fb0c 1102 	mla	r1, ip, r2, r1
 802126c:	fb0e 1e05 	mla	lr, lr, r5, r1
 8021270:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021274:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021278:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802127c:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8021280:	ea42 0e0e 	orr.w	lr, r2, lr
 8021284:	fa1f f28e 	uxth.w	r2, lr
 8021288:	2bff      	cmp	r3, #255	@ 0xff
 802128a:	d103      	bne.n	8021294 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802128c:	9912      	ldr	r1, [sp, #72]	@ 0x48
 802128e:	29ff      	cmp	r1, #255	@ 0xff
 8021290:	f000 80de 	beq.w	8021450 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021294:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8021296:	1215      	asrs	r5, r2, #8
 8021298:	8838      	ldrh	r0, [r7, #0]
 802129a:	434b      	muls	r3, r1
 802129c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80212a0:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80212a2:	f103 0c01 	add.w	ip, r3, #1
 80212a6:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 80212aa:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80212ae:	fa5f fc83 	uxtb.w	ip, r3
 80212b2:	1203      	asrs	r3, r0, #8
 80212b4:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 80212b8:	fb13 f30c 	smulbb	r3, r3, ip
 80212bc:	fb05 3501 	mla	r5, r5, r1, r3
 80212c0:	10c3      	asrs	r3, r0, #3
 80212c2:	10d1      	asrs	r1, r2, #3
 80212c4:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80212c8:	00d2      	lsls	r2, r2, #3
 80212ca:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80212ce:	b2ad      	uxth	r5, r5
 80212d0:	fb13 f30c 	smulbb	r3, r3, ip
 80212d4:	b2d2      	uxtb	r2, r2
 80212d6:	fb01 3104 	mla	r1, r1, r4, r3
 80212da:	00c3      	lsls	r3, r0, #3
 80212dc:	b2db      	uxtb	r3, r3
 80212de:	b289      	uxth	r1, r1
 80212e0:	fb13 f30c 	smulbb	r3, r3, ip
 80212e4:	fb02 3304 	mla	r3, r2, r4, r3
 80212e8:	b29a      	uxth	r2, r3
 80212ea:	1c6b      	adds	r3, r5, #1
 80212ec:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80212f0:	1c53      	adds	r3, r2, #1
 80212f2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80212f6:	1c4a      	adds	r2, r1, #1
 80212f8:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80212fc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021300:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021304:	0949      	lsrs	r1, r1, #5
 8021306:	432b      	orrs	r3, r5
 8021308:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802130c:	430b      	orrs	r3, r1
 802130e:	803b      	strh	r3, [r7, #0]
 8021310:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8021312:	3702      	adds	r7, #2
 8021314:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8021316:	4413      	add	r3, r2
 8021318:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 802131a:	9321      	str	r3, [sp, #132]	@ 0x84
 802131c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802131e:	441a      	add	r2, r3
 8021320:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8021322:	3b01      	subs	r3, #1
 8021324:	9222      	str	r2, [sp, #136]	@ 0x88
 8021326:	9313      	str	r3, [sp, #76]	@ 0x4c
 8021328:	e687      	b.n	802103a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802132a:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 802132c:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 802132e:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 8021330:	4433      	add	r3, r6
 8021332:	9321      	str	r3, [sp, #132]	@ 0x84
 8021334:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021336:	441c      	add	r4, r3
 8021338:	9b08      	ldr	r3, [sp, #32]
 802133a:	3b01      	subs	r3, #1
 802133c:	9422      	str	r4, [sp, #136]	@ 0x88
 802133e:	9308      	str	r3, [sp, #32]
 8021340:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021342:	3302      	adds	r3, #2
 8021344:	9309      	str	r3, [sp, #36]	@ 0x24
 8021346:	e656      	b.n	8020ff6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8021348:	d028      	beq.n	802139c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 802134a:	9b08      	ldr	r3, [sp, #32]
 802134c:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 802134e:	3b01      	subs	r3, #1
 8021350:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 8021352:	fb00 5003 	mla	r0, r0, r3, r5
 8021356:	1400      	asrs	r0, r0, #16
 8021358:	f53f ae6a 	bmi.w	8021030 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802135c:	3901      	subs	r1, #1
 802135e:	4288      	cmp	r0, r1
 8021360:	f6bf ae66 	bge.w	8021030 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021364:	9924      	ldr	r1, [sp, #144]	@ 0x90
 8021366:	9822      	ldr	r0, [sp, #136]	@ 0x88
 8021368:	fb01 0303 	mla	r3, r1, r3, r0
 802136c:	141b      	asrs	r3, r3, #16
 802136e:	f53f ae5f 	bmi.w	8021030 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021372:	3a01      	subs	r2, #1
 8021374:	4293      	cmp	r3, r2
 8021376:	f6bf ae5b 	bge.w	8021030 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802137a:	9b08      	ldr	r3, [sp, #32]
 802137c:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8021380:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 8021384:	9313      	str	r3, [sp, #76]	@ 0x4c
 8021386:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8021388:	2b00      	cmp	r3, #0
 802138a:	f300 8082 	bgt.w	8021492 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f2>
 802138e:	9b08      	ldr	r3, [sp, #32]
 8021390:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021394:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021396:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802139a:	9309      	str	r3, [sp, #36]	@ 0x24
 802139c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 802139e:	2b00      	cmp	r3, #0
 80213a0:	f340 81ef 	ble.w	8021782 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e2>
 80213a4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80213a8:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80213aa:	ee30 0a04 	vadd.f32	s0, s0, s8
 80213ae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80213b2:	eef0 6a62 	vmov.f32	s13, s5
 80213b6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80213ba:	ee31 1a05 	vadd.f32	s2, s2, s10
 80213be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80213c2:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 80213c6:	eef0 6a43 	vmov.f32	s13, s6
 80213ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80213ce:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 80213d2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80213d6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80213da:	ee77 2a62 	vsub.f32	s5, s14, s5
 80213de:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80213e2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80213e6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80213ea:	ee12 2a90 	vmov	r2, s5
 80213ee:	eef0 2a47 	vmov.f32	s5, s14
 80213f2:	fb92 f3f3 	sdiv	r3, r2, r3
 80213f6:	ee13 2a10 	vmov	r2, s6
 80213fa:	9323      	str	r3, [sp, #140]	@ 0x8c
 80213fc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80213fe:	eeb0 3a67 	vmov.f32	s6, s15
 8021402:	fb92 f3f3 	sdiv	r3, r2, r3
 8021406:	9324      	str	r3, [sp, #144]	@ 0x90
 8021408:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 802140a:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 802140c:	3b01      	subs	r3, #1
 802140e:	9311      	str	r3, [sp, #68]	@ 0x44
 8021410:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021412:	bf08      	it	eq
 8021414:	4613      	moveq	r3, r2
 8021416:	9308      	str	r3, [sp, #32]
 8021418:	e5df      	b.n	8020fda <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802141a:	fb08 f505 	mul.w	r5, r8, r5
 802141e:	fb09 5303 	mla	r3, r9, r3, r5
 8021422:	e65f      	b.n	80210e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8021424:	4681      	mov	r9, r0
 8021426:	e686      	b.n	8021136 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8021428:	f1c1 0210 	rsb	r2, r1, #16
 802142c:	4341      	muls	r1, r0
 802142e:	fb09 1902 	mla	r9, r9, r2, r1
 8021432:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021436:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802143a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802143e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021442:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8021446:	ea42 0909 	orr.w	r9, r2, r9
 802144a:	fa1f f289 	uxth.w	r2, r9
 802144e:	e71b      	b.n	8021288 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8021450:	803a      	strh	r2, [r7, #0]
 8021452:	e75d      	b.n	8021310 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021454:	f115 0e01 	adds.w	lr, r5, #1
 8021458:	f53f af5a 	bmi.w	8021310 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802145c:	4572      	cmp	r2, lr
 802145e:	f6ff af57 	blt.w	8021310 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021462:	f110 0e01 	adds.w	lr, r0, #1
 8021466:	f53f af53 	bmi.w	8021310 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802146a:	4573      	cmp	r3, lr
 802146c:	f6ff af50 	blt.w	8021310 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021470:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8021472:	b21b      	sxth	r3, r3
 8021474:	b212      	sxth	r2, r2
 8021476:	9502      	str	r5, [sp, #8]
 8021478:	9301      	str	r3, [sp, #4]
 802147a:	9200      	str	r2, [sp, #0]
 802147c:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8021480:	e9cd c405 	strd	ip, r4, [sp, #20]
 8021484:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 8021488:	4639      	mov	r1, r7
 802148a:	9815      	ldr	r0, [sp, #84]	@ 0x54
 802148c:	f7ff fc02 	bl	8020c94 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8021490:	e73e      	b.n	8021310 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021492:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8021494:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021498:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 802149a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 802149e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80214a0:	fa1f fc82 	uxth.w	ip, r2
 80214a4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80214a8:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80214aa:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80214ae:	141f      	asrs	r7, r3, #16
 80214b0:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80214b2:	141b      	asrs	r3, r3, #16
 80214b4:	fb01 3707 	mla	r7, r1, r7, r3
 80214b8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80214ba:	eb03 0a07 	add.w	sl, r3, r7
 80214be:	f813 9007 	ldrb.w	r9, [r3, r7]
 80214c2:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 80214c6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80214ca:	b29b      	uxth	r3, r3
 80214cc:	2d00      	cmp	r5, #0
 80214ce:	f000 813d 	beq.w	802174c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>
 80214d2:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80214d6:	eb0a 0b01 	add.w	fp, sl, r1
 80214da:	fa1f fa85 	uxth.w	sl, r5
 80214de:	940f      	str	r4, [sp, #60]	@ 0x3c
 80214e0:	fb0a fc0c 	mul.w	ip, sl, ip
 80214e4:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80214e8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80214ec:	eba0 000c 	sub.w	r0, r0, ip
 80214f0:	9410      	str	r4, [sp, #64]	@ 0x40
 80214f2:	fa1f fa8a 	uxth.w	sl, sl
 80214f6:	b280      	uxth	r0, r0
 80214f8:	eba3 030a 	sub.w	r3, r3, sl
 80214fc:	fb08 f000 	mul.w	r0, r8, r0
 8021500:	b29b      	uxth	r3, r3
 8021502:	fb09 0303 	mla	r3, r9, r3, r0
 8021506:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8021508:	fb0a 3300 	mla	r3, sl, r0, r3
 802150c:	fb0c 3304 	mla	r3, ip, r4, r3
 8021510:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021514:	2b00      	cmp	r3, #0
 8021516:	f000 810b 	beq.w	8021730 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 802151a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 802151c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8021520:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8021522:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8021526:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802152a:	f000 8114 	beq.w	8021756 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 802152e:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8021532:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021536:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 802153a:	fb0a fc0c 	mul.w	ip, sl, ip
 802153e:	fb09 f707 	mul.w	r7, r9, r7
 8021542:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8021546:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 802154a:	f107 0b20 	add.w	fp, r7, #32
 802154e:	44cc      	add	ip, r9
 8021550:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8021554:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021558:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802155c:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8021560:	ea4c 0909 	orr.w	r9, ip, r9
 8021564:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8021568:	8847      	ldrh	r7, [r0, #2]
 802156a:	d019      	beq.n	80215a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x600>
 802156c:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8021570:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021574:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8021578:	fb0a fc0c 	mul.w	ip, sl, ip
 802157c:	fb08 f807 	mul.w	r8, r8, r7
 8021580:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8021584:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8021588:	f108 0b20 	add.w	fp, r8, #32
 802158c:	44bc      	add	ip, r7
 802158e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8021592:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021596:	0a3f      	lsrs	r7, r7, #8
 8021598:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 802159c:	ea4c 0707 	orr.w	r7, ip, r7
 80215a0:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80215a4:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 80215a8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80215ac:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 80215b0:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 80215b4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80215b8:	ea4c 0909 	orr.w	r9, ip, r9
 80215bc:	ea4a 0707 	orr.w	r7, sl, r7
 80215c0:	2d00      	cmp	r5, #0
 80215c2:	f000 80ca 	beq.w	802175a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ba>
 80215c6:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 80215ca:	3901      	subs	r1, #1
 80215cc:	0049      	lsls	r1, r1, #1
 80215ce:	3102      	adds	r1, #2
 80215d0:	eb00 0c01 	add.w	ip, r0, r1
 80215d4:	5a41      	ldrh	r1, [r0, r1]
 80215d6:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 80215d8:	28ff      	cmp	r0, #255	@ 0xff
 80215da:	d019      	beq.n	8021610 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x670>
 80215dc:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 80215e0:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 80215e2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80215e6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80215ea:	fb04 fa01 	mul.w	sl, r4, r1
 80215ee:	fb08 f800 	mul.w	r8, r8, r0
 80215f2:	f10a 0020 	add.w	r0, sl, #32
 80215f6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80215fa:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80215fe:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8021602:	4441      	add	r1, r8
 8021604:	0a00      	lsrs	r0, r0, #8
 8021606:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802160a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802160e:	4301      	orrs	r1, r0
 8021610:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8021612:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8021616:	2cff      	cmp	r4, #255	@ 0xff
 8021618:	d01a      	beq.n	8021650 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b0>
 802161a:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 802161e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021622:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021626:	fb04 fa00 	mul.w	sl, r4, r0
 802162a:	fb08 f80c 	mul.w	r8, r8, ip
 802162e:	f10a 0c20 	add.w	ip, sl, #32
 8021632:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8021636:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 802163a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802163e:	4440      	add	r0, r8
 8021640:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021644:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8021648:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 802164c:	ea40 000c 	orr.w	r0, r0, ip
 8021650:	fb15 fc02 	smulbb	ip, r5, r2
 8021654:	f1c5 0810 	rsb	r8, r5, #16
 8021658:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 802165c:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8021660:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8021664:	eba8 0802 	sub.w	r8, r8, r2
 8021668:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 802166c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021670:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8021674:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8021678:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 802167c:	ea4a 0101 	orr.w	r1, sl, r1
 8021680:	437a      	muls	r2, r7
 8021682:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8021686:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 802168a:	fb09 2208 	mla	r2, r9, r8, r2
 802168e:	ea4b 0000 	orr.w	r0, fp, r0
 8021692:	fb05 2201 	mla	r2, r5, r1, r2
 8021696:	fb0c 2200 	mla	r2, ip, r0, r2
 802169a:	0d57      	lsrs	r7, r2, #21
 802169c:	0952      	lsrs	r2, r2, #5
 802169e:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 80216a2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80216a6:	433a      	orrs	r2, r7
 80216a8:	2bff      	cmp	r3, #255	@ 0xff
 80216aa:	b292      	uxth	r2, r2
 80216ac:	d102      	bne.n	80216b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 80216ae:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80216b0:	29ff      	cmp	r1, #255	@ 0xff
 80216b2:	d063      	beq.n	802177c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7dc>
 80216b4:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80216b6:	1215      	asrs	r5, r2, #8
 80216b8:	f8be 1000 	ldrh.w	r1, [lr]
 80216bc:	4343      	muls	r3, r0
 80216be:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80216c0:	10cf      	asrs	r7, r1, #3
 80216c2:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80216c6:	1c58      	adds	r0, r3, #1
 80216c8:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80216cc:	eb00 2323 	add.w	r3, r0, r3, asr #8
 80216d0:	1208      	asrs	r0, r1, #8
 80216d2:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80216d6:	00c9      	lsls	r1, r1, #3
 80216d8:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80216dc:	b2db      	uxtb	r3, r3
 80216de:	b2c9      	uxtb	r1, r1
 80216e0:	fb10 f003 	smulbb	r0, r0, r3
 80216e4:	fb11 f103 	smulbb	r1, r1, r3
 80216e8:	fb05 0504 	mla	r5, r5, r4, r0
 80216ec:	10d0      	asrs	r0, r2, #3
 80216ee:	fb17 f703 	smulbb	r7, r7, r3
 80216f2:	00d2      	lsls	r2, r2, #3
 80216f4:	b2ad      	uxth	r5, r5
 80216f6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80216fa:	b2d2      	uxtb	r2, r2
 80216fc:	fb00 7004 	mla	r0, r0, r4, r7
 8021700:	1c6b      	adds	r3, r5, #1
 8021702:	fb02 1204 	mla	r2, r2, r4, r1
 8021706:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802170a:	b292      	uxth	r2, r2
 802170c:	b280      	uxth	r0, r0
 802170e:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8021712:	1c57      	adds	r7, r2, #1
 8021714:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8021718:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802171c:	433d      	orrs	r5, r7
 802171e:	1c47      	adds	r7, r0, #1
 8021720:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8021724:	097f      	lsrs	r7, r7, #5
 8021726:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 802172a:	433d      	orrs	r5, r7
 802172c:	f8ae 5000 	strh.w	r5, [lr]
 8021730:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8021732:	f10e 0e02 	add.w	lr, lr, #2
 8021736:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8021738:	4413      	add	r3, r2
 802173a:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 802173c:	9321      	str	r3, [sp, #132]	@ 0x84
 802173e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021740:	441a      	add	r2, r3
 8021742:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8021744:	3b01      	subs	r3, #1
 8021746:	9222      	str	r2, [sp, #136]	@ 0x88
 8021748:	9313      	str	r3, [sp, #76]	@ 0x4c
 802174a:	e61c      	b.n	8021386 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 802174c:	fb08 f000 	mul.w	r0, r8, r0
 8021750:	fb09 0303 	mla	r3, r9, r3, r0
 8021754:	e6dc      	b.n	8021510 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x570>
 8021756:	46b9      	mov	r9, r7
 8021758:	e704      	b.n	8021564 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c4>
 802175a:	f1c2 0110 	rsb	r1, r2, #16
 802175e:	437a      	muls	r2, r7
 8021760:	fb09 2901 	mla	r9, r9, r1, r2
 8021764:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021768:	ea4f 5059 	mov.w	r0, r9, lsr #21
 802176c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8021770:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021774:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8021778:	4302      	orrs	r2, r0
 802177a:	e795      	b.n	80216a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x708>
 802177c:	f8ae 2000 	strh.w	r2, [lr]
 8021780:	e7d6      	b.n	8021730 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x790>
 8021782:	b017      	add	sp, #92	@ 0x5c
 8021784:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021788 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8021788:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802178c:	b085      	sub	sp, #20
 802178e:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 8021792:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 8021796:	2800      	cmp	r0, #0
 8021798:	9103      	str	r1, [sp, #12]
 802179a:	fb00 7406 	mla	r4, r0, r6, r7
 802179e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 80217a2:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 80217a6:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 80217aa:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 80217ae:	eb02 0904 	add.w	r9, r2, r4
 80217b2:	9501      	str	r5, [sp, #4]
 80217b4:	f2c0 8141 	blt.w	8021a3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 80217b8:	4583      	cmp	fp, r0
 80217ba:	f340 813e 	ble.w	8021a3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 80217be:	2f00      	cmp	r7, #0
 80217c0:	f2c0 8137 	blt.w	8021a32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 80217c4:	42be      	cmp	r6, r7
 80217c6:	f340 8134 	ble.w	8021a32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 80217ca:	f812 c004 	ldrb.w	ip, [r2, r4]
 80217ce:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 80217d2:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 80217d6:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80217da:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 80217de:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80217e2:	4355      	muls	r5, r2
 80217e4:	fb0c f203 	mul.w	r2, ip, r3
 80217e8:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 80217ec:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 80217f0:	441d      	add	r5, r3
 80217f2:	f102 0320 	add.w	r3, r2, #32
 80217f6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80217fa:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 80217fe:	0a1b      	lsrs	r3, r3, #8
 8021800:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8021804:	431c      	orrs	r4, r3
 8021806:	1c7b      	adds	r3, r7, #1
 8021808:	f100 811c 	bmi.w	8021a44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 802180c:	429e      	cmp	r6, r3
 802180e:	f340 8119 	ble.w	8021a44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8021812:	2900      	cmp	r1, #0
 8021814:	f000 8119 	beq.w	8021a4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8021818:	9a01      	ldr	r2, [sp, #4]
 802181a:	f899 3001 	ldrb.w	r3, [r9, #1]
 802181e:	8855      	ldrh	r5, [r2, #2]
 8021820:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8021824:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 8021828:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 802182c:	fb08 f802 	mul.w	r8, r8, r2
 8021830:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 8021834:	435d      	muls	r5, r3
 8021836:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 802183a:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 802183e:	44d0      	add	r8, sl
 8021840:	f105 0a20 	add.w	sl, r5, #32
 8021844:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8021848:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 802184c:	0a2d      	lsrs	r5, r5, #8
 802184e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8021852:	432a      	orrs	r2, r5
 8021854:	3001      	adds	r0, #1
 8021856:	f100 80fe 	bmi.w	8021a56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 802185a:	4583      	cmp	fp, r0
 802185c:	f340 80fb 	ble.w	8021a56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8021860:	f1be 0f00 	cmp.w	lr, #0
 8021864:	f000 80fc 	beq.w	8021a60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8021868:	2f00      	cmp	r7, #0
 802186a:	f2c0 80f1 	blt.w	8021a50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 802186e:	42be      	cmp	r6, r7
 8021870:	f340 80ee 	ble.w	8021a50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8021874:	9801      	ldr	r0, [sp, #4]
 8021876:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 802187a:	f819 5006 	ldrb.w	r5, [r9, r6]
 802187e:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8021882:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8021886:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 802188a:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 802188e:	fb0a fa00 	mul.w	sl, sl, r0
 8021892:	fb05 f808 	mul.w	r8, r5, r8
 8021896:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 802189a:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 802189e:	4482      	add	sl, r0
 80218a0:	f108 0020 	add.w	r0, r8, #32
 80218a4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80218a8:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 80218ac:	0a00      	lsrs	r0, r0, #8
 80218ae:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80218b2:	ea4b 0b00 	orr.w	fp, fp, r0
 80218b6:	3701      	adds	r7, #1
 80218b8:	f100 80d7 	bmi.w	8021a6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 80218bc:	42be      	cmp	r6, r7
 80218be:	f340 80d4 	ble.w	8021a6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 80218c2:	2900      	cmp	r1, #0
 80218c4:	f000 80d4 	beq.w	8021a70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 80218c8:	3601      	adds	r6, #1
 80218ca:	9801      	ldr	r0, [sp, #4]
 80218cc:	f819 7006 	ldrb.w	r7, [r9, r6]
 80218d0:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 80218d4:	ea4f 09e7 	mov.w	r9, r7, asr #3
 80218d8:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 80218dc:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80218e0:	fb09 f906 	mul.w	r9, r9, r6
 80218e4:	fb07 f800 	mul.w	r8, r7, r0
 80218e8:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 80218ec:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 80218f0:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 80218f4:	44d1      	add	r9, sl
 80218f6:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 80218fa:	f108 0020 	add.w	r0, r8, #32
 80218fe:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021902:	0a00      	lsrs	r0, r0, #8
 8021904:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021908:	4330      	orrs	r0, r6
 802190a:	b28e      	uxth	r6, r1
 802190c:	fa1f f98e 	uxth.w	r9, lr
 8021910:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8021914:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8021918:	fb06 f809 	mul.w	r8, r6, r9
 802191c:	0136      	lsls	r6, r6, #4
 802191e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021922:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8021926:	9601      	str	r6, [sp, #4]
 8021928:	ea4a 0404 	orr.w	r4, sl, r4
 802192c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021930:	fa1f f689 	uxth.w	r6, r9
 8021934:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8021938:	fb11 f90e 	smulbb	r9, r1, lr
 802193c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021940:	9602      	str	r6, [sp, #8]
 8021942:	4626      	mov	r6, r4
 8021944:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8021948:	f1ce 0410 	rsb	r4, lr, #16
 802194c:	ea4a 0202 	orr.w	r2, sl, r2
 8021950:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8021954:	1a64      	subs	r4, r4, r1
 8021956:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 802195a:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 802195e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8021962:	434a      	muls	r2, r1
 8021964:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8021968:	ea4a 0000 	orr.w	r0, sl, r0
 802196c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8021970:	fb04 2406 	mla	r4, r4, r6, r2
 8021974:	9903      	ldr	r1, [sp, #12]
 8021976:	fb09 4200 	mla	r2, r9, r0, r4
 802197a:	ea4f 440b 	mov.w	r4, fp, lsl #16
 802197e:	9801      	ldr	r0, [sp, #4]
 8021980:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8021984:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8021988:	8809      	ldrh	r1, [r1, #0]
 802198a:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 802198e:	ea44 0b0b 	orr.w	fp, r4, fp
 8021992:	9c02      	ldr	r4, [sp, #8]
 8021994:	1b00      	subs	r0, r0, r4
 8021996:	9c01      	ldr	r4, [sp, #4]
 8021998:	fb0e 2e0b 	mla	lr, lr, fp, r2
 802199c:	eba4 0608 	sub.w	r6, r4, r8
 80219a0:	b280      	uxth	r0, r0
 80219a2:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80219a6:	b2b6      	uxth	r6, r6
 80219a8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80219ac:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80219b0:	4373      	muls	r3, r6
 80219b2:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 80219b6:	fb0c 3300 	mla	r3, ip, r0, r3
 80219ba:	9802      	ldr	r0, [sp, #8]
 80219bc:	ea42 0e0e 	orr.w	lr, r2, lr
 80219c0:	fb00 3505 	mla	r5, r0, r5, r3
 80219c4:	120b      	asrs	r3, r1, #8
 80219c6:	10c8      	asrs	r0, r1, #3
 80219c8:	fb08 5707 	mla	r7, r8, r7, r5
 80219cc:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 80219d0:	00c9      	lsls	r1, r1, #3
 80219d2:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80219d6:	ea6f 2727 	mvn.w	r7, r7, asr #8
 80219da:	fa1f f28e 	uxth.w	r2, lr
 80219de:	b2c9      	uxtb	r1, r1
 80219e0:	b2ff      	uxtb	r7, r7
 80219e2:	437b      	muls	r3, r7
 80219e4:	4378      	muls	r0, r7
 80219e6:	434f      	muls	r7, r1
 80219e8:	1c59      	adds	r1, r3, #1
 80219ea:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80219ee:	1213      	asrs	r3, r2, #8
 80219f0:	f023 0307 	bic.w	r3, r3, #7
 80219f4:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80219f8:	1c41      	adds	r1, r0, #1
 80219fa:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80219fe:	10d1      	asrs	r1, r2, #3
 8021a00:	021b      	lsls	r3, r3, #8
 8021a02:	f021 0103 	bic.w	r1, r1, #3
 8021a06:	00d2      	lsls	r2, r2, #3
 8021a08:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8021a0c:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8021a10:	00c9      	lsls	r1, r1, #3
 8021a12:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8021a16:	430b      	orrs	r3, r1
 8021a18:	1c79      	adds	r1, r7, #1
 8021a1a:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8021a1e:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8021a22:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021a26:	431a      	orrs	r2, r3
 8021a28:	9b03      	ldr	r3, [sp, #12]
 8021a2a:	801a      	strh	r2, [r3, #0]
 8021a2c:	b005      	add	sp, #20
 8021a2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021a32:	f04f 0c00 	mov.w	ip, #0
 8021a36:	4664      	mov	r4, ip
 8021a38:	e6e5      	b.n	8021806 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8021a3a:	2300      	movs	r3, #0
 8021a3c:	469c      	mov	ip, r3
 8021a3e:	461a      	mov	r2, r3
 8021a40:	461c      	mov	r4, r3
 8021a42:	e707      	b.n	8021854 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021a44:	2300      	movs	r3, #0
 8021a46:	461a      	mov	r2, r3
 8021a48:	e704      	b.n	8021854 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021a4a:	460b      	mov	r3, r1
 8021a4c:	460a      	mov	r2, r1
 8021a4e:	e701      	b.n	8021854 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021a50:	2500      	movs	r5, #0
 8021a52:	46ab      	mov	fp, r5
 8021a54:	e72f      	b.n	80218b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8021a56:	2700      	movs	r7, #0
 8021a58:	463d      	mov	r5, r7
 8021a5a:	4638      	mov	r0, r7
 8021a5c:	46bb      	mov	fp, r7
 8021a5e:	e754      	b.n	802190a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021a60:	4677      	mov	r7, lr
 8021a62:	4675      	mov	r5, lr
 8021a64:	4670      	mov	r0, lr
 8021a66:	46f3      	mov	fp, lr
 8021a68:	e74f      	b.n	802190a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021a6a:	2700      	movs	r7, #0
 8021a6c:	4638      	mov	r0, r7
 8021a6e:	e74c      	b.n	802190a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021a70:	460f      	mov	r7, r1
 8021a72:	4608      	mov	r0, r1
 8021a74:	e749      	b.n	802190a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08021a78 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021a78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021a7c:	b093      	sub	sp, #76	@ 0x4c
 8021a7e:	9210      	str	r2, [sp, #64]	@ 0x40
 8021a80:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8021a82:	9011      	str	r0, [sp, #68]	@ 0x44
 8021a84:	910e      	str	r1, [sp, #56]	@ 0x38
 8021a86:	6850      	ldr	r0, [r2, #4]
 8021a88:	9306      	str	r3, [sp, #24]
 8021a8a:	6812      	ldr	r2, [r2, #0]
 8021a8c:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8021a90:	fb00 1303 	mla	r3, r0, r3, r1
 8021a94:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021a98:	9307      	str	r3, [sp, #28]
 8021a9a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021a9c:	681b      	ldr	r3, [r3, #0]
 8021a9e:	9308      	str	r3, [sp, #32]
 8021aa0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021aa2:	685b      	ldr	r3, [r3, #4]
 8021aa4:	9309      	str	r3, [sp, #36]	@ 0x24
 8021aa6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8021aa8:	2b00      	cmp	r3, #0
 8021aaa:	dc03      	bgt.n	8021ab4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8021aac:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8021aae:	2b00      	cmp	r3, #0
 8021ab0:	f340 83b6 	ble.w	8022220 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8021ab4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021ab6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021aba:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021abe:	1e48      	subs	r0, r1, #1
 8021ac0:	1e55      	subs	r5, r2, #1
 8021ac2:	9b06      	ldr	r3, [sp, #24]
 8021ac4:	2b00      	cmp	r3, #0
 8021ac6:	f340 8165 	ble.w	8021d94 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8021aca:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 8021acc:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8021ace:	1436      	asrs	r6, r6, #16
 8021ad0:	ea4f 4323 	mov.w	r3, r3, asr #16
 8021ad4:	d406      	bmi.n	8021ae4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021ad6:	4286      	cmp	r6, r0
 8021ad8:	da04      	bge.n	8021ae4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021ada:	2b00      	cmp	r3, #0
 8021adc:	db02      	blt.n	8021ae4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8021ade:	42ab      	cmp	r3, r5
 8021ae0:	f2c0 8159 	blt.w	8021d96 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8021ae4:	3601      	adds	r6, #1
 8021ae6:	f100 8146 	bmi.w	8021d76 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 8021aea:	42b1      	cmp	r1, r6
 8021aec:	f2c0 8143 	blt.w	8021d76 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 8021af0:	3301      	adds	r3, #1
 8021af2:	f100 8140 	bmi.w	8021d76 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 8021af6:	429a      	cmp	r2, r3
 8021af8:	f2c0 813d 	blt.w	8021d76 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fe>
 8021afc:	9b06      	ldr	r3, [sp, #24]
 8021afe:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8021b02:	9f07      	ldr	r7, [sp, #28]
 8021b04:	930f      	str	r3, [sp, #60]	@ 0x3c
 8021b06:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8021b08:	2b00      	cmp	r3, #0
 8021b0a:	f340 8166 	ble.w	8021dda <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8021b0e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8021b10:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 8021b12:	1418      	asrs	r0, r3, #16
 8021b14:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8021b16:	142d      	asrs	r5, r5, #16
 8021b18:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8021b1c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8021b1e:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8021b22:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021b24:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8021b28:	f100 81f0 	bmi.w	8021f0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8021b2c:	f102 3eff 	add.w	lr, r2, #4294967295
 8021b30:	4575      	cmp	r5, lr
 8021b32:	f280 81eb 	bge.w	8021f0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8021b36:	2800      	cmp	r0, #0
 8021b38:	f2c0 81e8 	blt.w	8021f0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8021b3c:	f103 3eff 	add.w	lr, r3, #4294967295
 8021b40:	4570      	cmp	r0, lr
 8021b42:	f280 81e3 	bge.w	8021f0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8021b46:	b212      	sxth	r2, r2
 8021b48:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021b4a:	fa1f fe81 	uxth.w	lr, r1
 8021b4e:	fb00 5002 	mla	r0, r0, r2, r5
 8021b52:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8021b56:	eb03 0a00 	add.w	sl, r3, r0
 8021b5a:	f813 9000 	ldrb.w	r9, [r3, r0]
 8021b5e:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 8021b62:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021b66:	b29b      	uxth	r3, r3
 8021b68:	f1bc 0f00 	cmp.w	ip, #0
 8021b6c:	f000 817b 	beq.w	8021e66 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ee>
 8021b70:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8021b74:	eb0a 0b02 	add.w	fp, sl, r2
 8021b78:	fa1f fa8c 	uxth.w	sl, ip
 8021b7c:	940a      	str	r4, [sp, #40]	@ 0x28
 8021b7e:	fb0a fe0e 	mul.w	lr, sl, lr
 8021b82:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021b86:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8021b8a:	eba5 050e 	sub.w	r5, r5, lr
 8021b8e:	940b      	str	r4, [sp, #44]	@ 0x2c
 8021b90:	fa1f fa8a 	uxth.w	sl, sl
 8021b94:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8021b96:	b2ad      	uxth	r5, r5
 8021b98:	eba3 030a 	sub.w	r3, r3, sl
 8021b9c:	fb08 f505 	mul.w	r5, r8, r5
 8021ba0:	b29b      	uxth	r3, r3
 8021ba2:	fb09 5303 	mla	r3, r9, r3, r5
 8021ba6:	fb0a 3304 	mla	r3, sl, r4, r3
 8021baa:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8021bac:	fb0e 3304 	mla	r3, lr, r4, r3
 8021bb0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021bb4:	2b00      	cmp	r3, #0
 8021bb6:	f000 80d1 	beq.w	8021d5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8021bba:	9c08      	ldr	r4, [sp, #32]
 8021bbc:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8021bc0:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8021bc4:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8021bc8:	f000 8152 	beq.w	8021e70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8021bcc:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8021bd0:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021bd4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021bd8:	fb0a fe0e 	mul.w	lr, sl, lr
 8021bdc:	fb09 f000 	mul.w	r0, r9, r0
 8021be0:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8021be4:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8021be8:	f100 0b20 	add.w	fp, r0, #32
 8021bec:	44ce      	add	lr, r9
 8021bee:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8021bf2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021bf6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021bfa:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8021bfe:	ea4e 0909 	orr.w	r9, lr, r9
 8021c02:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8021c06:	8868      	ldrh	r0, [r5, #2]
 8021c08:	d019      	beq.n	8021c3e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8021c0a:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8021c0e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021c12:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021c16:	fb0a fe0e 	mul.w	lr, sl, lr
 8021c1a:	fb08 f800 	mul.w	r8, r8, r0
 8021c1e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8021c22:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8021c26:	f108 0b20 	add.w	fp, r8, #32
 8021c2a:	4486      	add	lr, r0
 8021c2c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8021c30:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021c34:	0a00      	lsrs	r0, r0, #8
 8021c36:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021c3a:	ea4e 0000 	orr.w	r0, lr, r0
 8021c3e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8021c42:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8021c46:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8021c4a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8021c4e:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8021c52:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021c56:	ea4e 0909 	orr.w	r9, lr, r9
 8021c5a:	ea4a 0000 	orr.w	r0, sl, r0
 8021c5e:	f1bc 0f00 	cmp.w	ip, #0
 8021c62:	f000 8107 	beq.w	8021e74 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fc>
 8021c66:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 8021c6a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8021c6c:	3a01      	subs	r2, #1
 8021c6e:	2cff      	cmp	r4, #255	@ 0xff
 8021c70:	ea4f 0242 	mov.w	r2, r2, lsl #1
 8021c74:	f102 0202 	add.w	r2, r2, #2
 8021c78:	eb05 0e02 	add.w	lr, r5, r2
 8021c7c:	5aaa      	ldrh	r2, [r5, r2]
 8021c7e:	d018      	beq.n	8021cb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8021c80:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 8021c84:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021c88:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021c8c:	fb04 fa02 	mul.w	sl, r4, r2
 8021c90:	fb08 f805 	mul.w	r8, r8, r5
 8021c94:	f10a 0520 	add.w	r5, sl, #32
 8021c98:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8021c9c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8021ca0:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8021ca4:	4442      	add	r2, r8
 8021ca6:	0a2d      	lsrs	r5, r5, #8
 8021ca8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8021cac:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8021cb0:	432a      	orrs	r2, r5
 8021cb2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8021cb4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8021cb8:	2cff      	cmp	r4, #255	@ 0xff
 8021cba:	d01a      	beq.n	8021cf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8021cbc:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 8021cc0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8021cc4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021cc8:	fb04 fa05 	mul.w	sl, r4, r5
 8021ccc:	fb08 f80e 	mul.w	r8, r8, lr
 8021cd0:	f10a 0e20 	add.w	lr, sl, #32
 8021cd4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8021cd8:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8021cdc:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8021ce0:	4445      	add	r5, r8
 8021ce2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8021ce6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8021cea:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8021cee:	ea45 050e 	orr.w	r5, r5, lr
 8021cf2:	fb1c fe01 	smulbb	lr, ip, r1
 8021cf6:	f1cc 0810 	rsb	r8, ip, #16
 8021cfa:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021cfe:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8021d02:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8021d06:	eba8 0801 	sub.w	r8, r8, r1
 8021d0a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8021d0e:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021d12:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8021d16:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8021d1a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8021d1e:	ea4a 0202 	orr.w	r2, sl, r2
 8021d22:	4341      	muls	r1, r0
 8021d24:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8021d28:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8021d2c:	fb09 1108 	mla	r1, r9, r8, r1
 8021d30:	ea4b 0505 	orr.w	r5, fp, r5
 8021d34:	fb0c 1102 	mla	r1, ip, r2, r1
 8021d38:	fb0e 1e05 	mla	lr, lr, r5, r1
 8021d3c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021d40:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021d44:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021d48:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8021d4c:	ea42 0e0e 	orr.w	lr, r2, lr
 8021d50:	fa1f f28e 	uxth.w	r2, lr
 8021d54:	2bff      	cmp	r3, #255	@ 0xff
 8021d56:	f040 80a1 	bne.w	8021e9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x424>
 8021d5a:	803a      	strh	r2, [r7, #0]
 8021d5c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8021d5e:	3702      	adds	r7, #2
 8021d60:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 8021d62:	4413      	add	r3, r2
 8021d64:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8021d66:	931d      	str	r3, [sp, #116]	@ 0x74
 8021d68:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021d6a:	441a      	add	r2, r3
 8021d6c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8021d6e:	3b01      	subs	r3, #1
 8021d70:	921e      	str	r2, [sp, #120]	@ 0x78
 8021d72:	930f      	str	r3, [sp, #60]	@ 0x3c
 8021d74:	e6c7      	b.n	8021b06 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8021d76:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8021d78:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 8021d7a:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 8021d7c:	4433      	add	r3, r6
 8021d7e:	931d      	str	r3, [sp, #116]	@ 0x74
 8021d80:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021d82:	441c      	add	r4, r3
 8021d84:	9b06      	ldr	r3, [sp, #24]
 8021d86:	3b01      	subs	r3, #1
 8021d88:	941e      	str	r4, [sp, #120]	@ 0x78
 8021d8a:	9306      	str	r3, [sp, #24]
 8021d8c:	9b07      	ldr	r3, [sp, #28]
 8021d8e:	3302      	adds	r3, #2
 8021d90:	9307      	str	r3, [sp, #28]
 8021d92:	e696      	b.n	8021ac2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8021d94:	d028      	beq.n	8021de8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8021d96:	9b06      	ldr	r3, [sp, #24]
 8021d98:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8021d9a:	3b01      	subs	r3, #1
 8021d9c:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 8021d9e:	fb00 5003 	mla	r0, r0, r3, r5
 8021da2:	1400      	asrs	r0, r0, #16
 8021da4:	f53f aeaa 	bmi.w	8021afc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8021da8:	3901      	subs	r1, #1
 8021daa:	4288      	cmp	r0, r1
 8021dac:	f6bf aea6 	bge.w	8021afc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8021db0:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8021db2:	981e      	ldr	r0, [sp, #120]	@ 0x78
 8021db4:	fb01 0303 	mla	r3, r1, r3, r0
 8021db8:	141b      	asrs	r3, r3, #16
 8021dba:	f53f ae9f 	bmi.w	8021afc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8021dbe:	3a01      	subs	r2, #1
 8021dc0:	4293      	cmp	r3, r2
 8021dc2:	f6bf ae9b 	bge.w	8021afc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8021dc6:	9b06      	ldr	r3, [sp, #24]
 8021dc8:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8021dcc:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8021dd0:	930f      	str	r3, [sp, #60]	@ 0x3c
 8021dd2:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8021dd4:	2b00      	cmp	r3, #0
 8021dd6:	f300 80b6 	bgt.w	8021f46 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 8021dda:	9b06      	ldr	r3, [sp, #24]
 8021ddc:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8021de0:	9b07      	ldr	r3, [sp, #28]
 8021de2:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8021de6:	9307      	str	r3, [sp, #28]
 8021de8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8021dea:	2b00      	cmp	r3, #0
 8021dec:	f340 8218 	ble.w	8022220 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8021df0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8021df4:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8021df6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8021dfa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8021dfe:	eef0 6a62 	vmov.f32	s13, s5
 8021e02:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8021e06:	ee31 1a05 	vadd.f32	s2, s2, s10
 8021e0a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021e0e:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 8021e12:	eef0 6a43 	vmov.f32	s13, s6
 8021e16:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021e1a:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 8021e1e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8021e22:	ee61 7a27 	vmul.f32	s15, s2, s15
 8021e26:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021e2a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021e2e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8021e32:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8021e36:	ee12 2a90 	vmov	r2, s5
 8021e3a:	eef0 2a47 	vmov.f32	s5, s14
 8021e3e:	fb92 f3f3 	sdiv	r3, r2, r3
 8021e42:	ee13 2a10 	vmov	r2, s6
 8021e46:	931f      	str	r3, [sp, #124]	@ 0x7c
 8021e48:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8021e4a:	eeb0 3a67 	vmov.f32	s6, s15
 8021e4e:	fb92 f3f3 	sdiv	r3, r2, r3
 8021e52:	9320      	str	r3, [sp, #128]	@ 0x80
 8021e54:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8021e56:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8021e58:	3b01      	subs	r3, #1
 8021e5a:	930e      	str	r3, [sp, #56]	@ 0x38
 8021e5c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8021e5e:	bf08      	it	eq
 8021e60:	4613      	moveq	r3, r2
 8021e62:	9306      	str	r3, [sp, #24]
 8021e64:	e61f      	b.n	8021aa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8021e66:	fb08 f505 	mul.w	r5, r8, r5
 8021e6a:	fb09 5303 	mla	r3, r9, r3, r5
 8021e6e:	e69f      	b.n	8021bb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 8021e70:	4681      	mov	r9, r0
 8021e72:	e6c6      	b.n	8021c02 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 8021e74:	f1c1 0210 	rsb	r2, r1, #16
 8021e78:	4341      	muls	r1, r0
 8021e7a:	fb09 1902 	mla	r9, r9, r2, r1
 8021e7e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021e82:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8021e86:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8021e8a:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021e8e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8021e92:	ea42 0909 	orr.w	r9, r2, r9
 8021e96:	fa1f f289 	uxth.w	r2, r9
 8021e9a:	e75b      	b.n	8021d54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>
 8021e9c:	f8b7 c000 	ldrh.w	ip, [r7]
 8021ea0:	43db      	mvns	r3, r3
 8021ea2:	ea4f 202c 	mov.w	r0, ip, asr #8
 8021ea6:	fa5f fe83 	uxtb.w	lr, r3
 8021eaa:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8021eae:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8021eb2:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8021eb6:	fb00 f00e 	mul.w	r0, r0, lr
 8021eba:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 8021ebe:	b2db      	uxtb	r3, r3
 8021ec0:	1c41      	adds	r1, r0, #1
 8021ec2:	fb05 f50e 	mul.w	r5, r5, lr
 8021ec6:	fb03 f30e 	mul.w	r3, r3, lr
 8021eca:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8021ece:	1211      	asrs	r1, r2, #8
 8021ed0:	f021 0107 	bic.w	r1, r1, #7
 8021ed4:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8021ed8:	48d3      	ldr	r0, [pc, #844]	@ (8022228 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 8021eda:	b2c9      	uxtb	r1, r1
 8021edc:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8021ee0:	1c69      	adds	r1, r5, #1
 8021ee2:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8021ee6:	10d1      	asrs	r1, r2, #3
 8021ee8:	00d2      	lsls	r2, r2, #3
 8021eea:	f021 0103 	bic.w	r1, r1, #3
 8021eee:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8021ef2:	00c9      	lsls	r1, r1, #3
 8021ef4:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8021ef8:	4301      	orrs	r1, r0
 8021efa:	1c58      	adds	r0, r3, #1
 8021efc:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8021f00:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8021f04:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021f08:	430a      	orrs	r2, r1
 8021f0a:	e726      	b.n	8021d5a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8021f0c:	f115 0e01 	adds.w	lr, r5, #1
 8021f10:	f53f af24 	bmi.w	8021d5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8021f14:	4572      	cmp	r2, lr
 8021f16:	f6ff af21 	blt.w	8021d5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8021f1a:	f110 0e01 	adds.w	lr, r0, #1
 8021f1e:	f53f af1d 	bmi.w	8021d5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8021f22:	4573      	cmp	r3, lr
 8021f24:	f6ff af1a 	blt.w	8021d5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8021f28:	b21b      	sxth	r3, r3
 8021f2a:	b212      	sxth	r2, r2
 8021f2c:	9301      	str	r3, [sp, #4]
 8021f2e:	9200      	str	r2, [sp, #0]
 8021f30:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8021f34:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8021f38:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 8021f3c:	4639      	mov	r1, r7
 8021f3e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8021f40:	f7ff fc22 	bl	8021788 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8021f44:	e70a      	b.n	8021d5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8021f46:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8021f48:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8021f4c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8021f4e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8021f52:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021f54:	fa1f fc82 	uxth.w	ip, r2
 8021f58:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021f5c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8021f5e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8021f62:	141f      	asrs	r7, r3, #16
 8021f64:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8021f66:	141b      	asrs	r3, r3, #16
 8021f68:	fb01 3707 	mla	r7, r1, r7, r3
 8021f6c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021f6e:	eb03 0a07 	add.w	sl, r3, r7
 8021f72:	f813 9007 	ldrb.w	r9, [r3, r7]
 8021f76:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 8021f7a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8021f7e:	b29b      	uxth	r3, r3
 8021f80:	2d00      	cmp	r5, #0
 8021f82:	f000 80fe 	beq.w	8022182 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
 8021f86:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8021f8a:	eb0a 0b01 	add.w	fp, sl, r1
 8021f8e:	fa1f fa85 	uxth.w	sl, r5
 8021f92:	940c      	str	r4, [sp, #48]	@ 0x30
 8021f94:	fb0a fc0c 	mul.w	ip, sl, ip
 8021f98:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021f9c:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8021fa0:	eba0 000c 	sub.w	r0, r0, ip
 8021fa4:	940d      	str	r4, [sp, #52]	@ 0x34
 8021fa6:	fa1f fa8a 	uxth.w	sl, sl
 8021faa:	b280      	uxth	r0, r0
 8021fac:	eba3 030a 	sub.w	r3, r3, sl
 8021fb0:	fb08 f000 	mul.w	r0, r8, r0
 8021fb4:	b29b      	uxth	r3, r3
 8021fb6:	fb09 0303 	mla	r3, r9, r3, r0
 8021fba:	980c      	ldr	r0, [sp, #48]	@ 0x30
 8021fbc:	fb0a 3300 	mla	r3, sl, r0, r3
 8021fc0:	fb0c 3304 	mla	r3, ip, r4, r3
 8021fc4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021fc8:	2b00      	cmp	r3, #0
 8021fca:	f000 80cc 	beq.w	8022166 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 8021fce:	9808      	ldr	r0, [sp, #32]
 8021fd0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8021fd4:	9c08      	ldr	r4, [sp, #32]
 8021fd6:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8021fda:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8021fde:	f000 80d5 	beq.w	802218c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 8021fe2:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8021fe6:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021fea:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8021fee:	fb0a fc0c 	mul.w	ip, sl, ip
 8021ff2:	fb09 f707 	mul.w	r7, r9, r7
 8021ff6:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8021ffa:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8021ffe:	f107 0b20 	add.w	fp, r7, #32
 8022002:	44cc      	add	ip, r9
 8022004:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8022008:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802200c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022010:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8022014:	ea4c 0909 	orr.w	r9, ip, r9
 8022018:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 802201c:	8847      	ldrh	r7, [r0, #2]
 802201e:	d019      	beq.n	8022054 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5dc>
 8022020:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8022024:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022028:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 802202c:	fb0a fc0c 	mul.w	ip, sl, ip
 8022030:	fb08 f807 	mul.w	r8, r8, r7
 8022034:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8022038:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 802203c:	f108 0b20 	add.w	fp, r8, #32
 8022040:	44bc      	add	ip, r7
 8022042:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8022046:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802204a:	0a3f      	lsrs	r7, r7, #8
 802204c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8022050:	ea4c 0707 	orr.w	r7, ip, r7
 8022054:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8022058:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 802205c:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8022060:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8022064:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8022068:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 802206c:	ea4c 0909 	orr.w	r9, ip, r9
 8022070:	ea4a 0707 	orr.w	r7, sl, r7
 8022074:	2d00      	cmp	r5, #0
 8022076:	f000 808b 	beq.w	8022190 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x718>
 802207a:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 802207e:	3901      	subs	r1, #1
 8022080:	0049      	lsls	r1, r1, #1
 8022082:	3102      	adds	r1, #2
 8022084:	eb00 0c01 	add.w	ip, r0, r1
 8022088:	5a41      	ldrh	r1, [r0, r1]
 802208a:	980c      	ldr	r0, [sp, #48]	@ 0x30
 802208c:	28ff      	cmp	r0, #255	@ 0xff
 802208e:	d019      	beq.n	80220c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64c>
 8022090:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 8022094:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8022096:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 802209a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802209e:	fb04 fa01 	mul.w	sl, r4, r1
 80220a2:	fb08 f800 	mul.w	r8, r8, r0
 80220a6:	f10a 0020 	add.w	r0, sl, #32
 80220aa:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80220ae:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80220b2:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80220b6:	4441      	add	r1, r8
 80220b8:	0a00      	lsrs	r0, r0, #8
 80220ba:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80220be:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80220c2:	4301      	orrs	r1, r0
 80220c4:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80220c6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80220ca:	2cff      	cmp	r4, #255	@ 0xff
 80220cc:	d01a      	beq.n	8022104 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68c>
 80220ce:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 80220d2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80220d6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80220da:	fb04 fa00 	mul.w	sl, r4, r0
 80220de:	fb08 f80c 	mul.w	r8, r8, ip
 80220e2:	f10a 0c20 	add.w	ip, sl, #32
 80220e6:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80220ea:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80220ee:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80220f2:	4440      	add	r0, r8
 80220f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80220f8:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80220fc:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8022100:	ea40 000c 	orr.w	r0, r0, ip
 8022104:	fb15 fc02 	smulbb	ip, r5, r2
 8022108:	f1c5 0810 	rsb	r8, r5, #16
 802210c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022110:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8022114:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8022118:	eba8 0802 	sub.w	r8, r8, r2
 802211c:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022120:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8022124:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8022128:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 802212c:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8022130:	ea4a 0101 	orr.w	r1, sl, r1
 8022134:	437a      	muls	r2, r7
 8022136:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802213a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 802213e:	fb09 2208 	mla	r2, r9, r8, r2
 8022142:	ea4b 0000 	orr.w	r0, fp, r0
 8022146:	fb05 2201 	mla	r2, r5, r1, r2
 802214a:	fb0c 2200 	mla	r2, ip, r0, r2
 802214e:	0d57      	lsrs	r7, r2, #21
 8022150:	0952      	lsrs	r2, r2, #5
 8022152:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8022156:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802215a:	433a      	orrs	r2, r7
 802215c:	2bff      	cmp	r3, #255	@ 0xff
 802215e:	b292      	uxth	r2, r2
 8022160:	d127      	bne.n	80221b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x73a>
 8022162:	f8ae 2000 	strh.w	r2, [lr]
 8022166:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8022168:	f10e 0e02 	add.w	lr, lr, #2
 802216c:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 802216e:	4413      	add	r3, r2
 8022170:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8022172:	931d      	str	r3, [sp, #116]	@ 0x74
 8022174:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022176:	441a      	add	r2, r3
 8022178:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802217a:	3b01      	subs	r3, #1
 802217c:	921e      	str	r2, [sp, #120]	@ 0x78
 802217e:	930f      	str	r3, [sp, #60]	@ 0x3c
 8022180:	e627      	b.n	8021dd2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8022182:	fb08 f000 	mul.w	r0, r8, r0
 8022186:	fb09 0303 	mla	r3, r9, r3, r0
 802218a:	e71b      	b.n	8021fc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54c>
 802218c:	46b9      	mov	r9, r7
 802218e:	e743      	b.n	8022018 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a0>
 8022190:	f1c2 0110 	rsb	r1, r2, #16
 8022194:	437a      	muls	r2, r7
 8022196:	fb09 2901 	mla	r9, r9, r1, r2
 802219a:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802219e:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80221a2:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80221a6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80221aa:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80221ae:	4302      	orrs	r2, r0
 80221b0:	e7d4      	b.n	802215c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e4>
 80221b2:	f8be 7000 	ldrh.w	r7, [lr]
 80221b6:	43db      	mvns	r3, r3
 80221b8:	4c1b      	ldr	r4, [pc, #108]	@ (8022228 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>)
 80221ba:	1238      	asrs	r0, r7, #8
 80221bc:	fa5f fc83 	uxtb.w	ip, r3
 80221c0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80221c4:	10fd      	asrs	r5, r7, #3
 80221c6:	00fb      	lsls	r3, r7, #3
 80221c8:	fb00 f00c 	mul.w	r0, r0, ip
 80221cc:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80221d0:	b2db      	uxtb	r3, r3
 80221d2:	fb05 f10c 	mul.w	r1, r5, ip
 80221d6:	1c45      	adds	r5, r0, #1
 80221d8:	fb03 f30c 	mul.w	r3, r3, ip
 80221dc:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80221e0:	1215      	asrs	r5, r2, #8
 80221e2:	f025 0507 	bic.w	r5, r5, #7
 80221e6:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 80221ea:	1c4d      	adds	r5, r1, #1
 80221ec:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80221f0:	10d1      	asrs	r1, r2, #3
 80221f2:	b2c0      	uxtb	r0, r0
 80221f4:	f021 0103 	bic.w	r1, r1, #3
 80221f8:	00d2      	lsls	r2, r2, #3
 80221fa:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 80221fe:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8022202:	00c9      	lsls	r1, r1, #3
 8022204:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8022208:	4308      	orrs	r0, r1
 802220a:	1c59      	adds	r1, r3, #1
 802220c:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8022210:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8022214:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8022218:	4318      	orrs	r0, r3
 802221a:	f8ae 0000 	strh.w	r0, [lr]
 802221e:	e7a2      	b.n	8022166 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ee>
 8022220:	b013      	add	sp, #76	@ 0x4c
 8022222:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022226:	bf00      	nop
 8022228:	fffff800 	.word	0xfffff800

0802222c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 802222c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022230:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 8022234:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8022238:	fb05 4c03 	mla	ip, r5, r3, r4
 802223c:	2d00      	cmp	r5, #0
 802223e:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 8022242:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8022246:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 802224a:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 802224e:	8808      	ldrh	r0, [r1, #0]
 8022250:	f2c0 80a7 	blt.w	80223a2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8022254:	45aa      	cmp	sl, r5
 8022256:	f340 80a4 	ble.w	80223a2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 802225a:	2c00      	cmp	r4, #0
 802225c:	f2c0 809f 	blt.w	802239e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8022260:	42a3      	cmp	r3, r4
 8022262:	f340 809c 	ble.w	802239e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8022266:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 802226a:	1c62      	adds	r2, r4, #1
 802226c:	f100 809c 	bmi.w	80223a8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022270:	4293      	cmp	r3, r2
 8022272:	f340 8099 	ble.w	80223a8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 8022276:	f1b9 0f00 	cmp.w	r9, #0
 802227a:	f000 8095 	beq.w	80223a8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802227e:	f8be c002 	ldrh.w	ip, [lr, #2]
 8022282:	3501      	adds	r5, #1
 8022284:	f100 8094 	bmi.w	80223b0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022288:	45aa      	cmp	sl, r5
 802228a:	f340 8091 	ble.w	80223b0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 802228e:	2f00      	cmp	r7, #0
 8022290:	f000 808e 	beq.w	80223b0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 8022294:	2c00      	cmp	r4, #0
 8022296:	f2c0 8089 	blt.w	80223ac <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 802229a:	42a3      	cmp	r3, r4
 802229c:	f340 8086 	ble.w	80223ac <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80222a0:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 80222a4:	3401      	adds	r4, #1
 80222a6:	f100 8086 	bmi.w	80223b6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80222aa:	42a3      	cmp	r3, r4
 80222ac:	f340 8083 	ble.w	80223b6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80222b0:	f1b9 0f00 	cmp.w	r9, #0
 80222b4:	d07f      	beq.n	80223b6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80222b6:	3301      	adds	r3, #1
 80222b8:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 80222bc:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80222c0:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 80222c4:	fb19 fe07 	smulbb	lr, r9, r7
 80222c8:	f1c7 0210 	rsb	r2, r7, #16
 80222cc:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 80222d0:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80222d4:	eba2 0209 	sub.w	r2, r2, r9
 80222d8:	ea44 0808 	orr.w	r8, r4, r8
 80222dc:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80222e0:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 80222e4:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80222e8:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 80222ec:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80222f0:	ea44 0c0c 	orr.w	ip, r4, ip
 80222f4:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80222f8:	fb04 f40c 	mul.w	r4, r4, ip
 80222fc:	fb02 4808 	mla	r8, r2, r8, r4
 8022300:	041a      	lsls	r2, r3, #16
 8022302:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8022306:	b2b4      	uxth	r4, r6
 8022308:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 802230c:	43f6      	mvns	r6, r6
 802230e:	4313      	orrs	r3, r2
 8022310:	042a      	lsls	r2, r5, #16
 8022312:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8022316:	b2f6      	uxtb	r6, r6
 8022318:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 802231c:	fb0e 8303 	mla	r3, lr, r3, r8
 8022320:	432a      	orrs	r2, r5
 8022322:	fb07 3202 	mla	r2, r7, r2, r3
 8022326:	10c7      	asrs	r7, r0, #3
 8022328:	0d53      	lsrs	r3, r2, #21
 802232a:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 802232e:	0952      	lsrs	r2, r2, #5
 8022330:	fb17 f706 	smulbb	r7, r7, r6
 8022334:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8022338:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802233c:	431a      	orrs	r2, r3
 802233e:	b293      	uxth	r3, r2
 8022340:	1202      	asrs	r2, r0, #8
 8022342:	121d      	asrs	r5, r3, #8
 8022344:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8022348:	00c0      	lsls	r0, r0, #3
 802234a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 802234e:	fb12 f206 	smulbb	r2, r2, r6
 8022352:	b2c0      	uxtb	r0, r0
 8022354:	fb05 2504 	mla	r5, r5, r4, r2
 8022358:	10da      	asrs	r2, r3, #3
 802235a:	fb10 f006 	smulbb	r0, r0, r6
 802235e:	00db      	lsls	r3, r3, #3
 8022360:	b2ad      	uxth	r5, r5
 8022362:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8022366:	b2db      	uxtb	r3, r3
 8022368:	fb02 7204 	mla	r2, r2, r4, r7
 802236c:	fb03 0004 	mla	r0, r3, r4, r0
 8022370:	1c6b      	adds	r3, r5, #1
 8022372:	b292      	uxth	r2, r2
 8022374:	b280      	uxth	r0, r0
 8022376:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802237a:	1c43      	adds	r3, r0, #1
 802237c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8022380:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8022384:	1c50      	adds	r0, r2, #1
 8022386:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 802238a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802238e:	0952      	lsrs	r2, r2, #5
 8022390:	432b      	orrs	r3, r5
 8022392:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022396:	4313      	orrs	r3, r2
 8022398:	800b      	strh	r3, [r1, #0]
 802239a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802239e:	4680      	mov	r8, r0
 80223a0:	e763      	b.n	802226a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 80223a2:	4684      	mov	ip, r0
 80223a4:	4680      	mov	r8, r0
 80223a6:	e76c      	b.n	8022282 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80223a8:	4684      	mov	ip, r0
 80223aa:	e76a      	b.n	8022282 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80223ac:	4605      	mov	r5, r0
 80223ae:	e779      	b.n	80222a4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 80223b0:	4603      	mov	r3, r0
 80223b2:	4605      	mov	r5, r0
 80223b4:	e782      	b.n	80222bc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 80223b6:	4603      	mov	r3, r0
 80223b8:	e780      	b.n	80222bc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

080223ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80223ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80223be:	b093      	sub	sp, #76	@ 0x4c
 80223c0:	461d      	mov	r5, r3
 80223c2:	9210      	str	r2, [sp, #64]	@ 0x40
 80223c4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80223c6:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 80223ca:	910a      	str	r1, [sp, #40]	@ 0x28
 80223cc:	920b      	str	r2, [sp, #44]	@ 0x2c
 80223ce:	6859      	ldr	r1, [r3, #4]
 80223d0:	681b      	ldr	r3, [r3, #0]
 80223d2:	9011      	str	r0, [sp, #68]	@ 0x44
 80223d4:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 80223d8:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 80223dc:	fb01 2707 	mla	r7, r1, r7, r2
 80223e0:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 80223e4:	9307      	str	r3, [sp, #28]
 80223e6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80223e8:	681b      	ldr	r3, [r3, #0]
 80223ea:	9309      	str	r3, [sp, #36]	@ 0x24
 80223ec:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80223ee:	43db      	mvns	r3, r3
 80223f0:	b2db      	uxtb	r3, r3
 80223f2:	9308      	str	r3, [sp, #32]
 80223f4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80223f6:	2b00      	cmp	r3, #0
 80223f8:	dc03      	bgt.n	8022402 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80223fa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80223fc:	2b00      	cmp	r3, #0
 80223fe:	f340 8205 	ble.w	802280c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8022402:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022404:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022408:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802240c:	1e48      	subs	r0, r1, #1
 802240e:	f102 3cff 	add.w	ip, r2, #4294967295
 8022412:	2d00      	cmp	r5, #0
 8022414:	f340 80da 	ble.w	80225cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8022418:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802241c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022420:	d406      	bmi.n	8022430 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022422:	4586      	cmp	lr, r0
 8022424:	da04      	bge.n	8022430 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022426:	2b00      	cmp	r3, #0
 8022428:	db02      	blt.n	8022430 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802242a:	4563      	cmp	r3, ip
 802242c:	f2c0 80cf 	blt.w	80225ce <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022430:	f11e 0e01 	adds.w	lr, lr, #1
 8022434:	f100 80c1 	bmi.w	80225ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022438:	4571      	cmp	r1, lr
 802243a:	f2c0 80be 	blt.w	80225ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802243e:	3301      	adds	r3, #1
 8022440:	f100 80bb 	bmi.w	80225ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022444:	429a      	cmp	r2, r3
 8022446:	f2c0 80b8 	blt.w	80225ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802244a:	46a9      	mov	r9, r5
 802244c:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8022450:	f1b9 0f00 	cmp.w	r9, #0
 8022454:	f340 80d8 	ble.w	8022608 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8022458:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802245a:	1421      	asrs	r1, r4, #16
 802245c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8022460:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022464:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8022468:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 802246c:	f100 8112 	bmi.w	8022694 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8022470:	f10e 3aff 	add.w	sl, lr, #4294967295
 8022474:	4551      	cmp	r1, sl
 8022476:	f280 810d 	bge.w	8022694 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 802247a:	2800      	cmp	r0, #0
 802247c:	f2c0 810a 	blt.w	8022694 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8022480:	f103 3aff 	add.w	sl, r3, #4294967295
 8022484:	4550      	cmp	r0, sl
 8022486:	f280 8105 	bge.w	8022694 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 802248a:	fa0f f38e 	sxth.w	r3, lr
 802248e:	fb00 1103 	mla	r1, r0, r3, r1
 8022492:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8022494:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 8022498:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 802249c:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 80224a0:	f1bc 0f00 	cmp.w	ip, #0
 80224a4:	d007      	beq.n	80224b6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 80224a6:	005b      	lsls	r3, r3, #1
 80224a8:	eb0a 0003 	add.w	r0, sl, r3
 80224ac:	f83a 3003 	ldrh.w	r3, [sl, r3]
 80224b0:	930c      	str	r3, [sp, #48]	@ 0x30
 80224b2:	8843      	ldrh	r3, [r0, #2]
 80224b4:	930d      	str	r3, [sp, #52]	@ 0x34
 80224b6:	ea4f 400e 	mov.w	r0, lr, lsl #16
 80224ba:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 80224be:	fb12 f30c 	smulbb	r3, r2, ip
 80224c2:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80224c6:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 80224ca:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 80224ce:	10db      	asrs	r3, r3, #3
 80224d0:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80224d4:	ea40 000e 	orr.w	r0, r0, lr
 80224d8:	f1cc 0e10 	rsb	lr, ip, #16
 80224dc:	ea4a 0101 	orr.w	r1, sl, r1
 80224e0:	9f08      	ldr	r7, [sp, #32]
 80224e2:	ebae 0e02 	sub.w	lr, lr, r2
 80224e6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80224ea:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80224ee:	4351      	muls	r1, r2
 80224f0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80224f2:	fb0e 1e00 	mla	lr, lr, r0, r1
 80224f6:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80224f8:	0410      	lsls	r0, r2, #16
 80224fa:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80224fe:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8022502:	4310      	orrs	r0, r2
 8022504:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8022506:	0412      	lsls	r2, r2, #16
 8022508:	fb03 e000 	mla	r0, r3, r0, lr
 802250c:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 8022510:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8022514:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8022518:	ea42 020e 	orr.w	r2, r2, lr
 802251c:	fb03 0302 	mla	r3, r3, r2, r0
 8022520:	f8b8 0000 	ldrh.w	r0, [r8]
 8022524:	0d5a      	lsrs	r2, r3, #21
 8022526:	095b      	lsrs	r3, r3, #5
 8022528:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802252c:	1201      	asrs	r1, r0, #8
 802252e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8022532:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8022536:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802253a:	00c0      	lsls	r0, r0, #3
 802253c:	4313      	orrs	r3, r2
 802253e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8022542:	fb11 f107 	smulbb	r1, r1, r7
 8022546:	b2c0      	uxtb	r0, r0
 8022548:	b29b      	uxth	r3, r3
 802254a:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 802254e:	fb10 f007 	smulbb	r0, r0, r7
 8022552:	fb1e fe07 	smulbb	lr, lr, r7
 8022556:	ea4f 2c23 	mov.w	ip, r3, asr #8
 802255a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 802255e:	fb0c 1c02 	mla	ip, ip, r2, r1
 8022562:	10d9      	asrs	r1, r3, #3
 8022564:	00db      	lsls	r3, r3, #3
 8022566:	fa1f fc8c 	uxth.w	ip, ip
 802256a:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802256e:	b2db      	uxtb	r3, r3
 8022570:	fb01 e102 	mla	r1, r1, r2, lr
 8022574:	fb03 0302 	mla	r3, r3, r2, r0
 8022578:	b289      	uxth	r1, r1
 802257a:	b29a      	uxth	r2, r3
 802257c:	f10c 0301 	add.w	r3, ip, #1
 8022580:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8022584:	1c53      	adds	r3, r2, #1
 8022586:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802258a:	1c4a      	adds	r2, r1, #1
 802258c:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8022590:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022594:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022598:	0949      	lsrs	r1, r1, #5
 802259a:	ea43 030c 	orr.w	r3, r3, ip
 802259e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80225a2:	430b      	orrs	r3, r1
 80225a4:	f8a8 3000 	strh.w	r3, [r8]
 80225a8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80225aa:	f108 0802 	add.w	r8, r8, #2
 80225ae:	f109 39ff 	add.w	r9, r9, #4294967295
 80225b2:	441c      	add	r4, r3
 80225b4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80225b6:	441e      	add	r6, r3
 80225b8:	e74a      	b.n	8022450 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80225ba:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80225bc:	3d01      	subs	r5, #1
 80225be:	441c      	add	r4, r3
 80225c0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80225c2:	441e      	add	r6, r3
 80225c4:	9b07      	ldr	r3, [sp, #28]
 80225c6:	3302      	adds	r3, #2
 80225c8:	9307      	str	r3, [sp, #28]
 80225ca:	e722      	b.n	8022412 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 80225cc:	d022      	beq.n	8022614 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 80225ce:	1e6b      	subs	r3, r5, #1
 80225d0:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80225d2:	fb00 4003 	mla	r0, r0, r3, r4
 80225d6:	1400      	asrs	r0, r0, #16
 80225d8:	f53f af37 	bmi.w	802244a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80225dc:	3901      	subs	r1, #1
 80225de:	4288      	cmp	r0, r1
 80225e0:	f6bf af33 	bge.w	802244a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80225e4:	9920      	ldr	r1, [sp, #128]	@ 0x80
 80225e6:	fb01 6303 	mla	r3, r1, r3, r6
 80225ea:	141b      	asrs	r3, r3, #16
 80225ec:	f53f af2d 	bmi.w	802244a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80225f0:	3a01      	subs	r2, #1
 80225f2:	4293      	cmp	r3, r2
 80225f4:	f6bf af29 	bge.w	802244a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80225f8:	46a8      	mov	r8, r5
 80225fa:	f8dd 901c 	ldr.w	r9, [sp, #28]
 80225fe:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 8022602:	f1b8 0f00 	cmp.w	r8, #0
 8022606:	dc60      	bgt.n	80226ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x310>
 8022608:	9b07      	ldr	r3, [sp, #28]
 802260a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802260e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8022612:	9307      	str	r3, [sp, #28]
 8022614:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8022616:	2b00      	cmp	r3, #0
 8022618:	f340 80f8 	ble.w	802280c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802261c:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8022620:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022622:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022626:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802262a:	eef0 6a62 	vmov.f32	s13, s5
 802262e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022632:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022636:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802263a:	ee16 4a90 	vmov	r4, s13
 802263e:	eef0 6a43 	vmov.f32	s13, s6
 8022642:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022646:	ee16 6a90 	vmov	r6, s13
 802264a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802264e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022652:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022656:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802265a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802265e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022662:	ee12 2a90 	vmov	r2, s5
 8022666:	eef0 2a47 	vmov.f32	s5, s14
 802266a:	fb92 f3f3 	sdiv	r3, r2, r3
 802266e:	ee13 2a10 	vmov	r2, s6
 8022672:	931f      	str	r3, [sp, #124]	@ 0x7c
 8022674:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022676:	eeb0 3a67 	vmov.f32	s6, s15
 802267a:	fb92 f3f3 	sdiv	r3, r2, r3
 802267e:	9320      	str	r3, [sp, #128]	@ 0x80
 8022680:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8022682:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8022684:	3b01      	subs	r3, #1
 8022686:	930a      	str	r3, [sp, #40]	@ 0x28
 8022688:	bf08      	it	eq
 802268a:	4615      	moveq	r5, r2
 802268c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802268e:	bf18      	it	ne
 8022690:	461d      	movne	r5, r3
 8022692:	e6af      	b.n	80223f4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022694:	f111 0a01 	adds.w	sl, r1, #1
 8022698:	d486      	bmi.n	80225a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802269a:	45d6      	cmp	lr, sl
 802269c:	db84      	blt.n	80225a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802269e:	f110 0a01 	adds.w	sl, r0, #1
 80226a2:	d481      	bmi.n	80225a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80226a4:	4553      	cmp	r3, sl
 80226a6:	f6ff af7f 	blt.w	80225a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80226aa:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 80226ac:	b21b      	sxth	r3, r3
 80226ae:	9101      	str	r1, [sp, #4]
 80226b0:	4641      	mov	r1, r8
 80226b2:	9300      	str	r3, [sp, #0]
 80226b4:	fa0f f38e 	sxth.w	r3, lr
 80226b8:	e9cd 0202 	strd	r0, r2, [sp, #8]
 80226bc:	e9cd c704 	strd	ip, r7, [sp, #16]
 80226c0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80226c2:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80226c4:	f7ff fdb2 	bl	802222c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 80226c8:	e76e      	b.n	80225a8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 80226ca:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80226cc:	1430      	asrs	r0, r6, #16
 80226ce:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 80226d0:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80226d4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80226d8:	1423      	asrs	r3, r4, #16
 80226da:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80226de:	fb01 3000 	mla	r0, r1, r0, r3
 80226e2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80226e4:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 80226e8:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 80226ec:	8858      	ldrh	r0, [r3, #2]
 80226ee:	f1be 0f00 	cmp.w	lr, #0
 80226f2:	d00b      	beq.n	802270c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 80226f4:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 80226f8:	3901      	subs	r1, #1
 80226fa:	0049      	lsls	r1, r1, #1
 80226fc:	3102      	adds	r1, #2
 80226fe:	eb03 0b01 	add.w	fp, r3, r1
 8022702:	5a5b      	ldrh	r3, [r3, r1]
 8022704:	930e      	str	r3, [sp, #56]	@ 0x38
 8022706:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 802270a:	930f      	str	r3, [sp, #60]	@ 0x3c
 802270c:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8022710:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8022714:	fb12 f30e 	smulbb	r3, r2, lr
 8022718:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 802271c:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 8022720:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8022724:	10db      	asrs	r3, r3, #3
 8022726:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 802272a:	ea41 010c 	orr.w	r1, r1, ip
 802272e:	f1ce 0c10 	rsb	ip, lr, #16
 8022732:	ea4b 0000 	orr.w	r0, fp, r0
 8022736:	9f08      	ldr	r7, [sp, #32]
 8022738:	ebac 0c02 	sub.w	ip, ip, r2
 802273c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022740:	f108 38ff 	add.w	r8, r8, #4294967295
 8022744:	4350      	muls	r0, r2
 8022746:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 802274a:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802274c:	fb0c 0c01 	mla	ip, ip, r1, r0
 8022750:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8022752:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8022756:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 802275a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 802275c:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8022760:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8022764:	0412      	lsls	r2, r2, #16
 8022766:	ea4b 0101 	orr.w	r1, fp, r1
 802276a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 802276e:	fb03 c101 	mla	r1, r3, r1, ip
 8022772:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8022776:	4302      	orrs	r2, r0
 8022778:	fb03 1202 	mla	r2, r3, r2, r1
 802277c:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8022780:	0952      	lsrs	r2, r2, #5
 8022782:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8022786:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 802278a:	f8b9 2000 	ldrh.w	r2, [r9]
 802278e:	ea4b 0303 	orr.w	r3, fp, r3
 8022792:	1211      	asrs	r1, r2, #8
 8022794:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8022798:	b29b      	uxth	r3, r3
 802279a:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802279e:	00d2      	lsls	r2, r2, #3
 80227a0:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 80227a4:	fb11 f107 	smulbb	r1, r1, r7
 80227a8:	1218      	asrs	r0, r3, #8
 80227aa:	fb1c fc07 	smulbb	ip, ip, r7
 80227ae:	b2d2      	uxtb	r2, r2
 80227b0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80227b4:	fb12 f207 	smulbb	r2, r2, r7
 80227b8:	fb00 100a 	mla	r0, r0, sl, r1
 80227bc:	10d9      	asrs	r1, r3, #3
 80227be:	00db      	lsls	r3, r3, #3
 80227c0:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80227c4:	b280      	uxth	r0, r0
 80227c6:	b2db      	uxtb	r3, r3
 80227c8:	fb01 c10a 	mla	r1, r1, sl, ip
 80227cc:	fb03 230a 	mla	r3, r3, sl, r2
 80227d0:	1c42      	adds	r2, r0, #1
 80227d2:	b289      	uxth	r1, r1
 80227d4:	b29b      	uxth	r3, r3
 80227d6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80227da:	f101 0c01 	add.w	ip, r1, #1
 80227de:	1c5a      	adds	r2, r3, #1
 80227e0:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 80227e4:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 80227e8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80227ec:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 80227ee:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80227f2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80227f6:	441c      	add	r4, r3
 80227f8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 80227fc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80227fe:	4310      	orrs	r0, r2
 8022800:	441e      	add	r6, r3
 8022802:	ea40 000c 	orr.w	r0, r0, ip
 8022806:	f829 0b02 	strh.w	r0, [r9], #2
 802280a:	e6fa      	b.n	8022602 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 802280c:	b013      	add	sp, #76	@ 0x4c
 802280e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022812 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8022812:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8022816:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 802281a:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 802281e:	fb0e 4703 	mla	r7, lr, r3, r4
 8022822:	f1be 0f00 	cmp.w	lr, #0
 8022826:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 802282a:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 802282e:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8022832:	8808      	ldrh	r0, [r1, #0]
 8022834:	db60      	blt.n	80228f8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8022836:	45f1      	cmp	r9, lr
 8022838:	dd5e      	ble.n	80228f8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 802283a:	2c00      	cmp	r4, #0
 802283c:	db5a      	blt.n	80228f4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 802283e:	42a3      	cmp	r3, r4
 8022840:	dd58      	ble.n	80228f4 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8022842:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8022846:	1c62      	adds	r2, r4, #1
 8022848:	d459      	bmi.n	80228fe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 802284a:	4293      	cmp	r3, r2
 802284c:	dd57      	ble.n	80228fe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 802284e:	2d00      	cmp	r5, #0
 8022850:	d055      	beq.n	80228fe <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022852:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8022856:	f11e 0e01 	adds.w	lr, lr, #1
 802285a:	d454      	bmi.n	8022906 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 802285c:	45f1      	cmp	r9, lr
 802285e:	dd52      	ble.n	8022906 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022860:	2e00      	cmp	r6, #0
 8022862:	d050      	beq.n	8022906 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022864:	2c00      	cmp	r4, #0
 8022866:	db4c      	blt.n	8022902 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8022868:	42a3      	cmp	r3, r4
 802286a:	dd4a      	ble.n	8022902 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 802286c:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8022870:	3401      	adds	r4, #1
 8022872:	d405      	bmi.n	8022880 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022874:	42a3      	cmp	r3, r4
 8022876:	dd03      	ble.n	8022880 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022878:	b115      	cbz	r5, 8022880 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 802287a:	3301      	adds	r3, #1
 802287c:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8022880:	fb15 f406 	smulbb	r4, r5, r6
 8022884:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8022888:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 802288c:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8022890:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8022894:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8022898:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 802289c:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 80228a0:	ea43 0c0c 	orr.w	ip, r3, ip
 80228a4:	f1c6 0310 	rsb	r3, r6, #16
 80228a8:	ea4e 0707 	orr.w	r7, lr, r7
 80228ac:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 80228b0:	1b5b      	subs	r3, r3, r5
 80228b2:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 80228b6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80228ba:	437d      	muls	r5, r7
 80228bc:	fb03 5c0c 	mla	ip, r3, ip, r5
 80228c0:	0403      	lsls	r3, r0, #16
 80228c2:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80228c6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 80228ca:	4318      	orrs	r0, r3
 80228cc:	0413      	lsls	r3, r2, #16
 80228ce:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80228d2:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 80228d6:	fb04 c000 	mla	r0, r4, r0, ip
 80228da:	4313      	orrs	r3, r2
 80228dc:	fb06 0003 	mla	r0, r6, r3, r0
 80228e0:	0d43      	lsrs	r3, r0, #21
 80228e2:	0940      	lsrs	r0, r0, #5
 80228e4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80228e8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80228ec:	4318      	orrs	r0, r3
 80228ee:	8008      	strh	r0, [r1, #0]
 80228f0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80228f4:	4684      	mov	ip, r0
 80228f6:	e7a6      	b.n	8022846 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 80228f8:	4607      	mov	r7, r0
 80228fa:	4684      	mov	ip, r0
 80228fc:	e7ab      	b.n	8022856 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 80228fe:	4607      	mov	r7, r0
 8022900:	e7a9      	b.n	8022856 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8022902:	4602      	mov	r2, r0
 8022904:	e7b4      	b.n	8022870 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8022906:	4602      	mov	r2, r0
 8022908:	e7ba      	b.n	8022880 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0802290a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802290a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802290e:	b08f      	sub	sp, #60	@ 0x3c
 8022910:	461d      	mov	r5, r3
 8022912:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8022914:	9107      	str	r1, [sp, #28]
 8022916:	920c      	str	r2, [sp, #48]	@ 0x30
 8022918:	6859      	ldr	r1, [r3, #4]
 802291a:	681b      	ldr	r3, [r3, #0]
 802291c:	900d      	str	r0, [sp, #52]	@ 0x34
 802291e:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 8022922:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 8022926:	fb01 2707 	mla	r7, r1, r7, r2
 802292a:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 802292e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022930:	f8d3 8000 	ldr.w	r8, [r3]
 8022934:	9b07      	ldr	r3, [sp, #28]
 8022936:	2b00      	cmp	r3, #0
 8022938:	dc03      	bgt.n	8022942 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 802293a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802293c:	2b00      	cmp	r3, #0
 802293e:	f340 8182 	ble.w	8022c46 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 8022942:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022944:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022948:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802294c:	1e48      	subs	r0, r1, #1
 802294e:	f102 3cff 	add.w	ip, r2, #4294967295
 8022952:	2d00      	cmp	r5, #0
 8022954:	f340 809b 	ble.w	8022a8e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8022958:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802295c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022960:	d406      	bmi.n	8022970 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022962:	4586      	cmp	lr, r0
 8022964:	da04      	bge.n	8022970 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022966:	2b00      	cmp	r3, #0
 8022968:	db02      	blt.n	8022970 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802296a:	4563      	cmp	r3, ip
 802296c:	f2c0 8090 	blt.w	8022a90 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022970:	f11e 0e01 	adds.w	lr, lr, #1
 8022974:	f100 8084 	bmi.w	8022a80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022978:	4571      	cmp	r1, lr
 802297a:	f2c0 8081 	blt.w	8022a80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802297e:	3301      	adds	r3, #1
 8022980:	d47e      	bmi.n	8022a80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022982:	429a      	cmp	r2, r3
 8022984:	db7c      	blt.n	8022a80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022986:	46aa      	mov	sl, r5
 8022988:	46b9      	mov	r9, r7
 802298a:	f1ba 0f00 	cmp.w	sl, #0
 802298e:	f340 8099 	ble.w	8022ac4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8022992:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022994:	1421      	asrs	r1, r4, #16
 8022996:	ea4f 4026 	mov.w	r0, r6, asr #16
 802299a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802299e:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80229a2:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 80229a6:	f100 80d1 	bmi.w	8022b4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80229aa:	f10e 3bff 	add.w	fp, lr, #4294967295
 80229ae:	4559      	cmp	r1, fp
 80229b0:	f280 80cc 	bge.w	8022b4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80229b4:	2800      	cmp	r0, #0
 80229b6:	f2c0 80c9 	blt.w	8022b4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80229ba:	f103 3bff 	add.w	fp, r3, #4294967295
 80229be:	4558      	cmp	r0, fp
 80229c0:	f280 80c4 	bge.w	8022b4c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80229c4:	fa0f fe8e 	sxth.w	lr, lr
 80229c8:	fb00 110e 	mla	r1, r0, lr, r1
 80229cc:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 80229d0:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 80229d4:	8841      	ldrh	r1, [r0, #2]
 80229d6:	f1bc 0f00 	cmp.w	ip, #0
 80229da:	d00b      	beq.n	80229f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 80229dc:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 80229e0:	3b01      	subs	r3, #1
 80229e2:	005b      	lsls	r3, r3, #1
 80229e4:	3302      	adds	r3, #2
 80229e6:	eb00 0e03 	add.w	lr, r0, r3
 80229ea:	5ac3      	ldrh	r3, [r0, r3]
 80229ec:	9308      	str	r3, [sp, #32]
 80229ee:	f8be 3002 	ldrh.w	r3, [lr, #2]
 80229f2:	9309      	str	r3, [sp, #36]	@ 0x24
 80229f4:	ea4f 400b 	mov.w	r0, fp, lsl #16
 80229f8:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 80229fc:	fb12 f30c 	smulbb	r3, r2, ip
 8022a00:	f1cc 0e10 	rsb	lr, ip, #16
 8022a04:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8022a08:	10db      	asrs	r3, r3, #3
 8022a0a:	ebae 0e02 	sub.w	lr, lr, r2
 8022a0e:	ea40 000b 	orr.w	r0, r0, fp
 8022a12:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8022a16:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8022a1a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022a1e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8022a22:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8022a26:	ea4b 0101 	orr.w	r1, fp, r1
 8022a2a:	4351      	muls	r1, r2
 8022a2c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8022a2e:	fb0e 1e00 	mla	lr, lr, r0, r1
 8022a32:	0410      	lsls	r0, r2, #16
 8022a34:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8022a38:	9908      	ldr	r1, [sp, #32]
 8022a3a:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8022a3e:	4310      	orrs	r0, r2
 8022a40:	9a08      	ldr	r2, [sp, #32]
 8022a42:	0412      	lsls	r2, r2, #16
 8022a44:	fb03 e000 	mla	r0, r3, r0, lr
 8022a48:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 8022a4c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8022a50:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8022a54:	ea42 020e 	orr.w	r2, r2, lr
 8022a58:	fb03 0302 	mla	r3, r3, r2, r0
 8022a5c:	0d5a      	lsrs	r2, r3, #21
 8022a5e:	095b      	lsrs	r3, r3, #5
 8022a60:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022a64:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8022a68:	4313      	orrs	r3, r2
 8022a6a:	f8a9 3000 	strh.w	r3, [r9]
 8022a6e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8022a70:	f109 0902 	add.w	r9, r9, #2
 8022a74:	f10a 3aff 	add.w	sl, sl, #4294967295
 8022a78:	441c      	add	r4, r3
 8022a7a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022a7c:	441e      	add	r6, r3
 8022a7e:	e784      	b.n	802298a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8022a80:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8022a82:	3d01      	subs	r5, #1
 8022a84:	3702      	adds	r7, #2
 8022a86:	441c      	add	r4, r3
 8022a88:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022a8a:	441e      	add	r6, r3
 8022a8c:	e761      	b.n	8022952 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022a8e:	d01d      	beq.n	8022acc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8022a90:	1e6b      	subs	r3, r5, #1
 8022a92:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8022a94:	fb00 4003 	mla	r0, r0, r3, r4
 8022a98:	1400      	asrs	r0, r0, #16
 8022a9a:	f53f af74 	bmi.w	8022986 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022a9e:	3901      	subs	r1, #1
 8022aa0:	4288      	cmp	r0, r1
 8022aa2:	f6bf af70 	bge.w	8022986 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022aa6:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8022aa8:	fb01 6303 	mla	r3, r1, r3, r6
 8022aac:	141b      	asrs	r3, r3, #16
 8022aae:	f53f af6a 	bmi.w	8022986 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022ab2:	3a01      	subs	r2, #1
 8022ab4:	4293      	cmp	r3, r2
 8022ab6:	f6bf af66 	bge.w	8022986 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022aba:	46a9      	mov	r9, r5
 8022abc:	46ba      	mov	sl, r7
 8022abe:	f1b9 0f00 	cmp.w	r9, #0
 8022ac2:	dc5b      	bgt.n	8022b7c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8022ac4:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8022ac8:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8022acc:	9b07      	ldr	r3, [sp, #28]
 8022ace:	2b00      	cmp	r3, #0
 8022ad0:	f340 80b9 	ble.w	8022c46 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33c>
 8022ad4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8022ad8:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8022ada:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022ade:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022ae2:	eef0 6a62 	vmov.f32	s13, s5
 8022ae6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022aea:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022aee:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022af2:	ee16 4a90 	vmov	r4, s13
 8022af6:	eef0 6a43 	vmov.f32	s13, s6
 8022afa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022afe:	ee16 6a90 	vmov	r6, s13
 8022b02:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022b06:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022b0a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022b0e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022b12:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022b16:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022b1a:	ee12 2a90 	vmov	r2, s5
 8022b1e:	eef0 2a47 	vmov.f32	s5, s14
 8022b22:	fb92 f3f3 	sdiv	r3, r2, r3
 8022b26:	ee13 2a10 	vmov	r2, s6
 8022b2a:	931b      	str	r3, [sp, #108]	@ 0x6c
 8022b2c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8022b2e:	eeb0 3a67 	vmov.f32	s6, s15
 8022b32:	fb92 f3f3 	sdiv	r3, r2, r3
 8022b36:	931c      	str	r3, [sp, #112]	@ 0x70
 8022b38:	9b07      	ldr	r3, [sp, #28]
 8022b3a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8022b3c:	3b01      	subs	r3, #1
 8022b3e:	9307      	str	r3, [sp, #28]
 8022b40:	bf08      	it	eq
 8022b42:	4615      	moveq	r5, r2
 8022b44:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8022b46:	bf18      	it	ne
 8022b48:	461d      	movne	r5, r3
 8022b4a:	e6f3      	b.n	8022934 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8022b4c:	f111 0b01 	adds.w	fp, r1, #1
 8022b50:	d48d      	bmi.n	8022a6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022b52:	45de      	cmp	lr, fp
 8022b54:	db8b      	blt.n	8022a6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022b56:	f110 0b01 	adds.w	fp, r0, #1
 8022b5a:	d488      	bmi.n	8022a6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022b5c:	455b      	cmp	r3, fp
 8022b5e:	db86      	blt.n	8022a6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022b60:	b21b      	sxth	r3, r3
 8022b62:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8022b66:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8022b6a:	9300      	str	r3, [sp, #0]
 8022b6c:	4642      	mov	r2, r8
 8022b6e:	fa0f f38e 	sxth.w	r3, lr
 8022b72:	4649      	mov	r1, r9
 8022b74:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8022b76:	f7ff fe4c 	bl	8022812 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8022b7a:	e778      	b.n	8022a6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022b7c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022b7e:	1420      	asrs	r0, r4, #16
 8022b80:	1431      	asrs	r1, r6, #16
 8022b82:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8022b86:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8022b8a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022b8e:	fb03 0101 	mla	r1, r3, r1, r0
 8022b92:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8022b96:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8022b9a:	8841      	ldrh	r1, [r0, #2]
 8022b9c:	f1be 0f00 	cmp.w	lr, #0
 8022ba0:	d00b      	beq.n	8022bba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 8022ba2:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 8022ba6:	3b01      	subs	r3, #1
 8022ba8:	005b      	lsls	r3, r3, #1
 8022baa:	3302      	adds	r3, #2
 8022bac:	eb00 0b03 	add.w	fp, r0, r3
 8022bb0:	5ac3      	ldrh	r3, [r0, r3]
 8022bb2:	930a      	str	r3, [sp, #40]	@ 0x28
 8022bb4:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8022bb8:	930b      	str	r3, [sp, #44]	@ 0x2c
 8022bba:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8022bbe:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8022bc2:	fb12 f30e 	smulbb	r3, r2, lr
 8022bc6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8022bca:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8022bce:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8022bd2:	10db      	asrs	r3, r3, #3
 8022bd4:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8022bd8:	ea40 000c 	orr.w	r0, r0, ip
 8022bdc:	f1ce 0c10 	rsb	ip, lr, #16
 8022be0:	ea4b 0101 	orr.w	r1, fp, r1
 8022be4:	f109 39ff 	add.w	r9, r9, #4294967295
 8022be8:	ebac 0c02 	sub.w	ip, ip, r2
 8022bec:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022bf0:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8022bf4:	4351      	muls	r1, r2
 8022bf6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8022bf8:	fb0c 1c00 	mla	ip, ip, r0, r1
 8022bfc:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8022bfe:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8022c02:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 8022c06:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8022c08:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8022c0c:	0412      	lsls	r2, r2, #16
 8022c0e:	ea4b 0000 	orr.w	r0, fp, r0
 8022c12:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 8022c16:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8022c1a:	fb03 c000 	mla	r0, r3, r0, ip
 8022c1e:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8022c22:	ea42 0b0b 	orr.w	fp, r2, fp
 8022c26:	fb03 000b 	mla	r0, r3, fp, r0
 8022c2a:	0d43      	lsrs	r3, r0, #21
 8022c2c:	0940      	lsrs	r0, r0, #5
 8022c2e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8022c32:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8022c36:	4318      	orrs	r0, r3
 8022c38:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8022c3a:	441c      	add	r4, r3
 8022c3c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022c3e:	f82a 0b02 	strh.w	r0, [sl], #2
 8022c42:	441e      	add	r6, r3
 8022c44:	e73b      	b.n	8022abe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8022c46:	b00f      	add	sp, #60	@ 0x3c
 8022c48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022c4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8022c4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022c50:	b085      	sub	sp, #20
 8022c52:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 8022c56:	9102      	str	r1, [sp, #8]
 8022c58:	2c00      	cmp	r4, #0
 8022c5a:	fb04 7103 	mla	r1, r4, r3, r7
 8022c5e:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 8022c62:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8022c66:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8022c6a:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 8022c6e:	f2c0 811b 	blt.w	8022ea8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8022c72:	45a6      	cmp	lr, r4
 8022c74:	f340 8118 	ble.w	8022ea8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 8022c78:	2f00      	cmp	r7, #0
 8022c7a:	f2c0 8113 	blt.w	8022ea4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8022c7e:	42bb      	cmp	r3, r7
 8022c80:	f340 8110 	ble.w	8022ea4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 8022c84:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8022c88:	1c7a      	adds	r2, r7, #1
 8022c8a:	f100 8110 	bmi.w	8022eae <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8022c8e:	4293      	cmp	r3, r2
 8022c90:	f340 810d 	ble.w	8022eae <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 8022c94:	2e00      	cmp	r6, #0
 8022c96:	f000 810c 	beq.w	8022eb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 8022c9a:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8022c9e:	3401      	adds	r4, #1
 8022ca0:	f100 810b 	bmi.w	8022eba <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8022ca4:	45a6      	cmp	lr, r4
 8022ca6:	f340 8108 	ble.w	8022eba <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 8022caa:	2800      	cmp	r0, #0
 8022cac:	f000 8108 	beq.w	8022ec0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 8022cb0:	2f00      	cmp	r7, #0
 8022cb2:	f2c0 8100 	blt.w	8022eb6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8022cb6:	42bb      	cmp	r3, r7
 8022cb8:	f340 80fd 	ble.w	8022eb6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 8022cbc:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8022cc0:	3701      	adds	r7, #1
 8022cc2:	f100 8100 	bmi.w	8022ec6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8022cc6:	42bb      	cmp	r3, r7
 8022cc8:	f340 80fd 	ble.w	8022ec6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 8022ccc:	2e00      	cmp	r6, #0
 8022cce:	f000 80fc 	beq.w	8022eca <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 8022cd2:	3301      	adds	r3, #1
 8022cd4:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8022cd8:	b2b6      	uxth	r6, r6
 8022cda:	b280      	uxth	r0, r0
 8022cdc:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8022ce0:	fb00 fe06 	mul.w	lr, r0, r6
 8022ce4:	0136      	lsls	r6, r6, #4
 8022ce6:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8022cea:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8022cee:	eba6 070e 	sub.w	r7, r6, lr
 8022cf2:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 8022cf6:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8022cfa:	b280      	uxth	r0, r0
 8022cfc:	b2bf      	uxth	r7, r7
 8022cfe:	1a1b      	subs	r3, r3, r0
 8022d00:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8022d04:	fb0a f607 	mul.w	r6, sl, r7
 8022d08:	b29b      	uxth	r3, r3
 8022d0a:	fb0b 6603 	mla	r6, fp, r3, r6
 8022d0e:	fb00 6609 	mla	r6, r0, r9, r6
 8022d12:	fb0e 6608 	mla	r6, lr, r8, r6
 8022d16:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8022d1a:	9600      	str	r6, [sp, #0]
 8022d1c:	2e00      	cmp	r6, #0
 8022d1e:	f000 80be 	beq.w	8022e9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 8022d22:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8022d26:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 8022d2a:	9e02      	ldr	r6, [sp, #8]
 8022d2c:	fb0b fc0c 	mul.w	ip, fp, ip
 8022d30:	fb0b f505 	mul.w	r5, fp, r5
 8022d34:	8836      	ldrh	r6, [r6, #0]
 8022d36:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8022d3a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8022d3e:	9501      	str	r5, [sp, #4]
 8022d40:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 8022d44:	44dc      	add	ip, fp
 8022d46:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022d4a:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 8022d4e:	9503      	str	r5, [sp, #12]
 8022d50:	9d01      	ldr	r5, [sp, #4]
 8022d52:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 8022d56:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8022d5a:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 8022d5e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8022d62:	fb0a fc0c 	mul.w	ip, sl, ip
 8022d66:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8022d6a:	fb0a fa01 	mul.w	sl, sl, r1
 8022d6e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8022d72:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8022d76:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 8022d7a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8022d7e:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8022d82:	4465      	add	r5, ip
 8022d84:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8022d88:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8022d8c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8022d90:	fb09 fc0c 	mul.w	ip, r9, ip
 8022d94:	0a2d      	lsrs	r5, r5, #8
 8022d96:	fb09 f904 	mul.w	r9, r9, r4
 8022d9a:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8022d9e:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8022da2:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8022da6:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8022daa:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8022dae:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8022db2:	437d      	muls	r5, r7
 8022db4:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8022db8:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8022dbc:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8022dc0:	4461      	add	r1, ip
 8022dc2:	fb08 f404 	mul.w	r4, r8, r4
 8022dc6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8022dca:	fb08 f802 	mul.w	r8, r8, r2
 8022dce:	0a09      	lsrs	r1, r1, #8
 8022dd0:	0a22      	lsrs	r2, r4, #8
 8022dd2:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 8022dd6:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8022dda:	fb07 f70a 	mul.w	r7, r7, sl
 8022dde:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8022de2:	4414      	add	r4, r2
 8022de4:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 8022de8:	0a24      	lsrs	r4, r4, #8
 8022dea:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8022dee:	9a03      	ldr	r2, [sp, #12]
 8022df0:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8022df4:	fb02 5503 	mla	r5, r2, r3, r5
 8022df8:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8022dfc:	9a00      	ldr	r2, [sp, #0]
 8022dfe:	fb04 540e 	mla	r4, r4, lr, r5
 8022e02:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8022e06:	1235      	asrs	r5, r6, #8
 8022e08:	fb01 4100 	mla	r1, r1, r0, r4
 8022e0c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8022e10:	0a09      	lsrs	r1, r1, #8
 8022e12:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8022e16:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8022e1a:	fb03 7101 	mla	r1, r3, r1, r7
 8022e1e:	fb0e 1e08 	mla	lr, lr, r8, r1
 8022e22:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8022e26:	fb00 e101 	mla	r1, r0, r1, lr
 8022e2a:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 8022e2e:	b287      	uxth	r7, r0
 8022e30:	0a09      	lsrs	r1, r1, #8
 8022e32:	437a      	muls	r2, r7
 8022e34:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8022e38:	1c53      	adds	r3, r2, #1
 8022e3a:	4321      	orrs	r1, r4
 8022e3c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022e40:	0c0a      	lsrs	r2, r1, #16
 8022e42:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8022e46:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8022e4a:	b2c8      	uxtb	r0, r1
 8022e4c:	fb12 f207 	smulbb	r2, r2, r7
 8022e50:	fb14 f407 	smulbb	r4, r4, r7
 8022e54:	b2db      	uxtb	r3, r3
 8022e56:	fb10 f007 	smulbb	r0, r0, r7
 8022e5a:	fb05 2503 	mla	r5, r5, r3, r2
 8022e5e:	10f2      	asrs	r2, r6, #3
 8022e60:	00f6      	lsls	r6, r6, #3
 8022e62:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8022e66:	b2ad      	uxth	r5, r5
 8022e68:	b2f6      	uxtb	r6, r6
 8022e6a:	fb02 4203 	mla	r2, r2, r3, r4
 8022e6e:	fb06 0303 	mla	r3, r6, r3, r0
 8022e72:	b294      	uxth	r4, r2
 8022e74:	b299      	uxth	r1, r3
 8022e76:	1c6b      	adds	r3, r5, #1
 8022e78:	1c62      	adds	r2, r4, #1
 8022e7a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8022e7e:	1c4b      	adds	r3, r1, #1
 8022e80:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8022e84:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8022e88:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8022e8c:	0952      	lsrs	r2, r2, #5
 8022e8e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022e92:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022e96:	432b      	orrs	r3, r5
 8022e98:	4313      	orrs	r3, r2
 8022e9a:	9a02      	ldr	r2, [sp, #8]
 8022e9c:	8013      	strh	r3, [r2, #0]
 8022e9e:	b005      	add	sp, #20
 8022ea0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022ea4:	2500      	movs	r5, #0
 8022ea6:	e6ef      	b.n	8022c88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 8022ea8:	2100      	movs	r1, #0
 8022eaa:	460d      	mov	r5, r1
 8022eac:	e6f7      	b.n	8022c9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8022eae:	2100      	movs	r1, #0
 8022eb0:	e6f5      	b.n	8022c9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8022eb2:	4631      	mov	r1, r6
 8022eb4:	e6f3      	b.n	8022c9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 8022eb6:	2400      	movs	r4, #0
 8022eb8:	e702      	b.n	8022cc0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8022eba:	2200      	movs	r2, #0
 8022ebc:	4614      	mov	r4, r2
 8022ebe:	e70b      	b.n	8022cd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8022ec0:	4602      	mov	r2, r0
 8022ec2:	4604      	mov	r4, r0
 8022ec4:	e708      	b.n	8022cd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8022ec6:	2200      	movs	r2, #0
 8022ec8:	e706      	b.n	8022cd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 8022eca:	4632      	mov	r2, r6
 8022ecc:	e704      	b.n	8022cd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

08022ece <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022ece:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022ed2:	b09d      	sub	sp, #116	@ 0x74
 8022ed4:	9219      	str	r2, [sp, #100]	@ 0x64
 8022ed6:	9307      	str	r3, [sp, #28]
 8022ed8:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 8022eda:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 8022ede:	901b      	str	r0, [sp, #108]	@ 0x6c
 8022ee0:	931a      	str	r3, [sp, #104]	@ 0x68
 8022ee2:	6850      	ldr	r0, [r2, #4]
 8022ee4:	9117      	str	r1, [sp, #92]	@ 0x5c
 8022ee6:	6812      	ldr	r2, [r2, #0]
 8022ee8:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 8022eec:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 8022ef0:	fb00 1303 	mla	r3, r0, r3, r1
 8022ef4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8022ef8:	930a      	str	r3, [sp, #40]	@ 0x28
 8022efa:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8022efc:	681b      	ldr	r3, [r3, #0]
 8022efe:	9310      	str	r3, [sp, #64]	@ 0x40
 8022f00:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 8022f04:	930b      	str	r3, [sp, #44]	@ 0x2c
 8022f06:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8022f08:	2b00      	cmp	r3, #0
 8022f0a:	dc03      	bgt.n	8022f14 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8022f0c:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8022f0e:	2b00      	cmp	r3, #0
 8022f10:	f340 8375 	ble.w	80235fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8022f14:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8022f16:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022f1a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022f1e:	1e48      	subs	r0, r1, #1
 8022f20:	1e57      	subs	r7, r2, #1
 8022f22:	9b07      	ldr	r3, [sp, #28]
 8022f24:	2b00      	cmp	r3, #0
 8022f26:	f340 818e 	ble.w	8023246 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8022f2a:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8022f2e:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022f32:	d406      	bmi.n	8022f42 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8022f34:	4584      	cmp	ip, r0
 8022f36:	da04      	bge.n	8022f42 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8022f38:	2b00      	cmp	r3, #0
 8022f3a:	db02      	blt.n	8022f42 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8022f3c:	42bb      	cmp	r3, r7
 8022f3e:	f2c0 8183 	blt.w	8023248 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 8022f42:	f11c 0c01 	adds.w	ip, ip, #1
 8022f46:	f100 8173 	bmi.w	8023230 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8022f4a:	4561      	cmp	r1, ip
 8022f4c:	f2c0 8170 	blt.w	8023230 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8022f50:	3301      	adds	r3, #1
 8022f52:	f100 816d 	bmi.w	8023230 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8022f56:	429a      	cmp	r2, r3
 8022f58:	f2c0 816a 	blt.w	8023230 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8022f5c:	9b07      	ldr	r3, [sp, #28]
 8022f5e:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8022f60:	9318      	str	r3, [sp, #96]	@ 0x60
 8022f62:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8022f64:	2b00      	cmp	r3, #0
 8022f66:	f340 818c 	ble.w	8023282 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8022f6a:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 8022f6c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8022f70:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8022f72:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8022f76:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8022f7a:	1422      	asrs	r2, r4, #16
 8022f7c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8022f80:	689b      	ldr	r3, [r3, #8]
 8022f82:	f100 81cd 	bmi.w	8023320 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8022f86:	f103 38ff 	add.w	r8, r3, #4294967295
 8022f8a:	4542      	cmp	r2, r8
 8022f8c:	f280 81c8 	bge.w	8023320 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8022f90:	f1bc 0f00 	cmp.w	ip, #0
 8022f94:	f2c0 81c4 	blt.w	8023320 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8022f98:	f10e 38ff 	add.w	r8, lr, #4294967295
 8022f9c:	45c4      	cmp	ip, r8
 8022f9e:	f280 81bf 	bge.w	8023320 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8022fa2:	b21b      	sxth	r3, r3
 8022fa4:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8022fa6:	fb0c 2203 	mla	r2, ip, r3, r2
 8022faa:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8022fae:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8022fb2:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8022fb6:	2800      	cmp	r0, #0
 8022fb8:	f000 81a9 	beq.w	802330e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 8022fbc:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8022fc0:	950c      	str	r5, [sp, #48]	@ 0x30
 8022fc2:	0e2d      	lsrs	r5, r5, #24
 8022fc4:	9513      	str	r5, [sp, #76]	@ 0x4c
 8022fc6:	b181      	cbz	r1, 8022fea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8022fc8:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8022fcc:	3b01      	subs	r3, #1
 8022fce:	009b      	lsls	r3, r3, #2
 8022fd0:	3304      	adds	r3, #4
 8022fd2:	eb08 0c03 	add.w	ip, r8, r3
 8022fd6:	f858 3003 	ldr.w	r3, [r8, r3]
 8022fda:	9308      	str	r3, [sp, #32]
 8022fdc:	0e1b      	lsrs	r3, r3, #24
 8022fde:	9311      	str	r3, [sp, #68]	@ 0x44
 8022fe0:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8022fe4:	930d      	str	r3, [sp, #52]	@ 0x34
 8022fe6:	0e1b      	lsrs	r3, r3, #24
 8022fe8:	9314      	str	r3, [sp, #80]	@ 0x50
 8022fea:	b280      	uxth	r0, r0
 8022fec:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8022fee:	b289      	uxth	r1, r1
 8022ff0:	fb00 f901 	mul.w	r9, r0, r1
 8022ff4:	0100      	lsls	r0, r0, #4
 8022ff6:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8022ffa:	eba0 0809 	sub.w	r8, r0, r9
 8022ffe:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 8023002:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8023004:	b289      	uxth	r1, r1
 8023006:	fa1f f888 	uxth.w	r8, r8
 802300a:	1a5b      	subs	r3, r3, r1
 802300c:	fb08 f000 	mul.w	r0, r8, r0
 8023010:	b29b      	uxth	r3, r3
 8023012:	fb03 000e 	mla	r0, r3, lr, r0
 8023016:	fb01 0005 	mla	r0, r1, r5, r0
 802301a:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802301c:	fb09 0005 	mla	r0, r9, r5, r0
 8023020:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8023024:	2800      	cmp	r0, #0
 8023026:	f000 80fa 	beq.w	802321e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802302a:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 802302e:	d01b      	beq.n	8023068 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8023030:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 8023034:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8023038:	fb0e fa0a 	mul.w	sl, lr, sl
 802303c:	fb0e fe02 	mul.w	lr, lr, r2
 8023040:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8023044:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8023048:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 802304c:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8023050:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8023054:	4452      	add	r2, sl
 8023056:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802305a:	0a12      	lsrs	r2, r2, #8
 802305c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8023060:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8023064:	ea42 020c 	orr.w	r2, r2, ip
 8023068:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 802306a:	2dff      	cmp	r5, #255	@ 0xff
 802306c:	d021      	beq.n	80230b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 802306e:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8023070:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8023074:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8023076:	fb05 fb0b 	mul.w	fp, r5, fp
 802307a:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802307c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8023080:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8023082:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023086:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802308a:	fb05 fa0a 	mul.w	sl, r5, sl
 802308e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023092:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8023096:	44de      	add	lr, fp
 8023098:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802309c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80230a0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80230a4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80230a8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80230ac:	ea4e 050a 	orr.w	r5, lr, sl
 80230b0:	950c      	str	r5, [sp, #48]	@ 0x30
 80230b2:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80230b4:	2dff      	cmp	r5, #255	@ 0xff
 80230b6:	d021      	beq.n	80230fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 80230b8:	9d08      	ldr	r5, [sp, #32]
 80230ba:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 80230be:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80230c0:	fb05 fb0b 	mul.w	fp, r5, fp
 80230c4:	9d08      	ldr	r5, [sp, #32]
 80230c6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80230ca:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80230cc:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80230d0:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80230d4:	fb05 fa0a 	mul.w	sl, r5, sl
 80230d8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80230dc:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80230e0:	44de      	add	lr, fp
 80230e2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80230e6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80230ea:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80230ee:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80230f2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80230f6:	ea4e 050a 	orr.w	r5, lr, sl
 80230fa:	9508      	str	r5, [sp, #32]
 80230fc:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80230fe:	2dff      	cmp	r5, #255	@ 0xff
 8023100:	d021      	beq.n	8023146 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8023102:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8023104:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8023108:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802310a:	fb05 fb0b 	mul.w	fp, r5, fp
 802310e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8023110:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8023114:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8023116:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802311a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802311e:	fb05 fa0a 	mul.w	sl, r5, sl
 8023122:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023126:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802312a:	44de      	add	lr, fp
 802312c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023130:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023134:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023138:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802313c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023140:	ea4e 050a 	orr.w	r5, lr, sl
 8023144:	950d      	str	r5, [sp, #52]	@ 0x34
 8023146:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8023148:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 802314c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8023150:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8023154:	9d08      	ldr	r5, [sp, #32]
 8023156:	fb08 fc0c 	mul.w	ip, r8, ip
 802315a:	fb03 cc0e 	mla	ip, r3, lr, ip
 802315e:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8023162:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8023164:	fb01 cc0e 	mla	ip, r1, lr, ip
 8023168:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 802316c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802316e:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023172:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8023176:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8023178:	fb08 f80e 	mul.w	r8, r8, lr
 802317c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023180:	fb03 8202 	mla	r2, r3, r2, r8
 8023184:	9b08      	ldr	r3, [sp, #32]
 8023186:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802318a:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 802318e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8023190:	fb01 220a 	mla	r2, r1, sl, r2
 8023194:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 8023198:	883b      	ldrh	r3, [r7, #0]
 802319a:	fb09 2901 	mla	r9, r9, r1, r2
 802319e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80231a0:	1219      	asrs	r1, r3, #8
 80231a2:	4342      	muls	r2, r0
 80231a4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80231a8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80231ac:	1c50      	adds	r0, r2, #1
 80231ae:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 80231b2:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80231b6:	ea4c 0c09 	orr.w	ip, ip, r9
 80231ba:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80231be:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80231c2:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80231c6:	fa5f fc8c 	uxtb.w	ip, ip
 80231ca:	fb12 f205 	smulbb	r2, r2, r5
 80231ce:	b2c0      	uxtb	r0, r0
 80231d0:	fb1c fc05 	smulbb	ip, ip, r5
 80231d4:	fb01 2100 	mla	r1, r1, r0, r2
 80231d8:	10da      	asrs	r2, r3, #3
 80231da:	fb1e fe05 	smulbb	lr, lr, r5
 80231de:	00db      	lsls	r3, r3, #3
 80231e0:	b289      	uxth	r1, r1
 80231e2:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80231e6:	b2db      	uxtb	r3, r3
 80231e8:	fb02 e200 	mla	r2, r2, r0, lr
 80231ec:	fb03 c300 	mla	r3, r3, r0, ip
 80231f0:	b292      	uxth	r2, r2
 80231f2:	fa1f fc83 	uxth.w	ip, r3
 80231f6:	1c4b      	adds	r3, r1, #1
 80231f8:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80231fc:	f10c 0301 	add.w	r3, ip, #1
 8023200:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8023204:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8023208:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802320c:	430b      	orrs	r3, r1
 802320e:	1c51      	adds	r1, r2, #1
 8023210:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8023214:	0952      	lsrs	r2, r2, #5
 8023216:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802321a:	4313      	orrs	r3, r2
 802321c:	803b      	strh	r3, [r7, #0]
 802321e:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8023220:	3702      	adds	r7, #2
 8023222:	441c      	add	r4, r3
 8023224:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8023226:	441e      	add	r6, r3
 8023228:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802322a:	3b01      	subs	r3, #1
 802322c:	9318      	str	r3, [sp, #96]	@ 0x60
 802322e:	e698      	b.n	8022f62 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8023230:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8023232:	441c      	add	r4, r3
 8023234:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8023236:	441e      	add	r6, r3
 8023238:	9b07      	ldr	r3, [sp, #28]
 802323a:	3b01      	subs	r3, #1
 802323c:	9307      	str	r3, [sp, #28]
 802323e:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8023240:	3302      	adds	r3, #2
 8023242:	930a      	str	r3, [sp, #40]	@ 0x28
 8023244:	e66d      	b.n	8022f22 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8023246:	d023      	beq.n	8023290 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8023248:	9b07      	ldr	r3, [sp, #28]
 802324a:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 802324c:	3b01      	subs	r3, #1
 802324e:	fb00 4003 	mla	r0, r0, r3, r4
 8023252:	1400      	asrs	r0, r0, #16
 8023254:	f53f ae82 	bmi.w	8022f5c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023258:	3901      	subs	r1, #1
 802325a:	4288      	cmp	r0, r1
 802325c:	f6bf ae7e 	bge.w	8022f5c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023260:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 8023262:	fb01 6303 	mla	r3, r1, r3, r6
 8023266:	141b      	asrs	r3, r3, #16
 8023268:	f53f ae78 	bmi.w	8022f5c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802326c:	3a01      	subs	r2, #1
 802326e:	4293      	cmp	r3, r2
 8023270:	f6bf ae74 	bge.w	8022f5c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023274:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8023278:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 802327c:	f1bb 0f00 	cmp.w	fp, #0
 8023280:	dc6c      	bgt.n	802335c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8023282:	9b07      	ldr	r3, [sp, #28]
 8023284:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8023288:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802328a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802328e:	930a      	str	r3, [sp, #40]	@ 0x28
 8023290:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8023292:	2b00      	cmp	r3, #0
 8023294:	f340 81b3 	ble.w	80235fe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8023298:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802329c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 802329e:	ee30 0a04 	vadd.f32	s0, s0, s8
 80232a2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80232a6:	eef0 6a62 	vmov.f32	s13, s5
 80232aa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80232ae:	ee31 1a05 	vadd.f32	s2, s2, s10
 80232b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80232b6:	ee16 4a90 	vmov	r4, s13
 80232ba:	eef0 6a43 	vmov.f32	s13, s6
 80232be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80232c2:	ee16 6a90 	vmov	r6, s13
 80232c6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80232ca:	ee61 7a27 	vmul.f32	s15, s2, s15
 80232ce:	ee77 2a62 	vsub.f32	s5, s14, s5
 80232d2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80232d6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80232da:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80232de:	ee12 2a90 	vmov	r2, s5
 80232e2:	eef0 2a47 	vmov.f32	s5, s14
 80232e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80232ea:	ee13 2a10 	vmov	r2, s6
 80232ee:	9329      	str	r3, [sp, #164]	@ 0xa4
 80232f0:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80232f2:	eeb0 3a67 	vmov.f32	s6, s15
 80232f6:	fb92 f3f3 	sdiv	r3, r2, r3
 80232fa:	932a      	str	r3, [sp, #168]	@ 0xa8
 80232fc:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80232fe:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8023300:	3b01      	subs	r3, #1
 8023302:	9317      	str	r3, [sp, #92]	@ 0x5c
 8023304:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8023306:	bf08      	it	eq
 8023308:	4613      	moveq	r3, r2
 802330a:	9307      	str	r3, [sp, #28]
 802330c:	e5fb      	b.n	8022f06 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 802330e:	2900      	cmp	r1, #0
 8023310:	f43f ae6b 	beq.w	8022fea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023314:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8023318:	9308      	str	r3, [sp, #32]
 802331a:	0e1b      	lsrs	r3, r3, #24
 802331c:	9311      	str	r3, [sp, #68]	@ 0x44
 802331e:	e664      	b.n	8022fea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023320:	f112 0801 	adds.w	r8, r2, #1
 8023324:	f53f af7b 	bmi.w	802321e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023328:	4543      	cmp	r3, r8
 802332a:	f6ff af78 	blt.w	802321e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802332e:	f11c 0801 	adds.w	r8, ip, #1
 8023332:	f53f af74 	bmi.w	802321e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023336:	45c6      	cmp	lr, r8
 8023338:	f6ff af71 	blt.w	802321e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802333c:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 802333e:	b21b      	sxth	r3, r3
 8023340:	9201      	str	r2, [sp, #4]
 8023342:	fa0f f28e 	sxth.w	r2, lr
 8023346:	e9cd 1504 	strd	r1, r5, [sp, #16]
 802334a:	e9cd c002 	strd	ip, r0, [sp, #8]
 802334e:	9200      	str	r2, [sp, #0]
 8023350:	4639      	mov	r1, r7
 8023352:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8023354:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8023356:	f7ff fc79 	bl	8022c4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 802335a:	e760      	b.n	802321e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802335c:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 802335e:	1427      	asrs	r7, r4, #16
 8023360:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8023362:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023366:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802336a:	1433      	asrs	r3, r6, #16
 802336c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023370:	fb01 7303 	mla	r3, r1, r3, r7
 8023374:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 8023378:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802337c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8023380:	2a00      	cmp	r2, #0
 8023382:	f000 8133 	beq.w	80235ec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8023386:	687d      	ldr	r5, [r7, #4]
 8023388:	950e      	str	r5, [sp, #56]	@ 0x38
 802338a:	0e2d      	lsrs	r5, r5, #24
 802338c:	9515      	str	r5, [sp, #84]	@ 0x54
 802338e:	b178      	cbz	r0, 80233b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023390:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 8023394:	3901      	subs	r1, #1
 8023396:	0089      	lsls	r1, r1, #2
 8023398:	3104      	adds	r1, #4
 802339a:	eb07 0e01 	add.w	lr, r7, r1
 802339e:	5879      	ldr	r1, [r7, r1]
 80233a0:	9109      	str	r1, [sp, #36]	@ 0x24
 80233a2:	0e09      	lsrs	r1, r1, #24
 80233a4:	9112      	str	r1, [sp, #72]	@ 0x48
 80233a6:	f8de 1004 	ldr.w	r1, [lr, #4]
 80233aa:	910f      	str	r1, [sp, #60]	@ 0x3c
 80233ac:	0e09      	lsrs	r1, r1, #24
 80233ae:	9116      	str	r1, [sp, #88]	@ 0x58
 80233b0:	b292      	uxth	r2, r2
 80233b2:	9915      	ldr	r1, [sp, #84]	@ 0x54
 80233b4:	b280      	uxth	r0, r0
 80233b6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80233b8:	fb02 f800 	mul.w	r8, r2, r0
 80233bc:	0112      	lsls	r2, r2, #4
 80233be:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80233c2:	eba2 0e08 	sub.w	lr, r2, r8
 80233c6:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 80233ca:	b280      	uxth	r0, r0
 80233cc:	fa1f fe8e 	uxth.w	lr, lr
 80233d0:	1a12      	subs	r2, r2, r0
 80233d2:	fb0e f101 	mul.w	r1, lr, r1
 80233d6:	b292      	uxth	r2, r2
 80233d8:	fb02 110c 	mla	r1, r2, ip, r1
 80233dc:	fb00 1105 	mla	r1, r0, r5, r1
 80233e0:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80233e2:	fb08 1105 	mla	r1, r8, r5, r1
 80233e6:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80233ea:	2900      	cmp	r1, #0
 80233ec:	f000 80f5 	beq.w	80235da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 80233f0:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 80233f4:	d019      	beq.n	802342a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 80233f6:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 80233fa:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80233fe:	fb0c fa0a 	mul.w	sl, ip, sl
 8023402:	fb0c fc03 	mul.w	ip, ip, r3
 8023406:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802340a:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802340e:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8023412:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8023416:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802341a:	4453      	add	r3, sl
 802341c:	0a3f      	lsrs	r7, r7, #8
 802341e:	0a1b      	lsrs	r3, r3, #8
 8023420:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8023424:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8023428:	433b      	orrs	r3, r7
 802342a:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802342c:	2dff      	cmp	r5, #255	@ 0xff
 802342e:	d020      	beq.n	8023472 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8023430:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8023432:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8023436:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8023438:	436f      	muls	r7, r5
 802343a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802343c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023440:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8023444:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8023446:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802344a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802344e:	fb05 fa0a 	mul.w	sl, r5, sl
 8023452:	44bc      	add	ip, r7
 8023454:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8023458:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802345c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023460:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023464:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023468:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802346c:	ea4c 050a 	orr.w	r5, ip, sl
 8023470:	950e      	str	r5, [sp, #56]	@ 0x38
 8023472:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8023474:	2dff      	cmp	r5, #255	@ 0xff
 8023476:	d020      	beq.n	80234ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 8023478:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802347a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802347e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8023480:	436f      	muls	r7, r5
 8023482:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8023484:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023488:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802348c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802348e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8023492:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023496:	fb05 fa0a 	mul.w	sl, r5, sl
 802349a:	44bc      	add	ip, r7
 802349c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80234a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80234a4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80234a8:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80234ac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80234b0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80234b4:	ea4c 050a 	orr.w	r5, ip, sl
 80234b8:	9509      	str	r5, [sp, #36]	@ 0x24
 80234ba:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80234bc:	2dff      	cmp	r5, #255	@ 0xff
 80234be:	d020      	beq.n	8023502 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 80234c0:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80234c2:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80234c6:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80234c8:	436f      	muls	r7, r5
 80234ca:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80234cc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80234d0:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80234d4:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80234d6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80234da:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80234de:	fb05 fa0a 	mul.w	sl, r5, sl
 80234e2:	44bc      	add	ip, r7
 80234e4:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80234e8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80234ec:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80234f0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80234f4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80234f8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80234fc:	ea4c 050a 	orr.w	r5, ip, sl
 8023500:	950f      	str	r5, [sp, #60]	@ 0x3c
 8023502:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8023504:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8023508:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802350c:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8023510:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8023512:	fb0e f707 	mul.w	r7, lr, r7
 8023516:	fb02 770c 	mla	r7, r2, ip, r7
 802351a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 802351e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8023520:	fb00 770c 	mla	r7, r0, ip, r7
 8023524:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8023528:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802352a:	fb08 770c 	mla	r7, r8, ip, r7
 802352e:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8023532:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8023534:	fb0e fe0c 	mul.w	lr, lr, ip
 8023538:	0a3f      	lsrs	r7, r7, #8
 802353a:	fb02 e303 	mla	r3, r2, r3, lr
 802353e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8023540:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8023544:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8023548:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802354a:	fb00 330a 	mla	r3, r0, sl, r3
 802354e:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 8023552:	f8b9 0000 	ldrh.w	r0, [r9]
 8023556:	fb08 3c0c 	mla	ip, r8, ip, r3
 802355a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802355c:	1202      	asrs	r2, r0, #8
 802355e:	4359      	muls	r1, r3
 8023560:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023564:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8023568:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802356c:	1c4b      	adds	r3, r1, #1
 802356e:	ea47 070c 	orr.w	r7, r7, ip
 8023572:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023576:	0c3b      	lsrs	r3, r7, #16
 8023578:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802357c:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8023580:	b2ff      	uxtb	r7, r7
 8023582:	fb13 f305 	smulbb	r3, r3, r5
 8023586:	b2c9      	uxtb	r1, r1
 8023588:	fb17 f705 	smulbb	r7, r7, r5
 802358c:	fb02 3201 	mla	r2, r2, r1, r3
 8023590:	10c3      	asrs	r3, r0, #3
 8023592:	fb1c fc05 	smulbb	ip, ip, r5
 8023596:	00c0      	lsls	r0, r0, #3
 8023598:	b292      	uxth	r2, r2
 802359a:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 802359e:	b2c0      	uxtb	r0, r0
 80235a0:	fb03 c301 	mla	r3, r3, r1, ip
 80235a4:	fb00 7001 	mla	r0, r0, r1, r7
 80235a8:	1c51      	adds	r1, r2, #1
 80235aa:	b29b      	uxth	r3, r3
 80235ac:	b280      	uxth	r0, r0
 80235ae:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80235b2:	f100 0c01 	add.w	ip, r0, #1
 80235b6:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 80235ba:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 80235be:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80235c2:	ea4c 0202 	orr.w	r2, ip, r2
 80235c6:	f103 0c01 	add.w	ip, r3, #1
 80235ca:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80235ce:	095b      	lsrs	r3, r3, #5
 80235d0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80235d4:	431a      	orrs	r2, r3
 80235d6:	f8a9 2000 	strh.w	r2, [r9]
 80235da:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80235dc:	f109 0902 	add.w	r9, r9, #2
 80235e0:	f10b 3bff 	add.w	fp, fp, #4294967295
 80235e4:	441c      	add	r4, r3
 80235e6:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 80235e8:	441e      	add	r6, r3
 80235ea:	e647      	b.n	802327c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 80235ec:	2800      	cmp	r0, #0
 80235ee:	f43f aedf 	beq.w	80233b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80235f2:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 80235f6:	9109      	str	r1, [sp, #36]	@ 0x24
 80235f8:	0e09      	lsrs	r1, r1, #24
 80235fa:	9112      	str	r1, [sp, #72]	@ 0x48
 80235fc:	e6d8      	b.n	80233b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80235fe:	b01d      	add	sp, #116	@ 0x74
 8023600:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023604 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8023604:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023608:	b085      	sub	sp, #20
 802360a:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 802360e:	9102      	str	r1, [sp, #8]
 8023610:	2c00      	cmp	r4, #0
 8023612:	fb04 7103 	mla	r1, r4, r3, r7
 8023616:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 802361a:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 802361e:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8023622:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 8023626:	f2c0 810c 	blt.w	8023842 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 802362a:	45a6      	cmp	lr, r4
 802362c:	f340 8109 	ble.w	8023842 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8023630:	2f00      	cmp	r7, #0
 8023632:	f2c0 8104 	blt.w	802383e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8023636:	42bb      	cmp	r3, r7
 8023638:	f340 8101 	ble.w	802383e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 802363c:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8023640:	1c7a      	adds	r2, r7, #1
 8023642:	f100 8101 	bmi.w	8023848 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8023646:	4293      	cmp	r3, r2
 8023648:	f340 80fe 	ble.w	8023848 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 802364c:	2e00      	cmp	r6, #0
 802364e:	f000 80fd 	beq.w	802384c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8023652:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8023656:	3401      	adds	r4, #1
 8023658:	f100 80fc 	bmi.w	8023854 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 802365c:	45a6      	cmp	lr, r4
 802365e:	f340 80f9 	ble.w	8023854 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8023662:	2800      	cmp	r0, #0
 8023664:	f000 80f9 	beq.w	802385a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8023668:	2f00      	cmp	r7, #0
 802366a:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 802366e:	f2c0 80ef 	blt.w	8023850 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8023672:	42bb      	cmp	r3, r7
 8023674:	f340 80ec 	ble.w	8023850 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8023678:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802367c:	3701      	adds	r7, #1
 802367e:	f100 80ef 	bmi.w	8023860 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8023682:	42bb      	cmp	r3, r7
 8023684:	f340 80ec 	ble.w	8023860 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8023688:	2e00      	cmp	r6, #0
 802368a:	f000 80eb 	beq.w	8023864 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 802368e:	6852      	ldr	r2, [r2, #4]
 8023690:	b2b6      	uxth	r6, r6
 8023692:	b280      	uxth	r0, r0
 8023694:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8023698:	fb00 fe06 	mul.w	lr, r0, r6
 802369c:	0136      	lsls	r6, r6, #4
 802369e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 80236a2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80236a6:	eba6 070e 	sub.w	r7, r6, lr
 80236aa:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 80236ae:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80236b2:	b280      	uxth	r0, r0
 80236b4:	b2bf      	uxth	r7, r7
 80236b6:	1a1b      	subs	r3, r3, r0
 80236b8:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80236bc:	fb07 f60a 	mul.w	r6, r7, sl
 80236c0:	b29b      	uxth	r3, r3
 80236c2:	fb0b 6603 	mla	r6, fp, r3, r6
 80236c6:	fb00 6609 	mla	r6, r0, r9, r6
 80236ca:	fb0e 6608 	mla	r6, lr, r8, r6
 80236ce:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80236d2:	9600      	str	r6, [sp, #0]
 80236d4:	2e00      	cmp	r6, #0
 80236d6:	f000 80af 	beq.w	8023838 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 80236da:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80236de:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 80236e2:	9e02      	ldr	r6, [sp, #8]
 80236e4:	fb0b fc0c 	mul.w	ip, fp, ip
 80236e8:	fb0b f505 	mul.w	r5, fp, r5
 80236ec:	8836      	ldrh	r6, [r6, #0]
 80236ee:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 80236f2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80236f6:	9501      	str	r5, [sp, #4]
 80236f8:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 80236fc:	44dc      	add	ip, fp
 80236fe:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023702:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 8023706:	9503      	str	r5, [sp, #12]
 8023708:	9d01      	ldr	r5, [sp, #4]
 802370a:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 802370e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8023712:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 8023716:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802371a:	fb0a fc0c 	mul.w	ip, sl, ip
 802371e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8023722:	fb0a fa01 	mul.w	sl, sl, r1
 8023726:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802372a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802372e:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 8023732:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8023736:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 802373a:	4465      	add	r5, ip
 802373c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8023740:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8023744:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023748:	fb09 fc0c 	mul.w	ip, r9, ip
 802374c:	0a2d      	lsrs	r5, r5, #8
 802374e:	fb09 f904 	mul.w	r9, r9, r4
 8023752:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023756:	ea4f 211c 	mov.w	r1, ip, lsr #8
 802375a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 802375e:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8023762:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8023766:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 802376a:	437d      	muls	r5, r7
 802376c:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023770:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8023774:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8023778:	4461      	add	r1, ip
 802377a:	fb08 f404 	mul.w	r4, r8, r4
 802377e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023782:	fb08 f802 	mul.w	r8, r8, r2
 8023786:	0a09      	lsrs	r1, r1, #8
 8023788:	0a22      	lsrs	r2, r4, #8
 802378a:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 802378e:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8023792:	fb07 f70a 	mul.w	r7, r7, sl
 8023796:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802379a:	4414      	add	r4, r2
 802379c:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 80237a0:	0a24      	lsrs	r4, r4, #8
 80237a2:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80237a6:	9a03      	ldr	r2, [sp, #12]
 80237a8:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 80237ac:	fb02 5503 	mla	r5, r2, r3, r5
 80237b0:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80237b4:	fb04 540e 	mla	r4, r4, lr, r5
 80237b8:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 80237bc:	fb01 4100 	mla	r1, r1, r0, r4
 80237c0:	0a09      	lsrs	r1, r1, #8
 80237c2:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 80237c6:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 80237ca:	fb03 7101 	mla	r1, r3, r1, r7
 80237ce:	9b00      	ldr	r3, [sp, #0]
 80237d0:	fb0e 1e08 	mla	lr, lr, r8, r1
 80237d4:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 80237d8:	43da      	mvns	r2, r3
 80237da:	1233      	asrs	r3, r6, #8
 80237dc:	fb00 e101 	mla	r1, r0, r1, lr
 80237e0:	10f0      	asrs	r0, r6, #3
 80237e2:	b2d2      	uxtb	r2, r2
 80237e4:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 80237e8:	0a09      	lsrs	r1, r1, #8
 80237ea:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80237ee:	00f6      	lsls	r6, r6, #3
 80237f0:	4353      	muls	r3, r2
 80237f2:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80237f6:	4350      	muls	r0, r2
 80237f8:	b2f6      	uxtb	r6, r6
 80237fa:	4321      	orrs	r1, r4
 80237fc:	4356      	muls	r6, r2
 80237fe:	1c5a      	adds	r2, r3, #1
 8023800:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023804:	0c0b      	lsrs	r3, r1, #16
 8023806:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802380a:	1c42      	adds	r2, r0, #1
 802380c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023810:	0a0a      	lsrs	r2, r1, #8
 8023812:	021b      	lsls	r3, r3, #8
 8023814:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8023818:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 802381c:	00d2      	lsls	r2, r2, #3
 802381e:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023822:	4313      	orrs	r3, r2
 8023824:	1c72      	adds	r2, r6, #1
 8023826:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 802382a:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 802382e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8023832:	4319      	orrs	r1, r3
 8023834:	9b02      	ldr	r3, [sp, #8]
 8023836:	8019      	strh	r1, [r3, #0]
 8023838:	b005      	add	sp, #20
 802383a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802383e:	2500      	movs	r5, #0
 8023840:	e6fe      	b.n	8023640 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8023842:	2100      	movs	r1, #0
 8023844:	460d      	mov	r5, r1
 8023846:	e706      	b.n	8023656 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023848:	2100      	movs	r1, #0
 802384a:	e704      	b.n	8023656 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 802384c:	4631      	mov	r1, r6
 802384e:	e702      	b.n	8023656 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023850:	2400      	movs	r4, #0
 8023852:	e713      	b.n	802367c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8023854:	2200      	movs	r2, #0
 8023856:	4614      	mov	r4, r2
 8023858:	e71a      	b.n	8023690 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 802385a:	4602      	mov	r2, r0
 802385c:	4604      	mov	r4, r0
 802385e:	e717      	b.n	8023690 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023860:	2200      	movs	r2, #0
 8023862:	e715      	b.n	8023690 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023864:	4632      	mov	r2, r6
 8023866:	e713      	b.n	8023690 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>

08023868 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023868:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802386c:	b09b      	sub	sp, #108	@ 0x6c
 802386e:	9218      	str	r2, [sp, #96]	@ 0x60
 8023870:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8023872:	9019      	str	r0, [sp, #100]	@ 0x64
 8023874:	9116      	str	r1, [sp, #88]	@ 0x58
 8023876:	6850      	ldr	r0, [r2, #4]
 8023878:	9307      	str	r3, [sp, #28]
 802387a:	6812      	ldr	r2, [r2, #0]
 802387c:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 8023880:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 8023884:	fb00 1303 	mla	r3, r0, r3, r1
 8023888:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802388c:	930a      	str	r3, [sp, #40]	@ 0x28
 802388e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8023890:	681b      	ldr	r3, [r3, #0]
 8023892:	930f      	str	r3, [sp, #60]	@ 0x3c
 8023894:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8023896:	2b00      	cmp	r3, #0
 8023898:	dc03      	bgt.n	80238a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802389a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802389c:	2b00      	cmp	r3, #0
 802389e:	f340 8387 	ble.w	8023fb0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 80238a2:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80238a4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80238a8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80238ac:	1e48      	subs	r0, r1, #1
 80238ae:	1e57      	subs	r7, r2, #1
 80238b0:	9b07      	ldr	r3, [sp, #28]
 80238b2:	2b00      	cmp	r3, #0
 80238b4:	f340 8166 	ble.w	8023b84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80238b8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80238bc:	ea4f 4326 	mov.w	r3, r6, asr #16
 80238c0:	d406      	bmi.n	80238d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80238c2:	4584      	cmp	ip, r0
 80238c4:	da04      	bge.n	80238d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80238c6:	2b00      	cmp	r3, #0
 80238c8:	db02      	blt.n	80238d0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80238ca:	42bb      	cmp	r3, r7
 80238cc:	f2c0 815b 	blt.w	8023b86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 80238d0:	f11c 0c01 	adds.w	ip, ip, #1
 80238d4:	f100 814b 	bmi.w	8023b6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80238d8:	4561      	cmp	r1, ip
 80238da:	f2c0 8148 	blt.w	8023b6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80238de:	3301      	adds	r3, #1
 80238e0:	f100 8145 	bmi.w	8023b6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80238e4:	429a      	cmp	r2, r3
 80238e6:	f2c0 8142 	blt.w	8023b6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 80238ea:	9b07      	ldr	r3, [sp, #28]
 80238ec:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 80238ee:	9317      	str	r3, [sp, #92]	@ 0x5c
 80238f0:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80238f2:	2b00      	cmp	r3, #0
 80238f4:	f340 8165 	ble.w	8023bc2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 80238f8:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 80238fa:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80238fe:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8023900:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8023904:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8023908:	1422      	asrs	r2, r4, #16
 802390a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802390e:	689b      	ldr	r3, [r3, #8]
 8023910:	f100 81d5 	bmi.w	8023cbe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023914:	f103 38ff 	add.w	r8, r3, #4294967295
 8023918:	4542      	cmp	r2, r8
 802391a:	f280 81d0 	bge.w	8023cbe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802391e:	f1bc 0f00 	cmp.w	ip, #0
 8023922:	f2c0 81cc 	blt.w	8023cbe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023926:	f10e 38ff 	add.w	r8, lr, #4294967295
 802392a:	45c4      	cmp	ip, r8
 802392c:	f280 81c7 	bge.w	8023cbe <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023930:	b21b      	sxth	r3, r3
 8023932:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8023934:	fb0c 2203 	mla	r2, ip, r3, r2
 8023938:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 802393c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8023940:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8023944:	2900      	cmp	r1, #0
 8023946:	f000 8182 	beq.w	8023c4e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 802394a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802394e:	950b      	str	r5, [sp, #44]	@ 0x2c
 8023950:	0e2d      	lsrs	r5, r5, #24
 8023952:	9512      	str	r5, [sp, #72]	@ 0x48
 8023954:	b180      	cbz	r0, 8023978 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8023956:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 802395a:	3b01      	subs	r3, #1
 802395c:	009b      	lsls	r3, r3, #2
 802395e:	3304      	adds	r3, #4
 8023960:	eb08 0c03 	add.w	ip, r8, r3
 8023964:	f858 3003 	ldr.w	r3, [r8, r3]
 8023968:	9308      	str	r3, [sp, #32]
 802396a:	0e1b      	lsrs	r3, r3, #24
 802396c:	9310      	str	r3, [sp, #64]	@ 0x40
 802396e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8023972:	930c      	str	r3, [sp, #48]	@ 0x30
 8023974:	0e1b      	lsrs	r3, r3, #24
 8023976:	9313      	str	r3, [sp, #76]	@ 0x4c
 8023978:	b289      	uxth	r1, r1
 802397a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 802397c:	b280      	uxth	r0, r0
 802397e:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8023980:	fb01 f900 	mul.w	r9, r1, r0
 8023984:	0109      	lsls	r1, r1, #4
 8023986:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802398a:	eba1 0809 	sub.w	r8, r1, r9
 802398e:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 8023992:	b280      	uxth	r0, r0
 8023994:	fa1f f888 	uxth.w	r8, r8
 8023998:	1a09      	subs	r1, r1, r0
 802399a:	fb08 f303 	mul.w	r3, r8, r3
 802399e:	b289      	uxth	r1, r1
 80239a0:	fb01 330e 	mla	r3, r1, lr, r3
 80239a4:	fb00 3305 	mla	r3, r0, r5, r3
 80239a8:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80239aa:	fb09 3305 	mla	r3, r9, r5, r3
 80239ae:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80239b2:	2b00      	cmp	r3, #0
 80239b4:	f000 80d2 	beq.w	8023b5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80239b8:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 80239bc:	d01b      	beq.n	80239f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 80239be:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 80239c2:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 80239c6:	fb0e fa0a 	mul.w	sl, lr, sl
 80239ca:	fb0e fe02 	mul.w	lr, lr, r2
 80239ce:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80239d2:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 80239d6:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 80239da:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80239de:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80239e2:	4452      	add	r2, sl
 80239e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80239e8:	0a12      	lsrs	r2, r2, #8
 80239ea:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 80239ee:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80239f2:	ea42 020c 	orr.w	r2, r2, ip
 80239f6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80239f8:	2dff      	cmp	r5, #255	@ 0xff
 80239fa:	d021      	beq.n	8023a40 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 80239fc:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80239fe:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8023a02:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8023a04:	fb05 fb0b 	mul.w	fp, r5, fp
 8023a08:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8023a0a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8023a0e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8023a10:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023a14:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8023a18:	fb05 fa0a 	mul.w	sl, r5, sl
 8023a1c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023a20:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8023a24:	44de      	add	lr, fp
 8023a26:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023a2a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023a2e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023a32:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023a36:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023a3a:	ea4e 050a 	orr.w	r5, lr, sl
 8023a3e:	950b      	str	r5, [sp, #44]	@ 0x2c
 8023a40:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8023a42:	2dff      	cmp	r5, #255	@ 0xff
 8023a44:	d021      	beq.n	8023a8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8023a46:	9d08      	ldr	r5, [sp, #32]
 8023a48:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8023a4c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8023a4e:	fb05 fb0b 	mul.w	fp, r5, fp
 8023a52:	9d08      	ldr	r5, [sp, #32]
 8023a54:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8023a58:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8023a5a:	fb05 fa0e 	mul.w	sl, r5, lr
 8023a5e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023a62:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8023a66:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023a6a:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8023a6e:	44de      	add	lr, fp
 8023a70:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023a74:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023a78:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023a7c:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023a80:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023a84:	ea4e 050a 	orr.w	r5, lr, sl
 8023a88:	9508      	str	r5, [sp, #32]
 8023a8a:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8023a8c:	2dff      	cmp	r5, #255	@ 0xff
 8023a8e:	d021      	beq.n	8023ad4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8023a90:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8023a92:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8023a96:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8023a98:	fb05 fb0b 	mul.w	fp, r5, fp
 8023a9c:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8023a9e:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8023aa2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8023aa4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023aa8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8023aac:	fb05 fa0a 	mul.w	sl, r5, sl
 8023ab0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023ab4:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8023ab8:	44de      	add	lr, fp
 8023aba:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023abe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023ac2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023ac6:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023aca:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023ace:	ea4e 050a 	orr.w	r5, lr, sl
 8023ad2:	950c      	str	r5, [sp, #48]	@ 0x30
 8023ad4:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8023ad6:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 8023ada:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8023ade:	2bff      	cmp	r3, #255	@ 0xff
 8023ae0:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8023ae4:	9d08      	ldr	r5, [sp, #32]
 8023ae6:	fb08 fc0c 	mul.w	ip, r8, ip
 8023aea:	fb01 cc0e 	mla	ip, r1, lr, ip
 8023aee:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8023af2:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8023af4:	fb00 cc0e 	mla	ip, r0, lr, ip
 8023af8:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8023afc:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8023afe:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023b02:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8023b06:	fb08 f80e 	mul.w	r8, r8, lr
 8023b0a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023b0e:	fb01 8202 	mla	r2, r1, r2, r8
 8023b12:	9908      	ldr	r1, [sp, #32]
 8023b14:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023b18:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8023b1c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8023b1e:	fb00 220a 	mla	r2, r0, sl, r2
 8023b22:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 8023b26:	fb09 2900 	mla	r9, r9, r0, r2
 8023b2a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023b2e:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8023b32:	ea4c 0c09 	orr.w	ip, ip, r9
 8023b36:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8023b3a:	f040 8091 	bne.w	8023c60 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8023b3e:	ea4f 135c 	mov.w	r3, ip, lsr #5
 8023b42:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 8023b46:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8023b4a:	f022 0207 	bic.w	r2, r2, #7
 8023b4e:	431a      	orrs	r2, r3
 8023b50:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8023b54:	ea4c 0c02 	orr.w	ip, ip, r2
 8023b58:	f8a7 c000 	strh.w	ip, [r7]
 8023b5c:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8023b5e:	3702      	adds	r7, #2
 8023b60:	441c      	add	r4, r3
 8023b62:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8023b64:	441e      	add	r6, r3
 8023b66:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8023b68:	3b01      	subs	r3, #1
 8023b6a:	9317      	str	r3, [sp, #92]	@ 0x5c
 8023b6c:	e6c0      	b.n	80238f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8023b6e:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8023b70:	441c      	add	r4, r3
 8023b72:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8023b74:	441e      	add	r6, r3
 8023b76:	9b07      	ldr	r3, [sp, #28]
 8023b78:	3b01      	subs	r3, #1
 8023b7a:	9307      	str	r3, [sp, #28]
 8023b7c:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8023b7e:	3302      	adds	r3, #2
 8023b80:	930a      	str	r3, [sp, #40]	@ 0x28
 8023b82:	e695      	b.n	80238b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8023b84:	d024      	beq.n	8023bd0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8023b86:	9b07      	ldr	r3, [sp, #28]
 8023b88:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8023b8a:	3b01      	subs	r3, #1
 8023b8c:	fb00 4003 	mla	r0, r0, r3, r4
 8023b90:	1400      	asrs	r0, r0, #16
 8023b92:	f53f aeaa 	bmi.w	80238ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023b96:	3901      	subs	r1, #1
 8023b98:	4288      	cmp	r0, r1
 8023b9a:	f6bf aea6 	bge.w	80238ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023b9e:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8023ba0:	fb01 6303 	mla	r3, r1, r3, r6
 8023ba4:	141b      	asrs	r3, r3, #16
 8023ba6:	f53f aea0 	bmi.w	80238ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023baa:	3a01      	subs	r2, #1
 8023bac:	4293      	cmp	r3, r2
 8023bae:	f6bf ae9c 	bge.w	80238ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023bb2:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8023bb6:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 8023bba:	f1bb 0f00 	cmp.w	fp, #0
 8023bbe:	f300 809a 	bgt.w	8023cf6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8023bc2:	9b07      	ldr	r3, [sp, #28]
 8023bc4:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8023bc8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8023bca:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8023bce:	930a      	str	r3, [sp, #40]	@ 0x28
 8023bd0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8023bd2:	2b00      	cmp	r3, #0
 8023bd4:	f340 81ec 	ble.w	8023fb0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8023bd8:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8023bdc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8023bde:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023be2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023be6:	eef0 6a62 	vmov.f32	s13, s5
 8023bea:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023bee:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023bf2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023bf6:	ee16 4a90 	vmov	r4, s13
 8023bfa:	eef0 6a43 	vmov.f32	s13, s6
 8023bfe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023c02:	ee16 6a90 	vmov	r6, s13
 8023c06:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023c0a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023c0e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023c12:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023c16:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023c1a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023c1e:	ee12 2a90 	vmov	r2, s5
 8023c22:	eef0 2a47 	vmov.f32	s5, s14
 8023c26:	fb92 f3f3 	sdiv	r3, r2, r3
 8023c2a:	ee13 2a10 	vmov	r2, s6
 8023c2e:	9327      	str	r3, [sp, #156]	@ 0x9c
 8023c30:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8023c32:	eeb0 3a67 	vmov.f32	s6, s15
 8023c36:	fb92 f3f3 	sdiv	r3, r2, r3
 8023c3a:	9328      	str	r3, [sp, #160]	@ 0xa0
 8023c3c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8023c3e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8023c40:	3b01      	subs	r3, #1
 8023c42:	9316      	str	r3, [sp, #88]	@ 0x58
 8023c44:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8023c46:	bf08      	it	eq
 8023c48:	4613      	moveq	r3, r2
 8023c4a:	9307      	str	r3, [sp, #28]
 8023c4c:	e622      	b.n	8023894 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 8023c4e:	2800      	cmp	r0, #0
 8023c50:	f43f ae92 	beq.w	8023978 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8023c54:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8023c58:	9308      	str	r3, [sp, #32]
 8023c5a:	0e1b      	lsrs	r3, r3, #24
 8023c5c:	9310      	str	r3, [sp, #64]	@ 0x40
 8023c5e:	e68b      	b.n	8023978 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8023c60:	8839      	ldrh	r1, [r7, #0]
 8023c62:	43db      	mvns	r3, r3
 8023c64:	4dd4      	ldr	r5, [pc, #848]	@ (8023fb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 8023c66:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8023c6a:	fa5f f883 	uxtb.w	r8, r3
 8023c6e:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8023c72:	10c8      	asrs	r0, r1, #3
 8023c74:	00cb      	lsls	r3, r1, #3
 8023c76:	fb0e fe08 	mul.w	lr, lr, r8
 8023c7a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8023c7e:	b2db      	uxtb	r3, r3
 8023c80:	f10e 0101 	add.w	r1, lr, #1
 8023c84:	fb00 f008 	mul.w	r0, r0, r8
 8023c88:	fb03 f308 	mul.w	r3, r3, r8
 8023c8c:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 8023c90:	ea4f 411c 	mov.w	r1, ip, lsr #16
 8023c94:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8023c98:	f100 0e01 	add.w	lr, r0, #1
 8023c9c:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 8023ca0:	b2c9      	uxtb	r1, r1
 8023ca2:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8023ca6:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 8023caa:	00d2      	lsls	r2, r2, #3
 8023cac:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023cb0:	430a      	orrs	r2, r1
 8023cb2:	1c59      	adds	r1, r3, #1
 8023cb4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8023cb8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8023cbc:	e748      	b.n	8023b50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 8023cbe:	f112 0801 	adds.w	r8, r2, #1
 8023cc2:	f53f af4b 	bmi.w	8023b5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023cc6:	4543      	cmp	r3, r8
 8023cc8:	f6ff af48 	blt.w	8023b5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023ccc:	f11c 0801 	adds.w	r8, ip, #1
 8023cd0:	f53f af44 	bmi.w	8023b5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023cd4:	45c6      	cmp	lr, r8
 8023cd6:	f6ff af41 	blt.w	8023b5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023cda:	b21b      	sxth	r3, r3
 8023cdc:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 8023ce0:	fa0f f28e 	sxth.w	r2, lr
 8023ce4:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8023ce8:	9200      	str	r2, [sp, #0]
 8023cea:	4639      	mov	r1, r7
 8023cec:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8023cee:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8023cf0:	f7ff fc88 	bl	8023604 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8023cf4:	e732      	b.n	8023b5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023cf6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8023cf8:	1421      	asrs	r1, r4, #16
 8023cfa:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8023cfc:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8023d00:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8023d04:	1433      	asrs	r3, r6, #16
 8023d06:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023d0a:	fb07 1303 	mla	r3, r7, r3, r1
 8023d0e:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8023d10:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8023d14:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8023d18:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8023d1c:	2a00      	cmp	r2, #0
 8023d1e:	f000 8108 	beq.w	8023f32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ca>
 8023d22:	684d      	ldr	r5, [r1, #4]
 8023d24:	950d      	str	r5, [sp, #52]	@ 0x34
 8023d26:	0e2d      	lsrs	r5, r5, #24
 8023d28:	9514      	str	r5, [sp, #80]	@ 0x50
 8023d2a:	b178      	cbz	r0, 8023d4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8023d2c:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 8023d30:	3f01      	subs	r7, #1
 8023d32:	00bf      	lsls	r7, r7, #2
 8023d34:	3704      	adds	r7, #4
 8023d36:	eb01 0e07 	add.w	lr, r1, r7
 8023d3a:	59c9      	ldr	r1, [r1, r7]
 8023d3c:	9109      	str	r1, [sp, #36]	@ 0x24
 8023d3e:	0e09      	lsrs	r1, r1, #24
 8023d40:	9111      	str	r1, [sp, #68]	@ 0x44
 8023d42:	f8de 1004 	ldr.w	r1, [lr, #4]
 8023d46:	910e      	str	r1, [sp, #56]	@ 0x38
 8023d48:	0e09      	lsrs	r1, r1, #24
 8023d4a:	9115      	str	r1, [sp, #84]	@ 0x54
 8023d4c:	b292      	uxth	r2, r2
 8023d4e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8023d50:	b280      	uxth	r0, r0
 8023d52:	fb02 f900 	mul.w	r9, r2, r0
 8023d56:	0112      	lsls	r2, r2, #4
 8023d58:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8023d5c:	eba2 0e09 	sub.w	lr, r2, r9
 8023d60:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 8023d64:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8023d66:	b280      	uxth	r0, r0
 8023d68:	fa1f fe8e 	uxth.w	lr, lr
 8023d6c:	1a09      	subs	r1, r1, r0
 8023d6e:	fb0e f202 	mul.w	r2, lr, r2
 8023d72:	b289      	uxth	r1, r1
 8023d74:	fb01 220c 	mla	r2, r1, ip, r2
 8023d78:	fb00 2205 	mla	r2, r0, r5, r2
 8023d7c:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8023d7e:	fb09 2205 	mla	r2, r9, r5, r2
 8023d82:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8023d86:	2a00      	cmp	r2, #0
 8023d88:	f000 80ca 	beq.w	8023f20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 8023d8c:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8023d90:	d019      	beq.n	8023dc6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 8023d92:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8023d96:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8023d9a:	fb0c fa0a 	mul.w	sl, ip, sl
 8023d9e:	fb0c fc03 	mul.w	ip, ip, r3
 8023da2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8023da6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8023daa:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8023dae:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8023db2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8023db6:	4453      	add	r3, sl
 8023db8:	0a3f      	lsrs	r7, r7, #8
 8023dba:	0a1b      	lsrs	r3, r3, #8
 8023dbc:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8023dc0:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8023dc4:	433b      	orrs	r3, r7
 8023dc6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8023dc8:	2dff      	cmp	r5, #255	@ 0xff
 8023dca:	d020      	beq.n	8023e0e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 8023dcc:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8023dce:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8023dd2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8023dd4:	436f      	muls	r7, r5
 8023dd6:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8023dd8:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023ddc:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8023de0:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8023de2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8023de6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023dea:	fb05 fa0a 	mul.w	sl, r5, sl
 8023dee:	44bc      	add	ip, r7
 8023df0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8023df4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023df8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023dfc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023e00:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023e04:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023e08:	ea4c 050a 	orr.w	r5, ip, sl
 8023e0c:	950d      	str	r5, [sp, #52]	@ 0x34
 8023e0e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8023e10:	2dff      	cmp	r5, #255	@ 0xff
 8023e12:	d020      	beq.n	8023e56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8023e14:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8023e16:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8023e1a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8023e1c:	436f      	muls	r7, r5
 8023e1e:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8023e20:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8023e24:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8023e26:	fb05 fa0c 	mul.w	sl, r5, ip
 8023e2a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023e2e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8023e32:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023e36:	44bc      	add	ip, r7
 8023e38:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8023e3c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023e40:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023e44:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023e48:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023e4c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023e50:	ea4c 050a 	orr.w	r5, ip, sl
 8023e54:	9509      	str	r5, [sp, #36]	@ 0x24
 8023e56:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8023e58:	2dff      	cmp	r5, #255	@ 0xff
 8023e5a:	d020      	beq.n	8023e9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8023e5c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8023e5e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8023e62:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8023e64:	436f      	muls	r7, r5
 8023e66:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8023e68:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023e6c:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8023e70:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8023e72:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8023e76:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023e7a:	fb05 fa0a 	mul.w	sl, r5, sl
 8023e7e:	44bc      	add	ip, r7
 8023e80:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8023e84:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023e88:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023e8c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023e90:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023e94:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023e98:	ea4c 050a 	orr.w	r5, ip, sl
 8023e9c:	950e      	str	r5, [sp, #56]	@ 0x38
 8023e9e:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8023ea0:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8023ea4:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8023ea8:	2aff      	cmp	r2, #255	@ 0xff
 8023eaa:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8023eae:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8023eb0:	fb0e f707 	mul.w	r7, lr, r7
 8023eb4:	fb01 770c 	mla	r7, r1, ip, r7
 8023eb8:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8023ebc:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8023ebe:	fb00 770c 	mla	r7, r0, ip, r7
 8023ec2:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8023ec6:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8023ec8:	fb09 770c 	mla	r7, r9, ip, r7
 8023ecc:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8023ed0:	fb0e fe0c 	mul.w	lr, lr, ip
 8023ed4:	ea4f 2717 	mov.w	r7, r7, lsr #8
 8023ed8:	fb01 e303 	mla	r3, r1, r3, lr
 8023edc:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8023ede:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8023ee2:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8023ee6:	990e      	ldr	r1, [sp, #56]	@ 0x38
 8023ee8:	fb00 330a 	mla	r3, r0, sl, r3
 8023eec:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 8023ef0:	fb09 3c0c 	mla	ip, r9, ip, r3
 8023ef4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023ef8:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8023efc:	ea47 070c 	orr.w	r7, r7, ip
 8023f00:	ea4f 2317 	mov.w	r3, r7, lsr #8
 8023f04:	d11e      	bne.n	8023f44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6dc>
 8023f06:	097a      	lsrs	r2, r7, #5
 8023f08:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 8023f0c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8023f10:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023f14:	f023 0307 	bic.w	r3, r3, #7
 8023f18:	4313      	orrs	r3, r2
 8023f1a:	431f      	orrs	r7, r3
 8023f1c:	f8a8 7000 	strh.w	r7, [r8]
 8023f20:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8023f22:	f108 0802 	add.w	r8, r8, #2
 8023f26:	f10b 3bff 	add.w	fp, fp, #4294967295
 8023f2a:	441c      	add	r4, r3
 8023f2c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8023f2e:	441e      	add	r6, r3
 8023f30:	e643      	b.n	8023bba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8023f32:	2800      	cmp	r0, #0
 8023f34:	f43f af0a 	beq.w	8023d4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8023f38:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8023f3c:	9109      	str	r1, [sp, #36]	@ 0x24
 8023f3e:	0e09      	lsrs	r1, r1, #24
 8023f40:	9111      	str	r1, [sp, #68]	@ 0x44
 8023f42:	e703      	b.n	8023d4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8023f44:	f8b8 1000 	ldrh.w	r1, [r8]
 8023f48:	43d2      	mvns	r2, r2
 8023f4a:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8023f4e:	fa5f fe82 	uxtb.w	lr, r2
 8023f52:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8023f56:	10c8      	asrs	r0, r1, #3
 8023f58:	00ca      	lsls	r2, r1, #3
 8023f5a:	fb0c fc0e 	mul.w	ip, ip, lr
 8023f5e:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8023f62:	b2d2      	uxtb	r2, r2
 8023f64:	f10c 0101 	add.w	r1, ip, #1
 8023f68:	fb00 f00e 	mul.w	r0, r0, lr
 8023f6c:	fb02 f20e 	mul.w	r2, r2, lr
 8023f70:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8023f74:	0c39      	lsrs	r1, r7, #16
 8023f76:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8023f7a:	490f      	ldr	r1, [pc, #60]	@ (8023fb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x750>)
 8023f7c:	fa5f fc8c 	uxtb.w	ip, ip
 8023f80:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 8023f84:	1c41      	adds	r1, r0, #1
 8023f86:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8023f8a:	1c51      	adds	r1, r2, #1
 8023f8c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8023f90:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8023f94:	00c0      	lsls	r0, r0, #3
 8023f96:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8023f9a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8023f9e:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8023fa2:	ea4c 0c00 	orr.w	ip, ip, r0
 8023fa6:	ea47 0c0c 	orr.w	ip, r7, ip
 8023faa:	f8a8 c000 	strh.w	ip, [r8]
 8023fae:	e7b7      	b.n	8023f20 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b8>
 8023fb0:	b01b      	add	sp, #108	@ 0x6c
 8023fb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023fb6:	bf00      	nop
 8023fb8:	fffff800 	.word	0xfffff800

08023fbc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8023fbc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8023fc0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 8023fc4:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8023fc8:	2d00      	cmp	r5, #0
 8023fca:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 8023fce:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8023fd2:	fb05 0e03 	mla	lr, r5, r3, r0
 8023fd6:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 8023fda:	f2c0 808c 	blt.w	80240f6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8023fde:	45a9      	cmp	r9, r5
 8023fe0:	f340 8089 	ble.w	80240f6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8023fe4:	2800      	cmp	r0, #0
 8023fe6:	f2c0 8084 	blt.w	80240f2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8023fea:	4580      	cmp	r8, r0
 8023fec:	f340 8081 	ble.w	80240f2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8023ff0:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8023ff4:	f01e 0f01 	tst.w	lr, #1
 8023ff8:	5d16      	ldrb	r6, [r2, r4]
 8023ffa:	bf0c      	ite	eq
 8023ffc:	f006 060f 	andeq.w	r6, r6, #15
 8024000:	1136      	asrne	r6, r6, #4
 8024002:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8024006:	b2f6      	uxtb	r6, r6
 8024008:	1c44      	adds	r4, r0, #1
 802400a:	d477      	bmi.n	80240fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 802400c:	45a0      	cmp	r8, r4
 802400e:	dd75      	ble.n	80240fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8024010:	2f00      	cmp	r7, #0
 8024012:	d075      	beq.n	8024100 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 8024014:	f10e 0a01 	add.w	sl, lr, #1
 8024018:	ea4f 045a 	mov.w	r4, sl, lsr #1
 802401c:	f01a 0f01 	tst.w	sl, #1
 8024020:	5d14      	ldrb	r4, [r2, r4]
 8024022:	bf0c      	ite	eq
 8024024:	f004 040f 	andeq.w	r4, r4, #15
 8024028:	1124      	asrne	r4, r4, #4
 802402a:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 802402e:	b2e4      	uxtb	r4, r4
 8024030:	3501      	adds	r5, #1
 8024032:	d469      	bmi.n	8024108 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8024034:	45a9      	cmp	r9, r5
 8024036:	dd67      	ble.n	8024108 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8024038:	f1bc 0f00 	cmp.w	ip, #0
 802403c:	d067      	beq.n	802410e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 802403e:	2800      	cmp	r0, #0
 8024040:	db60      	blt.n	8024104 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8024042:	4580      	cmp	r8, r0
 8024044:	dd5e      	ble.n	8024104 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 8024046:	eb03 090e 	add.w	r9, r3, lr
 802404a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802404e:	f019 0f01 	tst.w	r9, #1
 8024052:	5d55      	ldrb	r5, [r2, r5]
 8024054:	bf0c      	ite	eq
 8024056:	f005 050f 	andeq.w	r5, r5, #15
 802405a:	112d      	asrne	r5, r5, #4
 802405c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8024060:	b2ed      	uxtb	r5, r5
 8024062:	3001      	adds	r0, #1
 8024064:	d456      	bmi.n	8024114 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8024066:	4580      	cmp	r8, r0
 8024068:	dd54      	ble.n	8024114 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802406a:	2f00      	cmp	r7, #0
 802406c:	d054      	beq.n	8024118 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 802406e:	3301      	adds	r3, #1
 8024070:	449e      	add	lr, r3
 8024072:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8024076:	f01e 0f01 	tst.w	lr, #1
 802407a:	5cd0      	ldrb	r0, [r2, r3]
 802407c:	bf0c      	ite	eq
 802407e:	f000 000f 	andeq.w	r0, r0, #15
 8024082:	1100      	asrne	r0, r0, #4
 8024084:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024088:	b2c3      	uxtb	r3, r0
 802408a:	b2ba      	uxth	r2, r7
 802408c:	fa1f fc8c 	uxth.w	ip, ip
 8024090:	fb02 f00c 	mul.w	r0, r2, ip
 8024094:	0112      	lsls	r2, r2, #4
 8024096:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802409a:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 802409e:	1a12      	subs	r2, r2, r0
 80240a0:	fa1f fc8c 	uxth.w	ip, ip
 80240a4:	b292      	uxth	r2, r2
 80240a6:	eba7 070c 	sub.w	r7, r7, ip
 80240aa:	4362      	muls	r2, r4
 80240ac:	b2bf      	uxth	r7, r7
 80240ae:	fb06 2207 	mla	r2, r6, r7, r2
 80240b2:	fb0c 2505 	mla	r5, ip, r5, r2
 80240b6:	fb00 5303 	mla	r3, r0, r3, r5
 80240ba:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80240be:	b1b3      	cbz	r3, 80240ee <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80240c0:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 80240c4:	435a      	muls	r2, r3
 80240c6:	1c53      	adds	r3, r2, #1
 80240c8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80240cc:	4a2d      	ldr	r2, [pc, #180]	@ (8024184 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 80240ce:	121b      	asrs	r3, r3, #8
 80240d0:	6812      	ldr	r2, [r2, #0]
 80240d2:	2bff      	cmp	r3, #255	@ 0xff
 80240d4:	ea4f 2612 	mov.w	r6, r2, lsr #8
 80240d8:	d120      	bne.n	802411c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 80240da:	0950      	lsrs	r0, r2, #5
 80240dc:	4b2a      	ldr	r3, [pc, #168]	@ (8024188 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 80240de:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80240e2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80240e6:	4033      	ands	r3, r6
 80240e8:	4318      	orrs	r0, r3
 80240ea:	4302      	orrs	r2, r0
 80240ec:	800a      	strh	r2, [r1, #0]
 80240ee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80240f2:	2600      	movs	r6, #0
 80240f4:	e788      	b.n	8024008 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 80240f6:	2400      	movs	r4, #0
 80240f8:	4626      	mov	r6, r4
 80240fa:	e799      	b.n	8024030 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 80240fc:	2400      	movs	r4, #0
 80240fe:	e797      	b.n	8024030 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024100:	463c      	mov	r4, r7
 8024102:	e795      	b.n	8024030 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024104:	2500      	movs	r5, #0
 8024106:	e7ac      	b.n	8024062 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8024108:	2300      	movs	r3, #0
 802410a:	461d      	mov	r5, r3
 802410c:	e7bd      	b.n	802408a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802410e:	4663      	mov	r3, ip
 8024110:	4665      	mov	r5, ip
 8024112:	e7ba      	b.n	802408a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024114:	2300      	movs	r3, #0
 8024116:	e7b8      	b.n	802408a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024118:	463b      	mov	r3, r7
 802411a:	e7b6      	b.n	802408a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802411c:	880d      	ldrh	r5, [r1, #0]
 802411e:	b29f      	uxth	r7, r3
 8024120:	f3c2 4007 	ubfx	r0, r2, #16, #8
 8024124:	43db      	mvns	r3, r3
 8024126:	122c      	asrs	r4, r5, #8
 8024128:	fb10 f007 	smulbb	r0, r0, r7
 802412c:	b2db      	uxtb	r3, r3
 802412e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8024132:	b2f6      	uxtb	r6, r6
 8024134:	b2d2      	uxtb	r2, r2
 8024136:	fb04 0403 	mla	r4, r4, r3, r0
 802413a:	10e8      	asrs	r0, r5, #3
 802413c:	fb12 f207 	smulbb	r2, r2, r7
 8024140:	00ed      	lsls	r5, r5, #3
 8024142:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8024146:	b2a4      	uxth	r4, r4
 8024148:	fb16 f607 	smulbb	r6, r6, r7
 802414c:	b2ed      	uxtb	r5, r5
 802414e:	fb00 6603 	mla	r6, r0, r3, r6
 8024152:	fb05 2303 	mla	r3, r5, r3, r2
 8024156:	b2b0      	uxth	r0, r6
 8024158:	b29a      	uxth	r2, r3
 802415a:	1c63      	adds	r3, r4, #1
 802415c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024160:	1c53      	adds	r3, r2, #1
 8024162:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024166:	1c42      	adds	r2, r0, #1
 8024168:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 802416c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024170:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024174:	0940      	lsrs	r0, r0, #5
 8024176:	4323      	orrs	r3, r4
 8024178:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802417c:	4303      	orrs	r3, r0
 802417e:	800b      	strh	r3, [r1, #0]
 8024180:	e7b5      	b.n	80240ee <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 8024182:	bf00      	nop
 8024184:	24001a38 	.word	0x24001a38
 8024188:	00fff800 	.word	0x00fff800

0802418c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802418c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024190:	b097      	sub	sp, #92	@ 0x5c
 8024192:	9214      	str	r2, [sp, #80]	@ 0x50
 8024194:	9309      	str	r3, [sp, #36]	@ 0x24
 8024196:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8024198:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 802419c:	9015      	str	r0, [sp, #84]	@ 0x54
 802419e:	910d      	str	r1, [sp, #52]	@ 0x34
 80241a0:	6850      	ldr	r0, [r2, #4]
 80241a2:	930f      	str	r3, [sp, #60]	@ 0x3c
 80241a4:	6812      	ldr	r2, [r2, #0]
 80241a6:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 80241aa:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 80241ae:	fb00 1303 	mla	r3, r0, r3, r1
 80241b2:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80241b6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80241b8:	689b      	ldr	r3, [r3, #8]
 80241ba:	3301      	adds	r3, #1
 80241bc:	f023 0301 	bic.w	r3, r3, #1
 80241c0:	930a      	str	r3, [sp, #40]	@ 0x28
 80241c2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80241c4:	681f      	ldr	r7, [r3, #0]
 80241c6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80241c8:	2b00      	cmp	r3, #0
 80241ca:	dc03      	bgt.n	80241d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80241cc:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80241ce:	2b00      	cmp	r3, #0
 80241d0:	f340 8289 	ble.w	80246e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 80241d4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80241d6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80241da:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80241de:	1e48      	subs	r0, r1, #1
 80241e0:	f102 3cff 	add.w	ip, r2, #4294967295
 80241e4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80241e6:	2b00      	cmp	r3, #0
 80241e8:	f340 80c5 	ble.w	8024376 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 80241ec:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80241f0:	ea4f 4326 	mov.w	r3, r6, asr #16
 80241f4:	d406      	bmi.n	8024204 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80241f6:	4586      	cmp	lr, r0
 80241f8:	da04      	bge.n	8024204 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80241fa:	2b00      	cmp	r3, #0
 80241fc:	db02      	blt.n	8024204 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80241fe:	4563      	cmp	r3, ip
 8024200:	f2c0 80ba 	blt.w	8024378 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 8024204:	f11e 0e01 	adds.w	lr, lr, #1
 8024208:	f100 80ab 	bmi.w	8024362 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 802420c:	4571      	cmp	r1, lr
 802420e:	f2c0 80a8 	blt.w	8024362 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 8024212:	3301      	adds	r3, #1
 8024214:	f100 80a5 	bmi.w	8024362 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 8024218:	429a      	cmp	r2, r3
 802421a:	f2c0 80a2 	blt.w	8024362 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d6>
 802421e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024220:	46c8      	mov	r8, r9
 8024222:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 8024226:	930e      	str	r3, [sp, #56]	@ 0x38
 8024228:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802422a:	2b00      	cmp	r3, #0
 802422c:	f340 80c4 	ble.w	80243b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8024230:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8024232:	1430      	asrs	r0, r6, #16
 8024234:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024238:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802423c:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8024240:	1423      	asrs	r3, r4, #16
 8024242:	f100 814f 	bmi.w	80244e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8024246:	f10c 3bff 	add.w	fp, ip, #4294967295
 802424a:	455b      	cmp	r3, fp
 802424c:	f280 814a 	bge.w	80244e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8024250:	2800      	cmp	r0, #0
 8024252:	f2c0 8147 	blt.w	80244e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8024256:	f10e 3bff 	add.w	fp, lr, #4294967295
 802425a:	4558      	cmp	r0, fp
 802425c:	f280 8142 	bge.w	80244e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x358>
 8024260:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8024262:	fb00 3305 	mla	r3, r0, r5, r3
 8024266:	0858      	lsrs	r0, r3, #1
 8024268:	07dd      	lsls	r5, r3, #31
 802426a:	f817 c000 	ldrb.w	ip, [r7, r0]
 802426e:	bf54      	ite	pl
 8024270:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024274:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024278:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802427c:	fa5f fc8c 	uxtb.w	ip, ip
 8024280:	2a00      	cmp	r2, #0
 8024282:	f000 80dd 	beq.w	8024440 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 8024286:	1c58      	adds	r0, r3, #1
 8024288:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 802428c:	07c0      	lsls	r0, r0, #31
 802428e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8024292:	bf54      	ite	pl
 8024294:	f00e 0e0f 	andpl.w	lr, lr, #15
 8024298:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 802429c:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80242a0:	fa5f f08e 	uxtb.w	r0, lr
 80242a4:	9010      	str	r0, [sp, #64]	@ 0x40
 80242a6:	b1d9      	cbz	r1, 80242e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 80242a8:	4453      	add	r3, sl
 80242aa:	0858      	lsrs	r0, r3, #1
 80242ac:	07dd      	lsls	r5, r3, #31
 80242ae:	f103 0301 	add.w	r3, r3, #1
 80242b2:	5c38      	ldrb	r0, [r7, r0]
 80242b4:	bf54      	ite	pl
 80242b6:	f000 000f 	andpl.w	r0, r0, #15
 80242ba:	1100      	asrmi	r0, r0, #4
 80242bc:	07dd      	lsls	r5, r3, #31
 80242be:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80242c2:	b2c0      	uxtb	r0, r0
 80242c4:	900b      	str	r0, [sp, #44]	@ 0x2c
 80242c6:	ea4f 0053 	mov.w	r0, r3, lsr #1
 80242ca:	f817 e000 	ldrb.w	lr, [r7, r0]
 80242ce:	bf54      	ite	pl
 80242d0:	f00e 030f 	andpl.w	r3, lr, #15
 80242d4:	ea4f 132e 	movmi.w	r3, lr, asr #4
 80242d8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80242dc:	b2db      	uxtb	r3, r3
 80242de:	9311      	str	r3, [sp, #68]	@ 0x44
 80242e0:	b292      	uxth	r2, r2
 80242e2:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80242e4:	b289      	uxth	r1, r1
 80242e6:	fb02 f301 	mul.w	r3, r2, r1
 80242ea:	0112      	lsls	r2, r2, #4
 80242ec:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80242f0:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 80242f4:	1ad2      	subs	r2, r2, r3
 80242f6:	b289      	uxth	r1, r1
 80242f8:	b292      	uxth	r2, r2
 80242fa:	1a40      	subs	r0, r0, r1
 80242fc:	436a      	muls	r2, r5
 80242fe:	b280      	uxth	r0, r0
 8024300:	fb0c 2c00 	mla	ip, ip, r0, r2
 8024304:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8024306:	fb01 c102 	mla	r1, r1, r2, ip
 802430a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 802430c:	fb03 1302 	mla	r3, r3, r2, r1
 8024310:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024314:	b1db      	cbz	r3, 802434e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8024316:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8024318:	4353      	muls	r3, r2
 802431a:	1c5a      	adds	r2, r3, #1
 802431c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024320:	4ac6      	ldr	r2, [pc, #792]	@ (802463c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 8024322:	121b      	asrs	r3, r3, #8
 8024324:	6812      	ldr	r2, [r2, #0]
 8024326:	2bff      	cmp	r3, #255	@ 0xff
 8024328:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802432c:	f040 8099 	bne.w	8024462 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8024330:	0953      	lsrs	r3, r2, #5
 8024332:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8024336:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802433a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802433e:	f02c 0c07 	bic.w	ip, ip, #7
 8024342:	ea43 0c0c 	orr.w	ip, r3, ip
 8024346:	ea4c 0202 	orr.w	r2, ip, r2
 802434a:	f8a8 2000 	strh.w	r2, [r8]
 802434e:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8024350:	f108 0802 	add.w	r8, r8, #2
 8024354:	441c      	add	r4, r3
 8024356:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024358:	441e      	add	r6, r3
 802435a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802435c:	3b01      	subs	r3, #1
 802435e:	930e      	str	r3, [sp, #56]	@ 0x38
 8024360:	e762      	b.n	8024228 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8024362:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8024364:	f109 0902 	add.w	r9, r9, #2
 8024368:	441c      	add	r4, r3
 802436a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802436c:	441e      	add	r6, r3
 802436e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024370:	3b01      	subs	r3, #1
 8024372:	9309      	str	r3, [sp, #36]	@ 0x24
 8024374:	e736      	b.n	80241e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8024376:	d024      	beq.n	80243c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8024378:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802437a:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 802437c:	3b01      	subs	r3, #1
 802437e:	fb00 4003 	mla	r0, r0, r3, r4
 8024382:	1400      	asrs	r0, r0, #16
 8024384:	f53f af4b 	bmi.w	802421e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024388:	3901      	subs	r1, #1
 802438a:	4288      	cmp	r0, r1
 802438c:	f6bf af47 	bge.w	802421e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024390:	9924      	ldr	r1, [sp, #144]	@ 0x90
 8024392:	fb01 6303 	mla	r3, r1, r3, r6
 8024396:	141b      	asrs	r3, r3, #16
 8024398:	f53f af41 	bmi.w	802421e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802439c:	3a01      	subs	r2, #1
 802439e:	4293      	cmp	r3, r2
 80243a0:	f6bf af3d 	bge.w	802421e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80243a4:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 80243a8:	46c8      	mov	r8, r9
 80243aa:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 80243ae:	930e      	str	r3, [sp, #56]	@ 0x38
 80243b0:	f1bb 0f00 	cmp.w	fp, #0
 80243b4:	f300 80b7 	bgt.w	8024526 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 80243b8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80243ba:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80243be:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80243c2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80243c4:	2b00      	cmp	r3, #0
 80243c6:	f340 818e 	ble.w	80246e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55a>
 80243ca:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80243ce:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80243d0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80243d4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80243d8:	eef0 6a62 	vmov.f32	s13, s5
 80243dc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80243e0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80243e4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80243e8:	ee16 4a90 	vmov	r4, s13
 80243ec:	eef0 6a43 	vmov.f32	s13, s6
 80243f0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80243f4:	ee16 6a90 	vmov	r6, s13
 80243f8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80243fc:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024400:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024404:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024408:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802440c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024410:	ee12 2a90 	vmov	r2, s5
 8024414:	eef0 2a47 	vmov.f32	s5, s14
 8024418:	fb92 f3f3 	sdiv	r3, r2, r3
 802441c:	ee13 2a10 	vmov	r2, s6
 8024420:	9323      	str	r3, [sp, #140]	@ 0x8c
 8024422:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8024424:	eeb0 3a67 	vmov.f32	s6, s15
 8024428:	fb92 f3f3 	sdiv	r3, r2, r3
 802442c:	9324      	str	r3, [sp, #144]	@ 0x90
 802442e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8024430:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8024432:	3b01      	subs	r3, #1
 8024434:	930d      	str	r3, [sp, #52]	@ 0x34
 8024436:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8024438:	bf08      	it	eq
 802443a:	4613      	moveq	r3, r2
 802443c:	9309      	str	r3, [sp, #36]	@ 0x24
 802443e:	e6c2      	b.n	80241c6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024440:	2900      	cmp	r1, #0
 8024442:	f43f af4d 	beq.w	80242e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8024446:	eb0a 0003 	add.w	r0, sl, r3
 802444a:	0843      	lsrs	r3, r0, #1
 802444c:	07c0      	lsls	r0, r0, #31
 802444e:	5cfb      	ldrb	r3, [r7, r3]
 8024450:	bf54      	ite	pl
 8024452:	f003 030f 	andpl.w	r3, r3, #15
 8024456:	111b      	asrmi	r3, r3, #4
 8024458:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802445c:	b2db      	uxtb	r3, r3
 802445e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8024460:	e73e      	b.n	80242e0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8024462:	f8b8 e000 	ldrh.w	lr, [r8]
 8024466:	fa1f fb83 	uxth.w	fp, r3
 802446a:	f3c2 4107 	ubfx	r1, r2, #16, #8
 802446e:	43db      	mvns	r3, r3
 8024470:	ea4f 202e 	mov.w	r0, lr, asr #8
 8024474:	fb11 f10b 	smulbb	r1, r1, fp
 8024478:	b2db      	uxtb	r3, r3
 802447a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 802447e:	fa5f fc8c 	uxtb.w	ip, ip
 8024482:	b2d2      	uxtb	r2, r2
 8024484:	fb00 1003 	mla	r0, r0, r3, r1
 8024488:	ea4f 01ee 	mov.w	r1, lr, asr #3
 802448c:	fb1c fc0b 	smulbb	ip, ip, fp
 8024490:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8024494:	b280      	uxth	r0, r0
 8024496:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 802449a:	fb12 fb0b 	smulbb	fp, r2, fp
 802449e:	fa5f fe8e 	uxtb.w	lr, lr
 80244a2:	fb01 cc03 	mla	ip, r1, r3, ip
 80244a6:	fb0e bb03 	mla	fp, lr, r3, fp
 80244aa:	1c43      	adds	r3, r0, #1
 80244ac:	fa1f fc8c 	uxth.w	ip, ip
 80244b0:	fa1f fb8b 	uxth.w	fp, fp
 80244b4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80244b8:	f10c 0101 	add.w	r1, ip, #1
 80244bc:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 80244c0:	f10b 0001 	add.w	r0, fp, #1
 80244c4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80244c8:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80244cc:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80244d0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80244d4:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 80244d8:	4318      	orrs	r0, r3
 80244da:	ea40 000c 	orr.w	r0, r0, ip
 80244de:	f8a8 0000 	strh.w	r0, [r8]
 80244e2:	e734      	b.n	802434e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80244e4:	f113 0b01 	adds.w	fp, r3, #1
 80244e8:	f53f af31 	bmi.w	802434e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80244ec:	45dc      	cmp	ip, fp
 80244ee:	f6ff af2e 	blt.w	802434e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80244f2:	f110 0b01 	adds.w	fp, r0, #1
 80244f6:	f53f af2a 	bmi.w	802434e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 80244fa:	45de      	cmp	lr, fp
 80244fc:	f6ff af27 	blt.w	802434e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8024500:	9302      	str	r3, [sp, #8]
 8024502:	fa0f f38e 	sxth.w	r3, lr
 8024506:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8024508:	9301      	str	r3, [sp, #4]
 802450a:	fa0f f38c 	sxth.w	r3, ip
 802450e:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8024512:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8024516:	9300      	str	r3, [sp, #0]
 8024518:	463a      	mov	r2, r7
 802451a:	4653      	mov	r3, sl
 802451c:	4641      	mov	r1, r8
 802451e:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8024520:	f7ff fd4c 	bl	8023fbc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8024524:	e713      	b.n	802434e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8024526:	1422      	asrs	r2, r4, #16
 8024528:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 802452a:	1433      	asrs	r3, r6, #16
 802452c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8024530:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024534:	fb05 2303 	mla	r3, r5, r3, r2
 8024538:	085a      	lsrs	r2, r3, #1
 802453a:	07dd      	lsls	r5, r3, #31
 802453c:	5cba      	ldrb	r2, [r7, r2]
 802453e:	bf54      	ite	pl
 8024540:	f002 020f 	andpl.w	r2, r2, #15
 8024544:	1112      	asrmi	r2, r2, #4
 8024546:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802454a:	b2d2      	uxtb	r2, r2
 802454c:	2900      	cmp	r1, #0
 802454e:	d077      	beq.n	8024640 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 8024550:	f103 0e01 	add.w	lr, r3, #1
 8024554:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8024558:	f01e 0f01 	tst.w	lr, #1
 802455c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024560:	bf0c      	ite	eq
 8024562:	f00c 0c0f 	andeq.w	ip, ip, #15
 8024566:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 802456a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802456e:	fa5f f58c 	uxtb.w	r5, ip
 8024572:	9512      	str	r5, [sp, #72]	@ 0x48
 8024574:	b308      	cbz	r0, 80245ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 8024576:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8024578:	442b      	add	r3, r5
 802457a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802457e:	07dd      	lsls	r5, r3, #31
 8024580:	f103 0301 	add.w	r3, r3, #1
 8024584:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024588:	bf54      	ite	pl
 802458a:	f00c 0c0f 	andpl.w	ip, ip, #15
 802458e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024592:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024596:	fa5f f58c 	uxtb.w	r5, ip
 802459a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802459e:	950c      	str	r5, [sp, #48]	@ 0x30
 80245a0:	07dd      	lsls	r5, r3, #31
 80245a2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 80245a6:	bf54      	ite	pl
 80245a8:	f00c 0c0f 	andpl.w	ip, ip, #15
 80245ac:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80245b0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80245b4:	fa5f f38c 	uxtb.w	r3, ip
 80245b8:	9313      	str	r3, [sp, #76]	@ 0x4c
 80245ba:	b289      	uxth	r1, r1
 80245bc:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80245be:	b280      	uxth	r0, r0
 80245c0:	fb01 f300 	mul.w	r3, r1, r0
 80245c4:	0109      	lsls	r1, r1, #4
 80245c6:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 80245ca:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 80245ce:	1ac9      	subs	r1, r1, r3
 80245d0:	b280      	uxth	r0, r0
 80245d2:	b289      	uxth	r1, r1
 80245d4:	ebac 0c00 	sub.w	ip, ip, r0
 80245d8:	4369      	muls	r1, r5
 80245da:	fa1f fc8c 	uxth.w	ip, ip
 80245de:	fb02 120c 	mla	r2, r2, ip, r1
 80245e2:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80245e4:	fb00 2001 	mla	r0, r0, r1, r2
 80245e8:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80245ea:	fb03 0302 	mla	r3, r3, r2, r0
 80245ee:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80245f2:	b1d3      	cbz	r3, 802462a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 80245f4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80245f6:	4353      	muls	r3, r2
 80245f8:	1c5a      	adds	r2, r3, #1
 80245fa:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80245fe:	4a0f      	ldr	r2, [pc, #60]	@ (802463c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 8024600:	121b      	asrs	r3, r3, #8
 8024602:	6812      	ldr	r2, [r2, #0]
 8024604:	2bff      	cmp	r3, #255	@ 0xff
 8024606:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802460a:	d12d      	bne.n	8024668 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4dc>
 802460c:	0953      	lsrs	r3, r2, #5
 802460e:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8024612:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024616:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 802461a:	f02c 0c07 	bic.w	ip, ip, #7
 802461e:	ea43 0c0c 	orr.w	ip, r3, ip
 8024622:	ea4c 0202 	orr.w	r2, ip, r2
 8024626:	f8a8 2000 	strh.w	r2, [r8]
 802462a:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 802462c:	f108 0802 	add.w	r8, r8, #2
 8024630:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024634:	441c      	add	r4, r3
 8024636:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024638:	441e      	add	r6, r3
 802463a:	e6b9      	b.n	80243b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 802463c:	24001a38 	.word	0x24001a38
 8024640:	2800      	cmp	r0, #0
 8024642:	d0ba      	beq.n	80245ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 8024644:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8024646:	442b      	add	r3, r5
 8024648:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802464c:	07db      	lsls	r3, r3, #31
 802464e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024652:	bf54      	ite	pl
 8024654:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024658:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802465c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024660:	fa5f f38c 	uxtb.w	r3, ip
 8024664:	930c      	str	r3, [sp, #48]	@ 0x30
 8024666:	e7a8      	b.n	80245ba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42e>
 8024668:	f8b8 e000 	ldrh.w	lr, [r8]
 802466c:	fa1f fa83 	uxth.w	sl, r3
 8024670:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8024674:	43db      	mvns	r3, r3
 8024676:	ea4f 202e 	mov.w	r0, lr, asr #8
 802467a:	fb11 f10a 	smulbb	r1, r1, sl
 802467e:	b2db      	uxtb	r3, r3
 8024680:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8024684:	b2d2      	uxtb	r2, r2
 8024686:	fa5f fc8c 	uxtb.w	ip, ip
 802468a:	fb00 1003 	mla	r0, r0, r3, r1
 802468e:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8024692:	fb12 f20a 	smulbb	r2, r2, sl
 8024696:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802469a:	b280      	uxth	r0, r0
 802469c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80246a0:	fb1c fc0a 	smulbb	ip, ip, sl
 80246a4:	fa5f fe8e 	uxtb.w	lr, lr
 80246a8:	fb0e 2203 	mla	r2, lr, r3, r2
 80246ac:	fb01 cc03 	mla	ip, r1, r3, ip
 80246b0:	1c43      	adds	r3, r0, #1
 80246b2:	b292      	uxth	r2, r2
 80246b4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80246b8:	1c51      	adds	r1, r2, #1
 80246ba:	fa1f fc8c 	uxth.w	ip, ip
 80246be:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 80246c2:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 80246c6:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80246ca:	4308      	orrs	r0, r1
 80246cc:	f10c 0101 	add.w	r1, ip, #1
 80246d0:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80246d4:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80246d8:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 80246dc:	ea40 000c 	orr.w	r0, r0, ip
 80246e0:	f8a8 0000 	strh.w	r0, [r8]
 80246e4:	e7a1      	b.n	802462a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49e>
 80246e6:	b017      	add	sp, #92	@ 0x5c
 80246e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080246ec <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 80246ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80246f0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 80246f4:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80246f8:	2d00      	cmp	r5, #0
 80246fa:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 80246fe:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8024702:	fb05 0e03 	mla	lr, r5, r3, r0
 8024706:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 802470a:	f2c0 80b0 	blt.w	802486e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 802470e:	45a9      	cmp	r9, r5
 8024710:	f340 80ad 	ble.w	802486e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8024714:	2800      	cmp	r0, #0
 8024716:	f2c0 80a8 	blt.w	802486a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 802471a:	4580      	cmp	r8, r0
 802471c:	f340 80a5 	ble.w	802486a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8024720:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8024724:	f01e 0f01 	tst.w	lr, #1
 8024728:	5d16      	ldrb	r6, [r2, r4]
 802472a:	bf0c      	ite	eq
 802472c:	f006 060f 	andeq.w	r6, r6, #15
 8024730:	1136      	asrne	r6, r6, #4
 8024732:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8024736:	b2f6      	uxtb	r6, r6
 8024738:	1c44      	adds	r4, r0, #1
 802473a:	f100 809b 	bmi.w	8024874 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 802473e:	45a0      	cmp	r8, r4
 8024740:	f340 8098 	ble.w	8024874 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8024744:	2f00      	cmp	r7, #0
 8024746:	f000 8097 	beq.w	8024878 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 802474a:	f10e 0a01 	add.w	sl, lr, #1
 802474e:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8024752:	f01a 0f01 	tst.w	sl, #1
 8024756:	5d14      	ldrb	r4, [r2, r4]
 8024758:	bf0c      	ite	eq
 802475a:	f004 040f 	andeq.w	r4, r4, #15
 802475e:	1124      	asrne	r4, r4, #4
 8024760:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8024764:	b2e4      	uxtb	r4, r4
 8024766:	3501      	adds	r5, #1
 8024768:	f100 808a 	bmi.w	8024880 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 802476c:	45a9      	cmp	r9, r5
 802476e:	f340 8087 	ble.w	8024880 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8024772:	f1bc 0f00 	cmp.w	ip, #0
 8024776:	f000 8086 	beq.w	8024886 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 802477a:	2800      	cmp	r0, #0
 802477c:	db7e      	blt.n	802487c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 802477e:	4580      	cmp	r8, r0
 8024780:	dd7c      	ble.n	802487c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8024782:	eb03 090e 	add.w	r9, r3, lr
 8024786:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802478a:	f019 0f01 	tst.w	r9, #1
 802478e:	5d55      	ldrb	r5, [r2, r5]
 8024790:	bf0c      	ite	eq
 8024792:	f005 050f 	andeq.w	r5, r5, #15
 8024796:	112d      	asrne	r5, r5, #4
 8024798:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 802479c:	b2ed      	uxtb	r5, r5
 802479e:	3001      	adds	r0, #1
 80247a0:	d474      	bmi.n	802488c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 80247a2:	4580      	cmp	r8, r0
 80247a4:	dd72      	ble.n	802488c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 80247a6:	2f00      	cmp	r7, #0
 80247a8:	d072      	beq.n	8024890 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 80247aa:	3301      	adds	r3, #1
 80247ac:	449e      	add	lr, r3
 80247ae:	ea4f 035e 	mov.w	r3, lr, lsr #1
 80247b2:	f01e 0f01 	tst.w	lr, #1
 80247b6:	5cd0      	ldrb	r0, [r2, r3]
 80247b8:	bf0c      	ite	eq
 80247ba:	f000 000f 	andeq.w	r0, r0, #15
 80247be:	1100      	asrne	r0, r0, #4
 80247c0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80247c4:	b2c3      	uxtb	r3, r0
 80247c6:	b2ba      	uxth	r2, r7
 80247c8:	fa1f fc8c 	uxth.w	ip, ip
 80247cc:	fb02 f00c 	mul.w	r0, r2, ip
 80247d0:	0112      	lsls	r2, r2, #4
 80247d2:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80247d6:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 80247da:	1a12      	subs	r2, r2, r0
 80247dc:	fa1f fc8c 	uxth.w	ip, ip
 80247e0:	b292      	uxth	r2, r2
 80247e2:	eba7 070c 	sub.w	r7, r7, ip
 80247e6:	4362      	muls	r2, r4
 80247e8:	b2bf      	uxth	r7, r7
 80247ea:	fb06 2207 	mla	r2, r6, r7, r2
 80247ee:	fb0c 2505 	mla	r5, ip, r5, r2
 80247f2:	fb00 5303 	mla	r3, r0, r3, r5
 80247f6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80247fa:	b3a3      	cbz	r3, 8024866 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 80247fc:	4a25      	ldr	r2, [pc, #148]	@ (8024894 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 80247fe:	880e      	ldrh	r6, [r1, #0]
 8024800:	6815      	ldr	r5, [r2, #0]
 8024802:	b29a      	uxth	r2, r3
 8024804:	1234      	asrs	r4, r6, #8
 8024806:	43db      	mvns	r3, r3
 8024808:	f3c5 4007 	ubfx	r0, r5, #16, #8
 802480c:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8024810:	b2db      	uxtb	r3, r3
 8024812:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8024816:	fb10 f002 	smulbb	r0, r0, r2
 802481a:	b2ed      	uxtb	r5, r5
 802481c:	fb17 f702 	smulbb	r7, r7, r2
 8024820:	fb04 0403 	mla	r4, r4, r3, r0
 8024824:	10f0      	asrs	r0, r6, #3
 8024826:	fb15 f202 	smulbb	r2, r5, r2
 802482a:	00f6      	lsls	r6, r6, #3
 802482c:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8024830:	b2a4      	uxth	r4, r4
 8024832:	b2f6      	uxtb	r6, r6
 8024834:	fb00 7003 	mla	r0, r0, r3, r7
 8024838:	fb06 2303 	mla	r3, r6, r3, r2
 802483c:	b280      	uxth	r0, r0
 802483e:	b29a      	uxth	r2, r3
 8024840:	1c63      	adds	r3, r4, #1
 8024842:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024846:	1c53      	adds	r3, r2, #1
 8024848:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802484c:	1c42      	adds	r2, r0, #1
 802484e:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8024852:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024856:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802485a:	0940      	lsrs	r0, r0, #5
 802485c:	4323      	orrs	r3, r4
 802485e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8024862:	4303      	orrs	r3, r0
 8024864:	800b      	strh	r3, [r1, #0]
 8024866:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802486a:	2600      	movs	r6, #0
 802486c:	e764      	b.n	8024738 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 802486e:	2400      	movs	r4, #0
 8024870:	4626      	mov	r6, r4
 8024872:	e778      	b.n	8024766 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024874:	2400      	movs	r4, #0
 8024876:	e776      	b.n	8024766 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024878:	463c      	mov	r4, r7
 802487a:	e774      	b.n	8024766 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 802487c:	2500      	movs	r5, #0
 802487e:	e78e      	b.n	802479e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8024880:	2300      	movs	r3, #0
 8024882:	461d      	mov	r5, r3
 8024884:	e79f      	b.n	80247c6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024886:	4663      	mov	r3, ip
 8024888:	4665      	mov	r5, ip
 802488a:	e79c      	b.n	80247c6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802488c:	2300      	movs	r3, #0
 802488e:	e79a      	b.n	80247c6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024890:	463b      	mov	r3, r7
 8024892:	e798      	b.n	80247c6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024894:	24001a38 	.word	0x24001a38

08024898 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024898:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802489c:	b093      	sub	sp, #76	@ 0x4c
 802489e:	461d      	mov	r5, r3
 80248a0:	920c      	str	r2, [sp, #48]	@ 0x30
 80248a2:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 80248a4:	9011      	str	r0, [sp, #68]	@ 0x44
 80248a6:	9107      	str	r1, [sp, #28]
 80248a8:	6850      	ldr	r0, [r2, #4]
 80248aa:	6812      	ldr	r2, [r2, #0]
 80248ac:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 80248b0:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 80248b4:	fb00 1303 	mla	r3, r0, r3, r1
 80248b8:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80248bc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80248be:	689b      	ldr	r3, [r3, #8]
 80248c0:	3301      	adds	r3, #1
 80248c2:	f023 0301 	bic.w	r3, r3, #1
 80248c6:	9306      	str	r3, [sp, #24]
 80248c8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80248ca:	681f      	ldr	r7, [r3, #0]
 80248cc:	9b07      	ldr	r3, [sp, #28]
 80248ce:	2b00      	cmp	r3, #0
 80248d0:	dc03      	bgt.n	80248da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 80248d2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80248d4:	2b00      	cmp	r3, #0
 80248d6:	f340 8267 	ble.w	8024da8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 80248da:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 80248dc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80248e0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80248e4:	1e48      	subs	r0, r1, #1
 80248e6:	f102 3cff 	add.w	ip, r2, #4294967295
 80248ea:	2d00      	cmp	r5, #0
 80248ec:	f340 80b7 	ble.w	8024a5e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 80248f0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80248f4:	ea4f 4326 	mov.w	r3, r6, asr #16
 80248f8:	d406      	bmi.n	8024908 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80248fa:	4586      	cmp	lr, r0
 80248fc:	da04      	bge.n	8024908 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80248fe:	2b00      	cmp	r3, #0
 8024900:	db02      	blt.n	8024908 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024902:	4563      	cmp	r3, ip
 8024904:	f2c0 80ac 	blt.w	8024a60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8024908:	f11e 0e01 	adds.w	lr, lr, #1
 802490c:	f100 809f 	bmi.w	8024a4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8024910:	4571      	cmp	r1, lr
 8024912:	f2c0 809c 	blt.w	8024a4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8024916:	3301      	adds	r3, #1
 8024918:	f100 8099 	bmi.w	8024a4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 802491c:	429a      	cmp	r2, r3
 802491e:	f2c0 8096 	blt.w	8024a4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b6>
 8024922:	46c8      	mov	r8, r9
 8024924:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8024928:	9509      	str	r5, [sp, #36]	@ 0x24
 802492a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802492c:	2b00      	cmp	r3, #0
 802492e:	f340 80b5 	ble.w	8024a9c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8024932:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8024936:	1430      	asrs	r0, r6, #16
 8024938:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802493c:	9308      	str	r3, [sp, #32]
 802493e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024940:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8024944:	1423      	asrs	r3, r4, #16
 8024946:	f100 813f 	bmi.w	8024bc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802494a:	f10c 3bff 	add.w	fp, ip, #4294967295
 802494e:	455b      	cmp	r3, fp
 8024950:	f280 813a 	bge.w	8024bc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024954:	2800      	cmp	r0, #0
 8024956:	f2c0 8137 	blt.w	8024bc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802495a:	f10e 3bff 	add.w	fp, lr, #4294967295
 802495e:	4558      	cmp	r0, fp
 8024960:	f280 8132 	bge.w	8024bc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024964:	9a06      	ldr	r2, [sp, #24]
 8024966:	fb00 3302 	mla	r3, r0, r2, r3
 802496a:	0858      	lsrs	r0, r3, #1
 802496c:	07da      	lsls	r2, r3, #31
 802496e:	9a08      	ldr	r2, [sp, #32]
 8024970:	f817 c000 	ldrb.w	ip, [r7, r0]
 8024974:	bf54      	ite	pl
 8024976:	f00c 0c0f 	andpl.w	ip, ip, #15
 802497a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802497e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024982:	fa5f fc8c 	uxtb.w	ip, ip
 8024986:	2a00      	cmp	r2, #0
 8024988:	f000 80cc 	beq.w	8024b24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802498c:	1c58      	adds	r0, r3, #1
 802498e:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8024992:	07c0      	lsls	r0, r0, #31
 8024994:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8024998:	bf54      	ite	pl
 802499a:	f00e 0e0f 	andpl.w	lr, lr, #15
 802499e:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80249a2:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80249a6:	fa5f fe8e 	uxtb.w	lr, lr
 80249aa:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 80249ae:	b1b9      	cbz	r1, 80249e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 80249b0:	4453      	add	r3, sl
 80249b2:	0858      	lsrs	r0, r3, #1
 80249b4:	07da      	lsls	r2, r3, #31
 80249b6:	5c38      	ldrb	r0, [r7, r0]
 80249b8:	bf54      	ite	pl
 80249ba:	f000 000f 	andpl.w	r0, r0, #15
 80249be:	1100      	asrmi	r0, r0, #4
 80249c0:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80249c4:	b2c0      	uxtb	r0, r0
 80249c6:	900a      	str	r0, [sp, #40]	@ 0x28
 80249c8:	1c58      	adds	r0, r3, #1
 80249ca:	0843      	lsrs	r3, r0, #1
 80249cc:	07c2      	lsls	r2, r0, #31
 80249ce:	5cfb      	ldrb	r3, [r7, r3]
 80249d0:	bf54      	ite	pl
 80249d2:	f003 030f 	andpl.w	r3, r3, #15
 80249d6:	111b      	asrmi	r3, r3, #4
 80249d8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80249dc:	b2db      	uxtb	r3, r3
 80249de:	930e      	str	r3, [sp, #56]	@ 0x38
 80249e0:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80249e4:	b289      	uxth	r1, r1
 80249e6:	fb02 f301 	mul.w	r3, r2, r1
 80249ea:	0112      	lsls	r2, r2, #4
 80249ec:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80249f0:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 80249f4:	1ad2      	subs	r2, r2, r3
 80249f6:	b289      	uxth	r1, r1
 80249f8:	b292      	uxth	r2, r2
 80249fa:	1a40      	subs	r0, r0, r1
 80249fc:	fa1f fe80 	uxth.w	lr, r0
 8024a00:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8024a02:	4342      	muls	r2, r0
 8024a04:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8024a08:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8024a0a:	fb01 c102 	mla	r1, r1, r2, ip
 8024a0e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8024a10:	fb03 1302 	mla	r3, r3, r2, r1
 8024a14:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024a18:	2bff      	cmp	r3, #255	@ 0xff
 8024a1a:	f040 8094 	bne.w	8024b46 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8024a1e:	4bbf      	ldr	r3, [pc, #764]	@ (8024d1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8024a20:	681a      	ldr	r2, [r3, #0]
 8024a22:	4bbf      	ldr	r3, [pc, #764]	@ (8024d20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8024a24:	0951      	lsrs	r1, r2, #5
 8024a26:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8024a2a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024a2e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8024a32:	430b      	orrs	r3, r1
 8024a34:	4313      	orrs	r3, r2
 8024a36:	f8a8 3000 	strh.w	r3, [r8]
 8024a3a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8024a3c:	f108 0802 	add.w	r8, r8, #2
 8024a40:	441c      	add	r4, r3
 8024a42:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8024a44:	441e      	add	r6, r3
 8024a46:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024a48:	3b01      	subs	r3, #1
 8024a4a:	9309      	str	r3, [sp, #36]	@ 0x24
 8024a4c:	e76d      	b.n	802492a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024a4e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8024a50:	3d01      	subs	r5, #1
 8024a52:	f109 0902 	add.w	r9, r9, #2
 8024a56:	441c      	add	r4, r3
 8024a58:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8024a5a:	441e      	add	r6, r3
 8024a5c:	e745      	b.n	80248ea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8024a5e:	d021      	beq.n	8024aa4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 8024a60:	1e6b      	subs	r3, r5, #1
 8024a62:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8024a64:	fb00 4003 	mla	r0, r0, r3, r4
 8024a68:	1400      	asrs	r0, r0, #16
 8024a6a:	f53f af5a 	bmi.w	8024922 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024a6e:	3901      	subs	r1, #1
 8024a70:	4288      	cmp	r0, r1
 8024a72:	f6bf af56 	bge.w	8024922 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024a76:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8024a78:	fb01 6303 	mla	r3, r1, r3, r6
 8024a7c:	141b      	asrs	r3, r3, #16
 8024a7e:	f53f af50 	bmi.w	8024922 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024a82:	3a01      	subs	r2, #1
 8024a84:	4293      	cmp	r3, r2
 8024a86:	f6bf af4c 	bge.w	8024922 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024a8a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8024a8e:	46a8      	mov	r8, r5
 8024a90:	46ce      	mov	lr, r9
 8024a92:	9308      	str	r3, [sp, #32]
 8024a94:	f1b8 0f00 	cmp.w	r8, #0
 8024a98:	f300 80b6 	bgt.w	8024c08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8024a9c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8024aa0:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8024aa4:	9b07      	ldr	r3, [sp, #28]
 8024aa6:	2b00      	cmp	r3, #0
 8024aa8:	f340 817e 	ble.w	8024da8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8024aac:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8024ab0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8024ab2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024ab6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024aba:	eef0 6a62 	vmov.f32	s13, s5
 8024abe:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024ac2:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024ac6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024aca:	ee16 4a90 	vmov	r4, s13
 8024ace:	eef0 6a43 	vmov.f32	s13, s6
 8024ad2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024ad6:	ee16 6a90 	vmov	r6, s13
 8024ada:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024ade:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024ae2:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024ae6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8024aea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024aee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024af2:	ee12 2a90 	vmov	r2, s5
 8024af6:	eef0 2a47 	vmov.f32	s5, s14
 8024afa:	fb92 f3f3 	sdiv	r3, r2, r3
 8024afe:	ee13 2a10 	vmov	r2, s6
 8024b02:	931f      	str	r3, [sp, #124]	@ 0x7c
 8024b04:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8024b06:	eeb0 3a67 	vmov.f32	s6, s15
 8024b0a:	fb92 f3f3 	sdiv	r3, r2, r3
 8024b0e:	9320      	str	r3, [sp, #128]	@ 0x80
 8024b10:	9b07      	ldr	r3, [sp, #28]
 8024b12:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8024b14:	3b01      	subs	r3, #1
 8024b16:	9307      	str	r3, [sp, #28]
 8024b18:	bf08      	it	eq
 8024b1a:	4615      	moveq	r5, r2
 8024b1c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8024b1e:	bf18      	it	ne
 8024b20:	461d      	movne	r5, r3
 8024b22:	e6d3      	b.n	80248cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8024b24:	2900      	cmp	r1, #0
 8024b26:	f43f af5b 	beq.w	80249e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 8024b2a:	eb0a 0003 	add.w	r0, sl, r3
 8024b2e:	0843      	lsrs	r3, r0, #1
 8024b30:	07c0      	lsls	r0, r0, #31
 8024b32:	5cfb      	ldrb	r3, [r7, r3]
 8024b34:	bf54      	ite	pl
 8024b36:	f003 030f 	andpl.w	r3, r3, #15
 8024b3a:	111b      	asrmi	r3, r3, #4
 8024b3c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024b40:	b2db      	uxtb	r3, r3
 8024b42:	930a      	str	r3, [sp, #40]	@ 0x28
 8024b44:	e74c      	b.n	80249e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x148>
 8024b46:	2b00      	cmp	r3, #0
 8024b48:	f43f af77 	beq.w	8024a3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8024b4c:	4a73      	ldr	r2, [pc, #460]	@ (8024d1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8024b4e:	fa1f fe83 	uxth.w	lr, r3
 8024b52:	f8b8 c000 	ldrh.w	ip, [r8]
 8024b56:	43db      	mvns	r3, r3
 8024b58:	6810      	ldr	r0, [r2, #0]
 8024b5a:	ea4f 212c 	mov.w	r1, ip, asr #8
 8024b5e:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8024b62:	b2db      	uxtb	r3, r3
 8024b64:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8024b68:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8024b6c:	fb12 f20e 	smulbb	r2, r2, lr
 8024b70:	b2c0      	uxtb	r0, r0
 8024b72:	fb1b fb0e 	smulbb	fp, fp, lr
 8024b76:	fb01 2103 	mla	r1, r1, r3, r2
 8024b7a:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8024b7e:	fb10 fe0e 	smulbb	lr, r0, lr
 8024b82:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8024b86:	b289      	uxth	r1, r1
 8024b88:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8024b8c:	fa5f fc8c 	uxtb.w	ip, ip
 8024b90:	fb02 b203 	mla	r2, r2, r3, fp
 8024b94:	1c48      	adds	r0, r1, #1
 8024b96:	fb0c e303 	mla	r3, ip, r3, lr
 8024b9a:	b292      	uxth	r2, r2
 8024b9c:	b29b      	uxth	r3, r3
 8024b9e:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 8024ba2:	f102 0b01 	add.w	fp, r2, #1
 8024ba6:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 8024baa:	1c59      	adds	r1, r3, #1
 8024bac:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8024bb0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8024bb4:	0952      	lsrs	r2, r2, #5
 8024bb6:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8024bba:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8024bbe:	4301      	orrs	r1, r0
 8024bc0:	4311      	orrs	r1, r2
 8024bc2:	f8a8 1000 	strh.w	r1, [r8]
 8024bc6:	e738      	b.n	8024a3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8024bc8:	f113 0b01 	adds.w	fp, r3, #1
 8024bcc:	f53f af35 	bmi.w	8024a3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8024bd0:	45dc      	cmp	ip, fp
 8024bd2:	f6ff af32 	blt.w	8024a3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8024bd6:	f110 0b01 	adds.w	fp, r0, #1
 8024bda:	f53f af2e 	bmi.w	8024a3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8024bde:	45de      	cmp	lr, fp
 8024be0:	f6ff af2b 	blt.w	8024a3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8024be4:	9302      	str	r3, [sp, #8]
 8024be6:	fa0f f38e 	sxth.w	r3, lr
 8024bea:	9a08      	ldr	r2, [sp, #32]
 8024bec:	9301      	str	r3, [sp, #4]
 8024bee:	fa0f f38c 	sxth.w	r3, ip
 8024bf2:	9105      	str	r1, [sp, #20]
 8024bf4:	4641      	mov	r1, r8
 8024bf6:	9300      	str	r3, [sp, #0]
 8024bf8:	4653      	mov	r3, sl
 8024bfa:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8024bfe:	463a      	mov	r2, r7
 8024c00:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8024c02:	f7ff fd73 	bl	80246ec <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8024c06:	e718      	b.n	8024a3a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a2>
 8024c08:	1422      	asrs	r2, r4, #16
 8024c0a:	9906      	ldr	r1, [sp, #24]
 8024c0c:	1433      	asrs	r3, r6, #16
 8024c0e:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8024c12:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8024c16:	fb01 2303 	mla	r3, r1, r3, r2
 8024c1a:	085a      	lsrs	r2, r3, #1
 8024c1c:	07d9      	lsls	r1, r3, #31
 8024c1e:	5cba      	ldrb	r2, [r7, r2]
 8024c20:	bf54      	ite	pl
 8024c22:	f002 020f 	andpl.w	r2, r2, #15
 8024c26:	1112      	asrmi	r2, r2, #4
 8024c28:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8024c2c:	b2d2      	uxtb	r2, r2
 8024c2e:	2800      	cmp	r0, #0
 8024c30:	d063      	beq.n	8024cfa <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 8024c32:	f103 0a01 	add.w	sl, r3, #1
 8024c36:	ea4f 015a 	mov.w	r1, sl, lsr #1
 8024c3a:	f01a 0f01 	tst.w	sl, #1
 8024c3e:	5c79      	ldrb	r1, [r7, r1]
 8024c40:	bf0c      	ite	eq
 8024c42:	f001 010f 	andeq.w	r1, r1, #15
 8024c46:	1109      	asrne	r1, r1, #4
 8024c48:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8024c4c:	b2c9      	uxtb	r1, r1
 8024c4e:	910f      	str	r1, [sp, #60]	@ 0x3c
 8024c50:	f1bc 0f00 	cmp.w	ip, #0
 8024c54:	d01a      	beq.n	8024c8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8024c56:	9908      	ldr	r1, [sp, #32]
 8024c58:	440b      	add	r3, r1
 8024c5a:	0859      	lsrs	r1, r3, #1
 8024c5c:	f013 0f01 	tst.w	r3, #1
 8024c60:	f103 0301 	add.w	r3, r3, #1
 8024c64:	5c79      	ldrb	r1, [r7, r1]
 8024c66:	bf0c      	ite	eq
 8024c68:	f001 010f 	andeq.w	r1, r1, #15
 8024c6c:	1109      	asrne	r1, r1, #4
 8024c6e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8024c72:	b2c9      	uxtb	r1, r1
 8024c74:	910b      	str	r1, [sp, #44]	@ 0x2c
 8024c76:	0859      	lsrs	r1, r3, #1
 8024c78:	07db      	lsls	r3, r3, #31
 8024c7a:	5c79      	ldrb	r1, [r7, r1]
 8024c7c:	bf54      	ite	pl
 8024c7e:	f001 010f 	andpl.w	r1, r1, #15
 8024c82:	1109      	asrmi	r1, r1, #4
 8024c84:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8024c88:	b2c9      	uxtb	r1, r1
 8024c8a:	9110      	str	r1, [sp, #64]	@ 0x40
 8024c8c:	b280      	uxth	r0, r0
 8024c8e:	fa1f fc8c 	uxth.w	ip, ip
 8024c92:	fb00 f30c 	mul.w	r3, r0, ip
 8024c96:	0100      	lsls	r0, r0, #4
 8024c98:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8024c9c:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 8024ca0:	1ac0      	subs	r0, r0, r3
 8024ca2:	fa1f fc8c 	uxth.w	ip, ip
 8024ca6:	b280      	uxth	r0, r0
 8024ca8:	eba1 010c 	sub.w	r1, r1, ip
 8024cac:	fa1f fa81 	uxth.w	sl, r1
 8024cb0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8024cb2:	4348      	muls	r0, r1
 8024cb4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8024cb6:	fb02 020a 	mla	r2, r2, sl, r0
 8024cba:	fb0c 2c01 	mla	ip, ip, r1, r2
 8024cbe:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8024cc0:	fb03 c302 	mla	r3, r3, r2, ip
 8024cc4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024cc8:	2bff      	cmp	r3, #255	@ 0xff
 8024cca:	d12b      	bne.n	8024d24 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8024ccc:	4b13      	ldr	r3, [pc, #76]	@ (8024d1c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8024cce:	681a      	ldr	r2, [r3, #0]
 8024cd0:	4b13      	ldr	r3, [pc, #76]	@ (8024d20 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8024cd2:	0951      	lsrs	r1, r2, #5
 8024cd4:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8024cd8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024cdc:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8024ce0:	430b      	orrs	r3, r1
 8024ce2:	4313      	orrs	r3, r2
 8024ce4:	f8ae 3000 	strh.w	r3, [lr]
 8024ce8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8024cea:	f10e 0e02 	add.w	lr, lr, #2
 8024cee:	f108 38ff 	add.w	r8, r8, #4294967295
 8024cf2:	441c      	add	r4, r3
 8024cf4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8024cf6:	441e      	add	r6, r3
 8024cf8:	e6cc      	b.n	8024a94 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8024cfa:	f1bc 0f00 	cmp.w	ip, #0
 8024cfe:	d0c5      	beq.n	8024c8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8024d00:	9908      	ldr	r1, [sp, #32]
 8024d02:	440b      	add	r3, r1
 8024d04:	0859      	lsrs	r1, r3, #1
 8024d06:	07db      	lsls	r3, r3, #31
 8024d08:	5c79      	ldrb	r1, [r7, r1]
 8024d0a:	bf54      	ite	pl
 8024d0c:	f001 010f 	andpl.w	r1, r1, #15
 8024d10:	1109      	asrmi	r1, r1, #4
 8024d12:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8024d16:	b2c9      	uxtb	r1, r1
 8024d18:	910b      	str	r1, [sp, #44]	@ 0x2c
 8024d1a:	e7b7      	b.n	8024c8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8024d1c:	24001a38 	.word	0x24001a38
 8024d20:	fffff800 	.word	0xfffff800
 8024d24:	2b00      	cmp	r3, #0
 8024d26:	d0df      	beq.n	8024ce8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 8024d28:	4a21      	ldr	r2, [pc, #132]	@ (8024db0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 8024d2a:	fa1f fa83 	uxth.w	sl, r3
 8024d2e:	f8be c000 	ldrh.w	ip, [lr]
 8024d32:	43db      	mvns	r3, r3
 8024d34:	6810      	ldr	r0, [r2, #0]
 8024d36:	ea4f 212c 	mov.w	r1, ip, asr #8
 8024d3a:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8024d3e:	b2db      	uxtb	r3, r3
 8024d40:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8024d44:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8024d48:	fb12 f20a 	smulbb	r2, r2, sl
 8024d4c:	b2c0      	uxtb	r0, r0
 8024d4e:	fb1b fb0a 	smulbb	fp, fp, sl
 8024d52:	fb01 2103 	mla	r1, r1, r3, r2
 8024d56:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8024d5a:	fb10 f00a 	smulbb	r0, r0, sl
 8024d5e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8024d62:	b289      	uxth	r1, r1
 8024d64:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8024d68:	fa5f fc8c 	uxtb.w	ip, ip
 8024d6c:	fb02 b203 	mla	r2, r2, r3, fp
 8024d70:	fb0c 0003 	mla	r0, ip, r3, r0
 8024d74:	1c4b      	adds	r3, r1, #1
 8024d76:	b292      	uxth	r2, r2
 8024d78:	b280      	uxth	r0, r0
 8024d7a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8024d7e:	f100 0b01 	add.w	fp, r0, #1
 8024d82:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8024d86:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8024d8a:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8024d8e:	ea4b 0101 	orr.w	r1, fp, r1
 8024d92:	f102 0b01 	add.w	fp, r2, #1
 8024d96:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8024d9a:	0952      	lsrs	r2, r2, #5
 8024d9c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8024da0:	4311      	orrs	r1, r2
 8024da2:	f8ae 1000 	strh.w	r1, [lr]
 8024da6:	e79f      	b.n	8024ce8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x450>
 8024da8:	b013      	add	sp, #76	@ 0x4c
 8024daa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024dae:	bf00      	nop
 8024db0:	24001a38 	.word	0x24001a38

08024db4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 8024db4:	b570      	push	{r4, r5, r6, lr}
 8024db6:	1208      	asrs	r0, r1, #8
 8024db8:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 8024dbc:	b29e      	uxth	r6, r3
 8024dbe:	1213      	asrs	r3, r2, #8
 8024dc0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8024dc4:	10cc      	asrs	r4, r1, #3
 8024dc6:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8024dca:	00c9      	lsls	r1, r1, #3
 8024dcc:	fb10 f006 	smulbb	r0, r0, r6
 8024dd0:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 8024dd4:	fb13 f305 	smulbb	r3, r3, r5
 8024dd8:	fb14 f406 	smulbb	r4, r4, r6
 8024ddc:	4418      	add	r0, r3
 8024dde:	10d3      	asrs	r3, r2, #3
 8024de0:	00d2      	lsls	r2, r2, #3
 8024de2:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8024de6:	b280      	uxth	r0, r0
 8024de8:	b2d2      	uxtb	r2, r2
 8024dea:	fb13 f305 	smulbb	r3, r3, r5
 8024dee:	fb12 f205 	smulbb	r2, r2, r5
 8024df2:	441c      	add	r4, r3
 8024df4:	b2cb      	uxtb	r3, r1
 8024df6:	fb13 f306 	smulbb	r3, r3, r6
 8024dfa:	b2a4      	uxth	r4, r4
 8024dfc:	4413      	add	r3, r2
 8024dfe:	1c42      	adds	r2, r0, #1
 8024e00:	b29b      	uxth	r3, r3
 8024e02:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024e06:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 8024e0a:	1c58      	adds	r0, r3, #1
 8024e0c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8024e10:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8024e14:	4310      	orrs	r0, r2
 8024e16:	1c62      	adds	r2, r4, #1
 8024e18:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8024e1c:	0964      	lsrs	r4, r4, #5
 8024e1e:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8024e22:	4320      	orrs	r0, r4
 8024e24:	bd70      	pop	{r4, r5, r6, pc}
	...

08024e28 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 8024e28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024e2c:	b08f      	sub	sp, #60	@ 0x3c
 8024e2e:	461c      	mov	r4, r3
 8024e30:	460d      	mov	r5, r1
 8024e32:	4616      	mov	r6, r2
 8024e34:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 8024e38:	9004      	str	r0, [sp, #16]
 8024e3a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8024e3c:	2f00      	cmp	r7, #0
 8024e3e:	f000 80f6 	beq.w	802502e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8024e42:	6820      	ldr	r0, [r4, #0]
 8024e44:	aa0a      	add	r2, sp, #40	@ 0x28
 8024e46:	6861      	ldr	r1, [r4, #4]
 8024e48:	f04f 0802 	mov.w	r8, #2
 8024e4c:	3604      	adds	r6, #4
 8024e4e:	c203      	stmia	r2!, {r0, r1}
 8024e50:	6818      	ldr	r0, [r3, #0]
 8024e52:	aa0c      	add	r2, sp, #48	@ 0x30
 8024e54:	6859      	ldr	r1, [r3, #4]
 8024e56:	c203      	stmia	r2!, {r0, r1}
 8024e58:	a80a      	add	r0, sp, #40	@ 0x28
 8024e5a:	f7ef fb35 	bl	80144c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024e5e:	4621      	mov	r1, r4
 8024e60:	a80c      	add	r0, sp, #48	@ 0x30
 8024e62:	f7ef fb59 	bl	8014518 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8024e66:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8024e6a:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 8024e6e:	f002 0301 	and.w	r3, r2, #1
 8024e72:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8024e76:	9306      	str	r3, [sp, #24]
 8024e78:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8024e7c:	f003 0101 	and.w	r1, r3, #1
 8024e80:	9105      	str	r1, [sp, #20]
 8024e82:	9805      	ldr	r0, [sp, #20]
 8024e84:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8024e88:	4403      	add	r3, r0
 8024e8a:	fb01 2303 	mla	r3, r1, r3, r2
 8024e8e:	fb93 f3f8 	sdiv	r3, r3, r8
 8024e92:	441d      	add	r5, r3
 8024e94:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8024e98:	441a      	add	r2, r3
 8024e9a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8024e9e:	4419      	add	r1, r3
 8024ea0:	4b64      	ldr	r3, [pc, #400]	@ (8025034 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8024ea2:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8024ea6:	6818      	ldr	r0, [r3, #0]
 8024ea8:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8024eac:	6803      	ldr	r3, [r0, #0]
 8024eae:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8024eb0:	4798      	blx	r3
 8024eb2:	4a61      	ldr	r2, [pc, #388]	@ (8025038 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 8024eb4:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 8024eb8:	2fff      	cmp	r7, #255	@ 0xff
 8024eba:	8813      	ldrh	r3, [r2, #0]
 8024ebc:	4611      	mov	r1, r2
 8024ebe:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 8024ec2:	fb03 fb0b 	mul.w	fp, r3, fp
 8024ec6:	fb03 a404 	mla	r4, r3, r4, sl
 8024eca:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8024ece:	d06b      	beq.n	8024fa8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x180>
 8024ed0:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 8024ed4:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 8024ed8:	9303      	str	r3, [sp, #12]
 8024eda:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8024ede:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8024ee2:	9b07      	ldr	r3, [sp, #28]
 8024ee4:	42a3      	cmp	r3, r4
 8024ee6:	f240 809d 	bls.w	8025024 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8024eea:	9b06      	ldr	r3, [sp, #24]
 8024eec:	2b00      	cmp	r3, #0
 8024eee:	d039      	beq.n	8024f64 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13c>
 8024ef0:	782b      	ldrb	r3, [r5, #0]
 8024ef2:	f105 0801 	add.w	r8, r5, #1
 8024ef6:	f109 3bff 	add.w	fp, r9, #4294967295
 8024efa:	8822      	ldrh	r2, [r4, #0]
 8024efc:	f003 030f 	and.w	r3, r3, #15
 8024f00:	9804      	ldr	r0, [sp, #16]
 8024f02:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8024f06:	9b03      	ldr	r3, [sp, #12]
 8024f08:	9300      	str	r3, [sp, #0]
 8024f0a:	463b      	mov	r3, r7
 8024f0c:	f7ff ff52 	bl	8024db4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8024f10:	f824 0b02 	strh.w	r0, [r4], #2
 8024f14:	f1bb 0f01 	cmp.w	fp, #1
 8024f18:	46a2      	mov	sl, r4
 8024f1a:	f104 0404 	add.w	r4, r4, #4
 8024f1e:	dd24      	ble.n	8024f6a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x142>
 8024f20:	f898 3000 	ldrb.w	r3, [r8]
 8024f24:	f1ab 0b02 	sub.w	fp, fp, #2
 8024f28:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 8024f2c:	091b      	lsrs	r3, r3, #4
 8024f2e:	9804      	ldr	r0, [sp, #16]
 8024f30:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8024f34:	9b03      	ldr	r3, [sp, #12]
 8024f36:	9300      	str	r3, [sp, #0]
 8024f38:	463b      	mov	r3, r7
 8024f3a:	f7ff ff3b 	bl	8024db4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8024f3e:	f824 0c04 	strh.w	r0, [r4, #-4]
 8024f42:	f818 3b01 	ldrb.w	r3, [r8], #1
 8024f46:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8024f4a:	f003 030f 	and.w	r3, r3, #15
 8024f4e:	9804      	ldr	r0, [sp, #16]
 8024f50:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8024f54:	9b03      	ldr	r3, [sp, #12]
 8024f56:	9300      	str	r3, [sp, #0]
 8024f58:	463b      	mov	r3, r7
 8024f5a:	f7ff ff2b 	bl	8024db4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8024f5e:	f824 0c02 	strh.w	r0, [r4, #-2]
 8024f62:	e7d7      	b.n	8024f14 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 8024f64:	46a8      	mov	r8, r5
 8024f66:	46cb      	mov	fp, r9
 8024f68:	e7d4      	b.n	8024f14 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xec>
 8024f6a:	d10e      	bne.n	8024f8a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x162>
 8024f6c:	f898 3000 	ldrb.w	r3, [r8]
 8024f70:	f8ba 2000 	ldrh.w	r2, [sl]
 8024f74:	091b      	lsrs	r3, r3, #4
 8024f76:	9804      	ldr	r0, [sp, #16]
 8024f78:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8024f7c:	9b03      	ldr	r3, [sp, #12]
 8024f7e:	9300      	str	r3, [sp, #0]
 8024f80:	463b      	mov	r3, r7
 8024f82:	f7ff ff17 	bl	8024db4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8024f86:	f82a 0b02 	strh.w	r0, [sl], #2
 8024f8a:	9b08      	ldr	r3, [sp, #32]
 8024f8c:	9a05      	ldr	r2, [sp, #20]
 8024f8e:	881c      	ldrh	r4, [r3, #0]
 8024f90:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8024f94:	eba4 0409 	sub.w	r4, r4, r9
 8024f98:	4413      	add	r3, r2
 8024f9a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8024f9c:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 8024fa0:	fb93 f3f2 	sdiv	r3, r3, r2
 8024fa4:	441d      	add	r5, r3
 8024fa6:	e79c      	b.n	8024ee2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xba>
 8024fa8:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 8024fac:	45a3      	cmp	fp, r4
 8024fae:	d939      	bls.n	8025024 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8024fb0:	9b06      	ldr	r3, [sp, #24]
 8024fb2:	b1fb      	cbz	r3, 8024ff4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 8024fb4:	782b      	ldrb	r3, [r5, #0]
 8024fb6:	1c6a      	adds	r2, r5, #1
 8024fb8:	f109 30ff 	add.w	r0, r9, #4294967295
 8024fbc:	3402      	adds	r4, #2
 8024fbe:	f003 030f 	and.w	r3, r3, #15
 8024fc2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8024fc6:	f824 3c02 	strh.w	r3, [r4, #-2]
 8024fca:	2801      	cmp	r0, #1
 8024fcc:	4623      	mov	r3, r4
 8024fce:	f104 0404 	add.w	r4, r4, #4
 8024fd2:	dd12      	ble.n	8024ffa <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 8024fd4:	7813      	ldrb	r3, [r2, #0]
 8024fd6:	3802      	subs	r0, #2
 8024fd8:	091b      	lsrs	r3, r3, #4
 8024fda:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8024fde:	f824 3c04 	strh.w	r3, [r4, #-4]
 8024fe2:	f812 3b01 	ldrb.w	r3, [r2], #1
 8024fe6:	f003 030f 	and.w	r3, r3, #15
 8024fea:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8024fee:	f824 3c02 	strh.w	r3, [r4, #-2]
 8024ff2:	e7ea      	b.n	8024fca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8024ff4:	462a      	mov	r2, r5
 8024ff6:	4648      	mov	r0, r9
 8024ff8:	e7e7      	b.n	8024fca <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8024ffa:	d106      	bne.n	802500a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8024ffc:	7812      	ldrb	r2, [r2, #0]
 8024ffe:	3302      	adds	r3, #2
 8025000:	0912      	lsrs	r2, r2, #4
 8025002:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8025006:	f823 2c02 	strh.w	r2, [r3, #-2]
 802500a:	880c      	ldrh	r4, [r1, #0]
 802500c:	9a05      	ldr	r2, [sp, #20]
 802500e:	eba4 0409 	sub.w	r4, r4, r9
 8025012:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8025016:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802501a:	4413      	add	r3, r2
 802501c:	fb93 f3f8 	sdiv	r3, r3, r8
 8025020:	441d      	add	r5, r3
 8025022:	e7c3      	b.n	8024fac <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x184>
 8025024:	4b03      	ldr	r3, [pc, #12]	@ (8025034 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 8025026:	6818      	ldr	r0, [r3, #0]
 8025028:	6803      	ldr	r3, [r0, #0]
 802502a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802502c:	4798      	blx	r3
 802502e:	b00f      	add	sp, #60	@ 0x3c
 8025030:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025034:	24001a30 	.word	0x24001a30
 8025038:	24001a2a 	.word	0x24001a2a

0802503c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 802503c:	b5f0      	push	{r4, r5, r6, r7, lr}
 802503e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8025042:	0a0f      	lsrs	r7, r1, #8
 8025044:	2dff      	cmp	r5, #255	@ 0xff
 8025046:	d10c      	bne.n	8025062 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8025048:	2bff      	cmp	r3, #255	@ 0xff
 802504a:	d10a      	bne.n	8025062 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 802504c:	0948      	lsrs	r0, r1, #5
 802504e:	4b25      	ldr	r3, [pc, #148]	@ (80250e4 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8025050:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8025054:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8025058:	403b      	ands	r3, r7
 802505a:	4318      	orrs	r0, r3
 802505c:	4308      	orrs	r0, r1
 802505e:	b280      	uxth	r0, r0
 8025060:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025062:	fb15 f503 	smulbb	r5, r5, r3
 8025066:	1214      	asrs	r4, r2, #8
 8025068:	10d6      	asrs	r6, r2, #3
 802506a:	b2ab      	uxth	r3, r5
 802506c:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8025070:	00d0      	lsls	r0, r2, #3
 8025072:	f3c1 4207 	ubfx	r2, r1, #16, #8
 8025076:	1c5d      	adds	r5, r3, #1
 8025078:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 802507c:	b2c0      	uxtb	r0, r0
 802507e:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8025082:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8025086:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 802508a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802508e:	fa1f fc85 	uxth.w	ip, r5
 8025092:	43ed      	mvns	r5, r5
 8025094:	fb12 f20c 	smulbb	r2, r2, ip
 8025098:	b2eb      	uxtb	r3, r5
 802509a:	b2fd      	uxtb	r5, r7
 802509c:	fb04 2403 	mla	r4, r4, r3, r2
 80250a0:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 80250a4:	fb15 f50c 	smulbb	r5, r5, ip
 80250a8:	b2c8      	uxtb	r0, r1
 80250aa:	b2a4      	uxth	r4, r4
 80250ac:	fb10 f00c 	smulbb	r0, r0, ip
 80250b0:	fb06 5503 	mla	r5, r6, r3, r5
 80250b4:	fb02 0003 	mla	r0, r2, r3, r0
 80250b8:	b2ad      	uxth	r5, r5
 80250ba:	b283      	uxth	r3, r0
 80250bc:	1c60      	adds	r0, r4, #1
 80250be:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 80250c2:	1c58      	adds	r0, r3, #1
 80250c4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80250c8:	1c6b      	adds	r3, r5, #1
 80250ca:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 80250ce:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80250d2:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80250d6:	096d      	lsrs	r5, r5, #5
 80250d8:	4320      	orrs	r0, r4
 80250da:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80250de:	4328      	orrs	r0, r5
 80250e0:	e7be      	b.n	8025060 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x24>
 80250e2:	bf00      	nop
 80250e4:	00fff800 	.word	0x00fff800

080250e8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 80250e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80250ec:	461c      	mov	r4, r3
 80250ee:	b08d      	sub	sp, #52	@ 0x34
 80250f0:	460d      	mov	r5, r1
 80250f2:	4616      	mov	r6, r2
 80250f4:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80250f6:	4680      	mov	r8, r0
 80250f8:	6861      	ldr	r1, [r4, #4]
 80250fa:	aa08      	add	r2, sp, #32
 80250fc:	6820      	ldr	r0, [r4, #0]
 80250fe:	f04f 0a02 	mov.w	sl, #2
 8025102:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 8025106:	3604      	adds	r6, #4
 8025108:	c203      	stmia	r2!, {r0, r1}
 802510a:	6818      	ldr	r0, [r3, #0]
 802510c:	aa0a      	add	r2, sp, #40	@ 0x28
 802510e:	6859      	ldr	r1, [r3, #4]
 8025110:	c203      	stmia	r2!, {r0, r1}
 8025112:	a808      	add	r0, sp, #32
 8025114:	f7ef f9d8 	bl	80144c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025118:	4621      	mov	r1, r4
 802511a:	a80a      	add	r0, sp, #40	@ 0x28
 802511c:	f7ef f9fc 	bl	8014518 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025120:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8025124:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 8025128:	f002 0301 	and.w	r3, r2, #1
 802512c:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 8025130:	9303      	str	r3, [sp, #12]
 8025132:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8025136:	f003 0101 	and.w	r1, r3, #1
 802513a:	9102      	str	r1, [sp, #8]
 802513c:	9802      	ldr	r0, [sp, #8]
 802513e:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8025142:	4403      	add	r3, r0
 8025144:	fb01 2303 	mla	r3, r1, r3, r2
 8025148:	fb93 f3fa 	sdiv	r3, r3, sl
 802514c:	441d      	add	r5, r3
 802514e:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8025152:	441a      	add	r2, r3
 8025154:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 8025158:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 802515c:	4419      	add	r1, r3
 802515e:	4a3e      	ldr	r2, [pc, #248]	@ (8025258 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8025160:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 8025164:	6810      	ldr	r0, [r2, #0]
 8025166:	9205      	str	r2, [sp, #20]
 8025168:	6803      	ldr	r3, [r0, #0]
 802516a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 802516c:	4798      	blx	r3
 802516e:	4b3b      	ldr	r3, [pc, #236]	@ (802525c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8025170:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 8025174:	8819      	ldrh	r1, [r3, #0]
 8025176:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 802517a:	434f      	muls	r7, r1
 802517c:	fb01 c404 	mla	r4, r1, r4, ip
 8025180:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025184:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 8025188:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 802518c:	9204      	str	r2, [sp, #16]
 802518e:	9b04      	ldr	r3, [sp, #16]
 8025190:	429c      	cmp	r4, r3
 8025192:	d258      	bcs.n	8025246 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 8025194:	9b03      	ldr	r3, [sp, #12]
 8025196:	2b00      	cmp	r3, #0
 8025198:	d034      	beq.n	8025204 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 802519a:	782b      	ldrb	r3, [r5, #0]
 802519c:	1c6f      	adds	r7, r5, #1
 802519e:	f003 030f 	and.w	r3, r3, #15
 80251a2:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80251a6:	0e0b      	lsrs	r3, r1, #24
 80251a8:	d006      	beq.n	80251b8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 80251aa:	8822      	ldrh	r2, [r4, #0]
 80251ac:	4640      	mov	r0, r8
 80251ae:	9300      	str	r3, [sp, #0]
 80251b0:	464b      	mov	r3, r9
 80251b2:	f7ff ff43 	bl	802503c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80251b6:	8020      	strh	r0, [r4, #0]
 80251b8:	3402      	adds	r4, #2
 80251ba:	f10b 3aff 	add.w	sl, fp, #4294967295
 80251be:	f1ba 0f01 	cmp.w	sl, #1
 80251c2:	dd22      	ble.n	802520a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 80251c4:	783b      	ldrb	r3, [r7, #0]
 80251c6:	091b      	lsrs	r3, r3, #4
 80251c8:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80251cc:	0e0b      	lsrs	r3, r1, #24
 80251ce:	d006      	beq.n	80251de <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 80251d0:	8822      	ldrh	r2, [r4, #0]
 80251d2:	4640      	mov	r0, r8
 80251d4:	9300      	str	r3, [sp, #0]
 80251d6:	464b      	mov	r3, r9
 80251d8:	f7ff ff30 	bl	802503c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80251dc:	8020      	strh	r0, [r4, #0]
 80251de:	f817 3b01 	ldrb.w	r3, [r7], #1
 80251e2:	f003 030f 	and.w	r3, r3, #15
 80251e6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80251ea:	0e0b      	lsrs	r3, r1, #24
 80251ec:	d006      	beq.n	80251fc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 80251ee:	8862      	ldrh	r2, [r4, #2]
 80251f0:	4640      	mov	r0, r8
 80251f2:	9300      	str	r3, [sp, #0]
 80251f4:	464b      	mov	r3, r9
 80251f6:	f7ff ff21 	bl	802503c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80251fa:	8060      	strh	r0, [r4, #2]
 80251fc:	3404      	adds	r4, #4
 80251fe:	f1aa 0a02 	sub.w	sl, sl, #2
 8025202:	e7dc      	b.n	80251be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8025204:	462f      	mov	r7, r5
 8025206:	46da      	mov	sl, fp
 8025208:	e7d9      	b.n	80251be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802520a:	d10d      	bne.n	8025228 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 802520c:	783b      	ldrb	r3, [r7, #0]
 802520e:	091b      	lsrs	r3, r3, #4
 8025210:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025214:	0e0b      	lsrs	r3, r1, #24
 8025216:	d006      	beq.n	8025226 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 8025218:	8822      	ldrh	r2, [r4, #0]
 802521a:	4640      	mov	r0, r8
 802521c:	9300      	str	r3, [sp, #0]
 802521e:	464b      	mov	r3, r9
 8025220:	f7ff ff0c 	bl	802503c <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025224:	8020      	strh	r0, [r4, #0]
 8025226:	3402      	adds	r4, #2
 8025228:	9b06      	ldr	r3, [sp, #24]
 802522a:	9a02      	ldr	r2, [sp, #8]
 802522c:	881b      	ldrh	r3, [r3, #0]
 802522e:	eba3 030b 	sub.w	r3, r3, fp
 8025232:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8025236:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 802523a:	4413      	add	r3, r2
 802523c:	9a07      	ldr	r2, [sp, #28]
 802523e:	fb93 f3f2 	sdiv	r3, r3, r2
 8025242:	441d      	add	r5, r3
 8025244:	e7a3      	b.n	802518e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 8025246:	9b05      	ldr	r3, [sp, #20]
 8025248:	6818      	ldr	r0, [r3, #0]
 802524a:	6803      	ldr	r3, [r0, #0]
 802524c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 802524e:	4798      	blx	r3
 8025250:	b00d      	add	sp, #52	@ 0x34
 8025252:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025256:	bf00      	nop
 8025258:	24001a30 	.word	0x24001a30
 802525c:	24001a2a 	.word	0x24001a2a

08025260 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8025260:	b570      	push	{r4, r5, r6, lr}
 8025262:	1214      	asrs	r4, r2, #8
 8025264:	788d      	ldrb	r5, [r1, #2]
 8025266:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802526a:	10d0      	asrs	r0, r2, #3
 802526c:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8025270:	00d2      	lsls	r2, r2, #3
 8025272:	fb15 f503 	smulbb	r5, r5, r3
 8025276:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802527a:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 802527e:	b2d2      	uxtb	r2, r2
 8025280:	fb04 5506 	mla	r5, r4, r6, r5
 8025284:	784c      	ldrb	r4, [r1, #1]
 8025286:	7809      	ldrb	r1, [r1, #0]
 8025288:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 802528c:	fb14 f403 	smulbb	r4, r4, r3
 8025290:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8025294:	fb11 f303 	smulbb	r3, r1, r3
 8025298:	b2ad      	uxth	r5, r5
 802529a:	fb00 4406 	mla	r4, r0, r6, r4
 802529e:	fb02 3306 	mla	r3, r2, r6, r3
 80252a2:	1c68      	adds	r0, r5, #1
 80252a4:	b2a4      	uxth	r4, r4
 80252a6:	b29b      	uxth	r3, r3
 80252a8:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 80252ac:	1c62      	adds	r2, r4, #1
 80252ae:	1c58      	adds	r0, r3, #1
 80252b0:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80252b4:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80252b8:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80252bc:	0964      	lsrs	r4, r4, #5
 80252be:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80252c2:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80252c6:	4328      	orrs	r0, r5
 80252c8:	4320      	orrs	r0, r4
 80252ca:	bd70      	pop	{r4, r5, r6, pc}

080252cc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80252cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80252d0:	b08f      	sub	sp, #60	@ 0x3c
 80252d2:	461c      	mov	r4, r3
 80252d4:	4682      	mov	sl, r0
 80252d6:	460e      	mov	r6, r1
 80252d8:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 80252dc:	4615      	mov	r5, r2
 80252de:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80252e0:	2f00      	cmp	r7, #0
 80252e2:	f000 8141 	beq.w	8025568 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29c>
 80252e6:	6820      	ldr	r0, [r4, #0]
 80252e8:	aa0a      	add	r2, sp, #40	@ 0x28
 80252ea:	6861      	ldr	r1, [r4, #4]
 80252ec:	f04f 0802 	mov.w	r8, #2
 80252f0:	3504      	adds	r5, #4
 80252f2:	c203      	stmia	r2!, {r0, r1}
 80252f4:	6818      	ldr	r0, [r3, #0]
 80252f6:	aa0c      	add	r2, sp, #48	@ 0x30
 80252f8:	6859      	ldr	r1, [r3, #4]
 80252fa:	c203      	stmia	r2!, {r0, r1}
 80252fc:	a80a      	add	r0, sp, #40	@ 0x28
 80252fe:	f7ef f8e3 	bl	80144c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025302:	4621      	mov	r1, r4
 8025304:	a80c      	add	r0, sp, #48	@ 0x30
 8025306:	f7ef f907 	bl	8014518 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802530a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 802530e:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 8025312:	f002 0301 	and.w	r3, r2, #1
 8025316:	9306      	str	r3, [sp, #24]
 8025318:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802531c:	f003 0101 	and.w	r1, r3, #1
 8025320:	9105      	str	r1, [sp, #20]
 8025322:	9805      	ldr	r0, [sp, #20]
 8025324:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8025328:	4403      	add	r3, r0
 802532a:	fb01 2303 	mla	r3, r1, r3, r2
 802532e:	fb93 f3f8 	sdiv	r3, r3, r8
 8025332:	441e      	add	r6, r3
 8025334:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 8025338:	441a      	add	r2, r3
 802533a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 802533e:	4419      	add	r1, r3
 8025340:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 8025344:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8025348:	9303      	str	r3, [sp, #12]
 802534a:	4b89      	ldr	r3, [pc, #548]	@ (8025570 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802534c:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8025350:	6818      	ldr	r0, [r3, #0]
 8025352:	6803      	ldr	r3, [r0, #0]
 8025354:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8025356:	4798      	blx	r3
 8025358:	4a86      	ldr	r2, [pc, #536]	@ (8025574 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 802535a:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 802535e:	2fff      	cmp	r7, #255	@ 0xff
 8025360:	8813      	ldrh	r3, [r2, #0]
 8025362:	4694      	mov	ip, r2
 8025364:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 8025368:	fb03 9404 	mla	r4, r3, r4, r9
 802536c:	fb03 f30b 	mul.w	r3, r3, fp
 8025370:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025374:	d071      	beq.n	802545a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18e>
 8025376:	43f9      	mvns	r1, r7
 8025378:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802537c:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 8025380:	b2c9      	uxtb	r1, r1
 8025382:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8025386:	9104      	str	r1, [sp, #16]
 8025388:	9b07      	ldr	r3, [sp, #28]
 802538a:	42a3      	cmp	r3, r4
 802538c:	f240 80e7 	bls.w	802555e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 8025390:	9b06      	ldr	r3, [sp, #24]
 8025392:	2b00      	cmp	r3, #0
 8025394:	d03d      	beq.n	8025412 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x146>
 8025396:	7831      	ldrb	r1, [r6, #0]
 8025398:	4650      	mov	r0, sl
 802539a:	9b04      	ldr	r3, [sp, #16]
 802539c:	f106 0801 	add.w	r8, r6, #1
 80253a0:	f001 010f 	and.w	r1, r1, #15
 80253a4:	8822      	ldrh	r2, [r4, #0]
 80253a6:	9300      	str	r3, [sp, #0]
 80253a8:	463b      	mov	r3, r7
 80253aa:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80253ae:	4429      	add	r1, r5
 80253b0:	f7ff ff56 	bl	8025260 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80253b4:	9b03      	ldr	r3, [sp, #12]
 80253b6:	f824 0b02 	strh.w	r0, [r4], #2
 80253ba:	f103 3bff 	add.w	fp, r3, #4294967295
 80253be:	f1bb 0f01 	cmp.w	fp, #1
 80253c2:	46a1      	mov	r9, r4
 80253c4:	f104 0404 	add.w	r4, r4, #4
 80253c8:	dd27      	ble.n	802541a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14e>
 80253ca:	f898 1000 	ldrb.w	r1, [r8]
 80253ce:	4650      	mov	r0, sl
 80253d0:	9b04      	ldr	r3, [sp, #16]
 80253d2:	f1ab 0b02 	sub.w	fp, fp, #2
 80253d6:	0909      	lsrs	r1, r1, #4
 80253d8:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80253dc:	9300      	str	r3, [sp, #0]
 80253de:	463b      	mov	r3, r7
 80253e0:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80253e4:	4429      	add	r1, r5
 80253e6:	f7ff ff3b 	bl	8025260 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80253ea:	f824 0c04 	strh.w	r0, [r4, #-4]
 80253ee:	f818 1b01 	ldrb.w	r1, [r8], #1
 80253f2:	4650      	mov	r0, sl
 80253f4:	9b04      	ldr	r3, [sp, #16]
 80253f6:	f001 010f 	and.w	r1, r1, #15
 80253fa:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 80253fe:	9300      	str	r3, [sp, #0]
 8025400:	463b      	mov	r3, r7
 8025402:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025406:	4429      	add	r1, r5
 8025408:	f7ff ff2a 	bl	8025260 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802540c:	f824 0c02 	strh.w	r0, [r4, #-2]
 8025410:	e7d5      	b.n	80253be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 8025412:	46b0      	mov	r8, r6
 8025414:	f8dd b00c 	ldr.w	fp, [sp, #12]
 8025418:	e7d1      	b.n	80253be <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf2>
 802541a:	d10f      	bne.n	802543c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x170>
 802541c:	f898 1000 	ldrb.w	r1, [r8]
 8025420:	4650      	mov	r0, sl
 8025422:	9b04      	ldr	r3, [sp, #16]
 8025424:	0909      	lsrs	r1, r1, #4
 8025426:	f8b9 2000 	ldrh.w	r2, [r9]
 802542a:	9300      	str	r3, [sp, #0]
 802542c:	463b      	mov	r3, r7
 802542e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025432:	4429      	add	r1, r5
 8025434:	f7ff ff14 	bl	8025260 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 8025438:	f829 0b02 	strh.w	r0, [r9], #2
 802543c:	9b08      	ldr	r3, [sp, #32]
 802543e:	9a05      	ldr	r2, [sp, #20]
 8025440:	881c      	ldrh	r4, [r3, #0]
 8025442:	9b03      	ldr	r3, [sp, #12]
 8025444:	1ae4      	subs	r4, r4, r3
 8025446:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802544a:	4413      	add	r3, r2
 802544c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802544e:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8025452:	fb93 f3f2 	sdiv	r3, r3, r2
 8025456:	441e      	add	r6, r3
 8025458:	e796      	b.n	8025388 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbc>
 802545a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802545e:	4f46      	ldr	r7, [pc, #280]	@ (8025578 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8025460:	42a3      	cmp	r3, r4
 8025462:	d97c      	bls.n	802555e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x292>
 8025464:	9a06      	ldr	r2, [sp, #24]
 8025466:	2a00      	cmp	r2, #0
 8025468:	d054      	beq.n	8025514 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x248>
 802546a:	7830      	ldrb	r0, [r6, #0]
 802546c:	1c71      	adds	r1, r6, #1
 802546e:	f000 000f 	and.w	r0, r0, #15
 8025472:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025476:	eb05 0e00 	add.w	lr, r5, r0
 802547a:	5c28      	ldrb	r0, [r5, r0]
 802547c:	f89e 2002 	ldrb.w	r2, [lr, #2]
 8025480:	f89e e001 	ldrb.w	lr, [lr, #1]
 8025484:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8025488:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802548c:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8025490:	ea42 020e 	orr.w	r2, r2, lr
 8025494:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8025498:	f824 2b02 	strh.w	r2, [r4], #2
 802549c:	9a03      	ldr	r2, [sp, #12]
 802549e:	f102 3eff 	add.w	lr, r2, #4294967295
 80254a2:	f1be 0f01 	cmp.w	lr, #1
 80254a6:	4620      	mov	r0, r4
 80254a8:	f104 0404 	add.w	r4, r4, #4
 80254ac:	dd36      	ble.n	802551c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x250>
 80254ae:	7808      	ldrb	r0, [r1, #0]
 80254b0:	f1ae 0e02 	sub.w	lr, lr, #2
 80254b4:	0900      	lsrs	r0, r0, #4
 80254b6:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80254ba:	eb05 0a00 	add.w	sl, r5, r0
 80254be:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80254c2:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80254c6:	00d2      	lsls	r2, r2, #3
 80254c8:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80254cc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80254d0:	ea49 0202 	orr.w	r2, r9, r2
 80254d4:	f815 9000 	ldrb.w	r9, [r5, r0]
 80254d8:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 80254dc:	f824 2c04 	strh.w	r2, [r4, #-4]
 80254e0:	f811 0b01 	ldrb.w	r0, [r1], #1
 80254e4:	f000 000f 	and.w	r0, r0, #15
 80254e8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80254ec:	eb05 0a00 	add.w	sl, r5, r0
 80254f0:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80254f4:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80254f8:	00d2      	lsls	r2, r2, #3
 80254fa:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80254fe:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8025502:	ea49 0202 	orr.w	r2, r9, r2
 8025506:	f815 9000 	ldrb.w	r9, [r5, r0]
 802550a:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 802550e:	f824 2c02 	strh.w	r2, [r4, #-2]
 8025512:	e7c6      	b.n	80254a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 8025514:	4631      	mov	r1, r6
 8025516:	f8dd e00c 	ldr.w	lr, [sp, #12]
 802551a:	e7c2      	b.n	80254a2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 802551c:	d111      	bne.n	8025542 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x276>
 802551e:	7809      	ldrb	r1, [r1, #0]
 8025520:	0909      	lsrs	r1, r1, #4
 8025522:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025526:	186c      	adds	r4, r5, r1
 8025528:	5c69      	ldrb	r1, [r5, r1]
 802552a:	78a2      	ldrb	r2, [r4, #2]
 802552c:	7864      	ldrb	r4, [r4, #1]
 802552e:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8025532:	00e4      	lsls	r4, r4, #3
 8025534:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8025538:	4322      	orrs	r2, r4
 802553a:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 802553e:	f820 2b02 	strh.w	r2, [r0], #2
 8025542:	9a03      	ldr	r2, [sp, #12]
 8025544:	f8bc 4000 	ldrh.w	r4, [ip]
 8025548:	9905      	ldr	r1, [sp, #20]
 802554a:	1aa4      	subs	r4, r4, r2
 802554c:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8025550:	440a      	add	r2, r1
 8025552:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025556:	fb92 f2f8 	sdiv	r2, r2, r8
 802555a:	4416      	add	r6, r2
 802555c:	e780      	b.n	8025460 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x194>
 802555e:	4b04      	ldr	r3, [pc, #16]	@ (8025570 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8025560:	6818      	ldr	r0, [r3, #0]
 8025562:	6803      	ldr	r3, [r0, #0]
 8025564:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8025566:	4798      	blx	r3
 8025568:	b00f      	add	sp, #60	@ 0x3c
 802556a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802556e:	bf00      	nop
 8025570:	24001a30 	.word	0x24001a30
 8025574:	24001a2a 	.word	0x24001a2a
 8025578:	fffff800 	.word	0xfffff800

0802557c <CRC_Lock>:
 802557c:	4a2d      	ldr	r2, [pc, #180]	@ (8025634 <CRC_Lock+0xb8>)
 802557e:	b530      	push	{r4, r5, lr}
 8025580:	6813      	ldr	r3, [r2, #0]
 8025582:	f24c 2540 	movw	r5, #49728	@ 0xc240
 8025586:	f023 0301 	bic.w	r3, r3, #1
 802558a:	6013      	str	r3, [r2, #0]
 802558c:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 8025590:	4b29      	ldr	r3, [pc, #164]	@ (8025638 <CRC_Lock+0xbc>)
 8025592:	681c      	ldr	r4, [r3, #0]
 8025594:	4014      	ands	r4, r2
 8025596:	42ac      	cmp	r4, r5
 8025598:	d005      	beq.n	80255a6 <CRC_Lock+0x2a>
 802559a:	681c      	ldr	r4, [r3, #0]
 802559c:	f24c 2570 	movw	r5, #49776	@ 0xc270
 80255a0:	4014      	ands	r4, r2
 80255a2:	42ac      	cmp	r4, r5
 80255a4:	d125      	bne.n	80255f2 <CRC_Lock+0x76>
 80255a6:	4b25      	ldr	r3, [pc, #148]	@ (802563c <CRC_Lock+0xc0>)
 80255a8:	681b      	ldr	r3, [r3, #0]
 80255aa:	2b00      	cmp	r3, #0
 80255ac:	d139      	bne.n	8025622 <CRC_Lock+0xa6>
 80255ae:	4b24      	ldr	r3, [pc, #144]	@ (8025640 <CRC_Lock+0xc4>)
 80255b0:	681a      	ldr	r2, [r3, #0]
 80255b2:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80255b6:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 80255ba:	d00d      	beq.n	80255d8 <CRC_Lock+0x5c>
 80255bc:	681a      	ldr	r2, [r3, #0]
 80255be:	f240 4483 	movw	r4, #1155	@ 0x483
 80255c2:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80255c6:	42a2      	cmp	r2, r4
 80255c8:	d006      	beq.n	80255d8 <CRC_Lock+0x5c>
 80255ca:	681b      	ldr	r3, [r3, #0]
 80255cc:	f240 4285 	movw	r2, #1157	@ 0x485
 80255d0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80255d4:	4293      	cmp	r3, r2
 80255d6:	d124      	bne.n	8025622 <CRC_Lock+0xa6>
 80255d8:	4b1a      	ldr	r3, [pc, #104]	@ (8025644 <CRC_Lock+0xc8>)
 80255da:	2201      	movs	r2, #1
 80255dc:	601a      	str	r2, [r3, #0]
 80255de:	681a      	ldr	r2, [r3, #0]
 80255e0:	2a00      	cmp	r2, #0
 80255e2:	d1fc      	bne.n	80255de <CRC_Lock+0x62>
 80255e4:	4b18      	ldr	r3, [pc, #96]	@ (8025648 <CRC_Lock+0xcc>)
 80255e6:	6018      	str	r0, [r3, #0]
 80255e8:	6818      	ldr	r0, [r3, #0]
 80255ea:	1a43      	subs	r3, r0, r1
 80255ec:	4258      	negs	r0, r3
 80255ee:	4158      	adcs	r0, r3
 80255f0:	e00e      	b.n	8025610 <CRC_Lock+0x94>
 80255f2:	681b      	ldr	r3, [r3, #0]
 80255f4:	4013      	ands	r3, r2
 80255f6:	f24d 2220 	movw	r2, #53792	@ 0xd220
 80255fa:	4293      	cmp	r3, r2
 80255fc:	d111      	bne.n	8025622 <CRC_Lock+0xa6>
 80255fe:	4b13      	ldr	r3, [pc, #76]	@ (802564c <CRC_Lock+0xd0>)
 8025600:	f240 4286 	movw	r2, #1158	@ 0x486
 8025604:	681b      	ldr	r3, [r3, #0]
 8025606:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802560a:	4293      	cmp	r3, r2
 802560c:	d001      	beq.n	8025612 <CRC_Lock+0x96>
 802560e:	2000      	movs	r0, #0
 8025610:	bd30      	pop	{r4, r5, pc}
 8025612:	4b0f      	ldr	r3, [pc, #60]	@ (8025650 <CRC_Lock+0xd4>)
 8025614:	2201      	movs	r2, #1
 8025616:	601a      	str	r2, [r3, #0]
 8025618:	681a      	ldr	r2, [r3, #0]
 802561a:	2a00      	cmp	r2, #0
 802561c:	d1fc      	bne.n	8025618 <CRC_Lock+0x9c>
 802561e:	4b0d      	ldr	r3, [pc, #52]	@ (8025654 <CRC_Lock+0xd8>)
 8025620:	e7e1      	b.n	80255e6 <CRC_Lock+0x6a>
 8025622:	4b0d      	ldr	r3, [pc, #52]	@ (8025658 <CRC_Lock+0xdc>)
 8025624:	2201      	movs	r2, #1
 8025626:	601a      	str	r2, [r3, #0]
 8025628:	681a      	ldr	r2, [r3, #0]
 802562a:	2a00      	cmp	r2, #0
 802562c:	d1fc      	bne.n	8025628 <CRC_Lock+0xac>
 802562e:	4b0b      	ldr	r3, [pc, #44]	@ (802565c <CRC_Lock+0xe0>)
 8025630:	e7d9      	b.n	80255e6 <CRC_Lock+0x6a>
 8025632:	bf00      	nop
 8025634:	e0002000 	.word	0xe0002000
 8025638:	e000ed00 	.word	0xe000ed00
 802563c:	e0042000 	.word	0xe0042000
 8025640:	5c001000 	.word	0x5c001000
 8025644:	58024c08 	.word	0x58024c08
 8025648:	58024c00 	.word	0x58024c00
 802564c:	46008ff0 	.word	0x46008ff0
 8025650:	46024c08 	.word	0x46024c08
 8025654:	46024c00 	.word	0x46024c00
 8025658:	40023008 	.word	0x40023008
 802565c:	40023000 	.word	0x40023000

08025660 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8025660:	6101      	str	r1, [r0, #16]
 8025662:	4770      	bx	lr

08025664 <_ZN8touchgfx8Gestures4tickEv>:
 8025664:	7b83      	ldrb	r3, [r0, #14]
 8025666:	b14b      	cbz	r3, 802567c <_ZN8touchgfx8Gestures4tickEv+0x18>
 8025668:	8903      	ldrh	r3, [r0, #8]
 802566a:	3301      	adds	r3, #1
 802566c:	b29b      	uxth	r3, r3
 802566e:	2b07      	cmp	r3, #7
 8025670:	8103      	strh	r3, [r0, #8]
 8025672:	bf81      	itttt	hi
 8025674:	2300      	movhi	r3, #0
 8025676:	8143      	strhhi	r3, [r0, #10]
 8025678:	8183      	strhhi	r3, [r0, #12]
 802567a:	7383      	strbhi	r3, [r0, #14]
 802567c:	4770      	bx	lr
	...

08025680 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8025680:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8025684:	4698      	mov	r8, r3
 8025686:	8883      	ldrh	r3, [r0, #4]
 8025688:	4604      	mov	r4, r0
 802568a:	4617      	mov	r7, r2
 802568c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8025690:	eba8 0303 	sub.w	r3, r8, r3
 8025694:	4a19      	ldr	r2, [pc, #100]	@ (80256fc <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8025696:	460e      	mov	r6, r1
 8025698:	b21b      	sxth	r3, r3
 802569a:	88c1      	ldrh	r1, [r0, #6]
 802569c:	9200      	str	r2, [sp, #0]
 802569e:	2000      	movs	r0, #0
 80256a0:	2b00      	cmp	r3, #0
 80256a2:	8aa2      	ldrh	r2, [r4, #20]
 80256a4:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 80256a8:	bfb8      	it	lt
 80256aa:	425b      	neglt	r3, r3
 80256ac:	f88d 0004 	strb.w	r0, [sp, #4]
 80256b0:	f8ad 1008 	strh.w	r1, [sp, #8]
 80256b4:	b21b      	sxth	r3, r3
 80256b6:	f8ad 800a 	strh.w	r8, [sp, #10]
 80256ba:	f8ad 500c 	strh.w	r5, [sp, #12]
 80256be:	4293      	cmp	r3, r2
 80256c0:	dc07      	bgt.n	80256d2 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x52>
 80256c2:	1a69      	subs	r1, r5, r1
 80256c4:	b209      	sxth	r1, r1
 80256c6:	2900      	cmp	r1, #0
 80256c8:	bfb8      	it	lt
 80256ca:	4249      	neglt	r1, r1
 80256cc:	b209      	sxth	r1, r1
 80256ce:	428a      	cmp	r2, r1
 80256d0:	da10      	bge.n	80256f4 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x74>
 80256d2:	6920      	ldr	r0, [r4, #16]
 80256d4:	4669      	mov	r1, sp
 80256d6:	eba8 0606 	sub.w	r6, r8, r6
 80256da:	1bef      	subs	r7, r5, r7
 80256dc:	6803      	ldr	r3, [r0, #0]
 80256de:	685b      	ldr	r3, [r3, #4]
 80256e0:	4798      	blx	r3
 80256e2:	2300      	movs	r3, #0
 80256e4:	2001      	movs	r0, #1
 80256e6:	8166      	strh	r6, [r4, #10]
 80256e8:	8123      	strh	r3, [r4, #8]
 80256ea:	81a7      	strh	r7, [r4, #12]
 80256ec:	f8a4 8004 	strh.w	r8, [r4, #4]
 80256f0:	80e5      	strh	r5, [r4, #6]
 80256f2:	73a0      	strb	r0, [r4, #14]
 80256f4:	b004      	add	sp, #16
 80256f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80256fa:	bf00      	nop
 80256fc:	08028874 	.word	0x08028874

08025700 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8025700:	b5f0      	push	{r4, r5, r6, r7, lr}
 8025702:	461e      	mov	r6, r3
 8025704:	1e4b      	subs	r3, r1, #1
 8025706:	b085      	sub	sp, #20
 8025708:	4604      	mov	r4, r0
 802570a:	2b01      	cmp	r3, #1
 802570c:	460d      	mov	r5, r1
 802570e:	4617      	mov	r7, r2
 8025710:	d84b      	bhi.n	80257aa <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8025712:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8025716:	1cd3      	adds	r3, r2, #3
 8025718:	b29b      	uxth	r3, r3
 802571a:	2b06      	cmp	r3, #6
 802571c:	d916      	bls.n	802574c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 802571e:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 80257c0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8025722:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8025726:	f8cd c004 	str.w	ip, [sp, #4]
 802572a:	f04f 0c00 	mov.w	ip, #0
 802572e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8025732:	6900      	ldr	r0, [r0, #16]
 8025734:	f8ad 100c 	strh.w	r1, [sp, #12]
 8025738:	a901      	add	r1, sp, #4
 802573a:	f88d c008 	strb.w	ip, [sp, #8]
 802573e:	f8ad 200a 	strh.w	r2, [sp, #10]
 8025742:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025746:	6803      	ldr	r3, [r0, #0]
 8025748:	689b      	ldr	r3, [r3, #8]
 802574a:	4798      	blx	r3
 802574c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8025750:	1cd3      	adds	r3, r2, #3
 8025752:	b29b      	uxth	r3, r3
 8025754:	2b06      	cmp	r3, #6
 8025756:	d916      	bls.n	8025786 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025758:	f8df c064 	ldr.w	ip, [pc, #100]	@ 80257c0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802575c:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8025760:	f8cd c004 	str.w	ip, [sp, #4]
 8025764:	f04f 0c01 	mov.w	ip, #1
 8025768:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802576c:	6920      	ldr	r0, [r4, #16]
 802576e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8025772:	a901      	add	r1, sp, #4
 8025774:	f88d c008 	strb.w	ip, [sp, #8]
 8025778:	f8ad 200a 	strh.w	r2, [sp, #10]
 802577c:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025780:	6803      	ldr	r3, [r0, #0]
 8025782:	689b      	ldr	r3, [r3, #8]
 8025784:	4798      	blx	r3
 8025786:	4b0d      	ldr	r3, [pc, #52]	@ (80257bc <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8025788:	a901      	add	r1, sp, #4
 802578a:	6920      	ldr	r0, [r4, #16]
 802578c:	9301      	str	r3, [sp, #4]
 802578e:	2300      	movs	r3, #0
 8025790:	f88d 5008 	strb.w	r5, [sp, #8]
 8025794:	f8ad 700a 	strh.w	r7, [sp, #10]
 8025798:	f8ad 600c 	strh.w	r6, [sp, #12]
 802579c:	f8ad 300e 	strh.w	r3, [sp, #14]
 80257a0:	6803      	ldr	r3, [r0, #0]
 80257a2:	681b      	ldr	r3, [r3, #0]
 80257a4:	4798      	blx	r3
 80257a6:	b005      	add	sp, #20
 80257a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80257aa:	2900      	cmp	r1, #0
 80257ac:	d1eb      	bne.n	8025786 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80257ae:	80a2      	strh	r2, [r4, #4]
 80257b0:	80c6      	strh	r6, [r0, #6]
 80257b2:	60a1      	str	r1, [r4, #8]
 80257b4:	81a1      	strh	r1, [r4, #12]
 80257b6:	73a1      	strb	r1, [r4, #14]
 80257b8:	e7e5      	b.n	8025786 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80257ba:	bf00      	nop
 80257bc:	08028860 	.word	0x08028860
 80257c0:	08028888 	.word	0x08028888

080257c4 <__aeabi_atexit>:
 80257c4:	460b      	mov	r3, r1
 80257c6:	4601      	mov	r1, r0
 80257c8:	4618      	mov	r0, r3
 80257ca:	f000 b911 	b.w	80259f0 <__cxa_atexit>

080257ce <_ZdlPvj>:
 80257ce:	f000 b812 	b.w	80257f6 <_ZdlPv>

080257d2 <__cxa_guard_acquire>:
 80257d2:	6802      	ldr	r2, [r0, #0]
 80257d4:	07d2      	lsls	r2, r2, #31
 80257d6:	4603      	mov	r3, r0
 80257d8:	d405      	bmi.n	80257e6 <__cxa_guard_acquire+0x14>
 80257da:	7842      	ldrb	r2, [r0, #1]
 80257dc:	b102      	cbz	r2, 80257e0 <__cxa_guard_acquire+0xe>
 80257de:	deff      	udf	#255	@ 0xff
 80257e0:	2001      	movs	r0, #1
 80257e2:	7058      	strb	r0, [r3, #1]
 80257e4:	4770      	bx	lr
 80257e6:	2000      	movs	r0, #0
 80257e8:	4770      	bx	lr

080257ea <__cxa_guard_release>:
 80257ea:	2301      	movs	r3, #1
 80257ec:	6003      	str	r3, [r0, #0]
 80257ee:	4770      	bx	lr

080257f0 <__cxa_pure_virtual>:
 80257f0:	b508      	push	{r3, lr}
 80257f2:	f000 f80f 	bl	8025814 <_ZSt9terminatev>

080257f6 <_ZdlPv>:
 80257f6:	f000 b845 	b.w	8025884 <free>

080257fa <_ZN10__cxxabiv111__terminateEPFvvE>:
 80257fa:	b508      	push	{r3, lr}
 80257fc:	4780      	blx	r0
 80257fe:	f000 f80e 	bl	802581e <abort>
	...

08025804 <_ZSt13get_terminatev>:
 8025804:	4b02      	ldr	r3, [pc, #8]	@ (8025810 <_ZSt13get_terminatev+0xc>)
 8025806:	6818      	ldr	r0, [r3, #0]
 8025808:	f3bf 8f5b 	dmb	ish
 802580c:	4770      	bx	lr
 802580e:	bf00      	nop
 8025810:	24000098 	.word	0x24000098

08025814 <_ZSt9terminatev>:
 8025814:	b508      	push	{r3, lr}
 8025816:	f7ff fff5 	bl	8025804 <_ZSt13get_terminatev>
 802581a:	f7ff ffee 	bl	80257fa <_ZN10__cxxabiv111__terminateEPFvvE>

0802581e <abort>:
 802581e:	b508      	push	{r3, lr}
 8025820:	2006      	movs	r0, #6
 8025822:	f000 fb3f 	bl	8025ea4 <raise>
 8025826:	2001      	movs	r0, #1
 8025828:	f7dc f850 	bl	80018cc <_exit>

0802582c <__assert_func>:
 802582c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802582e:	4614      	mov	r4, r2
 8025830:	461a      	mov	r2, r3
 8025832:	4b09      	ldr	r3, [pc, #36]	@ (8025858 <__assert_func+0x2c>)
 8025834:	681b      	ldr	r3, [r3, #0]
 8025836:	4605      	mov	r5, r0
 8025838:	68d8      	ldr	r0, [r3, #12]
 802583a:	b954      	cbnz	r4, 8025852 <__assert_func+0x26>
 802583c:	4b07      	ldr	r3, [pc, #28]	@ (802585c <__assert_func+0x30>)
 802583e:	461c      	mov	r4, r3
 8025840:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8025844:	9100      	str	r1, [sp, #0]
 8025846:	462b      	mov	r3, r5
 8025848:	4905      	ldr	r1, [pc, #20]	@ (8025860 <__assert_func+0x34>)
 802584a:	f000 f983 	bl	8025b54 <fiprintf>
 802584e:	f7ff ffe6 	bl	802581e <abort>
 8025852:	4b04      	ldr	r3, [pc, #16]	@ (8025864 <__assert_func+0x38>)
 8025854:	e7f4      	b.n	8025840 <__assert_func+0x14>
 8025856:	bf00      	nop
 8025858:	240000a8 	.word	0x240000a8
 802585c:	08028bf7 	.word	0x08028bf7
 8025860:	08028bc9 	.word	0x08028bc9
 8025864:	08028bbc 	.word	0x08028bbc

08025868 <atexit>:
 8025868:	2300      	movs	r3, #0
 802586a:	4601      	mov	r1, r0
 802586c:	461a      	mov	r2, r3
 802586e:	4618      	mov	r0, r3
 8025870:	f000 bbc6 	b.w	8026000 <__register_exitproc>

08025874 <malloc>:
 8025874:	4b02      	ldr	r3, [pc, #8]	@ (8025880 <malloc+0xc>)
 8025876:	4601      	mov	r1, r0
 8025878:	6818      	ldr	r0, [r3, #0]
 802587a:	f000 b82d 	b.w	80258d8 <_malloc_r>
 802587e:	bf00      	nop
 8025880:	240000a8 	.word	0x240000a8

08025884 <free>:
 8025884:	4b02      	ldr	r3, [pc, #8]	@ (8025890 <free+0xc>)
 8025886:	4601      	mov	r1, r0
 8025888:	6818      	ldr	r0, [r3, #0]
 802588a:	f000 bc15 	b.w	80260b8 <_free_r>
 802588e:	bf00      	nop
 8025890:	240000a8 	.word	0x240000a8

08025894 <sbrk_aligned>:
 8025894:	b570      	push	{r4, r5, r6, lr}
 8025896:	4e0f      	ldr	r6, [pc, #60]	@ (80258d4 <sbrk_aligned+0x40>)
 8025898:	460c      	mov	r4, r1
 802589a:	6831      	ldr	r1, [r6, #0]
 802589c:	4605      	mov	r5, r0
 802589e:	b911      	cbnz	r1, 80258a6 <sbrk_aligned+0x12>
 80258a0:	f000 fb50 	bl	8025f44 <_sbrk_r>
 80258a4:	6030      	str	r0, [r6, #0]
 80258a6:	4621      	mov	r1, r4
 80258a8:	4628      	mov	r0, r5
 80258aa:	f000 fb4b 	bl	8025f44 <_sbrk_r>
 80258ae:	1c43      	adds	r3, r0, #1
 80258b0:	d103      	bne.n	80258ba <sbrk_aligned+0x26>
 80258b2:	f04f 34ff 	mov.w	r4, #4294967295
 80258b6:	4620      	mov	r0, r4
 80258b8:	bd70      	pop	{r4, r5, r6, pc}
 80258ba:	1cc4      	adds	r4, r0, #3
 80258bc:	f024 0403 	bic.w	r4, r4, #3
 80258c0:	42a0      	cmp	r0, r4
 80258c2:	d0f8      	beq.n	80258b6 <sbrk_aligned+0x22>
 80258c4:	1a21      	subs	r1, r4, r0
 80258c6:	4628      	mov	r0, r5
 80258c8:	f000 fb3c 	bl	8025f44 <_sbrk_r>
 80258cc:	3001      	adds	r0, #1
 80258ce:	d1f2      	bne.n	80258b6 <sbrk_aligned+0x22>
 80258d0:	e7ef      	b.n	80258b2 <sbrk_aligned+0x1e>
 80258d2:	bf00      	nop
 80258d4:	24002484 	.word	0x24002484

080258d8 <_malloc_r>:
 80258d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80258dc:	1ccd      	adds	r5, r1, #3
 80258de:	f025 0503 	bic.w	r5, r5, #3
 80258e2:	3508      	adds	r5, #8
 80258e4:	2d0c      	cmp	r5, #12
 80258e6:	bf38      	it	cc
 80258e8:	250c      	movcc	r5, #12
 80258ea:	2d00      	cmp	r5, #0
 80258ec:	4606      	mov	r6, r0
 80258ee:	db01      	blt.n	80258f4 <_malloc_r+0x1c>
 80258f0:	42a9      	cmp	r1, r5
 80258f2:	d904      	bls.n	80258fe <_malloc_r+0x26>
 80258f4:	230c      	movs	r3, #12
 80258f6:	6033      	str	r3, [r6, #0]
 80258f8:	2000      	movs	r0, #0
 80258fa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80258fe:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 80259d4 <_malloc_r+0xfc>
 8025902:	f000 f869 	bl	80259d8 <__malloc_lock>
 8025906:	f8d8 3000 	ldr.w	r3, [r8]
 802590a:	461c      	mov	r4, r3
 802590c:	bb44      	cbnz	r4, 8025960 <_malloc_r+0x88>
 802590e:	4629      	mov	r1, r5
 8025910:	4630      	mov	r0, r6
 8025912:	f7ff ffbf 	bl	8025894 <sbrk_aligned>
 8025916:	1c43      	adds	r3, r0, #1
 8025918:	4604      	mov	r4, r0
 802591a:	d158      	bne.n	80259ce <_malloc_r+0xf6>
 802591c:	f8d8 4000 	ldr.w	r4, [r8]
 8025920:	4627      	mov	r7, r4
 8025922:	2f00      	cmp	r7, #0
 8025924:	d143      	bne.n	80259ae <_malloc_r+0xd6>
 8025926:	2c00      	cmp	r4, #0
 8025928:	d04b      	beq.n	80259c2 <_malloc_r+0xea>
 802592a:	6823      	ldr	r3, [r4, #0]
 802592c:	4639      	mov	r1, r7
 802592e:	4630      	mov	r0, r6
 8025930:	eb04 0903 	add.w	r9, r4, r3
 8025934:	f000 fb06 	bl	8025f44 <_sbrk_r>
 8025938:	4581      	cmp	r9, r0
 802593a:	d142      	bne.n	80259c2 <_malloc_r+0xea>
 802593c:	6821      	ldr	r1, [r4, #0]
 802593e:	1a6d      	subs	r5, r5, r1
 8025940:	4629      	mov	r1, r5
 8025942:	4630      	mov	r0, r6
 8025944:	f7ff ffa6 	bl	8025894 <sbrk_aligned>
 8025948:	3001      	adds	r0, #1
 802594a:	d03a      	beq.n	80259c2 <_malloc_r+0xea>
 802594c:	6823      	ldr	r3, [r4, #0]
 802594e:	442b      	add	r3, r5
 8025950:	6023      	str	r3, [r4, #0]
 8025952:	f8d8 3000 	ldr.w	r3, [r8]
 8025956:	685a      	ldr	r2, [r3, #4]
 8025958:	bb62      	cbnz	r2, 80259b4 <_malloc_r+0xdc>
 802595a:	f8c8 7000 	str.w	r7, [r8]
 802595e:	e00f      	b.n	8025980 <_malloc_r+0xa8>
 8025960:	6822      	ldr	r2, [r4, #0]
 8025962:	1b52      	subs	r2, r2, r5
 8025964:	d420      	bmi.n	80259a8 <_malloc_r+0xd0>
 8025966:	2a0b      	cmp	r2, #11
 8025968:	d917      	bls.n	802599a <_malloc_r+0xc2>
 802596a:	1961      	adds	r1, r4, r5
 802596c:	42a3      	cmp	r3, r4
 802596e:	6025      	str	r5, [r4, #0]
 8025970:	bf18      	it	ne
 8025972:	6059      	strne	r1, [r3, #4]
 8025974:	6863      	ldr	r3, [r4, #4]
 8025976:	bf08      	it	eq
 8025978:	f8c8 1000 	streq.w	r1, [r8]
 802597c:	5162      	str	r2, [r4, r5]
 802597e:	604b      	str	r3, [r1, #4]
 8025980:	4630      	mov	r0, r6
 8025982:	f000 f82f 	bl	80259e4 <__malloc_unlock>
 8025986:	f104 000b 	add.w	r0, r4, #11
 802598a:	1d23      	adds	r3, r4, #4
 802598c:	f020 0007 	bic.w	r0, r0, #7
 8025990:	1ac2      	subs	r2, r0, r3
 8025992:	bf1c      	itt	ne
 8025994:	1a1b      	subne	r3, r3, r0
 8025996:	50a3      	strne	r3, [r4, r2]
 8025998:	e7af      	b.n	80258fa <_malloc_r+0x22>
 802599a:	6862      	ldr	r2, [r4, #4]
 802599c:	42a3      	cmp	r3, r4
 802599e:	bf0c      	ite	eq
 80259a0:	f8c8 2000 	streq.w	r2, [r8]
 80259a4:	605a      	strne	r2, [r3, #4]
 80259a6:	e7eb      	b.n	8025980 <_malloc_r+0xa8>
 80259a8:	4623      	mov	r3, r4
 80259aa:	6864      	ldr	r4, [r4, #4]
 80259ac:	e7ae      	b.n	802590c <_malloc_r+0x34>
 80259ae:	463c      	mov	r4, r7
 80259b0:	687f      	ldr	r7, [r7, #4]
 80259b2:	e7b6      	b.n	8025922 <_malloc_r+0x4a>
 80259b4:	461a      	mov	r2, r3
 80259b6:	685b      	ldr	r3, [r3, #4]
 80259b8:	42a3      	cmp	r3, r4
 80259ba:	d1fb      	bne.n	80259b4 <_malloc_r+0xdc>
 80259bc:	2300      	movs	r3, #0
 80259be:	6053      	str	r3, [r2, #4]
 80259c0:	e7de      	b.n	8025980 <_malloc_r+0xa8>
 80259c2:	230c      	movs	r3, #12
 80259c4:	6033      	str	r3, [r6, #0]
 80259c6:	4630      	mov	r0, r6
 80259c8:	f000 f80c 	bl	80259e4 <__malloc_unlock>
 80259cc:	e794      	b.n	80258f8 <_malloc_r+0x20>
 80259ce:	6005      	str	r5, [r0, #0]
 80259d0:	e7d6      	b.n	8025980 <_malloc_r+0xa8>
 80259d2:	bf00      	nop
 80259d4:	24002488 	.word	0x24002488

080259d8 <__malloc_lock>:
 80259d8:	4801      	ldr	r0, [pc, #4]	@ (80259e0 <__malloc_lock+0x8>)
 80259da:	f000 bb00 	b.w	8025fde <__retarget_lock_acquire_recursive>
 80259de:	bf00      	nop
 80259e0:	240025cc 	.word	0x240025cc

080259e4 <__malloc_unlock>:
 80259e4:	4801      	ldr	r0, [pc, #4]	@ (80259ec <__malloc_unlock+0x8>)
 80259e6:	f000 bafb 	b.w	8025fe0 <__retarget_lock_release_recursive>
 80259ea:	bf00      	nop
 80259ec:	240025cc 	.word	0x240025cc

080259f0 <__cxa_atexit>:
 80259f0:	b510      	push	{r4, lr}
 80259f2:	4604      	mov	r4, r0
 80259f4:	4804      	ldr	r0, [pc, #16]	@ (8025a08 <__cxa_atexit+0x18>)
 80259f6:	4613      	mov	r3, r2
 80259f8:	b120      	cbz	r0, 8025a04 <__cxa_atexit+0x14>
 80259fa:	460a      	mov	r2, r1
 80259fc:	2002      	movs	r0, #2
 80259fe:	4621      	mov	r1, r4
 8025a00:	f000 fafe 	bl	8026000 <__register_exitproc>
 8025a04:	bd10      	pop	{r4, pc}
 8025a06:	bf00      	nop
 8025a08:	08026001 	.word	0x08026001

08025a0c <std>:
 8025a0c:	2300      	movs	r3, #0
 8025a0e:	b510      	push	{r4, lr}
 8025a10:	4604      	mov	r4, r0
 8025a12:	e9c0 3300 	strd	r3, r3, [r0]
 8025a16:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8025a1a:	6083      	str	r3, [r0, #8]
 8025a1c:	8181      	strh	r1, [r0, #12]
 8025a1e:	6643      	str	r3, [r0, #100]	@ 0x64
 8025a20:	81c2      	strh	r2, [r0, #14]
 8025a22:	6183      	str	r3, [r0, #24]
 8025a24:	4619      	mov	r1, r3
 8025a26:	2208      	movs	r2, #8
 8025a28:	305c      	adds	r0, #92	@ 0x5c
 8025a2a:	f000 fa0b 	bl	8025e44 <memset>
 8025a2e:	4b0d      	ldr	r3, [pc, #52]	@ (8025a64 <std+0x58>)
 8025a30:	6263      	str	r3, [r4, #36]	@ 0x24
 8025a32:	4b0d      	ldr	r3, [pc, #52]	@ (8025a68 <std+0x5c>)
 8025a34:	62a3      	str	r3, [r4, #40]	@ 0x28
 8025a36:	4b0d      	ldr	r3, [pc, #52]	@ (8025a6c <std+0x60>)
 8025a38:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8025a3a:	4b0d      	ldr	r3, [pc, #52]	@ (8025a70 <std+0x64>)
 8025a3c:	6323      	str	r3, [r4, #48]	@ 0x30
 8025a3e:	4b0d      	ldr	r3, [pc, #52]	@ (8025a74 <std+0x68>)
 8025a40:	6224      	str	r4, [r4, #32]
 8025a42:	429c      	cmp	r4, r3
 8025a44:	d006      	beq.n	8025a54 <std+0x48>
 8025a46:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8025a4a:	4294      	cmp	r4, r2
 8025a4c:	d002      	beq.n	8025a54 <std+0x48>
 8025a4e:	33d0      	adds	r3, #208	@ 0xd0
 8025a50:	429c      	cmp	r4, r3
 8025a52:	d105      	bne.n	8025a60 <std+0x54>
 8025a54:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8025a58:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025a5c:	f000 babe 	b.w	8025fdc <__retarget_lock_init_recursive>
 8025a60:	bd10      	pop	{r4, pc}
 8025a62:	bf00      	nop
 8025a64:	08025c95 	.word	0x08025c95
 8025a68:	08025cb7 	.word	0x08025cb7
 8025a6c:	08025cef 	.word	0x08025cef
 8025a70:	08025d13 	.word	0x08025d13
 8025a74:	2400248c 	.word	0x2400248c

08025a78 <stdio_exit_handler>:
 8025a78:	4a02      	ldr	r2, [pc, #8]	@ (8025a84 <stdio_exit_handler+0xc>)
 8025a7a:	4903      	ldr	r1, [pc, #12]	@ (8025a88 <stdio_exit_handler+0x10>)
 8025a7c:	4803      	ldr	r0, [pc, #12]	@ (8025a8c <stdio_exit_handler+0x14>)
 8025a7e:	f000 b87b 	b.w	8025b78 <_fwalk_sglue>
 8025a82:	bf00      	nop
 8025a84:	2400009c 	.word	0x2400009c
 8025a88:	080267f5 	.word	0x080267f5
 8025a8c:	240000ac 	.word	0x240000ac

08025a90 <cleanup_stdio>:
 8025a90:	6841      	ldr	r1, [r0, #4]
 8025a92:	4b0c      	ldr	r3, [pc, #48]	@ (8025ac4 <cleanup_stdio+0x34>)
 8025a94:	4299      	cmp	r1, r3
 8025a96:	b510      	push	{r4, lr}
 8025a98:	4604      	mov	r4, r0
 8025a9a:	d001      	beq.n	8025aa0 <cleanup_stdio+0x10>
 8025a9c:	f000 feaa 	bl	80267f4 <_fflush_r>
 8025aa0:	68a1      	ldr	r1, [r4, #8]
 8025aa2:	4b09      	ldr	r3, [pc, #36]	@ (8025ac8 <cleanup_stdio+0x38>)
 8025aa4:	4299      	cmp	r1, r3
 8025aa6:	d002      	beq.n	8025aae <cleanup_stdio+0x1e>
 8025aa8:	4620      	mov	r0, r4
 8025aaa:	f000 fea3 	bl	80267f4 <_fflush_r>
 8025aae:	68e1      	ldr	r1, [r4, #12]
 8025ab0:	4b06      	ldr	r3, [pc, #24]	@ (8025acc <cleanup_stdio+0x3c>)
 8025ab2:	4299      	cmp	r1, r3
 8025ab4:	d004      	beq.n	8025ac0 <cleanup_stdio+0x30>
 8025ab6:	4620      	mov	r0, r4
 8025ab8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025abc:	f000 be9a 	b.w	80267f4 <_fflush_r>
 8025ac0:	bd10      	pop	{r4, pc}
 8025ac2:	bf00      	nop
 8025ac4:	2400248c 	.word	0x2400248c
 8025ac8:	240024f4 	.word	0x240024f4
 8025acc:	2400255c 	.word	0x2400255c

08025ad0 <global_stdio_init.part.0>:
 8025ad0:	b510      	push	{r4, lr}
 8025ad2:	4b0b      	ldr	r3, [pc, #44]	@ (8025b00 <global_stdio_init.part.0+0x30>)
 8025ad4:	4c0b      	ldr	r4, [pc, #44]	@ (8025b04 <global_stdio_init.part.0+0x34>)
 8025ad6:	4a0c      	ldr	r2, [pc, #48]	@ (8025b08 <global_stdio_init.part.0+0x38>)
 8025ad8:	601a      	str	r2, [r3, #0]
 8025ada:	4620      	mov	r0, r4
 8025adc:	2200      	movs	r2, #0
 8025ade:	2104      	movs	r1, #4
 8025ae0:	f7ff ff94 	bl	8025a0c <std>
 8025ae4:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8025ae8:	2201      	movs	r2, #1
 8025aea:	2109      	movs	r1, #9
 8025aec:	f7ff ff8e 	bl	8025a0c <std>
 8025af0:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8025af4:	2202      	movs	r2, #2
 8025af6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025afa:	2112      	movs	r1, #18
 8025afc:	f7ff bf86 	b.w	8025a0c <std>
 8025b00:	240025c4 	.word	0x240025c4
 8025b04:	2400248c 	.word	0x2400248c
 8025b08:	08025a79 	.word	0x08025a79

08025b0c <__sfp_lock_acquire>:
 8025b0c:	4801      	ldr	r0, [pc, #4]	@ (8025b14 <__sfp_lock_acquire+0x8>)
 8025b0e:	f000 ba66 	b.w	8025fde <__retarget_lock_acquire_recursive>
 8025b12:	bf00      	nop
 8025b14:	240025ce 	.word	0x240025ce

08025b18 <__sfp_lock_release>:
 8025b18:	4801      	ldr	r0, [pc, #4]	@ (8025b20 <__sfp_lock_release+0x8>)
 8025b1a:	f000 ba61 	b.w	8025fe0 <__retarget_lock_release_recursive>
 8025b1e:	bf00      	nop
 8025b20:	240025ce 	.word	0x240025ce

08025b24 <__sinit>:
 8025b24:	b510      	push	{r4, lr}
 8025b26:	4604      	mov	r4, r0
 8025b28:	f7ff fff0 	bl	8025b0c <__sfp_lock_acquire>
 8025b2c:	6a23      	ldr	r3, [r4, #32]
 8025b2e:	b11b      	cbz	r3, 8025b38 <__sinit+0x14>
 8025b30:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025b34:	f7ff bff0 	b.w	8025b18 <__sfp_lock_release>
 8025b38:	4b04      	ldr	r3, [pc, #16]	@ (8025b4c <__sinit+0x28>)
 8025b3a:	6223      	str	r3, [r4, #32]
 8025b3c:	4b04      	ldr	r3, [pc, #16]	@ (8025b50 <__sinit+0x2c>)
 8025b3e:	681b      	ldr	r3, [r3, #0]
 8025b40:	2b00      	cmp	r3, #0
 8025b42:	d1f5      	bne.n	8025b30 <__sinit+0xc>
 8025b44:	f7ff ffc4 	bl	8025ad0 <global_stdio_init.part.0>
 8025b48:	e7f2      	b.n	8025b30 <__sinit+0xc>
 8025b4a:	bf00      	nop
 8025b4c:	08025a91 	.word	0x08025a91
 8025b50:	240025c4 	.word	0x240025c4

08025b54 <fiprintf>:
 8025b54:	b40e      	push	{r1, r2, r3}
 8025b56:	b503      	push	{r0, r1, lr}
 8025b58:	4601      	mov	r1, r0
 8025b5a:	ab03      	add	r3, sp, #12
 8025b5c:	4805      	ldr	r0, [pc, #20]	@ (8025b74 <fiprintf+0x20>)
 8025b5e:	f853 2b04 	ldr.w	r2, [r3], #4
 8025b62:	6800      	ldr	r0, [r0, #0]
 8025b64:	9301      	str	r3, [sp, #4]
 8025b66:	f000 fb1b 	bl	80261a0 <_vfiprintf_r>
 8025b6a:	b002      	add	sp, #8
 8025b6c:	f85d eb04 	ldr.w	lr, [sp], #4
 8025b70:	b003      	add	sp, #12
 8025b72:	4770      	bx	lr
 8025b74:	240000a8 	.word	0x240000a8

08025b78 <_fwalk_sglue>:
 8025b78:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8025b7c:	4607      	mov	r7, r0
 8025b7e:	4688      	mov	r8, r1
 8025b80:	4614      	mov	r4, r2
 8025b82:	2600      	movs	r6, #0
 8025b84:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8025b88:	f1b9 0901 	subs.w	r9, r9, #1
 8025b8c:	d505      	bpl.n	8025b9a <_fwalk_sglue+0x22>
 8025b8e:	6824      	ldr	r4, [r4, #0]
 8025b90:	2c00      	cmp	r4, #0
 8025b92:	d1f7      	bne.n	8025b84 <_fwalk_sglue+0xc>
 8025b94:	4630      	mov	r0, r6
 8025b96:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8025b9a:	89ab      	ldrh	r3, [r5, #12]
 8025b9c:	2b01      	cmp	r3, #1
 8025b9e:	d907      	bls.n	8025bb0 <_fwalk_sglue+0x38>
 8025ba0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8025ba4:	3301      	adds	r3, #1
 8025ba6:	d003      	beq.n	8025bb0 <_fwalk_sglue+0x38>
 8025ba8:	4629      	mov	r1, r5
 8025baa:	4638      	mov	r0, r7
 8025bac:	47c0      	blx	r8
 8025bae:	4306      	orrs	r6, r0
 8025bb0:	3568      	adds	r5, #104	@ 0x68
 8025bb2:	e7e9      	b.n	8025b88 <_fwalk_sglue+0x10>

08025bb4 <iprintf>:
 8025bb4:	b40f      	push	{r0, r1, r2, r3}
 8025bb6:	b507      	push	{r0, r1, r2, lr}
 8025bb8:	4906      	ldr	r1, [pc, #24]	@ (8025bd4 <iprintf+0x20>)
 8025bba:	ab04      	add	r3, sp, #16
 8025bbc:	6808      	ldr	r0, [r1, #0]
 8025bbe:	f853 2b04 	ldr.w	r2, [r3], #4
 8025bc2:	6881      	ldr	r1, [r0, #8]
 8025bc4:	9301      	str	r3, [sp, #4]
 8025bc6:	f000 faeb 	bl	80261a0 <_vfiprintf_r>
 8025bca:	b003      	add	sp, #12
 8025bcc:	f85d eb04 	ldr.w	lr, [sp], #4
 8025bd0:	b004      	add	sp, #16
 8025bd2:	4770      	bx	lr
 8025bd4:	240000a8 	.word	0x240000a8

08025bd8 <_puts_r>:
 8025bd8:	6a03      	ldr	r3, [r0, #32]
 8025bda:	b570      	push	{r4, r5, r6, lr}
 8025bdc:	6884      	ldr	r4, [r0, #8]
 8025bde:	4605      	mov	r5, r0
 8025be0:	460e      	mov	r6, r1
 8025be2:	b90b      	cbnz	r3, 8025be8 <_puts_r+0x10>
 8025be4:	f7ff ff9e 	bl	8025b24 <__sinit>
 8025be8:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8025bea:	07db      	lsls	r3, r3, #31
 8025bec:	d405      	bmi.n	8025bfa <_puts_r+0x22>
 8025bee:	89a3      	ldrh	r3, [r4, #12]
 8025bf0:	0598      	lsls	r0, r3, #22
 8025bf2:	d402      	bmi.n	8025bfa <_puts_r+0x22>
 8025bf4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8025bf6:	f000 f9f2 	bl	8025fde <__retarget_lock_acquire_recursive>
 8025bfa:	89a3      	ldrh	r3, [r4, #12]
 8025bfc:	0719      	lsls	r1, r3, #28
 8025bfe:	d502      	bpl.n	8025c06 <_puts_r+0x2e>
 8025c00:	6923      	ldr	r3, [r4, #16]
 8025c02:	2b00      	cmp	r3, #0
 8025c04:	d135      	bne.n	8025c72 <_puts_r+0x9a>
 8025c06:	4621      	mov	r1, r4
 8025c08:	4628      	mov	r0, r5
 8025c0a:	f000 f8c5 	bl	8025d98 <__swsetup_r>
 8025c0e:	b380      	cbz	r0, 8025c72 <_puts_r+0x9a>
 8025c10:	f04f 35ff 	mov.w	r5, #4294967295
 8025c14:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8025c16:	07da      	lsls	r2, r3, #31
 8025c18:	d405      	bmi.n	8025c26 <_puts_r+0x4e>
 8025c1a:	89a3      	ldrh	r3, [r4, #12]
 8025c1c:	059b      	lsls	r3, r3, #22
 8025c1e:	d402      	bmi.n	8025c26 <_puts_r+0x4e>
 8025c20:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8025c22:	f000 f9dd 	bl	8025fe0 <__retarget_lock_release_recursive>
 8025c26:	4628      	mov	r0, r5
 8025c28:	bd70      	pop	{r4, r5, r6, pc}
 8025c2a:	2b00      	cmp	r3, #0
 8025c2c:	da04      	bge.n	8025c38 <_puts_r+0x60>
 8025c2e:	69a2      	ldr	r2, [r4, #24]
 8025c30:	429a      	cmp	r2, r3
 8025c32:	dc17      	bgt.n	8025c64 <_puts_r+0x8c>
 8025c34:	290a      	cmp	r1, #10
 8025c36:	d015      	beq.n	8025c64 <_puts_r+0x8c>
 8025c38:	6823      	ldr	r3, [r4, #0]
 8025c3a:	1c5a      	adds	r2, r3, #1
 8025c3c:	6022      	str	r2, [r4, #0]
 8025c3e:	7019      	strb	r1, [r3, #0]
 8025c40:	68a3      	ldr	r3, [r4, #8]
 8025c42:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8025c46:	3b01      	subs	r3, #1
 8025c48:	60a3      	str	r3, [r4, #8]
 8025c4a:	2900      	cmp	r1, #0
 8025c4c:	d1ed      	bne.n	8025c2a <_puts_r+0x52>
 8025c4e:	2b00      	cmp	r3, #0
 8025c50:	da11      	bge.n	8025c76 <_puts_r+0x9e>
 8025c52:	4622      	mov	r2, r4
 8025c54:	210a      	movs	r1, #10
 8025c56:	4628      	mov	r0, r5
 8025c58:	f000 f85f 	bl	8025d1a <__swbuf_r>
 8025c5c:	3001      	adds	r0, #1
 8025c5e:	d0d7      	beq.n	8025c10 <_puts_r+0x38>
 8025c60:	250a      	movs	r5, #10
 8025c62:	e7d7      	b.n	8025c14 <_puts_r+0x3c>
 8025c64:	4622      	mov	r2, r4
 8025c66:	4628      	mov	r0, r5
 8025c68:	f000 f857 	bl	8025d1a <__swbuf_r>
 8025c6c:	3001      	adds	r0, #1
 8025c6e:	d1e7      	bne.n	8025c40 <_puts_r+0x68>
 8025c70:	e7ce      	b.n	8025c10 <_puts_r+0x38>
 8025c72:	3e01      	subs	r6, #1
 8025c74:	e7e4      	b.n	8025c40 <_puts_r+0x68>
 8025c76:	6823      	ldr	r3, [r4, #0]
 8025c78:	1c5a      	adds	r2, r3, #1
 8025c7a:	6022      	str	r2, [r4, #0]
 8025c7c:	220a      	movs	r2, #10
 8025c7e:	701a      	strb	r2, [r3, #0]
 8025c80:	e7ee      	b.n	8025c60 <_puts_r+0x88>
	...

08025c84 <puts>:
 8025c84:	4b02      	ldr	r3, [pc, #8]	@ (8025c90 <puts+0xc>)
 8025c86:	4601      	mov	r1, r0
 8025c88:	6818      	ldr	r0, [r3, #0]
 8025c8a:	f7ff bfa5 	b.w	8025bd8 <_puts_r>
 8025c8e:	bf00      	nop
 8025c90:	240000a8 	.word	0x240000a8

08025c94 <__sread>:
 8025c94:	b510      	push	{r4, lr}
 8025c96:	460c      	mov	r4, r1
 8025c98:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8025c9c:	f000 f92c 	bl	8025ef8 <_read_r>
 8025ca0:	2800      	cmp	r0, #0
 8025ca2:	bfab      	itete	ge
 8025ca4:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8025ca6:	89a3      	ldrhlt	r3, [r4, #12]
 8025ca8:	181b      	addge	r3, r3, r0
 8025caa:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8025cae:	bfac      	ite	ge
 8025cb0:	6563      	strge	r3, [r4, #84]	@ 0x54
 8025cb2:	81a3      	strhlt	r3, [r4, #12]
 8025cb4:	bd10      	pop	{r4, pc}

08025cb6 <__swrite>:
 8025cb6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8025cba:	461f      	mov	r7, r3
 8025cbc:	898b      	ldrh	r3, [r1, #12]
 8025cbe:	05db      	lsls	r3, r3, #23
 8025cc0:	4605      	mov	r5, r0
 8025cc2:	460c      	mov	r4, r1
 8025cc4:	4616      	mov	r6, r2
 8025cc6:	d505      	bpl.n	8025cd4 <__swrite+0x1e>
 8025cc8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8025ccc:	2302      	movs	r3, #2
 8025cce:	2200      	movs	r2, #0
 8025cd0:	f000 f900 	bl	8025ed4 <_lseek_r>
 8025cd4:	89a3      	ldrh	r3, [r4, #12]
 8025cd6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8025cda:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8025cde:	81a3      	strh	r3, [r4, #12]
 8025ce0:	4632      	mov	r2, r6
 8025ce2:	463b      	mov	r3, r7
 8025ce4:	4628      	mov	r0, r5
 8025ce6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8025cea:	f000 b93b 	b.w	8025f64 <_write_r>

08025cee <__sseek>:
 8025cee:	b510      	push	{r4, lr}
 8025cf0:	460c      	mov	r4, r1
 8025cf2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8025cf6:	f000 f8ed 	bl	8025ed4 <_lseek_r>
 8025cfa:	1c43      	adds	r3, r0, #1
 8025cfc:	89a3      	ldrh	r3, [r4, #12]
 8025cfe:	bf15      	itete	ne
 8025d00:	6560      	strne	r0, [r4, #84]	@ 0x54
 8025d02:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8025d06:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8025d0a:	81a3      	strheq	r3, [r4, #12]
 8025d0c:	bf18      	it	ne
 8025d0e:	81a3      	strhne	r3, [r4, #12]
 8025d10:	bd10      	pop	{r4, pc}

08025d12 <__sclose>:
 8025d12:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8025d16:	f000 b8cd 	b.w	8025eb4 <_close_r>

08025d1a <__swbuf_r>:
 8025d1a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8025d1c:	460e      	mov	r6, r1
 8025d1e:	4614      	mov	r4, r2
 8025d20:	4605      	mov	r5, r0
 8025d22:	b118      	cbz	r0, 8025d2c <__swbuf_r+0x12>
 8025d24:	6a03      	ldr	r3, [r0, #32]
 8025d26:	b90b      	cbnz	r3, 8025d2c <__swbuf_r+0x12>
 8025d28:	f7ff fefc 	bl	8025b24 <__sinit>
 8025d2c:	69a3      	ldr	r3, [r4, #24]
 8025d2e:	60a3      	str	r3, [r4, #8]
 8025d30:	89a3      	ldrh	r3, [r4, #12]
 8025d32:	071a      	lsls	r2, r3, #28
 8025d34:	d501      	bpl.n	8025d3a <__swbuf_r+0x20>
 8025d36:	6923      	ldr	r3, [r4, #16]
 8025d38:	b943      	cbnz	r3, 8025d4c <__swbuf_r+0x32>
 8025d3a:	4621      	mov	r1, r4
 8025d3c:	4628      	mov	r0, r5
 8025d3e:	f000 f82b 	bl	8025d98 <__swsetup_r>
 8025d42:	b118      	cbz	r0, 8025d4c <__swbuf_r+0x32>
 8025d44:	f04f 37ff 	mov.w	r7, #4294967295
 8025d48:	4638      	mov	r0, r7
 8025d4a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8025d4c:	6823      	ldr	r3, [r4, #0]
 8025d4e:	6922      	ldr	r2, [r4, #16]
 8025d50:	1a98      	subs	r0, r3, r2
 8025d52:	6963      	ldr	r3, [r4, #20]
 8025d54:	b2f6      	uxtb	r6, r6
 8025d56:	4283      	cmp	r3, r0
 8025d58:	4637      	mov	r7, r6
 8025d5a:	dc05      	bgt.n	8025d68 <__swbuf_r+0x4e>
 8025d5c:	4621      	mov	r1, r4
 8025d5e:	4628      	mov	r0, r5
 8025d60:	f000 fd48 	bl	80267f4 <_fflush_r>
 8025d64:	2800      	cmp	r0, #0
 8025d66:	d1ed      	bne.n	8025d44 <__swbuf_r+0x2a>
 8025d68:	68a3      	ldr	r3, [r4, #8]
 8025d6a:	3b01      	subs	r3, #1
 8025d6c:	60a3      	str	r3, [r4, #8]
 8025d6e:	6823      	ldr	r3, [r4, #0]
 8025d70:	1c5a      	adds	r2, r3, #1
 8025d72:	6022      	str	r2, [r4, #0]
 8025d74:	701e      	strb	r6, [r3, #0]
 8025d76:	6962      	ldr	r2, [r4, #20]
 8025d78:	1c43      	adds	r3, r0, #1
 8025d7a:	429a      	cmp	r2, r3
 8025d7c:	d004      	beq.n	8025d88 <__swbuf_r+0x6e>
 8025d7e:	89a3      	ldrh	r3, [r4, #12]
 8025d80:	07db      	lsls	r3, r3, #31
 8025d82:	d5e1      	bpl.n	8025d48 <__swbuf_r+0x2e>
 8025d84:	2e0a      	cmp	r6, #10
 8025d86:	d1df      	bne.n	8025d48 <__swbuf_r+0x2e>
 8025d88:	4621      	mov	r1, r4
 8025d8a:	4628      	mov	r0, r5
 8025d8c:	f000 fd32 	bl	80267f4 <_fflush_r>
 8025d90:	2800      	cmp	r0, #0
 8025d92:	d0d9      	beq.n	8025d48 <__swbuf_r+0x2e>
 8025d94:	e7d6      	b.n	8025d44 <__swbuf_r+0x2a>
	...

08025d98 <__swsetup_r>:
 8025d98:	b538      	push	{r3, r4, r5, lr}
 8025d9a:	4b29      	ldr	r3, [pc, #164]	@ (8025e40 <__swsetup_r+0xa8>)
 8025d9c:	4605      	mov	r5, r0
 8025d9e:	6818      	ldr	r0, [r3, #0]
 8025da0:	460c      	mov	r4, r1
 8025da2:	b118      	cbz	r0, 8025dac <__swsetup_r+0x14>
 8025da4:	6a03      	ldr	r3, [r0, #32]
 8025da6:	b90b      	cbnz	r3, 8025dac <__swsetup_r+0x14>
 8025da8:	f7ff febc 	bl	8025b24 <__sinit>
 8025dac:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8025db0:	0719      	lsls	r1, r3, #28
 8025db2:	d422      	bmi.n	8025dfa <__swsetup_r+0x62>
 8025db4:	06da      	lsls	r2, r3, #27
 8025db6:	d407      	bmi.n	8025dc8 <__swsetup_r+0x30>
 8025db8:	2209      	movs	r2, #9
 8025dba:	602a      	str	r2, [r5, #0]
 8025dbc:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8025dc0:	81a3      	strh	r3, [r4, #12]
 8025dc2:	f04f 30ff 	mov.w	r0, #4294967295
 8025dc6:	e033      	b.n	8025e30 <__swsetup_r+0x98>
 8025dc8:	0758      	lsls	r0, r3, #29
 8025dca:	d512      	bpl.n	8025df2 <__swsetup_r+0x5a>
 8025dcc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8025dce:	b141      	cbz	r1, 8025de2 <__swsetup_r+0x4a>
 8025dd0:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8025dd4:	4299      	cmp	r1, r3
 8025dd6:	d002      	beq.n	8025dde <__swsetup_r+0x46>
 8025dd8:	4628      	mov	r0, r5
 8025dda:	f000 f96d 	bl	80260b8 <_free_r>
 8025dde:	2300      	movs	r3, #0
 8025de0:	6363      	str	r3, [r4, #52]	@ 0x34
 8025de2:	89a3      	ldrh	r3, [r4, #12]
 8025de4:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8025de8:	81a3      	strh	r3, [r4, #12]
 8025dea:	2300      	movs	r3, #0
 8025dec:	6063      	str	r3, [r4, #4]
 8025dee:	6923      	ldr	r3, [r4, #16]
 8025df0:	6023      	str	r3, [r4, #0]
 8025df2:	89a3      	ldrh	r3, [r4, #12]
 8025df4:	f043 0308 	orr.w	r3, r3, #8
 8025df8:	81a3      	strh	r3, [r4, #12]
 8025dfa:	6923      	ldr	r3, [r4, #16]
 8025dfc:	b94b      	cbnz	r3, 8025e12 <__swsetup_r+0x7a>
 8025dfe:	89a3      	ldrh	r3, [r4, #12]
 8025e00:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8025e04:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8025e08:	d003      	beq.n	8025e12 <__swsetup_r+0x7a>
 8025e0a:	4621      	mov	r1, r4
 8025e0c:	4628      	mov	r0, r5
 8025e0e:	f000 fd3f 	bl	8026890 <__smakebuf_r>
 8025e12:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8025e16:	f013 0201 	ands.w	r2, r3, #1
 8025e1a:	d00a      	beq.n	8025e32 <__swsetup_r+0x9a>
 8025e1c:	2200      	movs	r2, #0
 8025e1e:	60a2      	str	r2, [r4, #8]
 8025e20:	6962      	ldr	r2, [r4, #20]
 8025e22:	4252      	negs	r2, r2
 8025e24:	61a2      	str	r2, [r4, #24]
 8025e26:	6922      	ldr	r2, [r4, #16]
 8025e28:	b942      	cbnz	r2, 8025e3c <__swsetup_r+0xa4>
 8025e2a:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8025e2e:	d1c5      	bne.n	8025dbc <__swsetup_r+0x24>
 8025e30:	bd38      	pop	{r3, r4, r5, pc}
 8025e32:	0799      	lsls	r1, r3, #30
 8025e34:	bf58      	it	pl
 8025e36:	6962      	ldrpl	r2, [r4, #20]
 8025e38:	60a2      	str	r2, [r4, #8]
 8025e3a:	e7f4      	b.n	8025e26 <__swsetup_r+0x8e>
 8025e3c:	2000      	movs	r0, #0
 8025e3e:	e7f7      	b.n	8025e30 <__swsetup_r+0x98>
 8025e40:	240000a8 	.word	0x240000a8

08025e44 <memset>:
 8025e44:	4402      	add	r2, r0
 8025e46:	4603      	mov	r3, r0
 8025e48:	4293      	cmp	r3, r2
 8025e4a:	d100      	bne.n	8025e4e <memset+0xa>
 8025e4c:	4770      	bx	lr
 8025e4e:	f803 1b01 	strb.w	r1, [r3], #1
 8025e52:	e7f9      	b.n	8025e48 <memset+0x4>

08025e54 <_raise_r>:
 8025e54:	291f      	cmp	r1, #31
 8025e56:	b538      	push	{r3, r4, r5, lr}
 8025e58:	4605      	mov	r5, r0
 8025e5a:	460c      	mov	r4, r1
 8025e5c:	d904      	bls.n	8025e68 <_raise_r+0x14>
 8025e5e:	2316      	movs	r3, #22
 8025e60:	6003      	str	r3, [r0, #0]
 8025e62:	f04f 30ff 	mov.w	r0, #4294967295
 8025e66:	bd38      	pop	{r3, r4, r5, pc}
 8025e68:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8025e6a:	b112      	cbz	r2, 8025e72 <_raise_r+0x1e>
 8025e6c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8025e70:	b94b      	cbnz	r3, 8025e86 <_raise_r+0x32>
 8025e72:	4628      	mov	r0, r5
 8025e74:	f000 f864 	bl	8025f40 <_getpid_r>
 8025e78:	4622      	mov	r2, r4
 8025e7a:	4601      	mov	r1, r0
 8025e7c:	4628      	mov	r0, r5
 8025e7e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8025e82:	f000 b84b 	b.w	8025f1c <_kill_r>
 8025e86:	2b01      	cmp	r3, #1
 8025e88:	d00a      	beq.n	8025ea0 <_raise_r+0x4c>
 8025e8a:	1c59      	adds	r1, r3, #1
 8025e8c:	d103      	bne.n	8025e96 <_raise_r+0x42>
 8025e8e:	2316      	movs	r3, #22
 8025e90:	6003      	str	r3, [r0, #0]
 8025e92:	2001      	movs	r0, #1
 8025e94:	e7e7      	b.n	8025e66 <_raise_r+0x12>
 8025e96:	2100      	movs	r1, #0
 8025e98:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 8025e9c:	4620      	mov	r0, r4
 8025e9e:	4798      	blx	r3
 8025ea0:	2000      	movs	r0, #0
 8025ea2:	e7e0      	b.n	8025e66 <_raise_r+0x12>

08025ea4 <raise>:
 8025ea4:	4b02      	ldr	r3, [pc, #8]	@ (8025eb0 <raise+0xc>)
 8025ea6:	4601      	mov	r1, r0
 8025ea8:	6818      	ldr	r0, [r3, #0]
 8025eaa:	f7ff bfd3 	b.w	8025e54 <_raise_r>
 8025eae:	bf00      	nop
 8025eb0:	240000a8 	.word	0x240000a8

08025eb4 <_close_r>:
 8025eb4:	b538      	push	{r3, r4, r5, lr}
 8025eb6:	4d06      	ldr	r5, [pc, #24]	@ (8025ed0 <_close_r+0x1c>)
 8025eb8:	2300      	movs	r3, #0
 8025eba:	4604      	mov	r4, r0
 8025ebc:	4608      	mov	r0, r1
 8025ebe:	602b      	str	r3, [r5, #0]
 8025ec0:	f7db fd40 	bl	8001944 <_close>
 8025ec4:	1c43      	adds	r3, r0, #1
 8025ec6:	d102      	bne.n	8025ece <_close_r+0x1a>
 8025ec8:	682b      	ldr	r3, [r5, #0]
 8025eca:	b103      	cbz	r3, 8025ece <_close_r+0x1a>
 8025ecc:	6023      	str	r3, [r4, #0]
 8025ece:	bd38      	pop	{r3, r4, r5, pc}
 8025ed0:	240025c8 	.word	0x240025c8

08025ed4 <_lseek_r>:
 8025ed4:	b538      	push	{r3, r4, r5, lr}
 8025ed6:	4d07      	ldr	r5, [pc, #28]	@ (8025ef4 <_lseek_r+0x20>)
 8025ed8:	4604      	mov	r4, r0
 8025eda:	4608      	mov	r0, r1
 8025edc:	4611      	mov	r1, r2
 8025ede:	2200      	movs	r2, #0
 8025ee0:	602a      	str	r2, [r5, #0]
 8025ee2:	461a      	mov	r2, r3
 8025ee4:	f7db fd55 	bl	8001992 <_lseek>
 8025ee8:	1c43      	adds	r3, r0, #1
 8025eea:	d102      	bne.n	8025ef2 <_lseek_r+0x1e>
 8025eec:	682b      	ldr	r3, [r5, #0]
 8025eee:	b103      	cbz	r3, 8025ef2 <_lseek_r+0x1e>
 8025ef0:	6023      	str	r3, [r4, #0]
 8025ef2:	bd38      	pop	{r3, r4, r5, pc}
 8025ef4:	240025c8 	.word	0x240025c8

08025ef8 <_read_r>:
 8025ef8:	b538      	push	{r3, r4, r5, lr}
 8025efa:	4d07      	ldr	r5, [pc, #28]	@ (8025f18 <_read_r+0x20>)
 8025efc:	4604      	mov	r4, r0
 8025efe:	4608      	mov	r0, r1
 8025f00:	4611      	mov	r1, r2
 8025f02:	2200      	movs	r2, #0
 8025f04:	602a      	str	r2, [r5, #0]
 8025f06:	461a      	mov	r2, r3
 8025f08:	f7db fceb 	bl	80018e2 <_read>
 8025f0c:	1c43      	adds	r3, r0, #1
 8025f0e:	d102      	bne.n	8025f16 <_read_r+0x1e>
 8025f10:	682b      	ldr	r3, [r5, #0]
 8025f12:	b103      	cbz	r3, 8025f16 <_read_r+0x1e>
 8025f14:	6023      	str	r3, [r4, #0]
 8025f16:	bd38      	pop	{r3, r4, r5, pc}
 8025f18:	240025c8 	.word	0x240025c8

08025f1c <_kill_r>:
 8025f1c:	b538      	push	{r3, r4, r5, lr}
 8025f1e:	4d07      	ldr	r5, [pc, #28]	@ (8025f3c <_kill_r+0x20>)
 8025f20:	2300      	movs	r3, #0
 8025f22:	4604      	mov	r4, r0
 8025f24:	4608      	mov	r0, r1
 8025f26:	4611      	mov	r1, r2
 8025f28:	602b      	str	r3, [r5, #0]
 8025f2a:	f7db fcbf 	bl	80018ac <_kill>
 8025f2e:	1c43      	adds	r3, r0, #1
 8025f30:	d102      	bne.n	8025f38 <_kill_r+0x1c>
 8025f32:	682b      	ldr	r3, [r5, #0]
 8025f34:	b103      	cbz	r3, 8025f38 <_kill_r+0x1c>
 8025f36:	6023      	str	r3, [r4, #0]
 8025f38:	bd38      	pop	{r3, r4, r5, pc}
 8025f3a:	bf00      	nop
 8025f3c:	240025c8 	.word	0x240025c8

08025f40 <_getpid_r>:
 8025f40:	f7db bcac 	b.w	800189c <_getpid>

08025f44 <_sbrk_r>:
 8025f44:	b538      	push	{r3, r4, r5, lr}
 8025f46:	4d06      	ldr	r5, [pc, #24]	@ (8025f60 <_sbrk_r+0x1c>)
 8025f48:	2300      	movs	r3, #0
 8025f4a:	4604      	mov	r4, r0
 8025f4c:	4608      	mov	r0, r1
 8025f4e:	602b      	str	r3, [r5, #0]
 8025f50:	f7db fd2c 	bl	80019ac <_sbrk>
 8025f54:	1c43      	adds	r3, r0, #1
 8025f56:	d102      	bne.n	8025f5e <_sbrk_r+0x1a>
 8025f58:	682b      	ldr	r3, [r5, #0]
 8025f5a:	b103      	cbz	r3, 8025f5e <_sbrk_r+0x1a>
 8025f5c:	6023      	str	r3, [r4, #0]
 8025f5e:	bd38      	pop	{r3, r4, r5, pc}
 8025f60:	240025c8 	.word	0x240025c8

08025f64 <_write_r>:
 8025f64:	b538      	push	{r3, r4, r5, lr}
 8025f66:	4d07      	ldr	r5, [pc, #28]	@ (8025f84 <_write_r+0x20>)
 8025f68:	4604      	mov	r4, r0
 8025f6a:	4608      	mov	r0, r1
 8025f6c:	4611      	mov	r1, r2
 8025f6e:	2200      	movs	r2, #0
 8025f70:	602a      	str	r2, [r5, #0]
 8025f72:	461a      	mov	r2, r3
 8025f74:	f7db fcd2 	bl	800191c <_write>
 8025f78:	1c43      	adds	r3, r0, #1
 8025f7a:	d102      	bne.n	8025f82 <_write_r+0x1e>
 8025f7c:	682b      	ldr	r3, [r5, #0]
 8025f7e:	b103      	cbz	r3, 8025f82 <_write_r+0x1e>
 8025f80:	6023      	str	r3, [r4, #0]
 8025f82:	bd38      	pop	{r3, r4, r5, pc}
 8025f84:	240025c8 	.word	0x240025c8

08025f88 <__errno>:
 8025f88:	4b01      	ldr	r3, [pc, #4]	@ (8025f90 <__errno+0x8>)
 8025f8a:	6818      	ldr	r0, [r3, #0]
 8025f8c:	4770      	bx	lr
 8025f8e:	bf00      	nop
 8025f90:	240000a8 	.word	0x240000a8

08025f94 <__libc_init_array>:
 8025f94:	b570      	push	{r4, r5, r6, lr}
 8025f96:	4d0d      	ldr	r5, [pc, #52]	@ (8025fcc <__libc_init_array+0x38>)
 8025f98:	4c0d      	ldr	r4, [pc, #52]	@ (8025fd0 <__libc_init_array+0x3c>)
 8025f9a:	1b64      	subs	r4, r4, r5
 8025f9c:	10a4      	asrs	r4, r4, #2
 8025f9e:	2600      	movs	r6, #0
 8025fa0:	42a6      	cmp	r6, r4
 8025fa2:	d109      	bne.n	8025fb8 <__libc_init_array+0x24>
 8025fa4:	4d0b      	ldr	r5, [pc, #44]	@ (8025fd4 <__libc_init_array+0x40>)
 8025fa6:	4c0c      	ldr	r4, [pc, #48]	@ (8025fd8 <__libc_init_array+0x44>)
 8025fa8:	f000 fcd0 	bl	802694c <_init>
 8025fac:	1b64      	subs	r4, r4, r5
 8025fae:	10a4      	asrs	r4, r4, #2
 8025fb0:	2600      	movs	r6, #0
 8025fb2:	42a6      	cmp	r6, r4
 8025fb4:	d105      	bne.n	8025fc2 <__libc_init_array+0x2e>
 8025fb6:	bd70      	pop	{r4, r5, r6, pc}
 8025fb8:	f855 3b04 	ldr.w	r3, [r5], #4
 8025fbc:	4798      	blx	r3
 8025fbe:	3601      	adds	r6, #1
 8025fc0:	e7ee      	b.n	8025fa0 <__libc_init_array+0xc>
 8025fc2:	f855 3b04 	ldr.w	r3, [r5], #4
 8025fc6:	4798      	blx	r3
 8025fc8:	3601      	adds	r6, #1
 8025fca:	e7f2      	b.n	8025fb2 <__libc_init_array+0x1e>
 8025fcc:	08028cd0 	.word	0x08028cd0
 8025fd0:	08028cd0 	.word	0x08028cd0
 8025fd4:	08028cd0 	.word	0x08028cd0
 8025fd8:	08028ce4 	.word	0x08028ce4

08025fdc <__retarget_lock_init_recursive>:
 8025fdc:	4770      	bx	lr

08025fde <__retarget_lock_acquire_recursive>:
 8025fde:	4770      	bx	lr

08025fe0 <__retarget_lock_release_recursive>:
 8025fe0:	4770      	bx	lr

08025fe2 <memcpy>:
 8025fe2:	440a      	add	r2, r1
 8025fe4:	4291      	cmp	r1, r2
 8025fe6:	f100 33ff 	add.w	r3, r0, #4294967295
 8025fea:	d100      	bne.n	8025fee <memcpy+0xc>
 8025fec:	4770      	bx	lr
 8025fee:	b510      	push	{r4, lr}
 8025ff0:	f811 4b01 	ldrb.w	r4, [r1], #1
 8025ff4:	f803 4f01 	strb.w	r4, [r3, #1]!
 8025ff8:	4291      	cmp	r1, r2
 8025ffa:	d1f9      	bne.n	8025ff0 <memcpy+0xe>
 8025ffc:	bd10      	pop	{r4, pc}
	...

08026000 <__register_exitproc>:
 8026000:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8026004:	4d27      	ldr	r5, [pc, #156]	@ (80260a4 <__register_exitproc+0xa4>)
 8026006:	4607      	mov	r7, r0
 8026008:	6828      	ldr	r0, [r5, #0]
 802600a:	4691      	mov	r9, r2
 802600c:	460e      	mov	r6, r1
 802600e:	4698      	mov	r8, r3
 8026010:	f7ff ffe5 	bl	8025fde <__retarget_lock_acquire_recursive>
 8026014:	4a24      	ldr	r2, [pc, #144]	@ (80260a8 <__register_exitproc+0xa8>)
 8026016:	6814      	ldr	r4, [r2, #0]
 8026018:	b93c      	cbnz	r4, 802602a <__register_exitproc+0x2a>
 802601a:	4b24      	ldr	r3, [pc, #144]	@ (80260ac <__register_exitproc+0xac>)
 802601c:	6013      	str	r3, [r2, #0]
 802601e:	4a24      	ldr	r2, [pc, #144]	@ (80260b0 <__register_exitproc+0xb0>)
 8026020:	b112      	cbz	r2, 8026028 <__register_exitproc+0x28>
 8026022:	6812      	ldr	r2, [r2, #0]
 8026024:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8026028:	4c20      	ldr	r4, [pc, #128]	@ (80260ac <__register_exitproc+0xac>)
 802602a:	6863      	ldr	r3, [r4, #4]
 802602c:	2b1f      	cmp	r3, #31
 802602e:	dd06      	ble.n	802603e <__register_exitproc+0x3e>
 8026030:	6828      	ldr	r0, [r5, #0]
 8026032:	f7ff ffd5 	bl	8025fe0 <__retarget_lock_release_recursive>
 8026036:	f04f 30ff 	mov.w	r0, #4294967295
 802603a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802603e:	b32f      	cbz	r7, 802608c <__register_exitproc+0x8c>
 8026040:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 8026044:	b968      	cbnz	r0, 8026062 <__register_exitproc+0x62>
 8026046:	4b1b      	ldr	r3, [pc, #108]	@ (80260b4 <__register_exitproc+0xb4>)
 8026048:	2b00      	cmp	r3, #0
 802604a:	d0f1      	beq.n	8026030 <__register_exitproc+0x30>
 802604c:	f44f 7084 	mov.w	r0, #264	@ 0x108
 8026050:	f7ff fc10 	bl	8025874 <malloc>
 8026054:	2800      	cmp	r0, #0
 8026056:	d0eb      	beq.n	8026030 <__register_exitproc+0x30>
 8026058:	2300      	movs	r3, #0
 802605a:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 802605e:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 8026062:	6863      	ldr	r3, [r4, #4]
 8026064:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8026068:	2201      	movs	r2, #1
 802606a:	409a      	lsls	r2, r3
 802606c:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8026070:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 8026074:	4313      	orrs	r3, r2
 8026076:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 802607a:	2f02      	cmp	r7, #2
 802607c:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 8026080:	bf02      	ittt	eq
 8026082:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 8026086:	4313      	orreq	r3, r2
 8026088:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 802608c:	6863      	ldr	r3, [r4, #4]
 802608e:	6828      	ldr	r0, [r5, #0]
 8026090:	1c5a      	adds	r2, r3, #1
 8026092:	3302      	adds	r3, #2
 8026094:	6062      	str	r2, [r4, #4]
 8026096:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 802609a:	f7ff ffa1 	bl	8025fe0 <__retarget_lock_release_recursive>
 802609e:	2000      	movs	r0, #0
 80260a0:	e7cb      	b.n	802603a <__register_exitproc+0x3a>
 80260a2:	bf00      	nop
 80260a4:	240000f8 	.word	0x240000f8
 80260a8:	2400265c 	.word	0x2400265c
 80260ac:	240025d0 	.word	0x240025d0
 80260b0:	08028bf8 	.word	0x08028bf8
 80260b4:	08025875 	.word	0x08025875

080260b8 <_free_r>:
 80260b8:	b538      	push	{r3, r4, r5, lr}
 80260ba:	4605      	mov	r5, r0
 80260bc:	2900      	cmp	r1, #0
 80260be:	d041      	beq.n	8026144 <_free_r+0x8c>
 80260c0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80260c4:	1f0c      	subs	r4, r1, #4
 80260c6:	2b00      	cmp	r3, #0
 80260c8:	bfb8      	it	lt
 80260ca:	18e4      	addlt	r4, r4, r3
 80260cc:	f7ff fc84 	bl	80259d8 <__malloc_lock>
 80260d0:	4a1d      	ldr	r2, [pc, #116]	@ (8026148 <_free_r+0x90>)
 80260d2:	6813      	ldr	r3, [r2, #0]
 80260d4:	b933      	cbnz	r3, 80260e4 <_free_r+0x2c>
 80260d6:	6063      	str	r3, [r4, #4]
 80260d8:	6014      	str	r4, [r2, #0]
 80260da:	4628      	mov	r0, r5
 80260dc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80260e0:	f7ff bc80 	b.w	80259e4 <__malloc_unlock>
 80260e4:	42a3      	cmp	r3, r4
 80260e6:	d908      	bls.n	80260fa <_free_r+0x42>
 80260e8:	6820      	ldr	r0, [r4, #0]
 80260ea:	1821      	adds	r1, r4, r0
 80260ec:	428b      	cmp	r3, r1
 80260ee:	bf01      	itttt	eq
 80260f0:	6819      	ldreq	r1, [r3, #0]
 80260f2:	685b      	ldreq	r3, [r3, #4]
 80260f4:	1809      	addeq	r1, r1, r0
 80260f6:	6021      	streq	r1, [r4, #0]
 80260f8:	e7ed      	b.n	80260d6 <_free_r+0x1e>
 80260fa:	461a      	mov	r2, r3
 80260fc:	685b      	ldr	r3, [r3, #4]
 80260fe:	b10b      	cbz	r3, 8026104 <_free_r+0x4c>
 8026100:	42a3      	cmp	r3, r4
 8026102:	d9fa      	bls.n	80260fa <_free_r+0x42>
 8026104:	6811      	ldr	r1, [r2, #0]
 8026106:	1850      	adds	r0, r2, r1
 8026108:	42a0      	cmp	r0, r4
 802610a:	d10b      	bne.n	8026124 <_free_r+0x6c>
 802610c:	6820      	ldr	r0, [r4, #0]
 802610e:	4401      	add	r1, r0
 8026110:	1850      	adds	r0, r2, r1
 8026112:	4283      	cmp	r3, r0
 8026114:	6011      	str	r1, [r2, #0]
 8026116:	d1e0      	bne.n	80260da <_free_r+0x22>
 8026118:	6818      	ldr	r0, [r3, #0]
 802611a:	685b      	ldr	r3, [r3, #4]
 802611c:	6053      	str	r3, [r2, #4]
 802611e:	4408      	add	r0, r1
 8026120:	6010      	str	r0, [r2, #0]
 8026122:	e7da      	b.n	80260da <_free_r+0x22>
 8026124:	d902      	bls.n	802612c <_free_r+0x74>
 8026126:	230c      	movs	r3, #12
 8026128:	602b      	str	r3, [r5, #0]
 802612a:	e7d6      	b.n	80260da <_free_r+0x22>
 802612c:	6820      	ldr	r0, [r4, #0]
 802612e:	1821      	adds	r1, r4, r0
 8026130:	428b      	cmp	r3, r1
 8026132:	bf04      	itt	eq
 8026134:	6819      	ldreq	r1, [r3, #0]
 8026136:	685b      	ldreq	r3, [r3, #4]
 8026138:	6063      	str	r3, [r4, #4]
 802613a:	bf04      	itt	eq
 802613c:	1809      	addeq	r1, r1, r0
 802613e:	6021      	streq	r1, [r4, #0]
 8026140:	6054      	str	r4, [r2, #4]
 8026142:	e7ca      	b.n	80260da <_free_r+0x22>
 8026144:	bd38      	pop	{r3, r4, r5, pc}
 8026146:	bf00      	nop
 8026148:	24002488 	.word	0x24002488

0802614c <__sfputc_r>:
 802614c:	6893      	ldr	r3, [r2, #8]
 802614e:	3b01      	subs	r3, #1
 8026150:	2b00      	cmp	r3, #0
 8026152:	b410      	push	{r4}
 8026154:	6093      	str	r3, [r2, #8]
 8026156:	da08      	bge.n	802616a <__sfputc_r+0x1e>
 8026158:	6994      	ldr	r4, [r2, #24]
 802615a:	42a3      	cmp	r3, r4
 802615c:	db01      	blt.n	8026162 <__sfputc_r+0x16>
 802615e:	290a      	cmp	r1, #10
 8026160:	d103      	bne.n	802616a <__sfputc_r+0x1e>
 8026162:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026166:	f7ff bdd8 	b.w	8025d1a <__swbuf_r>
 802616a:	6813      	ldr	r3, [r2, #0]
 802616c:	1c58      	adds	r0, r3, #1
 802616e:	6010      	str	r0, [r2, #0]
 8026170:	7019      	strb	r1, [r3, #0]
 8026172:	4608      	mov	r0, r1
 8026174:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026178:	4770      	bx	lr

0802617a <__sfputs_r>:
 802617a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802617c:	4606      	mov	r6, r0
 802617e:	460f      	mov	r7, r1
 8026180:	4614      	mov	r4, r2
 8026182:	18d5      	adds	r5, r2, r3
 8026184:	42ac      	cmp	r4, r5
 8026186:	d101      	bne.n	802618c <__sfputs_r+0x12>
 8026188:	2000      	movs	r0, #0
 802618a:	e007      	b.n	802619c <__sfputs_r+0x22>
 802618c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8026190:	463a      	mov	r2, r7
 8026192:	4630      	mov	r0, r6
 8026194:	f7ff ffda 	bl	802614c <__sfputc_r>
 8026198:	1c43      	adds	r3, r0, #1
 802619a:	d1f3      	bne.n	8026184 <__sfputs_r+0xa>
 802619c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080261a0 <_vfiprintf_r>:
 80261a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80261a4:	460d      	mov	r5, r1
 80261a6:	b09d      	sub	sp, #116	@ 0x74
 80261a8:	4614      	mov	r4, r2
 80261aa:	4698      	mov	r8, r3
 80261ac:	4606      	mov	r6, r0
 80261ae:	b118      	cbz	r0, 80261b8 <_vfiprintf_r+0x18>
 80261b0:	6a03      	ldr	r3, [r0, #32]
 80261b2:	b90b      	cbnz	r3, 80261b8 <_vfiprintf_r+0x18>
 80261b4:	f7ff fcb6 	bl	8025b24 <__sinit>
 80261b8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80261ba:	07d9      	lsls	r1, r3, #31
 80261bc:	d405      	bmi.n	80261ca <_vfiprintf_r+0x2a>
 80261be:	89ab      	ldrh	r3, [r5, #12]
 80261c0:	059a      	lsls	r2, r3, #22
 80261c2:	d402      	bmi.n	80261ca <_vfiprintf_r+0x2a>
 80261c4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80261c6:	f7ff ff0a 	bl	8025fde <__retarget_lock_acquire_recursive>
 80261ca:	89ab      	ldrh	r3, [r5, #12]
 80261cc:	071b      	lsls	r3, r3, #28
 80261ce:	d501      	bpl.n	80261d4 <_vfiprintf_r+0x34>
 80261d0:	692b      	ldr	r3, [r5, #16]
 80261d2:	b99b      	cbnz	r3, 80261fc <_vfiprintf_r+0x5c>
 80261d4:	4629      	mov	r1, r5
 80261d6:	4630      	mov	r0, r6
 80261d8:	f7ff fdde 	bl	8025d98 <__swsetup_r>
 80261dc:	b170      	cbz	r0, 80261fc <_vfiprintf_r+0x5c>
 80261de:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80261e0:	07dc      	lsls	r4, r3, #31
 80261e2:	d504      	bpl.n	80261ee <_vfiprintf_r+0x4e>
 80261e4:	f04f 30ff 	mov.w	r0, #4294967295
 80261e8:	b01d      	add	sp, #116	@ 0x74
 80261ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80261ee:	89ab      	ldrh	r3, [r5, #12]
 80261f0:	0598      	lsls	r0, r3, #22
 80261f2:	d4f7      	bmi.n	80261e4 <_vfiprintf_r+0x44>
 80261f4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80261f6:	f7ff fef3 	bl	8025fe0 <__retarget_lock_release_recursive>
 80261fa:	e7f3      	b.n	80261e4 <_vfiprintf_r+0x44>
 80261fc:	2300      	movs	r3, #0
 80261fe:	9309      	str	r3, [sp, #36]	@ 0x24
 8026200:	2320      	movs	r3, #32
 8026202:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8026206:	f8cd 800c 	str.w	r8, [sp, #12]
 802620a:	2330      	movs	r3, #48	@ 0x30
 802620c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 80263bc <_vfiprintf_r+0x21c>
 8026210:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8026214:	f04f 0901 	mov.w	r9, #1
 8026218:	4623      	mov	r3, r4
 802621a:	469a      	mov	sl, r3
 802621c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8026220:	b10a      	cbz	r2, 8026226 <_vfiprintf_r+0x86>
 8026222:	2a25      	cmp	r2, #37	@ 0x25
 8026224:	d1f9      	bne.n	802621a <_vfiprintf_r+0x7a>
 8026226:	ebba 0b04 	subs.w	fp, sl, r4
 802622a:	d00b      	beq.n	8026244 <_vfiprintf_r+0xa4>
 802622c:	465b      	mov	r3, fp
 802622e:	4622      	mov	r2, r4
 8026230:	4629      	mov	r1, r5
 8026232:	4630      	mov	r0, r6
 8026234:	f7ff ffa1 	bl	802617a <__sfputs_r>
 8026238:	3001      	adds	r0, #1
 802623a:	f000 80a7 	beq.w	802638c <_vfiprintf_r+0x1ec>
 802623e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8026240:	445a      	add	r2, fp
 8026242:	9209      	str	r2, [sp, #36]	@ 0x24
 8026244:	f89a 3000 	ldrb.w	r3, [sl]
 8026248:	2b00      	cmp	r3, #0
 802624a:	f000 809f 	beq.w	802638c <_vfiprintf_r+0x1ec>
 802624e:	2300      	movs	r3, #0
 8026250:	f04f 32ff 	mov.w	r2, #4294967295
 8026254:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8026258:	f10a 0a01 	add.w	sl, sl, #1
 802625c:	9304      	str	r3, [sp, #16]
 802625e:	9307      	str	r3, [sp, #28]
 8026260:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8026264:	931a      	str	r3, [sp, #104]	@ 0x68
 8026266:	4654      	mov	r4, sl
 8026268:	2205      	movs	r2, #5
 802626a:	f814 1b01 	ldrb.w	r1, [r4], #1
 802626e:	4853      	ldr	r0, [pc, #332]	@ (80263bc <_vfiprintf_r+0x21c>)
 8026270:	f7da f84e 	bl	8000310 <memchr>
 8026274:	9a04      	ldr	r2, [sp, #16]
 8026276:	b9d8      	cbnz	r0, 80262b0 <_vfiprintf_r+0x110>
 8026278:	06d1      	lsls	r1, r2, #27
 802627a:	bf44      	itt	mi
 802627c:	2320      	movmi	r3, #32
 802627e:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8026282:	0713      	lsls	r3, r2, #28
 8026284:	bf44      	itt	mi
 8026286:	232b      	movmi	r3, #43	@ 0x2b
 8026288:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 802628c:	f89a 3000 	ldrb.w	r3, [sl]
 8026290:	2b2a      	cmp	r3, #42	@ 0x2a
 8026292:	d015      	beq.n	80262c0 <_vfiprintf_r+0x120>
 8026294:	9a07      	ldr	r2, [sp, #28]
 8026296:	4654      	mov	r4, sl
 8026298:	2000      	movs	r0, #0
 802629a:	f04f 0c0a 	mov.w	ip, #10
 802629e:	4621      	mov	r1, r4
 80262a0:	f811 3b01 	ldrb.w	r3, [r1], #1
 80262a4:	3b30      	subs	r3, #48	@ 0x30
 80262a6:	2b09      	cmp	r3, #9
 80262a8:	d94b      	bls.n	8026342 <_vfiprintf_r+0x1a2>
 80262aa:	b1b0      	cbz	r0, 80262da <_vfiprintf_r+0x13a>
 80262ac:	9207      	str	r2, [sp, #28]
 80262ae:	e014      	b.n	80262da <_vfiprintf_r+0x13a>
 80262b0:	eba0 0308 	sub.w	r3, r0, r8
 80262b4:	fa09 f303 	lsl.w	r3, r9, r3
 80262b8:	4313      	orrs	r3, r2
 80262ba:	9304      	str	r3, [sp, #16]
 80262bc:	46a2      	mov	sl, r4
 80262be:	e7d2      	b.n	8026266 <_vfiprintf_r+0xc6>
 80262c0:	9b03      	ldr	r3, [sp, #12]
 80262c2:	1d19      	adds	r1, r3, #4
 80262c4:	681b      	ldr	r3, [r3, #0]
 80262c6:	9103      	str	r1, [sp, #12]
 80262c8:	2b00      	cmp	r3, #0
 80262ca:	bfbb      	ittet	lt
 80262cc:	425b      	neglt	r3, r3
 80262ce:	f042 0202 	orrlt.w	r2, r2, #2
 80262d2:	9307      	strge	r3, [sp, #28]
 80262d4:	9307      	strlt	r3, [sp, #28]
 80262d6:	bfb8      	it	lt
 80262d8:	9204      	strlt	r2, [sp, #16]
 80262da:	7823      	ldrb	r3, [r4, #0]
 80262dc:	2b2e      	cmp	r3, #46	@ 0x2e
 80262de:	d10a      	bne.n	80262f6 <_vfiprintf_r+0x156>
 80262e0:	7863      	ldrb	r3, [r4, #1]
 80262e2:	2b2a      	cmp	r3, #42	@ 0x2a
 80262e4:	d132      	bne.n	802634c <_vfiprintf_r+0x1ac>
 80262e6:	9b03      	ldr	r3, [sp, #12]
 80262e8:	1d1a      	adds	r2, r3, #4
 80262ea:	681b      	ldr	r3, [r3, #0]
 80262ec:	9203      	str	r2, [sp, #12]
 80262ee:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 80262f2:	3402      	adds	r4, #2
 80262f4:	9305      	str	r3, [sp, #20]
 80262f6:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 80263cc <_vfiprintf_r+0x22c>
 80262fa:	7821      	ldrb	r1, [r4, #0]
 80262fc:	2203      	movs	r2, #3
 80262fe:	4650      	mov	r0, sl
 8026300:	f7da f806 	bl	8000310 <memchr>
 8026304:	b138      	cbz	r0, 8026316 <_vfiprintf_r+0x176>
 8026306:	9b04      	ldr	r3, [sp, #16]
 8026308:	eba0 000a 	sub.w	r0, r0, sl
 802630c:	2240      	movs	r2, #64	@ 0x40
 802630e:	4082      	lsls	r2, r0
 8026310:	4313      	orrs	r3, r2
 8026312:	3401      	adds	r4, #1
 8026314:	9304      	str	r3, [sp, #16]
 8026316:	f814 1b01 	ldrb.w	r1, [r4], #1
 802631a:	4829      	ldr	r0, [pc, #164]	@ (80263c0 <_vfiprintf_r+0x220>)
 802631c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8026320:	2206      	movs	r2, #6
 8026322:	f7d9 fff5 	bl	8000310 <memchr>
 8026326:	2800      	cmp	r0, #0
 8026328:	d03f      	beq.n	80263aa <_vfiprintf_r+0x20a>
 802632a:	4b26      	ldr	r3, [pc, #152]	@ (80263c4 <_vfiprintf_r+0x224>)
 802632c:	bb1b      	cbnz	r3, 8026376 <_vfiprintf_r+0x1d6>
 802632e:	9b03      	ldr	r3, [sp, #12]
 8026330:	3307      	adds	r3, #7
 8026332:	f023 0307 	bic.w	r3, r3, #7
 8026336:	3308      	adds	r3, #8
 8026338:	9303      	str	r3, [sp, #12]
 802633a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802633c:	443b      	add	r3, r7
 802633e:	9309      	str	r3, [sp, #36]	@ 0x24
 8026340:	e76a      	b.n	8026218 <_vfiprintf_r+0x78>
 8026342:	fb0c 3202 	mla	r2, ip, r2, r3
 8026346:	460c      	mov	r4, r1
 8026348:	2001      	movs	r0, #1
 802634a:	e7a8      	b.n	802629e <_vfiprintf_r+0xfe>
 802634c:	2300      	movs	r3, #0
 802634e:	3401      	adds	r4, #1
 8026350:	9305      	str	r3, [sp, #20]
 8026352:	4619      	mov	r1, r3
 8026354:	f04f 0c0a 	mov.w	ip, #10
 8026358:	4620      	mov	r0, r4
 802635a:	f810 2b01 	ldrb.w	r2, [r0], #1
 802635e:	3a30      	subs	r2, #48	@ 0x30
 8026360:	2a09      	cmp	r2, #9
 8026362:	d903      	bls.n	802636c <_vfiprintf_r+0x1cc>
 8026364:	2b00      	cmp	r3, #0
 8026366:	d0c6      	beq.n	80262f6 <_vfiprintf_r+0x156>
 8026368:	9105      	str	r1, [sp, #20]
 802636a:	e7c4      	b.n	80262f6 <_vfiprintf_r+0x156>
 802636c:	fb0c 2101 	mla	r1, ip, r1, r2
 8026370:	4604      	mov	r4, r0
 8026372:	2301      	movs	r3, #1
 8026374:	e7f0      	b.n	8026358 <_vfiprintf_r+0x1b8>
 8026376:	ab03      	add	r3, sp, #12
 8026378:	9300      	str	r3, [sp, #0]
 802637a:	462a      	mov	r2, r5
 802637c:	4b12      	ldr	r3, [pc, #72]	@ (80263c8 <_vfiprintf_r+0x228>)
 802637e:	a904      	add	r1, sp, #16
 8026380:	4630      	mov	r0, r6
 8026382:	f3af 8000 	nop.w
 8026386:	4607      	mov	r7, r0
 8026388:	1c78      	adds	r0, r7, #1
 802638a:	d1d6      	bne.n	802633a <_vfiprintf_r+0x19a>
 802638c:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 802638e:	07d9      	lsls	r1, r3, #31
 8026390:	d405      	bmi.n	802639e <_vfiprintf_r+0x1fe>
 8026392:	89ab      	ldrh	r3, [r5, #12]
 8026394:	059a      	lsls	r2, r3, #22
 8026396:	d402      	bmi.n	802639e <_vfiprintf_r+0x1fe>
 8026398:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 802639a:	f7ff fe21 	bl	8025fe0 <__retarget_lock_release_recursive>
 802639e:	89ab      	ldrh	r3, [r5, #12]
 80263a0:	065b      	lsls	r3, r3, #25
 80263a2:	f53f af1f 	bmi.w	80261e4 <_vfiprintf_r+0x44>
 80263a6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80263a8:	e71e      	b.n	80261e8 <_vfiprintf_r+0x48>
 80263aa:	ab03      	add	r3, sp, #12
 80263ac:	9300      	str	r3, [sp, #0]
 80263ae:	462a      	mov	r2, r5
 80263b0:	4b05      	ldr	r3, [pc, #20]	@ (80263c8 <_vfiprintf_r+0x228>)
 80263b2:	a904      	add	r1, sp, #16
 80263b4:	4630      	mov	r0, r6
 80263b6:	f000 f879 	bl	80264ac <_printf_i>
 80263ba:	e7e4      	b.n	8026386 <_vfiprintf_r+0x1e6>
 80263bc:	08028bfc 	.word	0x08028bfc
 80263c0:	08028c06 	.word	0x08028c06
 80263c4:	00000000 	.word	0x00000000
 80263c8:	0802617b 	.word	0x0802617b
 80263cc:	08028c02 	.word	0x08028c02

080263d0 <_printf_common>:
 80263d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80263d4:	4616      	mov	r6, r2
 80263d6:	4698      	mov	r8, r3
 80263d8:	688a      	ldr	r2, [r1, #8]
 80263da:	690b      	ldr	r3, [r1, #16]
 80263dc:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80263e0:	4293      	cmp	r3, r2
 80263e2:	bfb8      	it	lt
 80263e4:	4613      	movlt	r3, r2
 80263e6:	6033      	str	r3, [r6, #0]
 80263e8:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 80263ec:	4607      	mov	r7, r0
 80263ee:	460c      	mov	r4, r1
 80263f0:	b10a      	cbz	r2, 80263f6 <_printf_common+0x26>
 80263f2:	3301      	adds	r3, #1
 80263f4:	6033      	str	r3, [r6, #0]
 80263f6:	6823      	ldr	r3, [r4, #0]
 80263f8:	0699      	lsls	r1, r3, #26
 80263fa:	bf42      	ittt	mi
 80263fc:	6833      	ldrmi	r3, [r6, #0]
 80263fe:	3302      	addmi	r3, #2
 8026400:	6033      	strmi	r3, [r6, #0]
 8026402:	6825      	ldr	r5, [r4, #0]
 8026404:	f015 0506 	ands.w	r5, r5, #6
 8026408:	d106      	bne.n	8026418 <_printf_common+0x48>
 802640a:	f104 0a19 	add.w	sl, r4, #25
 802640e:	68e3      	ldr	r3, [r4, #12]
 8026410:	6832      	ldr	r2, [r6, #0]
 8026412:	1a9b      	subs	r3, r3, r2
 8026414:	42ab      	cmp	r3, r5
 8026416:	dc26      	bgt.n	8026466 <_printf_common+0x96>
 8026418:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 802641c:	6822      	ldr	r2, [r4, #0]
 802641e:	3b00      	subs	r3, #0
 8026420:	bf18      	it	ne
 8026422:	2301      	movne	r3, #1
 8026424:	0692      	lsls	r2, r2, #26
 8026426:	d42b      	bmi.n	8026480 <_printf_common+0xb0>
 8026428:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 802642c:	4641      	mov	r1, r8
 802642e:	4638      	mov	r0, r7
 8026430:	47c8      	blx	r9
 8026432:	3001      	adds	r0, #1
 8026434:	d01e      	beq.n	8026474 <_printf_common+0xa4>
 8026436:	6823      	ldr	r3, [r4, #0]
 8026438:	6922      	ldr	r2, [r4, #16]
 802643a:	f003 0306 	and.w	r3, r3, #6
 802643e:	2b04      	cmp	r3, #4
 8026440:	bf02      	ittt	eq
 8026442:	68e5      	ldreq	r5, [r4, #12]
 8026444:	6833      	ldreq	r3, [r6, #0]
 8026446:	1aed      	subeq	r5, r5, r3
 8026448:	68a3      	ldr	r3, [r4, #8]
 802644a:	bf0c      	ite	eq
 802644c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8026450:	2500      	movne	r5, #0
 8026452:	4293      	cmp	r3, r2
 8026454:	bfc4      	itt	gt
 8026456:	1a9b      	subgt	r3, r3, r2
 8026458:	18ed      	addgt	r5, r5, r3
 802645a:	2600      	movs	r6, #0
 802645c:	341a      	adds	r4, #26
 802645e:	42b5      	cmp	r5, r6
 8026460:	d11a      	bne.n	8026498 <_printf_common+0xc8>
 8026462:	2000      	movs	r0, #0
 8026464:	e008      	b.n	8026478 <_printf_common+0xa8>
 8026466:	2301      	movs	r3, #1
 8026468:	4652      	mov	r2, sl
 802646a:	4641      	mov	r1, r8
 802646c:	4638      	mov	r0, r7
 802646e:	47c8      	blx	r9
 8026470:	3001      	adds	r0, #1
 8026472:	d103      	bne.n	802647c <_printf_common+0xac>
 8026474:	f04f 30ff 	mov.w	r0, #4294967295
 8026478:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802647c:	3501      	adds	r5, #1
 802647e:	e7c6      	b.n	802640e <_printf_common+0x3e>
 8026480:	18e1      	adds	r1, r4, r3
 8026482:	1c5a      	adds	r2, r3, #1
 8026484:	2030      	movs	r0, #48	@ 0x30
 8026486:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 802648a:	4422      	add	r2, r4
 802648c:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8026490:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8026494:	3302      	adds	r3, #2
 8026496:	e7c7      	b.n	8026428 <_printf_common+0x58>
 8026498:	2301      	movs	r3, #1
 802649a:	4622      	mov	r2, r4
 802649c:	4641      	mov	r1, r8
 802649e:	4638      	mov	r0, r7
 80264a0:	47c8      	blx	r9
 80264a2:	3001      	adds	r0, #1
 80264a4:	d0e6      	beq.n	8026474 <_printf_common+0xa4>
 80264a6:	3601      	adds	r6, #1
 80264a8:	e7d9      	b.n	802645e <_printf_common+0x8e>
	...

080264ac <_printf_i>:
 80264ac:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80264b0:	7e0f      	ldrb	r7, [r1, #24]
 80264b2:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80264b4:	2f78      	cmp	r7, #120	@ 0x78
 80264b6:	4691      	mov	r9, r2
 80264b8:	4680      	mov	r8, r0
 80264ba:	460c      	mov	r4, r1
 80264bc:	469a      	mov	sl, r3
 80264be:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80264c2:	d807      	bhi.n	80264d4 <_printf_i+0x28>
 80264c4:	2f62      	cmp	r7, #98	@ 0x62
 80264c6:	d80a      	bhi.n	80264de <_printf_i+0x32>
 80264c8:	2f00      	cmp	r7, #0
 80264ca:	f000 80d2 	beq.w	8026672 <_printf_i+0x1c6>
 80264ce:	2f58      	cmp	r7, #88	@ 0x58
 80264d0:	f000 80b9 	beq.w	8026646 <_printf_i+0x19a>
 80264d4:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80264d8:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80264dc:	e03a      	b.n	8026554 <_printf_i+0xa8>
 80264de:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80264e2:	2b15      	cmp	r3, #21
 80264e4:	d8f6      	bhi.n	80264d4 <_printf_i+0x28>
 80264e6:	a101      	add	r1, pc, #4	@ (adr r1, 80264ec <_printf_i+0x40>)
 80264e8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80264ec:	08026545 	.word	0x08026545
 80264f0:	08026559 	.word	0x08026559
 80264f4:	080264d5 	.word	0x080264d5
 80264f8:	080264d5 	.word	0x080264d5
 80264fc:	080264d5 	.word	0x080264d5
 8026500:	080264d5 	.word	0x080264d5
 8026504:	08026559 	.word	0x08026559
 8026508:	080264d5 	.word	0x080264d5
 802650c:	080264d5 	.word	0x080264d5
 8026510:	080264d5 	.word	0x080264d5
 8026514:	080264d5 	.word	0x080264d5
 8026518:	08026659 	.word	0x08026659
 802651c:	08026583 	.word	0x08026583
 8026520:	08026613 	.word	0x08026613
 8026524:	080264d5 	.word	0x080264d5
 8026528:	080264d5 	.word	0x080264d5
 802652c:	0802667b 	.word	0x0802667b
 8026530:	080264d5 	.word	0x080264d5
 8026534:	08026583 	.word	0x08026583
 8026538:	080264d5 	.word	0x080264d5
 802653c:	080264d5 	.word	0x080264d5
 8026540:	0802661b 	.word	0x0802661b
 8026544:	6833      	ldr	r3, [r6, #0]
 8026546:	1d1a      	adds	r2, r3, #4
 8026548:	681b      	ldr	r3, [r3, #0]
 802654a:	6032      	str	r2, [r6, #0]
 802654c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8026550:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8026554:	2301      	movs	r3, #1
 8026556:	e09d      	b.n	8026694 <_printf_i+0x1e8>
 8026558:	6833      	ldr	r3, [r6, #0]
 802655a:	6820      	ldr	r0, [r4, #0]
 802655c:	1d19      	adds	r1, r3, #4
 802655e:	6031      	str	r1, [r6, #0]
 8026560:	0606      	lsls	r6, r0, #24
 8026562:	d501      	bpl.n	8026568 <_printf_i+0xbc>
 8026564:	681d      	ldr	r5, [r3, #0]
 8026566:	e003      	b.n	8026570 <_printf_i+0xc4>
 8026568:	0645      	lsls	r5, r0, #25
 802656a:	d5fb      	bpl.n	8026564 <_printf_i+0xb8>
 802656c:	f9b3 5000 	ldrsh.w	r5, [r3]
 8026570:	2d00      	cmp	r5, #0
 8026572:	da03      	bge.n	802657c <_printf_i+0xd0>
 8026574:	232d      	movs	r3, #45	@ 0x2d
 8026576:	426d      	negs	r5, r5
 8026578:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 802657c:	4859      	ldr	r0, [pc, #356]	@ (80266e4 <_printf_i+0x238>)
 802657e:	230a      	movs	r3, #10
 8026580:	e011      	b.n	80265a6 <_printf_i+0xfa>
 8026582:	6821      	ldr	r1, [r4, #0]
 8026584:	6833      	ldr	r3, [r6, #0]
 8026586:	0608      	lsls	r0, r1, #24
 8026588:	f853 5b04 	ldr.w	r5, [r3], #4
 802658c:	d402      	bmi.n	8026594 <_printf_i+0xe8>
 802658e:	0649      	lsls	r1, r1, #25
 8026590:	bf48      	it	mi
 8026592:	b2ad      	uxthmi	r5, r5
 8026594:	2f6f      	cmp	r7, #111	@ 0x6f
 8026596:	4853      	ldr	r0, [pc, #332]	@ (80266e4 <_printf_i+0x238>)
 8026598:	6033      	str	r3, [r6, #0]
 802659a:	bf14      	ite	ne
 802659c:	230a      	movne	r3, #10
 802659e:	2308      	moveq	r3, #8
 80265a0:	2100      	movs	r1, #0
 80265a2:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80265a6:	6866      	ldr	r6, [r4, #4]
 80265a8:	60a6      	str	r6, [r4, #8]
 80265aa:	2e00      	cmp	r6, #0
 80265ac:	bfa2      	ittt	ge
 80265ae:	6821      	ldrge	r1, [r4, #0]
 80265b0:	f021 0104 	bicge.w	r1, r1, #4
 80265b4:	6021      	strge	r1, [r4, #0]
 80265b6:	b90d      	cbnz	r5, 80265bc <_printf_i+0x110>
 80265b8:	2e00      	cmp	r6, #0
 80265ba:	d04b      	beq.n	8026654 <_printf_i+0x1a8>
 80265bc:	4616      	mov	r6, r2
 80265be:	fbb5 f1f3 	udiv	r1, r5, r3
 80265c2:	fb03 5711 	mls	r7, r3, r1, r5
 80265c6:	5dc7      	ldrb	r7, [r0, r7]
 80265c8:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80265cc:	462f      	mov	r7, r5
 80265ce:	42bb      	cmp	r3, r7
 80265d0:	460d      	mov	r5, r1
 80265d2:	d9f4      	bls.n	80265be <_printf_i+0x112>
 80265d4:	2b08      	cmp	r3, #8
 80265d6:	d10b      	bne.n	80265f0 <_printf_i+0x144>
 80265d8:	6823      	ldr	r3, [r4, #0]
 80265da:	07df      	lsls	r7, r3, #31
 80265dc:	d508      	bpl.n	80265f0 <_printf_i+0x144>
 80265de:	6923      	ldr	r3, [r4, #16]
 80265e0:	6861      	ldr	r1, [r4, #4]
 80265e2:	4299      	cmp	r1, r3
 80265e4:	bfde      	ittt	le
 80265e6:	2330      	movle	r3, #48	@ 0x30
 80265e8:	f806 3c01 	strble.w	r3, [r6, #-1]
 80265ec:	f106 36ff 	addle.w	r6, r6, #4294967295
 80265f0:	1b92      	subs	r2, r2, r6
 80265f2:	6122      	str	r2, [r4, #16]
 80265f4:	f8cd a000 	str.w	sl, [sp]
 80265f8:	464b      	mov	r3, r9
 80265fa:	aa03      	add	r2, sp, #12
 80265fc:	4621      	mov	r1, r4
 80265fe:	4640      	mov	r0, r8
 8026600:	f7ff fee6 	bl	80263d0 <_printf_common>
 8026604:	3001      	adds	r0, #1
 8026606:	d14a      	bne.n	802669e <_printf_i+0x1f2>
 8026608:	f04f 30ff 	mov.w	r0, #4294967295
 802660c:	b004      	add	sp, #16
 802660e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026612:	6823      	ldr	r3, [r4, #0]
 8026614:	f043 0320 	orr.w	r3, r3, #32
 8026618:	6023      	str	r3, [r4, #0]
 802661a:	4833      	ldr	r0, [pc, #204]	@ (80266e8 <_printf_i+0x23c>)
 802661c:	2778      	movs	r7, #120	@ 0x78
 802661e:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8026622:	6823      	ldr	r3, [r4, #0]
 8026624:	6831      	ldr	r1, [r6, #0]
 8026626:	061f      	lsls	r7, r3, #24
 8026628:	f851 5b04 	ldr.w	r5, [r1], #4
 802662c:	d402      	bmi.n	8026634 <_printf_i+0x188>
 802662e:	065f      	lsls	r7, r3, #25
 8026630:	bf48      	it	mi
 8026632:	b2ad      	uxthmi	r5, r5
 8026634:	6031      	str	r1, [r6, #0]
 8026636:	07d9      	lsls	r1, r3, #31
 8026638:	bf44      	itt	mi
 802663a:	f043 0320 	orrmi.w	r3, r3, #32
 802663e:	6023      	strmi	r3, [r4, #0]
 8026640:	b11d      	cbz	r5, 802664a <_printf_i+0x19e>
 8026642:	2310      	movs	r3, #16
 8026644:	e7ac      	b.n	80265a0 <_printf_i+0xf4>
 8026646:	4827      	ldr	r0, [pc, #156]	@ (80266e4 <_printf_i+0x238>)
 8026648:	e7e9      	b.n	802661e <_printf_i+0x172>
 802664a:	6823      	ldr	r3, [r4, #0]
 802664c:	f023 0320 	bic.w	r3, r3, #32
 8026650:	6023      	str	r3, [r4, #0]
 8026652:	e7f6      	b.n	8026642 <_printf_i+0x196>
 8026654:	4616      	mov	r6, r2
 8026656:	e7bd      	b.n	80265d4 <_printf_i+0x128>
 8026658:	6833      	ldr	r3, [r6, #0]
 802665a:	6825      	ldr	r5, [r4, #0]
 802665c:	6961      	ldr	r1, [r4, #20]
 802665e:	1d18      	adds	r0, r3, #4
 8026660:	6030      	str	r0, [r6, #0]
 8026662:	062e      	lsls	r6, r5, #24
 8026664:	681b      	ldr	r3, [r3, #0]
 8026666:	d501      	bpl.n	802666c <_printf_i+0x1c0>
 8026668:	6019      	str	r1, [r3, #0]
 802666a:	e002      	b.n	8026672 <_printf_i+0x1c6>
 802666c:	0668      	lsls	r0, r5, #25
 802666e:	d5fb      	bpl.n	8026668 <_printf_i+0x1bc>
 8026670:	8019      	strh	r1, [r3, #0]
 8026672:	2300      	movs	r3, #0
 8026674:	6123      	str	r3, [r4, #16]
 8026676:	4616      	mov	r6, r2
 8026678:	e7bc      	b.n	80265f4 <_printf_i+0x148>
 802667a:	6833      	ldr	r3, [r6, #0]
 802667c:	1d1a      	adds	r2, r3, #4
 802667e:	6032      	str	r2, [r6, #0]
 8026680:	681e      	ldr	r6, [r3, #0]
 8026682:	6862      	ldr	r2, [r4, #4]
 8026684:	2100      	movs	r1, #0
 8026686:	4630      	mov	r0, r6
 8026688:	f7d9 fe42 	bl	8000310 <memchr>
 802668c:	b108      	cbz	r0, 8026692 <_printf_i+0x1e6>
 802668e:	1b80      	subs	r0, r0, r6
 8026690:	6060      	str	r0, [r4, #4]
 8026692:	6863      	ldr	r3, [r4, #4]
 8026694:	6123      	str	r3, [r4, #16]
 8026696:	2300      	movs	r3, #0
 8026698:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 802669c:	e7aa      	b.n	80265f4 <_printf_i+0x148>
 802669e:	6923      	ldr	r3, [r4, #16]
 80266a0:	4632      	mov	r2, r6
 80266a2:	4649      	mov	r1, r9
 80266a4:	4640      	mov	r0, r8
 80266a6:	47d0      	blx	sl
 80266a8:	3001      	adds	r0, #1
 80266aa:	d0ad      	beq.n	8026608 <_printf_i+0x15c>
 80266ac:	6823      	ldr	r3, [r4, #0]
 80266ae:	079b      	lsls	r3, r3, #30
 80266b0:	d413      	bmi.n	80266da <_printf_i+0x22e>
 80266b2:	68e0      	ldr	r0, [r4, #12]
 80266b4:	9b03      	ldr	r3, [sp, #12]
 80266b6:	4298      	cmp	r0, r3
 80266b8:	bfb8      	it	lt
 80266ba:	4618      	movlt	r0, r3
 80266bc:	e7a6      	b.n	802660c <_printf_i+0x160>
 80266be:	2301      	movs	r3, #1
 80266c0:	4632      	mov	r2, r6
 80266c2:	4649      	mov	r1, r9
 80266c4:	4640      	mov	r0, r8
 80266c6:	47d0      	blx	sl
 80266c8:	3001      	adds	r0, #1
 80266ca:	d09d      	beq.n	8026608 <_printf_i+0x15c>
 80266cc:	3501      	adds	r5, #1
 80266ce:	68e3      	ldr	r3, [r4, #12]
 80266d0:	9903      	ldr	r1, [sp, #12]
 80266d2:	1a5b      	subs	r3, r3, r1
 80266d4:	42ab      	cmp	r3, r5
 80266d6:	dcf2      	bgt.n	80266be <_printf_i+0x212>
 80266d8:	e7eb      	b.n	80266b2 <_printf_i+0x206>
 80266da:	2500      	movs	r5, #0
 80266dc:	f104 0619 	add.w	r6, r4, #25
 80266e0:	e7f5      	b.n	80266ce <_printf_i+0x222>
 80266e2:	bf00      	nop
 80266e4:	08028c0d 	.word	0x08028c0d
 80266e8:	08028c1e 	.word	0x08028c1e

080266ec <__sflush_r>:
 80266ec:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 80266f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80266f4:	0716      	lsls	r6, r2, #28
 80266f6:	4605      	mov	r5, r0
 80266f8:	460c      	mov	r4, r1
 80266fa:	d454      	bmi.n	80267a6 <__sflush_r+0xba>
 80266fc:	684b      	ldr	r3, [r1, #4]
 80266fe:	2b00      	cmp	r3, #0
 8026700:	dc02      	bgt.n	8026708 <__sflush_r+0x1c>
 8026702:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8026704:	2b00      	cmp	r3, #0
 8026706:	dd48      	ble.n	802679a <__sflush_r+0xae>
 8026708:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 802670a:	2e00      	cmp	r6, #0
 802670c:	d045      	beq.n	802679a <__sflush_r+0xae>
 802670e:	2300      	movs	r3, #0
 8026710:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8026714:	682f      	ldr	r7, [r5, #0]
 8026716:	6a21      	ldr	r1, [r4, #32]
 8026718:	602b      	str	r3, [r5, #0]
 802671a:	d030      	beq.n	802677e <__sflush_r+0x92>
 802671c:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 802671e:	89a3      	ldrh	r3, [r4, #12]
 8026720:	0759      	lsls	r1, r3, #29
 8026722:	d505      	bpl.n	8026730 <__sflush_r+0x44>
 8026724:	6863      	ldr	r3, [r4, #4]
 8026726:	1ad2      	subs	r2, r2, r3
 8026728:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 802672a:	b10b      	cbz	r3, 8026730 <__sflush_r+0x44>
 802672c:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 802672e:	1ad2      	subs	r2, r2, r3
 8026730:	2300      	movs	r3, #0
 8026732:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8026734:	6a21      	ldr	r1, [r4, #32]
 8026736:	4628      	mov	r0, r5
 8026738:	47b0      	blx	r6
 802673a:	1c43      	adds	r3, r0, #1
 802673c:	89a3      	ldrh	r3, [r4, #12]
 802673e:	d106      	bne.n	802674e <__sflush_r+0x62>
 8026740:	6829      	ldr	r1, [r5, #0]
 8026742:	291d      	cmp	r1, #29
 8026744:	d82b      	bhi.n	802679e <__sflush_r+0xb2>
 8026746:	4a2a      	ldr	r2, [pc, #168]	@ (80267f0 <__sflush_r+0x104>)
 8026748:	410a      	asrs	r2, r1
 802674a:	07d6      	lsls	r6, r2, #31
 802674c:	d427      	bmi.n	802679e <__sflush_r+0xb2>
 802674e:	2200      	movs	r2, #0
 8026750:	6062      	str	r2, [r4, #4]
 8026752:	04d9      	lsls	r1, r3, #19
 8026754:	6922      	ldr	r2, [r4, #16]
 8026756:	6022      	str	r2, [r4, #0]
 8026758:	d504      	bpl.n	8026764 <__sflush_r+0x78>
 802675a:	1c42      	adds	r2, r0, #1
 802675c:	d101      	bne.n	8026762 <__sflush_r+0x76>
 802675e:	682b      	ldr	r3, [r5, #0]
 8026760:	b903      	cbnz	r3, 8026764 <__sflush_r+0x78>
 8026762:	6560      	str	r0, [r4, #84]	@ 0x54
 8026764:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8026766:	602f      	str	r7, [r5, #0]
 8026768:	b1b9      	cbz	r1, 802679a <__sflush_r+0xae>
 802676a:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 802676e:	4299      	cmp	r1, r3
 8026770:	d002      	beq.n	8026778 <__sflush_r+0x8c>
 8026772:	4628      	mov	r0, r5
 8026774:	f7ff fca0 	bl	80260b8 <_free_r>
 8026778:	2300      	movs	r3, #0
 802677a:	6363      	str	r3, [r4, #52]	@ 0x34
 802677c:	e00d      	b.n	802679a <__sflush_r+0xae>
 802677e:	2301      	movs	r3, #1
 8026780:	4628      	mov	r0, r5
 8026782:	47b0      	blx	r6
 8026784:	4602      	mov	r2, r0
 8026786:	1c50      	adds	r0, r2, #1
 8026788:	d1c9      	bne.n	802671e <__sflush_r+0x32>
 802678a:	682b      	ldr	r3, [r5, #0]
 802678c:	2b00      	cmp	r3, #0
 802678e:	d0c6      	beq.n	802671e <__sflush_r+0x32>
 8026790:	2b1d      	cmp	r3, #29
 8026792:	d001      	beq.n	8026798 <__sflush_r+0xac>
 8026794:	2b16      	cmp	r3, #22
 8026796:	d11e      	bne.n	80267d6 <__sflush_r+0xea>
 8026798:	602f      	str	r7, [r5, #0]
 802679a:	2000      	movs	r0, #0
 802679c:	e022      	b.n	80267e4 <__sflush_r+0xf8>
 802679e:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80267a2:	b21b      	sxth	r3, r3
 80267a4:	e01b      	b.n	80267de <__sflush_r+0xf2>
 80267a6:	690f      	ldr	r7, [r1, #16]
 80267a8:	2f00      	cmp	r7, #0
 80267aa:	d0f6      	beq.n	802679a <__sflush_r+0xae>
 80267ac:	0793      	lsls	r3, r2, #30
 80267ae:	680e      	ldr	r6, [r1, #0]
 80267b0:	bf08      	it	eq
 80267b2:	694b      	ldreq	r3, [r1, #20]
 80267b4:	600f      	str	r7, [r1, #0]
 80267b6:	bf18      	it	ne
 80267b8:	2300      	movne	r3, #0
 80267ba:	eba6 0807 	sub.w	r8, r6, r7
 80267be:	608b      	str	r3, [r1, #8]
 80267c0:	f1b8 0f00 	cmp.w	r8, #0
 80267c4:	dde9      	ble.n	802679a <__sflush_r+0xae>
 80267c6:	6a21      	ldr	r1, [r4, #32]
 80267c8:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 80267ca:	4643      	mov	r3, r8
 80267cc:	463a      	mov	r2, r7
 80267ce:	4628      	mov	r0, r5
 80267d0:	47b0      	blx	r6
 80267d2:	2800      	cmp	r0, #0
 80267d4:	dc08      	bgt.n	80267e8 <__sflush_r+0xfc>
 80267d6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80267da:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80267de:	81a3      	strh	r3, [r4, #12]
 80267e0:	f04f 30ff 	mov.w	r0, #4294967295
 80267e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80267e8:	4407      	add	r7, r0
 80267ea:	eba8 0800 	sub.w	r8, r8, r0
 80267ee:	e7e7      	b.n	80267c0 <__sflush_r+0xd4>
 80267f0:	dfbffffe 	.word	0xdfbffffe

080267f4 <_fflush_r>:
 80267f4:	b538      	push	{r3, r4, r5, lr}
 80267f6:	690b      	ldr	r3, [r1, #16]
 80267f8:	4605      	mov	r5, r0
 80267fa:	460c      	mov	r4, r1
 80267fc:	b913      	cbnz	r3, 8026804 <_fflush_r+0x10>
 80267fe:	2500      	movs	r5, #0
 8026800:	4628      	mov	r0, r5
 8026802:	bd38      	pop	{r3, r4, r5, pc}
 8026804:	b118      	cbz	r0, 802680e <_fflush_r+0x1a>
 8026806:	6a03      	ldr	r3, [r0, #32]
 8026808:	b90b      	cbnz	r3, 802680e <_fflush_r+0x1a>
 802680a:	f7ff f98b 	bl	8025b24 <__sinit>
 802680e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8026812:	2b00      	cmp	r3, #0
 8026814:	d0f3      	beq.n	80267fe <_fflush_r+0xa>
 8026816:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8026818:	07d0      	lsls	r0, r2, #31
 802681a:	d404      	bmi.n	8026826 <_fflush_r+0x32>
 802681c:	0599      	lsls	r1, r3, #22
 802681e:	d402      	bmi.n	8026826 <_fflush_r+0x32>
 8026820:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8026822:	f7ff fbdc 	bl	8025fde <__retarget_lock_acquire_recursive>
 8026826:	4628      	mov	r0, r5
 8026828:	4621      	mov	r1, r4
 802682a:	f7ff ff5f 	bl	80266ec <__sflush_r>
 802682e:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8026830:	07da      	lsls	r2, r3, #31
 8026832:	4605      	mov	r5, r0
 8026834:	d4e4      	bmi.n	8026800 <_fflush_r+0xc>
 8026836:	89a3      	ldrh	r3, [r4, #12]
 8026838:	059b      	lsls	r3, r3, #22
 802683a:	d4e1      	bmi.n	8026800 <_fflush_r+0xc>
 802683c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 802683e:	f7ff fbcf 	bl	8025fe0 <__retarget_lock_release_recursive>
 8026842:	e7dd      	b.n	8026800 <_fflush_r+0xc>

08026844 <__swhatbuf_r>:
 8026844:	b570      	push	{r4, r5, r6, lr}
 8026846:	460c      	mov	r4, r1
 8026848:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802684c:	2900      	cmp	r1, #0
 802684e:	b096      	sub	sp, #88	@ 0x58
 8026850:	4615      	mov	r5, r2
 8026852:	461e      	mov	r6, r3
 8026854:	da0d      	bge.n	8026872 <__swhatbuf_r+0x2e>
 8026856:	89a3      	ldrh	r3, [r4, #12]
 8026858:	f013 0f80 	tst.w	r3, #128	@ 0x80
 802685c:	f04f 0100 	mov.w	r1, #0
 8026860:	bf14      	ite	ne
 8026862:	2340      	movne	r3, #64	@ 0x40
 8026864:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8026868:	2000      	movs	r0, #0
 802686a:	6031      	str	r1, [r6, #0]
 802686c:	602b      	str	r3, [r5, #0]
 802686e:	b016      	add	sp, #88	@ 0x58
 8026870:	bd70      	pop	{r4, r5, r6, pc}
 8026872:	466a      	mov	r2, sp
 8026874:	f000 f848 	bl	8026908 <_fstat_r>
 8026878:	2800      	cmp	r0, #0
 802687a:	dbec      	blt.n	8026856 <__swhatbuf_r+0x12>
 802687c:	9901      	ldr	r1, [sp, #4]
 802687e:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8026882:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8026886:	4259      	negs	r1, r3
 8026888:	4159      	adcs	r1, r3
 802688a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 802688e:	e7eb      	b.n	8026868 <__swhatbuf_r+0x24>

08026890 <__smakebuf_r>:
 8026890:	898b      	ldrh	r3, [r1, #12]
 8026892:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8026894:	079d      	lsls	r5, r3, #30
 8026896:	4606      	mov	r6, r0
 8026898:	460c      	mov	r4, r1
 802689a:	d507      	bpl.n	80268ac <__smakebuf_r+0x1c>
 802689c:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80268a0:	6023      	str	r3, [r4, #0]
 80268a2:	6123      	str	r3, [r4, #16]
 80268a4:	2301      	movs	r3, #1
 80268a6:	6163      	str	r3, [r4, #20]
 80268a8:	b003      	add	sp, #12
 80268aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80268ac:	ab01      	add	r3, sp, #4
 80268ae:	466a      	mov	r2, sp
 80268b0:	f7ff ffc8 	bl	8026844 <__swhatbuf_r>
 80268b4:	9f00      	ldr	r7, [sp, #0]
 80268b6:	4605      	mov	r5, r0
 80268b8:	4639      	mov	r1, r7
 80268ba:	4630      	mov	r0, r6
 80268bc:	f7ff f80c 	bl	80258d8 <_malloc_r>
 80268c0:	b948      	cbnz	r0, 80268d6 <__smakebuf_r+0x46>
 80268c2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80268c6:	059a      	lsls	r2, r3, #22
 80268c8:	d4ee      	bmi.n	80268a8 <__smakebuf_r+0x18>
 80268ca:	f023 0303 	bic.w	r3, r3, #3
 80268ce:	f043 0302 	orr.w	r3, r3, #2
 80268d2:	81a3      	strh	r3, [r4, #12]
 80268d4:	e7e2      	b.n	802689c <__smakebuf_r+0xc>
 80268d6:	89a3      	ldrh	r3, [r4, #12]
 80268d8:	6020      	str	r0, [r4, #0]
 80268da:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80268de:	81a3      	strh	r3, [r4, #12]
 80268e0:	9b01      	ldr	r3, [sp, #4]
 80268e2:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80268e6:	b15b      	cbz	r3, 8026900 <__smakebuf_r+0x70>
 80268e8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80268ec:	4630      	mov	r0, r6
 80268ee:	f000 f81d 	bl	802692c <_isatty_r>
 80268f2:	b128      	cbz	r0, 8026900 <__smakebuf_r+0x70>
 80268f4:	89a3      	ldrh	r3, [r4, #12]
 80268f6:	f023 0303 	bic.w	r3, r3, #3
 80268fa:	f043 0301 	orr.w	r3, r3, #1
 80268fe:	81a3      	strh	r3, [r4, #12]
 8026900:	89a3      	ldrh	r3, [r4, #12]
 8026902:	431d      	orrs	r5, r3
 8026904:	81a5      	strh	r5, [r4, #12]
 8026906:	e7cf      	b.n	80268a8 <__smakebuf_r+0x18>

08026908 <_fstat_r>:
 8026908:	b538      	push	{r3, r4, r5, lr}
 802690a:	4d07      	ldr	r5, [pc, #28]	@ (8026928 <_fstat_r+0x20>)
 802690c:	2300      	movs	r3, #0
 802690e:	4604      	mov	r4, r0
 8026910:	4608      	mov	r0, r1
 8026912:	4611      	mov	r1, r2
 8026914:	602b      	str	r3, [r5, #0]
 8026916:	f7db f821 	bl	800195c <_fstat>
 802691a:	1c43      	adds	r3, r0, #1
 802691c:	d102      	bne.n	8026924 <_fstat_r+0x1c>
 802691e:	682b      	ldr	r3, [r5, #0]
 8026920:	b103      	cbz	r3, 8026924 <_fstat_r+0x1c>
 8026922:	6023      	str	r3, [r4, #0]
 8026924:	bd38      	pop	{r3, r4, r5, pc}
 8026926:	bf00      	nop
 8026928:	240025c8 	.word	0x240025c8

0802692c <_isatty_r>:
 802692c:	b538      	push	{r3, r4, r5, lr}
 802692e:	4d06      	ldr	r5, [pc, #24]	@ (8026948 <_isatty_r+0x1c>)
 8026930:	2300      	movs	r3, #0
 8026932:	4604      	mov	r4, r0
 8026934:	4608      	mov	r0, r1
 8026936:	602b      	str	r3, [r5, #0]
 8026938:	f7db f820 	bl	800197c <_isatty>
 802693c:	1c43      	adds	r3, r0, #1
 802693e:	d102      	bne.n	8026946 <_isatty_r+0x1a>
 8026940:	682b      	ldr	r3, [r5, #0]
 8026942:	b103      	cbz	r3, 8026946 <_isatty_r+0x1a>
 8026944:	6023      	str	r3, [r4, #0]
 8026946:	bd38      	pop	{r3, r4, r5, pc}
 8026948:	240025c8 	.word	0x240025c8

0802694c <_init>:
 802694c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802694e:	bf00      	nop
 8026950:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8026952:	bc08      	pop	{r3}
 8026954:	469e      	mov	lr, r3
 8026956:	4770      	bx	lr

08026958 <_fini>:
 8026958:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802695a:	bf00      	nop
 802695c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802695e:	bc08      	pop	{r3}
 8026960:	469e      	mov	lr, r3
 8026962:	4770      	bx	lr
